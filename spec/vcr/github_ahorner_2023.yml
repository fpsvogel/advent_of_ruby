---
http_interactions:
- request:
    method: get
    uri: https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:33 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"a41ceafc07632f1576b2051f2a569b64a7cbaf01"
      last-modified:
      - Tue, 24 Dec 2024 17:59:46 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4985'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '15'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D2C3:D2AA4:15725D:2B7722:67D638F4
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"01.rb","path":"lib/2023/01.rb","sha":"097a77650c5f625bd271957d2cdf0d8325d3396b","size":798,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/01.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/01.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/097a77650c5f625bd271957d2cdf0d8325d3396b","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/01.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/01.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/097a77650c5f625bd271957d2cdf0d8325d3396b","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/01.rb"}},{"name":"02.rb","path":"lib/2023/02.rb","sha":"e2754428f979c988df4a6ba2cdde8690b6aad1f4","size":969,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/02.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/02.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/e2754428f979c988df4a6ba2cdde8690b6aad1f4","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/02.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/02.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/e2754428f979c988df4a6ba2cdde8690b6aad1f4","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/02.rb"}},{"name":"03.rb","path":"lib/2023/03.rb","sha":"cb2ca933a4dbd54a7351c5cd3a640f916fb36927","size":1426,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/03.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/03.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/cb2ca933a4dbd54a7351c5cd3a640f916fb36927","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/03.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/03.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/cb2ca933a4dbd54a7351c5cd3a640f916fb36927","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/03.rb"}},{"name":"04.rb","path":"lib/2023/04.rb","sha":"776c77bb235bb990185f0f65b9b724eabacdd46b","size":888,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/04.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/04.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/776c77bb235bb990185f0f65b9b724eabacdd46b","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/04.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/04.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/776c77bb235bb990185f0f65b9b724eabacdd46b","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/04.rb"}},{"name":"05.rb","path":"lib/2023/05.rb","sha":"6c2f99c568285c97a7ba1c77051bef4ffe3f3932","size":2305,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/05.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/05.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/6c2f99c568285c97a7ba1c77051bef4ffe3f3932","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/05.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/05.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/6c2f99c568285c97a7ba1c77051bef4ffe3f3932","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/05.rb"}},{"name":"06.rb","path":"lib/2023/06.rb","sha":"9be7446bdc85bb9bf9061acb6d6c55ece76e2dbe","size":682,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/06.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/06.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/9be7446bdc85bb9bf9061acb6d6c55ece76e2dbe","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/06.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/06.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/9be7446bdc85bb9bf9061acb6d6c55ece76e2dbe","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/06.rb"}},{"name":"07.rb","path":"lib/2023/07.rb","sha":"4064d73cd8d10ace4efa01aae2d3172a2d9fb9bc","size":944,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/07.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/07.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/4064d73cd8d10ace4efa01aae2d3172a2d9fb9bc","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/07.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/07.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/4064d73cd8d10ace4efa01aae2d3172a2d9fb9bc","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/07.rb"}},{"name":"08.rb","path":"lib/2023/08.rb","sha":"32b3e52b2d341cdeec3e8828ffe7cd7f0ba3a002","size":1170,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/08.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/08.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/32b3e52b2d341cdeec3e8828ffe7cd7f0ba3a002","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/08.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/08.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/32b3e52b2d341cdeec3e8828ffe7cd7f0ba3a002","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/08.rb"}},{"name":"09.rb","path":"lib/2023/09.rb","sha":"aedcd730751217b5296cb1b1d5cc4f8a44432f46","size":688,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/09.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/09.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/aedcd730751217b5296cb1b1d5cc4f8a44432f46","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/09.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/09.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/aedcd730751217b5296cb1b1d5cc4f8a44432f46","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/09.rb"}},{"name":"10.rb","path":"lib/2023/10.rb","sha":"f85dda9220e51dd9c7091a1aa95421fbbe9d0db0","size":2034,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/10.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/10.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/f85dda9220e51dd9c7091a1aa95421fbbe9d0db0","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/10.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/10.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/f85dda9220e51dd9c7091a1aa95421fbbe9d0db0","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/10.rb"}},{"name":"11.rb","path":"lib/2023/11.rb","sha":"944ddf4e37ea41a13956829fd540d95a95f5afd9","size":1142,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/11.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/11.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/944ddf4e37ea41a13956829fd540d95a95f5afd9","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/11.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/11.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/944ddf4e37ea41a13956829fd540d95a95f5afd9","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/11.rb"}},{"name":"12.rb","path":"lib/2023/12.rb","sha":"cfbd7e4a95024c4f8440578e9fede27d9d52c425","size":1587,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/12.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/12.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/cfbd7e4a95024c4f8440578e9fede27d9d52c425","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/12.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/12.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/cfbd7e4a95024c4f8440578e9fede27d9d52c425","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/12.rb"}},{"name":"13.rb","path":"lib/2023/13.rb","sha":"189aef0def2bd2189d79d8236f59d2fa98966fa4","size":1130,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/13.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/13.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/189aef0def2bd2189d79d8236f59d2fa98966fa4","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/13.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/13.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/189aef0def2bd2189d79d8236f59d2fa98966fa4","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/13.rb"}},{"name":"14.rb","path":"lib/2023/14.rb","sha":"27ef3e61d56c62f13335b95ee4e047d7d5ae9406","size":1764,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/14.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/14.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/27ef3e61d56c62f13335b95ee4e047d7d5ae9406","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/14.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/14.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/27ef3e61d56c62f13335b95ee4e047d7d5ae9406","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/14.rb"}},{"name":"15.rb","path":"lib/2023/15.rb","sha":"c6117f606074c78dc2f5b1c3c3cf178ccb0345fd","size":993,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/15.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/15.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/c6117f606074c78dc2f5b1c3c3cf178ccb0345fd","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/15.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/15.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/c6117f606074c78dc2f5b1c3c3cf178ccb0345fd","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/15.rb"}},{"name":"16.rb","path":"lib/2023/16.rb","sha":"7054b146809d3fc96dda74e253e46005db632a29","size":2060,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/16.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/16.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/7054b146809d3fc96dda74e253e46005db632a29","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/16.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/16.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/7054b146809d3fc96dda74e253e46005db632a29","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/16.rb"}},{"name":"17.rb","path":"lib/2023/17.rb","sha":"c12405c4a6b751752b24af3a604c68b9171b7129","size":2280,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/17.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/17.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/c12405c4a6b751752b24af3a604c68b9171b7129","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/17.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/17.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/c12405c4a6b751752b24af3a604c68b9171b7129","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/17.rb"}},{"name":"18.rb","path":"lib/2023/18.rb","sha":"53eaa31d5d57724666b3fcbf2f012a3a677dee8b","size":1245,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/18.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/18.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/53eaa31d5d57724666b3fcbf2f012a3a677dee8b","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/18.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/18.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/53eaa31d5d57724666b3fcbf2f012a3a677dee8b","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/18.rb"}},{"name":"19.rb","path":"lib/2023/19.rb","sha":"eae52517baae2d4ce5f604e50e750bc03474d379","size":2607,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/19.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/19.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/eae52517baae2d4ce5f604e50e750bc03474d379","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/19.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/19.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/eae52517baae2d4ce5f604e50e750bc03474d379","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/19.rb"}},{"name":"20.rb","path":"lib/2023/20.rb","sha":"72855eabe27382a6871158a6525da7890bcf4593","size":2629,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/20.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/20.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/72855eabe27382a6871158a6525da7890bcf4593","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/20.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/20.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/72855eabe27382a6871158a6525da7890bcf4593","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/20.rb"}},{"name":"21.rb","path":"lib/2023/21.rb","sha":"bef083fbb475d4258c357465a4030525c726bbbb","size":4014,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/21.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/21.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/bef083fbb475d4258c357465a4030525c726bbbb","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/21.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/21.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/bef083fbb475d4258c357465a4030525c726bbbb","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/21.rb"}},{"name":"22.rb","path":"lib/2023/22.rb","sha":"ed0faa90bfccd67e4eabe7b08ae582f26bdffe65","size":1934,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/22.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/22.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/ed0faa90bfccd67e4eabe7b08ae582f26bdffe65","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/22.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/22.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/ed0faa90bfccd67e4eabe7b08ae582f26bdffe65","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/22.rb"}},{"name":"23.rb","path":"lib/2023/23.rb","sha":"bd3ce8bb2490d16be06a21d758c7054a2951c47c","size":1915,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/23.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/23.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/bd3ce8bb2490d16be06a21d758c7054a2951c47c","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/23.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/23.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/bd3ce8bb2490d16be06a21d758c7054a2951c47c","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/23.rb"}},{"name":"24.rb","path":"lib/2023/24.rb","sha":"f1a19119fce14200b53b3398cd3e317f76def961","size":1753,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/24.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/24.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/f1a19119fce14200b53b3398cd3e317f76def961","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/24.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/24.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/f1a19119fce14200b53b3398cd3e317f76def961","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/24.rb"}},{"name":"25.rb","path":"lib/2023/25.rb","sha":"5d4f62a572b7ff82c21cfa8e1f3a9d7ba6bb424a","size":653,"url":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/25.rb?ref=main","html_url":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/25.rb","git_url":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/5d4f62a572b7ff82c21cfa8e1f3a9d7ba6bb424a","download_url":"https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/25.rb","type":"file","_links":{"self":"https://api.github.com/repos/ahorner/advent-of-code/contents/lib/2023/25.rb?ref=main","git":"https://api.github.com/repos/ahorner/advent-of-code/git/blobs/5d4f62a572b7ff82c21cfa8e1f3a9d7ba6bb424a","html":"https://github.com/ahorner/advent-of-code/blob/main/lib/2023/25.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:33 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/01.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '404'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"13dcdd901789711455be30e2c656134fde4f79a6b8b6f88cd51bd457bd9df2ab"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - DB1A:1B9798:3BB2E6:4B8402:67D62E48
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:33 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200162-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092533.271821,VS0,VE71
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - eb6c49b5a8535047a914ef911c638fcc490f7134
      expires:
      - Sun, 16 Mar 2025 02:40:33 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        LINES = INPUT.split("\n").freeze

        sum = LINES.reduce(0) do |total, line|
          numbers = line.scan(/\d/)
          value = numbers.first.to_i * 10 + numbers.last.to_i

          total + value
        end

        solve!("The sum of calibration values is:", sum)

        REPLACEMENTS = {
          "one" => 1,
          "two" => 2,
          "three" => 3,
          "four" => 4,
          "five" => 5,
          "six" => 6,
          "seven" => 7,
          "eight" => 8,
          "nine" => 9
        }.freeze

        sum = LINES.reduce(0) do |total, line|
          numbers = line.chars.each_with_index.each_with_object([]) do |(c, i), digits|
            translated = line[i..].sub(Regexp.union(REPLACEMENTS.keys), REPLACEMENTS)
            digits << translated[0] if translated[0] =~ /\d/
          end.map(&:to_i)

          value = numbers.first.to_i * 10 + numbers.last.to_i
          total + value
        end

        solve!("The sum of calibration values with word digits is:", sum)
  recorded_at: Sun, 16 Mar 2025 02:35:33 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/02.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '527'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"2a4ffdf8193ac42fa4809d617a21bcf7c1d51da01e457137a3bac58e64d8003a"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - EA52:310678:3AAF81:4A7FF4:67D62E4B
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:33 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100170-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092533.483824,VS0,VE68
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 29096c4a1705ec99afda8d994c5addc3d062c96d
      expires:
      - Sun, 16 Mar 2025 02:40:33 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        GAME_MATCHER = /\AGame (?<id>\d+): (?<hands>.+)\z/
        HOLD_MATCHER = /(?<count>\d+) (?<color>\w+)/
        COLORS = %i[red green blue].freeze

        Game = Data.define(:id, :hands) do
          def possible?(test)
            hands.all? do |hand|
              COLORS.all? { |color| hand[color] <= test[color] }
            end
          end

          def power
            COLORS.map { |color| hands.map { |h| h[color] }.max }.reduce(:*)
          end
        end

        GAMES = INPUT.split("\n").map do |line|
          data = line.match(GAME_MATCHER)
          id = data[:id].to_i
          hands = data[:hands].split(";").map do |hand|
            hand.split(",").each_with_object(Hash.new(0)) do |item, colors|
              hold = item.match(HOLD_MATCHER)
              colors[hold[:color].to_sym] = hold[:count].to_i
            end
          end

          Game.new(id:, hands:)
        end.freeze

        TEST = {red: 12, green: 13, blue: 14}.freeze
        possibilities = GAMES.select { |g| g.possible?(TEST) }

        solve!("The sum of possible game IDs is:", possibilities.sum(&:id))
        solve!("The total set power across games is:", GAMES.sum(&:power))
  recorded_at: Sun, 16 Mar 2025 02:35:33 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/03.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '669'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"354f3dceb156417fcbedd9151313a1ec49fda92dc994622e02bd96528a991a79"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 44FB:27B56C:3C4D91:4C2BF7:67D62E46
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:33 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100046-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092534.685519,VS0,VE53
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 44fc3974ada27f9862b4706b6d3bf6f75d1c1711
      expires:
      - Sun, 16 Mar 2025 02:40:33 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        EMPTY = "."
        SCHEMATIC = INPUT.split("\n").each_with_index.each_with_object(Hash.new(EMPTY)) do |(line, y), grid|
          line.chars.each_with_index { |c, x| grid[[x, y]] = c }
        end

        def part_at?(schematic, y, xs)
          edges = [
            [xs[0] - 1, y - 1],
            [xs[0] - 1, y],
            [xs[0] - 1, y + 1],
            [xs[-1] + 1, y - 1],
            [xs[-1] + 1, y],
            [xs[-1] + 1, y + 1]
          ]

          edges.any? { |coord| schematic[coord] != EMPTY } ||
            xs.any? { |x| schematic[[x, y - 1]] != EMPTY || schematic[[x, y + 1]] != EMPTY }
        end

        Part = Data.define(:id, :row, :columns) do
          def adjacent_to?((x, y))
            (row - 1 <= y && row + 1 >= y) &&
              (columns[0] - 1 <= x && columns[-1] + 1 >= x)
          end
        end

        HEIGHT = SCHEMATIC.keys.map(&:last).max
        WIDTH = SCHEMATIC.keys.map(&:first).max

        PARTS = (0..HEIGHT).flat_map do |y|
          (0..WIDTH)
            .chunk { |x| SCHEMATIC[[x, y]].match?(/\d/) }
            .select(&:first)
            .map(&:last)
            .select { |columns| part_at?(SCHEMATIC, y, columns) }
            .map do |columns|
              Part.new(
                id: columns.map { |x| SCHEMATIC[[x, y]] }.join.to_i,
                row: y,
                columns:
              )
            end
        end

        solve!("The sum of part IDs is:", PARTS.sum(&:id))

        GEAR = "*"
        gears = SCHEMATIC.select { |coord, c| c == GEAR && PARTS.count { |p| p.adjacent_to?(coord) } == 2 }.map(&:first)
        ratios = gears.map { |coord| PARTS.select { |p| p.adjacent_to?(coord) }.map(&:id).reduce(:*) }

        solve!("The sum of gear ratios is:", ratios.sum)
  recorded_at: Sun, 16 Mar 2025 02:35:33 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/04.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '455'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"f49fbe99b71e367116b2cab9093393f519d863683d16173d7bd46e057c9daf08"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - F3B6:2FD5B2:3EB628:4E8604:67D62E4A
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:33 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200070-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092534.875156,VS0,VE77
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 6d840acf00d10250812890052739279a415f42cf
      expires:
      - Sun, 16 Mar 2025 02:40:33 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        Card = Data.define(:id, :winning_numbers, :personal_numbers) do
          def matches
            (winning_numbers & personal_numbers).count
          end

          def score
            (matches > 0) ? (matches - 1).times.reduce(1) { |i, _| i * 2 } : 0
          end
        end

        CARDS = INPUT.split("\n").map do |line|
          identifier, numbers = line.split(":")
          winning, personal = numbers.split("|")

          Card.new(
            id: identifier.scan(/\d+/).first.to_i,
            winning_numbers: winning.scan(/\d+/).map(&:to_i),
            personal_numbers: personal.scan(/\d+/).map(&:to_i)
          )
        end

        solve!("The total point value of your cards is:", CARDS.sum(&:score))

        def winnings(cards)
          counts = cards.to_h { |card| [card.id, 1] }
          cards.each do |card|
            card.matches.times do |i|
              counts[card.id + i + 1] += counts[card.id]
            end
          end

          counts.values.sum
        end

        solve!("The total number of cards in the pile (including copies) is:", winnings(CARDS))
  recorded_at: Sun, 16 Mar 2025 02:35:33 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/05.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '853'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"2107cf61f500351dfa699015d522bae3b13bbaebb1c7e9fe1cb00fc5d27b6cdb"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 8CDA:B7FC7:28CC88:3528B8:67D62E49
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:34 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200026-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092534.101729,VS0,VE46
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 13785cc7279887908b107692e8c2b82464621626
      expires:
      - Sun, 16 Mar 2025 02:40:34 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        Range = Data.define(:source_start, :destination_start, :length) do
          def source?(n)
            source_start <= n && source_end >= n
          end

          def destination_for(n)
            destination_start + (n - source_start)
          end

          def source_end
            source_start + length
          end

          def destination_range(source_range)
            destination_for(source_range.begin)...destination_for(source_range.end)
          end
        end

        Map = Data.define(:source, :destination, :ranges) do
          def destination_for(n)
            range = ranges.detect { |r| r.source?(n) }
            range ? range.destination_for(n) : n
          end

          def destination_ranges(sources)
            ranges.each_with_object([]) do |range, mapped|
              sources = sources.each_with_object([]) do |source, unmapped|
                before = source.begin...[source.end, range.source_start].min
                overlap = [source.begin, range.source_start].max...[range.source_end, source.end].min
                after = [range.source_end, source.begin].max...source.end

                unmapped << before if before.end > before.begin
                unmapped << after if after.end > after.begin
                mapped << range.destination_range(overlap) if overlap.end > overlap.begin
              end
            end + sources
          end
        end

        seeds, *maps = INPUT.split("\n\n")

        DESCRIPTION_MATCHER = /\A(?<source>\w+)-to-(?<destination>\w+) map:\z/
        SEEDS = seeds.scan(/\d+/).map(&:to_i)
        MAPS = maps.each_with_object({}) do |map, translations|
          description, *values = map.split("\n")
          info = description.match(DESCRIPTION_MATCHER)
          ranges = values.map do |line|
            d, s, l = line.split(" ").map(&:to_i)
            Range.new(
              source_start: s,
              destination_start: d,
              length: l
            )
          end

          translations[info[:source]] = Map.new(
            source: info[:source],
            destination: info[:destination],
            ranges:
          )
        end

        def locations_for(sources)
          type = "seed"

          loop do
            map = MAPS[type]
            type = map.destination
            sources = yield map, sources

            break sources if type == "location"
          end
        end

        locations = locations_for(SEEDS) { |map, sources| sources.map { |s| map.destination_for(s) } }
        solve!("The minimum seed location is:", locations.min)

        seeds = SEEDS.each_slice(2).map { |(a, b)| a...(a + b) }
        ranges = locations_for(seeds) { |map, sources| map.destination_ranges(sources) }

        solve!("The minimum location for seed ranges is:", ranges.map(&:begin).min)
  recorded_at: Sun, 16 Mar 2025 02:35:34 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/06.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '325'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"0c6c343d58416dc86f83b045db0c2c01060a9a95967a5f47085a48eb44775dfa"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 70B2:3239E4:3DBF5F:4D8DBF:67D62E4B
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:34 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200076-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092534.292017,VS0,VE73
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 2f2d4e944b5a642e272d622954e52c6ed6fc4bc9
      expires:
      - Sun, 16 Mar 2025 02:40:34 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        times, distances = INPUT.split("\n")
        TIMES = times.scan(/\d+/).map(&:to_i)
        RECORDS = distances.scan(/\d+/).map(&:to_i)

        def distance_for(t, time)
          (time - t) * t
        end

        def strategies_for(time, distance)
          min = distance / time
          min += 1 until distance_for(min, time) > distance

          max = time
          max -= 1 until distance_for(max, time) > distance

          max - min + 1
        end

        strategies = TIMES.zip(RECORDS).map { |time, distance| strategies_for(time, distance) }
        solve!("The product of winning strategies is:", strategies.reduce(:*))

        TIME = times.gsub(/\D+/, "").to_i
        RECORD = distances.gsub(/\D+/, "").to_i

        solve!("The long-run winning strategy count is:", strategies_for(TIME, RECORD))
  recorded_at: Sun, 16 Mar 2025 02:35:34 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/07.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '460'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"fd5df309d718c690f597c612cb7a00850a12bae8df8b732ea0fcfa39636326ce"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - DF00:2963AC:37CCEC:479887:67D62E4B
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:34 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200161-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092535.511483,VS0,VE40
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 3ceb5a219bd7cf3759a9f4075ec6e54973687922
      expires:
      - Sun, 16 Mar 2025 02:40:34 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        CARD_SCORES = %w[2 3 4 5 6 7 8 9 T J Q K A].each_with_index.to_h.freeze
        JOKER_SCORES = %w[J 2 3 4 5 6 7 8 9 T Q K A].each_with_index.to_h.freeze

        Hand = Data.define(:cards) do
          def score
            base_score = cards.tally.values.sort.reverse
            [base_score] + cards.map { |c| CARD_SCORES[c] }
          end

          def joker_score
            counts = cards.tally
            jokers = counts.delete("J") || 0

            base_score = counts.values.sort.reverse
            base_score = [0] if base_score.empty?
            base_score[0] += jokers

            [base_score] + cards.map { |c| JOKER_SCORES[c] }
          end
        end

        BIDS = INPUT.split("\n").to_h do |line|
          hand, bid = line.split(" ")
          [Hand.new(cards: hand.chars), bid.to_i]
        end
        HANDS = BIDS.keys

        def winnings(hands, bids)
          hands.map.with_index { |h, i| bids[h] * (i + 1) }.sum
        end

        solve!("The total winnings are:", winnings(HANDS.sort_by(&:score), BIDS))
        solve!("The total winnings with jokers are:", winnings(HANDS.sort_by(&:joker_score), BIDS))
  recorded_at: Sun, 16 Mar 2025 02:35:34 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/08.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '539'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"09c2e12e6026a41dafd210994087f5334a32f704700352ed48a80c0681ee4ac5"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - E652:1E9244:391854:48EB98:67D62E4B
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:34 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100101-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092535.688118,VS0,VE100
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - bb38d51caf38587f8ad97fbce98aa32866b2eb93
      expires:
      - Sun, 16 Mar 2025 02:40:34 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        instructions, nodes = INPUT.split("\n\n")

        NODE_MATCHER = /\A(?<id>.+) = \((?<left>.+), (?<right>.+)\)\z/
        INSTRUCTIONS = instructions.chars
        NETWORK = nodes.split("\n").to_h do |node|
          data = node.match(NODE_MATCHER)

          [data[:id], [data[:left], data[:right]]]
        end

        steps = 0
        node = "AAA"

        steps = loop do
          step = (INSTRUCTIONS[steps % INSTRUCTIONS.count] == "L") ? 0 : 1
          node = NETWORK[node][step]
          steps += 1

          break steps if node == "ZZZ"
        end

        solve!("The number of steps required to escape is:", steps)

        steps = 0
        nodes = NETWORK.keys.select { |node| node.end_with?("A") }
        checkpoints = Array.new(nodes.length)
        periods = Array.new(nodes.length)

        steps = loop do
          step = (INSTRUCTIONS[steps % INSTRUCTIONS.count] == "L") ? 0 : 1
          nodes = nodes.map { |node| NETWORK[node][step] }
          steps += 1

          nodes.each_with_index do |n, i|
            next unless periods[i].nil? && n.end_with?("Z")

            if checkpoints[i] && periods[i].nil?
              periods[i] = steps - checkpoints[i]
            elsif checkpoints[i].nil?
              checkpoints[i] = steps
            end
          end

          break periods.reduce(&:lcm) if periods.all?
        end

        solve!("The number of steps required for a ghost to escape is:", steps)
  recorded_at: Sun, 16 Mar 2025 02:35:34 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/09.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '345'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"90fd4c78da3274b7fa16c03b028e105962a51559391c3d98eced0713816305e5"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - A5AC:2E569F:37BE70:478EBF:67D62E4C
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:34 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200063-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092535.933786,VS0,VE46
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f29dbdf92c90ddea5f8514f15c9e3e97aa872420
      expires:
      - Sun, 16 Mar 2025 02:40:34 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        REPORT = INPUT.split("\n").map { |line| line.split(" ").map(&:to_i) }

        def decompose(history)
          sequences = [history]

          loop do
            break sequences if history.all? { |d| d == 0 }

            history = history.each_cons(2).each_with_object([]) { |(a, b), gaps| gaps << b - a }
            sequences << history
          end
        end

        def extrapolate_next(history)
          decompose(history).sum(&:last)
        end

        def extrapolate_previous(history)
          decompose(history).reverse.reduce(0) do |gap, sequence|
            sequence.first - gap
          end
        end

        solve!("The sum of next values is:", REPORT.sum { |history| extrapolate_next(history) })
        solve!("The sum of previous values is:", REPORT.sum { |history| extrapolate_previous(history) })
  recorded_at: Sun, 16 Mar 2025 02:35:34 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/10.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '810'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"1b209f3d198717c2a35cfcef81b8c62f902876cbbc7e1ad95dd0e2dc0c730012"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 2626:2F0C0A:36EAFF:46BEB9:67D62E4D
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:35 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100051-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092535.116548,VS0,VE61
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 487d01c16cd9a486a931d4132de44ca53f4ab0d7
      expires:
      - Sun, 16 Mar 2025 02:40:35 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        NORTH_ANGLES = %w[7 | F].freeze
        ANGLES = {
          "|" => ->(x, y) { [[x, y - 1], [x, y + 1]] },
          "-" => ->(x, y) { [[x - 1, y], [x + 1, y]] },
          "L" => ->(x, y) { [[x, y - 1], [x + 1, y]] },
          "J" => ->(x, y) { [[x, y - 1], [x - 1, y]] },
          "7" => ->(x, y) { [[x, y + 1], [x - 1, y]] },
          "F" => ->(x, y) { [[x, y + 1], [x + 1, y]] }
        }.freeze

        Pipe = Data.define(:angle, :connections) do
          def connects_to?(position)
            connections.include?(position)
          end

          def north?
            NORTH_ANGLES.include?(angle)
          end
        end

        starting_position = []
        MAP = INPUT.split("\n").each_with_index.each_with_object({}) do |(line, y), map|
          line.chars.each_with_index do |angle, x|
            if angle == "S"
              starting_position = [x, y]
              next
            end

            next unless ANGLES.key?(angle)

            connections = ANGLES[angle].call(x, y)
            map[[x, y]] = Pipe.new(angle:, connections:)
          end
        end

        connections = MAP.select { |_, pipe| pipe.connects_to?(starting_position) }.map(&:first)
        angle = ANGLES.keys.detect do |a|
          connected = ANGLES[a].call(*starting_position)
          connected.all? { |conn| connections.include?(conn) }
        end

        MAP[starting_position] = Pipe.new(angle:, connections:)

        def distance_map(map, start_at)
          distances = {}
          tests = [[start_at, 0]]

          loop do
            break distances if tests.empty?

            test, steps = tests.shift
            next if distances.key?(test)

            tests += map[test].connections.map { |conn| [conn, steps + 1] }
            distances[test] = steps
          end
        end

        distances = distance_map(MAP, starting_position)
        solve!("The step count to the furthest pipe is:", distances.values.max)

        def enclosed_tiles(loop_map)
          xmin, xmax = loop_map.keys.map(&:first).minmax
          ymin, ymax = loop_map.keys.map(&:last).minmax
          enclosed = 0

          (ymin..ymax).each do |y|
            north = 0
            (xmin..xmax).each do |x|
              if !loop_map[[x, y]]
                enclosed += 1 if north.odd?
              elsif loop_map[[x, y]].north?
                north += 1
              end
            end
          end

          enclosed
        end

        solve!("The number of enclosed tiles is:", enclosed_tiles(MAP.slice(*distances.keys)))
  recorded_at: Sun, 16 Mar 2025 02:35:35 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/11.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '536'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"6bb142ad225ceb2d5eab2f206f003a83ea3c8cf079d829a7fdf94c9554dc8668"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - E024:255875:2F058E:3B771F:67D62E4D
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:35 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100175-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092535.321252,VS0,VE52
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 198da1a78104ebc36fe4cde0846ca3b2efe52395
      expires:
      - Sun, 16 Mar 2025 02:40:35 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        require "set"

        UNIVERSE = INPUT.split("\n").flat_map.with_index do |line, y|
          line.chars.filter_map.with_index { |c, x| [x, y] if c == "#" }
        end

        def expand(universe, factor: 2)
          xmax = universe.map(&:first).max
          ymax = universe.map(&:last).max

          expanded_columns = Set.new((0..xmax).reject { |x| universe.any? { |p| p[0] == x } })
          expanded_rows = Set.new((0..ymax).reject { |y| universe.any? { |p| p[1] == y } })

          i = 0
          j = 0

          (0..ymax).each_with_object([]) do |y, planets|
            (0..xmax).each do |x|
              planets << [i, j] if universe.any? { |p| p == [x, y] }
              i += expanded_columns.include?(x) ? factor : 1
            end

            i = 0
            j += expanded_rows.include?(y) ? factor : 1
          end
        end

        def distance(a, b)
          (a[1] - b[1]).abs + (a[0] - b[0]).abs
        end

        def pair_total(universe)
          universe.combination(2).sum { |a, b| distance(a, b) }
        end

        universe = expand(UNIVERSE, factor: 2)
        solve!("The sum of lengths between pairs of planets is:", pair_total(universe))

        EXPANSION_FACTOR ||= 1000000
        universe = expand(UNIVERSE, factor: EXPANSION_FACTOR)
        solve!("The sum of lengths between pairs of OLD planets is:", pair_total(universe))
  recorded_at: Sun, 16 Mar 2025 02:35:35 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/12.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '660'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"29b9d9916a2b177042995b04ee2017485a3e5a2ef0bbd6c08f4b5f7e46c94eeb"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - E0BB:A7AEE:27A3F8:3400D2:67D62E4B
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:35 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100155-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092536.510082,VS0,VE53
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - db7695f5111fc452fd24c454aaee24852420c7ba
      expires:
      - Sun, 16 Mar 2025 02:40:35 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        class Spring
          FOLDING_FACTOR = 5
          CONDITIONS = {
            operational: ".",
            damaged: "#",
            unknown: "?"
          }.freeze

          def initialize(record:, damage:)
            @record = record
            @damage = damage
            @arrangements = {}
          end

          def unfold(factor: FOLDING_FACTOR)
            record = ([@record] * factor).join(CONDITIONS[:unknown])
            damage = @damage * factor

            Spring.new(record:, damage:)
          end

          def arrangements(pattern = @record, splits = @damage)
            return @arrangements[[pattern, splits]] if @arrangements.key?([pattern, splits])
            return ((pattern&.chars || []).all? { |p| p != CONDITIONS[:damaged] }) ? 1 : 0 if splits.empty?

            damaged, *rest = splits
            after = rest.sum + rest.size

            @arrangements[[pattern, splits]] = (pattern.size - after - damaged + 1).times.sum do |before|
              candidate = [CONDITIONS[:operational]] * before + [CONDITIONS[:damaged]] * damaged + [CONDITIONS[:operational]]
              consistent?(candidate, pattern) ? arrangements(pattern[candidate.length..], rest) : 0
            end
          end

          def consistent?(candidate, pattern = @record)
            candidate.each_with_index.all? { |c, i| i > (pattern.length - 1) || pattern[i] == c || pattern[i] == CONDITIONS[:unknown] }
          end
        end

        SPRINGS = INPUT.split("\n").map do |line|
          record, damage = line.split(" ")
          damage = damage.split(",").map(&:to_i)

          Spring.new(record:, damage:)
        end

        total = SPRINGS.sum(&:arrangements)
        solve!("The count of possible spring arrangements is:", total)

        total = SPRINGS.map(&:unfold).sum(&:arrangements)
        solve!("The count of possible unfolded spring arrangements is:", total)
  recorded_at: Sun, 16 Mar 2025 02:35:35 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/13.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '477'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"f9477f25254af9187b1fb1edbfc9d6507619906244a6a833ed040bc08e59b656"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - AAFE:C4828:267458:32D323:67D62E4B
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:35 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200135-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092536.703826,VS0,VE49
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 8a9bccf3583c0e992ad173270b8a84085a62fc9a
      expires:
      - Sun, 16 Mar 2025 02:40:35 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        class Pattern
          def initialize(pattern)
            @horizontal = pattern.split("\n")
            @vertical = pattern.split("\n").map(&:chars).transpose.map(&:join)
          end

          def reflection_score(smudges: 0)
            vertical = (0...@vertical.length).detect { |i| reflects_at?(@vertical, i, smudges:) }
            return vertical + 1 if vertical

            horizontal = (0...@horizontal.length).detect { |i| reflects_at?(@horizontal, i, smudges:) }
            (horizontal + 1) * 100
          end

          def reflects_at?(pattern, row, smudges: 0)
            return false if row == pattern.length - 1

            i = 0
            delta = 0

            loop do
              if pattern[row - i] != pattern[row + i + 1]
                delta += pattern[0].length.times.count { |c| pattern[row - i][c] != pattern[row + i + 1][c] }
                break false if delta > smudges
              end

              i += 1

              break delta == smudges if row - i < 0 || row + i + 1 >= pattern.length
            end
          end
        end

        PATTERNS = INPUT.split("\n\n").map { |pattern| Pattern.new(pattern) }
        solve!("The mirror line score is:", PATTERNS.sum(&:reflection_score))
        solve!("The smudge-free mirror line score is:", PATTERNS.sum { |p| p.reflection_score(smudges: 1) })
  recorded_at: Sun, 16 Mar 2025 02:35:35 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/14.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '735'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"690cf654ede49326b0d2ecb3f7be72e2447ab4810602b39408229197fb088a4c"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - DF3B:665E0:D6ED7:12BA32:67D62E4D
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:35 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200120-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092536.895619,VS0,VE45
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 75195c4bd3390240e294df061ce3ea8c2c8afba5
      expires:
      - Sun, 16 Mar 2025 02:40:35 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        CUBE = "#"
        ROUND = "O"
        EMPTY = "."

        PLATFORM = INPUT.split("\n").map do |(line, y), platform|
          line.chars.map.with_index do |c, x|
            (c == EMPTY) ? nil : c
          end
        end

        def slide_sequence(width, height, direction)
          case direction
          when [0, -1] then (0...height).each { |y| (0...width).each { |x| yield [x, y] } }
          when [0, 1] then (height - 1).downto(0).each { |y| (0...width).each { |x| yield [x, y] } }
          when [-1, 0] then (0...width).each { |x| (0...height).each { |y| yield [x, y] } }
          when [1, 0] then (width - 1).downto(0).each { |x| (0...height).each { |y| yield [x, y] } }
          end
        end

        def tilt(platform, (dx, dy))
          tilted = platform.map(&:dup)
          width = platform.size
          height = platform[0].size

          slide_sequence(width, height, [dx, dy]) do |x, y|
            next unless platform[y][x] == ROUND

            i = x
            j = y

            loop do
              break if i + dx < 0 || j + dy < 0 || i + dx >= width || j + dy >= height || tilted[j + dy][i + dx]

              tilted[j + dy][i + dx] = tilted[j][i]
              tilted[j][i] = nil

              i += dx
              j += dy
            end
          end

          tilted
        end

        def load_for(platform)
          ymax = platform.size
          platform.each_with_index.sum do |row, y|
            row.sum do |r|
              (r == ROUND) ? (ymax - y) : 0
            end
          end
        end

        solve!("The load after tilting north is:", load_for(tilt(PLATFORM, [0, -1])))

        CYCLES = 1000000000

        platform = PLATFORM
        cache = {}
        cycles = 0

        final = loop do
          platform = [[0, -1], [-1, 0], [0, 1], [1, 0]].reduce(platform) { |p, d| tilt(p, d) }
          cycles += 1

          if cache[platform]
            loops_at = cache[platform]
            loop_size = cycles - loops_at
            cycle = (CYCLES - loops_at) % loop_size

            break cache.key(loops_at + cycle)
          end

          cache[platform] = cycles
        end

        solve!("The load after #{CYCLES} cycles is:", load_for(final))
  recorded_at: Sun, 16 Mar 2025 02:35:35 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/15.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '505'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"244ffe8b8dd4033904aece2dc63e99a14622e1c1aa4832c6c2f82b3251bf3abb"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - B6E3:2C95E5:3B538F:4B2337:67D62E4E
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:36 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200081-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092536.085593,VS0,VE67
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 2ae4649c8feeb04cc084940dfbea3c263a697730
      expires:
      - Sun, 16 Mar 2025 02:40:36 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        Step = Data.define(:step) do
          def verification
            hash_for(step)
          end

          def label
            step.scan(/\w+/).first
          end

          def box
            hash_for(label)
          end

          def insert?
            step.include?("=")
          end

          def focal_length
            return nil unless insert?

            step.scan(/\w+/).last.to_i
          end

          def hash_for(string)
            string.chars.reduce(0) do |value, c|
              value += c.ord
              (value * 17) % 256
            end
          end
        end

        SEQUENCE = INPUT.split(",").map { |step| Step.new(step) }.freeze

        solve!("The verification code for initialization is:", SEQUENCE.sum(&:verification))

        boxes = SEQUENCE.each_with_object(Hash.new { |h, k| h[k] = {} }) do |step, boxes|
          if step.insert?
            boxes[step.box][step.label] = step.focal_length
          else
            boxes[step.box].delete(step.label)
          end
        end

        power = boxes.sum do |box, lenses|
          lenses.each_with_index.sum { |(_, focal_length), index| (box + 1) * (index + 1) * focal_length }
        end

        solve!("The focusing power of the lenses after initialization is:", power)
  recorded_at: Sun, 16 Mar 2025 02:35:36 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/16.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '752'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"7c07b8b10fe9df4b3158328e6da8634e269037a05537ca419685246b59b4f892"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - E0E3:2D5530:3BF8D6:4BCDDD:67D62E4D
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:36 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100027-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092536.294081,VS0,VE67
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 2e874be318003b548407551beae697ed2a89d4a8
      expires:
      - Sun, 16 Mar 2025 02:40:36 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        DIRECTIONS = {
          n: [0, -1],
          e: [1, 0],
          s: [0, 1],
          w: [-1, 0]
        }.freeze

        Beam = Data.define(:direction) do
          def move((x, y))
            dx, dy = DIRECTIONS[direction]
            [x + dx, y + dy]
          end

          def bounce(mirror)
            case [direction, mirror]
            when [:n, "/"], [:s, "\\"] then [Beam.new(:e)]
            when [:n, "\\"], [:s, "/"] then [Beam.new(:w)]
            when [:n, "-"], [:s, "-"] then [Beam.new(:e), Beam.new(:w)]
            when [:e, "/"], [:w, "\\"] then [Beam.new(:n)]
            when [:e, "\\"], [:w, "/"] then [Beam.new(:s)]
            when [:e, "|"], [:w, "|"] then [Beam.new(:n), Beam.new(:s)]
            else
              [self]
            end
          end
        end

        CONTRAPTION = INPUT.split("\n").each_with_index.each_with_object({}) do |(line, y), contraption|
          line.chars.each_with_index do |c, x|
            contraption[[x, y]] = c
          end
        end

        def energy_for(contraption, tile: [-1, 0], beam: Beam.new(:e))
          width = contraption.keys.map(&:first).max
          height = contraption.keys.map(&:last).max

          energized = {}
          seen = {}

          beams = [[tile, beam]]

          loop do
            break if beams.empty?

            position, beam = beams.shift
            next if seen[[position, beam]]

            seen[[position, beam]] = true
            x, y = beam.move(position)

            next if x < 0 || y < 0 || x > width || y > height

            energized[[x, y]] = true
            beams += beam.bounce(contraption[[x, y]]).map { |b| [[x, y], b] }
          end

          energized.count
        end

        solve!("The number of energized tiles is:", energy_for(CONTRAPTION))

        def most_energy(contraption)
          width = contraption.keys.map(&:first).max
          height = contraption.keys.map(&:last).max

          north = (0..width).map { |x| energy_for(contraption, tile: [x, height + 1], beam: Beam.new(:n)) }
          east = (0..height).map { |y| energy_for(contraption, tile: [-1, y], beam: Beam.new(:e)) }
          south = (0..width).map { |x| energy_for(contraption, tile: [x, -1], beam: Beam.new(:s)) }
          west = (0..height).map { |y| energy_for(contraption, tile: [width + 1, y], beam: Beam.new(:w)) }

          [north.max, east.max, south.max, west.max].max
        end

        solve!("The maximum number of energized tiles is:", most_energy(CONTRAPTION))
  recorded_at: Sun, 16 Mar 2025 02:35:36 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/17.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '969'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"f0921f30683058a24a517361a650bcbefba600258873343c4bf9ba1529015a16"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FE95:C4828:2674BC:32D3AD:67D62E4F
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:36 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200155-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092537.571244,VS0,VE49
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f7b8848238d7e8db0d68ac57adb77ec6186dc272
      expires:
      - Sun, 16 Mar 2025 02:40:36 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        require "matrix"
        require "rb_heap/heap"

        class City
          DIRECTIONS = {
            n: Vector[0, -1],
            e: Vector[1, 0],
            s: Vector[0, 1],
            w: Vector[-1, 0]
          }.freeze

          def initialize(map)
            @map = map
          end

          def [](block)
            @map[block]
          end

          def destinations(origin, turns)
            turns.filter_map do |direction|
              destination = origin + DIRECTIONS[direction]
              next unless @map.key?(destination)

              [destination, direction]
            end
          end
        end

        class Crucible
          TURNS = {n: %i[e w], e: %i[n s], s: %i[e w], w: %i[n s]}.freeze

          def initialize(city, min: 1, max: 3)
            @city = city
            @min = min
            @max = max
          end

          def turns_for(path)
            return %i[n e s w] if path.empty?

            direction = path.last

            if path.size >= @min && path.last(@min).all? { |d| d == direction }
              turns = TURNS[direction]
              (path.size >= @max && path.last(@max).all? { |d| d == direction }) ? turns : turns + [direction]
            else
              [direction]
            end
          end

          def heat_loss(from:, to:)
            queue = Heap.new { |a, b| a[0] < b[0] }
            queue << [0, from, []]

            losses = {}

            loop do
              if queue.empty?
                goals = losses.select { |k, _| k[0] == to && k[2] >= @min }
                break goals.map(&:last).min
              end

              loss, block, path = queue.pop
              @city.destinations(block, turns_for(path)).each do |dest, dir|
                new_loss = loss + @city[dest]
                new_path = path + [dir]

                steps = new_path.reverse.index { |d| d != dir }
                key = [dest, dir, steps]

                next if losses.key?(key) && losses[key] <= new_loss

                losses[key] = new_loss
                next if dest == to

                queue << [new_loss, dest, new_path.last(@max)]
              end
            end
          end
        end

        MAP = INPUT.split("\n").each_with_object({}).with_index do |(line, map), y|
          line.chars.each_with_index do |c, x|
            map[Vector[x, y]] = c.to_i
          end
        end.freeze

        START = Vector[0, 0]
        GOAL = MAP.keys.max_by(&:magnitude)

        city = City.new(MAP)
        crucible = Crucible.new(city)
        heat_loss = crucible.heat_loss(from: START, to: GOAL)

        solve!("The minimum heat loss on the trip is:", heat_loss)

        ultra_crucible = Crucible.new(city, min: 4, max: 10)
        heat_loss = ultra_crucible.heat_loss(from: START, to: GOAL)

        solve!("The minimum heat loss for an ultra crucible is:", heat_loss)
  recorded_at: Sun, 16 Mar 2025 02:35:36 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/18.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '612'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"982520d4b657e632f5e9d8587f771c5d8deb0ff3c145a5c6a9bf1f780417b2a8"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 14AE:B7FC7:28CE49:352B16:67D62E4F
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:36 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100179-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092537.759671,VS0,VE44
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 0c2a1f91bede60a165809a50d0a6696c5e1a983c
      expires:
      - Sun, 16 Mar 2025 02:40:36 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        require "matrix"

        DIRECTIONS = {
          U: Vector[0, -1],
          R: Vector[1, 0],
          D: Vector[0, 1],
          L: Vector[-1, 0]
        }.freeze

        CODES = %i[R D L U].freeze

        Dig = Data.define(:direction, :meters, :code) do
          def path
            DIRECTIONS[direction] * meters
          end

          def coded_path
            hex = code.tr("(#)", "")
            meters = hex[0..4].to_i(16)

            DIRECTIONS[CODES[hex[5].to_i]] * meters
          end
        end

        class Lagoon
          def initialize(trench)
            @trench = trench
          end

          def area
            interior = 0
            boundary = 0

            @trench.each_cons(2) do |p, q|
              x, y = p.to_a
              i, j = q.to_a

              interior += x * j - i * y
              boundary += (p - q).magnitude
            end

            (interior.abs / 2 + boundary / 2 + 1).to_i
          end
        end

        DIG_PLAN = INPUT.split("\n").map do |line|
          direction, meters, code = line.split(" ")
          Dig.new(direction: direction.to_sym, meters: meters.to_i, code:)
        end

        def trench_for(plan, use: :path)
          position = Vector[0, 0]
          [position] + plan.map { |plan| position += plan.public_send(use) }
        end

        lagoon = Lagoon.new(trench_for(DIG_PLAN))
        solve!("The total capacity of the lagoon is:", lagoon.area)

        lagoon = Lagoon.new(trench_for(DIG_PLAN, use: :coded_path))
        solve!("The total capacity of the lagoon (using the coded plan) is:", lagoon.area)
  recorded_at: Sun, 16 Mar 2025 02:35:36 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/19.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '994'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"86744d0b241af3c0d8f94b9e7289972ee728ee7574f6ef80c4c0ca0278fa85a9"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 2F72:127271:2AD6DA:37313D:67D62E50
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:36 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100152-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092537.938788,VS0,VE39
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - e49172b45fd05ff83462249b27199a7e8051d825
      expires:
      - Sun, 16 Mar 2025 02:40:36 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        WORKFLOW_MATCHER = /\A(?<name>\w+)\{(?<rules>.+)\}\z/
        RULE_MATCHER = /\A(?<rating>\w)(?<operation><|>)(?<value>\d+):(?<output>\w+)\z/
        RATING_MATCHER = /\A(?<rating>\w)=(?<value>\d+)\z/

        ACCEPTANCE_FLOW = "A"
        REJECTION_FLOW = "R"
        STARTING_FLOW = "in"

        Rule = Data.define(:rating, :operation, :value, :output) do
          def passes?(part)
            (operation == "<") ? part[rating] < value : part[rating] > value
          end

          def partition(ratings)
            passed = ratings.dup
            failed = ratings.dup
            range = ratings[rating]

            passed[rating] = (operation == "<") ? range.begin..(value - 1) : (value + 1)..range.end
            failed[rating] = (operation == "<") ? value..range.end : range.begin..value

            [passed, failed]
          end
        end

        Fallback = Data.define(:output) do
          def passes?(_)
            true
          end
        end

        Workflow = Data.define(:rules) do
          def output(part)
            rules.detect { |rule| rule.passes?(part) }.output
          end
        end

        workflows, parts = INPUT.split("\n\n")

        WORKFLOWS = workflows.split("\n").each_with_object({}) do |line, flows|
          data = WORKFLOW_MATCHER.match(line)
          rules = data[:rules].split(",").map do |rule|
            rule_data = RULE_MATCHER.match(rule)

            if rule_data
              Rule.new(
                rating: rule_data[:rating],
                operation: rule_data[:operation],
                value: rule_data[:value].to_i,
                output: rule_data[:output]
              )
            else
              Fallback.new(output: rule)
            end
          end

          flows[data[:name]] = Workflow.new(rules:)
        end

        PARTS = parts.split("\n").map do |part|
          part.tr("{}", "").split(",").each_with_object({}) do |rating, ratings|
            rating_data = RATING_MATCHER.match(rating)
            ratings[rating_data[:rating]] = rating_data[:value].to_i
          end
        end

        def accepted?(part)
          flow = STARTING_FLOW

          loop do
            flow = WORKFLOWS[flow].output(part)

            break true if flow == ACCEPTANCE_FLOW
            break false if flow == REJECTION_FLOW
          end
        end

        accepted = PARTS.select { |part| accepted?(part) }
        solve!("The sum of acceptable parts' ratings is:", accepted.sum { |part| part.values.sum })

        def valid_combinations(ratings, flow = STARTING_FLOW)
          sizes = ratings.values.map(&:size)

          return 0 if flow == REJECTION_FLOW || sizes.any?(&:zero?)
          return sizes.reduce(:*) if flow == ACCEPTANCE_FLOW

          WORKFLOWS[flow].rules.sum do |rule|
            if rule.is_a?(Fallback)
              valid_combinations(ratings, rule.output)
            else
              passed, ratings = rule.partition(ratings)
              valid_combinations(passed, rule.output)
            end
          end
        end

        RANGES = {"x" => 1..4000, "m" => 1..4000, "a" => 1..4000, "s" => 1..4000}
        solve!("The total number of valid combinations is:", valid_combinations(RANGES))
  recorded_at: Sun, 16 Mar 2025 02:35:36 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/20.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1042'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"e51e5a58f3cf1b9943b311bacb700a57c04a5cd9b30b07f42ba8e408842effbf"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FC8A:2E569F:37C036:479108:67D62E50
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:37 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200103-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092537.117586,VS0,VE95
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 4ceca66781e79322c3827a072d74b3b6b70a991f
      expires:
      - Sun, 16 Mar 2025 02:40:37 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        class Communication
          LOW = 0
          HIGH = 1

          attr_reader :inputs, :outputs, :pulses

          def initialize(outputs)
            @outputs = outputs
            @inputs = []
            @pulses = []
          end

          def register!(input)
            @inputs << input
          end
        end

        class Broadcast < Communication
          def transmit(_input, pulse)
            @pulses << pulse
            pulse
          end
        end

        class FlipFlop < Communication
          def transmit(_input, pulse)
            return if pulse == HIGH

            @active = !@active

            out = @active ? HIGH : LOW
            @pulses << out

            out
          end
        end

        class Conjunction < Communication
          def transmit(input, pulse)
            @last_signals ||= Hash.new(LOW)
            @last_signals[input] = pulse

            out = (inputs.all? { |i| @last_signals[i] == HIGH }) ? LOW : HIGH
            @pulses << out

            out
          end
        end

        MODULE_MATCHER = /\A(?<type>%|&)?(?<name>.+)\z/
        CONFIGURATION = INPUT.split("\n").each_with_object({}) do |line, config|
          label, outputs = line.split(" -> ")

          outputs = outputs.split(", ")
          label_data = MODULE_MATCHER.match(label)

          config[label_data[:name]] =
            case label_data[:type]
            when "&" then Conjunction.new(outputs)
            when "%" then FlipFlop.new(outputs)
            else Broadcast.new(outputs)
            end
        end

        CONFIGURATION.each do |name, comm|
          comm.outputs.each { |output| CONFIGURATION[output]&.register!(name) }
        end

        def broadcast!(configuration)
          transmissions = [[nil, Communication::LOW, "broadcaster"]]
          pulses = [0, 0]

          loop do
            break if transmissions.empty?

            sender, pulse, receiver = transmissions.shift
            pulses[pulse] += 1

            transmitter = configuration[receiver]
            signal = transmitter&.transmit(sender, pulse)
            next unless signal

            transmitter.outputs.each { |output| transmissions << [receiver, signal, output] }
          end

          pulses
        end

        def deep_clone(configuration)
          Marshal.load(Marshal.dump(configuration))
        end

        def press!(configuration, times)
          configuration = deep_clone(configuration)
          pulses = times.times.map { broadcast!(configuration) }
          pulses.reduce { |a, b| a.zip(b).map(&:sum) }.reduce(:*)
        end

        solve!("The product of high and low pulse counts is:", press!(CONFIGURATION, 1000))

        def presses_to(configuration, name, signal)
          configuration = deep_clone(configuration)
          count = 0

          loop do
            count += 1
            broadcast!(configuration)
            break count if configuration[name].pulses.include?(signal)
          end
        end

        RECEIVER = "rx"

        transmitter = CONFIGURATION.values.detect { |comm| comm.outputs.include?(RECEIVER) }
        presses = transmitter.inputs.map { |input| presses_to(CONFIGURATION, input, Communication::HIGH) }.reduce(&:lcm)

        solve!("The minimum number of presses to activate the receiver is:", presses)
  recorded_at: Sun, 16 Mar 2025 02:35:37 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/21.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1494'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"45474a5735f83989d497d56ff319ee665f6ec9690c1cede494edeb0b13c55983"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 746A:17E74B:3F9148:4F64CD:67D62E50
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:37 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100118-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092537.355728,VS0,VE64
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 99c84240817136f9427066298b9d02fd76785074
      expires:
      - Sun, 16 Mar 2025 02:40:37 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        require "matrix"
        require "set"

        class Map
          MOVEMENTS = [Vector[0, -1], Vector[1, 0], Vector[0, 1], Vector[-1, 0]]

          attr_reader :size, :grid

          def initialize
            @grid = {}
            @size = 0
          end

          def start
            @start ||= @grid.key("S")
          end

          def [](coord)
            @grid[coord]
          end

          def []=(coord, value)
            @size = [size, coord[0] + 1].max
            @grid[coord] = value
          end

          def neighbors(coord)
            MOVEMENTS.filter_map do |movement|
              plot = coord + movement
              plot if self[plot] == "." || self[plot] == "S"
            end
          end

          def corners
            [Vector[0, 0], Vector[0, size - 1], Vector[size - 1, 0], Vector[size - 1, size - 1]]
          end

          def edges
            [Vector[start[0], size - 1], Vector[0, start[1]], Vector[start[0], 0], Vector[size - 1, start[1]]]
          end
        end

        MAP = INPUT.split("\n").each_with_index.each_with_object(Map.new) do |(line, y), map|
          line.chars.each_with_index { |c, x| map[Vector[x, y]] = c }
        end

        def step_map(start, map)
          queue = [[start, 0]]
          counts = {}

          loop do
            break counts if queue.empty?
            position, steps = queue.shift

            next if counts.key?(position)
            counts[position] = steps

            map.neighbors(position).each do |plot|
              queue << [plot, steps + 1]
            end
          end
        end

        def reachable_plots(steps, step)
          steps.values.count { |s| s <= step && step % 2 == s % 2 }
        end

        counts = step_map(MAP.start, MAP)

        STEPS ||= 64
        solve!("The number of reachable plots is:", reachable_plots(counts, STEPS))

        # A general solution here doesn't seem likely. This approach uses a bunch of
        # assumptions about the input, including: (1) the number of steps we're checking
        # divides evenly into our map's size, and (2) there are clear paths from the
        # starting point to the edges. Under these assumptions, the input for the puzzle
        # creates a diamond pattern that looks like the below, with a few different
        # plot "tiles" to analyze:
        #
        #                               SA TT SA
        #                            SA LA EE LA SA
        #                         SA LA EE OO EE LA SA
        #                      SA LA EE OO EE OO EE LA SA
        #                      TT EE OO EE OO EE OO EE TT
        #                      SA LA EE OO EE OO EE LA SA
        #                         SA LA EE OO EE LA SA
        #                            SA LA EE LA SA
        #                               SA TT SA
        #
        # OO - An "odd" tile, where the elf has passed through all plots and lands
        #      on an even step number.
        # EE - An "even" tile, where the elf has passed through all plots and lands
        #      on an even step number.
        # LA - A "large angled" tile, where the elf passes through _most_ of the plots
        #      starting at one corner.
        # SA - A "small angled" tile, where the elf passes through _some_ of the plots
        #      starting at one corner.
        # TT - A "tip" tile, where the elf navigates from the center of one side to
        #      all plots reachable within the remaining steps.
        #
        # We compute the number of plots by determining how many tiles of each type
        # will show up in the final grid, and multiplying by the number of plots
        # reached in those tiles.
        def reachable_infinite_plots(map, steps)
          tiles = (steps - map.start[0]) / map.size

          starting_tile = step_map(map.start, map)
          odds = starting_tile.values.count(&:odd?) * ((tiles - 1)**2)
          evens = starting_tile.values.count(&:even?) * (tiles**2)

          large_angle_steps = map.size + map.size / 2 - 1
          small_angle_steps = map.size / 2 - 1
          tip_steps = map.size - 1

          angled_tiles = map.corners.map { |angle| step_map(angle, map) }
          tip_tiles = map.edges.map { |tip| step_map(tip, map) }

          large_angled_plots = angled_tiles.sum { |tile| reachable_plots(tile, large_angle_steps) } * (tiles - 1)
          small_angled_plots = angled_tiles.sum { |tile| reachable_plots(tile, small_angle_steps) } * tiles
          tip_plots = tip_tiles.sum { |tile| reachable_plots(tile, tip_steps) }

          odds + evens + large_angled_plots + small_angled_plots + tip_plots
        end

        INFINITE_STEPS ||= 26501365
        solve!("The number of reachable plots on an infinite grid is:", reachable_infinite_plots(MAP, INFINITE_STEPS))
  recorded_at: Sun, 16 Mar 2025 02:35:37 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/22.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '835'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"7aa30cbb6429b35b7f0f84858736378ee04a325a36a17c90b131edfe15ada8af"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - AEDC:3239E4:3DC156:4D9066:67D62E51
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:37 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200085-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092538.561585,VS0,VE82
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 8c9a2818477396ac19346679fea0a1d7dabe8e9d
      expires:
      - Sun, 16 Mar 2025 02:40:37 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        require "matrix"

        Brick = Data.define(:starts, :ends) do |top|
          def height
            (ends[2] - starts[2]).abs + 1
          end

          def overlaps?(brick)
            brick.xrange.overlap?(xrange) && brick.yrange.overlap?(yrange)
          end

          def xrange
            x1, x2 = [starts[0], ends[0]].minmax
            x1..x2
          end

          def yrange
            y1, y2 = [starts[1], ends[1]].minmax
            y1..y2
          end
        end

        BRICKS = INPUT.split("\n").map do |line|
          starts, ends = line.split("~").map { |coords| Vector[*coords.split(",").map(&:to_i)] }
          Brick.new(starts:, ends:)
        end

        fall_sequence = BRICKS.sort_by { |b| [b.starts[2], b.ends[2]].min }

        STACK = fall_sequence.each_with_object(Hash.new { |h, k| h[k] = [] }) do |brick, stack|
          stop =
            if stack.empty?
              0
            else
              stack.keys.max.downto(0).detect do |z|
                stack[z].any? { |b| b.overlaps?(brick) }
              end || 0
            end

          ((stop + 1)..(stop + brick.height)).each do |z|
            stack[z] << brick
          end
        end

        SUPPORTS = BRICKS.each_with_object(Hash.new { |h, k| h[k] = {below: [], above: []} }) do |brick, supports|
          z = STACK.keys.select { |k| STACK[k].include?(brick) }.max
          STACK[z + 1].each do |b|
            next unless b.overlaps?(brick)

            supports[b][:above] << brick
            supports[brick][:below] << b
          end
        end

        def supported(brick, supports, without: [])
          supports[brick][:below].select { |s| (supports[s][:above] - [brick] - without).empty? }
        end

        disintegratable = BRICKS.count { |brick| supported(brick, SUPPORTS).empty? }
        solve!("The number of disintegratable bricks is:", disintegratable)

        def falls_for(brick, supports)
          supporting = supported(brick, supports)
          return 0 if supporting.empty?

          fallen = supporting
          layer = supporting

          loop do
            break fallen.count if layer.empty?

            layer = layer.flat_map { |b| supported(b, supports, without: fallen) }.uniq
            fallen += layer
          end
        end

        solve!("The sum of potential falling bricks is:", BRICKS.sum { |brick| falls_for(brick, SUPPORTS) })
  recorded_at: Sun, 16 Mar 2025 02:35:37 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/23.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '792'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"4364bf450b1573485ce911af97e21b37203aec483a7af714f3e94cb3123739c5"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 1496:2D5530:3BF9D8:4BCF22:67D62E50
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:37 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200126-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092538.786002,VS0,VE44
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - bb477ddbe4c8e2cd73506a5ee9d3bc0c4c3cf6ad
      expires:
      - Sun, 16 Mar 2025 02:40:37 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        require "matrix"
        require "rb_heap/heap"

        MOVEMENTS = [Vector[0, -1], Vector[1, 0], Vector[0, 1], Vector[-1, 0]]
        MAP = INPUT.split("\n").each_with_index.each_with_object({}) do |(line, y), map|
          line.chars.each_with_index { |c, x| map[Vector[x, y]] = c }
        end

        x1, x2 = MAP.keys.map { |p| p[0] }.minmax
        y1, y2 = MAP.keys.map { |p| p[1] }.minmax

        STARTS = (x1..x2).map { |x| Vector[x, y1] }.detect { |p| MAP[p] == "." }
        ENDS = (x1..x2).map { |x| Vector[x, y2] }.detect { |p| MAP[p] == "." }

        def slope_movements(tile)
          case tile
          when ">" then [Vector[1, 0]]
          when "<" then [Vector[-1, 0]]
          when "^" then [Vector[0, -1]]
          when "v" then [Vector[0, 1]]
          when "." then MOVEMENTS
          end
        end

        def compress(map)
          edges = map.each_with_object({}) do |(position, c), neighbors|
            next if c == "#"

            movements = yield(c)
            neighbors[position] = movements.filter_map do |move|
              coord = position + move
              next if map[coord].nil? || map[coord] == "#"

              [coord, 1]
            end.to_h
          end

          loop do
            coord, neighbors = edges.detect { |coord, connections| connections.size == 2 }
            break if coord.nil?

            a, ca, b, cb = neighbors.flatten
            edges[a].delete(coord)
            edges[b].delete(coord)

            cost = ca + cb

            edges[a][b] = cost
            edges[b][a] = cost

            edges.delete(coord)
          end

          edges
        end

        def longest_path(edges, from:, to:, seen: {from => true}, cost: 0)
          return cost if from == to

          edges[from].filter_map do |neighbor, steps|
            next if seen[neighbor]

            longest_path(
              edges,
              from: neighbor,
              to:,
              seen: seen.merge(neighbor => true),
              cost: cost + steps
            )
          end.max
        end

        edges = compress(MAP) { |t| slope_movements(t) }
        solve!("The longest path to the end is:", longest_path(edges, from: STARTS, to: ENDS))

        edges = compress(MAP) { MOVEMENTS }
        solve!("The longest path to the end without slopes is:", longest_path(edges, from: STARTS, to: ENDS))
  recorded_at: Sun, 16 Mar 2025 02:35:37 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/24.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '844'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"5fafa422ed7d8f9aeeb3dea88bb79f11891befaf0177bf1fa32605d60ed0d60b"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 6B90:1E9244:391A4D:48EE4B:67D62E3F
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:38 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200123-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092538.968403,VS0,VE52
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 2470352797a4d19e29e70357135ebf8f32a284b7
      expires:
      - Sun, 16 Mar 2025 02:40:38 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        require "matrix"
        require "z3"

        Hailstone = Data.define(:position, :velocity) do
          def intersection(other)
            x, y = position.to_a
            dx, dy = velocity.to_a
            ox, oy = other.position.to_a
            odx, ody = other.velocity.to_a

            determinant = ody * dx - odx * dy
            return nil if determinant == 0

            t = (odx * (y - oy) - ody * (x - ox)) / determinant.to_f
            nx = x + t * dx
            ny = y + t * dy

            return nil if (nx - x) * dx < 0 || (nx - ox) * odx < 0

            Vector[nx, ny]
          end
        end

        HAILSTONES = INPUT.split("\n").map do |line|
          position, velocity = line.split(" @ ")

          position = Vector[*position.tr(" ", "").split(",").map(&:to_i)]
          velocity = Vector[*velocity.tr(" ", "").split(",").map(&:to_i)]

          Hailstone.new(position:, velocity:)
        end

        RANGE ||= 200000000000000..400000000000000

        count = HAILSTONES.combination(2).count do |a, b|
          intersection = a.intersection(b)
          next false if intersection.nil?

          RANGE.cover?(intersection[0]) && RANGE.cover?(intersection[1])
        end

        solve!("The number of overlapping trajectories is:", count)

        # I don't love pulling in Z3 here, but this is incredibly non-trivial to solve
        # algorithmically.
        x, y, z, dx, dy, dz = %w[x y z dx dy dz].map { |c| Z3::Int(c) }
        solver = HAILSTONES.first(3).each_with_object(Z3::Solver.new) do |hailstone, solver|
          i, j, k = hailstone.position.to_a
          di, dj, dk = hailstone.velocity.to_a

          time = Z3::Int("t#{i}")
          solver.assert(time > 0)
          solver.assert(x + dx * time == i + di * time)
          solver.assert(y + dy * time == j + dj * time)
          solver.assert(z + dz * time == k + dk * time)
        end

        raise "Not all stones can be hit by a single rock" unless solver.satisfiable?
        solve!("The sum of your rock's coordinates should be:", [x, y, z].sum { |p| solver.model[p].to_i })
  recorded_at: Sun, 16 Mar 2025 02:35:37 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ahorner/advent-of-code/main/lib/2023/25.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '369'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"3a05b8aea6b7ac3f8203c304961b5b1958b6fdf57ae8b8e7fa2c7b3e7ecf59fb"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 4AAB:1E08FD:2C8A92:398CAC:67D633A0
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:38 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200110-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092538.153215,VS0,VE62
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 926f9d00b1c488f4d47c5da2d979cb1a2783df34
      expires:
      - Sun, 16 Mar 2025 02:40:38 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        require "set"

        WIRES = INPUT.split("\n").each_with_object(Hash.new { |h, k| h[k] = Set.new }) do |line, wires|
          component, connections = line.split(": ")
          components = connections.split(" ")

          wires[component] += components
          components.each { |c| wires[c] << component }
        end

        def split(wires)
          remaining = wires.keys.to_set

          loop do
            external = 0
            extract = remaining.max_by { |node| (wires[node].to_set - remaining).size.tap { |c| external += c } }

            break [remaining, wires.keys.to_set - remaining] if external == 3
            remaining.delete(extract)
          end
        end

        a, b = split(WIRES)
        solve!("The product of group sizes is:", a.size * b.size)
  recorded_at: Sun, 16 Mar 2025 02:35:38 GMT
- request:
    method: get
    uri: https://api.github.com/repos/eregon/adventofcode/contents/2023
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:38 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"6cbfca6467379f8b4dc86b801ccbb0512205c5fe"
      last-modified:
      - Sun, 05 Jan 2025 16:25:46 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4984'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '16'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D2DD:2136EC:161E1B:2CD3D6:67D638FA
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":".gitignore","path":"2023/.gitignore","sha":"3e7fbeb036df91ed5169f8dd7ecb14f518066571","size":21,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/.gitignore?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/.gitignore","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/3e7fbeb036df91ed5169f8dd7ecb14f518066571","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/.gitignore","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/.gitignore?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/3e7fbeb036df91ed5169f8dd7ecb14f518066571","html":"https://github.com/eregon/adventofcode/blob/master/2023/.gitignore"}},{"name":"1.txt","path":"2023/1.txt","sha":"c50fa2afc64c3594dee8a09a2f07ef51e708e15b","size":21728,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/1.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/c50fa2afc64c3594dee8a09a2f07ef51e708e15b","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/c50fa2afc64c3594dee8a09a2f07ef51e708e15b","html":"https://github.com/eregon/adventofcode/blob/master/2023/1.txt"}},{"name":"10.txt","path":"2023/10.txt","sha":"0bb36fdfd398278299ffac5351b279b69aa92025","size":19740,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/10.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/0bb36fdfd398278299ffac5351b279b69aa92025","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/0bb36fdfd398278299ffac5351b279b69aa92025","html":"https://github.com/eregon/adventofcode/blob/master/2023/10.txt"}},{"name":"10a.rb","path":"2023/10a.rb","sha":"7938ee30a5afbc6471a625ca13b1d707862bfa3c","size":594,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/10a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/7938ee30a5afbc6471a625ca13b1d707862bfa3c","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/7938ee30a5afbc6471a625ca13b1d707862bfa3c","html":"https://github.com/eregon/adventofcode/blob/master/2023/10a.rb"}},{"name":"10a_golf.rb","path":"2023/10a_golf.rb","sha":"0feda8eaf7b46c0ee2632c0d79caf3237fb574e3","size":300,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/10a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/0feda8eaf7b46c0ee2632c0d79caf3237fb574e3","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/0feda8eaf7b46c0ee2632c0d79caf3237fb574e3","html":"https://github.com/eregon/adventofcode/blob/master/2023/10a_golf.rb"}},{"name":"10a_golf2.rb","path":"2023/10a_golf2.rb","sha":"8165f0440fb1ceb5512a0f98fd201cf876fc789e","size":563,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10a_golf2.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/10a_golf2.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/8165f0440fb1ceb5512a0f98fd201cf876fc789e","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10a_golf2.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10a_golf2.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/8165f0440fb1ceb5512a0f98fd201cf876fc789e","html":"https://github.com/eregon/adventofcode/blob/master/2023/10a_golf2.rb"}},{"name":"10a_golf3.rb","path":"2023/10a_golf3.rb","sha":"ed2e8bee4e93b15a50568ec47d0e889f07e59436","size":273,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10a_golf3.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/10a_golf3.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/ed2e8bee4e93b15a50568ec47d0e889f07e59436","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10a_golf3.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10a_golf3.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/ed2e8bee4e93b15a50568ec47d0e889f07e59436","html":"https://github.com/eregon/adventofcode/blob/master/2023/10a_golf3.rb"}},{"name":"10a_golf4.rb","path":"2023/10a_golf4.rb","sha":"9a35efe617ebc0e6c25f5ce920aaa4d27b99f835","size":256,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10a_golf4.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/10a_golf4.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9a35efe617ebc0e6c25f5ce920aaa4d27b99f835","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10a_golf4.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10a_golf4.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9a35efe617ebc0e6c25f5ce920aaa4d27b99f835","html":"https://github.com/eregon/adventofcode/blob/master/2023/10a_golf4.rb"}},{"name":"10s.txt","path":"2023/10s.txt","sha":"24175309ecd7e3bdcf25866123192d4ba4654b60","size":29,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/10s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/24175309ecd7e3bdcf25866123192d4ba4654b60","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/24175309ecd7e3bdcf25866123192d4ba4654b60","html":"https://github.com/eregon/adventofcode/blob/master/2023/10s.txt"}},{"name":"10s2.txt","path":"2023/10s2.txt","sha":"1ddc98049824087d204f90fddeaa75e31353aaf9","size":29,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10s2.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/10s2.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1ddc98049824087d204f90fddeaa75e31353aaf9","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10s2.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10s2.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1ddc98049824087d204f90fddeaa75e31353aaf9","html":"https://github.com/eregon/adventofcode/blob/master/2023/10s2.txt"}},{"name":"10s3.txt","path":"2023/10s3.txt","sha":"73b3d66bec2795c1453c2a9aa5597c3af5342a67","size":29,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10s3.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/10s3.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/73b3d66bec2795c1453c2a9aa5597c3af5342a67","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10s3.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/10s3.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/73b3d66bec2795c1453c2a9aa5597c3af5342a67","html":"https://github.com/eregon/adventofcode/blob/master/2023/10s3.txt"}},{"name":"11.txt","path":"2023/11.txt","sha":"c26df60664dedb025193e7de27738132db4e2d72","size":19740,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/11.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/11.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/c26df60664dedb025193e7de27738132db4e2d72","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/11.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/11.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/c26df60664dedb025193e7de27738132db4e2d72","html":"https://github.com/eregon/adventofcode/blob/master/2023/11.txt"}},{"name":"11a.rb","path":"2023/11a.rb","sha":"60c16aabf27fa14b647109cc391eadb7de83699a","size":405,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/11a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/11a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/60c16aabf27fa14b647109cc391eadb7de83699a","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/11a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/11a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/60c16aabf27fa14b647109cc391eadb7de83699a","html":"https://github.com/eregon/adventofcode/blob/master/2023/11a.rb"}},{"name":"11a_golf.rb","path":"2023/11a_golf.rb","sha":"04b1f45083c5793213cc7e2efd082e149140080a","size":203,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/11a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/11a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/04b1f45083c5793213cc7e2efd082e149140080a","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/11a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/11a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/04b1f45083c5793213cc7e2efd082e149140080a","html":"https://github.com/eregon/adventofcode/blob/master/2023/11a_golf.rb"}},{"name":"11s.txt","path":"2023/11s.txt","sha":"a0bda53e73058f388e61cf56f30cf1fca201ba40","size":109,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/11s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/11s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a0bda53e73058f388e61cf56f30cf1fca201ba40","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/11s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/11s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a0bda53e73058f388e61cf56f30cf1fca201ba40","html":"https://github.com/eregon/adventofcode/blob/master/2023/11s.txt"}},{"name":"1a.rb","path":"2023/1a.rb","sha":"01fb15c81f0423705b51b1b7adf90ec063c80cec","size":85,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/1a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/01fb15c81f0423705b51b1b7adf90ec063c80cec","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/01fb15c81f0423705b51b1b7adf90ec063c80cec","html":"https://github.com/eregon/adventofcode/blob/master/2023/1a.rb"}},{"name":"1a_golf.rb","path":"2023/1a_golf.rb","sha":"91daae014238490b938dd53c4bcfbb28ef4d4b4c","size":48,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/1a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/91daae014238490b938dd53c4bcfbb28ef4d4b4c","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/91daae014238490b938dd53c4bcfbb28ef4d4b4c","html":"https://github.com/eregon/adventofcode/blob/master/2023/1a_golf.rb"}},{"name":"1b.rb","path":"2023/1b.rb","sha":"2533d8ab4e78f11a81cee6a1e90bc0462abd52aa","size":237,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1b.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/1b.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/2533d8ab4e78f11a81cee6a1e90bc0462abd52aa","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1b.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1b.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/2533d8ab4e78f11a81cee6a1e90bc0462abd52aa","html":"https://github.com/eregon/adventofcode/blob/master/2023/1b.rb"}},{"name":"1b_golf.rb","path":"2023/1b_golf.rb","sha":"6e78aacea7262bd8a6872f01ee73da1ee7e8e6c7","size":146,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1b_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/1b_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/6e78aacea7262bd8a6872f01ee73da1ee7e8e6c7","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1b_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1b_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/6e78aacea7262bd8a6872f01ee73da1ee7e8e6c7","html":"https://github.com/eregon/adventofcode/blob/master/2023/1b_golf.rb"}},{"name":"1b_golf2.rb","path":"2023/1b_golf2.rb","sha":"bb992b02737096fc2bd5337b09886065ead1c686","size":139,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1b_golf2.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/1b_golf2.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/bb992b02737096fc2bd5337b09886065ead1c686","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1b_golf2.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1b_golf2.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/bb992b02737096fc2bd5337b09886065ead1c686","html":"https://github.com/eregon/adventofcode/blob/master/2023/1b_golf2.rb"}},{"name":"1s.txt","path":"2023/1s.txt","sha":"41aa89cf93069ed86678594554ae323cd7a5a92a","size":93,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/1s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/41aa89cf93069ed86678594554ae323cd7a5a92a","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/41aa89cf93069ed86678594554ae323cd7a5a92a","html":"https://github.com/eregon/adventofcode/blob/master/2023/1s.txt"}},{"name":"1t.txt","path":"2023/1t.txt","sha":"4661b08de3e43664bc9028878e26120512831b86","size":24,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1t.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/1t.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/4661b08de3e43664bc9028878e26120512831b86","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1t.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/1t.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/4661b08de3e43664bc9028878e26120512831b86","html":"https://github.com/eregon/adventofcode/blob/master/2023/1t.txt"}},{"name":"2.txt","path":"2023/2.txt","sha":"f6238c63cda1a7ff8b7d5902e47cd5453d5fc6e7","size":10481,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/2.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/2.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/f6238c63cda1a7ff8b7d5902e47cd5453d5fc6e7","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/2.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/2.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/f6238c63cda1a7ff8b7d5902e47cd5453d5fc6e7","html":"https://github.com/eregon/adventofcode/blob/master/2023/2.txt"}},{"name":"2a.rb","path":"2023/2a.rb","sha":"b54f128f76f5d353a33c7bb1e58f6ce2fdfa9cea","size":264,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/2a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/2a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b54f128f76f5d353a33c7bb1e58f6ce2fdfa9cea","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/2a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/2a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b54f128f76f5d353a33c7bb1e58f6ce2fdfa9cea","html":"https://github.com/eregon/adventofcode/blob/master/2023/2a.rb"}},{"name":"2a_golf.rb","path":"2023/2a_golf.rb","sha":"99dba581fc78e5dde110f93a3e341b1fc9821ff6","size":96,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/2a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/2a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/99dba581fc78e5dde110f93a3e341b1fc9821ff6","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/2a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/2a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/99dba581fc78e5dde110f93a3e341b1fc9821ff6","html":"https://github.com/eregon/adventofcode/blob/master/2023/2a_golf.rb"}},{"name":"2b.rb","path":"2023/2b.rb","sha":"46089066da323dd232758a84c3914e173752deb5","size":260,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/2b.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/2b.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/46089066da323dd232758a84c3914e173752deb5","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/2b.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/2b.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/46089066da323dd232758a84c3914e173752deb5","html":"https://github.com/eregon/adventofcode/blob/master/2023/2b.rb"}},{"name":"2s.txt","path":"2023/2s.txt","sha":"1cd7d3319fcdcb73311d80ce1bf26275b5159d55","size":320,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/2s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/2s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1cd7d3319fcdcb73311d80ce1bf26275b5159d55","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/2s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/2s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1cd7d3319fcdcb73311d80ce1bf26275b5159d55","html":"https://github.com/eregon/adventofcode/blob/master/2023/2s.txt"}},{"name":"3.txt","path":"2023/3.txt","sha":"08ecfbe3ca10c02ed9bd41c1ec6517c92fd17d64","size":19740,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/3.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/08ecfbe3ca10c02ed9bd41c1ec6517c92fd17d64","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/08ecfbe3ca10c02ed9bd41c1ec6517c92fd17d64","html":"https://github.com/eregon/adventofcode/blob/master/2023/3.txt"}},{"name":"3a.rb","path":"2023/3a.rb","sha":"c12ec4ffec2a81db1773ab56d6bd3a969036d667","size":397,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/3a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/c12ec4ffec2a81db1773ab56d6bd3a969036d667","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/c12ec4ffec2a81db1773ab56d6bd3a969036d667","html":"https://github.com/eregon/adventofcode/blob/master/2023/3a.rb"}},{"name":"3a_golf.rb","path":"2023/3a_golf.rb","sha":"e5a0c500a9e107c7b47e520981d98943eb58224b","size":150,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/3a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/e5a0c500a9e107c7b47e520981d98943eb58224b","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/e5a0c500a9e107c7b47e520981d98943eb58224b","html":"https://github.com/eregon/adventofcode/blob/master/2023/3a_golf.rb"}},{"name":"3a_golf2.rb","path":"2023/3a_golf2.rb","sha":"5699e5b093166bd894ed8867389e84fab00b4986","size":144,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3a_golf2.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/3a_golf2.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/5699e5b093166bd894ed8867389e84fab00b4986","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3a_golf2.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3a_golf2.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/5699e5b093166bd894ed8867389e84fab00b4986","html":"https://github.com/eregon/adventofcode/blob/master/2023/3a_golf2.rb"}},{"name":"3a_golf3.rb","path":"2023/3a_golf3.rb","sha":"a80817db8c850e76952767d578516e8fcf87f455","size":119,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3a_golf3.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/3a_golf3.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a80817db8c850e76952767d578516e8fcf87f455","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3a_golf3.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3a_golf3.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a80817db8c850e76952767d578516e8fcf87f455","html":"https://github.com/eregon/adventofcode/blob/master/2023/3a_golf3.rb"}},{"name":"3b.rb","path":"2023/3b.rb","sha":"b1935a2180dbeb156362a45ca122755e8db1bab8","size":547,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3b.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/3b.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b1935a2180dbeb156362a45ca122755e8db1bab8","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3b.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3b.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b1935a2180dbeb156362a45ca122755e8db1bab8","html":"https://github.com/eregon/adventofcode/blob/master/2023/3b.rb"}},{"name":"3s.txt","path":"2023/3s.txt","sha":"624ea4f22ff79a65dca91e59b2eedf99080c7a14","size":109,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/3s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/624ea4f22ff79a65dca91e59b2eedf99080c7a14","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/624ea4f22ff79a65dca91e59b2eedf99080c7a14","html":"https://github.com/eregon/adventofcode/blob/master/2023/3s.txt"}},{"name":"3t.txt","path":"2023/3t.txt","sha":"2b9b54e862af5174bcaa02a5b62fe582eca8dbba","size":109,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3t.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/3t.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/2b9b54e862af5174bcaa02a5b62fe582eca8dbba","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3t.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/3t.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/2b9b54e862af5174bcaa02a5b62fe582eca8dbba","html":"https://github.com/eregon/adventofcode/blob/master/2023/3t.txt"}},{"name":"4.txt","path":"2023/4.txt","sha":"1d2f88d64af4d27eec2297dbf22d18d778597b97","size":22698,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/4.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1d2f88d64af4d27eec2297dbf22d18d778597b97","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/4.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1d2f88d64af4d27eec2297dbf22d18d778597b97","html":"https://github.com/eregon/adventofcode/blob/master/2023/4.txt"}},{"name":"4a.rb","path":"2023/4a.rb","sha":"26c7123abff2d95078ab05c7173a91cd53cfb053","size":196,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/4a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/26c7123abff2d95078ab05c7173a91cd53cfb053","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/4a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/26c7123abff2d95078ab05c7173a91cd53cfb053","html":"https://github.com/eregon/adventofcode/blob/master/2023/4a.rb"}},{"name":"4a_golf.rb","path":"2023/4a_golf.rb","sha":"a34c6147c26f6cb4091b980300a81bbfc4a1917c","size":46,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/4a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a34c6147c26f6cb4091b980300a81bbfc4a1917c","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/4a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a34c6147c26f6cb4091b980300a81bbfc4a1917c","html":"https://github.com/eregon/adventofcode/blob/master/2023/4a_golf.rb"}},{"name":"4a_golf2.rb","path":"2023/4a_golf2.rb","sha":"5b0248686f2df6eb980a81868eaa622abb07eb91","size":47,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4a_golf2.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/4a_golf2.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/5b0248686f2df6eb980a81868eaa622abb07eb91","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/4a_golf2.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4a_golf2.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/5b0248686f2df6eb980a81868eaa622abb07eb91","html":"https://github.com/eregon/adventofcode/blob/master/2023/4a_golf2.rb"}},{"name":"4b.rb","path":"2023/4b.rb","sha":"a46518ce4e1a758c45a82c89f60828ffe61d37c4","size":287,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4b.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/4b.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a46518ce4e1a758c45a82c89f60828ffe61d37c4","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/4b.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4b.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a46518ce4e1a758c45a82c89f60828ffe61d37c4","html":"https://github.com/eregon/adventofcode/blob/master/2023/4b.rb"}},{"name":"4s.txt","path":"2023/4s.txt","sha":"71f208a06f54b06db470e22dffaf02b8901eba4a","size":293,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/4s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/71f208a06f54b06db470e22dffaf02b8901eba4a","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/4s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/4s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/71f208a06f54b06db470e22dffaf02b8901eba4a","html":"https://github.com/eregon/adventofcode/blob/master/2023/4s.txt"}},{"name":"5.txt","path":"2023/5.txt","sha":"2fb1f85ba8dc24833fec5208170f1431198a89a1","size":5958,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/5.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/2fb1f85ba8dc24833fec5208170f1431198a89a1","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/2fb1f85ba8dc24833fec5208170f1431198a89a1","html":"https://github.com/eregon/adventofcode/blob/master/2023/5.txt"}},{"name":"5a.rb","path":"2023/5a.rb","sha":"cbfde5edb48a31513e3ad9941276314498081c23","size":448,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/5a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/cbfde5edb48a31513e3ad9941276314498081c23","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/cbfde5edb48a31513e3ad9941276314498081c23","html":"https://github.com/eregon/adventofcode/blob/master/2023/5a.rb"}},{"name":"5a_golf.rb","path":"2023/5a_golf.rb","sha":"941ad12179e566cd0f3a3b29ee279f691b5f5c64","size":150,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/5a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/941ad12179e566cd0f3a3b29ee279f691b5f5c64","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/941ad12179e566cd0f3a3b29ee279f691b5f5c64","html":"https://github.com/eregon/adventofcode/blob/master/2023/5a_golf.rb"}},{"name":"5b.rb","path":"2023/5b.rb","sha":"b5b1c3cfd23bcdf798f1abe993e55419bf51ee8c","size":917,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5b.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/5b.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b5b1c3cfd23bcdf798f1abe993e55419bf51ee8c","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5b.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5b.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b5b1c3cfd23bcdf798f1abe993e55419bf51ee8c","html":"https://github.com/eregon/adventofcode/blob/master/2023/5b.rb"}},{"name":"5b2.rb","path":"2023/5b2.rb","sha":"83ca6ea83a099601494ddd69dcf2890705e70d7c","size":623,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5b2.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/5b2.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/83ca6ea83a099601494ddd69dcf2890705e70d7c","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5b2.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5b2.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/83ca6ea83a099601494ddd69dcf2890705e70d7c","html":"https://github.com/eregon/adventofcode/blob/master/2023/5b2.rb"}},{"name":"5b3.rb","path":"2023/5b3.rb","sha":"8a3c8292edeed24793d32e5d1a0b1c3f1114e0c5","size":613,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5b3.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/5b3.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/8a3c8292edeed24793d32e5d1a0b1c3f1114e0c5","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5b3.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5b3.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/8a3c8292edeed24793d32e5d1a0b1c3f1114e0c5","html":"https://github.com/eregon/adventofcode/blob/master/2023/5b3.rb"}},{"name":"5s.txt","path":"2023/5s.txt","sha":"bd902a4b686b91acedf4238764bed6ce05622911","size":339,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/5s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/bd902a4b686b91acedf4238764bed6ce05622911","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/5s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/bd902a4b686b91acedf4238764bed6ce05622911","html":"https://github.com/eregon/adventofcode/blob/master/2023/5s.txt"}},{"name":"6.txt","path":"2023/6.txt","sha":"9de08c1a47ae04f744b7b65b5d872f327c6783c1","size":74,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/6.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/6.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9de08c1a47ae04f744b7b65b5d872f327c6783c1","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/6.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/6.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9de08c1a47ae04f744b7b65b5d872f327c6783c1","html":"https://github.com/eregon/adventofcode/blob/master/2023/6.txt"}},{"name":"6a.rb","path":"2023/6a.rb","sha":"b7de18b97d2a814ffefc6a90ef80ab81adee9359","size":177,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/6a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/6a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b7de18b97d2a814ffefc6a90ef80ab81adee9359","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/6a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/6a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b7de18b97d2a814ffefc6a90ef80ab81adee9359","html":"https://github.com/eregon/adventofcode/blob/master/2023/6a.rb"}},{"name":"6a_golf.rb","path":"2023/6a_golf.rb","sha":"466bd131fd57ef767fa24f81f136613cf5da8a08","size":92,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/6a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/6a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/466bd131fd57ef767fa24f81f136613cf5da8a08","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/6a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/6a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/466bd131fd57ef767fa24f81f136613cf5da8a08","html":"https://github.com/eregon/adventofcode/blob/master/2023/6a_golf.rb"}},{"name":"6b.rb","path":"2023/6b.rb","sha":"cd46639fb4f05f30f5f032ba870d7954ffcd030c","size":129,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/6b.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/6b.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/cd46639fb4f05f30f5f032ba870d7954ffcd030c","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/6b.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/6b.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/cd46639fb4f05f30f5f032ba870d7954ffcd030c","html":"https://github.com/eregon/adventofcode/blob/master/2023/6b.rb"}},{"name":"6s.txt","path":"2023/6s.txt","sha":"b39f49dac2b326650f1ad821a709cfeb7a4a103a","size":43,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/6s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/6s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b39f49dac2b326650f1ad821a709cfeb7a4a103a","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/6s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/6s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b39f49dac2b326650f1ad821a709cfeb7a4a103a","html":"https://github.com/eregon/adventofcode/blob/master/2023/6s.txt"}},{"name":"7.txt","path":"2023/7.txt","sha":"b401ea62b0d6dbce3de9168cfad1027e93f88630","size":9893,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/7.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b401ea62b0d6dbce3de9168cfad1027e93f88630","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b401ea62b0d6dbce3de9168cfad1027e93f88630","html":"https://github.com/eregon/adventofcode/blob/master/2023/7.txt"}},{"name":"7a.rb","path":"2023/7a.rb","sha":"1a3e6d3eb8d163e6534d354a9a5f6916d33f936f","size":441,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/7a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1a3e6d3eb8d163e6534d354a9a5f6916d33f936f","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1a3e6d3eb8d163e6534d354a9a5f6916d33f936f","html":"https://github.com/eregon/adventofcode/blob/master/2023/7a.rb"}},{"name":"7a_golf.rb","path":"2023/7a_golf.rb","sha":"c509320538962770fedb7646cd2fec8ad7b96985","size":118,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/7a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/c509320538962770fedb7646cd2fec8ad7b96985","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/c509320538962770fedb7646cd2fec8ad7b96985","html":"https://github.com/eregon/adventofcode/blob/master/2023/7a_golf.rb"}},{"name":"7a_golf2.rb","path":"2023/7a_golf2.rb","sha":"88ad5fe360444eccb15dd344198b23f8b1baf299","size":140,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7a_golf2.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/7a_golf2.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/88ad5fe360444eccb15dd344198b23f8b1baf299","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7a_golf2.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7a_golf2.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/88ad5fe360444eccb15dd344198b23f8b1baf299","html":"https://github.com/eregon/adventofcode/blob/master/2023/7a_golf2.rb"}},{"name":"7a_golf3.rb","path":"2023/7a_golf3.rb","sha":"279c143a3cba751ebec3ba0403efdcebd91e0c6a","size":124,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7a_golf3.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/7a_golf3.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/279c143a3cba751ebec3ba0403efdcebd91e0c6a","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7a_golf3.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7a_golf3.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/279c143a3cba751ebec3ba0403efdcebd91e0c6a","html":"https://github.com/eregon/adventofcode/blob/master/2023/7a_golf3.rb"}},{"name":"7b.rb","path":"2023/7b.rb","sha":"9f705362fb069e345d79e8b6d53314110413a3b8","size":540,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7b.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/7b.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9f705362fb069e345d79e8b6d53314110413a3b8","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7b.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7b.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9f705362fb069e345d79e8b6d53314110413a3b8","html":"https://github.com/eregon/adventofcode/blob/master/2023/7b.rb"}},{"name":"7s.txt","path":"2023/7s.txt","sha":"bf2815e0a2df4594f28f434891d8f750b30c61c6","size":48,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/7s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/bf2815e0a2df4594f28f434891d8f750b30c61c6","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/7s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/bf2815e0a2df4594f28f434891d8f750b30c61c6","html":"https://github.com/eregon/adventofcode/blob/master/2023/7s.txt"}},{"name":"8.txt","path":"2023/8.txt","sha":"050a8f4dbbd5e4ad22932e8fe85bd5d3428f035b","size":12207,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/8.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/050a8f4dbbd5e4ad22932e8fe85bd5d3428f035b","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/050a8f4dbbd5e4ad22932e8fe85bd5d3428f035b","html":"https://github.com/eregon/adventofcode/blob/master/2023/8.txt"}},{"name":"8a.rb","path":"2023/8a.rb","sha":"0953885170b9e474c7cf3f2d0ff1e566fa1b8f90","size":303,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/8a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/0953885170b9e474c7cf3f2d0ff1e566fa1b8f90","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/0953885170b9e474c7cf3f2d0ff1e566fa1b8f90","html":"https://github.com/eregon/adventofcode/blob/master/2023/8a.rb"}},{"name":"8a_golf.rb","path":"2023/8a_golf.rb","sha":"b8640f91a46ddf885a883eb8b86b6ea3dbcac536","size":129,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/8a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b8640f91a46ddf885a883eb8b86b6ea3dbcac536","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/b8640f91a46ddf885a883eb8b86b6ea3dbcac536","html":"https://github.com/eregon/adventofcode/blob/master/2023/8a_golf.rb"}},{"name":"8a_golf2.rb","path":"2023/8a_golf2.rb","sha":"9935115a5c066c55252a980a890537f6db4993c4","size":111,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8a_golf2.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/8a_golf2.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9935115a5c066c55252a980a890537f6db4993c4","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8a_golf2.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8a_golf2.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9935115a5c066c55252a980a890537f6db4993c4","html":"https://github.com/eregon/adventofcode/blob/master/2023/8a_golf2.rb"}},{"name":"8b.rb","path":"2023/8b.rb","sha":"fed704e069b52b48f1ac862c638c5dafb6ee2792","size":797,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8b.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/8b.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/fed704e069b52b48f1ac862c638c5dafb6ee2792","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8b.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8b.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/fed704e069b52b48f1ac862c638c5dafb6ee2792","html":"https://github.com/eregon/adventofcode/blob/master/2023/8b.rb"}},{"name":"8b2.rb","path":"2023/8b2.rb","sha":"a61c0b1166f19206f0f2c9c99a2818c2863d433e","size":394,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8b2.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/8b2.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a61c0b1166f19206f0f2c9c99a2818c2863d433e","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8b2.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8b2.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a61c0b1166f19206f0f2c9c99a2818c2863d433e","html":"https://github.com/eregon/adventofcode/blob/master/2023/8b2.rb"}},{"name":"8b3.rb","path":"2023/8b3.rb","sha":"9af9c048de0fab09b874d5324419532150048f09","size":405,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8b3.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/8b3.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9af9c048de0fab09b874d5324419532150048f09","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8b3.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8b3.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9af9c048de0fab09b874d5324419532150048f09","html":"https://github.com/eregon/adventofcode/blob/master/2023/8b3.rb"}},{"name":"8s.txt","path":"2023/8s.txt","sha":"9029a1b271a56654edf2d1364b8a63d9c7b3ad5e","size":123,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/8s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9029a1b271a56654edf2d1364b8a63d9c7b3ad5e","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/9029a1b271a56654edf2d1364b8a63d9c7b3ad5e","html":"https://github.com/eregon/adventofcode/blob/master/2023/8s.txt"}},{"name":"8s2.txt","path":"2023/8s2.txt","sha":"a8e2c9892de16ec81439bdf6e60743b88a6e6ada","size":139,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8s2.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/8s2.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a8e2c9892de16ec81439bdf6e60743b88a6e6ada","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8s2.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8s2.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/a8e2c9892de16ec81439bdf6e60743b88a6e6ada","html":"https://github.com/eregon/adventofcode/blob/master/2023/8s2.txt"}},{"name":"8t.txt","path":"2023/8t.txt","sha":"34ffa8a308ac07c08c73d151939d29a723ce4d8d","size":55,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8t.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/8t.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/34ffa8a308ac07c08c73d151939d29a723ce4d8d","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8t.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/8t.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/34ffa8a308ac07c08c73d151939d29a723ce4d8d","html":"https://github.com/eregon/adventofcode/blob/master/2023/8t.txt"}},{"name":"9.txt","path":"2023/9.txt","sha":"aeee200ddd0a8e723090228a718f50b242de77c2","size":21550,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/9.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/9.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/aeee200ddd0a8e723090228a718f50b242de77c2","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/9.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/9.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/aeee200ddd0a8e723090228a718f50b242de77c2","html":"https://github.com/eregon/adventofcode/blob/master/2023/9.txt"}},{"name":"9a.rb","path":"2023/9a.rb","sha":"057fcb777c6981a186fc3021c825bdbdbc41b4e5","size":265,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/9a.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/9a.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/057fcb777c6981a186fc3021c825bdbdbc41b4e5","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/9a.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/9a.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/057fcb777c6981a186fc3021c825bdbdbc41b4e5","html":"https://github.com/eregon/adventofcode/blob/master/2023/9a.rb"}},{"name":"9a_golf.rb","path":"2023/9a_golf.rb","sha":"1b776a9edaf6d8b31951a21bad23904ad870b0e3","size":95,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/9a_golf.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/9a_golf.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1b776a9edaf6d8b31951a21bad23904ad870b0e3","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/9a_golf.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/9a_golf.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1b776a9edaf6d8b31951a21bad23904ad870b0e3","html":"https://github.com/eregon/adventofcode/blob/master/2023/9a_golf.rb"}},{"name":"9b.rb","path":"2023/9b.rb","sha":"212d8d470f511aab84711c551147ae322a370328","size":275,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/9b.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/9b.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/212d8d470f511aab84711c551147ae322a370328","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/9b.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/9b.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/212d8d470f511aab84711c551147ae322a370328","html":"https://github.com/eregon/adventofcode/blob/master/2023/9b.rb"}},{"name":"9s.txt","path":"2023/9s.txt","sha":"70c5595c63c49e57e916b02c6c61c1fef981400e","size":46,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/9s.txt?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/9s.txt","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/70c5595c63c49e57e916b02c6c61c1fef981400e","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/9s.txt","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/9s.txt?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/70c5595c63c49e57e916b02c6c61c1fef981400e","html":"https://github.com/eregon/adventofcode/blob/master/2023/9s.txt"}},{"name":"lib.rb","path":"2023/lib.rb","sha":"58c4084778d685eed17b4c0aff195e2a97d8ab01","size":209,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/lib.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/lib.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/58c4084778d685eed17b4c0aff195e2a97d8ab01","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/lib.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/lib.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/58c4084778d685eed17b4c0aff195e2a97d8ab01","html":"https://github.com/eregon/adventofcode/blob/master/2023/lib.rb"}},{"name":"use_prism.rb","path":"2023/use_prism.rb","sha":"1d6995bdef86897b9daa6a3bc088356690ad48db","size":108,"url":"https://api.github.com/repos/eregon/adventofcode/contents/2023/use_prism.rb?ref=master","html_url":"https://github.com/eregon/adventofcode/blob/master/2023/use_prism.rb","git_url":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1d6995bdef86897b9daa6a3bc088356690ad48db","download_url":"https://raw.githubusercontent.com/eregon/adventofcode/master/2023/use_prism.rb","type":"file","_links":{"self":"https://api.github.com/repos/eregon/adventofcode/contents/2023/use_prism.rb?ref=master","git":"https://api.github.com/repos/eregon/adventofcode/git/blobs/1d6995bdef86897b9daa6a3bc088356690ad48db","html":"https://github.com/eregon/adventofcode/blob/master/2023/use_prism.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:38 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '101'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"4179fe95a98bd39be90ef503abe589d4dc6ad6269736c5a5d2e6dbd79cf9f5eb"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - A32A:2326FD:E65632:12725C7:67D62EC8
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:38 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200176-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092539.632393,VS0,VE69
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 823fc98f890b4c59a49ee516271be41036463fdb
      expires:
      - Sun, 16 Mar 2025 02:40:38 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: 'p File.readlines(''1.txt'').sum { /(\d)(?:.*(\d))?/ =~ _1 and ($1 +
        ($2 || $1)).to_i }

        '
  recorded_at: Sun, 16 Mar 2025 02:35:38 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '65'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"e8527aee14b9dd601b2716f6c87e4da981e386a7a18ed72f31b97eff1561c7d1"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - C01B:A7AEE:27D043:343C1F:67D62EC8
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:38 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100161-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092539.835989,VS0,VE76
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 6dcc383165db388d93e251640dbbfe2456d69e0a
      expires:
      - Sun, 16 Mar 2025 02:40:38 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: p$<.sum{_1[/(\d)(.*(\d))?/]&&($1+($3||$1)).to_i}
  recorded_at: Sun, 16 Mar 2025 02:35:38 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1b.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '195'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"14266ec9d574ad0d80efa930e9e9055993ff7c0aeab5a4f669a32d6153a9c807"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - BB03:A7AEE:27D06E:343C58:67D62EC7
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:39 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100173-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092539.047231,VS0,VE64
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 9dee5df85ad30208fe670cb24ec7393eba92858a
      expires:
      - Sun, 16 Mar 2025 02:40:39 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        digits = (%w[one two three four five six seven eight nine].zip(1..9) + ('0'..'9').zip(0..9)).to_h
        digit = digits.keys.join '|'
        p File.readlines('1.txt').sum { /(#{digit})(?:.*(#{digit}))?/o =~ _1 and digits[$1] * 10 + digits[$2 || $1] }
  recorded_at: Sun, 16 Mar 2025 02:35:39 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1b_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '151'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"c4c247365f1bf459caa169c8af764c7ad5c4ef4603c72425b6dc363b6f96a244"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - E52D:27B56C:3C8177:4C6FCA:67D62EC8
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:39 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200083-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092539.252796,VS0,VE66
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7a4412c51d6af04d7a547455f0542b18a10e61d9
      expires:
      - Sun, 16 Mar 2025 02:40:39 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        a=[*?0..?9,*%w[0 one two three four five six seven eight nine]].zip([*0..9]*2).to_h
        d=[*a]*?|
        p$<.sum{_1[/(#{d})(.*(#{d}))?/]&&a[$1]*10+a[$3||$1]}
  recorded_at: Sun, 16 Mar 2025 02:35:39 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/1b_golf2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '137'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"85f5c6539bcb02a44846fd35223d8892109a967fca68bcfe4dd4c0f65ba8dd74"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 9E1B:2A64D9:3749C7:472BFC:67D62EC8
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:39 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200137-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092539.456188,VS0,VE81
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - d0d1d2a9dfdeedd1fbc0bc8ce223ed16055bfaec
      expires:
      - Sun, 16 Mar 2025 02:40:39 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        a=[*?0..?9]+%w[0 one two three four five six seven eight nine]
        p$<.sum{_1[/(#{a*?|})(.*(#{a*?|}))?/]&&a.index($1)%10*10+a.index($3||$1)%10}
  recorded_at: Sun, 16 Mar 2025 02:35:39 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/2a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '211'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"a1606d17d7526e68e99649888266f949c75989d93cf539d24353b0d7a1861f30"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - E294:152147:E547C3:1261E0A:67D62EC6
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:39 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100058-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092540.674450,VS0,VE69
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 8f1a17a81dd9d0243eb2cca99123844d2e0b52b7
      expires:
      - Sun, 16 Mar 2025 02:40:39 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        max = %w[red green blue].zip(12..14).to_h
        p File.readlines('2.txt').sum { |line|
          game = line[/^Game (\d+): (.+)$/, 1].to_i
          $2.split('; ').all? { |pick|
            pick.split(', ').all? {
              _1[/^(\d+) (\w+)$/]
              $1.to_i <= max.fetch($2)
            }
          } ? game : 0
        }
  recorded_at: Sun, 16 Mar 2025 02:35:39 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/2a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '112'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"59f08713123ae8a4f065bfa68c3cb140dd870d9aa46a70b6ac022d1a77189527"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - C910:332194:35DBCF:45B8F9:67D62EC6
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:39 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200080-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092540.881685,VS0,VE68
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 6561175ae7cac698df48cc0515461ac9ea31f93c
      expires:
      - Sun, 16 Mar 2025 02:40:39 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: 'p$<.sum{|l|l.scan(/(\d+) (\w+)/).all?{_1.to_i<%w[red green blue].index(_2)+13}?l[/\d+/].to_i:
        0}'
  recorded_at: Sun, 16 Mar 2025 02:35:39 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/2b.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '205'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"52c1bd878c6b1a8fa8d735abe907487c9244b426e2ef22bfd8d9564d93b6969f"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 89EB:26ECB6:3C5A85:4C3B73:67D62EC8
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:40 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100128-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092540.094918,VS0,VE101
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - '083ef83109c0486f5760d26fcecb833b4022cb3c'
      expires:
      - Sun, 16 Mar 2025 02:40:40 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        p File.readlines('2.txt').sum { |line|
          max = %w[red green blue].zip([0] * 3).to_h
          line[/: (.+)$/, 1].split('; ').each { |pick|
            pick.split(', ').each {
              _1[/^(\d+) (\w+)$/]
              max[$2] = [max[$2], $1.to_i].max
            }
          }
          max.values.reduce(:*)
        }
  recorded_at: Sun, 16 Mar 2025 02:35:40 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '259'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"d9c4cf6c294d0327a0ab3145fc41a15d3b5b6b09b85dc4fa6819922464169ed1"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 76BE:2B1277:EE9FCF:12F7EEA:67D62EC8
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:40 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100120-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092540.338315,VS0,VE73
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 6ea16f8fa4a9e0cef5800a1e272daba5c5d1ea3d
      expires:
      - Sun, 16 Mar 2025 02:40:40 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        map = {}
        $<.each_with_index{ |line,y|
          line.chomp.chars.each_with_index { |c,x| map[x+y.i] = c }
        }

        numbers = map.each_pair.chunk { |p,c| [!!c[/\d/], p.imag] }.select { |(d,_),| d }.map(&:last)
        numbers = numbers.select do |number|
          number.any? { |p,_|
            [p-1i, p-1i+1, p+1, p+1+1i, p+1i, p+1i-1, p-1, p-1-1i].any? { map[_1] =~ /[^0-9.]/ }
          }
        end
        p numbers.sum { _1.map(&:last).sum('').to_i }
  recorded_at: Sun, 16 Mar 2025 02:35:40 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '155'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"da3056052426bbbbf019f6561190426099062fb10b765054b4104e4885a272fd"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - AAD9:1A3DEA:E5FEDE:126D763:67D62EC8
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:40 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100050-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092541.546610,VS0,VE52
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 0da941fab8c9072a87f803e9a0880f01ce24e4e3
      expires:
      - Sun, 16 Mar 2025 02:40:40 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        s=$<.read
        w=(s=~/$/)+1
        s.scan(/\d+/){|n|$.+=n.to_i if Range.new(*$~.offset(0),1).any?{|i|[i-w,i,i+w].any?{(_1>0?s[_1-1,3]:s[_1,2])=~/[^\d\s.]/}}}
        p $.
  recorded_at: Sun, 16 Mar 2025 02:35:40 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3a_golf2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '149'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"5e2bdafacef382da0eadcda82cfbfcee915ecebe5af9bc4baae1a2d08dc4f0a3"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - '08BE:281D7B:F2DDC1:133C029:67D62EC8'
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:40 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200141-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092541.739520,VS0,VE70
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7ed0c49352981a0e6d18a56df3fe1aa9b753abe3
      expires:
      - Sun, 16 Mar 2025 02:40:40 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        s=$<.read
        w=(s=~/$/)+1
        s.scan(/\d+/){|n|$.+=n.to_i if Range.new(*$~.offset(0),1).any?{|i|[i-w,i,i+w].any?{(s[_1-1,3]if _1>0)=~/[^\d\s.]/}}}
        p $.
  recorded_at: Sun, 16 Mar 2025 02:35:40 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3a_golf3.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '130'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"3ff50bafb98bf91c8d18c270b1770a8f0cf5c86c3b3b8d6ea3c7f47168a9c451"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - CBC6:1E08FD:2A9693:370181:67D62ECB
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:41 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200088-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092541.945023,VS0,VE95
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f19b0ea3f16189b374f1c2f37e781b105dbf8adb
      expires:
      - Sun, 16 Mar 2025 02:40:41 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: s=$<.read;w=s=~/$/;s.scan(/\d+/){|n|i=$`.size;$.+=n.to_i if[i-w-2,i-1,i+w].any?{_1>=0&&s[_1,2+n.size]=~/[^\d\s.]/}};p$.
  recorded_at: Sun, 16 Mar 2025 02:35:40 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/3b.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '327'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"27b8a87362cda22aafa38500c02e752cbaaeb291bc8c9b538c52738e3f5fb71d"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 2899:1480DE:F55F78:136431E:67D62ECB
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:41 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100166-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092541.171088,VS0,VE65
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 136893f994ce5e76ea4a05dde57ff78f436d9d28
      expires:
      - Sun, 16 Mar 2025 02:40:41 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        map = {}
        $<.each_with_index{ |line,y|
          line.chomp.chars.each_with_index { |c,x| map[x+y.i] = c }
        }

        gears = map.each_pair.select { _2 == '*' }.map(&:first)

        p gears.sum { |g|
          adj = [g-1i, g-1i+1, g+1, g+1+1i, g+1i, g+1i-1, g-1, g-1-1i].select { map[_1] =~ /\d/ }
          adj.dup.each { |p|
            adj << p while map[p-=1] =~ /\d/
            adj << p while map[p+=1] =~ /\d/
          }
          adj = adj.uniq.sort_by { _1.rect.reverse }
          numbers = adj.slice_when { (_2 - _1) != 1 }.to_a
          numbers.size == 2 ? numbers.map { |n| n.sum('') { map[_1] }.to_i }.reduce(:*) : 0
        }
  recorded_at: Sun, 16 Mar 2025 02:35:41 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/4a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '157'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"dd4dd7ed9d76a31b858e9579648349e0623041e66b0cdf7918cc449d9dbe272c"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - BCC0:1E9244:39424B:4925B2:67D62ECB
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:41 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200128-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092541.378259,VS0,VE93
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - dc36281144549c50b18aabfb7b5d494cad1a92f3
      expires:
      - Sun, 16 Mar 2025 02:40:41 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        p $<.sum { |line|
          winning, got = line.split(/[:|]/)[1..].map { |series| series.split.map { Integer(_1) } }
          winning_cards = got.count { |card| winning.include?(card) }
          1 << winning_cards-1
        }
  recorded_at: Sun, 16 Mar 2025 02:35:41 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/4a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '61'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"93a447d3daaacf46cf438dc38674c31a182f38c80640be53cdce8302061a12c9"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - '0948:36E58E:2B28B5:33A5D8:67D62ECC'
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:41 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200123-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092542.764746,VS0,VE61
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 3d38d5b971a70e8fd94564c23788d00a45dd790e
      expires:
      - Sun, 16 Mar 2025 02:40:41 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: p$<.sum{1<<(_1[/.+\|/].split&$'.split).size-1}
  recorded_at: Sun, 16 Mar 2025 02:35:41 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/4a_golf2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '62'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"9fb608081a6b0f5e7e4d4f7af04b7b4de369a835d6f2762705c8e767f5be5318"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - E13E:2FD5B2:3EED33:4ECD67:67D62ECA
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:42 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200118-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092542.961524,VS0,VE73
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 3ce9f7b9bb07023c7bcfcdcaf3a80c7233cda274
      expires:
      - Sun, 16 Mar 2025 02:40:42 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: p$<.sum{1<<(_1=~/\|/;$`.split&$'.split).size-1}
  recorded_at: Sun, 16 Mar 2025 02:35:41 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/4b.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '206'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"959318116f35ce735cc2ea834aa2ea7fe916ae219bc24aa8b8b9b2c0f5fdef10"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FD4E:1CB925:28F3F0:35A0DA:67D62ECD
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:42 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200088-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092542.171697,VS0,VE59
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - c9433464e25b8e41c9be8bd7276299b89924b69d
      expires:
      - Sun, 16 Mar 2025 02:40:42 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        lines = $<.readlines
        cards = [1] * lines.size
        lines.each_with_index { |line, card|
          winning, got = line.split(/[:|]/)[1..].map { |series| series.split.map { Integer(_1) } }
          win = got.count { winning.include?(_1) }
          i = card
          win.times { cards[i += 1] += cards[card] }
        }
        p cards.sum
  recorded_at: Sun, 16 Mar 2025 02:35:42 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '270'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"12ee4f0a68170747dee423cc0021c26f384c2b44258826736ad9c3570099848a"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 0C68:2938EB:EDFE1F:12ED83B:67D62EC9
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:42 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100066-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092542.386960,VS0,VE62
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 80304a304b4c7325e89d57da6e99e9360c2d5230
      expires:
      - Sun, 16 Mar 2025 02:40:42 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        seeds, *maps = $<.read.split("\n\n")
        seeds = seeds[/:(.+)/, 1].split.map { Integer _1 }

        maps = maps.map do |map|
          map.lines[1..].map { |line|
            dest, src, len = line.split.map { Integer _1 }
            [(src...src+len), dest]
          }.sort_by { _1[0].begin }.to_h
        end

        p seeds.map { |seed|
          maps.reduce(seed) { |v, map|
            range = map.keys.find { |range| range === v }
            if range
              map[range] + (v - range.begin)
            else
              v
            end
          }
        }.min
  recorded_at: Sun, 16 Mar 2025 02:35:42 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '141'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"7d379e328386ce33d461d929a6411e7cd66d13e782e1116d0a609287e63b97d2"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 0E82:2FD5B2:3EED7C:4ECDC9:67D62ECD
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:42 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100048-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092543.581657,VS0,VE72
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 9b9216b15e1e8d8f04c363e66a10dbb7b87e388e
      expires:
      - Sun, 16 Mar 2025 02:40:42 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: a,*b=$<.read.split"\n\n";p a.split[1..].map(&:to_i).map{|v|b.each{_1.lines[1..].each{|l|d,s,z=l.split.map(&:to_i);break
        v+=d-s if v>=s&&v<s+z}};v}.min
  recorded_at: Sun, 16 Mar 2025 02:35:42 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5b.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '445'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"907432b942155ce40a06191da3a11efc9d06007e5d12eb0204e6d375ac0a427d"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 9DC6:27B56C:3C83C9:4C7296:67D62ECE
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:42 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200141-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092543.804248,VS0,VE60
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - ff91011a0203e54e9a154422886b4ad766b32a13
      expires:
      - Sun, 16 Mar 2025 02:40:42 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        seeds, *maps = $<.read.split("\n\n")
        seeds = seeds[/:(.+)/, 1].split.map { Integer _1 }
        seeds = seeds.each_slice(2).flat_map { (_1..._1+_2) }.sort_by(&:begin)

        maps = maps.map do |map|
          map.lines[1..].map { |line|
            dest, src, len = line.split.map { Integer _1 }
            [(src...src+len), dest - src]
          }.sort_by { _1[0].begin }.to_h
        end

        ranges = seeds
        maps.each { |map|
          cuts = map.keys.flat_map { [_1.begin, _1.end] }
          cuts.uniq!
          raise unless cuts.sort == cuts

          cuts.each { |cut|
            ranges.dup.each { |range|
              if range.include?(cut) and cut != range.begin and cut != range.end
                ranges.delete(range)
                ranges << (range.begin...cut) << (cut...range.end)
              end
            }
          }

          ranges.map! { |range|
            k = map.keys.find { |key| key.cover?(range) }
            if k
              offset = map[k]
              (range.begin + offset...range.end + offset)
            else
              range
            end
          }
        }

        p ranges.map(&:begin).min
  recorded_at: Sun, 16 Mar 2025 02:35:42 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5b2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '361'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"e6f6ea110b4e480f1c9f4bfd74e4cd9312969f20106a5d19b50bf3948ad18f31"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 7C6D:1A3DEA:E5FFEB:126D8E8:67D62ECE
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:43 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200045-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092543.006717,VS0,VE61
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 68a6b51718b1c1e311fe363a43eb2530a6a1ee03
      expires:
      - Sun, 16 Mar 2025 02:40:43 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        seeds, *maps = $<.read.split("\n\n")
        seeds = seeds[/:(.+)/, 1].split.map { Integer _1 }
        seeds = seeds.each_slice(2).flat_map { (_1.._1+_2-1) }.sort_by(&:begin)

        reversed_maps = maps.map { |map|
          map.lines[1..].map { |line|
            dest, src, len = line.split.map { Integer _1 }
            [(dest...dest+len), src - dest]
          }.sort_by { _1[0].begin }.to_h
        }.reverse

        p (0..).find { |n|
          p n if n % 100_000 == 0
          r = reversed_maps.reduce(n) { |v, map|
            range = map.keys.find { |range| break if range.begin > v; range === v }
            if range
              map[range] + v
            else
              v
            end
          }
          seeds.any? { |seed| seed.include?(r) }
        }
  recorded_at: Sun, 16 Mar 2025 02:35:43 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/5b3.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '344'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"afe3188189f4e7ecfe206c9c3bfd75b01bb4b25cfe7604278306ae8cc920a1f0"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - C161:29AF8C:EF6C78:1303855:67D62ECE
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:43 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100083-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092543.207729,VS0,VE55
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 20c5e265ba63c576ac2f50798a948dc4b0853b71
      expires:
      - Sun, 16 Mar 2025 02:40:43 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        seeds, *maps = $<.read.split("\n\n")
        maps = maps.map do |map|
          map.lines[1..].map { |line|
            dest, src, len = line.split.map { Integer _1 }
            [(src...src+len), dest]
          }.sort_by { _1[0].begin }.to_h
        end
        pp maps

        min = (2**31)-1
        seeds = seeds[/:(.+)/, 1].split.map { Integer _1 }
        seeds = seeds.each_slice(2).flat_map { |start,len|
          r = start...start+len
          p r
          r.each { |seed|
            result = maps.reduce(seed) { |v, map|
              range = map.keys.find { |range| range === v }
              if range
                map[range] + (v - range.begin)
              else
                v
              end
            }
            min = result if result < min
          }
        }
        p min
  recorded_at: Sun, 16 Mar 2025 02:35:43 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/6a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '148'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"d8de780081618a1bf986ad341d29af9012962e967d2e4e1575d59ef4ccf71da9"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 953D:2963AC:380661:47E252:67D62ECF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:43 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100118-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092543.410572,VS0,VE58
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7c73a7f8d9cf87d1081e0ba7d9a3addc47191d71
      expires:
      - Sun, 16 Mar 2025 02:40:43 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        races = $<.readlines.map { |line| line.scan(/\d+/).map(&:to_i) }.reduce(:zip)
        p races.map { |time, record|
          (1...time).count { |t|
            (time - t) * t > record
          }
        }.reduce(:*)
  recorded_at: Sun, 16 Mar 2025 02:35:43 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/6a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '104'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"3736642bbac8c7e57cb1ac1a936ef140096db45fa6fb38804a4b89ac52f74b80"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - AD0E:2B47D9:3DEE02:4DCAA7:67D62ECF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:43 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100093-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092544.623556,VS0,VE49
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 924259cfa734953f84f152159ed36846ebb394c8
      expires:
      - Sun, 16 Mar 2025 02:40:43 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: p$<.map{_1.split[1..].map(&:to_i)}.transpose.map{|t,r|t.times.count{(t-_1)*_1>r}}.reduce(:*)
  recorded_at: Sun, 16 Mar 2025 02:35:43 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/6b.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '129'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"7681def9e870705e7d2fdc9ae9915be67f58f4830250022c65509da40ef7ee49"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 3817:2CB9B5:326577:422213:67D62ECF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:43 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100034-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092544.822471,VS0,VE49
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 81d2712358662d44b5eeee145d2ccce524a93f62
      expires:
      - Sun, 16 Mar 2025 02:40:43 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        time, record = $<.readlines.map { |line| line.scan(/\d+/).reduce(:+).to_i }
        p (1...time).count { |t|
          (time - t) * t > record
        }
  recorded_at: Sun, 16 Mar 2025 02:35:43 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '281'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"ac5aee312578b8d547603269ba468e32fed201033ce815a2b04eb97abd9e73c1"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 1AE5:221220:EC0EC9:12CF286:67D62ECD
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:44 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100053-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092544.034834,VS0,VE66
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7beec498ad735390eac7d7e2b1ca2a2dc6fbe8b9
      expires:
      - Sun, 16 Mar 2025 02:40:44 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        hands = $<.map { |line|
          line.split.then { [_1.tr('AKQJT', 'EDCBA').chars, _2.to_i] }
        }

        p hands.sort_by { |hand, bid|
          tally = hand.tally
          max = tally.values.max
          type = case tally.size
          in 1
            7
          in 2
            if max == 4
              6
            else
              raise unless max == 3
              5
            end
          in 3
            if max == 3
              4
            else
              3
            end
          in 4
            2
          in 5
            1
          end
          [type, *hand]
        }.map(&:last).zip(1..hands.size).sum { _1 * _2 }
  recorded_at: Sun, 16 Mar 2025 02:35:44 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '135'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"5a70d44f50f200baf6286c62467360ef75ba22aee0d4dd3566afb2e46f3e0d5a"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - F4FF:2B05E2:F14F40:1323E2D:67D62ECF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:44 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200137-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092544.248237,VS0,VE114
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 11e5c6a10cee750b91b37538813d3a73eb042b5a
      expires:
      - Sun, 16 Mar 2025 02:40:44 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: p$<.map(&:split).sort_by{|h,|[(t=h.chars.tally.values).max-t.size,h.tr('AKQJT','EDCBA')]}.zip(1..).sum{_1[-1].to_i*_2}
  recorded_at: Sun, 16 Mar 2025 02:35:44 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7a_golf2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '155'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"3645048a6c36b13e091d29148c21a83d5c82daaa7092340a80120c75e849404b"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 9953:DFD4F:E98F96:12A6995:67D62ECF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:44 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100043-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092545.502834,VS0,VE75
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - c98a14829a5bb9a14b7547d9d63d2ea4624c0a87
      expires:
      - Sun, 16 Mar 2025 02:40:44 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: p$<.map(&:split).sort_by{|h,|h.tr!'AKQJT','EDCBA';[(5-s=(t=h.chars.tally.values).size)*2+(t.max==6-s
        ?1:0),*h]}.zip(1..).sum{_1[-1].to_i*_2}
  recorded_at: Sun, 16 Mar 2025 02:35:44 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7a_golf3.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '138'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"e73d1ea613d5dad432dd1ff7f01bac1179f0afa682fd725cb7a0530ad489a5c0"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 9DBB:1FCE76:37FC31:47DA8E:67D62ECF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:44 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100073-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092545.728425,VS0,VE87
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 27fe44093b161ce2f02b3cbe2a7fa6041df40512
      expires:
      - Sun, 16 Mar 2025 02:40:44 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: p$<.map(&:split).sort_by{|h,|[h.chars.tally.values.then{_1.max-_1.size},h.tr('AKQJT','EDCBA')]}.zip(1..).sum{_1[-1].to_i*_2}
  recorded_at: Sun, 16 Mar 2025 02:35:44 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/7b.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '313'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"22e8b3e9d541a4554d79570960d05b489e28b96e29753d91ff64d017b559667a"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 7045:39AB05:3545AC:45151C:67D62ECE
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:45 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200161-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092545.969432,VS0,VE50
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - aa25c4b9f9e166e24bfabfa78236d65846c01338
      expires:
      - Sun, 16 Mar 2025 02:40:45 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        hands = $<.map { |line|
          line.split.then { [_1.tr('AKQTJ', 'DCBA1'), _2.to_i] }
        }

        p hands.sort_by { |hand, bid|
          type = [*'2'..'9', *'A'..'D'].map { |v|
            tally = hand.tr('1',v).chars.tally
            max = tally.values.max
            case tally.size
            in 1
              7
            in 2
              if max == 4
                6
              else
                raise unless max == 3
                5
              end
            in 3
              if max == 3
                4
              else
                3
              end
            in 4
              2
            in 5
              1
            end
          }.max
          [type, *hand]
        }.map(&:last).zip(1..hands.size).sum { _1 * _2 }
  recorded_at: Sun, 16 Mar 2025 02:35:44 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '233'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"10d2acefa9a0d79c1267e5ad34dadf83cc1081e0f0db81f5fb2175d03eb391a5"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 7811:2D5530:3C302D:4C157B:67D62ECF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:45 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200098-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092545.169541,VS0,VE69
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - de27fc4a3082e4cd94e6b1f7da0b346f6cb0c6ef
      expires:
      - Sun, 16 Mar 2025 02:40:45 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        moves, _, *routes = $<.readlines(chomp: true)
        moves = moves.chars.cycle
        routes = routes.to_h { |l| l.split(/ = \(|, |\)/).then { [_1, [_2, _3]] } }

        p Enumerator.produce("AAA") { |pos|
          # routes[pos][moves.next == 'L' ? 0 : 1]
          routes[pos][moves.next.ord / ?R.ord]
        }.find_index { |pos| pos == "ZZZ" }
  recorded_at: Sun, 16 Mar 2025 02:35:45 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '144'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"0030087a9bbfadf4088057620cdaecfbb169792160c7f5e2915d7aa18d8feb0e"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 3DD3:28C136:E498FB:125700C:67D62ED0
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:45 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100023-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092545.386919,VS0,VE90
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 9b451f12eb325254e7d1628e66f88c204db949e6
      expires:
      - Sun, 16 Mar 2025 02:40:45 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        m,_,*r=*$<
        m=m.chop.bytes.cycle
        r=r.to_h{a,*b=_1.scan /\w+/;[a,b]}
        p Enumerator.produce(?A*3){|c|r[c][m.next/82]}.find_index"ZZZ"
  recorded_at: Sun, 16 Mar 2025 02:35:45 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8a_golf2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '128'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"f20a8f56383fa06eea8f0361626b7804ed8d627704fa59c2acdf63d56c7a1cda"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 2B6C:1F30F2:3289C9:424B04:67D62ED1
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:45 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100075-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092546.607728,VS0,VE48
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - fd30457aea7b5520edd62ee14cc8580d2b835d17
      expires:
      - Sun, 16 Mar 2025 02:40:45 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: m,_,*r=*$<;r=r.to_h{a,*b=_1.scan /\w+/;[a,b]};s=-1;c=r[c||?A*3][m[(s+=1)%(m.size-1)].ord/82]until
        c==?Z*3;p s+1
  recorded_at: Sun, 16 Mar 2025 02:35:45 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8b.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '413'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"6769cc5c66d5aae706d5a3ac764369ffe818743891a22fce8a8fc3b961be03a8"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 9E4D:1BFA15:39FB8E:49D252:67D62ECF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:45 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200173-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092546.797737,VS0,VE36
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - cd89e28586cf8b061a9b6cdad818936ce51d324b
      expires:
      - Sun, 16 Mar 2025 02:40:45 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        moves, _, *routes = $<.readlines.map(&:chomp)
        moves = moves.chars.map { |c| c == 'L' ? 0 : 1 }
        routes = routes.to_h { |l| l.split(/ = \(|, |\)/).then { [_1.to_sym, [_2.to_sym, _3.to_sym]] } }

        find_z = -> pos, start_step = 0 do
          steps = start_step
          begin
            dir = moves[steps % moves.size]
            pos = routes[pos][dir]
            steps += 1
          end until pos.end_with? 'Z'
          steps
        end

        positions = routes.keys.grep(/A\z/)
        p positions.map { |pos|
          cycle = find_z[pos]
          raise unless find_z[pos, cycle] == cycle * 2
          cycle
        }.reduce(:lcm)

        __END__

        # Too slow:
        positions = routes.keys.grep(/A\z/)
        steps = 0
        until positions.all?(/Z\z/)
          dir = moves[steps % moves.size]
          positions.map! do |pos|
            routes[pos][dir]
          end
          steps += 1

          if positions.any?(/Z\z/)
            p [steps, positions]
          end
        end
        p steps
  recorded_at: Sun, 16 Mar 2025 02:35:45 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8b2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '288'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"3b15dab923c84e31456beae5ef27740f880eb2891c40e45c4d4753fb3655687a"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - AAFC:332194:35DE7F:45BC73:67D62ED1
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:46 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200145-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092546.961775,VS0,VE47
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 0a7e214c7c48dfe180266c144957d3236de5afbd
      expires:
      - Sun, 16 Mar 2025 02:40:46 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        moves, _, *routes = $<.readlines.map(&:chomp)
        routes = routes.to_h { |l| l.split(/ = \(|, |\)/).then { [_1, [_2, _3]] } }

        pp routes

        # Too slow :(
        enums = routes.keys.grep(/A$/).map do |start|
          local_moves = moves.chars.cycle
          Enumerator.produce(start) { |pos|
            routes[pos][local_moves.next == 'L' ? 0 : 1]
          }
        end

        p enums.first.lazy.zip(*enums[1..]).find_index { |pos| pos.all?(/Z$/) }
  recorded_at: Sun, 16 Mar 2025 02:35:45 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/8b3.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '278'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"11eafaae480725b53b722378a5ea21efa0a646ca4247f3e8b01838952432cfed"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 5F1C:26ECB6:3C5D5A:4C3F1D:67D62ECE
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:46 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100178-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092546.147510,VS0,VE35
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - ee98b32b5260d04adb38b12c967a05039950c9e9
      expires:
      - Sun, 16 Mar 2025 02:40:46 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        moves, _, *routes = $<.readlines.map(&:chomp)
        moves = moves.chars.map { |c| c == 'L' ? 0 : 1 }
        routes = routes.to_h { |l| l.split(/ = \(|, |\)/).then { [_1.to_sym, [_2.to_sym, _3.to_sym]] } }

        positions = routes.keys.grep(/A\z/)
        p positions.map { |pos|
          moves_enum = moves.cycle
          Enumerator.produce(pos) { |cur|
            routes[cur][moves_enum.next]
          }.find_index { |cur| cur.end_with? 'Z' }
        }.reduce(:lcm)
  recorded_at: Sun, 16 Mar 2025 02:35:46 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/9a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '179'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"9a19700b88bdbe68fdb99706876039327f460dc826aee053086ee01c322120b0"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - CB4D:25F6AA:EBD58A:12CA2F6:67D62ED1
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:46 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200078-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092546.327078,VS0,VE61
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 223de8d76f3311415c4955cb1f6a76817170b415
      expires:
      - Sun, 16 Mar 2025 02:40:46 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        p $<.sum { |l|
          series = l.split.map { Integer _1 }
          rows = [series]
          until series.all?(0)
            series = series.each_cons(2).map { _2 - _1 }
            rows << series
          end

          rows.last << 0
          rows.reverse_each.each_cons(2) { _2 << _2[-1] + _1[-1] }
          rows.first.last
        }
  recorded_at: Sun, 16 Mar 2025 02:35:46 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/9a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '109'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"6d33e5eb771a428cb90fdd78036a435dfde800b535d854f4ecf37a53d2313d21"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - AFD4:3239E4:3DF0E9:4DD02E:67D62ED2
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:46 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200021-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092547.529539,VS0,VE65
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 85b94b024d05bcd59018c7c0b7cb145394ea0694
      expires:
      - Sun, 16 Mar 2025 02:40:46 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: p$<.sum{|l|r=[s=l.split.map(&:to_i)];r<<s=s.each_cons(2).map{_2-_1}until
        s.all?0;r.sum(&:last)}
  recorded_at: Sun, 16 Mar 2025 02:35:46 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/9b.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '184'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"5a70fa5c87a5117257333f0aff6f40d7289d75f55476ec28bd2237f0b8cbc34d"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FC28:281D7B:F2E11C:133C458:67D62ECF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:46 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200137-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092547.731819,VS0,VE49
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 2467b3083a57e347299f523f1307ca6883d00564
      expires:
      - Sun, 16 Mar 2025 02:40:46 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        p $<.sum { |l|
          series = l.split.map { Integer _1 }
          rows = [series]
          until series.all?(0)
            series = series.each_cons(2).map { _2 - _1 }
            rows << series
          end

          rows.last.unshift 0
          rows.reverse_each.each_cons(2) { _2.unshift(_2[0] - _1[0]) }
          rows.first.first
        }
  recorded_at: Sun, 16 Mar 2025 02:35:46 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '349'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"28b490ad8102456b39dc04798dff3ba3bdb80f8deee5e8ee7365b8926d308e65"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 26A5:1FCE76:37FD39:47DBEB:67D62ED2
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:46 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200053-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092547.916323,VS0,VE68
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f9b07e0060d7e9d36cf7b45e0b06c602e56308fb
      expires:
      - Sun, 16 Mar 2025 02:40:46 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        map = {}
        $<.each_with_index do |row,y|
          row.chomp.chars.each_with_index { |c,x|
            map[x + y.i] = c unless c == '.'
          }
        end

        dirs = { ?L => [1,-1i], ?J => [-1,-1i], ?7 => [-1,1i], ?F => [1,1i], ?- => [-1,1], ?| => [-1i,1i] }

        start = map.key('S')
        map[start] = dirs.key([1,-1,1i,-1i].filter_map { |d| d if map[start+d] and dirs[map[start+d]].any? { -_1==d } })

        pos = start + dirs[map[start]][0]

        enum = Enumerator.produce([start, pos]) do |prev, pos|
          a, b = dirs[map[pos]]
          if pos + a != prev
            [pos, pos + a]
          else
            [pos, pos + b]
          end
        end

        p (enum.find_index { _2 == start }+1)/2
  recorded_at: Sun, 16 Mar 2025 02:35:46 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '234'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"35797f7a5771027c92fb433471b4abdb1f043996aad7f5ccee42bb7e54b423cf"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 281D:2CB9B5:3266BB:4223CC:67D62ED2
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:47 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200139-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092547.124151,VS0,VE40
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7cf959246921ac97a96751fe02f38a631bdb46c9
      expires:
      - Sun, 16 Mar 2025 02:40:47 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        m={}
        $<.zip(1..){|r,y|r.chars.zip(1..){|c,x|m[x+y.i]=c if c!=?.}}
        d={?L=>[1,-1i],?J=>[-1,-1i],?7=>[-1,1i],?F=>[1,1i],?-=>[-1,1],?|=>[-1i,1i]}
        s=m.key'S'
        m[s]=d.key [1,-1,1i,-1i].filter_map{|e|e if d[m[s+e]]&.any? -e}
        o,c=s,1
        p=s+d[m[s]][0]
        until p==s
        a,b=d[m[p]]
        g=p+a!=o ?a:b
        o=p
        p+=g
        c+=1
        end
        p c/2
  recorded_at: Sun, 16 Mar 2025 02:35:47 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10a_golf2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '328'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"59debc8ea3953e3066632e8be468e9fce1b6a5c94f80b7140b8b9e8b6147a05e"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 36A1:26AAC5:F5411D:13619DB:67D62ED1
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:47 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200070-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092547.304538,VS0,VE43
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 85b268580859c37f7c160191e6bab19e23c67d3c
      expires:
      - Sun, 16 Mar 2025 02:40:47 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        board = $<.map { |row|
          row.chomp
        }

        pp board
        sr = board.index { _1.index('S') }
        start = [sr,board[sr].index('S')]

        dirs = { ?L => [1,-1i], ?J => [-1,-1i], ?7 => [-1,1i], ?F => [1,1i], ?- => [-1,1], ?| => [-1i,1i] }

        map[start] = dirs.key([1,-1,1i,-1i].filter_map { |d| d if map[start+d] and dirs[map[start+d]].any? { -_1==d } })

        pos = start + dirs[map[start]][0]

        enum = Enumerator.produce([start, pos]) do |prev, pos|
          a, b = dirs[map[pos]]
          if pos + a != prev
            [pos, pos + a]
          else
            [pos, pos + b]
          end
        end

        p (enum.find_index { _2 == start }+1)/2
  recorded_at: Sun, 16 Mar 2025 02:35:47 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10a_golf3.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '227'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"4d7fc78ddbfb7ba94a2c44237270c9086be1398e2c14f09b03b4592d949da329"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 9544:2963AC:380889:47E504:67D62ED1
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:47 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200037-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092547.487979,VS0,VE46
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 02dca7912887fb2d6cc0b63630082bf290fdf356
      expires:
      - Sun, 16 Mar 2025 02:40:47 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        m=$<.read
        w=(m=~/$/)
        m.tr!"\n",''
        s=m.index'S'
        d={?L=>[1,-w],?J=>[-1,-w],?7=>[-1,w],?F=>[1,w],?-=>[-1,1],?|=>[-w,w]}
        m[s]=d.key [1,-1,w,-w].filter_map{|e|e if d[m[s+e]]&.any? -e}
        p=s+d[m[s]][0];z=[s,p];loop{a,b=d[m[p]];p+=z.any?(p+a)?b:a;break if z.any?(p);z<<p};p z.size/2
  recorded_at: Sun, 16 Mar 2025 02:35:47 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/10a_golf4.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '217'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"6227b299b8cd87a431eda38effbd1bd7ec34b8c6725f12145d41203268633b9e"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 1A08:3041E0:3D9E7F:4D81DC:67D62ED0
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:47 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100034-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092548.668708,VS0,VE41
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 43162ed0c5a4e2268e2062fbe8b3a502a959b506
      expires:
      - Sun, 16 Mar 2025 02:40:47 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: m=$<.read;w=m=~/$/;m.tr!"\n",'';s=m.index'S';d={?L=>[1,-w],?J=>[-1,-w],?7=>[-1,w],?F=>[1,w],?-=>[-1,1],?|=>[-w,w]};m[s]=d.key
        [1,-1,w,-w].filter_map{|e|e if d[m[s+e]]&.any? -e};o,c,p=s,1,s+d[m[s]][0];(a,b=d[m[p]];o,p=p,p+a!=o
        ?p+a:p+b;c+=1)until p==s;p c/2
  recorded_at: Sun, 16 Mar 2025 02:35:47 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/11a.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '278'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"bf64edd1296aa073b5d4bd367ac67ef379c088758f147c1327c47c6bc394c4fe"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FC28:281D7B:F2E1C8:133C534:67D62ED2
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:47 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100166-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092548.850839,VS0,VE41
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 27cd4a36d3c090142a01014a6b9b596c256e8406
      expires:
      - Sun, 16 Mar 2025 02:40:47 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        board = $<.readlines(chomp: true).map(&:chars)

        2.times do
          empty = board.zip(0..).filter_map { |row,i| i if row.all?('.') }
          empty.reverse.each { |i| board[i..i] = [board[i], board[i]] }
          board = board.transpose
        end

        galaxies = []
        board.each_with_index do |row,y|
          row.each_with_index { |c,x|
            galaxies << x + y.i if c == '#'
          }
        end

        p galaxies.combination(2).sum { |a,b| (a-b).rect.sum(&:abs) }
  recorded_at: Sun, 16 Mar 2025 02:35:47 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/eregon/adventofcode/master/2023/11a_golf.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '180'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"889273b109ae20ea62b3db85b7c9f98b6dd7c1145ab6cec34ae5d14297c7ccbe"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 1A08:3041E0:3D9EAA:4D8216:67D62ED3
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:48 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200146-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092548.028343,VS0,VE50
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 758ba57aff316acbf30c72e7657878578866602d
      expires:
      - Sun, 16 Mar 2025 02:40:48 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: b,g=$<.map{_1.chomp.chars},[];2.times{((b=b.transpose).size-1).downto(0){|i|b[i,0]=[b[i]]if
        b[i].all? ?.}};b.zip(0..){|r,y|r.zip(0..){g<<_2+y.i if _1==?#}};p g.combination(2).sum{(_1-_2).rect.sum(&:abs)}
  recorded_at: Sun, 16 Mar 2025 02:35:48 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:48 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"24daa03772d81611da25ef15bb91ad4e6d171d52"
      last-modified:
      - Thu, 13 Mar 2025 04:04:03 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4983'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '17'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D30D:32C106:1701A2:2EB686:67D63904
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"01","path":"2023/01","sha":"a5f62455f142f4a08ef2f21cf417667ba1c5e8bc","size":0,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/01","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/a5f62455f142f4a08ef2f21cf417667ba1c5e8bc","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/a5f62455f142f4a08ef2f21cf417667ba1c5e8bc","html":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/01"}},{"name":"02","path":"2023/02","sha":"9b76239684ec584cc9f4031ca0bef2ff2a06976e","size":0,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/02","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/9b76239684ec584cc9f4031ca0bef2ff2a06976e","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/9b76239684ec584cc9f4031ca0bef2ff2a06976e","html":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/02"}},{"name":"03","path":"2023/03","sha":"14a4c3e3aa6da6797c1ee35b17aef43ad8702538","size":0,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/03","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/14a4c3e3aa6da6797c1ee35b17aef43ad8702538","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/14a4c3e3aa6da6797c1ee35b17aef43ad8702538","html":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/03"}},{"name":"04","path":"2023/04","sha":"0bbecd5975818967372fc20e01e318c64f6523b2","size":0,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/04","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/0bbecd5975818967372fc20e01e318c64f6523b2","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/0bbecd5975818967372fc20e01e318c64f6523b2","html":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/04"}},{"name":"05","path":"2023/05","sha":"b54f1145487fb6fcff34a2a46a9a93ac0425b722","size":0,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/05","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/b54f1145487fb6fcff34a2a46a9a93ac0425b722","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/b54f1145487fb6fcff34a2a46a9a93ac0425b722","html":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/05"}},{"name":"06","path":"2023/06","sha":"d04a6a9dc0470ab635ffb46091e9f84513f0b49e","size":0,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/06","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/d04a6a9dc0470ab635ffb46091e9f84513f0b49e","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/d04a6a9dc0470ab635ffb46091e9f84513f0b49e","html":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/06"}},{"name":"07","path":"2023/07","sha":"b0d1aebb595ea49ff6dd52121f39b8a2dc4ad0b3","size":0,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/07","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/b0d1aebb595ea49ff6dd52121f39b8a2dc4ad0b3","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/b0d1aebb595ea49ff6dd52121f39b8a2dc4ad0b3","html":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/07"}},{"name":"08","path":"2023/08","sha":"fc65bdf3b5a76346d3fb61ddc508a7878b3cdfd9","size":0,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/08","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/fc65bdf3b5a76346d3fb61ddc508a7878b3cdfd9","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/fc65bdf3b5a76346d3fb61ddc508a7878b3cdfd9","html":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/08"}},{"name":"09","path":"2023/09","sha":"b9048aaa970d2042373d1b4f0e9dd81b887301a5","size":0,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/09","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/b9048aaa970d2042373d1b4f0e9dd81b887301a5","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/trees/b9048aaa970d2042373d1b4f0e9dd81b887301a5","html":"https://github.com/erikw/advent-of-code-solutions/tree/main/2023/09"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:48 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:48 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"24daa03772d81611da25ef15bb91ad4e6d171d52"
      last-modified:
      - Thu, 13 Mar 2025 04:04:03 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4982'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '18'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D30E:1EF7BE:161E34:2CDECE:67D63904
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/01/README.txt","sha":"229913b5f7ccbbf7ce05a362befd6bcc7ea22038","size":2505,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/README.txt?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/README.txt","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/229913b5f7ccbbf7ce05a362befd6bcc7ea22038","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/README.txt?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/229913b5f7ccbbf7ce05a362befd6bcc7ea22038","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/README.txt"}},{"name":"input","path":"2023/01/input","sha":"5f52ba375f164f8569f7388f2e489cf7a5ade1cc","size":21760,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/input?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/input","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/5f52ba375f164f8569f7388f2e489cf7a5ade1cc","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/input","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/input?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/5f52ba375f164f8569f7388f2e489cf7a5ade1cc","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/input"}},{"name":"input1.0","path":"2023/01/input1.0","sha":"1ba8437ece59ab9f36ab9aaeb04fccad3bd6641a","size":40,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/input1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/input1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/1ba8437ece59ab9f36ab9aaeb04fccad3bd6641a","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/input1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/input1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/1ba8437ece59ab9f36ab9aaeb04fccad3bd6641a","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/input1.0"}},{"name":"input2.0","path":"2023/01/input2.0","sha":"4316a6b35ee5d49121c678adb53d83fd24545696","size":92,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/input2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/input2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/4316a6b35ee5d49121c678adb53d83fd24545696","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/input2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/input2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/4316a6b35ee5d49121c678adb53d83fd24545696","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/input2.0"}},{"name":"input2.1","path":"2023/01/input2.1","sha":"21829b0ff950d58bcb8ff9ae22dd4359dbd0346d","size":23,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/input2.1?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/input2.1","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/21829b0ff950d58bcb8ff9ae22dd4359dbd0346d","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/input2.1","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/input2.1?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/21829b0ff950d58bcb8ff9ae22dd4359dbd0346d","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/input2.1"}},{"name":"output1.0","path":"2023/01/output1.0","sha":"83248fb9df4a244c41a10fa536045d5a8e759aee","size":3,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/output1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/output1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/83248fb9df4a244c41a10fa536045d5a8e759aee","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/output1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/output1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/83248fb9df4a244c41a10fa536045d5a8e759aee","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/output1.0"}},{"name":"output2.0","path":"2023/01/output2.0","sha":"f3a5e81bae44f61651a487c649ecc541c10861e7","size":3,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/output2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/output2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/f3a5e81bae44f61651a487c649ecc541c10861e7","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/output2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/output2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/f3a5e81bae44f61651a487c649ecc541c10861e7","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/output2.0"}},{"name":"output2.1","path":"2023/01/output2.1","sha":"aaa6442fe902e96a5233b136b973b96a4011fc18","size":2,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/output2.1?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/output2.1","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/aaa6442fe902e96a5233b136b973b96a4011fc18","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/output2.1","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/output2.1?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/aaa6442fe902e96a5233b136b973b96a4011fc18","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/output2.1"}},{"name":"part1.py","path":"2023/01/part1.py","sha":"4c5870b691088d760fe23c96b7b2d0c0ff05c4ca","size":468,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/part1.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/part1.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/4c5870b691088d760fe23c96b7b2d0c0ff05c4ca","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/part1.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/part1.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/4c5870b691088d760fe23c96b7b2d0c0ff05c4ca","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/part1.py"}},{"name":"part2.py","path":"2023/01/part2.py","sha":"cbc5fd61cb8cf475da2f5ace32591dedfbae0c33","size":1110,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/part2.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/part2.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/cbc5fd61cb8cf475da2f5ace32591dedfbae0c33","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/part2.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/part2.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/cbc5fd61cb8cf475da2f5ace32591dedfbae0c33","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/part2.py"}},{"name":"part2_replacement.py","path":"2023/01/part2_replacement.py","sha":"5b1fcc1687e5603426af35f5d5cc1a4dfd7e8c56","size":1089,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/part2_replacement.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/part2_replacement.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/5b1fcc1687e5603426af35f5d5cc1a4dfd7e8c56","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/01/part2_replacement.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/01/part2_replacement.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/5b1fcc1687e5603426af35f5d5cc1a4dfd7e8c56","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/01/part2_replacement.py"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:48 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:48 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"24daa03772d81611da25ef15bb91ad4e6d171d52"
      last-modified:
      - Thu, 13 Mar 2025 04:04:03 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4981'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '19'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D30F:202D6E:198925:33C5B0:67D63904
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/02/README.txt","sha":"3acbdd5c7b808e0ea259def9b6fc5ae1456d7582","size":4363,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/README.txt?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/README.txt","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/3acbdd5c7b808e0ea259def9b6fc5ae1456d7582","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/02/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/README.txt?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/3acbdd5c7b808e0ea259def9b6fc5ae1456d7582","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/README.txt"}},{"name":"input","path":"2023/02/input","sha":"78fabd7c4075b22ef806bf3743b1c891a64d619f","size":10460,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/input?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/input","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/78fabd7c4075b22ef806bf3743b1c891a64d619f","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/02/input","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/input?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/78fabd7c4075b22ef806bf3743b1c891a64d619f","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/input"}},{"name":"input1.0","path":"2023/02/input1.0","sha":"1cd7d3319fcdcb73311d80ce1bf26275b5159d55","size":320,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/input1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/input1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/1cd7d3319fcdcb73311d80ce1bf26275b5159d55","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/02/input1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/input1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/1cd7d3319fcdcb73311d80ce1bf26275b5159d55","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/input1.0"}},{"name":"output1.0","path":"2023/02/output1.0","sha":"301160a93062df23030a69f4b5e4d9bf71866ee9","size":1,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/output1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/output1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/301160a93062df23030a69f4b5e4d9bf71866ee9","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/02/output1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/output1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/301160a93062df23030a69f4b5e4d9bf71866ee9","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/output1.0"}},{"name":"output2.0","path":"2023/02/output2.0","sha":"a3ff295bef92e91c7e42de8a7afd580e5988f533","size":4,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/output2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/output2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/a3ff295bef92e91c7e42de8a7afd580e5988f533","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/02/output2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/output2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/a3ff295bef92e91c7e42de8a7afd580e5988f533","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/output2.0"}},{"name":"part1.py","path":"2023/02/part1.py","sha":"9671448d7a697bbd7b198ad8243d94409f5fb801","size":620,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/part1.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/part1.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/9671448d7a697bbd7b198ad8243d94409f5fb801","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/02/part1.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/part1.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/9671448d7a697bbd7b198ad8243d94409f5fb801","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/part1.py"}},{"name":"part2.py","path":"2023/02/part2.py","sha":"2612cb055459503f7cd70d6cee73deacd43971bf","size":666,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/part2.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/part2.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/2612cb055459503f7cd70d6cee73deacd43971bf","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/02/part2.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/02/part2.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/2612cb055459503f7cd70d6cee73deacd43971bf","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/02/part2.py"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:48 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:49 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"24daa03772d81611da25ef15bb91ad4e6d171d52"
      last-modified:
      - Thu, 13 Mar 2025 04:04:03 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4980'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '20'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D310:228347:16FB01:2E9EF9:67D63904
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/03/README.txt","sha":"cc71c0e6e0f6a5a5932e71cce258f95c5961ab4b","size":3190,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/README.txt?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/README.txt","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/cc71c0e6e0f6a5a5932e71cce258f95c5961ab4b","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/03/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/README.txt?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/cc71c0e6e0f6a5a5932e71cce258f95c5961ab4b","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/README.txt"}},{"name":"input","path":"2023/03/input","sha":"99658d686f6c691bb9b3d49f872aab2148f5aea7","size":19740,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/input?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/input","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/99658d686f6c691bb9b3d49f872aab2148f5aea7","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/03/input","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/input?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/99658d686f6c691bb9b3d49f872aab2148f5aea7","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/input"}},{"name":"input1.0","path":"2023/03/input1.0","sha":"624ea4f22ff79a65dca91e59b2eedf99080c7a14","size":109,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/input1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/input1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/624ea4f22ff79a65dca91e59b2eedf99080c7a14","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/03/input1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/input1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/624ea4f22ff79a65dca91e59b2eedf99080c7a14","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/input1.0"}},{"name":"output1.0","path":"2023/03/output1.0","sha":"95e0fa04556b109fb473d3468cd7c32a9d36ce3d","size":4,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/output1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/output1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/95e0fa04556b109fb473d3468cd7c32a9d36ce3d","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/03/output1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/output1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/95e0fa04556b109fb473d3468cd7c32a9d36ce3d","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/output1.0"}},{"name":"output2.0","path":"2023/03/output2.0","sha":"b33132e0afe3ef66922aee25a1e685048298a517","size":6,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/output2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/output2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/b33132e0afe3ef66922aee25a1e685048298a517","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/03/output2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/output2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/b33132e0afe3ef66922aee25a1e685048298a517","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/output2.0"}},{"name":"part1.py","path":"2023/03/part1.py","sha":"b6f446746f8bb09e76039606c5c678253e5582cb","size":1703,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/part1.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/part1.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/b6f446746f8bb09e76039606c5c678253e5582cb","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/03/part1.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/part1.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/b6f446746f8bb09e76039606c5c678253e5582cb","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/part1.py"}},{"name":"part2.py","path":"2023/03/part2.py","sha":"6f6a880310bcb59448b055354ca5f090f1555765","size":1856,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/part2.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/part2.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/6f6a880310bcb59448b055354ca5f090f1555765","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/03/part2.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/03/part2.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/6f6a880310bcb59448b055354ca5f090f1555765","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/03/part2.py"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:49 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:49 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"24daa03772d81611da25ef15bb91ad4e6d171d52"
      last-modified:
      - Thu, 13 Mar 2025 04:04:03 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4979'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '21'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D311:27AE17:4A509:986FF:67D63905
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/04/README.txt","sha":"e8fafff7ac8af9424835e66ebb8d65ef5d33dd11","size":5626,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/README.txt?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/README.txt","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/e8fafff7ac8af9424835e66ebb8d65ef5d33dd11","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/04/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/README.txt?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/e8fafff7ac8af9424835e66ebb8d65ef5d33dd11","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/README.txt"}},{"name":"input","path":"2023/04/input","sha":"a21cfa8326aebf392cb5acbea7e24765cfacac62","size":23517,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/input?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/input","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/a21cfa8326aebf392cb5acbea7e24765cfacac62","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/04/input","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/input?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/a21cfa8326aebf392cb5acbea7e24765cfacac62","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/input"}},{"name":"input1.0","path":"2023/04/input1.0","sha":"71f208a06f54b06db470e22dffaf02b8901eba4a","size":293,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/input1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/input1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/71f208a06f54b06db470e22dffaf02b8901eba4a","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/04/input1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/input1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/71f208a06f54b06db470e22dffaf02b8901eba4a","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/input1.0"}},{"name":"output1.0","path":"2023/04/output1.0","sha":"ca7bf83ac53a27a2a914bed25e1a07478dd8ef47","size":2,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/output1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/output1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/ca7bf83ac53a27a2a914bed25e1a07478dd8ef47","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/04/output1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/output1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/ca7bf83ac53a27a2a914bed25e1a07478dd8ef47","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/output1.0"}},{"name":"output2.0","path":"2023/04/output2.0","sha":"8580e7b684b14da5d9f84ab4eaf2f5139d508cbe","size":2,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/output2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/output2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/8580e7b684b14da5d9f84ab4eaf2f5139d508cbe","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/04/output2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/output2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/8580e7b684b14da5d9f84ab4eaf2f5139d508cbe","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/output2.0"}},{"name":"part1.py","path":"2023/04/part1.py","sha":"f82add813bada60cf4a0ab98f0a19d800c608f5c","size":562,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/part1.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/part1.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/f82add813bada60cf4a0ab98f0a19d800c608f5c","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/04/part1.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/part1.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/f82add813bada60cf4a0ab98f0a19d800c608f5c","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/part1.py"}},{"name":"part2.py","path":"2023/04/part2.py","sha":"ce640b3ec2a01d3cc85e8c8dcc62cb2ec9eabdcb","size":782,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/part2.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/part2.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/ce640b3ec2a01d3cc85e8c8dcc62cb2ec9eabdcb","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/04/part2.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/04/part2.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/ce640b3ec2a01d3cc85e8c8dcc62cb2ec9eabdcb","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/04/part2.py"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:49 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:49 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"24daa03772d81611da25ef15bb91ad4e6d171d52"
      last-modified:
      - Thu, 13 Mar 2025 04:04:03 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4978'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '22'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D312:D2AA4:1598E5:2BC558:67D63905
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/05/README.txt","sha":"1237700aa6a4aca04e9db2542622a20d6a4004cc","size":6235,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/README.txt?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/README.txt","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/1237700aa6a4aca04e9db2542622a20d6a4004cc","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/05/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/README.txt?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/1237700aa6a4aca04e9db2542622a20d6a4004cc","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/README.txt"}},{"name":"input","path":"2023/05/input","sha":"9e020391952791210cc36832e4fef605bf3f03b5","size":7261,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/input?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/input","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/9e020391952791210cc36832e4fef605bf3f03b5","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/05/input","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/input?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/9e020391952791210cc36832e4fef605bf3f03b5","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/input"}},{"name":"input1.0","path":"2023/05/input1.0","sha":"bd902a4b686b91acedf4238764bed6ce05622911","size":339,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/input1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/input1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/bd902a4b686b91acedf4238764bed6ce05622911","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/05/input1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/input1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/bd902a4b686b91acedf4238764bed6ce05622911","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/input1.0"}},{"name":"output1.0","path":"2023/05/output1.0","sha":"597975b413303a8c3cb711640e290794dc8077a8","size":2,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/output1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/output1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/597975b413303a8c3cb711640e290794dc8077a8","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/05/output1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/output1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/597975b413303a8c3cb711640e290794dc8077a8","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/output1.0"}},{"name":"output2.0","path":"2023/05/output2.0","sha":"abc4eff6ac83026669840d289fce80cc9a42baaa","size":2,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/output2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/output2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/abc4eff6ac83026669840d289fce80cc9a42baaa","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/05/output2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/output2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/abc4eff6ac83026669840d289fce80cc9a42baaa","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/output2.0"}},{"name":"part1.py","path":"2023/05/part1.py","sha":"a6f9192d5aaafad77990448e2fc8f725acfb74a1","size":947,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/part1.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/part1.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/a6f9192d5aaafad77990448e2fc8f725acfb74a1","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/05/part1.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/part1.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/a6f9192d5aaafad77990448e2fc8f725acfb74a1","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/part1.py"}},{"name":"part2.py","path":"2023/05/part2.py","sha":"8a6c0553981d8bf1f9652922760b651db2dc09d9","size":3898,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/part2.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/part2.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/8a6c0553981d8bf1f9652922760b651db2dc09d9","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/05/part2.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/part2.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/8a6c0553981d8bf1f9652922760b651db2dc09d9","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/part2.py"}},{"name":"part2_cached.py","path":"2023/05/part2_cached.py","sha":"9a20e8e0221d90119ab30f7253aaaa3b78c4d7c3","size":1648,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/part2_cached.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/part2_cached.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/9a20e8e0221d90119ab30f7253aaaa3b78c4d7c3","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/05/part2_cached.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/part2_cached.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/9a20e8e0221d90119ab30f7253aaaa3b78c4d7c3","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/part2_cached.py"}},{"name":"part2_dp.py","path":"2023/05/part2_dp.py","sha":"362d73673b601778e854343df5250f04c30ef308","size":2004,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/part2_dp.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/part2_dp.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/362d73673b601778e854343df5250f04c30ef308","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/05/part2_dp.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/part2_dp.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/362d73673b601778e854343df5250f04c30ef308","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/part2_dp.py"}},{"name":"part2_greedy.py","path":"2023/05/part2_greedy.py","sha":"929d2e2201bfe6d4b2cfbb323eb0c23697aa29ef","size":1372,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/part2_greedy.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/part2_greedy.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/929d2e2201bfe6d4b2cfbb323eb0c23697aa29ef","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/05/part2_greedy.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/05/part2_greedy.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/929d2e2201bfe6d4b2cfbb323eb0c23697aa29ef","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/05/part2_greedy.py"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:49 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:49 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"24daa03772d81611da25ef15bb91ad4e6d171d52"
      last-modified:
      - Thu, 13 Mar 2025 04:04:03 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4977'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '23'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D313:2B55FC:17A6EA:30019F:67D63905
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/06/README.txt","sha":"b6643187011d871b76ec7cbdf90015d33ddf66ee","size":5209,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/README.txt?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/README.txt","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/b6643187011d871b76ec7cbdf90015d33ddf66ee","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/06/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/README.txt?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/b6643187011d871b76ec7cbdf90015d33ddf66ee","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/README.txt"}},{"name":"input","path":"2023/06/input","sha":"88bf51679bc1ba9755b090bf6421a5eb78391571","size":74,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/input?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/input","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/88bf51679bc1ba9755b090bf6421a5eb78391571","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/06/input","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/input?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/88bf51679bc1ba9755b090bf6421a5eb78391571","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/input"}},{"name":"input1.0","path":"2023/06/input1.0","sha":"b39f49dac2b326650f1ad821a709cfeb7a4a103a","size":43,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/input1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/input1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/b39f49dac2b326650f1ad821a709cfeb7a4a103a","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/06/input1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/input1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/b39f49dac2b326650f1ad821a709cfeb7a4a103a","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/input1.0"}},{"name":"lib.py","path":"2023/06/lib.py","sha":"73cd28b212a4fc057d561cd6659cc18bc8ebb951","size":1752,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/lib.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/lib.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/73cd28b212a4fc057d561cd6659cc18bc8ebb951","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/06/lib.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/lib.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/73cd28b212a4fc057d561cd6659cc18bc8ebb951","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/lib.py"}},{"name":"output1.0","path":"2023/06/output1.0","sha":"022e7e6ca79f8a447d3dd426089348521ccb7e0c","size":3,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/output1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/output1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/022e7e6ca79f8a447d3dd426089348521ccb7e0c","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/06/output1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/output1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/022e7e6ca79f8a447d3dd426089348521ccb7e0c","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/output1.0"}},{"name":"output2.0","path":"2023/06/output2.0","sha":"84bd5de9221e40195a6f7ffb80162d498072a153","size":5,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/output2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/output2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/84bd5de9221e40195a6f7ffb80162d498072a153","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/06/output2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/output2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/84bd5de9221e40195a6f7ffb80162d498072a153","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/output2.0"}},{"name":"part1.py","path":"2023/06/part1.py","sha":"71afbd5fad93de42e92bd4cd2d65ecd431b8e4a7","size":383,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/part1.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/part1.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/71afbd5fad93de42e92bd4cd2d65ecd431b8e4a7","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/06/part1.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/part1.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/71afbd5fad93de42e92bd4cd2d65ecd431b8e4a7","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/part1.py"}},{"name":"part2.py","path":"2023/06/part2.py","sha":"aa0f8272d5b897300513b664294f02287d1f3b41","size":334,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/part2.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/part2.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/aa0f8272d5b897300513b664294f02287d1f3b41","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/06/part2.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/06/part2.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/aa0f8272d5b897300513b664294f02287d1f3b41","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/06/part2.py"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:49 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:50 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"24daa03772d81611da25ef15bb91ad4e6d171d52"
      last-modified:
      - Thu, 13 Mar 2025 04:04:03 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4976'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '24'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D314:1C3D2F:17D79B:305A01:67D63905
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/07/README.txt","sha":"cacc8a597787cbe15966b0db4dd00a4fe9e0a67a","size":5975,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/README.txt?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/README.txt","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/cacc8a597787cbe15966b0db4dd00a4fe9e0a67a","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/07/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/README.txt?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/cacc8a597787cbe15966b0db4dd00a4fe9e0a67a","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/README.txt"}},{"name":"input","path":"2023/07/input","sha":"00fdfcc7b908e2bb80ecc2e88b33c771c7e3cb09","size":9893,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/input?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/input","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/00fdfcc7b908e2bb80ecc2e88b33c771c7e3cb09","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/07/input","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/input?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/00fdfcc7b908e2bb80ecc2e88b33c771c7e3cb09","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/input"}},{"name":"input1.0","path":"2023/07/input1.0","sha":"bf2815e0a2df4594f28f434891d8f750b30c61c6","size":48,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/input1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/input1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/bf2815e0a2df4594f28f434891d8f750b30c61c6","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/07/input1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/input1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/bf2815e0a2df4594f28f434891d8f750b30c61c6","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/input1.0"}},{"name":"output1.0","path":"2023/07/output1.0","sha":"151f69cb2acf64a5f0543a158dfcbe6218a0908b","size":4,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/output1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/output1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/151f69cb2acf64a5f0543a158dfcbe6218a0908b","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/07/output1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/output1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/151f69cb2acf64a5f0543a158dfcbe6218a0908b","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/output1.0"}},{"name":"output2.0","path":"2023/07/output2.0","sha":"23a009918d9960a5bb9aeaf47befb3d9d9e63a02","size":4,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/output2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/output2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/23a009918d9960a5bb9aeaf47befb3d9d9e63a02","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/07/output2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/output2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/23a009918d9960a5bb9aeaf47befb3d9d9e63a02","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/output2.0"}},{"name":"part1.py","path":"2023/07/part1.py","sha":"60c8cd7a307b5f3561c8fc1be0aa1601597b48e4","size":2593,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/part1.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/part1.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/60c8cd7a307b5f3561c8fc1be0aa1601597b48e4","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/07/part1.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/part1.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/60c8cd7a307b5f3561c8fc1be0aa1601597b48e4","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/part1.py"}},{"name":"part2.py","path":"2023/07/part2.py","sha":"f1c4934e5b75ba98a8537faed920197a4b2a0bda","size":3357,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/part2.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/part2.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/f1c4934e5b75ba98a8537faed920197a4b2a0bda","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/07/part2.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/07/part2.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/f1c4934e5b75ba98a8537faed920197a4b2a0bda","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/07/part2.py"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:50 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:50 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"24daa03772d81611da25ef15bb91ad4e6d171d52"
      last-modified:
      - Thu, 13 Mar 2025 04:04:03 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4975'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '25'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D315:DA5D0:162F34:2CFF29:67D63906
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/08/README.txt","sha":"b08c4588b779229b76d3838fba8d2628fb98d2f4","size":3974,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/README.txt?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/README.txt","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/b08c4588b779229b76d3838fba8d2628fb98d2f4","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/README.txt?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/b08c4588b779229b76d3838fba8d2628fb98d2f4","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/README.txt"}},{"name":"input","path":"2023/08/input","sha":"8bc52c0d58ef36de98aacf41a1df3323dcbb0e69","size":12892,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/input?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/input","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/8bc52c0d58ef36de98aacf41a1df3323dcbb0e69","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/input","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/input?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/8bc52c0d58ef36de98aacf41a1df3323dcbb0e69","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/input"}},{"name":"input1.0","path":"2023/08/input1.0","sha":"59e2d476167d9471938073a75854c23f0a7b2c78","size":122,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/input1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/input1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/59e2d476167d9471938073a75854c23f0a7b2c78","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/input1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/input1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/59e2d476167d9471938073a75854c23f0a7b2c78","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/input1.0"}},{"name":"input1.1","path":"2023/08/input1.1","sha":"34ffa8a308ac07c08c73d151939d29a723ce4d8d","size":55,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/input1.1?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/input1.1","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/34ffa8a308ac07c08c73d151939d29a723ce4d8d","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/input1.1","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/input1.1?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/34ffa8a308ac07c08c73d151939d29a723ce4d8d","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/input1.1"}},{"name":"input2.0","path":"2023/08/input2.0","sha":"a8e2c9892de16ec81439bdf6e60743b88a6e6ada","size":139,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/input2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/input2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/a8e2c9892de16ec81439bdf6e60743b88a6e6ada","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/input2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/input2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/a8e2c9892de16ec81439bdf6e60743b88a6e6ada","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/input2.0"}},{"name":"output1.0","path":"2023/08/output1.0","sha":"d8263ee9860594d2806b0dfd1bfd17528b0ba2a4","size":1,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/output1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/output1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/d8263ee9860594d2806b0dfd1bfd17528b0ba2a4","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/output1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/output1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/d8263ee9860594d2806b0dfd1bfd17528b0ba2a4","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/output1.0"}},{"name":"output1.1","path":"2023/08/output1.1","sha":"62f9457511f879886bb7728c986fe10b0ece6bcb","size":1,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/output1.1?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/output1.1","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/62f9457511f879886bb7728c986fe10b0ece6bcb","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/output1.1","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/output1.1?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/62f9457511f879886bb7728c986fe10b0ece6bcb","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/output1.1"}},{"name":"output2.0","path":"2023/08/output2.0","sha":"62f9457511f879886bb7728c986fe10b0ece6bcb","size":1,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/output2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/output2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/62f9457511f879886bb7728c986fe10b0ece6bcb","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/output2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/output2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/62f9457511f879886bb7728c986fe10b0ece6bcb","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/output2.0"}},{"name":"part1.py","path":"2023/08/part1.py","sha":"c95924b1a08c36e67f419533af96e01dcadf6f53","size":825,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/part1.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/part1.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/c95924b1a08c36e67f419533af96e01dcadf6f53","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/part1.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/part1.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/c95924b1a08c36e67f419533af96e01dcadf6f53","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/part1.py"}},{"name":"part2.py","path":"2023/08/part2.py","sha":"e169b0e3a4738614526587fa6a7e5a5a8fb977a1","size":1410,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/part2.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/part2.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/e169b0e3a4738614526587fa6a7e5a5a8fb977a1","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/part2.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/part2.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/e169b0e3a4738614526587fa6a7e5a5a8fb977a1","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/part2.py"}},{"name":"part2_bf.py","path":"2023/08/part2_bf.py","sha":"9251323ee0c62d0f2bdca4ad47b4d833a886a4be","size":1616,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/part2_bf.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/part2_bf.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/9251323ee0c62d0f2bdca4ad47b4d833a886a4be","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/part2_bf.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/part2_bf.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/9251323ee0c62d0f2bdca4ad47b4d833a886a4be","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/part2_bf.py"}},{"name":"part2_skip_cycle.py","path":"2023/08/part2_skip_cycle.py","sha":"65a718f978fa06d2ed380d086b43b4311e693438","size":1410,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/part2_skip_cycle.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/part2_skip_cycle.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/65a718f978fa06d2ed380d086b43b4311e693438","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/part2_skip_cycle.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/part2_skip_cycle.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/65a718f978fa06d2ed380d086b43b4311e693438","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/part2_skip_cycle.py"}},{"name":"part2_smt.py","path":"2023/08/part2_smt.py","sha":"5c2a66e612c088285889997c3b1c31827dffc0fe","size":1396,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/part2_smt.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/part2_smt.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/5c2a66e612c088285889997c3b1c31827dffc0fe","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/08/part2_smt.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/08/part2_smt.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/5c2a66e612c088285889997c3b1c31827dffc0fe","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/08/part2_smt.py"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:50 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:50 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"24daa03772d81611da25ef15bb91ad4e6d171d52"
      last-modified:
      - Thu, 13 Mar 2025 04:04:03 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4974'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '26'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D316:1CD21B:19A1B3:33E0E9:67D63906
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/09/README.txt","sha":"8dcb30938bf28260ec309ff9142a3e83a12738f5","size":5280,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/README.txt?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/README.txt","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/8dcb30938bf28260ec309ff9142a3e83a12738f5","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/09/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/README.txt?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/8dcb30938bf28260ec309ff9142a3e83a12738f5","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/README.txt"}},{"name":"input","path":"2023/09/input","sha":"0a7ac67c6b32f250be9f7320bf283fdc8b471c87","size":21272,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/input?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/input","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/0a7ac67c6b32f250be9f7320bf283fdc8b471c87","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/09/input","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/input?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/0a7ac67c6b32f250be9f7320bf283fdc8b471c87","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/input"}},{"name":"input1.0","path":"2023/09/input1.0","sha":"70c5595c63c49e57e916b02c6c61c1fef981400e","size":46,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/input1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/input1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/70c5595c63c49e57e916b02c6c61c1fef981400e","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/09/input1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/input1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/70c5595c63c49e57e916b02c6c61c1fef981400e","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/input1.0"}},{"name":"output1.0","path":"2023/09/output1.0","sha":"c9c41087e2102d5af5f3ea8aa420e47ad3085707","size":3,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/output1.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/output1.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/c9c41087e2102d5af5f3ea8aa420e47ad3085707","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/09/output1.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/output1.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/c9c41087e2102d5af5f3ea8aa420e47ad3085707","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/output1.0"}},{"name":"output2.0","path":"2023/09/output2.0","sha":"d8263ee9860594d2806b0dfd1bfd17528b0ba2a4","size":1,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/output2.0?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/output2.0","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/d8263ee9860594d2806b0dfd1bfd17528b0ba2a4","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/09/output2.0","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/output2.0?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/d8263ee9860594d2806b0dfd1bfd17528b0ba2a4","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/output2.0"}},{"name":"part1.py","path":"2023/09/part1.py","sha":"fd143fbda37da3d0ea48128a421fc5f24b59c270","size":729,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/part1.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/part1.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/fd143fbda37da3d0ea48128a421fc5f24b59c270","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/09/part1.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/part1.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/fd143fbda37da3d0ea48128a421fc5f24b59c270","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/part1.py"}},{"name":"part2.py","path":"2023/09/part2.py","sha":"2a36a1c81283cb772eeed74b9c6c0fc614c80c75","size":732,"url":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/part2.py?ref=main","html_url":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/part2.py","git_url":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/2a36a1c81283cb772eeed74b9c6c0fc614c80c75","download_url":"https://raw.githubusercontent.com/erikw/advent-of-code-solutions/main/2023/09/part2.py","type":"file","_links":{"self":"https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/09/part2.py?ref=main","git":"https://api.github.com/repos/erikw/advent-of-code-solutions/git/blobs/2a36a1c81283cb772eeed74b9c6c0fc614c80c75","html":"https://github.com/erikw/advent-of-code-solutions/blob/main/2023/09/part2.py"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:50 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:50 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4973'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '27'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D317:1F5CF4:18C2DD:323F79:67D63906
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:50 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/11
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:50 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4972'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '28'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D318:202D6E:198E4D:33D07E:67D63906
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:50 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/12
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:51 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4971'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '29'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D319:2A4558:15004C:2AABFC:67D63907
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:51 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/13
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:51 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4970'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '30'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D31A:D2AA4:159CD2:2BCD85:67D63907
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:51 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/14
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:51 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4969'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '31'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D31B:1EF7BE:162589:2CEE13:67D63907
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:51 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/15
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:51 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4968'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '32'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D31C:32C106:17097C:2EC686:67D63907
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:51 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/16
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:52 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4967'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '33'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D31D:32A7EA:16B384:2E0FE1:67D63908
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:52 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/17
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:52 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4966'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '34'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D31E:228347:1702AB:2EAEE5:67D63908
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:52 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/18
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:52 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4965'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '35'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D31F:2C071D:1932BE:33182D:67D63908
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:52 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/19
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:52 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4964'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '36'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D320:32A7EA:16B553:2E138C:67D63908
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:52 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/20
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:53 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4963'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '37'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D321:2A4558:1504FD:2AB56D:67D63908
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:53 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/21
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:53 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4962'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '38'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D322:D2AA4:15A15C:2BD691:67D63909
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:53 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/22
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:53 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4961'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '39'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D323:210796:17F327:309942:67D63909
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:53 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/23
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:53 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4960'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '40'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D324:202D6E:19954E:33DEB9:67D63909
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:53 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/24
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:54 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4959'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '41'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D325:38B330:16AC2F:2DFC96:67D63909
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:54 GMT
- request:
    method: get
    uri: https://api.github.com/repos/erikw/advent-of-code-solutions/contents/2023/25
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 404
      message: Not Found
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:54 GMT
      content-type:
      - application/json; charset=utf-8
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4958'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '42'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      vary:
      - Accept-Encoding, Accept, X-Requested-With
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D326:2B55FC:17B363:3019CF:67D6390A
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '{"message":"Not Found","documentation_url":"https://docs.github.com/rest/repos/contents#get-repository-content","status":"404"}'
  recorded_at: Sun, 16 Mar 2025 02:35:54 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:54 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4957'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '43'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D327:1EF7BE:162C53:2CFBD2:67D6390A
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"day-01","path":"2023/day-01","sha":"2c766d5a9cf0b435cd1447b5df8bf09463ab250f","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-01","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/2c766d5a9cf0b435cd1447b5df8bf09463ab250f","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/2c766d5a9cf0b435cd1447b5df8bf09463ab250f","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-01"}},{"name":"day-02","path":"2023/day-02","sha":"a3c3d52c7cd1ee7a24d70715f7fb32b4ee87e2fe","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-02","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/a3c3d52c7cd1ee7a24d70715f7fb32b4ee87e2fe","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/a3c3d52c7cd1ee7a24d70715f7fb32b4ee87e2fe","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-02"}},{"name":"day-03","path":"2023/day-03","sha":"dc4561fe70f8ef91e3c41c414b4880492a815293","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-03","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/dc4561fe70f8ef91e3c41c414b4880492a815293","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/dc4561fe70f8ef91e3c41c414b4880492a815293","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-03"}},{"name":"day-04","path":"2023/day-04","sha":"a7cf607e99889d0356bfd64a06883bb58d2b10cb","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-04","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/a7cf607e99889d0356bfd64a06883bb58d2b10cb","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/a7cf607e99889d0356bfd64a06883bb58d2b10cb","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-04"}},{"name":"day-05","path":"2023/day-05","sha":"b094a8bba9864cfa35d62eeabdef44df6e59c78a","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-05","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/b094a8bba9864cfa35d62eeabdef44df6e59c78a","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/b094a8bba9864cfa35d62eeabdef44df6e59c78a","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-05"}},{"name":"day-06","path":"2023/day-06","sha":"e5a53617d8325f01a69dd0344791533595dd270e","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-06","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/e5a53617d8325f01a69dd0344791533595dd270e","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/e5a53617d8325f01a69dd0344791533595dd270e","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-06"}},{"name":"day-07","path":"2023/day-07","sha":"d4d6986fd75158f42f3774cfa2587fa03d04b1b4","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-07","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/d4d6986fd75158f42f3774cfa2587fa03d04b1b4","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/d4d6986fd75158f42f3774cfa2587fa03d04b1b4","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-07"}},{"name":"day-08","path":"2023/day-08","sha":"7269bfb6f76573f56fe9bcd56c16f0fdbc6519b8","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-08","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/7269bfb6f76573f56fe9bcd56c16f0fdbc6519b8","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/7269bfb6f76573f56fe9bcd56c16f0fdbc6519b8","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-08"}},{"name":"day-09","path":"2023/day-09","sha":"3dfc03d8e8b148808c892cc85027c5949ed16e01","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-09","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/3dfc03d8e8b148808c892cc85027c5949ed16e01","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/3dfc03d8e8b148808c892cc85027c5949ed16e01","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-09"}},{"name":"day-10","path":"2023/day-10","sha":"9ee5f481b9142b6138667226a162fd197f578a6c","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-10","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/9ee5f481b9142b6138667226a162fd197f578a6c","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/9ee5f481b9142b6138667226a162fd197f578a6c","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-10"}},{"name":"day-11","path":"2023/day-11","sha":"10fc6443a8cbc27ebf1b6811dfbc794bfb0c807e","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-11","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/10fc6443a8cbc27ebf1b6811dfbc794bfb0c807e","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/10fc6443a8cbc27ebf1b6811dfbc794bfb0c807e","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-11"}},{"name":"day-12","path":"2023/day-12","sha":"e5df06376012554bd928a51653672ecf889f3903","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-12","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/e5df06376012554bd928a51653672ecf889f3903","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/e5df06376012554bd928a51653672ecf889f3903","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-12"}},{"name":"day-13","path":"2023/day-13","sha":"69ccd989119fd0a1205dcb293fa2c4324cabfc6b","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-13","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/69ccd989119fd0a1205dcb293fa2c4324cabfc6b","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/69ccd989119fd0a1205dcb293fa2c4324cabfc6b","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-13"}},{"name":"day-14","path":"2023/day-14","sha":"f3dad22c1cfbb8bcede307372cc603236c08f145","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-14","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/f3dad22c1cfbb8bcede307372cc603236c08f145","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/f3dad22c1cfbb8bcede307372cc603236c08f145","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-14"}},{"name":"day-15","path":"2023/day-15","sha":"fa55b662d1804fd37d9e21a99279a7af7eb66032","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-15","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/fa55b662d1804fd37d9e21a99279a7af7eb66032","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/fa55b662d1804fd37d9e21a99279a7af7eb66032","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-15"}},{"name":"day-16","path":"2023/day-16","sha":"26ff324f6fa2b84146ee1547d56bdad474320612","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-16","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/26ff324f6fa2b84146ee1547d56bdad474320612","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/26ff324f6fa2b84146ee1547d56bdad474320612","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-16"}},{"name":"day-17","path":"2023/day-17","sha":"fd7d46146d5fa9ce53c7dfd584c78cf59c14dcf5","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-17?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-17","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/fd7d46146d5fa9ce53c7dfd584c78cf59c14dcf5","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-17?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/fd7d46146d5fa9ce53c7dfd584c78cf59c14dcf5","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-17"}},{"name":"day-18","path":"2023/day-18","sha":"befa416606a49db8d5191d2fe9e4a7a88f941c4b","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-18","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/befa416606a49db8d5191d2fe9e4a7a88f941c4b","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/befa416606a49db8d5191d2fe9e4a7a88f941c4b","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-18"}},{"name":"day-19","path":"2023/day-19","sha":"3973fe1af1467e0024eb8cb9de051127bcf21752","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-19","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/3973fe1af1467e0024eb8cb9de051127bcf21752","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/3973fe1af1467e0024eb8cb9de051127bcf21752","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-19"}},{"name":"day-20","path":"2023/day-20","sha":"e70e5d596064082b757fde6120367aad933a5d3d","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-20","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/e70e5d596064082b757fde6120367aad933a5d3d","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/e70e5d596064082b757fde6120367aad933a5d3d","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-20"}},{"name":"day-21","path":"2023/day-21","sha":"d49791fd35a8ee330a1e554d5235325fc6de3ef9","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-21","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/d49791fd35a8ee330a1e554d5235325fc6de3ef9","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/d49791fd35a8ee330a1e554d5235325fc6de3ef9","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-21"}},{"name":"day-22","path":"2023/day-22","sha":"f2fd9e838eac81042887ea723e85b82c13784145","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-22?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-22","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/f2fd9e838eac81042887ea723e85b82c13784145","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-22?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/f2fd9e838eac81042887ea723e85b82c13784145","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-22"}},{"name":"day-23","path":"2023/day-23","sha":"bf0832884ddaa154dc6f73863d8b68fb46b71553","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-23","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/bf0832884ddaa154dc6f73863d8b68fb46b71553","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/bf0832884ddaa154dc6f73863d8b68fb46b71553","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-23"}},{"name":"day-24","path":"2023/day-24","sha":"c1cf1e800681bd8c322a2d815b82359b7432800e","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-24","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/c1cf1e800681bd8c322a2d815b82359b7432800e","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/c1cf1e800681bd8c322a2d815b82359b7432800e","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-24"}},{"name":"day-25","path":"2023/day-25","sha":"989e03c4a16f37c0e8230ee7ef2a2341a2551221","size":0,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-25?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-25","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/989e03c4a16f37c0e8230ee7ef2a2341a2551221","download_url":null,"type":"dir","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-25?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/trees/989e03c4a16f37c0e8230ee7ef2a2341a2551221","html":"https://github.com/gchan/advent-of-code-ruby/tree/main/2023/day-25"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:54 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:54 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4956'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '44'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D328:B9773:197C00B:3395648:67D6390A
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-01/README.txt","sha":"27593ac7479a5f6af806545c8b846c717a67640b","size":2449,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-01/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/27593ac7479a5f6af806545c8b846c717a67640b","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-01/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/27593ac7479a5f6af806545c8b846c717a67640b","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-01/README.txt"}},{"name":"day-01-input.txt","path":"2023/day-01/day-01-input.txt","sha":"6deebe049edb06c404481c91b6ddd3b607965bf4","size":21783,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01/day-01-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-01/day-01-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/6deebe049edb06c404481c91b6ddd3b607965bf4","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-01/day-01-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01/day-01-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/6deebe049edb06c404481c91b6ddd3b607965bf4","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-01/day-01-input.txt"}},{"name":"day-01-part-1.rb","path":"2023/day-01/day-01-part-1.rb","sha":"17169ff7b7a7b0983d34d45c9b2ed11a7793df93","size":209,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01/day-01-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-01/day-01-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/17169ff7b7a7b0983d34d45c9b2ed11a7793df93","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-01/day-01-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01/day-01-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/17169ff7b7a7b0983d34d45c9b2ed11a7793df93","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-01/day-01-part-1.rb"}},{"name":"day-01-part-2.rb","path":"2023/day-01/day-01-part-2.rb","sha":"28824a7407296e0a6bd25d2f1ecea8462ec5d899","size":638,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01/day-01-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-01/day-01-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/28824a7407296e0a6bd25d2f1ecea8462ec5d899","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-01/day-01-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-01/day-01-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/28824a7407296e0a6bd25d2f1ecea8462ec5d899","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-01/day-01-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:54 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-01/day-01-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '178'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"1a09d9ca0e74d38356e7167d22b55a6aaeded6ddc41374234af6af1f8141060a"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 434D:1FCE76:397B4E:49D658:67D632AE
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:54 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100106-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092555.881252,VS0,VE48
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 4fe2a167a95f0c1ffeadca93cd892ecf62b1d684
      expires:
      - Sun, 16 Mar 2025 02:40:54 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-01-input.txt", __FILE__)
        input     = File.read(file_path)

        input
          .split("\n")
          .sum { _1.scan(/\d/).values_at(0, -1).join.to_i }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:54 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-01/day-01-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '426'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"f661982199879fabf3f79c295dab5b40b6f9e112e2abf752723471cacdd497f5"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 9406:2D5530:3DF09E:4E5273:67D632AE
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:55 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200085-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092555.079119,VS0,VE63
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f305eaf021511fb56bd6ffee661dd771ecee31d5
      expires:
      - Sun, 16 Mar 2025 02:40:55 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-01-input.txt", __FILE__)
        input     = File.read(file_path)

        # We don't need a fany Hash here for the given input. We could
        # make do with an Array and call `DIGITS.index(match)&.+(1)`
        # instead of `DIGITS[match]`
        DIGITS = %w(one two three four five six seven eight nine)
          .map.with_index
          .to_a.to_h
          .transform_values { _1 + 1 }

        # Postive lookahead assertion regex
        input
          .split("\n")
          .sum {
            _1.scan(/(?=(#{DIGITS.keys.join("|")}|\d))/)
              .flatten
              .values_at(0, -1)
              .map { |match| DIGITS[match] || match }
              .join
              .to_i
          }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:55 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:55 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4955'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '45'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D32B:1EF7BE:162E69:2D0017:67D6390B
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-02/README.txt","sha":"8667208dcd3b0d7407d7fd5955d6b3ec6f0032cf","size":4328,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-02/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/8667208dcd3b0d7407d7fd5955d6b3ec6f0032cf","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-02/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/8667208dcd3b0d7407d7fd5955d6b3ec6f0032cf","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-02/README.txt"}},{"name":"day-02-input.txt","path":"2023/day-02/day-02-input.txt","sha":"bd35f76a0d09ac7f0ca04111c562ed2965c7bea9","size":9837,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02/day-02-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-02/day-02-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/bd35f76a0d09ac7f0ca04111c562ed2965c7bea9","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-02/day-02-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02/day-02-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/bd35f76a0d09ac7f0ca04111c562ed2965c7bea9","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-02/day-02-input.txt"}},{"name":"day-02-part-1.rb","path":"2023/day-02/day-02-part-1.rb","sha":"733a829139c6771c408ae0fc6491dd079c6c9a07","size":486,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02/day-02-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-02/day-02-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/733a829139c6771c408ae0fc6491dd079c6c9a07","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-02/day-02-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02/day-02-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/733a829139c6771c408ae0fc6491dd079c6c9a07","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-02/day-02-part-1.rb"}},{"name":"day-02-part-2.rb","path":"2023/day-02/day-02-part-2.rb","sha":"325add8035463619e624d1254503a9a887ab9107","size":357,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02/day-02-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-02/day-02-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/325add8035463619e624d1254503a9a887ab9107","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-02/day-02-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-02/day-02-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/325add8035463619e624d1254503a9a887ab9107","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-02/day-02-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:55 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-02/day-02-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '291'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"c262d1dee3d2e9f5053b10b20e9a001dc294cd25e641ebaff15e3d69e4d6a9cf"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 4AAB:1EE71F:2762F8:344C18:67D632AF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:55 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100057-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092555.488479,VS0,VE62
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 4d1e9754addda2c03c69440bf818c23b6cd36f74
      expires:
      - Sun, 16 Mar 2025 02:40:55 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-02-input.txt", __FILE__)
        input     = File.read(file_path)

        RED = 12
        GREEN = 13
        BLUE = 14

        input
          .each_line
          .sum {
            blue  = _1.scan(/(\d+) b/).flatten.map(&:to_i).max
            red   = _1.scan(/(\d+) r/).flatten.map(&:to_i).max
            green = _1.scan(/(\d+) g/).flatten.map(&:to_i).max

            if blue > BLUE || red > RED || green > GREEN
              0
            else
              _1.scan(/Game (\d*)/).flatten.first.to_i
            end
          }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:55 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-02/day-02-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '220'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"082116e53386b94b94627da1b9f5244f3d31228551b46073ee3d6ab27f18cce2"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 9C37:5E8A2:F10A54:1325775:67D632AF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:55 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100129-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092556.687721,VS0,VE66
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 97fc4ab3fe9ff1cc38cc4d3eae66a1d475b3ed36
      expires:
      - Sun, 16 Mar 2025 02:40:55 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-02-input.txt", __FILE__)
        input     = File.read(file_path)

        input
          .each_line
          .sum {
            blue  = _1.scan(/(\d+) b/).flatten.map(&:to_i).max
            red   = _1.scan(/(\d+) r/).flatten.map(&:to_i).max
            green = _1.scan(/(\d+) g/).flatten.map(&:to_i).max

            blue * red * green
          }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:55 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:55 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4954'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '46'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D32E:C69B8:1731EC:2F0B64:67D6390B
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-03/README.txt","sha":"ef24060016e9f77f1449b6d9b9f18ca17417506e","size":3129,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-03/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ef24060016e9f77f1449b6d9b9f18ca17417506e","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-03/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ef24060016e9f77f1449b6d9b9f18ca17417506e","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-03/README.txt"}},{"name":"day-03-input.txt","path":"2023/day-03/day-03-input.txt","sha":"c1073d999bbf1e7caccb042573274e8168ee36a7","size":19740,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03/day-03-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-03/day-03-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c1073d999bbf1e7caccb042573274e8168ee36a7","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-03/day-03-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03/day-03-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c1073d999bbf1e7caccb042573274e8168ee36a7","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-03/day-03-input.txt"}},{"name":"day-03-part-1.rb","path":"2023/day-03/day-03-part-1.rb","sha":"f4f3052d21fb3b8386ab3f2184186e75ee4ff1a0","size":550,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03/day-03-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-03/day-03-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/f4f3052d21fb3b8386ab3f2184186e75ee4ff1a0","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-03/day-03-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03/day-03-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/f4f3052d21fb3b8386ab3f2184186e75ee4ff1a0","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-03/day-03-part-1.rb"}},{"name":"day-03-part-2.rb","path":"2023/day-03/day-03-part-2.rb","sha":"418fa257918066dad1cc43b2233912c2c630a888","size":649,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03/day-03-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-03/day-03-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/418fa257918066dad1cc43b2233912c2c630a888","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-03/day-03-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-03/day-03-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/418fa257918066dad1cc43b2233912c2c630a888","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-03/day-03-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:55 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-03/day-03-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '355'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"07f7c77548e2aa6fdb07e999d44ace137b365541ee02c42414fc8265b34ae744"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 9A06:36AA50:2B0FF8:3835B7:67D632B0
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:56 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200178-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092556.118098,VS0,VE47
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f18c47234e216537167654fb540606be712c5722
      expires:
      - Sun, 16 Mar 2025 02:40:56 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |+
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-03-input.txt", __FILE__)
        input     = File.read(file_path)

        numbers = {}

        lines = input.each_line.to_a.map(&:strip)

        lines.each_with_index do |line, y|
          line.scan(/\d+/) do
            numbers[[Regexp.last_match.begin(0), y]] = _1
          end
        end

        numbers.sum { |(x, y), num|
          min_x = [x - 1, 0].max
          min_y = [y - 1, 0].max

          max_x = x + num.length
          max_y = y + 1

          lines[min_y..max_y]
            .map { _1[min_x..max_x] }
            .join
            .match?(/[^\d\.]/)
            .then { _1 ? num.to_i : 0 }
        }
        .tap { puts _1 }

  recorded_at: Sun, 16 Mar 2025 02:35:56 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-03/day-03-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '368'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"9b9d826ffe3f411678de15103cdbd127b7449ca6bdb97fb0cbd4c517799a61af"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - B50F:204995:250D47:31F046:67D632B1
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:56 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200075-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092556.303890,VS0,VE64
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f028b80ec63a717214b21f525a93df0ffd74c42f
      expires:
      - Sun, 16 Mar 2025 02:40:56 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-03-input.txt", __FILE__)
        input     = File.read(file_path)

        gears = {}
        numbers = {}

        input.each_line.with_index do |line, y|
          line.scan(/\*/) do
            gears[[Regexp.last_match.begin(0), y]] = []
          end

          line.scan(/\d+/) do
            numbers[[Regexp.last_match.begin(0), y]] = _1
          end
        end

        numbers.each { |(x, y), num|
          min_x = x - 1
          min_y = y - 1

          max_x = x + num.length
          max_y = y + 1

          (min_x..max_x).to_a.product((min_y..max_y).to_a)
            .select { gears[_1] }
            .each { gears[_1] << num.to_i }
        }

        gears
          .values
          .select { _1.count == 2 }
          .sum { _1.reduce(:*) }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:56 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:56 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4953'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '47'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D331:38B330:16B1E9:2E0842:67D6390C
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-04/README.txt","sha":"e520bf0399a4c2515d73214b0e875dc2cd96c549","size":5618,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-04/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/e520bf0399a4c2515d73214b0e875dc2cd96c549","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-04/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/e520bf0399a4c2515d73214b0e875dc2cd96c549","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-04/README.txt"}},{"name":"day-04-input.txt","path":"2023/day-04/day-04-input.txt","sha":"b0ea22e66b452c71c322f98675032de36383f7cc","size":22581,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04/day-04-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-04/day-04-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/b0ea22e66b452c71c322f98675032de36383f7cc","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-04/day-04-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04/day-04-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/b0ea22e66b452c71c322f98675032de36383f7cc","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-04/day-04-input.txt"}},{"name":"day-04-part-1.rb","path":"2023/day-04/day-04-part-1.rb","sha":"cf42c699c84016c5ef8b0aa6a66a349316e345ff","size":361,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04/day-04-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-04/day-04-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/cf42c699c84016c5ef8b0aa6a66a349316e345ff","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-04/day-04-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04/day-04-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/cf42c699c84016c5ef8b0aa6a66a349316e345ff","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-04/day-04-part-1.rb"}},{"name":"day-04-part-2.rb","path":"2023/day-04/day-04-part-2.rb","sha":"8e52b6594224630ee2bebe3148114a6b75dcfc39","size":530,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04/day-04-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-04/day-04-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/8e52b6594224630ee2bebe3148114a6b75dcfc39","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-04/day-04-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-04/day-04-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/8e52b6594224630ee2bebe3148114a6b75dcfc39","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-04/day-04-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:56 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-04/day-04-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '247'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"783b403b1a5b7f0df091a91453b48e5deb07b11d9342ede0755d9c36fd1b3d50"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 5293:1711FA:EA5C8:1478E8:67D632AF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:56 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100100-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092557.724401,VS0,VE48
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - '0967615d50fbf5bfccf9f691d6a89ac7f5ac0b64'
      expires:
      - Sun, 16 Mar 2025 02:40:56 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-04-input.txt", __FILE__)
        input     = File.read(file_path)

        input.each_line.sum {
          _, winners, numbers = _1.split(/[:|]/)

          winners = winners.scan(/\d+/)
          numbers = numbers.scan(/\d+/)

          matches = (winners & numbers).count

          if matches > 0
            2**(matches - 1)
          else
            0
          end
        }
        .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:56 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-04/day-04-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '320'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"9705877dadb6ebbc182fb73d128a9da4e36853f4d871245c4275b8bc2d454f8f"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 6DDA:1A119F:2BCEE8:38B874:67D632B2
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:56 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200158-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092557.910652,VS0,VE80
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 4e94dd607104018b53f5472c6bb10834fcc3eb54
      expires:
      - Sun, 16 Mar 2025 02:40:56 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-04-input.txt", __FILE__)
        input     = File.read(file_path)

        input
          .each_line
          .with_object(Hash.new(0)) { |line, counts|
            id, winners, numbers = line.split(/[:|]/)

            id = id.scan(/\d+/).first.to_i
            winners = winners.scan(/\d+/)
            numbers = numbers.scan(/\d+/)

            matches = (winners & numbers).count

            counts[id] += 1

            matches.times do |i|
              card_id = id + i + 1
              counts[card_id] += counts[id]
            end
          }
          .values
          .sum
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:56 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:57 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4952'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '48'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D334:2B55FC:17BAAC:302883:67D6390D
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-05/README.txt","sha":"c0eaf41cb9034d190fa56913f28b23f7052bebdc","size":6207,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-05/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c0eaf41cb9034d190fa56913f28b23f7052bebdc","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-05/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c0eaf41cb9034d190fa56913f28b23f7052bebdc","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-05/README.txt"}},{"name":"day-05-input.txt","path":"2023/day-05/day-05-input.txt","sha":"352db90424eceaa8805911ca2dad3769dac4f97f","size":7169,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05/day-05-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-05/day-05-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/352db90424eceaa8805911ca2dad3769dac4f97f","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-05/day-05-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05/day-05-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/352db90424eceaa8805911ca2dad3769dac4f97f","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-05/day-05-input.txt"}},{"name":"day-05-part-1.rb","path":"2023/day-05/day-05-part-1.rb","sha":"d4284e9163ba31b9ed7496717266c1aa65473728","size":652,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05/day-05-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-05/day-05-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d4284e9163ba31b9ed7496717266c1aa65473728","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-05/day-05-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05/day-05-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d4284e9163ba31b9ed7496717266c1aa65473728","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-05/day-05-part-1.rb"}},{"name":"day-05-part-2.rb","path":"2023/day-05/day-05-part-2.rb","sha":"2303ab07554468a39f3ee1cad8fcd6572196ae95","size":1604,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05/day-05-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-05/day-05-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/2303ab07554468a39f3ee1cad8fcd6572196ae95","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-05/day-05-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-05/day-05-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/2303ab07554468a39f3ee1cad8fcd6572196ae95","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-05/day-05-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:57 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-05/day-05-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '357'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"b407fc5dc373835422b81e3ef0d4d66bfec104b2ae4c0fc02bd16c4362a5c161"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - A771:1EE71F:276421:344D9D:67D632B3
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:57 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200075-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092557.352311,VS0,VE95
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 80e1d9c1b90a300cae2fdcced16cf257e326381f
      expires:
      - Sun, 16 Mar 2025 02:40:57 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-05-input.txt", __FILE__)
        input     = File.read(file_path)

        seeds, *maps = input.split("\n\n")

        seeds = seeds.scan(/\d+/).map(&:to_i)

        maps.map! {
          map = {}

          _1.split("\n")[1..-1].each do |line|
            dest, source, length = line.split.map(&:to_i)

            range = source..(source + length)
            offset = dest - source

            map[range] = offset
          end

          map
        }

        seeds
          .map { |source|
            maps.reduce(source) do |source, map|
              range, offset = map.find do |range, offset|
                range.include?(source)
              end

              source += offset if range
              source
            end
          }
          .min
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:57 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-05/day-05-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '672'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"0cb4e89e435a661591e94a5b473b9d90670c803b62032ee5c0551bd7b2185597"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - F676:127271:2CC847:39AB7E:67D632B3
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:57 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200170-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092558.579664,VS0,VE63
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 976abd17c6cdfb5a5442abd12315320126bb461f
      expires:
      - Sun, 16 Mar 2025 02:40:57 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-05-input.txt", __FILE__)
        input     = File.read(file_path)

        seeds, *maps = input.split("\n\n")

        seeds = seeds.scan(/\d+/).map(&:to_i)

        maps.map! {
          map = {}

          _1.split("\n")[1..-1].each do |line|
            dest, source, length = line.split.map(&:to_i)

            range = source..(source + length)
            offset = dest - source

            map[range] = offset
          end

          map
        }

        def overlapping_range(a, b)
          if b.begin <= a.end && a.begin <= b.end
            [a.begin, b.begin].max..[a.end, b.end].min
          end
        end

        seed_ranges = seeds.each_slice(2).map do |from, length|
          from..(from + length)
        end

        maps
          .reduce(seed_ranges) { |sources, map|
            sources.flat_map { |source_range|
              destinations = []

              curr = source_range.begin

              map
                .sort_by { |range, offset| range.begin }
                .each { |range, offset|
                  matching_range = overlapping_range(range, source_range)

                  if matching_range
                    if matching_range.begin != curr
                      # This doesn't seem to be required for my given input
                      # but I _think_ this is required for sources where there
                      # is no mapping
                      destinations << (curr..(matching_range.begin - 1))
                    end

                    destinations << (
                      (matching_range.begin + offset)..(matching_range.end + offset)
                    )
                    curr = matching_range.end + 1
                  end
                }

              if curr < source_range.end
                destinations << (curr..source_range.end)
              end

              destinations
            }
          }
          .min_by(&:begin)
          .begin
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:57 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:57 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4951'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '49'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D337:2C071D:193FDA:3332D6:67D6390D
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-06/README.txt","sha":"d21da5028a6880e01457cebf8f7cb1c3933b8bf9","size":5195,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-06/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d21da5028a6880e01457cebf8f7cb1c3933b8bf9","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-06/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d21da5028a6880e01457cebf8f7cb1c3933b8bf9","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-06/README.txt"}},{"name":"day-06-input.txt","path":"2023/day-06/day-06-input.txt","sha":"f444fdf0a52e6a4f257bbdca3330d27be5d6c4c5","size":74,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06/day-06-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-06/day-06-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/f444fdf0a52e6a4f257bbdca3330d27be5d6c4c5","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-06/day-06-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06/day-06-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/f444fdf0a52e6a4f257bbdca3330d27be5d6c4c5","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-06/day-06-input.txt"}},{"name":"day-06-part-1.rb","path":"2023/day-06/day-06-part-1.rb","sha":"583c0f100130e61e922bc8ed774f0cd38f497615","size":373,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06/day-06-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-06/day-06-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/583c0f100130e61e922bc8ed774f0cd38f497615","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-06/day-06-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06/day-06-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/583c0f100130e61e922bc8ed774f0cd38f497615","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-06/day-06-part-1.rb"}},{"name":"day-06-part-2.rb","path":"2023/day-06/day-06-part-2.rb","sha":"3263d3a7e71b86ac240e5bffcfabdfeb0c1bbd78","size":298,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06/day-06-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-06/day-06-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3263d3a7e71b86ac240e5bffcfabdfeb0c1bbd78","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-06/day-06-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-06/day-06-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3263d3a7e71b86ac240e5bffcfabdfeb0c1bbd78","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-06/day-06-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:57 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-06/day-06-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '247'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"3f7ca8576de78f5f00da00fa9fcb780a6c317887d2ed08e944187407c150696f"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - ED4F:1D52A2:2B88D9:387361:67D632B4
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:58 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100150-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092558.996620,VS0,VE64
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 16a99f34b4523aa540c616c299ae66c926159366
      expires:
      - Sun, 16 Mar 2025 02:40:58 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-06-input.txt", __FILE__)
        input     = File.read(file_path)

        times, distances = input.split("\n")

        times = times.scan(/\d+/).map(&:to_i)
        distances = distances.scan(/\d+/).map(&:to_i)

        times.zip(distances)
          .map { |time, record|
            time.times.count { _1 * (time - _1) > record }
          }
          .inject(:*)
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:58 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-06/day-06-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '216'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"2fe70603abb3f289b2eea007642e1f62955734c7f928767bd7b659b8f9fab85f"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 643A:221220:ED706C:12ED1A3:67D632B4
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:58 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200105-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092558.202724,VS0,VE60
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7e609a5ef2f086e4a28491d306d7d3ba652f76f0
      expires:
      - Sun, 16 Mar 2025 02:40:58 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |+
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-06-input.txt", __FILE__)
        input     = File.read(file_path)

        time, distance = input.split("\n")

        time = time.scan(/\d+/).join.to_i
        record = distance.scan(/\d+/).join.to_i

        time.times
          .count { _1 * (time - _1) > record }
          .tap { puts _1 }

  recorded_at: Sun, 16 Mar 2025 02:35:58 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:58 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4950'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '50'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D33A:38E635:174673:2F3D0F:67D6390E
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-07/README.txt","sha":"ce87bbcd301369088ac61c79197173c7424c6767","size":5965,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-07/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ce87bbcd301369088ac61c79197173c7424c6767","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-07/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ce87bbcd301369088ac61c79197173c7424c6767","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-07/README.txt"}},{"name":"day-07-input.txt","path":"2023/day-07/day-07-input.txt","sha":"12bfd93380a8038268bf88e0256712331a2a5b25","size":9893,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07/day-07-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-07/day-07-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/12bfd93380a8038268bf88e0256712331a2a5b25","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-07/day-07-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07/day-07-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/12bfd93380a8038268bf88e0256712331a2a5b25","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-07/day-07-input.txt"}},{"name":"day-07-part-1.rb","path":"2023/day-07/day-07-part-1.rb","sha":"27ee8915c14ec44ed21643fbbb03754b4bbc6f4d","size":1008,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07/day-07-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-07/day-07-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/27ee8915c14ec44ed21643fbbb03754b4bbc6f4d","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-07/day-07-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07/day-07-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/27ee8915c14ec44ed21643fbbb03754b4bbc6f4d","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-07/day-07-part-1.rb"}},{"name":"day-07-part-2.rb","path":"2023/day-07/day-07-part-2.rb","sha":"3557798c6981e43656d485fee59b73a94ff91eca","size":1154,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07/day-07-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-07/day-07-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3557798c6981e43656d485fee59b73a94ff91eca","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-07/day-07-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-07/day-07-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3557798c6981e43656d485fee59b73a94ff91eca","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-07/day-07-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:58 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-07/day-07-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '534'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"df68f0bae374f5fb895248e7a3c50b16bb045ce22b78fe036e147cd5feba59aa"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 6272:B7FC7:2A82D3:3768BB:67D632B3
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:58 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200068-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092559.622116,VS0,VE64
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 67aaf4fc0b33f278d6093f6ed181a448fe633583
      expires:
      - Sun, 16 Mar 2025 02:40:58 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-07-input.txt", __FILE__)
        input     = File.read(file_path)

        class Hand
          CARDS = %w(A K Q J T 9 8 7 6 5 4 3 2)

          attr_reader :hand

          def initialize(hand)
            @hand = hand
          end

          def rank
            tally = hand.chars.tally.values.sort

            if tally == [5]
              0
            elsif tally == [1, 4]
              1
            elsif tally == [2, 3]
              2
            elsif tally.include?(3)
              3
            elsif tally.count { _1 == 2 } == 2
              4
            elsif tally.include?(2)
              5
            else
              6
            end
          end

          # Strongest hands first
          def <=>(other)
            result = self.rank <=> other.rank

            return result unless result.zero?

            hand.chars.zip(other.hand.chars)
              .map { |a, b| CARDS.index(a) <=> CARDS.index(b) }
              .reject(&:zero?)
              .first
          end
        end

        input.each_line
          .map {
            hand, bid = _1.split

            [ Hand.new(hand), bid.to_i ]
          }
          .sort_by(&:first)
          .reverse
          .map(&:last)
          .each_with_index
          .sum { |bid, idx| (idx + 1) * bid }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:58 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-07/day-07-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '594'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"fb688ead05f588783a76dcd9440b441ee1c8e702bf699970c634fed8ad513cec"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 99FE:204995:250EC3:31F244:67D632B5
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:58 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100171-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092559.820393,VS0,VE49
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f8f54e9d4e2bc1dc11886f322ebc8d3a756e5f83
      expires:
      - Sun, 16 Mar 2025 02:40:58 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-07-input.txt", __FILE__)
        input     = File.read(file_path)

        class Hand
          CARDS = %w(A K Q T 9 8 7 6 5 4 3 2 J)

          attr_reader :hand

          def initialize(hand)
            @hand = hand
          end

          def rank
            tally = hand.chars.tally.reject! { _1 == ?J } || {}

            max = tally.values.max
            best = tally.key(max)

            tally = hand
              .gsub(?J, best || ?J)
              .chars.tally.values.sort

            if tally == [5]
              0
            elsif tally == [1, 4]
              1
            elsif tally == [2, 3]
              2
            elsif tally.include?(3)
              3
            elsif tally.count { _1 == 2 } == 2
              4
            elsif tally.include?(2)
              5
            else
              6
            end
          end

          # Strongest hands first
          def <=>(other)
            result = self.rank <=> other.rank

            return result unless result.zero?

            hand.chars.zip(other.hand.chars)
              .map { |a, b| CARDS.index(a) <=> CARDS.index(b) }
              .reject(&:zero?)
              .first
          end
        end

        input.each_line
          .map {
            hand, bid = _1.split

            [ Hand.new(hand), bid.to_i ]
          }
          .sort_by(&:first)
          .reverse
          .map(&:last)
          .each_with_index
          .sum { |bid, idx| (idx + 1) * bid }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:58 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:59 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4949'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '51'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D33D:210796:17FF5C:30B22B:67D6390E
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-08/README.txt","sha":"9053a439af1abe1c54244dffa9dbcc325669ea9a","size":3938,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-08/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/9053a439af1abe1c54244dffa9dbcc325669ea9a","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-08/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/9053a439af1abe1c54244dffa9dbcc325669ea9a","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-08/README.txt"}},{"name":"day-08-input.txt","path":"2023/day-08/day-08-input.txt","sha":"c4c3165df8644b73a22ebd3c9fc1296641d31af9","size":12417,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08/day-08-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-08/day-08-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c4c3165df8644b73a22ebd3c9fc1296641d31af9","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-08/day-08-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08/day-08-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c4c3165df8644b73a22ebd3c9fc1296641d31af9","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-08/day-08-input.txt"}},{"name":"day-08-part-1.rb","path":"2023/day-08/day-08-part-1.rb","sha":"2fa7bfa643e0ee1eaa9c1948dfa0a0ea8d1e04bb","size":412,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08/day-08-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-08/day-08-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/2fa7bfa643e0ee1eaa9c1948dfa0a0ea8d1e04bb","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-08/day-08-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08/day-08-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/2fa7bfa643e0ee1eaa9c1948dfa0a0ea8d1e04bb","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-08/day-08-part-1.rb"}},{"name":"day-08-part-2.rb","path":"2023/day-08/day-08-part-2.rb","sha":"5fb380b22a01deccbc08160a09d19f2e7e05b6b4","size":538,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08/day-08-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-08/day-08-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/5fb380b22a01deccbc08160a09d19f2e7e05b6b4","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-08/day-08-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-08/day-08-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/5fb380b22a01deccbc08160a09d19f2e7e05b6b4","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-08/day-08-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:59 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-08/day-08-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '293'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"67314697ef4a24f3bc391ba18dbed9dfa86745f015702761dfd7171bc66e8239"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - DFA4:BA713:D29F2:12E298:67D632B2
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:59 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200070-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092559.235569,VS0,VE59
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 42191f323b42804ec3a3225e91faafeac9f05ad3
      expires:
      - Sun, 16 Mar 2025 02:40:59 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-08-input.txt", __FILE__)
        input     = File.read(file_path)

        steps, map = input.split("\n\n")

        steps = steps.chars

        network = {}

        map.each_line {
          from, *dest = _1.scan(/\w+/)
          network[from] = dest
        }

        i = 0
        curr = "AAA"

        while curr != "ZZZ"
          step = steps[i % (steps.length)]

          dir = step == ?L ? 0 : 1
          curr = network[curr][dir]

          i += 1
        end

        puts i
  recorded_at: Sun, 16 Mar 2025 02:35:59 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-08/day-08-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '352'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"5f1cbcdf91e49129bdba41ee758950f8ec1fe4faeaa6528e06694773e8c71639"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FE16:255FC9:E4F2D1:1265166:67D632B7
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:35:59 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100040-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092559.494461,VS0,VE96
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - cab272d8a5a63d8b537494e55ba24e4707ae0801
      expires:
      - Sun, 16 Mar 2025 02:40:59 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-08-input.txt", __FILE__)
        input     = File.read(file_path)

        steps, map = input.split("\n\n")

        steps = steps.chars

        network = {}

        map.each_line {
          from, *dest = _1.scan(/\w+/)
          network[from] = dest
        }

        starts = network.keys.select { _1 =~ /A$/ }

        starts
          .map { |curr|
            i = 0

            while !curr.match?(/Z$/)
              step = steps[i % (steps.length)]

              dir = step == ?L ? 0 : 1
              curr = network[curr][dir]

              i += 1
            end

            i
          }
          .inject(:lcm)
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:59 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:35:59 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4948'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '52'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D340:1EF7BE:163A55:2D1778:67D6390F
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-09/README.txt","sha":"fe901c3630e1a4f58f740f800431a8b88d5394a3","size":5226,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-09/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/fe901c3630e1a4f58f740f800431a8b88d5394a3","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-09/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/fe901c3630e1a4f58f740f800431a8b88d5394a3","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-09/README.txt"}},{"name":"day-09-input.txt","path":"2023/day-09/day-09-input.txt","sha":"3f12e274eb70733af6e42ee23de2a573b14cdaf7","size":21368,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09/day-09-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-09/day-09-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3f12e274eb70733af6e42ee23de2a573b14cdaf7","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-09/day-09-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09/day-09-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3f12e274eb70733af6e42ee23de2a573b14cdaf7","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-09/day-09-input.txt"}},{"name":"day-09-part-1.rb","path":"2023/day-09/day-09-part-1.rb","sha":"7c036fa7778f15586be90ec646fcb3868e65cf7e","size":492,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09/day-09-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-09/day-09-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/7c036fa7778f15586be90ec646fcb3868e65cf7e","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-09/day-09-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09/day-09-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/7c036fa7778f15586be90ec646fcb3868e65cf7e","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-09/day-09-part-1.rb"}},{"name":"day-09-part-2.rb","path":"2023/day-09/day-09-part-2.rb","sha":"bc1843e5cc6090936d37cb7287a98be2d9a996f1","size":505,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09/day-09-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-09/day-09-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/bc1843e5cc6090936d37cb7287a98be2d9a996f1","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-09/day-09-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-09/day-09-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/bc1843e5cc6090936d37cb7287a98be2d9a996f1","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-09/day-09-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:35:59 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-09/day-09-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '307'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"b0110b0ea3b465e012822b15348e4163a71a494389be3eebb126ca7aca196bec"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FFB2:ACFD0:F2AF5C:133FE1E:67D632B7
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:00 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200066-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092560.956953,VS0,VE69
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - a02ba13d8e3650697e38d5a98f3d7f8e802ae2cf
      expires:
      - Sun, 16 Mar 2025 02:41:00 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-09-input.txt", __FILE__)
        input     = File.read(file_path)

        input.each_line
          .sum { | line|
            i = line.split.map(&:to_i)

            seqs = [i]

            while !seqs.last.all?(&:zero?)
              seqs << seqs.last.each_cons(2).map { _2 - _1 }
            end

            seqs.reverse_each.with_index { |seq, idx|
              if idx.zero?
                seq << 0
              else
                seq << (seq.last + seqs[-idx].last)
              end
            }

            seqs.first.last
          }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:35:59 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-09/day-09-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '312'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"6300ebfeafdc0535770eee8258b93997da721d47a235807c2dd639fc4a9f400d"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 91DD:1A119F:2BD0FC:38BB37:67D632B7
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:00 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100163-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092560.157524,VS0,VE49
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 75480130dc11036b03b9a633c2dc7a3e7f25e8bf
      expires:
      - Sun, 16 Mar 2025 02:41:00 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-09-input.txt", __FILE__)
        input     = File.read(file_path)

        input.each_line
          .sum { | line|
            i = line.split.map(&:to_i)

            seqs = [i]

            while !seqs.last.all?(&:zero?)
              seqs << seqs.last.each_cons(2).map { _2 - _1 }
            end

            seqs.reverse_each.with_index { |seq, idx|
              if idx.zero?
                seq.unshift(0)
              else
                seq.unshift(seq.first - seqs[-idx].first)
              end
            }

            seqs.first.first
          }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:00 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:00 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4947'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '53'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D343:1CD21B:19BC61:34158B:67D63910
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-10/README.txt","sha":"52f0269eef85687c841a7b2e0b5646ce5f003bcf","size":6549,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-10/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/52f0269eef85687c841a7b2e0b5646ce5f003bcf","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-10/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/52f0269eef85687c841a7b2e0b5646ce5f003bcf","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-10/README.txt"}},{"name":"day-10-input.txt","path":"2023/day-10/day-10-input.txt","sha":"a4e1b18f88ce1970cf5c2b5b51986769225e4beb","size":19741,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10/day-10-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-10/day-10-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/a4e1b18f88ce1970cf5c2b5b51986769225e4beb","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-10/day-10-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10/day-10-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/a4e1b18f88ce1970cf5c2b5b51986769225e4beb","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-10/day-10-input.txt"}},{"name":"day-10-part-1.rb","path":"2023/day-10/day-10-part-1.rb","sha":"d61898ed4dc4f743aca5c93a3d662bf16db9eb43","size":1020,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10/day-10-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-10/day-10-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d61898ed4dc4f743aca5c93a3d662bf16db9eb43","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-10/day-10-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10/day-10-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d61898ed4dc4f743aca5c93a3d662bf16db9eb43","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-10/day-10-part-1.rb"}},{"name":"day-10-part-2-alt.rb","path":"2023/day-10/day-10-part-2-alt.rb","sha":"96a737fb1e6247065d28bb48e07a87c4426450bc","size":1714,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10/day-10-part-2-alt.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-10/day-10-part-2-alt.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/96a737fb1e6247065d28bb48e07a87c4426450bc","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-10/day-10-part-2-alt.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10/day-10-part-2-alt.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/96a737fb1e6247065d28bb48e07a87c4426450bc","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-10/day-10-part-2-alt.rb"}},{"name":"day-10-part-2.rb","path":"2023/day-10/day-10-part-2.rb","sha":"1833ed315614ed6c438b8cbaedc26c1411963dad","size":2875,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10/day-10-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-10/day-10-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/1833ed315614ed6c438b8cbaedc26c1411963dad","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-10/day-10-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-10/day-10-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/1833ed315614ed6c438b8cbaedc26c1411963dad","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-10/day-10-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:00 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-10/day-10-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '549'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"682410f59cbe5eefb6510f886ddefde76d90976e04d01a45ecd759401431cf64"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 5379:B7FC7:2A8407:376A61:67D632B7
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:00 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100085-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092561.579039,VS0,VE40
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 4879e114a3978ce6df255a49dbc84925aebb8bfe
      expires:
      - Sun, 16 Mar 2025 02:41:00 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        require 'set'

        file_path = File.expand_path("../day-10-input.txt", __FILE__)
        input     = File.read(file_path)

        DIRS = {
          n: [0, -1],
          s: [0, 1],
          w: [-1, 0],
          e: [1, 0]
        }

        PIPES = {
          '|': { n: :n, s: :s },
          '-': { w: :w, e: :e },
          'L': { w: :n, s: :e },
          'J': { s: :w, e: :n },
          '7': { n: :w, e: :s },
          'F': { w: :s, n: :e }
        }

        map = input.each_line.map { _1.strip.chars }

        height = map.length
        width = map.first.length

        _, sy = map.each.with_index.find { |row, _| row.include?(?S) }
        sx = map[sy].index(?S)

        curr = [sx, sy]
        dir = nil

        path = []

        DIRS.each do |direction, mod|
          x, y = curr.zip(mod).map(&:sum)

          next if x < 0 || y < 0 || x >= width || y >= height

          c = map[y][x].to_sym

          if PIPES[c][direction]
            dir = direction
            curr = [x, y]
            path << [curr, dir]
            break
          end
        end

        while map[curr[1]][curr[0]] != ?S
          c = map[curr[1]][curr[0]]
          dir = PIPES[c.to_sym][dir]
          mod = DIRS[dir]

          curr = curr.zip(mod).map(&:sum)

          path << [curr, dir]
        end

        puts path.count / 2
  recorded_at: Sun, 16 Mar 2025 02:36:00 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-10/day-10-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1221'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"47431ab60e5ed5ff943576a648a8e29ee7889b6b59480751949a121ddfd700fc"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 2367:25F6AA:ED463D:12E914E:67D632B7
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:00 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200023-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092561.771679,VS0,VE70
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7fb42c1fee1ad4fceae067bcd6aa18ebdcc8ff17
      expires:
      - Sun, 16 Mar 2025 02:41:00 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        require 'set'

        file_path = File.expand_path("../day-10-input.txt", __FILE__)
        input     = File.read(file_path)

        DIRS = {
          n: [0, -1],
          s: [0, 1],
          w: [-1, 0],
          e: [1, 0]
        }

        PIPES = {
          '|': { n: :n, s: :s },
          '-': { w: :w, e: :e },
          'L': { w: :n, s: :e },
          'J': { s: :w, e: :n },
          '7': { n: :w, e: :s },
          'F': { w: :s, n: :e }
        }

        map = input.each_line.map { _1.strip.chars }

        height = map.length
        width = map.first.length

        _, sy = map.each.with_index.find { |row, _| row.include?(?S) }
        sx = map[sy].index(?S)

        curr = [sx, sy]
        dir = nil

        path = []

        DIRS.each do |direction, mod|
          x, y = curr.zip(mod).map(&:sum)

          next if x < 0 || y < 0 || x >= width || y >= height

          c = map[y][x].to_sym

          if PIPES[c][direction]
            dir = direction
            curr = [x, y]
            path << [curr, dir]
            break
          end
        end

        while map[curr[1]][curr[0]] != ?S
          c = map[curr[1]][curr[0]]
          dir = PIPES[c.to_sym][dir]
          mod = DIRS[dir]

          curr = curr.zip(mod).map(&:sum)

          path << [curr, dir]
        end

        puts path.count / 2

        pipes = path.map(&:first).to_set

        voids = width.times.to_a
          .product(height.times.to_a)
          .reject { |pos| pipes.include?(pos) }
          .to_set

        def neighbours(x, y, height, width)
          [
            [x - 1, y],
            [x + 1, y],
            [x, y - 1],
            [x, y + 1]
          ]
            .reject { |x, y| x < 0 || y < 0 }
            .reject { |x, y| x >= width }
            .reject { |x, y| y >= height }
        end


        # Map position to a group of connected voids
        candidates = {}
        groups = []

        voids.each { |pos|
          next if candidates[pos]

          group = Set.new([pos])
          candidates[pos] = group
          groups << group

          to_visit = [pos]
          while to_visit.any?
            pos = to_visit.pop

            neighbours(*pos, height, width)
              .select { voids.include?(_1) }
              .reject { candidates[_1] }
              .each { |pos|
                group << pos
                candidates[pos] = group
                to_visit << pos
              }
          end
        }

        # Identify the cells belonging to a group on a border
        outside = groups
          .select { |group|
            group.any? { |x, y| x == 0 || x == width - 1 || y == 0 || y == height - 1 }
          }
          .flat_map(&:to_a)
          .to_set

        RIGHT = {
          n: :e,
          s: :w,
          e: :s,
          w: :n
        }

        LEFT = {
          n: :w,
          s: :e,
          e: :n,
          w: :s
        }

        def right(dir, pos)
          RIGHT[dir]
            .then { DIRS[_1] }
            .zip(pos)
            .map(&:sum)
        end

        def left(dir, pos)
          LEFT[dir]
            .then { DIRS[_1] }
            .zip(pos)
            .map(&:sum)
        end

        # Determine which direction (from the pipe's perspective), is facing inside
        inside_dir = path.lazy
          .map { |pos, dir|
            if left(dir, pos).then { outside.include?(_1) }
              :right
            elsif right(dir, pos).then { outside.include?(_1) }
              :left
            end
          }
          .compact
          .first

        surrounding = Set.new

        path.each_cons(2) do |(pos, curr_dir), (_, next_dir)|
          [curr_dir, next_dir].uniq.each do |dir|
            send(inside_dir, dir, pos)
              .then { candidates[_1] }
              &.tap { surrounding.merge(_1) }
          end
        end

        puts surrounding.count
  recorded_at: Sun, 16 Mar 2025 02:36:00 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:01 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4946'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '54'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D346:1CD21B:19BE66:3419E1:67D63910
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-11/README.txt","sha":"05ac95ee04dd0797ae1f55c1626926fd5431c764","size":4174,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-11/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/05ac95ee04dd0797ae1f55c1626926fd5431c764","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-11/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/05ac95ee04dd0797ae1f55c1626926fd5431c764","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-11/README.txt"}},{"name":"day-11-input.txt","path":"2023/day-11/day-11-input.txt","sha":"6ba87beb60c46a671f73e6444da8e0a5f3b5aab8","size":19740,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11/day-11-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-11/day-11-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/6ba87beb60c46a671f73e6444da8e0a5f3b5aab8","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-11/day-11-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11/day-11-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/6ba87beb60c46a671f73e6444da8e0a5f3b5aab8","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-11/day-11-input.txt"}},{"name":"day-11-part-1.rb","path":"2023/day-11/day-11-part-1.rb","sha":"3e64bf9f008f01c8e8651c8eb732fd9cb01aed7d","size":864,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11/day-11-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-11/day-11-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3e64bf9f008f01c8e8651c8eb732fd9cb01aed7d","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-11/day-11-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11/day-11-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3e64bf9f008f01c8e8651c8eb732fd9cb01aed7d","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-11/day-11-part-1.rb"}},{"name":"day-11-part-2.rb","path":"2023/day-11/day-11-part-2.rb","sha":"492c9bff0435a17d7b33460fe4992dc648bc6b1c","size":798,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11/day-11-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-11/day-11-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/492c9bff0435a17d7b33460fe4992dc648bc6b1c","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-11/day-11-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-11/day-11-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/492c9bff0435a17d7b33460fe4992dc648bc6b1c","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-11/day-11-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:01 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-11/day-11-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '420'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"9039cdfce64a37073d7986eb7dd847b45d2d401b0419b164ed0d60c01e313fd2"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FBDE:255FC9:E4F3BC:126529F:67D632B9
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:01 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100165-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092561.266381,VS0,VE70
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - d8a5f6acf26afafa6849c839f8f4736357d6e50d
      expires:
      - Sun, 16 Mar 2025 02:41:01 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |+
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-11-input.txt", __FILE__)
        input     = File.read(file_path)

        grid = input.each_line.map { _1.strip.chars }

        width = grid.first.count
        height = grid.count

        y_expand = height.times.select {
          grid[_1].join.match?(/\A\.*\z/)
        }

        transposed_grid = grid.transpose

        x_expand = width.times.select {
          transposed_grid[_1].join.match?(/\A\.*\z/)
        }

        y_expand.each_with_index { |row, idx|
          grid.insert(row + idx, Array.new(width, "."))
        }

        height = grid.count
        grid = grid.transpose

        x_expand.each_with_index { |row, idx|
          grid.insert(row + idx, Array.new(height, "."))
        }

        grid = grid.transpose
        width = grid.first.count

        height.times.to_a
          .product(width.times.to_a)
          .select { grid[_1][_2] == ?# }
          .map { [_2, _1] }
          .combination(2)
          .sum { |(x1, y1), (x2, y2)| (x1 - x2).abs + (y1 - y2).abs }
          .tap { puts _1 }

  recorded_at: Sun, 16 Mar 2025 02:36:01 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-11/day-11-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '422'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"80183ffde8a3bcd1ea296f7b1cad9c13b7799dcf8f1d6a434a87665c7c999d16"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 5510:BA713:D2B01:12E408:67D632B9
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:01 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200035-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092561.472453,VS0,VE53
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 8de00f36b503ed67cef00b0a7a0289bb0a23b75c
      expires:
      - Sun, 16 Mar 2025 02:41:01 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-11-input.txt", __FILE__)
        input     = File.read(file_path)

        grid = input.each_line.map { _1.strip.chars }

        width = grid.first.count
        height = grid.count

        y_expand = height.times.select {
          grid[_1].join.match?(/\A\.*\z/)
        }

        transposed_grid = grid.transpose

        x_expand = width.times.select {
          transposed_grid[_1].join.match?(/\A\.*\z/)
        }

        height.times.to_a
          .product(width.times.to_a)
          .select { grid[_1][_2] == ?# }
          .map { [_2, _1] }
          .combination(2)
          .sum { |(x1, y1), (x2, y2)|
            x_range = Range.new(*[x1, x2].sort)
            y_range = Range.new(*[y1, y2].sort)

            x_range.size + y_range.size - 2 +
              999_999 * x_expand.count { x_range.include?(_1) } +
              999_999 * y_expand.count { y_range.include?(_1) }
          }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:01 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:01 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4945'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '55'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D349:13F322:16CF10:2E4214:67D63911
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-12/README.txt","sha":"b5c0c9d4eea59f054c4705c7d90e9c0f9a00dd16","size":6092,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-12/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/b5c0c9d4eea59f054c4705c7d90e9c0f9a00dd16","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-12/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/b5c0c9d4eea59f054c4705c7d90e9c0f9a00dd16","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-12/README.txt"}},{"name":"day-12-input.txt","path":"2023/day-12/day-12-input.txt","sha":"8d3476df89817bf5342744998a0037c161421944","size":22835,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12/day-12-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-12/day-12-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/8d3476df89817bf5342744998a0037c161421944","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-12/day-12-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12/day-12-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/8d3476df89817bf5342744998a0037c161421944","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-12/day-12-input.txt"}},{"name":"day-12-part-1.rb","path":"2023/day-12/day-12-part-1.rb","sha":"9e811f78bd665e1a63a4092e551b7a2d69ed283e","size":1151,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12/day-12-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-12/day-12-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/9e811f78bd665e1a63a4092e551b7a2d69ed283e","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-12/day-12-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12/day-12-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/9e811f78bd665e1a63a4092e551b7a2d69ed283e","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-12/day-12-part-1.rb"}},{"name":"day-12-part-2.rb","path":"2023/day-12/day-12-part-2.rb","sha":"67c3757157fdb2079a829e0ed5e2d1e6bc422995","size":1173,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12/day-12-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-12/day-12-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/67c3757157fdb2079a829e0ed5e2d1e6bc422995","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-12/day-12-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-12/day-12-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/67c3757157fdb2079a829e0ed5e2d1e6bc422995","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-12/day-12-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:01 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-12/day-12-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '562'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"7c086d89f16fd44d4375dddd5d6512c16a4af5aa3ce627b6cdd5d2fdb56a44ee"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - E58F:13C6A6:F1E8C4:1334CB0:67D632B9
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:01 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200061-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092562.923494,VS0,VE59
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 56a443c72699a463d127f64eba703e43aedfdf83
      expires:
      - Sun, 16 Mar 2025 02:41:01 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-12-input.txt", __FILE__)
        input     = File.read(file_path)

        def count_arrangements(pattern, groups, cache = {})
          result = cache[[pattern, groups]]
          return result if result

          if groups.empty?
            if !pattern&.match?(/#/)
              count = 1
            else
              count = 0
            end

            cache[[pattern, groups]] = count
            return count
          end

          expected = groups[0]
          remainder = groups[1..]

          # Minimum width required to satistify the remaining groups
          reserved = remainder.sum + remainder.length

          # Amount of width (less expected split) available to test
          space = pattern.size - reserved - (expected - 1)

          candidates = space.times.map { "." * _1 + "#" * expected + "." }

          candidates
            .select {
              _1.chars.zip(pattern.chars).all? do |c, p|
                c == p || p == "?" || p.nil?
              end
            }
            .sum {
              count_arrangements(pattern[_1.length..], remainder, cache)
            }
            .tap { cache[[pattern, groups]] = _1 }
        end

        input.each_line
          .sum {
            pattern, groups = _1.split
            groups = groups.split(",").map(&:to_i)

            count_arrangements(pattern, groups)
          }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:01 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-12/day-12-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '579'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"c0289e0cecae7b498c79d5a004b2eea8474b3cec06826381278187863f24950f"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 68E2:204995:25106E:31F475:67D632BA
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:02 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200049-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092562.123139,VS0,VE48
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - e37008b165992b853a4ad0f5498f156660ec1192
      expires:
      - Sun, 16 Mar 2025 02:41:02 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-12-input.txt", __FILE__)
        input     = File.read(file_path)

        def count_arrangements(pattern, groups, cache = {})
          result = cache[[pattern, groups]]
          return result if result

          if groups.empty?
            if !pattern&.match?(/#/)
              count = 1
            else
              count = 0
            end

            cache[[pattern, groups]] = count
            return count
          end

          expected = groups[0]
          remainder = groups[1..]

          # Minimum width required to satistify the remaining groups
          reserved = remainder.sum + remainder.length

          # Amount of width (less expected split) available to test
          space = pattern.size - reserved - (expected - 1)

          candidates = space.times.map { "." * _1 + "#" * expected + "." }

          candidates
            .select {
              _1.chars.zip(pattern.chars).all? do |c, p|
                c == p || p == "?" || p.nil?
              end
            }
            .sum {
              count_arrangements(pattern[_1.length..], remainder, cache)
            }
            .tap { cache[[pattern, groups]] = _1 }
        end

        input.each_line
          .sum {
            pattern, groups = _1.split
            groups = groups.split(",").map(&:to_i)

            count_arrangements(([pattern] * 5).join("?"), groups * 5)
          }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:02 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:02 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4944'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '56'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D34C:294917:16B84A:2E19B8:67D63912
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-13/README.txt","sha":"6ebaf86630f56afbf137532d17592eb0de3e78e5","size":5026,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-13/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/6ebaf86630f56afbf137532d17592eb0de3e78e5","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-13/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/6ebaf86630f56afbf137532d17592eb0de3e78e5","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-13/README.txt"}},{"name":"day-13-input.txt","path":"2023/day-13/day-13-input.txt","sha":"0fcb94e3c73e133b084b4dc0eb52791806bee6e0","size":17275,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13/day-13-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-13/day-13-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/0fcb94e3c73e133b084b4dc0eb52791806bee6e0","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-13/day-13-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13/day-13-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/0fcb94e3c73e133b084b4dc0eb52791806bee6e0","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-13/day-13-input.txt"}},{"name":"day-13-part-1.rb","path":"2023/day-13/day-13-part-1.rb","sha":"de9f651375c7b1b06d6b14ab517d0f217740174b","size":529,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13/day-13-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-13/day-13-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/de9f651375c7b1b06d6b14ab517d0f217740174b","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-13/day-13-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13/day-13-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/de9f651375c7b1b06d6b14ab517d0f217740174b","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-13/day-13-part-1.rb"}},{"name":"day-13-part-2.rb","path":"2023/day-13/day-13-part-2.rb","sha":"0fa2ba061754cf04d40eca8bbd3e74884efb900d","size":596,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13/day-13-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-13/day-13-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/0fa2ba061754cf04d40eca8bbd3e74884efb900d","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-13/day-13-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-13/day-13-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/0fa2ba061754cf04d40eca8bbd3e74884efb900d","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-13/day-13-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:02 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-13/day-13-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '333'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"18436deffa58a2561ae59ec395336d13675800c8d9be0d21e05038cc33482754"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - C73C:5E8A2:F10E35:1325C9A:67D632B8
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:02 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100097-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092563.527748,VS0,VE69
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 1325d59499f828be964430eeebf0ae41f151ff78
      expires:
      - Sun, 16 Mar 2025 02:41:02 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |+
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-13-input.txt", __FILE__)
        input     = File.read(file_path)

        def row_count(grid)
          (grid.count - 1)
            .times
            .map { |y|
              left = grid[0..y].reverse
              right = grid[y+1..]

              left.count if left.zip(right).select(&:last).all? { _1 == _2 }
            }
            .compact
            .first
        end

        input
          .split("\n\n")
          .map { |pattern|
            grid = pattern.each_line.map(&:strip).map(&:chars)

            row_count(grid.transpose) || row_count(grid) * 100
          }
          .sum
          .tap { puts _1 }

  recorded_at: Sun, 16 Mar 2025 02:36:02 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-13/day-13-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '360'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"67db67f3916fd46fd46a68984f67a148712b308a7e859eb4bcd082526aa10134"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - CB68:203D87:2F8754:3C6F1A:67D632BB
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:02 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100027-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092563.723901,VS0,VE77
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7995d2fb6e1a10ff3d5b936a39da4d39afafd10b
      expires:
      - Sun, 16 Mar 2025 02:41:02 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |+
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-13-input.txt", __FILE__)
        input     = File.read(file_path)

        def row_count(grid)
          (grid.count - 1)
            .times
            .map { |y|
              left = grid[0..y].reverse
              right = grid[y+1..]

              errors = left.zip(right).select(&:last).sum { |l, r|
                l.zip(r).count { _1 != _2 }
              }

              left.count if errors == 1
            }
            .compact
            .first
        end

        input
          .split("\n\n")
          .map { |pattern|
            grid = pattern.each_line.map(&:strip).map(&:chars)

            row_count(grid.transpose) || row_count(grid) * 100
          }
          .sum
          .tap { puts _1 }

  recorded_at: Sun, 16 Mar 2025 02:36:02 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:03 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4943'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '57'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D34F:228347:171DDC:2EE5FC:67D63912
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-14/README.txt","sha":"f8283f1865452242815f9d2b140198a25d7b2051","size":4115,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-14/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/f8283f1865452242815f9d2b140198a25d7b2051","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-14/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/f8283f1865452242815f9d2b140198a25d7b2051","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-14/README.txt"}},{"name":"day-14-input.txt","path":"2023/day-14/day-14-input.txt","sha":"ca72bb1095142e9b95d1e3832f1055e78c0526a2","size":10100,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14/day-14-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-14/day-14-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ca72bb1095142e9b95d1e3832f1055e78c0526a2","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-14/day-14-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14/day-14-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ca72bb1095142e9b95d1e3832f1055e78c0526a2","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-14/day-14-input.txt"}},{"name":"day-14-part-1.rb","path":"2023/day-14/day-14-part-1.rb","sha":"3fa8cac32c82057e0cc628a68351ea1d2457efaf","size":625,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14/day-14-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-14/day-14-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3fa8cac32c82057e0cc628a68351ea1d2457efaf","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-14/day-14-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14/day-14-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3fa8cac32c82057e0cc628a68351ea1d2457efaf","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-14/day-14-part-1.rb"}},{"name":"day-14-part-2.rb","path":"2023/day-14/day-14-part-2.rb","sha":"ba81209385226f444a50c29520b0b94260d709aa","size":1196,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14/day-14-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-14/day-14-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ba81209385226f444a50c29520b0b94260d709aa","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-14/day-14-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-14/day-14-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ba81209385226f444a50c29520b0b94260d709aa","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-14/day-14-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:02 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-14/day-14-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '355'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"15a08f6ad4373b90028fb425311223fdf9c8898d68859e4a1be270a0b2337733"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 5444:127271:2CCC47:39B094:67D632BB
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:03 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200156-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092563.152193,VS0,VE46
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 063da894971430fb4fc0d60757606de016213cd4
      expires:
      - Sun, 16 Mar 2025 02:41:03 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-14-input.txt", __FILE__)
        input     = File.read(file_path)

        grid = input.each_line.map { _1.strip.chars }

        # Tilt left
        def tilt(grid)
          grid.map do |row|
            row
              .join
              .split(?#)
              .map { |section|
                count = section.chars.count { _1 == ?O }

                ?O * count + ?. * (section.length - count)
              }
              .join(?#)
              .ljust(row.length, ?#)
              .chars
          end
        end

        grid
          .then { tilt(_1.transpose).transpose }
          .map { |row| row.count { _1 == ?O } }
          .each_with_index
          .sum { |count, idx| count * (grid.length - idx) }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:03 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-14/day-14-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '593'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"cb6e46c9ec443b665cd4b535f5c7a906fc9b3927e9e61607882f3f2f67a28a60"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 7206:2B05E2:F30624:134734E:67D632B9
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:03 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100107-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092563.336828,VS0,VE109
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 5d525d9e1eace726da4269238c0a43bb9c552aa2
      expires:
      - Sun, 16 Mar 2025 02:41:03 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-14-input.txt", __FILE__)
        input     = File.read(file_path)

        grid = input.each_line.map { _1.strip.chars }

        # Tilt left
        def tilt(grid)
          grid.map do |row|
            row
              .join
              .split(?#)
              .map { |section|
                count = section.chars.count { _1 == ?O }

                ?O * count + ?. * (section.length - count)
              }
              .join(?#)
              .ljust(row.length, ?#)
              .chars
          end
        end

        def cycle(grid)
          # north, west, south, east
          grid
            .then { tilt(_1.transpose).transpose }
            .then { tilt(_1) }
            .then { tilt(_1.transpose.map(&:reverse)).map(&:reverse).transpose }
            .then { tilt(_1.map(&:reverse)).map(&:reverse) }
        end

        CYCLES = 1_000_000_000

        states = Hash.new { |h, k| h[k] = [] }

        CYCLES.times do |idx|
          grid = cycle(grid)

          state = grid.map(&:join).join("\n")
          states[state] << idx

          # Identify a loop
          if states[state].count > 1
            cycle = states[state][-1] - states[state][-2]

            # Is this the 1 billionth state?
            break if (CYCLES - idx - 1) % cycle == 0
          end
        end

        grid
          .map { |row| row.count { _1 == ?O } }
          .each_with_index
          .sum { |count, idx| count * (grid.length - idx) }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:03 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:03 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4942'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '58'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D352:CA692:14F2EA:2A8E4D:67D63913
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-15/README.txt","sha":"989a31ad7cdc4bf11ec067b50a41d1b8ee791330","size":9050,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-15/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/989a31ad7cdc4bf11ec067b50a41d1b8ee791330","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-15/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/989a31ad7cdc4bf11ec067b50a41d1b8ee791330","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-15/README.txt"}},{"name":"day-15-input.txt","path":"2023/day-15/day-15-input.txt","sha":"897268aac611478fa70531ef83d2920c608884c6","size":22939,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15/day-15-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-15/day-15-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/897268aac611478fa70531ef83d2920c608884c6","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-15/day-15-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15/day-15-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/897268aac611478fa70531ef83d2920c608884c6","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-15/day-15-input.txt"}},{"name":"day-15-part-1.rb","path":"2023/day-15/day-15-part-1.rb","sha":"ab0452acf67f583d8be62930fd9fa6b9ddc1a7e6","size":274,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15/day-15-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-15/day-15-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ab0452acf67f583d8be62930fd9fa6b9ddc1a7e6","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-15/day-15-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15/day-15-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ab0452acf67f583d8be62930fd9fa6b9ddc1a7e6","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-15/day-15-part-1.rb"}},{"name":"day-15-part-2.rb","path":"2023/day-15/day-15-part-2.rb","sha":"4f5255c97c97138f6362da363e766f4c9feac2d8","size":737,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15/day-15-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-15/day-15-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/4f5255c97c97138f6362da363e766f4c9feac2d8","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-15/day-15-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-15/day-15-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/4f5255c97c97138f6362da363e766f4c9feac2d8","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-15/day-15-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:03 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-15/day-15-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '207'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"177aea6f994ef7754fd3b67a735f48d7e26479507f3bdfcf512e457cb32ae1cf"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - E58F:13C6A6:F1E9EF:1334E3E:67D632BC
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:03 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100035-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092564.786227,VS0,VE60
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 86e617970d91683315b56d6f2619b3daab6f1504
      expires:
      - Sun, 16 Mar 2025 02:41:03 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-15-input.txt", __FILE__)
        input     = File.read(file_path)

        input
          .strip
          .split(",")
          .sum {
            _1.chars.inject(0) { |val, chr|
              val += chr.ord
              val *= 17
              val %= 256
            }
          }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:03 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-15/day-15-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '429'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"043e06c2b32eda2135a866402a892bab6163a5fff3b81916193b29b71f9c13c2"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - B114:278289:EE9872:12FE731:67D632B7
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:04 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200076-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092564.984282,VS0,VE85
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - c89e7a5d0aa7edb0e72b2abde7f8c18a85564785
      expires:
      - Sun, 16 Mar 2025 02:41:04 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-15-input.txt", __FILE__)
        input     = File.read(file_path)

        boxes = Hash.new { |h, k| h[k] = [] }

        input
          .strip
          .split(",")
          .each {
            label = _1.scan(/\w*/).first

            bi = label.chars.inject(0) { |bi, chr|
              bi += chr.ord
              bi *= 17
              bi %= 256
            }

            box = boxes[bi]

            op, fl = _1.strip.chars[label.length..]
            fl = fl.to_i

            idx = box.index { |lab, _| lab == label }

            if op == ?-
              box.delete_at(idx) if idx
            elsif idx
              box[idx] = [label, fl]
            else
              box << [label, fl]
            end
          }

        boxes
          .sum { |box, lenses|
            lenses.each.with_index.sum { |(_, fl), idx|
              (box + 1) * (idx + 1) * fl
            }
          }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:04 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:04 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4941'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '59'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D355:36496F:19C5A75:341ED3A:67D63914
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-16/README.txt","sha":"8cfa13c4bc7db0d82c44f969234e318c3af7b57d","size":4766,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-16/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/8cfa13c4bc7db0d82c44f969234e318c3af7b57d","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-16/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/8cfa13c4bc7db0d82c44f969234e318c3af7b57d","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-16/README.txt"}},{"name":"day-16-input.txt","path":"2023/day-16/day-16-input.txt","sha":"cf39e6896aa52a62bf1032e529741fecdcdd44da","size":12210,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16/day-16-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-16/day-16-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/cf39e6896aa52a62bf1032e529741fecdcdd44da","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-16/day-16-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16/day-16-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/cf39e6896aa52a62bf1032e529741fecdcdd44da","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-16/day-16-input.txt"}},{"name":"day-16-part-1.rb","path":"2023/day-16/day-16-part-1.rb","sha":"d46fee7639a827737b6e9d07c1f8bc3753016364","size":1075,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16/day-16-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-16/day-16-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d46fee7639a827737b6e9d07c1f8bc3753016364","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-16/day-16-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16/day-16-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d46fee7639a827737b6e9d07c1f8bc3753016364","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-16/day-16-part-1.rb"}},{"name":"day-16-part-2.rb","path":"2023/day-16/day-16-part-2.rb","sha":"a38485e82e25fa001309807aa94865637b1ebf5a","size":1364,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16/day-16-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-16/day-16-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/a38485e82e25fa001309807aa94865637b1ebf5a","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-16/day-16-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-16/day-16-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/a38485e82e25fa001309807aa94865637b1ebf5a","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-16/day-16-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:04 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-16/day-16-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '539'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"831ec77aa705409f50b9a7c0a4adfc47ba34374d1326967f9991de5d4b87c6e3"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 2EE1:29EDAA:28351C:351DC0:67D632BC
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:04 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200131-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092564.428833,VS0,VE48
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 98f2cf68d00b76336ad716cf0daa1e202e4633ce
      expires:
      - Sun, 16 Mar 2025 02:41:04 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        require 'set'

        file_path = File.expand_path("../day-16-input.txt", __FILE__)
        input     = File.read(file_path)

        DIRS = {
          n: [0, -1],
          s: [0, 1],
          w: [-1, 0],
          e: [1, 0]
        }

        MIRRORS = {
          ?| => {
            w: [:n ,:s],
            e: [:n ,:s],
            n: [:n],
            s: [:s]
          },
          ?- => {
            n: [:w ,:e],
            s: [:w ,:e],
            w: [:w],
            e: [:e]
          },
          "/" => {
            n: [:e],
            e: [:n],
            s: [:w],
            w: [:s]
          },
          "\\" => {
            n: [:w],
            e: [:s],
            s: [:e],
            w: [:n]
          },
          ?. => {
            n: [:n],
            e: [:e],
            w: [:w],
            s: [:s]
          }
        }

        grid = input.each_line.map { _1.strip.chars }

        width = grid.first.length
        height = grid.count

        paths = [[-1, 0, :e]]
        visited = Set.new

        while paths.any?
          *pos, dir = paths.pop

          x, y = DIRS[dir].zip(pos).map(&:sum)

          next if x < 0 || y < 0 || x >= width || y >= height

          cell = grid[y][x]

          MIRRORS[cell][dir].each do |dir2|
            path = [x, y, dir2]

            if !visited.include?(path)
              paths << path
              visited << path
            end
          end
        end

        visited
          .map { |*pos, _| pos }
          .uniq
          .count
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:04 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-16/day-16-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '614'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"1e4157a92cada5e2be4e46d19339e09d4fda1d3caa011255b1a6498c50fed083"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 7962:203D87:2F8884:3C70C3:67D632BE
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:04 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200122-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092565.618020,VS0,VE77
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 69c43f292e47e49eecaa48bd408008e919a47083
      expires:
      - Sun, 16 Mar 2025 02:41:04 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        require 'set'

        file_path = File.expand_path("../day-16-input.txt", __FILE__)
        input     = File.read(file_path)

        DIRS = {
          n: [0, -1],
          s: [0, 1],
          w: [-1, 0],
          e: [1, 0]
        }

        MIRRORS = {
          ?| => {
            w: [:n ,:s],
            e: [:n ,:s],
            n: [:n],
            s: [:s]
          },
          ?- => {
            n: [:w ,:e],
            s: [:w ,:e],
            w: [:w],
            e: [:e]
          },
          "/" => {
            n: [:e],
            e: [:n],
            s: [:w],
            w: [:s]
          },
          "\\" => {
            n: [:w],
            e: [:s],
            s: [:e],
            w: [:n]
          },
          ?. => {
            n: [:n],
            e: [:e],
            w: [:w],
            s: [:s]
          }
        }

        grid = input.each_line.map { _1.strip.chars }

        width = grid.first.length
        height = grid.count

        beams = []

        (0..(width-1)).each do |x|
          beams << [x, -1, :s]
          beams << [x, height, :n]
        end

        (0..(height-1)).each do |y|
          beams << [-1, y, :e]
          beams << [width, y, :w]
        end

        beams
          .map { |x, y, dir|
            paths = [[x, y, dir]]
            visited = Set.new

            while paths.any?
              *pos, dir = paths.pop

              x, y = DIRS[dir].zip(pos).map(&:sum)

              next if x < 0 || y < 0 || x >= width || y >= height

              cell = grid[y][x]

              MIRRORS[cell][dir].each do |dir2|
                path = [x, y, dir2]

                if !visited.include?(path)
                  paths << path
                  visited << path
                end
              end
            end

            visited
              .map { |*pos, _| pos }
              .uniq
              .count
          }
          .max
          .tap { puts _1}
  recorded_at: Sun, 16 Mar 2025 02:36:04 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-17
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:04 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4940'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '60'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D358:36496F:19C5C51:341F110:67D63914
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-17/README.txt","sha":"e7410f2a51c2f00a33ac9878637a96de30f437c2","size":4306,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-17/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-17/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/e7410f2a51c2f00a33ac9878637a96de30f437c2","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-17/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-17/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/e7410f2a51c2f00a33ac9878637a96de30f437c2","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-17/README.txt"}},{"name":"day-17-input.txt","path":"2023/day-17/day-17-input.txt","sha":"d0253bcca6711743b97a11436c1abd2c6f9cd3bb","size":20022,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-17/day-17-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-17/day-17-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d0253bcca6711743b97a11436c1abd2c6f9cd3bb","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-17/day-17-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-17/day-17-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d0253bcca6711743b97a11436c1abd2c6f9cd3bb","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-17/day-17-input.txt"}},{"name":"day-17-part-1-and-2.rb","path":"2023/day-17/day-17-part-1-and-2.rb","sha":"446cba1f0bfbcfa31fcd231ffd0c1a5b89dbf181","size":2883,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-17/day-17-part-1-and-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-17/day-17-part-1-and-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/446cba1f0bfbcfa31fcd231ffd0c1a5b89dbf181","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-17/day-17-part-1-and-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-17/day-17-part-1-and-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/446cba1f0bfbcfa31fcd231ffd0c1a5b89dbf181","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-17/day-17-part-1-and-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:04 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-17/day-17-part-1-and-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1152'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"d437b059219cc38b1b3d953bad7915431baa35871c98017b81c113006f1a37ff"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - BA73:11C765:27B60A:343B19:67D62FB5
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:05 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200158-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092565.057095,VS0,VE69
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 2e1c0e7c5e48c1b5cc231ac6af663d99740548cf
      expires:
      - Sun, 16 Mar 2025 02:41:05 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-17-input.txt", __FILE__)
        input     = File.read(file_path)

        DIRS = {
          n: [0, -1],
          s: [0, 1],
          w: [-1, 0],
          e: [1, 0]
        }

        RIGHT = {
          n: :e,
          s: :w,
          e: :s,
          w: :n
        }

        LEFT = {
          n: :w,
          s: :e,
          e: :n,
          w: :s
        }

        # Reference PriorityQueue implementation is sourced from ChatGPT
        #
        # RubyGem options include `algorithms` or `priority_queue_cxx`
        #
        # This is a min binary heap (elements with the lowest priority
        # are ordered first).
        #
        # https://en.wikipedia.org/wiki/Binary_heap
        #
        class PriorityQueue
          def initialize
            @heap = []
          end

          def any?
            @heap.any?
          end

          def enqueue(element, priority)
            @heap << { element: element, priority: priority }
            heapify_up
          end

          def dequeue
            return nil if @heap.empty?

            swap(0, @heap.length - 1)
            max = @heap.pop
            heapify_down
            max[:element]
          end

          private

          def heapify_up
            index = @heap.length - 1

            while index > 0
              parent_index = (index - 1) / 2
              break if @heap[parent_index][:priority] <= @heap[index][:priority]

              swap(parent_index, index)
              index = parent_index
            end
          end

          def heapify_down
            index = 0

            while true
              child_l_index = 2 * index + 1
              child_r_index = 2 * index + 2
              break if child_l_index >= @heap.length

              swap_index =
                if child_r_index >= @heap.length ||
                  @heap[child_l_index][:priority] <= @heap[child_r_index][:priority]
                  child_l_index
                else
                  child_r_index
                end

              break if @heap[index][:priority] <= @heap[swap_index][:priority]

              swap(index, swap_index)
              index = swap_index
            end
          end

          def swap(i, j)
            @heap[i], @heap[j] = @heap[j], @heap[i]
          end
        end

        grid = input.each_line.map { _1.strip.chars.map(&:to_i) }

        def solve(grid:, min_steps: 1, max_steps: 3)
          h = grid.count
          w = grid.first.count

          queue = PriorityQueue.new

          # cost, x, y, direction, steps in direction, priority/cost
          queue.enqueue([0, 0, 0, :e, 0], 0)
          queue.enqueue([0, 0, 0, :s, 0], 0)

          require 'set'
          visited = Set.new

          while queue.any?
            hl, x, y, dir, steps = queue.dequeue

            ops = []
            ops << RIGHT[dir] if steps >= min_steps
            ops << LEFT[dir]  if steps >= min_steps
            ops << dir        if steps < max_steps

            ops.each do |n_dir|
              nx, ny = DIRS[n_dir].zip([x,y]).map(&:sum)

              next if nx < 0 || ny < 0 || nx >= w || ny >= h

              nsteps = n_dir != dir ? 1 : steps + 1
              nhl = grid[ny][nx] + hl

              if nx == (w - 1) && ny == (h - 1) && nsteps >= min_steps
                return nhl
              end

              state = [nhl, nx, ny, n_dir, nsteps]

              next if visited.include?(state.last(4))
              visited << state.last(4)

              queue.enqueue(state, nhl)
            end
          end
        end

        # Part 1
        solve(grid: grid)
          .tap { puts _1 }

        # Part 2
        solve(grid: grid, min_steps: 4, max_steps: 10)
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:05 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:05 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4939'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '61'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D35A:1EF7BE:1649B9:2D36B9:67D63915
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-18/README.txt","sha":"ab93cb8049168ccd36a10e0d714a46b85f53b8d2","size":3265,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-18/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ab93cb8049168ccd36a10e0d714a46b85f53b8d2","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-18/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/ab93cb8049168ccd36a10e0d714a46b85f53b8d2","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-18/README.txt"}},{"name":"day-18-input.txt","path":"2023/day-18/day-18-input.txt","sha":"6bee4c140b7bbd78327aaed7f69a7a942d9677fb","size":11299,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18/day-18-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-18/day-18-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/6bee4c140b7bbd78327aaed7f69a7a942d9677fb","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-18/day-18-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18/day-18-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/6bee4c140b7bbd78327aaed7f69a7a942d9677fb","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-18/day-18-input.txt"}},{"name":"day-18-part-1.rb","path":"2023/day-18/day-18-part-1.rb","sha":"77b84d5df9ebd9703205e34dc459394b35bf1dbc","size":1377,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18/day-18-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-18/day-18-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/77b84d5df9ebd9703205e34dc459394b35bf1dbc","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-18/day-18-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18/day-18-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/77b84d5df9ebd9703205e34dc459394b35bf1dbc","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-18/day-18-part-1.rb"}},{"name":"day-18-part-2.rb","path":"2023/day-18/day-18-part-2.rb","sha":"35aa11ee857f1bded23941188794decc81b6e24d","size":1139,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18/day-18-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-18/day-18-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/35aa11ee857f1bded23941188794decc81b6e24d","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-18/day-18-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-18/day-18-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/35aa11ee857f1bded23941188794decc81b6e24d","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-18/day-18-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:05 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-18/day-18-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '648'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"dfc640d8258b894183d2c022d6806f872220ce7d4e57c3b4816c432181fda022"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 6A39:127271:2CCE38:39B2F1:67D632BF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:05 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200149-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092565.472617,VS0,VE43
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 769336a4ab9148624aa42edbce31b8c094630389
      expires:
      - Sun, 16 Mar 2025 02:41:05 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-18-input.txt", __FILE__)
        input     = File.read(file_path)

        DIRS = {
          U: [0, -1],
          D: [0, 1],
          L: [-1, 0],
          R: [1, 0]
        }

        pos = [0, 0]
        dug = [pos]

        input.each_line {
          dir, dis, _ = _1.split
          dis = dis.to_i

          dis.times {
            pos = DIRS[dir.to_sym].zip(pos).map(&:sum)

            dug << pos
          }
        }

        min_x = dug.map(&:first).min
        max_x = dug.map(&:first).max
        min_y = dug.map(&:last).min
        max_y = dug.map(&:last).max

        width = max_x - min_x + 1
        height = max_y - min_y + 1

        grid = []

        height.times {
          grid << Array.new(width, ".")
        }

        dug.each do |x ,y|
          x1 = x - min_x
          y1 = y - min_y

          grid[y1][x1] = ?#
        end

        require 'set'
        empty = Set.new

        # Find external area and flood fill
        width.times.each do |x|
          if grid[0][x] == ?.
            empty << [x, 0]
          end

          if grid[height-1][x] == ?.
            empty << [x, height-1]
          end
        end

        height.times.each do  |y|
          if grid[y][0] == ?.
            empty << [0, y]
          end

          if grid[y][width-1] == ?.
            empty << [width-1, y]
          end
        end

        queue = empty.to_a

        while queue.any?
          x, y = queue.pop

          [[0, -1], [0, 1], [-1, 0], [1, 0]].each do |move|
            x1, y1 = move.zip([x,y]).map(&:sum)

            next if x1 < 0 || x1 >= width || y1 < 0 || y1 >= height
            next if grid[y1][x1] == ?#
            next if empty.include?([x1, y1])

            queue << [x1, y1]
            empty << [x1, y1]
          end
        end

        pp (width * height) - empty.count
  recorded_at: Sun, 16 Mar 2025 02:36:05 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-18/day-18-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '656'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"66984f09d7a1ed55026ad2dd4176b86bfb50939159f4dbf9739de0510d05c0e9"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - AEB8:1CB925:2A4A15:377234:67D632BF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:05 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200030-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092566.663857,VS0,VE69
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f9b1e3f90a470bff7d345c98f13793ea67eb7d30
      expires:
      - Sun, 16 Mar 2025 02:41:05 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-18-input.txt", __FILE__)
        input     = File.read(file_path)

        DIRS = {
          U: [0, -1],
          D: [0, 1],
          L: [-1, 0],
          R: [1, 0]
        }

        pos = [0, 0]
        points = [pos]
        boundary = 0

        input.each_line {
          _, _, hex = _1.split
          hex = hex[2, 6]
          dis = hex[0..4].to_i(16)
          dir = [?R, ?D, ?L, ?U][hex[-1].to_i]

          boundary += dis

          pos = DIRS[dir.to_sym]
            .map { |mod| mod * dis }
            .zip(pos)
            .map(&:sum)

          points << pos
        }

        # Shoe-lace formula to caclulate an area of a polygon
        # https://en.wikipedia.org/wiki/Shoelace_formula#Trapezoid_formula_2
        #
        # Then add the perimeter area which is number of points / 2 + 1
        # The plus one is to account for the net extra four quarter of area
        # from each corner. Some corners represent only a quarter of area,
        # while others represent three quarters. But the net amount will
        # be 4 quarters (imagine a basic square with 4 corners).
        #
        points.count.times
          .map { |i|
            ni = (i + 1) % points.size
            (points[i][1] + points[ni][1]) * (points[i][0] - points[ni][0])
          }
          .sum.abs
          .then { _1 / 2 }
          .then { _1 + boundary / 2 + 1 }
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:05 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:05 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4938'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '62'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D35D:B9773:197DF1E:339957C:67D63915
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-19/README.txt","sha":"d884330bcab5d2b00c8344862fa6373fc8503645","size":4405,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-19/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d884330bcab5d2b00c8344862fa6373fc8503645","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-19/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d884330bcab5d2b00c8344862fa6373fc8503645","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-19/README.txt"}},{"name":"day-19-input.txt","path":"2023/day-19/day-19-input.txt","sha":"430a4e2c7222a20bac33619d926352b2aba18215","size":18634,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19/day-19-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-19/day-19-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/430a4e2c7222a20bac33619d926352b2aba18215","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-19/day-19-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19/day-19-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/430a4e2c7222a20bac33619d926352b2aba18215","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-19/day-19-input.txt"}},{"name":"day-19-part-1.rb","path":"2023/day-19/day-19-part-1.rb","sha":"9225afeb4d2a317c13ce667be068adbff2bce0dc","size":1273,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19/day-19-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-19/day-19-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/9225afeb4d2a317c13ce667be068adbff2bce0dc","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-19/day-19-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19/day-19-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/9225afeb4d2a317c13ce667be068adbff2bce0dc","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-19/day-19-part-1.rb"}},{"name":"day-19-part-2.rb","path":"2023/day-19/day-19-part-2.rb","sha":"9ffb059804bbb5512ab7eca2d8be43848feb1e7f","size":1798,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19/day-19-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-19/day-19-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/9ffb059804bbb5512ab7eca2d8be43848feb1e7f","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-19/day-19-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-19/day-19-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/9ffb059804bbb5512ab7eca2d8be43848feb1e7f","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-19/day-19-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:05 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-19/day-19-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '615'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"410f5214b5ab998999f76b782bc8b90141202be28e970b47a6b1c281e176514b"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - CC76:219E3E:ECB516:12DFD5F:67D632C0
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:06 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100117-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092566.091720,VS0,VE95
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - '000488e5a50a86f97bbbe16de27ce02abde2a887'
      expires:
      - Sun, 16 Mar 2025 02:41:06 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-19-input.txt", __FILE__)
        input     = File.read(file_path)

        fns, parts = input.split("\n\n")

        parts = parts.each_line.map { eval _1.strip.gsub(?=, ?:) }
        fns = fns.each_line.map { _1.strip }

        # Define the Ruby methods :D
        # See part 2 for a less meta solution
        #
        # Example fn
        # hjp{a>2545:nb,a>2381:qx,m>2463:nn,bt}

        fns.each {
          r = _1
            .gsub(/\A/, "def ")                 # start of method
            .gsub(?:, ";")                      # end of if boolean exp
            .gsub(?{, "(o); if o[:")            # end of method def and start of body
            .gsub(?<, "]<")                     # close array accesor
            .gsub(?>, "]>")                     # close array accessor
            .gsub(?}, "(o); end; end")          # end of if brand and end of method
            .gsub(?,, "(o); elsif o[:")         # next if branch (elsif)
            .gsub(":pp", ":ppp")                # avoid redefining `pp` method
            .gsub("def pp(", "def ppp(")        # avoid redefining `pp` method
            .gsub("R(o)", "")                   # ignore calls to R
            .gsub("A(o)", "o.values.sum")       # the answer :)

          r[r.rindex("elsif"), 9] = "else "     # last branch should just be 'else'

          eval r
        }

        parts
          .map { send(:in, _1) }
          .compact
          .sum
          .tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:06 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-19/day-19-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '732'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"03cac2d1d0bdc490ab9d877a28d4098f61cebd372f6bb253e5e01e5a7483b9da"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 37EA:29EDAA:2836AE:351FB1:67D632BF
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:06 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200084-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092566.376182,VS0,VE51
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 91ce87f3c29b916e0bff1d3ee6f9b74528f607f9
      expires:
      - Sun, 16 Mar 2025 02:41:06 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-19-input.txt", __FILE__)
        input     = File.read(file_path)

        fns, parts = input.split("\n\n")

        parts = parts.each_line.map { eval _1.strip.gsub(?=, ?:) }
        ins = fns.each_line.map { _1.strip }

        fns = {}

        ins.each {
          fn, method = _1.split(?{)

          # [[cond, method], ... [method]]
          fns[fn] = method
            .gsub(?}, '')
            .split(?,)
            .map { |exp| exp.split(?:).compact }
        }

        # Part 1
        #
        sum = 0

        parts.each do |part|
          f = "in"

          while f
            if f == "R"
              break
            end

            if f == "A"
              sum += part.values.sum
              break
            end

            fn = fns[f]

            fn.each do |exp|
              if exp.count == 2
                iff = exp[0]
                nf = exp[1]

                sym = iff[0].to_sym
                op = iff[1]
                val = iff[2..-1].to_i

                if part[sym].send(op, val)
                  f = nf
                  break
                end
              else
                f = exp.first
              end
            end
          end
        end

        pp sum


        # Part 2
        #
        queue = [
          ["in", {x: 1..4000, m: 1..4000, a: 1..4000, s: 1..4000 }]
        ]

        sum = 0

        while queue.any?
          f, part = queue.pop

          next if f == "R"

          if f == "A"
            sum += part.values.map(&:size).inject(&:*)
            next
          end

          fns[f].each do |exp|
            if exp.count == 1
              queue << [exp.first, part]
              next
            end

            iff = exp[0]
            nf = exp[1]

            sym = iff[0].to_sym
            op = iff[1]
            val = iff[2..-1].to_i

            r = part[sym]

            if op == ?>
              if r.end > val
                ro = part.clone
                ro[sym] = (val+1)..r.end
                queue << [nf, ro]
              end

              if r.begin <= val
                part[sym] = r.begin..val
              end
            else # <
              if r.begin < val
                lo = part.clone
                lo[sym] = r.begin..(val - 1)
                queue << [nf, lo]
              end

              if val <= r.end
                part[sym] = val..r.end
              end
            end
          end
        end

        pp sum
  recorded_at: Sun, 16 Mar 2025 02:36:06 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:06 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4937'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '63'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D360:150D9E:19D5A87:343A017:67D63916
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-20/README.txt","sha":"385b956830cbe094be740076b6fe5d5c96c00f58","size":6492,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-20/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/385b956830cbe094be740076b6fe5d5c96c00f58","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-20/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/385b956830cbe094be740076b6fe5d5c96c00f58","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-20/README.txt"}},{"name":"day-20-input.txt","path":"2023/day-20/day-20-input.txt","sha":"11baaed50e574192cc19392a2c1895b1c3c87364","size":792,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20/day-20-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-20/day-20-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/11baaed50e574192cc19392a2c1895b1c3c87364","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-20/day-20-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20/day-20-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/11baaed50e574192cc19392a2c1895b1c3c87364","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-20/day-20-input.txt"}},{"name":"day-20-part-1.rb","path":"2023/day-20/day-20-part-1.rb","sha":"0ec7cf612e594d13d3b085aed9674eb21684e613","size":1277,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20/day-20-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-20/day-20-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/0ec7cf612e594d13d3b085aed9674eb21684e613","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-20/day-20-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20/day-20-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/0ec7cf612e594d13d3b085aed9674eb21684e613","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-20/day-20-part-1.rb"}},{"name":"day-20-part-2.rb","path":"2023/day-20/day-20-part-2.rb","sha":"c2a4e432dffb8a6bbf24415f55bbad412a9039b2","size":1633,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20/day-20-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-20/day-20-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c2a4e432dffb8a6bbf24415f55bbad412a9039b2","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-20/day-20-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-20/day-20-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c2a4e432dffb8a6bbf24415f55bbad412a9039b2","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-20/day-20-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:06 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-20/day-20-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '568'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"e55ba616a824c69667f7c21aa35bc85724d73e85fc0785be13be27fe498be4ce"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - D5E0:29EDAA:2836F5:352000:67D632C1
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:06 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200124-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092567.768121,VS0,VE47
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - fc5defb3e94c58ec70ec977b9034b85721fde5a1
      expires:
      - Sun, 16 Mar 2025 02:41:06 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-20-input.txt", __FILE__)
        input     = File.read(file_path)

        modules = {}

        input.each_line.each do
          name, output = _1.split("->").map(&:strip)
          output = output.split(",").map(&:strip)

          if name != "broadcaster"
            type = name[0]
            name = name[1..]
          end

          case type
          when ?%
            memory = false
          when ?&
            memory = {}
          end

          modules[name] = [type, memory, output]
        end

        modules.each do |n, (_type, _memory, out)|
          out.each do |n1|
            type1, memory1, _ = modules[n1]

            memory1[n] = :l if type1 == ?&
          end
        end

        hc = 0
        lc = 0
        queue = []

        1000.times do |i|
          lc += 1

          modules["broadcaster"].last.each do |to|
            queue << ["broadcaster", to, :l]
            lc += 1
          end

          while queue.any?
            from, to, sig = queue.shift

            type, memory, out = modules[to]

            next if type.nil?

            case type
            when ?%
              next if sig == :h

              out_sig = memory ? :l : :h

              modules[to][1] = !memory
            when ?&
              memory[from] = sig

              if memory.values.all? { _1 == :h }
                out_sig = :l
              else
                out_sig = :h
              end
            end

            if out_sig == :l
              lc += out.count
            else
              hc += out.count
            end

            out.each do
              queue << [to, _1, out_sig]
            end
          end
        end

        pp hc * lc
  recorded_at: Sun, 16 Mar 2025 02:36:06 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-20/day-20-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '744'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"5c882f2c000ccd982b164acf20a38b6b3aa30c4ef961845dbb6180df230e12ae"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FAD3:255875:309EC1:3D9B63:67D632C0
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:07 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200079-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092567.958812,VS0,VE48
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 5148d10c5ed0f47a6684f962176384454ebe350a
      expires:
      - Sun, 16 Mar 2025 02:41:07 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-20-input.txt", __FILE__)
        input     = File.read(file_path)

        modules = {}

        input.each_line.each do
          name, output = _1.split("->").map(&:strip)
          output = output.split(",").map(&:strip)

          if name != "broadcaster"
            type = name[0]
            name = name[1..]
          end

          case type
          when ?%
            memory = false
          when ?&
            memory = {}
          end

          modules[name] = [type, memory, output]
        end

        modules.each do |n, (_type, _memory, out)|
          out.each do |n1|
            type1, memory1, _ = modules[n1]

            memory1[n] = :l if type1 == ?&
          end
        end

        queue = []
        cycles = {}

        100_000.times do |i|
          modules["broadcaster"].last.each do |to|
            queue << ["broadcaster", to, :l]
          end

          while queue.any?
            from, to, sig = queue.shift

            type, memory, out = modules[to]

            # My input had these four modules connected to lx which was the
            # conjunction module for rx.
            #
            # For lx to fire to a low pulse to rx, all 4 modules must
            # send a low pulse to lx. Identify the cycle when each module
            # sends a low pulse and find the lcm of these 4 numbers.
            #
            if %w(cl rp lb nj).include?(to) && sig == :l
              cycles[to] = i + 1

              if cycles.size == 4
                pp cycles.values.inject(:lcm)
                exit
              end
            end

            next if type.nil?

            case type
            when ?%
              next if sig == :h

              out_sig = memory ? :l : :h

              modules[to][1] = !memory
            when ?&
              memory[from] = sig

              if memory.values.all? { _1 == :h }
                out_sig = :l
              else
                out_sig = :h
              end
            end

            out.each do
              queue << [to, _1, out_sig]
            end
          end
        end
  recorded_at: Sun, 16 Mar 2025 02:36:06 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:07 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4936'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '64'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D363:2B55FC:17D86F:30650C:67D63917
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-21/README.txt","sha":"c918e76d7a263fcd935ce4c6a6f9b7cf3218801a","size":5354,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-21/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c918e76d7a263fcd935ce4c6a6f9b7cf3218801a","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-21/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c918e76d7a263fcd935ce4c6a6f9b7cf3218801a","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-21/README.txt"}},{"name":"day-21-input.txt","path":"2023/day-21/day-21-input.txt","sha":"c4bd55ef1a731506cd10fb22c307f7b39f8e7869","size":17292,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21/day-21-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-21/day-21-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c4bd55ef1a731506cd10fb22c307f7b39f8e7869","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-21/day-21-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21/day-21-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c4bd55ef1a731506cd10fb22c307f7b39f8e7869","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-21/day-21-input.txt"}},{"name":"day-21-part-1.rb","path":"2023/day-21/day-21-part-1.rb","sha":"7d39376a037adce5f41eaaba4d52304a624b2912","size":712,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21/day-21-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-21/day-21-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/7d39376a037adce5f41eaaba4d52304a624b2912","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-21/day-21-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21/day-21-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/7d39376a037adce5f41eaaba4d52304a624b2912","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-21/day-21-part-1.rb"}},{"name":"day-21-part-2.rb","path":"2023/day-21/day-21-part-2.rb","sha":"b37cc2e7e15076ebe463f2841e0e2dcf572c637f","size":3308,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21/day-21-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-21/day-21-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/b37cc2e7e15076ebe463f2841e0e2dcf572c637f","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-21/day-21-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-21/day-21-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/b37cc2e7e15076ebe463f2841e0e2dcf572c637f","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-21/day-21-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:07 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-21/day-21-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '427'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"3fad96fd6202651409a64e7719919df5b598e6bf9ed96e5756e33126ec18e976"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 2D8D:29EDAA:283754:352098:67D632C1
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:07 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200133-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092567.351213,VS0,VE48
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - baacbf6c7283277bf212646fd41e4acb9af14761
      expires:
      - Sun, 16 Mar 2025 02:41:07 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-21-input.txt", __FILE__)
        input     = File.read(file_path)

        grid = input.each_line.map { _1.strip.chars }

        w = grid.first.count
        h = grid.count

        idx = grid.flatten.index(?S)

        y = idx / h
        x = idx % h

        queue = [[x, y, 0]]

        visited = {}
        visited[[x,y]] = 0

        while queue.any?
          x, y, step = queue.shift

          [[0, 1], [0, -1], [1, 0], [-1, 0]].each do |dir|
            x1, y1 = dir.zip([x,y]).map(&:sum)

            next if x1 < 0 || y1 < 0 || x1 >= w || y1 >= h

            c = grid[y1][x1]

            next if c == ?#
            next if visited[[x1, y1]]

            visited[[x1,y1]] = step + 1
            queue << [x1, y1, step + 1]
          end
        end

        visited.values
          .count { _1 <= 64 && _1.even? }
          .tap { pp _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:07 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-21/day-21-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1443'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"2dfe9ee7c33f0b0c8cf61a32ebaad50f3365d674b50693397ce9cf32c8369eae"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 8990:1A3DEA:E76A2B:128C272:67D632C1
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:07 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100054-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092568.537573,VS0,VE88
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 4d699d8230e812f3016516db546ffcd936a7ae7b
      expires:
      - Sun, 16 Mar 2025 02:41:07 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-21-input.txt", __FILE__)
        input     = File.read(file_path)

        grid = input.each_line.map { _1.strip.chars }

        w = grid.first.count
        h = grid.count

        idx = grid.flatten.index(?S)

        y = idx / h
        x = idx % h

        # Observations
        #
        # * We start at the centre of the grid
        # * The grid is square and has an odd width and length
        # * e.g. 131 x 131 and we start in the middle at index 65, 65
        # * There is no rocks in the starting row and column therefore it is possible
        # to reach any edge in 65 steps
        # * From the centre point of any edge (middle row or column), we can
        # walk to the opposite edge in 131 steps
        # * The border of the grid has no rocks
        # * From the centre, we can reach the corner of any grid in 65 + 65 steps
        # * From corner of any grid, we can reach the centre of a connecting edge
        # in 65 steps.
        # * From the centre, we can reach the furtherest edges of the four adjacent
        # grids in 65 + 131 steps (by walking up, down, right, left to the edge in
        # 65 steps, then walk from one edge to the opposite edge in 131 steps)
        # * From the centre, we can reach furtherest edges of grids (2 grids away) in
        # 65 + 131 * 2 steps. For the third furtherest grids, it is 65 + 131 * 3
        # * We can draw a diamond in a universe where the grid is duplicated 3 times
        # wide and high (3 x 3). From the centre, it takes 65 + 131 steps to reach
        # the corner of the diamond, and the furtherest edge of a 3 x 3 universe
        # * We can extend the universe by 131 * 2 and grow it into a 5 x 5 grid
        # of grids. You can reap the process again and again for a 7x7, 9x9 and so
        # on.
        # * Observe the growth of our universe is quadratic!
        # * The diamond (representing the reachable area) is also quadratic.
        #
        #        ------
        #        | /\ |
        #        |/  \|
        #       /|    |\
        #   ___/_|____|_\___
        #   | /  |    |  \ |
        #   |/   |    |   \|
        #   |\   |    |   /|
        #   |_\ _|____|_ /_|
        #      \ |    | /
        #       \|    |/
        #        |\  /|
        #        |_\/_|
        #
        # * The number of steps in our problem is 65 + 131 * 202300 = 26_501_365
        # * We can solve the reachable area for the following:
        #   - (65 + 131) + 131 * 0 = y0
        #   - (65 + 131) + 131 * 1 = y1
        #   - (65 + 131) + 131 * 2 = y2
        # * And use these points to solve for a, b and c of the quadratic formula:
        # y = ax^2 + bx + c where y is the number of reachable points and x is the
        # size (as a multiple of 131 + (65 + 131)) of our universe
        #
        # * Apply a bit of algebra to solve a, b and c
        # * y0 = c = a0^2 + b0 + c
        # * y1 = a + b + c = a1^2 + 1b + c
        # * y2 = a2^2 + 2b + c = 4a + 2b + c
        # * a = (y2 + c - 2y1) / 2
        # * b = y1 - a - c
        #
        # * Plug in 26_501_365 / 131 in the forumla to get the answer!

        queue = [[x, y, 0]]

        visited = {}
        visited[[x,y]] = 0

        while queue.any?
          x, y, step = queue.shift

          [[0, 1], [0, -1], [1, 0], [-1, 0]].each do |dir|
            x1, y1 = dir.zip([x,y]).map(&:sum)

            y2 = y1 % h
            x2 = x1 % w
            c = grid[y2][x2]

            next if c == ?#
            next if visited[[x1, y1]]
            next if step > w * 3

            visited[[x1,y1]] = step + 1
            queue << [x1, y1, step + 1]
          end
        end

        y0, y1, y2 = 3.times.map { |i|
          # 65 + 131 * i
          step = w / 2 + w * i

          visited.values
            .count { _1 <= step && _1 % 2 == step % 2 }
        }

        c = y0
        a = (y2 + c - 2 * y1) / 2
        b = y1 - a - c

        steps = 26_501_365

        x = steps / w
        y = a * x**2 + b * x + c

        pp y
  recorded_at: Sun, 16 Mar 2025 02:36:07 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-22
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:07 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4935'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '65'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D366:7303F:111B54:22CDBA:67D63917
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-22/README.txt","sha":"2ac52175d11ca76b88c122d4995f10c93e18cf8d","size":6193,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-22/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-22/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/2ac52175d11ca76b88c122d4995f10c93e18cf8d","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-22/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-22/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/2ac52175d11ca76b88c122d4995f10c93e18cf8d","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-22/README.txt"}},{"name":"day-22-input.txt","path":"2023/day-22/day-22-input.txt","sha":"5a27d25c8a1a697e74d69bd7795e82ce84584270","size":18576,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-22/day-22-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-22/day-22-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/5a27d25c8a1a697e74d69bd7795e82ce84584270","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-22/day-22-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-22/day-22-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/5a27d25c8a1a697e74d69bd7795e82ce84584270","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-22/day-22-input.txt"}},{"name":"day-22-part-1-and-2.rb","path":"2023/day-22/day-22-part-1-and-2.rb","sha":"3ea68cca703d2f42ab78887c7e047cf68fb46fb0","size":2649,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-22/day-22-part-1-and-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-22/day-22-part-1-and-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3ea68cca703d2f42ab78887c7e047cf68fb46fb0","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-22/day-22-part-1-and-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-22/day-22-part-1-and-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/3ea68cca703d2f42ab78887c7e047cf68fb46fb0","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-22/day-22-part-1-and-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:07 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-22/day-22-part-1-and-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1112'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"d0ac92a9324c6da4bcbfc16a42c7a9f4fc9a4928026a1eb4daa72d257282041c"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 978A:203D87:2E6F6F:3AF924:67D62FB6
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:08 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100084-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092568.958379,VS0,VE96
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - e5ea9463d4ddf61c84f8ced5d48a0dce26ea9586
      expires:
      - Sun, 16 Mar 2025 02:41:08 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-22-input.txt", __FILE__)
        input     = File.read(file_path)

        def overlap?(range1, range2)
          range1.cover?(range2.begin) || range2.cover?(range1.begin)
        end

        def intersect?(brick, other)
          bf = brick[0]
          bt = brick[1]
          of = other[0]
          ot = other[1]

          bx = bf[0]..bt[0]
          by = bf[1]..bt[1]
          bz = bf[2]..bt[2]

          ox = of[0]..ot[0]
          oy = of[1]..ot[1]
          oz = of[2]..ot[2]

          overlap?(bx, ox) && overlap?(by, oy) && overlap?(bz, oz)
        end

        bricks = input.each_line.map do
          _1.strip.split(?~).map { |pos| pos.split(?,).map(&:to_i) }
        end

        bricks.sort_by! { |from, _| from.last }

        # A poor (but adequate) look up Hash based on Z position
        map = Hash.new { |h, k| h[k] = [] }
        bricks.each do |brick|
          (brick.first.last..brick.last.last).each do |z|
            map[z] << brick
          end
        end

        bricks.each do |from, to|
          while from[2] != 1
            spec_brick = [from.clone, to.clone]
            spec_brick[0][2] -= 1
            spec_brick[1][2] -= 1

            z1 = from[2]
            z2 = to[2]

            # Detect for any blocking brick at z - 1
            break if map[z1 - 1].any? { |other| intersect?(spec_brick, other) }

            # Move it down
            from[2] -= 1
            to[2]   -= 1

            # Update the Z position Hash
            (z1..z2).each {
              map[_1].delete([from, to])
              map[_1 - 1] << [from, to]
            }
          end
        end

        bricks.sort_by! { |from, to| [from.last, to.last].min }

        require 'set'
        sole_supports = Set.new

        above = Hash.new { |h, k| h[k] = [] }
        below = {}

        bricks.each.with_index { |(from, to), bidx|
          spec_brick = [from.clone, to.clone]
          spec_brick[0][2] -= 1
          spec_brick[1][2] -= 1

          # List of bricks supporting the current brick
          supports = bricks.map.with_index
            .select { |other, _| intersect?(spec_brick, other) }
            .reject { |other, _| [from, to] == other }

          supports.map(&:last).each {
            above[_1] << bidx
          }
          below[bidx] = supports.map(&:last)

          if supports.count == 1
            sole_supports << supports.first.last
          end
        }

        # Part 1
        pp bricks.count - sole_supports.count

        # Part 2
        sole_supports.sum { |idx|
          fell = Set.new
          fell << idx

          candidates = Set.new

          above[idx].each { candidates << _1 }

          falling = true
          while falling
            falling = false

            # to_a to allow modification of candidates while iterating through it
            candidates.to_a.each { |candidate|
              # Check if this candidate has all their supports removed
              if below[candidate].all? { fell.include?(_1) }
                candidates.delete(candidate)
                fell << candidate
                above[candidate].each { candidates << _1 }
                falling = true
                break
              end
            }
          end

          # Less the brick that was removed
          fell.count - 1
        }.tap { puts _1 }
  recorded_at: Sun, 16 Mar 2025 02:36:08 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:08 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4934'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '66'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D368:2B55FC:17DC03:306C39:67D63918
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-23/README.txt","sha":"d36c84e9046dbc1a7d3f0949c425e683f8152d31","size":3850,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-23/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d36c84e9046dbc1a7d3f0949c425e683f8152d31","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-23/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/d36c84e9046dbc1a7d3f0949c425e683f8152d31","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-23/README.txt"}},{"name":"day-23-input.txt","path":"2023/day-23/day-23-input.txt","sha":"1a663e04aa30bdac89b05fce2d1cf5d0ee22de18","size":20022,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23/day-23-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-23/day-23-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/1a663e04aa30bdac89b05fce2d1cf5d0ee22de18","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-23/day-23-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23/day-23-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/1a663e04aa30bdac89b05fce2d1cf5d0ee22de18","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-23/day-23-input.txt"}},{"name":"day-23-part-1.rb","path":"2023/day-23/day-23-part-1.rb","sha":"935bdb290de5a64b3d9b9a521aa3d5214cfb78e2","size":1266,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23/day-23-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-23/day-23-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/935bdb290de5a64b3d9b9a521aa3d5214cfb78e2","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-23/day-23-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23/day-23-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/935bdb290de5a64b3d9b9a521aa3d5214cfb78e2","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-23/day-23-part-1.rb"}},{"name":"day-23-part-2.rb","path":"2023/day-23/day-23-part-2.rb","sha":"c2c202c05f4eef845e70edd7af7b3caf66203763","size":1715,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23/day-23-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-23/day-23-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c2c202c05f4eef845e70edd7af7b3caf66203763","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-23/day-23-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-23/day-23-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/c2c202c05f4eef845e70edd7af7b3caf66203763","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-23/day-23-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-23/day-23-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '567'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"2b23f99f81a90b161421982ffc4aba505388566061a917d04139cd7ae68aa59b"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 6DE6:281070:2B70A3:3864E7:67D632B6
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:08 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200084-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092568.407958,VS0,VE57
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - c1afdabde5a61fa10fea799c16a96024469a9b9a
      expires:
      - Sun, 16 Mar 2025 02:41:08 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-23-input.txt", __FILE__)
        input     = File.read(file_path)

        require 'set'

        $cache = {}

        def distance(start, grid)
          return $cache[start] if $cache[start]

          curr = start

          w = grid.first.size
          h = grid.size

          goal = [grid.last.index(?.), h - 1]

          visited = [curr].to_set

          while curr != goal
            opts = [[0, 1], [1, 0], [-1, 0], [0, -1]]
              .map { |mod| mod.zip(curr).map(&:sum) }
              .reject { |x, y| x < 0 || y < 0 || x >= w || y >= h }
              .reject { visited.include?(_1) }
              .select { |x, y| grid[y][x] != ?# }
              .reject { |x, y| grid[y][x] == ?> && x < curr[0] }
              .reject { |x, y| grid[y][x] == ?v && y < curr[1] }
              .reject { |x, y| grid[curr[1]][curr[0]] == ?v && y < curr[1] }
              .reject { |x, y| grid[curr[1]][curr[0]] == ?> && x < curr[0] }

            if opts.count == 1
              curr = opts.first.clone
              visited << curr
            elsif opts.count > 1
              count = visited.count + opts.map { distance(_1.clone, grid) }.max
              $cache[start] = count

              return count
            end
          end

          $cache[start] = visited.count

          visited.count
        end

        grid = input.each_line.map { _1.strip.chars }

        x = grid.first.index(?.)
        y = 0

        # Exclude starting position
        pp distance([x, y], grid) - 1
  recorded_at: Sun, 16 Mar 2025 02:36:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-23/day-23-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '888'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"7678bf1e391f3b42117c7768368478ecfd1f17581479daee8c5d00de8de41eb6"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 765A:204995:2514D0:31FA23:67D632C3
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:08 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100030-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092569.603995,VS0,VE79
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 517db4edfa560a7164af6ac8da580bc8c8766907
      expires:
      - Sun, 16 Mar 2025 02:41:08 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-23-input.txt", __FILE__)
        input     = File.read(file_path)

        require 'set'

        grid = input.each_line.map { _1.strip.chars }

        x = grid.first.index(?.)
        y = 0

        w = grid.first.size
        h = grid.size

        goal = [grid.last.index(?.), h - 1]

        graph = Hash.new { |h, k| h[k] = {} }

        queue = [[[x,y], [x,y]]]

        while queue.any?
          pos, origin = queue.shift

          visited = [pos].to_set

          until graph[origin][pos]
            opts = [[0, 1], [1, 0], [-1, 0], [0, -1]]
              .map { |mod| mod.zip(pos).map(&:sum) }
              .reject { |x, y| x < 0 || y < 0 || x >= w || y >= h }
              .select { |x, y| grid[y][x] != ?# }
              .reject { visited.include?(_1) }
              .reject { _1 == origin }

            # Only one direction - keep moving
            if opts.count == 1
              pos = opts.first.clone

              visited << pos
            # Found an intersection or reached the goal (no where left to go)
            elsif opts.count > 1 || opts.empty?
              opts.each { |opt| queue << [opt, pos] }

              graph[origin][pos] = visited.count
              graph[pos][origin] = visited.count
            end
          end
        end


        $max = 0

        def dfs(pos, graph, goal, seen = Set.new)
          return 0 if pos == goal

          # Return a negative number if we can't find a solution where
          # we end on the goal square
          max = -100_000

          # Prevent revisiting existing nodes
          seen << pos

          graph[pos].each do |node, dist|
            next if seen.include?(node)

            max = [
              max,
              dfs(node, graph, goal, seen) + dist
            ].max

            if max > $max
              puts max
              $max = max
            end
          end

          # So other DFS calls can visit this node
          seen.delete(pos)

          max
        end

        # This takes ~ 1 min to run
        # We subtract one to remove the starting square
        pp dfs([x,y], graph, goal) - 1
  recorded_at: Sun, 16 Mar 2025 02:36:08 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:08 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4933'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '67'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D36B:7303F:111E6A:22D3D3:67D63918
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-24/README.txt","sha":"04a2c2dd163ba73c6c775c2d0eda76485c23c70e","size":5821,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-24/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/04a2c2dd163ba73c6c775c2d0eda76485c23c70e","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-24/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/04a2c2dd163ba73c6c775c2d0eda76485c23c70e","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-24/README.txt"}},{"name":"day-24-input.txt","path":"2023/day-24/day-24-input.txt","sha":"f02dd0fdcc64f07efa7bc37be03a7a63bfc6df04","size":19674,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24/day-24-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-24/day-24-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/f02dd0fdcc64f07efa7bc37be03a7a63bfc6df04","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-24/day-24-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24/day-24-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/f02dd0fdcc64f07efa7bc37be03a7a63bfc6df04","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-24/day-24-input.txt"}},{"name":"day-24-part-1.rb","path":"2023/day-24/day-24-part-1.rb","sha":"481a830237987e6cb94c10f6ab195f8ae6763011","size":836,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24/day-24-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-24/day-24-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/481a830237987e6cb94c10f6ab195f8ae6763011","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-24/day-24-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24/day-24-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/481a830237987e6cb94c10f6ab195f8ae6763011","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-24/day-24-part-1.rb"}},{"name":"day-24-part-2.rb","path":"2023/day-24/day-24-part-2.rb","sha":"e7aac6c4c68d904bfef7368477fcd84b410e5286","size":2576,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24/day-24-part-2.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-24/day-24-part-2.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/e7aac6c4c68d904bfef7368477fcd84b410e5286","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-24/day-24-part-2.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-24/day-24-part-2.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/e7aac6c4c68d904bfef7368477fcd84b410e5286","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-24/day-24-part-2.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:08 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-24/day-24-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '454'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"814e6b366ddd0623a1ad0ca7e7786d933e6f5203e118ebda1c136b708fd01c6b"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 4DDC:B7FC7:2A895F:37712D:67D632C3
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:09 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100092-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092569.039819,VS0,VE43
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 2a196a2ec568d24a0e3cf04d4d92f18f88037d06
      expires:
      - Sun, 16 Mar 2025 02:41:09 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |+
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-24-input.txt", __FILE__)
        input     = File.read(file_path)

        stones = input.each_line.map {
          pos, vel = _1.split(?@)

          pos = pos.strip.split(?,).map(&:to_i)
          vel = vel.strip.split(?,).map(&:to_i)

          # Solve for a and b in y = ax + b
          a = vel[1] / vel[0].to_f
          b = pos[1] - (a * pos[0])
          [pos, vel, a, b]
        }

        from = 200000000000000
        to = 400000000000000

        stones.combination(2).count { |s1, s2|
          p1, v1, a1, b1 = s1
          p2, v2, a2, b2 = s2

          next if (a1 - a2) == 0

          # Use y = ax + b and a bit of algebra to solve for x and y
          x = (b2 - b1).to_f / (a1 - a2)
          y = a1 * x + b1

          next if x > p1[0] && v1[0] < 0
          next if x < p1[0] && v1[0] > 0
          next if x > p2[0] && v2[0] < 0
          next if x < p2[0] && v2[0] > 0

          x >= from && x <= to && y >= from && y <= to
        }.tap { puts _1 }

  recorded_at: Sun, 16 Mar 2025 02:36:09 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-24/day-24-part-2.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1167'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"3d59550a7646a305935e8cd697d2e78da95a85ee5a1a1892e95b672b30950ce1"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 8A83:AFB4B:2D6062:3A896D:67D632C2
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:09 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200169-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092569.222838,VS0,VE61
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 4f58436d4501d41df2a819dcc167ce261d9a8431
      expires:
      - Sun, 16 Mar 2025 02:41:09 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-24-input.txt", __FILE__)
        input     = File.read(file_path)

        stones = input.each_line.map {
          pos, vel = _1.split(?@)

          pos = pos.strip.split(?,).map(&:to_i)
          vel = vel.strip.split(?,).map(&:to_i)

          [pos, vel]
        }

        # gem install 'prime'
        require 'prime'

        def factors_of(number)
          primes, powers = number.prime_division.transpose
          exponents = powers.map { (0.._1).to_a }

          exponents.shift.product(*exponents).map do |powers|
            primes
              .zip(powers)
              .map { |prime, power| prime ** power }
              .inject(:*)
          end
        end

        # Infer rock velocities by identifying hailstones with the same velocities
        # across one dimension, and identifying the factors in the difference in
        # that dimension.
        #
        # The rock's velocity, vx, must move as factor of the difference of two
        # hailstones (with respect to relative velocities of the hailstones):
        #
        # vx = hailstone velocity +/- factor of the difference between two hailstones
        #
        # https://www.reddit.com/r/adventofcode/comments/18qcfsp
        #
        # idx - x, y, z
        #
        # 0 - x
        # 1 - y
        # 2 - z
        #
        def rock_v(idx, stones)
          stones
            .group_by { |pos, vel| vel[idx] }
            .select { |vel, stones| stones.size == 2 }
            .transform_values { _1.map { |pos, _vel| pos[idx] } }
            .map { |v, p|
              [
                v,
                p.inject(&:-).abs
              ]
            }
            .select { |_v, d| d != 0 }
            .map { |v, d|
              factors_of(d).flat_map { |f| [v - f, v + f] }
            }
            .inject(&:&)
            .first
        end

        # Find the common intersection point for a series of hail stones.
        #
        # A moving rock is the same as the keeping the rock stationary and
        # adjusting the hailstone velocities relative to the rock's velocity
        #
        # Components (comp) is an array composed of two dimensions:
        #
        # 0 - x
        # 1 - y
        # 2 - z
        #
        def intersection(stones, comp, rock_v0, rock_v1)
          stones.combination(2).map { |s1, s2|
            p1, v1 = s1
            p2, v2 = s2

            a1 = (v1[comp[1]] - rock_v1) / (v1[comp[0]] - rock_v0).to_f
            b1 = p1[comp[1]] - (a1 * p1[comp[0]])

            a2 = (v2[comp[1]] - rock_v1) / (v2[comp[0]] - rock_v0).to_f
            b2 = p2[comp[1]] - (a2 * p2[comp[0]])

            # Use y = ax + b and a bit of algebra to solve for x and y
            #
            # x - component 1
            # y - component 2
            x = (b2 - b1).to_f / (a1 - a2)
            y = a1 * x + b1

            [x, y].map(&:round).map(&:to_i)
          }
            .tally.sort_by(&:last).last.first
        end

        rvx = rock_v(0, stones)
        rvy = rock_v(1, stones)
        rvz = rock_v(2, stones)

        pp rvx
        pp rvy
        pp rvz

        x, y = intersection(stones.sample(3), [0, 1], rvx, rvy)
        _, z = intersection(stones.sample(3), [0, 2], rvx, rvz)

        pp x + y + z
  recorded_at: Sun, 16 Mar 2025 02:36:09 GMT
- request:
    method: get
    uri: https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-25
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:09 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"47de7c651b56bfff8068040fb9af4f15ec7ce17e"
      last-modified:
      - Fri, 14 Feb 2025 07:35:16 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4932'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '68'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D36E:38E635:176367:2F77E0:67D63919
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"README.txt","path":"2023/day-25/README.txt","sha":"911b5d9c50d5f61de5aa62744fbe5a2aad246c60","size":3018,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-25/README.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-25/README.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/911b5d9c50d5f61de5aa62744fbe5a2aad246c60","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-25/README.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-25/README.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/911b5d9c50d5f61de5aa62744fbe5a2aad246c60","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-25/README.txt"}},{"name":"day-25-input.txt","path":"2023/day-25/day-25-input.txt","sha":"b33815c39cafbf29976d2289dd9e991314d7e896","size":19423,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-25/day-25-input.txt?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-25/day-25-input.txt","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/b33815c39cafbf29976d2289dd9e991314d7e896","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-25/day-25-input.txt","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-25/day-25-input.txt?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/b33815c39cafbf29976d2289dd9e991314d7e896","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-25/day-25-input.txt"}},{"name":"day-25-part-1.rb","path":"2023/day-25/day-25-part-1.rb","sha":"95209795e02f65d5f0e4815607b39e1582f01622","size":1630,"url":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-25/day-25-part-1.rb?ref=main","html_url":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-25/day-25-part-1.rb","git_url":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/95209795e02f65d5f0e4815607b39e1582f01622","download_url":"https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-25/day-25-part-1.rb","type":"file","_links":{"self":"https://api.github.com/repos/gchan/advent-of-code-ruby/contents/2023/day-25/day-25-part-1.rb?ref=main","git":"https://api.github.com/repos/gchan/advent-of-code-ruby/git/blobs/95209795e02f65d5f0e4815607b39e1582f01622","html":"https://github.com/gchan/advent-of-code-ruby/blob/main/2023/day-25/day-25-part-1.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:09 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/gchan/advent-of-code-ruby/main/2023/day-25/day-25-part-1.rb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '790'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"d090898cd37d9d12291595f373d3bc53790811ac7a2f7116bb6e3786951c1fa4"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FFAD:1E08FD:2C2B38:39123D:67D632C4
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:09 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200139-IAD
      x-cache:
      - HIT
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092570.667491,VS0,VE43
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 60fbf628014a88a4bc6eb0a918accad258305cd3
      expires:
      - Sun, 16 Mar 2025 02:41:09 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        #!/usr/bin/env ruby

        file_path = File.expand_path("../day-25-input.txt", __FILE__)
        input     = File.read(file_path)

        require 'set'

        graph = Hash.new { |h, k| h[k] = [] }

        input.each_line.each {
          from, to = _1.strip.split(?:)

          to.split.each { |other|
            graph[from] << other
            graph[other] << from
          }
        }

        def dfs(from, goal, graph)
          queue = graph[from].map { |to| [from, to] }

          while queue.any?
            path = queue.shift
            curr = path.last

            return path if curr == goal

            graph[curr].each do |to|
              next if path.include?(to)

              queue << (path.clone << to)
            end
          end

          raise
        end

        nodes = graph.keys

        edge_counts = Hash.new(0)

        # Sample 150 node pairs and tally the edges (node pairs) in the path
        # It is possible to sample less than 150
        #
        # Note this doesn't work on the sample input, replace with
        # nodes.combination(2).each ...
        nodes.shuffle.first(150).zip(nodes.shuffle.first(150)).each do |from, to|
          next if from == to

          dfs(from, to, graph).each_cons(2).to_a.each do |pair|
            edge_counts[pair.sort] += 1
          end

          print ?.
          #pp edge_counts.sort_by(&:last).reverse.first(5)
        end
        puts

        # Remove 3 most used edges from the graph
        edge_counts.sort_by(&:last).last(3).each do |(from, to), _|
          graph[from].delete(to)
          graph[to].delete(from)
        end

        def flood(node, graph)
          visited = [node].to_set
          queue = [node]

          while queue.any?
            node = queue.shift

            graph[node].each { |to|
              next if visited.include?(to)
              visited << to
              queue << to
            }
          end

          visited
        end

        # Count the number of nodes in one group
        seen = flood(nodes.first, graph).count
        pp (graph.keys.count - seen) * seen
  recorded_at: Sun, 16 Mar 2025 02:36:09 GMT
- request:
    method: get
    uri: https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/vnd.github+json
      Authorization:
      - token stubbed_github_token
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Sun, 16 Mar 2025 02:36:09 GMT
      content-type:
      - application/json; charset=utf-8
      cache-control:
      - private, max-age=60, s-maxage=60
      vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With
      etag:
      - W/"8d3d2fd8886f4e1a24cf6654f2afee695e71e1bd"
      last-modified:
      - Fri, 22 Nov 2024 11:18:02 GMT
      x-oauth-scopes:
      - repo
      x-accepted-oauth-scopes:
      - ''
      x-github-media-type:
      - github.v3; format=json
      x-github-api-version-selected:
      - '2022-11-28'
      x-ratelimit-limit:
      - '5000'
      x-ratelimit-remaining:
      - '4931'
      x-ratelimit-reset:
      - '1742095124'
      x-ratelimit-used:
      - '69'
      x-ratelimit-resource:
      - core
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      content-encoding:
      - gzip
      transfer-encoding:
      - chunked
      x-github-request-id:
      - D370:210796:181D36:30EEFE:67D63919
      server:
      - github.com
    body:
      encoding: UTF-8
      string: '[{"name":"01_trebuchet.rb","path":"2023/01_trebuchet.rb","sha":"fe3690aceb1e9006cc1fa7e7dcc415027eb61472","size":21945,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/01_trebuchet.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/01_trebuchet.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/fe3690aceb1e9006cc1fa7e7dcc415027eb61472","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/01_trebuchet.rb?token=ACG6TJ2R4K3V6JPYSWO2P53H2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/01_trebuchet.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/fe3690aceb1e9006cc1fa7e7dcc415027eb61472","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/01_trebuchet.rb"}},{"name":"02_cube_conundrum.rb","path":"2023/02_cube_conundrum.rb","sha":"eab765a71037b4da369f821477eefdb8ac434b75","size":10846,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/02_cube_conundrum.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/02_cube_conundrum.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/eab765a71037b4da369f821477eefdb8ac434b75","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/02_cube_conundrum.rb?token=ACG6TJ3ALVJWAGYP2BINUGLH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/02_cube_conundrum.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/eab765a71037b4da369f821477eefdb8ac434b75","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/02_cube_conundrum.rb"}},{"name":"03_gear_ratios.rb","path":"2023/03_gear_ratios.rb","sha":"07b7ee5a80bfb366fa749fea8eb6f010d94ca87a","size":20169,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/03_gear_ratios.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/03_gear_ratios.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/07b7ee5a80bfb366fa749fea8eb6f010d94ca87a","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/03_gear_ratios.rb?token=ACG6TJZ65Y3RRH5KAZRXGXTH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/03_gear_ratios.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/07b7ee5a80bfb366fa749fea8eb6f010d94ca87a","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/03_gear_ratios.rb"}},{"name":"04_scratchcards.rb","path":"2023/04_scratchcards.rb","sha":"0214341a1b6ad4cab60aea0a1e8117b42e1fe7e8","size":24993,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/04_scratchcards.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/04_scratchcards.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/0214341a1b6ad4cab60aea0a1e8117b42e1fe7e8","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/04_scratchcards.rb?token=ACG6TJ2BWSIDUO2XCIXT2LDH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/04_scratchcards.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/0214341a1b6ad4cab60aea0a1e8117b42e1fe7e8","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/04_scratchcards.rb"}},{"name":"05_if_you_give_a_seed_a_fertilizer.rb","path":"2023/05_if_you_give_a_seed_a_fertilizer.rb","sha":"8b13ab605ad55bbfeccffefbc2b2696e3796561d","size":8227,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/05_if_you_give_a_seed_a_fertilizer.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/05_if_you_give_a_seed_a_fertilizer.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/8b13ab605ad55bbfeccffefbc2b2696e3796561d","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/05_if_you_give_a_seed_a_fertilizer.rb?token=ACG6TJ5FJVHFICRBBM73ULTH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/05_if_you_give_a_seed_a_fertilizer.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/8b13ab605ad55bbfeccffefbc2b2696e3796561d","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/05_if_you_give_a_seed_a_fertilizer.rb"}},{"name":"06_wait_for_it.rb","path":"2023/06_wait_for_it.rb","sha":"03ec7a69e44e7236fd84f9f3ec9a8eb50580c5a0","size":351,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/06_wait_for_it.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/06_wait_for_it.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/03ec7a69e44e7236fd84f9f3ec9a8eb50580c5a0","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/06_wait_for_it.rb?token=ACG6TJ5O5NQT77ANUBIXXJTH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/06_wait_for_it.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/03ec7a69e44e7236fd84f9f3ec9a8eb50580c5a0","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/06_wait_for_it.rb"}},{"name":"07_camel_cards.rb","path":"2023/07_camel_cards.rb","sha":"e3227d5bb857463f9d0160ac51e95eaaafa0cb9c","size":10283,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/07_camel_cards.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/07_camel_cards.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/e3227d5bb857463f9d0160ac51e95eaaafa0cb9c","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/07_camel_cards.rb?token=ACG6TJ6AWLXKCDLFYPBR2K3H2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/07_camel_cards.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/e3227d5bb857463f9d0160ac51e95eaaafa0cb9c","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/07_camel_cards.rb"}},{"name":"08_haunted_wasteland.rb","path":"2023/08_haunted_wasteland.rb","sha":"5743530bb3993ab746343fed0ac91ac3ccaa7fcc","size":13687,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/08_haunted_wasteland.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/08_haunted_wasteland.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/5743530bb3993ab746343fed0ac91ac3ccaa7fcc","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/08_haunted_wasteland.rb?token=ACG6TJ6N6LJRMZIODG3HZQTH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/08_haunted_wasteland.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/5743530bb3993ab746343fed0ac91ac3ccaa7fcc","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/08_haunted_wasteland.rb"}},{"name":"09_mirage_maintenance.rb","path":"2023/09_mirage_maintenance.rb","sha":"6cf6d839a572095902fc48927ca847507619edae","size":21551,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/09_mirage_maintenance.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/09_mirage_maintenance.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/6cf6d839a572095902fc48927ca847507619edae","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/09_mirage_maintenance.rb?token=ACG6TJYNOGJBLXY67RQTYM3H2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/09_mirage_maintenance.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/6cf6d839a572095902fc48927ca847507619edae","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/09_mirage_maintenance.rb"}},{"name":"10_pipe_maze.rb","path":"2023/10_pipe_maze.rb","sha":"ec02dd3286fa21d6222928445af3d6be45ffc345","size":21152,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/10_pipe_maze.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/10_pipe_maze.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/ec02dd3286fa21d6222928445af3d6be45ffc345","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/10_pipe_maze.rb?token=ACG6TJ4UKBK3MHY4NQIH7K3H2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/10_pipe_maze.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/ec02dd3286fa21d6222928445af3d6be45ffc345","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/10_pipe_maze.rb"}},{"name":"11_cosmic_expansion.rb","path":"2023/11_cosmic_expansion.rb","sha":"7710d56bcb863b45646be3a4d71b75ca57b3b793","size":20198,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/11_cosmic_expansion.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/11_cosmic_expansion.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/7710d56bcb863b45646be3a4d71b75ca57b3b793","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/11_cosmic_expansion.rb?token=ACG6TJ2NRMAYEDKXQWY2JZTH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/11_cosmic_expansion.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/7710d56bcb863b45646be3a4d71b75ca57b3b793","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/11_cosmic_expansion.rb"}},{"name":"12_hot_springs.rb","path":"2023/12_hot_springs.rb","sha":"306d69aebaf09d769e4914ff1d0a13b0b93345a4","size":23536,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/12_hot_springs.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/12_hot_springs.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/306d69aebaf09d769e4914ff1d0a13b0b93345a4","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/12_hot_springs.rb?token=ACG6TJ5YPIKGBWBOIFOZNUDH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/12_hot_springs.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/306d69aebaf09d769e4914ff1d0a13b0b93345a4","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/12_hot_springs.rb"}},{"name":"13_point_of_incidence.rb","path":"2023/13_point_of_incidence.rb","sha":"75efa3d3504ac24b5ca8a347efea3fed63ce5711","size":17316,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/13_point_of_incidence.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/13_point_of_incidence.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/75efa3d3504ac24b5ca8a347efea3fed63ce5711","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/13_point_of_incidence.rb?token=ACG6TJYJJBHIZ6CLY4Y7FA3H2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/13_point_of_incidence.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/75efa3d3504ac24b5ca8a347efea3fed63ce5711","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/13_point_of_incidence.rb"}},{"name":"14_parabolic_reflector_dish.rb","path":"2023/14_parabolic_reflector_dish.rb","sha":"59076e8b3904336f36e732712416129a1a2f3d40","size":10714,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/14_parabolic_reflector_dish.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/14_parabolic_reflector_dish.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/59076e8b3904336f36e732712416129a1a2f3d40","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/14_parabolic_reflector_dish.rb?token=ACG6TJ4Y35I7H3CDF6ZVOSLH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/14_parabolic_reflector_dish.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/59076e8b3904336f36e732712416129a1a2f3d40","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/14_parabolic_reflector_dish.rb"}},{"name":"15_lens_library.rb","path":"2023/15_lens_library.rb","sha":"9a0b960c11b3d0187db51e2672046bcdecd29b67","size":23344,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/15_lens_library.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/15_lens_library.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/9a0b960c11b3d0187db51e2672046bcdecd29b67","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/15_lens_library.rb?token=ACG6TJ7UYNKYJGLG6ROU26LH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/15_lens_library.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/9a0b960c11b3d0187db51e2672046bcdecd29b67","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/15_lens_library.rb"}},{"name":"16_the_floor_will_be_lava.rb","path":"2023/16_the_floor_will_be_lava.rb","sha":"5e59ebeb2d3c091efad6b5facc65b3bd7c9c2c67","size":13631,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/16_the_floor_will_be_lava.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/16_the_floor_will_be_lava.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/5e59ebeb2d3c091efad6b5facc65b3bd7c9c2c67","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/16_the_floor_will_be_lava.rb?token=ACG6TJ5ZE54JVA43BMN6Z43H2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/16_the_floor_will_be_lava.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/5e59ebeb2d3c091efad6b5facc65b3bd7c9c2c67","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/16_the_floor_will_be_lava.rb"}},{"name":"17_clumsy_crucible.rb","path":"2023/17_clumsy_crucible.rb","sha":"b3c6bd1f1b4f010e1a994697781ac6f3cc5cc2a1","size":20941,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/17_clumsy_crucible.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/17_clumsy_crucible.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/b3c6bd1f1b4f010e1a994697781ac6f3cc5cc2a1","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/17_clumsy_crucible.rb?token=ACG6TJ3VMQP3KRIPX5AEADTH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/17_clumsy_crucible.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/b3c6bd1f1b4f010e1a994697781ac6f3cc5cc2a1","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/17_clumsy_crucible.rb"}},{"name":"18_lavaduct_lagoon.rb","path":"2023/18_lavaduct_lagoon.rb","sha":"0499bae58dbdba745b49f6f277c1c593f365c300","size":9180,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/18_lavaduct_lagoon.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/18_lavaduct_lagoon.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/0499bae58dbdba745b49f6f277c1c593f365c300","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/18_lavaduct_lagoon.rb?token=ACG6TJ746A7K2NUKNBIQFBLH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/18_lavaduct_lagoon.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/0499bae58dbdba745b49f6f277c1c593f365c300","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/18_lavaduct_lagoon.rb"}},{"name":"19_aplenty.rb","path":"2023/19_aplenty.rb","sha":"0c9e01f5adce65e1a2366e2d4822b6f200ec934a","size":20231,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/19_aplenty.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/19_aplenty.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/0c9e01f5adce65e1a2366e2d4822b6f200ec934a","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/19_aplenty.rb?token=ACG6TJ5NMPDGRSLBZCSKGQTH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/19_aplenty.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/0c9e01f5adce65e1a2366e2d4822b6f200ec934a","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/19_aplenty.rb"}},{"name":"20_pulse_propagation.rb","path":"2023/20_pulse_propagation.rb","sha":"dcb88f168c297f99fc3e0dd4ebc6f96a930e345a","size":1801,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/20_pulse_propagation.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/20_pulse_propagation.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/dcb88f168c297f99fc3e0dd4ebc6f96a930e345a","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/20_pulse_propagation.rb?token=ACG6TJ75F7E6DMMNAUJ5WYTH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/20_pulse_propagation.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/dcb88f168c297f99fc3e0dd4ebc6f96a930e345a","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/20_pulse_propagation.rb"}},{"name":"21_step_counter.rb","path":"2023/21_step_counter.rb","sha":"f0ae4aeae8d39b4d2dd0d627bb690f2dc2e8bb6a","size":17896,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/21_step_counter.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/21_step_counter.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/f0ae4aeae8d39b4d2dd0d627bb690f2dc2e8bb6a","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/21_step_counter.rb?token=ACG6TJYL6KQQJGANHZKTGELH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/21_step_counter.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/f0ae4aeae8d39b4d2dd0d627bb690f2dc2e8bb6a","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/21_step_counter.rb"}},{"name":"22_sand_slabs.rb","path":"2023/22_sand_slabs.rb","sha":"7001d91d7045006327038110cdebc5a7fbd01d3f","size":19188,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/22_sand_slabs.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/22_sand_slabs.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/7001d91d7045006327038110cdebc5a7fbd01d3f","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/22_sand_slabs.rb?token=ACG6TJ5LJLZ7CGVMFUFXOG3H2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/22_sand_slabs.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/7001d91d7045006327038110cdebc5a7fbd01d3f","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/22_sand_slabs.rb"}},{"name":"23_a_long_walk.rb","path":"2023/23_a_long_walk.rb","sha":"7e9f9678a71e49c2ff8135738c99d5fcf1f8a8f2","size":21386,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/23_a_long_walk.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/23_a_long_walk.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/7e9f9678a71e49c2ff8135738c99d5fcf1f8a8f2","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/23_a_long_walk.rb?token=ACG6TJ3TTXXTG2XP6QDBG4LH2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/23_a_long_walk.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/7e9f9678a71e49c2ff8135738c99d5fcf1f8a8f2","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/23_a_long_walk.rb"}},{"name":"25_snowverload.rb","path":"2023/25_snowverload.rb","sha":"f4e9d14dfb4006a36abbe9cf961918a532ea5a60","size":19728,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/25_snowverload.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/25_snowverload.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/f4e9d14dfb4006a36abbe9cf961918a532ea5a60","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/25_snowverload.rb?token=ACG6TJ23VND6YNADPHDITD3H2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/25_snowverload.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/f4e9d14dfb4006a36abbe9cf961918a532ea5a60","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/25_snowverload.rb"}},{"name":"priority_queue.rb","path":"2023/priority_queue.rb","sha":"9a9a98bc0a64694d5ad164dfbd31195a8c1d5ba7","size":833,"url":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/priority_queue.rb?ref=master","html_url":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/priority_queue.rb","git_url":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/9a9a98bc0a64694d5ad164dfbd31195a8c1d5ba7","download_url":"https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/priority_queue.rb?token=ACG6TJ4K7734S7RNO3TVU43H2Y4VK","type":"file","_links":{"self":"https://api.github.com/repos/ZogStriP/adventofcode-old/contents/2023/priority_queue.rb?ref=master","git":"https://api.github.com/repos/ZogStriP/adventofcode-old/git/blobs/9a9a98bc0a64694d5ad164dfbd31195a8c1d5ba7","html":"https://github.com/ZogStriP/adventofcode-old/blob/master/2023/priority_queue.rb"}}]'
  recorded_at: Sun, 16 Mar 2025 02:36:09 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/01_trebuchet.rb?token=ACG6TJ2R4K3V6JPYSWO2P53H2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '12154'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"0088c48c5825590029f6313de5678b1afcee5951b7c21c8a05802019859a3c2a"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - B415:2246E4:EA94A2:12CD5A6:67D63918
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:10 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200165-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092570.078404,VS0,VE293
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 24ce3e9c48e26cc2082fb84f38108d5b90e5bacd
      expires:
      - Sun, 16 Mar 2025 02:41:10 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        n = %w[one two three four five six seven eight nine].each.with_index(1).to_h

        puts DATA.each.with_object([0, 0]) { |l, s|
          a = l.scan(/\d/)
          b = l.scan(/(?=(\d|#{n.keys * ?|}))/).flatten
          s[0] += [a[0], a[-1]].join.to_i
          s[1] += [b[0], b[-1]].map { n[_1] || _1 }.join.to_i
        }

        __END__
        14gxqgqsqqbxfpxnbccjc33eight
        eight2sevenkl
        mrjstg5onetwoeightgcczx8vgrgl
        9246
        ninetwo2crrqk2grsctqxqbcrmrdsqbrz9eight
        five6dlhx1
        29qhsdqqtgrk4
        mjgtrjnlttxjlsixsix5
        bgnnvfsnbpx29vsjrlmgmsqthreeqxvclkhlv
        sevennine3gsmxncqlqvfktxrtcone
        2mkzrqlmhsveight1sjtwo2
        rrrbvnrvnqfdh86
        94threeqrhkcpkeightfour
        four83
        9ninehbsgkcthree1nineeightsix9
        57zfcgpf68
        hbonefourfour8lsnfgvf3
        seven79rqtqvjddc
        two6six7eightqnmnppctxjrxbdxbdmbfkmv
        9rdvkbxclk9fivecrxmtpzsxn8cmrzttlfour
        nztfnthree2
        nxhjcqzlcxgdkmcfggc261gbt
        xqfcdfdsrlhdktdjshllqgqshzmf7hpcdgdfcvntczdxxfqbvz
        sbf43g
        vsm922three7
        nthree1
        3eightjvtqcb1lkgkzhbgvl9eightfn
        tfvv2zz5xmckbc1sevenfour7
        fivesix6two7cptgpfpd
        3skfjrzbjpeightdkkkjq
        68onefourxmznzlfivesixfqmfchn
        12rzcscnkxsbc2ninetwo
        jrmmvsdjvftgnrz33five
        bhdxxmb36ninedmrlrstrmrbvz
        1seventhreenbsth136kzrgdvvjp
        7nrc6xpl
        fourseven4nineone
        8zxncrhffcmq9threeeight
        5seveneight4three9
        8ghsxbzoneightg
        qtwonesixtwosixvjmnhqbbx5
        sp1psqkctzqnldbdhqsmgsixfivepjnnvsxdldtwoseven
        9ninethreefqqlztnrtgcbfourxdgltgft
        zsix14sevenhqkgfh
        nt3
        dhdsktwo9
        8cmjzrsmr
        4bdspt8
        qvzgxjp7six
        ninethreexqvzzqhjsthreefivetwo1
        kzhsgr5tpzhxeightpqkfj
        twozclthmcx1phkcvgrlbj7fhmcph3eight
        9lkctcvgxr2two8rxgkdbx
        khfgllh7kchfq9xbnrqrseven
        ninekqmvfour81seven
        xsfpksix65eight
        eightf24oneone
        24581snlbjpfronenine
        nine3eightjqshqxscvzvskspcmdzd49
        6mfqf5one
        zrzzlchrfl167n1
        nsxqfspq9
        7mggsvthrnckcsctjsxlmxghqeightsix13
        sbpkxkmjkxcmg4
        eightonethreevqkjkxnnine2
        kntj2vkcnrkjonefnqddll6
        zlbnprltbkgmzpvtqmvzhpvhrb3ntrzhkrbvd6twoltkpsccvbk
        6seven5196fivesix
        vj8
        seven5fourthreeeight5
        lqzkbvdtxs3hbqr
        7gmfzfcnrone66nqvkmthreekdhfkrhone
        nsxftsvssone2fivefive1rcvlzltfdzcgsh
        8five1eight
        7ljfbvnrbghgkhstwo6vmnhxdteightfour
        hdnxc4zjqrbr
        5ghrjjbfshonek1sixrvnnkhpd5
        threetjxxlvqfvdcj852dkxlthree
        xbpqlbrgcbkzvbjdt8
        cbzeightwo7npgjjxfzrvz66
        zktrxkjpchjxzmpq2
        five1lbdhrsix
        5qldpfkqjkfjdzpfhf86
        vnbrnsskxphxv22
        4chnggbxmssnine3
        4k9one
        2twoneh
        6kgbvpsl5threecxf
        562six6
        tsdvbzxpkqbkrpvht33hxhvmjnltwo3
        7fourone
        ninesix2sixsix1fivenine
        fourbqvbqftvzz88sjszkgxhrtlshkdjq
        sfsrfsevenpgpmffthreezzsfb3
        8fivekvmzz4rlrscnxmx15
        jvteightwozhqsnvffxg3rsjmszc7fssnbhrtwo
        fivenineqsvpgbkdxlp355nine
        9jbfive
        zsxzdcvsjln65
        nvcc52twonine83fq
        gcnpqqfhq2
        jspfdkpxl4fourbstlcvdhxhjdgxvpzbvltwo6
        8sixsix
        fourtwohsqhmnjmph7
        one3eighttwo
        tshglpdmjbsgsoneplbjqcsrxseven8
        42sgr296mpkdz39
        bxsevenone25two
        two8fivefour
        three4cgjttdmfqonenine
        eight5sixeightmxzzqmt795
        threebtnlmrrqgnine9fivezdzgldkxnbvhsvzqnine
        one14tqvqgn1ninevkzhrqfqdjprzxb
        cqqnine52cjmteightgbb
        vhhkrrbhlp9dseight
        fjzfmqv1bsvqbtpvvzcvqvxnlptk
        five6three1zvgznsrvnpmnine
        cfkxfmeight18hgkclhmcfcfsjzkztwothree
        fivesevenonejmmrjvhznffive4jbrvdhlcpj
        gbboneight47xfmqzt8
        sixmjnfmjtsszvc4sevennineonexc
        kfsnggdldp33four
        56hj2lqncdfghdbgdkzpkr
        63five519bztrxx5
        3eight3six9xvdfhrcmsm
        drcjrlst5ninefourxcm
        4five3dmjbnbeightvxtbbvxdpfourjvj3
        lnmqnine855four17twoeightwolx
        lnkffrtmv9t
        mmhrvrpbvrcmpczvknkfourcqktxx73qbgd
        khbrlcvdpxdkljvkhnfrvtpmbeightgzms2
        shbr9fzbvzhhqmnnine76
        x93
        3onec
        v5xskfrg19five
        ncmtbgdkfour7fiveeightfour4nine1
        3dtdjs38ggfljpdvv
        fourthreevfpmztnzzcf96eight1
        onesjmdmmmcgnvhdnczfzznrvrggkgpcpcggqpkkkcfbq6qpsv
        5nvhksixtwothree
        d4qhmsljqhmcqlxln2dbd64
        zrshqtseven9zkpmzksqcsptfkkn
        9pk
        51jnqbzgnlhcglfour5three
        8snxnxv3817
        tsvd4
        lzfxkxrcktjlvzbnsixfourthreenineeightone4
        lxdz9326threefouroneseven
        6zkgmhktdnfive
        zonekfbbcqcsdbkc4fivexpnhssdgbbnine
        8zcdxcbhm7seven
        1fldmtvgnine39eightdrmrtzkcthree7
        8sixxlztjhjkxtppmrtfour
        threekvjx68twofiveqtzfg2fbhnhrdztv
        6pgvzdbgjnlctwofourxzpc3xzdc
        sixdxpnthgkfmddvqhrvsixsevenx4q
        ch29onepqnine
        sixlnh68
        1one5rqxz6nine7
        cone9
        fourseven3kddtmbjhnkz9kxhzspvtdngvsix
        3sixnrjcxv1
        onemdts29zrbh
        beightwo2eight816nnzfhptjhfqvqq
        lfmxzp44cqkthree
        gl4qsevengltwosix
        2eight3qqkksrsevenxkndsxt
        eightzxrflknj9jpbmt
        knqjgjjjmkninezzfnbcdmqctwozskxsgd1655
        qpfdjsmsqfourfiver49f
        vsix1xpglmcbdp
        vgqjvzzcct7one674
        4csdttrsd58fivesixtwofive
        bslfsjhrl8cszqrppqskthreenine
        997foursixeighttftrnktp1
        3ndqmpzs6jkpcvjdltgbfgvlcn2
        lsxprcgkfivesix8eight9onenbdxqbl
        seveneight3eight
        eight7sevencvvshpgfg
        8zg7two
        5sixsixtwo
        six7two
        jjcxmsixhbtvfx2twoxs
        9xtg
        3onelvrpcvxk
        ninetqzpbhxsspcfjlvsg3qlnbbqfxdqnine4one3
        xplhfgfour49
        jdrzrkkzdkgvhsvbm6bqfgpjbvhxlhtxhhpmmtmvqbgnmzpkm3
        hrjqkmvv1bzm2krs5
        vfztwonepdlcn96seven5
        1mpkqmccqqdsmhdgjjgrrtsbconehpfgfnjtxtqv5
        one9qn8threeeightnmqvfjkklg3
        5kgkst4ninegnqnjgmtdpfzspmkk
        pmggrbfxghr53eight7mjlzgzv
        4fourone
        lbjfvxjzd7fivevllrtvfkmeight6
        xtl9
        ninevonevljrvx9
        sevensix7sixhbeightone
        npzmcdtdqfpvonenine9rsktdrrnz9six
        4six55
        eight646gdvfkjqsvnczbxtwo
        5seven5jthree
        cfourfhmxqjmseventhree2sgkxm18
        mfxnnjjxtjzlljgcnfpvb6cmknzb
        4796
        kzxfnrqktwohmp9cclstwo
        vgzgmc1zlsch
        lvpnb1five216mbdxgvfkcg
        3onezjnmv9fourj
        two8vmpfmqmq6
        p8
        4oneeight45
        827eightsnvlrskzlbnineeightbtngkb
        kdfxtjj2
        csthreesevennine7seven
        hqqjrzkkkh84
        six42four
        nine259five
        8jngjtkdnine
        3ph
        8gccpsqfourtxtlbvmvb8n
        oneonesix7jdkzfxkdvttwo26
        xkfsdgkjt34vq
        98twosjrr5eight
        foursixfive9
        17vmxlvqpqmvnfchhmxmdcpzgrsjl3nine
        pmzscpthreevone3kdgqldjf48
        dzhoneightonevxtzqsqxxpgtgrdl73
        4threebbsttfhbdtwofivezsvspjp
        jlstdnkjgdxszmpv2tgvpbdhdrkdjjvdbscv
        4mqqxrsfrfhsbxprbxrgqseven
        3rklddqfnczjfhjmkrgrkslxninesix
        9jpcvnlvb3lzqzkvlnqsseven
        8ngm64zxplgcdxzdzgfqmtworprmndddr
        fivefzhdggmfslthreejmsrq8dxzdzcxsj1
        75six294xbzhjxd2five
        56746
        jjxxqclf6eightfive7
        fiveeight9eight
        npdgsll2twoxfzq
        66fiveninerrbgrshthree9
        nine124nkcsltwoqdlvr
        eight4vlsddsjxqthreep8xd84
        mqsbzgsszonexlhljdhdt9kjvdvbmqc
        shpxspqrck441twoxjhgthz3fournjtxzgbs
        2threegtqmddnine9two
        rbdvrngvrjsllkrc542
        p6dckscjkhzfqvc
        qblzhpspf4glsrbxm923six
        4mfbjznone5svkgvsr47dvtbltlmns1eightwob
        5sixsix1twofivexjn8
        5fivefournine4
        gzhzlbkzrlsix5seven3tm
        eightpgqrhfqsix41slrs6three
        five3dtfzfour
        6813nine
        3sevenrnhznczgb
        mmcgrkjhbsevensevenvrhclthree2
        pfourthree9ninenine
        9fbxvvtbzkttwoftv7
        mmthree94fbm
        1vsblnklmm2zqmntkp
        oneninefivenineone2threeeight
        4sevenxzjfxbfdzgfgvjgjdscninetwo4
        64sixfrmtmjoneightt
        gzzlqqjsevenone5
        1twoxpcqcvgmhbcm8thlrzmplqpkrbjrqr
        jgjqqn291foursevenonefnrdhxt
        3bvznvqd8oneeightzchdjvj
        ntqtg1
        hsqkbfnxcbsixmvfhxrvxrvnineseven4
        bkztqhhbdzr1sevenonenine1
        v79zpdqfive
        tqtwonesixlhhnvf77one1
        2twofour
        eight89seven
        7six6fmzlrttxstdrg
        seventhreecbldkqd89threesevenpplfv
        7hmhxpg
        threepmvqfc5rktgjl4xvdzmhrninef
        7qnlqhtrrk1sevenqfgpkdfc271seven
        4gxrqspvg1
        zdgfscbzbdg8rvqseven
        eightsevenfour5
        five8five
        xprtcnxztmfgtwosnsix5six5
        zpjrhddxfzhdm7pzhxnzsp2six772
        43five92sixfivefour
        6kjknjjrjkdfive5sixsevennjone4twonexr
        11sevenhvsrb5fourhzxrmgfsl5six
        2kbtkmsdfkdzmfplone
        68onesevenone7one1
        one36eight
        89srlblvkzrjone1
        7threekmzvhxpsdc1
        3648pmjmj4
        fivetwothree8eightonev7x
        jlkvd1tgjvdqv48three5
        tvtwone1rhcbkfcj82eighttwofive63
        rkpvjgsfmhbvd7nckshnmzknine
        8md7xh8bvsdmhjdxq
        threejzrnnfczgzdmcchv5hv4eight
        8lqnnnpmfourkndkf926
        651jfltzffxh
        onehzk5foursix5
        three7sixfivefive5twonine
        four3fiveonef57
        5seven5pbqmzzkqsp
        none8five
        6threefpqx9eightkhmrgqm4
        ndgmck187mjkxccsdhknine
        2jtwomvxjnnpmcseven
        bdfnkbhbbfvztpseven6kgknpxmxdfoureight8
        cxtwoskgklsqkdpfive8twohq
        5seven67two8dlzmttpdh
        cdkzhtk2fvmdtphsxk
        threepqcgj8dkfgjp
        56tgggrrgdnveightwolc
        ninezsix1rnpponedpkqrpdthree
        vmgtq3six9
        nhbjgxsixsrrftdt3fivedcdqqq
        6fivevqxphgvrflbvljlone
        ninexbjtwothree4
        heightwocjpppfive3vlcpc2bt
        tbtxlftsnsnknine5q2
        fivemfqlxlpgbpjgnvpfthreefivejzcpkone2
        5dmzkpmpghsixthreenine4
        two9seventqzb578kmfrvlj
        six855three
        2kddfgninezgsonedptb
        1cbbtg1kffourmjxbnvfgjfiveonemgbjtmd
        5threec5nine
        pvgd5sf7three1lnrfive
        83mtfjsrln6
        khtglxc3
        qckdfjbz289nbhnthreehljqfklhmjvrgxt
        5kmslxsixsix72
        jlcfmqh5nine
        454fournine
        jgbfzxdsfpcjpsdlhs5gbsnjxhsfivesix
        scxsgsevenseven6fdkcpzm
        cbznsevenddvdql431
        fivefourpj871
        xoneighttwo5css4
        sixsevenone49
        xpvktkbdzc6threenine7nine6cnxsdeight
        6nlsg8zczsblcppjmbzlnthree3
        jlhzvzskseighttwo1twofivefournqzeight
        smmsszqpv653sixsdp5onefour
        8nhgxc
        cbskddhjq1fourfourj
        vqnjgcml5vvggqqlhvdtwonetg
        4gdhf1bxrhlnslpnglcx7rhvgnhzjvstwo3
        8fourfive9fivenine4one9
        5xbggkdbkddmfknsxpv
        9fivekkttcpntr
        cvltwo4
        1four62
        9ninevc
        nmfrttms6czdhrdchfkntonetwogc3
        8dfbqlpz9
        fivesixsix595nine4
        6mmpks71nine
        ndhdkddjchhseventwo33fv8q
        ninerbnhsxkninemdthft1seventwonvgdcgt
        twosixbmthh3srhdtnljqlqsbxssnsix
        seven22ninedplffive
        xpsh1twoqmhkqqsjz
        8vrxzhkq
        5ninegr
        five9nqcmxngktwothree62threethree
        qffhltbnineseven9reight
        threerqddxgmjnj2
        seveneightqxxgmrzxvhdnine2seventwomtkdmjbkfh
        9vppxpsnpdfourdmtqtbm2hpgqlgr
        seventhreeczjngnklxg3nsfqzqqeighthcggbk
        fflnhnnzncdnh9twoqhx
        fjpqseven5noneseven5nined
        kdnhflninenine2eightfivemknllfgqspbcrjklx
        jmgfqhchzmdfnpthhhcc291shhdqp
        5bphvpcxvdf2five9nine6four
        9gfpnzjkmlb76xreight9threeqvjxpssvrs
        4hpsix6five1ptrdlkfmgr34
        1sixnkvfkvdfjqtwo36eightjnfz
        bzstgfhrmmfourseven6xnfvonegzc
        fivesix426vgzshhklnknbclnbbpm
        k5threetrkghrbcn
        13nine
        1vlrvlxrsrznlpf
        9tgzzddgr1b2
        6sevenrzvcqzsckkqbtsevensevenninehbmlxbzzlf
        1991vkjhdp
        9jkhnrjjv
        6seven47sstqkbthreefour9bmkfbxrzp
        seveneightnprhzf61725
        oneone7eight7cpll67
        8eight7one
        23bthc337qxhmfbgsix1
        9r61vtgqklone
        oneplh6
        four9kfmzbgxlhlxxjf
        mhk95
        csdfsix71seventhreesevenfour
        sqhrc39
        6three2
        four11sixtwofmvgjvseven1five
        four4ninefourkmz2
        mqm5seven3five
        sevennine63sixvtwo
        81rrvgzzrkzmgsgffvgxlrfbmqxczhtl5tvj
        vq8qmg7geight62
        1twoqmmfcseven4six734
        9ghstzndfnmzbtdscl
        88twosix
        8five5eightworh
        ddqdflzbhr68mrdc9
        2threefdb77
        7nine4rbfknbtnsvljnqdtz47
        xrfdfcrtqssx79dvhzls68
        cvqjp6fxkdx9qvsjqptvs
        hbzjllr1
        1985onezp2nine
        6sixqk52lpftrt
        zfqqj8
        c4rljszsspxnnvjl1two
        78phbjhkmjltcrxqdblfthreeeightvndtwosksxsxccqz
        453gnjntwosevensixfourtwo
        2fpnkqlzvmlbbkfxmqgrgv3tbtrkmprx
        ffive5f3two
        2grzqfmnrld
        twofiverd76566csz
        eight4zftjjzrkx
        onefour8nvrxkqzrfthree3hvzk
        fmzqklgfh76lcpjxlvrmgfqpnine8
        nine9xjvvxdvksqrqlhqvrbjvx1
        vlfcpfvl8msxhnftleightwop
        846ninethreetwo6two2
        4mjbcckzrhtwo
        blsn3onesixfour8
        14two
        five3fivesbhfour
        onevpqdqds5eight
        pcvcsnhv861oneeightfoursix6
        csix7vjllblmgjg
        mmn4threesix5vxdsf
        v1vx4fivefive4fivevjfjvkf
        53tsbldc9skgcshbvxdd
        1595bxscggsspvjnbxx37six
        seven883
        35sixone4lbzcbgk
        tlmvbhjnkknz3nineltztzpclxsixzjnbfvseventwo
        rccrkvsvxjbchfive933
        5shkktwokfkkmrxzsssix
        five93three
        8six44snhpssteightwomjv
        nine1nrrjrvjfml4dcklljns
        pclkcskcp428199
        fivepjvbtstwojshbgxmdr24eightsix
        6eight4
        mjjghhcqrttcjrzhjjrc2five
        xkhxgsqjstsevenfour4
        3one5gvmhcbkkdd6
        v3nine9threepfphnkthree6three
        ml8twoxnzgqjx1rxbpjnonezrp
        one8dtxklgmlnbqhpxl4
        1foureight9fourkmp9
        6vzzdgtfourxtzglhxzvcs
        rg4onejhpgsfgpdql
        sqpeight488four7svb
        63five
        39khkbdllxv
        bdnjhtcqrxrnnjflfrx5366ninesix
        tworfrqzgl85twotwoeight5
        jxeightwo8ttdxhc6xqphg9ntmrtrmxfnjb9
        933rsixeightzbkqkb
        1onesix4onefour6d
        three6vxnhgxbdxxmdmmggmnxtwocrvftworpsdrrkx
        5nineeightninezvf
        5jfour
        zftjzrfjz8
        8four5nine84mpcktbm
        vgg6five5pr8
        3sixtwotwo7ppfsbfppbkmjtlktrx
        sixnhcl6bxjxdmgt
        pdqfvzgsps9eightj
        sixfive87hjksxxbgz1prvfqnnsfmfive
        tztgzrnineseventjqhxn3
        twoeight3zthree
        nczc3two
        jdklbdr4
        j93mnmsixt1
        2fivenine2two65xhcjfnddbqlbd
        six48zsklgprrvklt319
        6seven1threephh2bldxvrlln
        88threeone
        hqktgxxtwonine2
        14fourtghmvcbbnkxkhrvncskgthqqfkgpbrln
        threen7rnk5zgjfvtlcs
        nine87two56
        859
        six8q7twohnrphb
        93oneninethree4
        one7nbzmqdxmj5qfxzcmxfkx
        3two2two96ninecnkbt9
        fvcqktlf8two
        six4nine4fiveqjthree
        91qgvlq6eight3twofive
        79sevenfivetcmcsrvvlsl
        6bnssix
        threefoursix8eight2fivehpp
        tlxmqclgdchq8
        threefourthreelbd15fiveknzhg
        ktqk68czbjrbkrlnmg3
        oneonerptgcnqzt6fpthmjhgxc8
        rcbfpqhxgjfgfgjcm3
        bxbbqcvvlfivefiversxqpmcb87r7
        two1eight
        96sevencktptc9fmnthrdthree
        fivehkzxl9five
        twosevengsblkmgfzqndznine2seven
        two58rlnjdqninetwo
        5fiveonesxhbkcjmctwosix
        seventhree8952bpqccspldk
        8fourpfcvrvc1one
        bpbtcnzk27ninemltwo
        five2tkqfivethree88ggmpg9
        seven6seventhreemfmnmmbsn
        three61xrfghoned9eight
        mcffvkprk1one
        hvkxcdqcthreetqcr3threeseven
        8nmbnhbdseven
        bdzc8eight
        bzp292one78rthree
        ninexsixone71zdnqlcxrphnnbxsmpc
        ninempgdsbbdr7
        8eight2367
        15113onelhgvmp8
        8f7gpjllpllptonecfhhpqvcr
        ztjj6nine1xsltr4
        nine27gkkjnkcqzt
        9gr28eightthblghdkf9lcs
        sevenbbjnprlqh1tphfbhbgvlsix33fournine
        3sevenfmccnzqxfsfnctfrfngtone
        six9xcvlflj
        9fqcz1
        one63one3kpnthgscdmtjprseven6
        tlrkvjcdx7txkzrvzcjcvvljfcljc
        rfrsfive2ctdmdnqnpfzvvseven
        1trdgtvl648frnstf
        bxkqchjmphmbnjrkrxxcntpxjnine3sixnkffxsb
        84sxd
        397lfjmzbp
        sixvqjthree2szblfstz
        29six833
        bnfnnine8nvjjprkmfourfourfour1
        gb93b98cxblqxskm
        3zmggzvlvscbkblhmj4zsevencxgjxsbsr
        smf1
        zghrszzcvb5rtnhzktts4
        265qvrzllrctoneshgcbdsbeight
        2eightbjvlsixmseveneight
        tqfrgkqzbtxqcbxvjzgtp1four
        pmrrnmtt1kcf8two
        49bnp1tmcglrtpt
        4three2ggmbzgqltsqzzjjn
        six7frvkdsxdktwo
        7cjsnbps7bgqzc
        oneoneeight8xbfnnldvpdv
        568
        6rhxfbn
        nine5nine9fivekftqqgpttptrfstwonerm
        three984
        eight99fourmflfdnxvbbmhqfgqkzhkffvmkjxjtngjb
        fivefivetwo28zdjmpjccknine
        5jjs5vpjzfznrngeight4
        five8one2xllhvb6six
        threeninelnfkjrz14
        mhmqpq3hncgqgm43threefive
        tjtcrbklrbzvnc4
        37twofourtwothreefour
        htwone2threetwo3xtkgk72
        three9btgdgrpdvxkkb1gck1nine
        qgnd4sevenone9one4
        lcstxnqmghgqzszkhnbf7threenine
        five8four51ddl613
        3vslhppr
        tworkcgshlckqjtxpkgcgbgppq6hdvshlntq35
        1eightfiveg5
        five7ztflnine4two
        39two
        tgone47pvb
        37glxx23nhlmxvmvtwo2
        eightsix86twofour
        46gznzktfqhlbsqz
        171rldrjxcvbsfqmmzcdrnqhjphjqgktwo
        6twob3xpfvfdxv79kqqcgljd
        6three8hpjtvmvmjxkkmlvtwo
        zdeightwomgvbfourfj6khtbsgttnsixeightstbnjmq6
        fhdcqdskf2
        mjssnpxchsclkhlh1threetwoxrbbxkcpkgsbxdxtxxbg
        1jxzvllkb71vxxpkmqtvs
        three74sixhcthreemgtbzsrh8
        sixtthfskgnine2three9seven52
        nhqzkththreezzsj8four
        54fourtklcqcsltgvgqone
        four7eightwoq
        k3492scxsbbngtwofourtwo
        two3ttwor
        8snlnfbczd78sevenchzjdphrskjngfkseight
        four1vxpvqk15ttcfkt
        4twoqql
        fhzj4lsvjg
        7hstphfour4jsbcndd
        7eight85qmjsixseven
        1three6two
        fivesevendxznmf9
        two54hkv6eight
        tlkthdcfldvtzlnr7551
        168qtpcr
        fourjlsmgtlvsevennine44hjcksrdfive9
        5cxtbmsn
        2twolmtprmjhgndnkfive8qzrdfive
        2vpstbjqlxgtpqkd
        4dmcc35525one
        486xgkdoneffvrleightnine
        six1onefivetwo
        b144lvmzmxfgntpjhzrk96
        gkgkgc7cmtghq6gbx5
        three87fiveeight33six
        1hpkjqvz363vvzksonelfctrztjctthree
        pfqdlvkrs9nfpmtnineone2three2five
        48onetwovrnbz1two14
        nine5bgvpnjbltfiveonesixfive
        nine4pqknine96spqdb37
        mfgcngxqxb41
        262sevensgfjjmdczrl
        qzmthreetvjdxnine1gpjsmxtth5
        ninethreeplzkztkzlk1qhjvl4
        oneeightnine3
        onetk5
        fthkbqqfhrpkprhqmssix43xcgdzhtrf
        twobhbtvtwo1three
        ftbdrfnffzkllk59vc
        6ncvrsm
        7ftcmjbdmx
        12fdnnnqvrrd3
        eight3fqpqlhfvbrqlhhvpdonedzlfive
        fourktscmbltflone92fbcrpqhsevenhnpccrhb3
        qbtz5mdksqshdqxft96dvsix
        tfpfour75dtgjjmzgjsgjbqdkpd
        pxjvfivevhjbmqz4
        tknhlnldjm8five5bqbhzbsix
        45zqht
        3jrsvctdzpjjrbxznf25klxbnvhpxskthree
        foursevenskzzthntbfivefive5
        eight84jtllflx2five8mqjnnl
        5xxkcbgx6952qpzgpmczsc
        five3mpqdccdmone
        kninezsmvpjfhdeightbcnctnf8twosixone
        34lpqxkcfjvsixshpnsixgrm9
        glhtgtsq4threetwo3
        eightjbtpnhvhxk46sevencfklxxvdvveightldqqtdtk
        fsdfhthreefivesixrkdrgk1thjlfflx
        ninekxr6djghngtqninefivethree
        3qszkcdvcdl
        9sevenxzcskrpgfiveninevcdmkpqqpp222
        jmgt6vftshlq1
        4mnmtbvdznmpmpkrp
        94nine972
        rzthreebsjvthreenxqm2
        dxhrstvj344seven
        1eightfivedtsstwojbxpnhjnzrgx9three
        jlkt3
        fivethree7rfour1fournine
        rzggmhlvfivesxzfour363
        4npxrvmxmmc7qjbcrhzsix5lbvkjpp3
        eight7ninefivernpv4cddqhtvkb5
        5threesevensixonesjvxjp3
        5tppjjgj4five
        boneightthree92nine5tjppmvhtrfive
        threettgpkqcvjzdbjgzk9four
        6nzllfrrqkbgseven4nkgdddzbnhr
        czjbvrqkone3
        msffqxbxc4294
        one83dxstl7
        32ghhrdt5
        eightsix27two851
        1pmkltwozrx295
        j5982
        81pspmvbbjninetxvpg
        six4pprdn4twozpqndgdninefour
        3hfthcgqq8682fivefcrfxxgd
        nineqtxeighttnine6dttrznddl
        htktrcx6gqv5
        txsixsnls1
        52eight
        76fivefour9
        eight8tjtc
        four3onejlqvgl11436
        dlpdv36
        7foursvdjchltr7qjsj
        pknqzgvv3qsltsixfoursevenzggprjvz
        3eightfive8one2two
        z2eightwokcx
        2sixnlhfbfsfeightseven
        884qmtqcdcrd4
        keightnine9lpmspq7ninefour
        43eight4five7
        twofourfourfourtjfmflt7hcxfpf12
        sevensjpbqjfnqtgcjtktfjhrdv5cr
        6ztdzvcsqm
        86xsdx
        eighthmfgbvsixxcd35zfblslpthree
        seven8twoeightpnzrsqlcv
        fivezmbqpxhfnnmvbsv61seven63
        5vvddrt1onemvmdsvvfive
        7sixpfblcglgj51
        s29
        qtdbb4oneone1onethreesevenseven
        drj7six7
        6cfhssixnnjgcxgnmssevenmbfzxps
        xbqdclktfrmlq5eight294zvtqhszfmtzd
        8rnrcpphkrmfnc
        seven77
        9gntctbb
        tjgvxtbcn55mcjhmkgzkb
        fiveseven9dfllnqdntjonemdztmclc3five1
        83zxfive
        87tjnbrxnhzpnthxpnxgczmlghjppfgghzsixfour
        6rfivetwonerhn
        3cnzlm9eightlqgtjppxj
        onefrttlfjthreefive3eight7brmcdrzdz
        threeczbzscthreefive551
        2433sxdfjzshrfdpgseight
        92gfsjbjdbd9bhsqjpx3nkdpjxs
        71foursevenone
        6ninedlf6ldnxdzhdtwoseven
        fivegcpj6
        xssdl7
        3kcnqqhc9
        sfsrtwosrpjlhbcng6
        mvgeightwotbnzgrrc2tz22bpv1eightfour
        94msix2
        tdzkqnbdrmrxfpm7sevenfivekqmhqldjfour2six
        sixthree9three
        1953seventhreenv5
        2onemhgmxdktf
        5fiveoneseven8
        frfvnqxtmthreeeight4
        rphdqh24eightcpqxfjqqrchbtwo7
        76fivebjmcnfrnvpfour
        8nine6mrxvppgvjsevenlhtrtnsxmzdnkhhjfcnfd6
        hfmjnine8
        one3rvbjqtfivecc
        five6fbfkpdvvpfjq3kdbvhtrkvgqz
        two2sevennined7
        five8fourseven398
        sixqccsqhgvhd3k1five
        4fgthreesix
        4xqgqfxltzx28jrfpqdmbtwo
        three35twozhgkpltmvbfsdzkfpbrkq
        zxcdrkhd8onepcmtkfmtkrphbhcfivetqhxrnttwo6
        six36rsvpjcj
        9fiveqqdklbkonejpvxxteighthvthdsb
        six32
        five83rthcrgdjqxsevenfive3
        ninerdrthxkhnz7hlgllpkgjc
        jmzsq3two
        seven9kmcmbvztgsseven7foursixfourseven
        xpgtcr5hxgjgdxrz
        rvgdt1b3sggthcldlsevenseventhree
        seveneight5fbljmnfsdqc7sph5
        onetwo1nine8jpgthree9
        6ninekfqhgrtplninefive8
        fxsmdhnjgx3ngqlsjtjnq4vqcrmgfqcnffnvdgt5tmddtbhx
        z49
        5eightone
        6fivehkv8xtgthreeninesix
        hshtfdbf82
        bgvonesevenrdtbhsl6zqxn13
        hnlgrrsmhskmxbmxnineseven55
        kpeightwothreezmdvm35onefiveseven
        threefourskjcsmhjr32
        154nine8nineone9
        sixtwo77nfgncfzhbcbthree
        dnxddftf7qxnxt
        six2qlkmkgsfgdnch35hfqpcbvk
        145
        xtqpx8nlzqhmbfpjcqqz9sevenone
        kqspr8gbqfsvnttcfnfhjdncteightj4eight
        bhrmk5fxdtbqbrzv
        eight2prrttwo3five7nine
        ninefivenrldsh1smcpzvdgmtzhbone
        42dplrfkksn
        psixtwoz5
        nvxmgsevennine95eight5
        five2onebxjtkkkzddcxfbpg
        87ninebcsmzqjqhrfivevd6
        1eightclgrldksdkzt7
        136tgxrm
        smzcxqsspl2hc6eightsixfour4
        51lpvxvzvjpdt72
        5rflgvvkrqlsninefivefoursevenseven
        5eightssfq
        qrvlvn46threegvcsqnpbbq28mvtvpsmfch
        sevensevenfrk7threensxmfn
        36fiveeightsixseventhreefour9
        lvxfour4three4q
        sixlnrbbcvzdztwo3tj
        eightclvcgtcrpmbstpeightmnine7
        2five4five6sevenvhmhk3nine
        rjone4btcbrsix
        621fiveoneightpt
        hlv815fourtfvkr6
        two4657
        one1zninertmjxntmkdgrdsixthree
        7one83nqxqdppcsxmlrcdone5
        dlctxttzvz6fiveseventwo96km
        8xfkfkbp
        79
        eight1three
        11rrnrm4vfqjfkmfleights
        9xglzqljbqhlseven
        8lll2btggdnfsjteight
        ddtwonekgrhnsffd8rdlqjmzfv599
        two2sixhdvgjz7three
        7flfpmnrl1mhcgzblfourbsvftjkgbg
        5sevenzstvcgdvk59nine1vn3
        kpkdqrp3two62six
        two2nmpzfour8
        b2fivenine67
        ffgf1pbztdtwo47nzdxrcz
        8two4s
        tztwone5three
        3lzbzqkgkh3four
        18twonezps
        fivefour4rjnsevenslkqltcdpznmfprnbzbztfvnseven
        hmhlkcg6zp
        3zcrdv16four
        hnnlsknrjk4one9onezcfrx2cddnrbtq
        4xbkl
        6jdkxcvmx
        4four1hb5tgfrntttjszgdhdq
        vttlslpjtwo7fourqfzpbrninepr
        sevennine5f
        bcphcjvp7three
        8q9621eight
        88tth3
        7gddrxzpsix9jxstksdpkseven
        seven3zc72np53eight
        txxrlgqm2859
        1sixsevenjpqp
        five24seven
        6fqjcmngvthreeplxxtrklleight
        eightsfpxsix439two4two
        2sevennineone
        ninexh8four9pdzjpnx
        fourninecfzsrmonelcpdnsmhn5nvzp
        onecpvhfvxsmnffcxph4
        hbljxvthree5twokxpbbmpnmhtmzbqmnlpnine
        threefddbhtseven9qsplgqjkgstwoeightbqchst9
        two5six12
        ninebp962
        1two2eightsixoneightt
        nineone1oneninethree9
        sevenone1
        fivegone4three2threefour
        plbvtpgvdtwothree1kcnvxndf5
        svkfoureight294
        5nineonenhxfl2prgv7xj
        9kjzjtdmcsninesevensmdbsxh
        32bbcbggpsdvnjlnm5
        hllsdcxhtqhfkzsixgjb1cnjxzghksllfour
        sixkqjkzfxnx6
        4fpmfour4three8
        gzbgcvf523onefivepqsqkqone
        8one83
        sixbrcsix8fdhzvxcvchvlhx7ddpbltgxq
        4sixhfrdpshdsixlvptxfjcplscxzg8
        fivebrxjceightone7
        twojmbxonefivefourmsqbnzxsgxbbh2
        five5lrzrsv17
        rtsgveightljjrkhskhqkseven6seven1
        74lcrchfoursevensix
        49tlnbghzm1
        36nineeight2
        fivecccctcftfourfivetwo41
        foursevenfourmlrcjglthjd9
        94ninetwosixvbqslbxlone
        qjjk76
        3six35onesix52
        612dfpgjlgfourfive3fourdmrn
        9one2kctccfct
        vbsoneightscfiverrvmsrxjcnbvpeight2onekkqhsjtx
        742fiveeightnvjjpx4eight
        139sixskbgfc2sevennmlsll
        2nineztlb6pxgqtreighteight2
        six58bjjhsrxgrheight9
        nrmncthgr4bggpj
        1pgjpxjdbhj
        four5tjqsv47ninetmpjmmpcgftjmqq
        threepnxphfourplcrpjfngjsgdninepv6fzghjjmrvn
        756onejrtbpl3
        sixglcb8
        jqcfpvq46xmffour6
        sevenfbhqztmn96eight
        2fjlcxsix8d
        eight9fourvjjjpninepndvffivenine
        mctmpckkjfqmdhgcdng5sfk6bgbg
        onethreesevenrdgcqsldlv8jddcfncninetwo
        gmkkbtndjlnzhqfeight6sevenggjrlqkzqv7ngtkfdpjr
        4tjpqcjjvxndnhrfdllddptwo
        lzjzfshq71ndzmpf6ninesixxjgrvqtrp
        sevenhxtmvftb38937
        gxnrvjvclckvfkksslzjgf6kvqgpjbtwo
        one9sg7jsvgx28threevsmpxtlrc
        five4vvvrrmfj
        1hkzflszztc45nine29
        36qbhjdxjr
        glfmnmdqlfgxrzfsc2vcxmxcvjkrnltjpdsixgsrpgjnrthree7
        jnbgtjcnbvsf7hhmb
        three9eightspggt
        4f77sevenkrsvzkrlr
        ztlrbheightseven6rcsflgpxnvfkrntbsevensbxjgvsb5
        six7nfcsksevenmkxone
        zoneightnine3eight5cdgzqfq66one
        8threefourkkkhvc68four
        fourthreer9eight
        dxzxrjptfmttnppfskctvbngmf268eight2
        2onethree
        rtwone3seventwo72
        eightninegmfct96seven
        4rcjltsng7threebxcsneight
        nine54pghqbgrqjgzmjrgeightrzlbghr
        nvggfgkzvknfiveeightsixthree43
        4fourjpzglr
        83sevenbn9seven9
        mvgxgqvpbgmrcvdsn34
        sfjlninejbckkxlf8seven
        three72threebsgtrtb1tmgjbngqxm
        jqlx44
        1threexdftqfjcvl
        nnkjmmlqvdseveneightkqlmmzzrpfiveonefour8
        9nqjzjjhhps9twonex
        lzqxtpvztwo6
        47fiveeight8gnhcgldm2tlpsxfpsb
        5one316four
        9lzvbtlkzdgzcxrbtlthhqbdvklgkz7nine1
        threehjxknjnthreeseven2one7
        threeninehjbslk13
        sixeightone6pvdkkbvseven3
        gnlszqcmg8twotwo6
        gxttbccg2khzzpkdtonezqsteight3six
        vtfjnxjjkmzppsjx9twofour
        twoplbfnmkgql5fpfpzndddt
        2threeeightjgkfivevcjlmc4onetl
        2bzngbghgkdhhgqpgqkonesix1
        2fivenine22
        lhpxstx1mhgpndxlnk
        one7ninetwo2fivethree
        seven2sevenonenine9
        onezgpeight81ninekzgqsmmtrpqz
        681qchvmrdldjs
        nzlqbsvteight11nnnbhkdbvp8
        sevenxgqxtjdjpq3
        8ztonetwoeight
        9xkmjfourfz
        83four6
        m69
        two1blfseven1
        jdmkrkzkjjsdkkdone5
        7six3
        3one27ninethreeninesevenqzfkst
        6nineseven9eight3
        one8zfrvtwoshlgvbl5ljrftn
        one1165bjcpkpsjfxlnmz6
        72eightwoh
        seven1one94eightsqzhnrfbx8z
        sixeight2frplhhsxn46two
        7gppcfcdl8
        nine94eightkjxpmzvq
        nvf8sjqrncflgpdbone3
        68fourlnc
        two5ppgttnk
        nine28sixzxnhjr
        7kdg38
        twol4qmspdsixfiveskjsbrfsxxjpkqdtsmkgpbc
        five5nzlcdc45clclzrrkjthreeoneoneightsd
        cvmxgrvfddx3rdthreefdqhxlzzb6
        sevenhzxklrz1threebzvgssix8fstqhzn
        tfv866fivetlfive
        knmzhbvhzfvrbkvsmnl7sixseven
        zmbq9
        vqxqnzrpqvtdtmgndhs7eightnqpxcntfmjr
        4vzpsdreight337hgvq
        jone4ccn8
        nftdkmtmcz4
        nlnineeightmndkqz8nineonenrqm
        nrhdxfsqvxcbcghf35eightthreeseven5
  recorded_at: Sun, 16 Mar 2025 02:36:10 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/02_cube_conundrum.rb?token=ACG6TJ3ALVJWAGYP2BINUGLH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '2371'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"b3367109bb6a7d167b44005db0c159664b46e6167b65846b5ac8fa7ce42e7a87"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 1D9D:25F6AA:EFC519:131DDA1:67D6391A
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:10 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200084-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092571.507874,VS0,VE76
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 04dfd450d00a751f074b0ea2966f64f4bb10b650
      expires:
      - Sun, 16 Mar 2025 02:41:10 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |
        puts DATA.each.with_object([0, 0]) { |l, s|
          c = {}
          game, cubes = l.split ?:
          cubes.scan(/(\d+) (\w)/) { c[_2] = [c[_2], _1].map(&:to_i).max }
          s[0] += game[5..].to_i if c[?r] <= 12 && c[?g] <= 13 && c[?b] <= 14
          s[1] += c.values.reduce :*
        }

        __END__
        Game 1: 12 blue, 15 red, 2 green; 17 red, 8 green, 5 blue; 8 red, 17 blue; 9 green, 1 blue, 4 red
        Game 2: 6 red, 6 blue, 2 green; 1 blue, 1 red; 6 green, 1 red, 10 blue
        Game 3: 1 green, 2 blue; 7 blue, 4 green; 2 green, 1 blue; 10 blue, 4 green; 4 blue; 1 green, 7 blue, 1 red
        Game 4: 16 red, 12 blue, 10 green; 15 red, 5 green, 6 blue; 10 green, 15 red, 12 blue
        Game 5: 2 green, 2 red, 9 blue; 1 red, 5 green; 4 green, 12 blue, 1 red; 5 blue, 8 green
        Game 6: 17 blue, 3 green, 4 red; 6 green, 16 blue, 3 red; 2 red, 15 blue
        Game 7: 4 green, 10 red; 1 green, 4 red, 4 blue; 4 blue, 11 red
        Game 8: 8 green, 4 blue; 17 green, 4 red; 10 blue, 5 green, 9 red; 9 green, 8 red, 3 blue; 9 green, 5 red, 2 blue
        Game 9: 4 red, 2 green; 7 blue, 3 red, 3 green; 3 green, 7 blue, 3 red
        Game 10: 3 green, 2 red, 2 blue; 3 green, 11 red, 1 blue; 16 green, 11 red
        Game 11: 2 blue, 18 green; 12 blue, 1 green; 2 green, 6 blue; 1 red, 4 blue, 20 green; 14 blue, 1 red, 4 green
        Game 12: 2 green, 1 blue, 7 red; 11 red, 3 green, 6 blue; 1 red, 2 blue, 3 green; 4 red, 2 green, 5 blue
        Game 13: 4 red, 17 blue, 5 green; 6 blue, 2 green; 12 blue, 4 green, 2 red; 5 green, 9 blue; 5 green, 3 blue, 3 red; 4 green, 1 red, 7 blue
        Game 14: 4 blue, 18 green; 3 blue, 3 red, 13 green; 5 blue, 10 green; 10 green, 2 blue; 1 blue, 14 green; 3 blue, 18 green, 2 red
        Game 15: 1 green, 2 blue, 1 red; 1 green, 2 red, 1 blue; 1 green, 2 red; 1 green, 4 blue, 4 red; 6 blue, 2 red, 1 green; 3 blue, 2 red
        Game 16: 3 green, 2 red; 4 green, 1 red, 8 blue; 5 blue, 9 red, 3 green; 7 blue, 19 green, 18 red
        Game 17: 10 blue, 9 red, 7 green; 16 red, 11 green, 11 blue; 8 blue, 3 green; 12 red, 1 blue, 10 green
        Game 18: 11 green, 11 blue, 5 red; 7 red, 11 green, 13 blue; 5 green, 9 red, 6 blue; 9 red, 16 green, 17 blue
        Game 19: 8 red, 3 green, 16 blue; 13 green, 8 blue; 7 red, 8 green, 1 blue; 13 red, 3 blue, 7 green; 6 green, 14 blue, 13 red; 15 blue, 9 green, 13 red
        Game 20: 1 red, 7 green, 5 blue; 14 green, 4 blue; 10 green, 11 blue, 2 red; 2 red, 3 blue, 1 green; 1 red, 5 blue, 8 green
        Game 21: 10 green, 12 blue, 6 red; 17 blue, 6 red, 6 green; 12 blue, 9 green, 4 red; 5 blue, 3 red, 4 green; 6 green, 7 blue, 5 red
        Game 22: 1 blue, 3 red, 16 green; 4 red, 1 blue, 3 green; 12 green, 1 blue, 2 red; 12 red
        Game 23: 2 red, 6 blue, 1 green; 11 red, 13 blue, 4 green; 8 red, 3 blue, 6 green; 2 green, 8 blue, 2 red; 7 red, 11 blue, 4 green
        Game 24: 4 red, 12 green, 2 blue; 8 blue, 15 red; 1 blue, 10 green, 8 red; 1 green, 2 blue, 6 red; 10 green, 8 blue, 5 red
        Game 25: 2 blue, 11 green; 17 green, 1 red, 2 blue; 2 blue, 3 red, 1 green
        Game 26: 16 blue, 11 green; 4 green; 9 green, 4 blue; 10 green, 5 blue; 1 red, 5 blue, 9 green; 5 green, 5 blue
        Game 27: 10 green, 2 red; 5 blue, 1 red; 6 red, 5 green
        Game 28: 3 red, 5 green, 10 blue; 1 red, 5 green, 2 blue; 6 blue, 2 green, 2 red; 6 red, 9 blue, 1 green; 3 red; 3 red, 2 green, 2 blue
        Game 29: 8 red, 18 blue, 5 green; 1 blue, 8 red, 2 green; 2 red, 4 green, 18 blue; 6 red, 4 green, 7 blue
        Game 30: 1 red, 18 green; 11 green; 4 blue, 5 red, 14 green; 3 green, 8 blue, 2 red
        Game 31: 1 red, 5 blue, 17 green; 7 blue; 10 green, 8 blue, 1 red; 11 green, 4 blue
        Game 32: 5 blue, 15 red, 12 green; 6 red, 8 green, 8 blue; 2 red, 14 green, 3 blue; 4 blue, 15 green; 7 blue, 12 red, 7 green; 2 blue, 9 red, 7 green
        Game 33: 13 red, 2 green; 1 green, 7 red, 15 blue; 1 green, 14 blue, 13 red; 8 red, 2 green; 12 red, 14 blue, 10 green; 8 green, 16 blue, 10 red
        Game 34: 11 green, 9 blue, 2 red; 4 red, 1 green, 8 blue; 4 blue, 7 green, 4 red; 7 blue, 1 red, 8 green; 9 blue, 1 red, 4 green; 2 red, 10 green, 4 blue
        Game 35: 3 red, 9 blue; 11 blue, 3 red, 12 green; 7 green, 10 blue, 2 red
        Game 36: 9 blue, 3 green, 3 red; 5 blue, 1 red, 3 green; 2 green, 6 red; 9 blue, 7 red
        Game 37: 1 red, 7 blue; 4 red, 1 green; 1 green, 9 red, 9 blue
        Game 38: 1 green, 12 red; 4 green, 12 red, 4 blue; 5 green, 10 red; 6 red, 4 green, 3 blue; 4 green, 10 red; 2 green, 5 blue, 4 red
        Game 39: 2 blue; 4 red; 4 red, 5 green, 1 blue
        Game 40: 7 red, 2 green, 17 blue; 12 green, 1 red, 7 blue; 9 green, 2 red, 8 blue
        Game 41: 18 green, 5 red, 4 blue; 20 green, 17 blue, 5 red; 3 red, 7 blue, 7 green; 4 red, 19 green, 18 blue; 20 blue, 20 green
        Game 42: 1 green, 6 blue, 1 red; 5 blue, 1 red, 3 green; 3 green, 7 blue, 1 red
        Game 43: 4 blue, 6 green, 13 red; 16 red, 7 blue, 8 green; 4 green, 16 red
        Game 44: 5 green, 4 red, 13 blue; 4 red, 12 blue, 3 green; 6 green
        Game 45: 1 red, 17 blue, 15 green; 6 red, 3 green, 9 blue; 5 green, 1 blue, 7 red; 6 blue, 4 red, 4 green
        Game 46: 1 blue, 11 red, 1 green; 2 red, 2 green, 1 blue; 4 red, 1 green, 1 blue; 2 blue, 7 red, 3 green; 11 red, 3 green
        Game 47: 2 red, 1 blue; 1 green, 1 red, 1 blue; 5 green, 1 red
        Game 48: 9 blue, 1 red; 1 green, 2 red, 11 blue; 2 red, 6 blue
        Game 49: 5 blue, 7 red, 17 green; 5 red, 4 green, 7 blue; 1 red, 3 blue; 4 red, 12 green, 6 blue; 6 green, 4 blue, 3 red
        Game 50: 11 blue, 12 green, 1 red; 8 green, 7 red, 9 blue; 13 red, 12 blue, 10 green; 5 green, 10 blue, 3 red
        Game 51: 8 blue, 1 red; 5 red, 2 green; 9 blue, 6 red, 4 green; 4 green, 1 red, 13 blue; 15 blue, 3 red, 8 green; 6 red, 1 green, 4 blue
        Game 52: 2 blue, 1 red; 1 red, 4 blue, 5 green; 3 red, 14 blue, 2 green
        Game 53: 8 blue, 10 green, 11 red; 5 red, 4 blue, 19 green; 8 red, 3 blue; 3 red, 3 blue, 2 green; 4 red, 4 green
        Game 54: 3 green, 17 red; 7 green, 13 red, 5 blue; 11 blue, 10 red, 10 green; 3 green, 19 red, 4 blue; 11 green, 6 blue, 19 red; 5 red, 4 blue, 9 green
        Game 55: 3 blue, 4 red; 1 red, 1 blue, 2 green; 4 blue, 2 green, 4 red
        Game 56: 10 red, 3 green, 5 blue; 2 blue, 2 red; 7 red, 3 blue, 2 green
        Game 57: 12 red, 1 blue, 8 green; 1 blue, 3 green, 10 red; 5 green, 8 red
        Game 58: 6 red, 4 green, 2 blue; 7 red, 6 blue, 14 green; 5 blue, 6 red, 2 green; 2 red, 4 blue; 7 blue, 12 green; 7 green, 3 blue, 8 red
        Game 59: 6 red, 5 blue; 5 blue, 1 green; 1 blue, 6 red; 4 blue, 2 red, 1 green; 3 red, 2 blue; 3 blue, 5 red, 1 green
        Game 60: 1 red, 12 green, 2 blue; 4 red, 5 blue; 12 green, 1 red; 5 blue, 13 red, 17 green; 15 green, 1 blue
        Game 61: 10 blue, 18 red; 4 blue, 1 green, 14 red; 4 blue, 2 green; 2 green, 6 red, 10 blue
        Game 62: 2 green, 13 blue, 8 red; 7 green, 5 red, 8 blue; 5 red, 8 blue; 3 red, 5 green, 4 blue; 15 blue, 5 red, 6 green
        Game 63: 6 red, 7 green, 2 blue; 2 red, 6 green; 2 blue, 4 red, 5 green; 1 blue, 2 red, 5 green; 4 red, 8 green; 9 green, 2 red
        Game 64: 4 red, 4 blue; 7 blue, 5 red; 8 green, 5 red, 6 blue; 2 red, 3 blue, 1 green; 7 blue, 9 green, 7 red; 11 green, 2 red, 3 blue
        Game 65: 1 red, 11 green, 9 blue; 2 red, 5 green, 17 blue; 2 red, 3 blue, 6 green; 2 red, 6 green, 14 blue
        Game 66: 7 green, 5 red, 2 blue; 5 red, 7 green, 2 blue; 6 green, 3 blue, 15 red; 8 green, 20 red, 4 blue; 8 red, 8 green, 3 blue; 3 blue, 11 red, 5 green
        Game 67: 2 blue, 2 green; 6 blue, 1 green, 3 red; 3 red, 7 green, 4 blue; 1 red, 1 green, 8 blue
        Game 68: 1 green, 3 red; 2 green, 1 blue, 5 red; 2 red, 2 green, 1 blue; 2 green, 3 red, 1 blue; 6 red, 1 blue
        Game 69: 4 red, 2 green, 3 blue; 14 red; 3 blue; 11 red, 1 green; 13 red, 3 green, 2 blue
        Game 70: 1 green, 1 blue, 6 red; 1 green, 4 red, 1 blue; 6 red, 1 blue
        Game 71: 1 green, 8 blue, 10 red; 6 green, 3 red, 2 blue; 14 red, 3 green; 9 blue, 2 green, 2 red; 7 blue, 5 red, 1 green; 6 green, 5 blue, 10 red
        Game 72: 2 red, 10 blue; 1 red, 7 blue, 4 green; 1 red, 3 green, 6 blue
        Game 73: 6 red, 6 blue, 5 green; 1 blue, 11 green, 7 red; 10 red, 7 blue, 2 green
        Game 74: 4 green, 2 red, 3 blue; 1 red, 6 green; 2 red, 4 blue; 1 blue; 2 blue, 1 green
        Game 75: 10 red, 5 blue, 1 green; 12 blue; 2 green, 11 blue, 9 red; 1 blue, 14 red; 2 red, 2 green, 13 blue
        Game 76: 9 green, 1 blue; 8 green, 2 blue, 7 red; 4 blue, 7 green, 4 red
        Game 77: 14 red, 3 blue, 10 green; 3 blue, 7 green, 2 red; 5 red, 7 green, 3 blue; 14 red, 8 green, 3 blue; 9 green, 5 red; 2 blue, 7 red, 15 green
        Game 78: 5 blue, 9 green, 8 red; 11 green, 9 blue, 4 red; 8 red, 2 blue, 10 green; 3 blue, 7 green
        Game 79: 4 red, 6 blue, 10 green; 2 blue, 17 green, 15 red; 15 red, 6 blue, 14 green
        Game 80: 2 red, 8 green; 6 blue, 6 green; 1 green, 3 red, 8 blue; 5 green, 4 blue, 3 red; 3 blue, 1 red; 7 green, 8 blue, 3 red
        Game 81: 5 blue, 1 red; 10 blue, 7 red, 3 green; 4 green, 1 red, 10 blue; 8 red, 4 blue, 3 green; 11 blue, 9 green, 1 red; 6 red, 10 green
        Game 82: 1 green, 2 blue, 1 red; 2 blue, 1 green, 2 red; 2 red, 8 green; 3 red, 3 blue, 5 green
        Game 83: 3 blue, 4 green, 5 red; 6 blue, 5 red, 5 green; 4 red, 2 blue, 5 green; 2 green, 6 blue, 5 red; 1 red, 2 green
        Game 84: 14 blue, 1 green; 9 green, 3 red, 1 blue; 5 green, 10 blue, 3 red; 9 green; 6 green, 18 blue; 2 red, 8 green
        Game 85: 1 blue, 7 red; 12 green, 7 red, 5 blue; 9 blue, 6 green, 7 red; 10 red, 7 green, 1 blue; 3 green, 6 blue, 7 red; 10 red, 16 blue
        Game 86: 9 red, 10 blue, 2 green; 2 red, 12 blue, 9 green; 11 green, 2 blue, 3 red
        Game 87: 1 blue, 7 red, 9 green; 1 red, 6 blue; 3 blue, 12 green
        Game 88: 1 blue, 4 green; 4 red, 13 blue, 1 green; 7 green, 4 blue, 3 red; 2 blue, 4 green, 5 red; 4 red, 7 green, 10 blue; 1 red, 7 green, 13 blue
        Game 89: 5 blue, 8 red, 1 green; 7 blue, 2 green, 7 red; 2 green, 8 blue, 11 red
        Game 90: 5 blue, 1 green, 11 red; 6 blue, 8 red; 2 red, 3 blue, 4 green; 2 green, 4 blue, 7 red; 3 blue, 8 red; 6 red, 3 blue, 1 green
        Game 91: 2 green, 13 red, 9 blue; 12 blue, 6 green; 14 green, 10 blue, 3 red; 13 blue, 7 green, 5 red; 1 green, 9 blue, 14 red; 10 green, 8 blue, 17 red
        Game 92: 10 green, 3 red, 17 blue; 13 red, 7 green, 15 blue; 9 blue, 8 red, 4 green; 1 blue, 8 red; 9 red, 1 green, 19 blue
        Game 93: 1 blue, 7 green, 4 red; 2 blue, 8 green; 10 red, 10 green, 1 blue; 10 green, 2 blue; 3 red, 3 blue
        Game 94: 5 red, 8 green, 14 blue; 4 red, 7 green, 20 blue; 11 blue, 4 red, 13 green; 18 blue, 1 red, 3 green
        Game 95: 5 red, 8 green, 11 blue; 12 green, 5 blue; 4 blue, 14 green; 7 green, 9 blue, 5 red; 3 red, 4 green, 7 blue; 3 red, 12 blue, 3 green
        Game 96: 10 red, 12 blue, 9 green; 4 green, 8 blue, 4 red; 8 blue, 3 red, 4 green; 6 green, 10 red; 2 blue, 3 green, 15 red; 12 red, 2 green, 2 blue
        Game 97: 13 green, 1 blue; 9 green, 1 red, 1 blue; 6 blue, 10 green; 1 red, 6 blue, 11 green
        Game 98: 2 blue, 14 green, 2 red; 7 green, 1 blue; 1 blue, 1 red, 3 green; 2 red, 1 blue, 15 green; 1 blue, 2 red, 10 green
        Game 99: 3 green, 8 red, 7 blue; 6 red, 13 blue; 12 red, 4 green, 4 blue; 12 red, 8 green, 3 blue; 11 blue, 11 red, 4 green
        Game 100: 2 red, 13 blue, 1 green; 1 green, 12 blue; 1 red, 5 blue, 1 green; 3 blue, 3 red
  recorded_at: Sun, 16 Mar 2025 02:36:10 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/03_gear_ratios.rb?token=ACG6TJZ65Y3RRH5KAZRXGXTH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '5258'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"234bcde3cd931912244692198ff96171058aa2572306d0291c48da5fd9b76cbd"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 26EE:25F6AA:EFC530:131DDB9:67D63919
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:10 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100020-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092571.720597,VS0,VE69
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7325b2e687e7a4bef62d337c9ab803716e59f008
      expires:
      - Sun, 16 Mar 2025 02:41:10 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        parts = {}
        gears = Hash.new { _1[_2] = [] }

        DATA.each { _1.scan(/\d+|[^.\n]/) { parts[[$., $~.begin(0)]] = $& } }

        p parts.sum { |(y, x), c|
          next 0 if (n = c.to_i) == 0

          (y - 1 .. y + 1).any? { |yy|
            (x - 1 .. x + c.size).any? { |xx|
              parts[[yy, xx]] == ?* && gears[[yy, xx]] << n
              (yy != y || xx != x) && parts[[yy, xx]]&.size == 1
            }
          } ? n : 0
        }

        p gears.sum { _2.size == 2 ? _2.reduce(:*) : 0 }

        __END__
        ..........................380.......................143............................108.............630...........425........................
        ....*585..30....217*616..........$...................../....$.................447...........381..................+..........973.............
        .210......*...............639...541..-........830*...........912..........743*.......................828..671........+......*...............
        .......760....$..............*........737.*.......949..568.......................=........628.85........&.#..........87...535.....794.......
        ....#......616..........373.999..392......853..........&.........666.......*.....365.............807............@....................*......
        .680................800*..............684................329....*.......960.186........725........*......&.....631.....700*818..............
        ............-402...........%.........@.........576.............956................../.....*....237....490........................998........
        ........624.........600/...283..906................301....903...........=495.....917..165..193......................................+.......
        ....977.+........................*........*610.....-....................................*.......489*795.......-....@545..915......*......641
        ...-.......123........@........113.....643............117.483../...................961.984..................878...........*........277..@...
        .............$....787..80....................490......$....../..802.....591...373...*..............228..................848..840............
        .613.......................810..........740......476.....902............$..........201......%.......$..-.......993......................701.
        ......268.......429.........$..........+....582..........@...538*789......................941...136.....334......*.........508...250........
        ........*...745*.........+......*77.........*......653..................#....27................/......+..........491....#....*...*....192...
        .......978.............26....957......*...400.........*834.#85.......429............................291................690...69.814....#....
        ...276.....=.571....................65....................................765.......179..720..................460.302.......................
        ...*.....577...*..........................=50..758............/.52@........*..........@..............279........-...........................
        ..821...........676..839...227..................*..........273...........789...42.288...#.......226......................451..592......943..
        .........*...................*......................................$................*..378.......*..876.497....@..575*.........*.....*.....
        ......524........353........664......781...../108..................124.............407........272.43.#....&..421.......708......../..405....
        ................*....769.............*.............../.........432..........57$..............*...................=...........887.637........
        ................96...*................700..%.......573........*....644..........802......798.897.......456..258.130..182......*.............
        ...........&.........420............#.....369..............121........$....916...*........*...............*.............*637.......*816.....
        ...911...97....990...................557.......................355............#.578........764.872.........80.....*792..........517.........
        .....*..........*...-609....675.............657......728......%....446....963.........201......%.......232.....576.......116........630.....
        ..801..........352............%..............*..........*422..........*..*........538..*.........*435.*.....................*730.....*......
        ....................&................952..283.....931...............95...617........%..215....174.........139........375...........755.426..
        ..........972.......82...500........*.............*...854.......208...........853%..................=......*...........*..941...........%...
        ....975+.....*.....................58....$..836.899..../.........*...................@682........952........193.......13.*........711.......
        ............757..............45.......453...../.............603.735......155..848..........402..........954..............530...........%....
        ..........................................285...........596...=.............*...............*.......*....#......*681...........*162.517.....
        .173.589.......892..451......268...........*............../............764...476...........206...860.123.....812.....97*319.139.............
        .......*............%....981....*288....917....666..............#.........&.......532@...-...............330.........................731....
        ......764.......*........*...................=...+.985...952...498..+473.................98..&..663..414....*...885&...788..../.............
        .............508.439.....956......799.122..786.............*.............214.................63............346........=......507............
        ...252*780.......................*....*.....................446............*.....900.540.................................510...........899..
        ...........169-......%..@........328.506................573.................367.....*..........646.896...815...691..............%141........
        .................-.195.606.....&................908......./...67*49...@.........707.....#607......*........*.....=..........................
        ..902..@......742.............706..355&.....953...*..811...............125..490....*241..............+..468..............512....334.........
        ...*....463.......802.260&....................*..711.-...-......................%.................360................811.%.............%....
        .113............%..*....................%861.999.......458..................334.924..425..406..........184#................712....#.....176.
        .........166...689.124......*550.840.......................742................#........%......405...........26.........546*.......665.......
        ............*............159........*...........@879.......*.........48..................987......751.319....*...113........................
        ..........163............................................453...524.....$..........*936...*...........*......119..+.......756.......&...326..
        777*241.......210.974.258.....528..............................$...............559.......921......@....382...............*........147...*...
        ....................*.*....................131*156........./................@......445.........477......*.....47=....875..730..........499..
        .....682..........545..856............................165..740...831.........368..........851......926...223............*...................
        ....*.............................447..................@...........*..............%...418....*.....*...........838...325....................
        ....722.......71....848...747........*..690....275..........740...16..123..129...837.....+.359.68..426......=....-........791...617..582....
        .............*............=...271...358.*.........*...................+.......*................*............378............$................
        570.......620..399*666...................702.....32...............215..........896.325......377...................=286.................200..
        ...*833...................................................12/.247......510.........*...369........813*..........*...........................
        ....................................%..........-......&..........*655....*.......380....*.............778.....98.910.......752..............
        .............643.783..............621....777..523.....384..$...........693...............336................................#..+............
        521.........*.......*.................$...................261.31..............549.................102......467-.......219......286....$118..
        ..........837........904..636.298.204..368.......47............/.................*...........246...*....#.......526......*..................
        .....201......497............*....*..............*................982........+..243.............*.774....488.......*..641...........140.....
        838...*....+.......................296....*765..489....8....................796.......=.......200................996.........364.......*....
        .......540.93....+...............................................*600.................47..................256........#..........*...+..823..
        ................14...-65..................328.............................407+..............54.464..990....*...305..129.......679..141......
        .........................487.-.....831.......*.....407.776.409.....75.............426..782...*...*..#......347....*....................864..
        ....995...................=...117.../..*..531.........*......$.......*973...........*...@......614................194........172...930*.....
        .......*386...........................799.....660...................................415....../.....%370...289............988................
        .....-..........835+..316.47..............226......904.........789..........................32............$....616..........=...............
        ...243.....26............*........479%....=....@...=..............*......#.....292..............389.....@.....*...................+...$546..
        ..........*.....&.......................$....199......@........&..25......345.....*36...626.....*.....632..108..69*362...&561..517..........
        .136*291...858...815........974.......913............786....908......495......805..........*122.948.........................................
        ...........................*...............103*363...............438...........*..@.@...........................%401.......90=......403.....
        .313&.618....@...$521.....332............................768.......*.........428.50..445.338.....*.......................%.....115.*........
        .......*.....583..............586...........=..............*.......11.......................=.171.280.........140..750...798...&....286..111
        .....604..........266......................566....-.....398..238.........499........#...@......................*.....%......................
        .........545*739.$............68..337*.........296..............*................694...100......&..............233..........................
        .....320................468....-........997......................796...48.....................219.....&............378.552...8..............
        .......$..........356+....*................*.........205................/........645*....600.........709.....................*...760........
        ...625..................681........870-...907.......-....142..173...859..............802...*.....................741..289*74.............705
        .........244......908....................................*.../........*..................501......92.............*..........................
        ............*......$.....576.384..111.119.............127..............720....898....534............*....347........................487*....
        ....610...922...........$.....*...*..........381*36.........................../.......*......665.843.......*....754.470..690................
        .....*.........$..135.......142.242.352..............................775...-.....*....67....*.........+...576......*.....#..................
        .....249....735......*.......................................402-...*....903..667.419......526........294...................................
        .361.....-......418.659.575......803.596......910....367...........950.....................................308........*.....................
        ...*......690..*...........*797.................*.......*....................160..........61.....#........*..........141.....402...599..811.
        ...505..............288%........525%...........355...324.................876*...............*538..39....482..696............@.........*.....
        ...............401........@............884..........................&.......................................*.........749.............86....
        .........484......*38..370........328.*............553......&845.....662................520................46................24.............
        .....407*..........................$..310..........*.....................765..672............832.......................@.657....555../..588.
        ..........107.789..200..213.....................898..545........67...........%................./...........101.742...422..%...=...&.622.....
        .............*......*............*292......946......&..............243+.651....178...665............./.........*.............92.............
        ......974...........814.......220......906......$......*.....879...........*......+.....*........-...995........185.18...........254..198...
        ...........791..808.....984...............&...985...871.678..*.............340................973..........253.......#..................*...
        ..../.....*........=....*..........92*411.....................835...................%.................#.../................$.........279....
        ....926....292...........839...333..........600.115....................=....&.....336.....350........966......999...540..908.............705
        ................................*...497...........*....994..........447......131.........*...................*..............................
        ...........$.....-....../.....394...=.......175.417....*................................719...................992....................-......
        ..........960.698.....610.986.........*776..........516...34......&.....75...751...$........%.......651.....=......300...........364.905....
        ...317.......................*..+...........................*....783.....*..=......655.......310.....+...339..........*......256*........145
        ....&..107..................276.136..905......548..%.......334.........471...................................279.727..696...................
        343...*......733........515..........$....357....@.301.........*348...................118.........&...439...*.......................922.....
        ....754.....-......646.@.................-..................929.................475......*......785......*..684..............27......*......
        ...................*.....463..../59.609...........168*863...................801...&..211..382..........347............28.............473....
        .................725.....#...........*......79..........................978*...........*......................199.....*.........579.........
        ...........................157*662....958...*...............546@.................&..181...416.109..............*....258.....421*............
        ...859......777=.............................217.862..................817*597...655........*.........76.....443.....................292.....
        ...@...170..........273...........+..=.............................=................217....253..438....*....................................
        .......&.......................971..876...............205.....394.502..122...........$.............$...40............802....................
        ..894........*.623...718..................216........*.........=.......................544.....................102............932.951..615..
        ....+......865........*...............................298.721................147.......*.........165.741*794...*......318...&.......*...*...
        ...................878..........................*.........../............947...........314.......*...........999............493.....996.330.
        ...........705.........79........994.645.703.203.258...........706...227*..........+............590....822*.................................
        .....468..*......*311./...@23...$.....@....................588...*.........317......113....857.............19.#..&260...571...251=....772...
        ......*..11...175..........................................*....259...509.....*...........*.......443..487....73........................*...
        .....161..............................................832...611..........*609..742.........938......*.*............@909.....66.232..........
        ..........125...............630.....596.......%477.......*........................................601..........158............*......201*864
        ...................819.......=..-.........................198..............=..........418...60............904...............................
        781...663..250...................281....905.+...187....%..............271..852...........=..*...484...517*..................................
        .......*......=....865.826...%............&.679..*.....160..576.....................462+...717.............&........389........783....67....
        .......988............*......79..441............474.........#.....471.......298................./.....*511.445......*......463*.............
        ...........91....807.............*......173.............#27.................*......937.353.....85..510..............109.#............70.....
        ...........*.......*...........955..398...@......75.........*...........32...221../....*....7..........234../481........841.........@.......
        ........#..593......864.....................932.*........960........160*.............953........385...+.....................................
        .702*..596.........................$....952*.....20.........................................257....*........741.858.......*......839..491...
        ................#........618.....693...............................333*87......173......268*......775..................699.710...*..........
        ..........985..586...818..*..........*723.......437*..........148...................333........................156.............821.....651..
        .....................#...982......360.......757.....706.122....&............245........-........16.......571.......544................$.....
        6...381......................657..............#...................112*.....*.....496......388.&....556#.....*428..*................-.....828
        ........#.398.688.900@..674....*....284.860..........-....................588.............*...47.........@........280............86.........
        .....526.....*.............*...........*.....154......267..960......563.......29.......398........309#....849./........240*685..............
        .......................692.420.978#.........*.....261.....%........+.........*.....492......$957..............979..................254.691..
        ...978#...131*980.......+.................925.....*...627......519....368*..324...*..................$..................52............*.....
        ....................453........400$............................*................745...+..........-..838..#....118.........=.....815.........
        ....679......796.........920........$...75...290..195.......307...340.....649..........403......165.....26.......*..........711.*...........
        ....*.........%..100.440.........206....$...*....*...................*254..........990..............249..........380....-.....%.535.........
        ..........988.....*...*...................399..723.....*....................107......*.....................49...........422.................
        ...800*......*..183..117..375......375..............807.691........981................890.......622...97.....$.515................@.........
        .......413.129...........*.............729....&137...........956....$.....976....................*....../..........................334......
        ...313..........794-..807.....*698.....&...........874*.........*...............71........................655...............................
        .....*.....................193............*547.........459.....338...489..581.......483..@115..125........*..........220....................
        ....907..361*.....243..834.............987.....149..........@.........*...............*........$.......509..698.142../.....@.=750......4....
        ....................-...*.....................*............611........21..251.&......578........................*.......717.......47#.......
        .........................610.26.............892...............................299............601............721..729........................
  recorded_at: Sun, 16 Mar 2025 02:36:10 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/04_scratchcards.rb?token=ACG6TJ2BWSIDUO2XCIXT2LDH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '10251'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"97bf659e8dccf9757c283e88cbc1c096065218f6d2ff06501712cb27dcf182ff"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - FC86:332194:39B462:4ADD5E:67D6391A
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:11 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100145-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092571.920944,VS0,VE323
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7d6d61f625819b92f5406bfa9b8c7ae7a288fd61
      expires:
      - Sun, 16 Mar 2025 02:41:11 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        I = DATA.map { _1.split(/[:|]/)[1..].map(&:split).reduce(&:&).size }
        p I.sum { 1 << _1 - 1 }

        c = I.map { 1 }
        I.each.with_index { |v, i| (i+1).upto(i+v) { c[_1] += c[i] } }
        p c.sum

        __END__
        Card   1: 69 12 75 19 83 56 73 53 52 91 | 83 63 56 30 77 94 12 81 42 69 52 70  6 97 20 43 61 22 75 19 73 32 74 53 91
        Card   2: 23 55 24 84 90 10 87 73 74 45 | 20 66 51 78  9 76 86 96 72 70 84 35 74 90 56 55 23 38 58 45 87  2 80  8 10
        Card   3: 70 32 38 23 86 54 26 16  9  1 | 67 50 39 70 59 77 63 30  3 45 23 16 72  1 86  7  9 32 26 68 38 54 65 34 64
        Card   4: 33 50 19 63 92  1 58 34 84  8 | 35 61 49 86 40 20 22 71 84 51 64 62 33 85 45  3 54 83  1 29 82 19 92  8 11
        Card   5: 74  9 54 83 22 15 81 64 47 70 | 21 74 59 85 17 36  5 79 87  7 13 23 47 45 96 29 68 65  3 22  4 34 46 90 40
        Card   6: 29 55 56 13 58 71 36 30 15 11 | 99 17 90 29 22 68 61 55 11 13 37 94 30 60 56 92 44 71 42 31  8 26 14 51 35
        Card   7: 92 70 97 62 33 45 85 59 82 73 | 92 35 11 49 88 14 85 42 40 41 69 51 82 73  5 87 60 62 33 97 70 16 59 13 45
        Card   8:  5 22 64 46 32 90 57 83 37 38 | 87 47 91 35 39 64 73 83 71 22 10 45  1 76 37 13 20 66 67 21 86 92 38 12 52
        Card   9:  7 49 62 79 37 91  3 58 74 19 | 17  7 58  2 53 95 52 62 83 41 42 36  4 94 64 97 20 32  3 73 81 22 57 37  9
        Card  10: 84 33 81 45 99 96 76 97 40  2 | 81 26 11 34 83 25 45 76  2 85 33 64 57 99 93 75 96  8 84 44 79 87 97 40 70
        Card  11: 37 41 20 56 16 42 43 11 55  4 |  4 16 71 31 45 53 73 55  6 83 69  2 94 18 58 88 20 41 46 56 11 19 37 43 22
        Card  12:  9 81 46 38 55 60 39 43 42 93 | 94 39 38 21 60 97 24 33 34 59 82 55 43 12 88 81 46  9 83 93 22 30 41 98 42
        Card  13: 15 89 14 33 57 55 75 53 80 34 | 59 53 36 57 11 80 75  2 73 15 56 89 33 97 48 77 74 41 14 28 31 35 95 55 34
        Card  14: 85 50 16 90 98 55 13 71 20  9 | 16 44  4 98 45 50 77 64 55  5 78 90 54 95 48 12  8 28 94 83  9 27 88 85 13
        Card  15: 41 85 80 55 27 32 26 68 57 77 | 78 39  9 22 31 86 48 18 16 98 15 51 44 21 28 54 87 82 13 36 47 12 55 75 30
        Card  16: 30 86 48 11 24 68 95 82 44 45 | 68 91 65 86 42 44 82 56 58 18 77 20 95 54 21 90 22 14 24 33  6 63 40 36 28
        Card  17: 81 84 89 44 27 49 36  8 70 22 | 75 47  8  2 36 10 34 44 71 48 31 82 70 42 92 93 81 72 94 22 51 91 73 67 78
        Card  18: 95 62 99 37 38 52 88 92 79 54 | 65 87 72 84 10  1 24 94 59 16 15 64 49 92 78 17 28 69 55 67  6 91 96 58 60
        Card  19: 89 92 19 42 96 33 44  1 76 36 | 77 11 55 81 43 20 90 14 54 52 34 10  4 74 12 99 83 17 51  5 21 56 91 37 61
        Card  20:  7  4 51  9 16 56  3 81 85 21 | 31 78 15 17 35 55 83 33 48 12 60 77 92 65 30 72 43 39 64 62 63  1 14 58  5
        Card  21: 95 47  9 72 82 48 84 37 23 65 | 89 61 26  7 99 77 11 50 71 12 55 54 31 49 81 32 33 74 52 97 79  3 91 76 37
        Card  22: 58 37 93 89 50 61 52 95 36  3 | 66 71 42 29 82 73  9 72 54 19 46 24 23 59 64  5 41 48 55 53 25 62 74 34 78
        Card  23: 92 82  9 63 64 65 48 93 19  7 | 35 24 41 95 87 67 10 91 57 40 80 17 47 98 77 79 25  1 32 53 11  3 14 42 73
        Card  24: 62 60 83 65  7 43 18 53 91  4 | 20 34 93 41 36 25 44 97 30  5 32 42 75 71 84 23 76 89 33 26 65 52 78 81 70
        Card  25: 90 68  7 51  3 89 62 67 18 23 | 74  6 13 70 15 80 59 32 35 42 44 50 49 73 63  4 82 27 68 31 92 29 98 11 85
        Card  26: 22 28 52 16 49 54 55 51 89 20 | 99 51 82 24 18 65 55 72 85 36 86 95 71 61 77 38 12  4 96 89  7 97 40 66 91
        Card  27: 64 40 71 56 94 62 60 72 22 55 |  3 27 22 64 74 31 55 70 78 40 94 13 42 93  9 28 45 98 57 33  1 16 21 92 24
        Card  28: 59 21 57 48 64 98 34 84 95 52 | 14 65 50  8 74 29 62 64 59 60 88 23  7 36 12 52 34 58 97 35 70 86 79 73 31
        Card  29: 81 89 72 63 67  2 97 19 58 70 | 25 72 10 81 70 58  1 37 62 67 96 21 35 26 20 97 14 39 74 29 12 57 18 91 42
        Card  30: 74 61  1 98  5 68 20 47 81 78 | 76 47 32 58 16 19 41 17 18 82 70 68 27  7 55  1 24 11 59 94 30 90 85 26 53
        Card  31: 37 24 52 75 26 62 71  8 59 92 | 39 58 75  3  9 86 84 91 88 42 14 83 18 52 50 37 63 24  5 71 23 62 94 61 92
        Card  32: 66 87 81 58 95 41 47 76 20 12 | 83 96 14 38 27 35 68 13 91 84 48 99 29 23 52 31  9 17 79 89  3 51 81  6 56
        Card  33: 78 15 62 95 50 63 29 61 12 25 | 86  2 50 27 46 48 74 55 36 81 54 42 47 18 98 91  4 76 33 21 49 26 56 35 68
        Card  34: 15  2  1 97  6 42 96 67 17 86 | 28 45 73  8 56 52 53 97  5 35 86  3 54  4 32 88 23 60  1 47 95 74 10 49 39
        Card  35: 89 99  6 27 26  8 68 57 36 97 | 12 36 35 28 38 86  8 89 46 52  4 39 93 63 20 91 50 11 27 83 74 92 67 79 18
        Card  36: 49 27  7 26 25 78 74 32 59 55 | 83 15 44 67 85 28 41 42 58  3 16 51 34 37 66  5  9 82 73 96 27 65 33 29 92
        Card  37: 68 79 22 61  9 78 29 17  1 83 | 76 94 25 60 90  1 49 88 11 72 37 45 93 97 53 77 27 63 31 74 46 95 40 26 12
        Card  38: 44 96 29 49 85 92 98 40 83 80 | 11 58  2 79 32 48 56  4 24 76 66 94  1 17 47 63 38  9 75 82 99 53 91 33 88
        Card  39: 53 13 83 11 12 39 30 77 37 87 | 51 62 47 76 93 34 98 45  6 95 89 41 21 40 88 19 26 43 99 14 67 29 73 59 42
        Card  40: 23 63 92 24  4 35 93 36 73 88 | 74 42 70 10  4 50 88 92 73 41 76 45 11 36 23 35 24 78 18 59  8 63 72 83 93
        Card  41: 12 94 49 20 27 52 98 66 99 92 | 20 11 63 14 77 39 38 12 49 94 92 36 55 93 74 30 96 95 66 51 99 27 86 52 90
        Card  42: 30 27 40 59 75 19 90 81 61 31 | 95 81 45 27 59 19 38 18 30 91 85 89 75 82  4 77 34 61 46 98 40 31 86 90 21
        Card  43: 80 31 91 49 76 14 72 62 26 51 | 13  4 52 90 31 11 76 34 58 91 49 80 29 55 14 98 22 51 72 83 26 57 92 62 85
        Card  44: 24 43 54 74 83 21 57  8 19 84 | 57 19 88 15 24 31 74 12 43 95 83 21 10 67 54 76  8 59 52  9 71 92 25 84 55
        Card  45: 80 50 79 31 57 43 19 36 61 14 | 94 76 21 26 67 80 72 39 14 82 34 85 18 43 10 65 20 64 23 47 89 69 55 17 98
        Card  46: 52 26 71 96 24 93 64 38 80 29 | 52 36 72 62 64 81 86 16 63 29 15  8 23 46 38 31 33 73 88 93 24 74 21 96 26
        Card  47: 31 96 28 34 83 59 91 19 40 62 | 21 28 97  6 96 54 66 33 19 93 74 91 25 80 67 31 34 17 27 37 60 62 92  4 98
        Card  48: 51 27 11 76 40 10 80 12  9 37 | 78  4 35 30 14 29 96 51 20 56 18 22 93 76 94 46 74 26 75 28  3 59 39  9 31
        Card  49: 41 77 24 13  3  6 14  1 51  9 | 14 93 10 17 61 40 73  6 41 95 13 62 71 98 56 29 75 24 51 26 88  7 85 84 94
        Card  50: 59 38 20 44 13 84 74 98 31 15 | 40 10  8 25 20  3 38 80 32 77 26 29 61 31  1 35 98  9 63 62 84  4 88 39 73
        Card  51: 24 63 74 81 52  1 65 22 13 85 | 95 58 64 76 73 90 72 28 91 26 39 27 83 37 77 70 79 55 78 43 42 69 11 88 86
        Card  52: 42 46 68 26 43  2 38 23 81 67 | 71 88  3 29 63 14 81 64  9 12 13 76 32 62 53 90 99 37 80 61 87 50 75 79 17
        Card  53:  1 26  8 25 54 65 53 56 99 73 | 42 46 51 32  9 55 63 91 66 69 33 34 79 11 67 27 92 21 83 77 35 38 98 74 59
        Card  54: 75 47 66 55 72 60 38 53 62 21 | 71 40 89 51 75 31 93 45 53 13 92 11 98 68 44 87 74 61  8 39 30 63  1  7 76
        Card  55: 54 71  4 44 61 59 64 50 73 47 | 20  7 31 66 69 37 30 42 86 43 83 34 70 78 56 15  3 50 41 67 88 17 46 81 96
        Card  56: 90 32 94 66 80 55 96 47 11 51 | 46 69 89 30 50 65 16 83 17 44 88 70 12 91 74 67 86 63 15 29 26 60 57 14 23
        Card  57: 87 98 51 22  7 28 33 12 17 70 |  4 47 38 40 95 74 97 58 53 43 21 54 35 27 46 85 16 10 14 94  3 36 66 86  5
        Card  58: 88 63 18 90 57 37 62 58 72 28 | 74  5  7 24 73 85  3 77 22 19 32 44 25 69 93 86 98 46 56 26 34 50 79 23 55
        Card  59: 40 77 65 18 14 43 94 95 45 10 | 39 28 14  2 95 70 44 45 34 83 18 65 94 74 40 33 73 78 87 72 64 77 10 43 50
        Card  60: 34 55 62 11 10 76 53 25  7 35 | 88 79 26 19 38 90 78 53 46 52 17 15 83 56 69 75 99 62 10 35  6 36  7 45 28
        Card  61: 36 39 79  7 83 22 10 74 86 85 | 74 72 51 10 55 84 22 36 54 71 39 34 83 57 75 60 86 94 53 85 37 97  9 65 42
        Card  62: 91 20 88  6 48 82 11 10 95 40 |  6 88 60 44 89 18 81 68 58 71 76 20 85 40 11 59 10 92 82 66 91 54 48 95 30
        Card  63: 44 80 81 49 32 24 40 41 77 94 | 56 54 99 69 58 10 49 74 11 21 68 16 87 98  1 84 83 81 78 41 76 60 63 13 22
        Card  64: 81 32 24 86 14 28 10 21 92 70 | 74 87 58 24 96 12 92 14 33 68 76 99 85 70 69 19 13  3 94 21 48 97 32  1 20
        Card  65: 18 20 67 41 90 98 61 52 11 42 | 89 90 34 87 57 88  6 62 96 13 28 11 61 40 77 67  2 66 81 36 42 18 91 52 56
        Card  66: 26 28 58 35 42 73 29 23 77 95 | 84 98 34 95 15 63 36 92 48 28 35 83 39 93 16  6 23 81 59 42 52 62 57 22 70
        Card  67: 22 63 17 14 53 95 13 20 40 16 | 60 31 90 27 49 86 32 95 87 65 74 98 43 33 67 28 61 63 17 82  9 50 21 75 85
        Card  68: 93 69 87 27 83  7 73 81 88 14 | 81 97 83 73 87  1 10 55 88 41 14 26 56 63 44 71 27  7 64 69 37 11 42 93 61
        Card  69: 15 42 34 80 13 97 21 26 20 65 | 16 28 38 12 43 56 11  4 79 39 93 40  8 34 23 19 53 67 29 77 68 27 30 94 46
        Card  70: 18  7 31 15 28  1 78 41 58 48 | 42 56 25  1 92 97 84 63 26 95 12 50 53 48 14 78 13 28 22 37 71 77 91 41 38
        Card  71:  5 70 37 60 66 16 81 11 47 43 | 38  1 83  8 75 23 70 60 11 39  4 81 74 14 79 53 51 13 32 78 58 66 24 80 92
        Card  72: 40 51 21 14 88 48 31 20 39 76 |  5 19 68 18 92 35 77 32 86 84 37 42 28 13 78 71 75 98 87 29 94 16 30 67 89
        Card  73: 47 29 76 34 14 96 15 43 69 74 | 83 61 59 89 11 60 98 28 22  6 66 53 71 13 68 67 58 56 46 96 76 50 20 33 97
        Card  74: 96 21 62 93 84 51 60 98 28 35 | 21  8 57 98 63 93 78 12 56 43 24 33 11 26 54  4  3 47 17 96 66 64 81 85 16
        Card  75: 55 16 42 20 26 84 76 39 29 51 | 64 30 44  8 58 22 78 39 40 15 38 54 85 20 57 82  4 67 86 72 37 51 96 16 18
        Card  76: 46 64 22 56 81 45 68 54 14 24 | 36 29 56 79 48 60 46 12 23 24  7 94 93 30 50 43 83 68 62 63 90 70 72 74 39
        Card  77: 27 51 60 83 18 46 10 23 57 44 |  1  9 39 85 30 36  8 46 84 22 69 29 81 50  2 78 73 74 95 34 77 70  5 20 12
        Card  78: 84 85 50 14 34  1 25 10 54 15 | 17 39 78 70 29 33 49 32 55 76 50 93 72 73 12 56 24 61 90  8 69 58 98 86 96
        Card  79: 91 20 66 77 51 88 69 81 79 30 | 90 45 13 85 78 55 86 76 65 34 59 22 37 99 49 94 60 54 46 17 84 28 61 44 74
        Card  80:  4  9 37 77 89 91 29 31 62 57 | 69  6 94 11 58 93 26  3 55 43 53 32 86 20 65 21 68 81 56 15  1 72 27 71 23
        Card  81: 26 19 49 67 15 54 44 27 25 64 | 71 44 75 54 64 48 22 27 30 28 72 77 67 65 15 23  7 19 85 89 42 49 26 25 16
        Card  82: 78 13 96 18 46 74 53 16 73 33 | 37 96 16 58 35 13 83 73 61  4 69 92 65 11 75 53 23 49 12 22 79 33 78 74 98
        Card  83: 93 82 29  5 95 96 57 16 94 67 | 39 29 16 81 94 95  5 77 32 48 67  6 19  2 96 24 53 82 65 57 93 51 44 49 58
        Card  84:  7 48 34 66  4 31 74 99 33 96 | 96 58 25 36 28 24 30 35 42 20 13 97 60 85  1 53 52 26 48 70 14 99 75  8  5
        Card  85:  6 44 69 84 80 37 35 82 90 30 | 84 91 57 69 27 82 16 71 30 53 18 80 13  9 35  6 20  4 44 11 37 73 90 41 12
        Card  86:  4 75 26 24 90 91 69 77 29 60 |  5 72 80 64  4 73 29 13 90 37  3 26 59 77  7 84 60 81 69 46 99 24 35 75 91
        Card  87: 70 57 68  5 86 89 95 31 87 83 | 17  9 47 62 86 53 82 74 46 31 67 64 14 70 98 57 71 95 30 25 28 68 89 84 59
        Card  88: 51 56 93 33 14 71 37 77  2 58 |  2  8 18 63 35  7 99 93 39 73 25 77 58 83 14 51 27 56 33 40 24 37 80 71 72
        Card  89: 86 49 19 13 54 47 56 26 81 52 | 48 40 43 63 35 85 98 86 22 55 26 46 17 19 68 34 56 13 64 27 72 47 49 54 24
        Card  90: 60 81  8 65 64 32 28 87 18  6 |  2 64 62 81  3 28 38  9 96  8 45 40 42 83 65 32 87  6 60  4 50 36 33 68 18
        Card  91: 75 42 51  6 29 41 94 61 55 22 | 68 95 31 64 41 37 22 76  6 81 51 75 67 79 33 70 94 55 58 56 42 61 29 15 13
        Card  92: 34  7  3 23 79 80 98 40 88 48 | 90 88 94 61 31 59 23 47 81 85 86 48 63 35 73 52 79 70 20  1 97 28 51 75 42
        Card  93: 76 61 71 49 23 84 64 10 82 73 | 23 45 76 31 93 10 84 49 68 62 28 72 20 38 82 13 25 81 60 19  9  7 34 21 89
        Card  94: 76 15 19 25 37 72 78 80 62 57 | 13 19 98 73 48 37 92 68 44 93 90 72 21 60 76 80 23 57 25 20 15 78 89 62 51
        Card  95: 20 96 12 88 73 61 75 18  5 17 | 22  1 64 19  3 42 63 80 84 35 43 89 51 94 54 28 32 70 31 56  4 59 79 30  7
        Card  96: 97 67 10 32 57 41 94 26 74 43 | 67 32 18 55 93 61 21 29 69 83 39 92 58 23 41 59 87 30 50 25 10 94 52 71 43
        Card  97: 18 90  8 91 82 70 88 76 32 45 | 58 78 45 86 23 72 85 30 17 27 93 43 25 79 57 11 71 33 44 89 13 46  3 26 48
        Card  98: 99 17 45 67 83 78 76 93  5 52 | 32 23 76 40 96 56 26  9 29 63  1 33 15 75 85  5 82 70 99 30 41 58 16 42 86
        Card  99: 81 50 99 31 96 61 90  8 36 89 | 22 75  6 93  9 11 88 53 47 44 59 64 35 69 29 46  3 15 91 92 30 67 45 26 56
        Card 100: 14 92 52 90 63 31 25 23 47 75 | 92 52 39 94 90 66 36 68 35 63  3  5 75 86 50 30 48  2 34 64 45 17 95 53 93
        Card 101: 17 15 32 41 78 12 24 52 34 20 | 36 55 92 11 62 40 16 53 21 56 78 71 31 42 85  6 45 46 57 69 12 49 65 94 20
        Card 102: 95 72 92 52 48  6 12 90 89 11 | 78 79 33 36 18 60 54 35 48 47 44 29 70 91 59 99 72 22 88 75 83 20 68 15  2
        Card 103: 26 92 77 86 75 71 40 99 18 42 | 70 85 45 30 69 51 62  5 72 35 23 48 12  2 31  6 57  9 43 65 55 34 74 64 82
        Card 104: 58 47 91 85  1 98 77 97 11 59 | 41 60 46  2 62 94 30 17 48 38 65 58 61 45  7 81 14 33 13 66 49 36 35 83 16
        Card 105: 52 94 29 51 24 72 81 38 22 98 | 89 25  2 20 19 87 35 31 27 63 58 93 79 74 42 73  6 70 45 56 68 10 23 71  4
        Card 106: 53 31 52 12 77 13 57 75 83 33 | 32 21 47 79 18 85 20 31  1 81 17 57 99 36 11 68 29 15 83 38 72 13 10 44 45
        Card 107: 10 29 45 39 88 11 84 46 33 50 | 33 49 53 88 29 25 93 69  3 58  7 39 10 44 46 71 11 87 50 65 81 84  4 45 98
        Card 108: 36 89 17 61 91 20 40  8 82 47 | 45  3 43 62  8 57 20 30 40 99 61 36 38 82 16 90 17 87  9 89 91 47 66 86 68
        Card 109:  8 13 16 10 53 17 67 40 36 84 |  8 19 31 95 42 34  1 83 91 94 12 18 14 65 11 74 63 81 54 22 41 33 97  4 15
        Card 110: 55 85 53 30 52 59 96 36 33 21 | 30 96 65 49 85  9 55 78 90 37 68 59 48 51 21 14 50 67 10 52 33 36 70 57 53
        Card 111: 40 29 81 28 52 78  5 33 87 77 | 45 50 80 64 55 81 77 54 92 29 93  3 21 84 78 65 40 34 98 43 13  5 94 33 18
        Card 112: 91 31 32 89 65 14 81 46 80 17 | 51 89 58 46 80 29 50 14 91 66 57 98 31 82 39 17 99 81 13 55 43 32 77 18 65
        Card 113: 64  3 12 40 34 93 80 96 45 88 | 36 64 17 44 61 80 34 12 28 42 98 77 66 40 45 96 19 93  3 48 10 25 88 22 30
        Card 114: 36 43 48 47 24  7 71 13 72 75 | 48 60 50 52 64 85 45 68  8 55 62 91 71 97 98 24 70 20 43 80 76  7 18 96  1
        Card 115: 64 82 48 63 66 62 79 40 51 17 | 28 52 96 36 84 33 68 92 98 18 37 26 21 16 82  4 43  6  9 79 30 75 42 77 91
        Card 116: 84 70 36 38 87 33 64 45  8 91 | 94 74 91 84 60 36 10 33 45 55 37 62 90 31 19 44 25  8 78 38 87 18 64 70 20
        Card 117: 10 92 76 54 73 71 68 49 53 27 | 60 92 53 82  6 49 67 27  5 61  4 90 68 73 10 75 76 54 17 71 95 50 37 87 84
        Card 118: 10 68 81 55  1 91 64 75 92 39 | 76 94  8 44 86  7 78 15 41 25  4 51 66 53 36 14 59 69 74  5 88 33 45 83 17
        Card 119: 35 23 45 13  9 14 94  6 12 41 |  6 16 52 24 84 17 92 79 14 38 11 32 54 83 63 43 74 64 45 94 68 67 66 78 10
        Card 120: 68 33 17  3 24 21 79 44 84  6 | 85 10  6  5 52 32 45 46  8 24 86  2 29 27 12 11 40 69 64 21 13 68 33 93 63
        Card 121: 77 42 71 14 17 27  4 75 45  8 | 80 77 32 94  3 25 64 63 72 49 42 38 35 36 93 26 67 89 17 66 12 92 96 65 90
        Card 122: 94 91  9 21 25 86 37 13 93 96 | 41 14 54 30 68 50 12  6 76 91  8 95  3 53  5  2 98 56 90 38 21 39 20 45 16
        Card 123: 49 59 88 74 16 29 83 17 60 47 | 92  9 95 48 86 89 56  7 83 16 97 78 23 65 62 30 28 29 17  6 59 96 37 88 49
        Card 124: 68 64 89 27 10 36 12 38 87 46 | 35 12 29 70 80 69 18 38 31 97 53 33 56 66 36 73 58 60 44 61 94 63  2 22 17
        Card 125: 77 92 88 57  3 61 54 44 15 22 | 30 37  2 15 24 49 19 86 62 70 60 88 79 11  1 98 71 55 14 48 51 35 23 16 96
        Card 126: 76 29 81 69 87 79 10 49 62 31 | 95 22 29 33 69 91 46 40 78 92 34 52 65 98 99 28  2 35 73 86  4 94 31 25 88
        Card 127:  1 99 64 88 36 28 92 32 63  9 | 54 71 17 24 48 47 99 74 64 39 88 35 79 80 84  2 33 20 16 27 59 37  6 97 55
        Card 128: 52 58 71 21 38 88 83 79 39 10 | 31 43 84 97 85 48 50 17 82 22 18 75 24 36  5 23 63 95 94 87 91  8 37  7 54
        Card 129: 10 54 52  8 38 60 47 73 42 33 | 89 74 88 23 66 70 92 16 36 65 78 41 49 99 53  5 57 11 29 98 56 44 97 64 35
        Card 130: 35 26 36 87 14 85 88 54  5 53 | 73 42 64 66 27 59 98  8 68 70 47 67 81 25 40 93 91  6 77 20 99 31 50 43 61
        Card 131: 91  7 42 28 60 68 25 80 57 93 | 29 34 10 71 68 30  7 22 28 91 21 49 23 93 60 20 57 80 78 25 13 42 84 17 43
        Card 132: 36 98 95 88 82 61 75 30 43 54 | 44 64 42 70 77 99 84 80 59 53 37 18 26 56 97 33 31 50 15 41 52 58 63 93 65
        Card 133: 83 91 98 86 39 72 13 19 42 73 | 26 42 36  4  8 84 38 12 95 48 55 37 91 25 81 32 50 14 21 33 77 92 59  2 97
        Card 134:  1 13 47 70 17 85 19 63 38 92 | 59 99 23 55 72 92 44 40 53 68 88 14 69 65 35 32 28 79 75 74 34 27 87 77 47
        Card 135: 22 93 70 76 73 17 69 24 74 61 |  5 29 39 92 65 69 79 57 66 23 46 22 77  7 93 73 24 38 95  6 97 43 76 42 31
        Card 136: 23  4 75 77 41 61 88 73 50 82 | 59 73 86 29 27 58 82  2 69 84  4 34 49 12  6 80 46 19  7 92 72 88 38 39 63
        Card 137: 48 73 51  4 52 69 74 67 65 81 | 76 28  5 72 91 18 27 83 47 67 21 11 34 62 14 90 13 49 85 74 66 58 65  4 78
        Card 138: 55 32 80 57 86 78 54 90 97 41 | 30 14 80 39 32 55 54 11 82 87 68  2 99  3 47 78 40 69  5 77 53 50 56 86 74
        Card 139: 29 52 70 64 28 93 18 55 36 88 | 88 49 38 44 56 59 25 16 20 36 75 14 62 84  6 71 86 63 91 10 57 67 98 85 52
        Card 140: 65 34 63 69 67 18 50 40 49 82 | 40 21 18 65 87 49 15 32  3 82 95 41  4 42 29 93 88 57 56 62 12 68  2 27 67
        Card 141:  8 82 31 30  9 54 80 98 17 42 | 26  8  5 36 70 86 66 59 50 13 15  9 68  3 39 77 92  2 96 61 48 84 83 82 32
        Card 142: 72  5 32 33 45 44 21  3  2 27 | 22 24 30 55  9 81 56 72 97 76 92 10 19 98 63 57 88  7 18 32  5 61 29 49 12
        Card 143: 58 47 61 98 96 94 85 76 73 52 | 44 70 20 86 62 68 22 78 28 32 73 12 72 88 69 59 24 56 60  6 35 49 91 58 83
        Card 144: 17 14 55 39 13 61 42 84 57 52 | 69 43 76  8 83 92 38 36 91  2 24 74 10  9  7 45 79 23 89 34 28 31 40 18 37
        Card 145: 55 36  9 53 67 98 95 11 45  1 | 37 27 61 31 70 54 19 34 81 89 76 17 25 66  4 56 49 13 35 32 96  5 26  2 68
        Card 146: 91  9 31 61 30 48 11 81 37 42 | 60 99  4 49 50  5 90 32  6 58 18 63 45 25 82 74 96 35 43 69 14 62 46 15 41
        Card 147: 86 99 81 30 94 65 52 77 17 26 | 40 17 34 85 77 86 65  7 93 33  4 42 48 75 94 81 99 52 56 26 15 23 35 60 30
        Card 148: 96 30 61 70 40 69 55 19 13 11 | 94  7 48 88 43 69 62 29 38 30 31 56 50 58 81 52 46 55 97  3 40  1 33 18 23
        Card 149: 45 36 22 56 75 66 27 73  9 71 | 38 11 75 36 64 69 14 77 84 40 15 73 76 35 19 86 93 95 32  8 78  9 66 49 48
        Card 150: 81 99 76 52 43 11 72 20  8 24 |  9 49 45 72 81 25 55 76 77 99 95 12  8 24 74 20 11 16 52 43 51 21 46 14 13
        Card 151: 85 27 15 60 95 55 48  2 94  3 | 45 73 81 78 57 79  3 27 92 71 94 56 83 60 74  1 15 43 42 23 85  2 95 58 84
        Card 152: 70 52  7 99  4  8 85 74 56 12 | 44 79 62 12  4 99 74  2 85 52  9 70 58 55 54 56 95  8 13 64  7 75 63 22 82
        Card 153: 31  8 18 89 88 79 35 59 76 41 | 47 71 86 22 60 76 42 34 35  3 52 68 92 58 91 89 33  8 88 59  1 18 31 41 79
        Card 154: 68  9 55 95 61 25 59 32 40 58 | 12 29  2 34 23 94 72 78 66 48 64  5 52 96 20 91 57 92 85 37 87 75 73 90 43
        Card 155: 33 70 62 54 30 96 26  3 95 86 | 59 28  6 57 49 78 27 90 13 10 58 82 17 50 73 38 15 74 25 91 60 32 96 55 80
        Card 156: 80  8 47 81 20 82 38 54 30 22 | 51 97 20 38 49 45 22 17 39 64 35 54 81 80 28 90 68 30 47 86 41 53 42 34  8
        Card 157: 11 62 36 43 32 20 96 27 21  4 | 69 25 22 37 83 29 62 20 78 13 46 51  9 98 60 21 96 53 43  3 33 63 84 32 77
        Card 158: 75 49 89 67 22  1 92 73 60 41 | 62 49  7 96 60 22 75 13  1 21 29 64 41 71 83 58 12 34 57 52 19 76 67 40  3
        Card 159: 67 64 27 71 93 18 11 49 56 76 | 14 82 35 60 67 64 27 50 72 85 24 49 47 68 40 87 84 78 93 16 36 73 51 70 91
        Card 160: 74 20 49 81 99 35 53 68 50 88 | 32 76 60 21 93 45 11 44  9 23 34 30 57 51 18 88 14 81 75 99 52 19 73 72 12
        Card 161: 31  6 20 34  1 25 35 86 54 83 | 10 16 63 35  6 92 14 90 94 83 71 46 85 54 49 21 37 76 58 75 84 22 86 57 43
        Card 162: 71  2 91 45 18 67 32 35 70  4 | 80 33 18 86 13 25 41 28  1 74  5 51 63 27  7 77 43 40 66 60 30 52 55 45 96
        Card 163: 56 80  7 96 74 20 25 91 42 15 | 13  7 87 92  8 85 17 20 60 62 27 50 51 58 59 21 74 99 12 18 32 64  6 71 75
        Card 164:  4 62 31 56 10 21 45 51 59 28 | 21 74 82 81 59 55 37 88 56 11 22 63 31 99 86 26  5 16 57 83 24 97  1 42 60
        Card 165: 94 10 52 85 46 27 60 31 82 72 | 36 85 26  9 51 41 49 87 66 70 76 32 16 46 62 88 27 44 84 34 78  4 65 81 10
        Card 166:  8 14 12 94 28 37 96 13 36 70 | 67 69 85 45 29 71  7 26 97 91 11 48 65 22 12 81 60 34 77 25 80 10 38 24  8
        Card 167: 16  2 11 60 29 32 85 84 18 37 | 72 73 99 87 80 49 68  2 25 19 44 51 45 78 24 10 82 92 28 50 36 58  5 11 33
        Card 168: 88 20 78 53 45 93 64 86 62  7 | 55 16 24 32 82  9  1 91 81 34 94 61 89 76 40 58 88  2 23 25 49 44 83 42 21
        Card 169: 30 43 68 19 84 46 34 79 83 40 | 75 12 72 24 86 81  2 96 41 69  8  7 98 20 16 38 77 44 32 17 73 51 35 76 27
        Card 170: 36 65 99 63 11 80 98 57  2 75 | 63 44 48 60 89 80 16 30 82 85 69  5 98 36 47 43 37 78 75  7  2 79 40 55 90
        Card 171: 41 22 51 44 98 50 68 64 39 18 | 29 39 55 97 42 28 81 76 98 49 93 51 20  2 18 44 50 90 22 64 45 41 94 68 60
        Card 172: 45 51 90 61 87 12 43 42 26 30 | 30 22 90 14  5  8 42 43 61 87 50 29 34 26 53 93 95  1 51 58 91 45 18 12 78
        Card 173: 95 73 34 88  4 83 91 10  1 20 | 45 30 58 70 65 47 74 99 25 32  6  3 94 97 76 11 50 21 36 18 38  7 55 60 95
        Card 174: 12 23 97  6 85 48 73  1 78 46 | 78 39 29 27  6 73 46 22 75 95 42 12 23 93 89 85 20  1 97 72 48 58 24 70 91
        Card 175: 88 37 59 56 86 58 64 51 35 47 | 93 82 64 79 88 28 51 13 23 59 71 47 37 83 70 25 35 86 58 56 61 67 78 62 50
        Card 176: 86 97 60 68 91 83 55 56 75 16 | 68 10 99 70 61 43 50  6 59 75  4 97 34 91 44 71 67 93 69 38 73 48 33 17 83
        Card 177: 41 33 14 32 99 37 64 21 36 56 | 41 14 24 64 74 43 99 36 33 89 17 71 49 21 37 57 32 85 72 47  8 20  5 28 56
        Card 178: 99 62 41 81 76 89 17 83 43 40 | 44 38 51 82 98 49 65 85 20 17 72  5 28 96 97 46 10  4 34  7 55 15 47 29 36
        Card 179: 67 25 97 77 59 39 10 51 95 48 | 98 93 29 51 97 84 95 50 67 59 10 39 44 20 48 60 25 96 12 89 21 77 52 76 47
        Card 180: 12 42 91 75 77 56 92 58 51 99 | 38 66 35 19 51 90 73  3 49 81 92 10 77 48 83 58 78 99 54 72 29 47 69 34 56
        Card 181: 15 26 91 99 68 10 89 79 80 98 | 33 78  6 84 91 99 42 66 26 15 89 39 80 29 98 10 53 17 56 31 59 35 51 79 68
        Card 182: 75  8 59 52 93 56 14 29 18 84 | 68 14 10 56  1 78 11 84 69 36 13 93 21  8 65 31 44 18 50 53  2  4 38 88 75
        Card 183: 75 72 67 62 88 12 44 69  3 64 | 62 14 70 41 95 11  5 15 67 35 79 46 49 93 64  2 18 34 21 94 44  6 76 10 72
        Card 184: 86 33  8 63 89 57 81 61 21  1 | 49 80 47 26 39 40 67 25 90 64 24 91 37 95 28  5 15 50 66 73 19 33  9 97 54
        Card 185: 61 96  4 67 63 22 49 26  6 45 |  1 48 72 52 91  5 77  6 26 57 33 75 71 21 22 73 66 74 54 11 65 19 37 67  4
        Card 186: 19 10 50 72 54 85 38 31 28 15 | 64 20 30 78 74 31 83 46 43 12 28 36 84 11 66 96 75  7 76 93  2 18 42 38 86
        Card 187: 37 68 16 30 95 54 73 20 43 32 |  7  8 62 54 26 33 24 43 57 99 31 23 36  3 15 45 55 75 37 95 29 27  5 46 67
        Card 188: 33 20 43 74 98 62 11 84 97 69 | 69 92 30 64 72  2 20 46 31 88 43 50 79  1 53  9 17 81 57 65 67 28 74 90 34
        Card 189: 61 87 63 36 35 72 26 28  7 81 |  6 66 52 40 56 80 92 58 13 10 69 93 98 99 60 88 39 49  9 42 15 33 68  3 23
        Card 190: 78 91 72 67 59 99 42 32  1 60 | 47 85 79 17 22 28 68 18 21 45 87 92  9  7 46  4 34 70 29 40 69 74 62 71  5
        Card 191: 16 48 31 54 96 68 61  8 17 66 | 46 66 88 70  4 77 99 22 15 59 74  2  3  1 64 26 83 10 78 23 82 29 63 65 92
        Card 192: 67 82 32 99 43 58 18 51 57 53 |  7 33 49 21 75 62 23 63 87 20 54 88  3 35 97 17 89 96 91 80 10 22 95  1 48
        Card 193: 26 51 55 42 14 31 58 68  8 99 | 19 90 31 26  8 51 16 99 68 79 64 58  3 39 71 83 27 25 15 45 72 59 55 14 95
        Card 194: 80 66 34 35  6 61 70 16 17 89 | 69 40 76 34 56 72 97 48 59 74 18 62 22 28  4 67 75 35 29 24 31 53 58 11 16
        Card 195: 95 17 24 31 47 66 68 97 94 73 | 19 62 61 53 48 24 78 60 26 71 59 95 79 47 18 64 44  1 83  8  2 34 21 69 81
        Card 196: 46 48 79 80 21 12  6 74 75 36 |  5 26 16 89  2  8 92  3 61 30 42 99 12 41  4 35 10 40 84 53 82 22 73 19 20
        Card 197:  7 77 19 60 25 30  6  1 35 27 | 49 79 83 32  6 38 77  5 10 48 25 78 19  4 51 12  1  7 68 23 56 60 11 57 27
        Card 198: 49 36 93 56 47 94 23 10 45 12 | 55 49 93 12 56 62 77 30 51 94 36  7 39  5 58 18 26 81 23 47 91  1 45 10 84
        Card 199: 34 24 33 74 17 76 57 77 44 56 | 80 78 15  5 22 44 33 13 92 35  3 10 34  7 30 12 16 75 76 31 99 11 61 50 45
        Card 200:  5 39 53 88 71 70 89 92 64 13 |  1 68 12 39 88 57 92 61 23 40 45 30  5 53 71  3 96 67 54 14 89 70 97 64 51
        Card 201:  7 67 93 60  6 36 71 31 81 89 | 38 46 14 11 68 41  4 37 63 60 71 78 97 29 66 57 49 27 39 76  6  7 36 59 99
        Card 202: 94 24 81 14 27 51 34 97  6 23 | 31 10 81 59 51 42 94  2 23 20 43 14 96 68 97 49 24 33 34 87 38 60 82 66 27
        Card 203: 37 24 75 91 72 29 33 28 94 84 | 72  7 94 73 36 11 41 48 96  1 37 25 28  8 29 34 18 87 76 66 33 98 59 24 35
        Card 204: 53 42 58 63  3 49 77 25 36 66 | 62 46  7  2 42 36 63 86  1 15  3 30  8 77  9  5 70 73 97 93 55  6 28 39 91
        Card 205:  2 21 51 89 80 42 10 83 36 33 | 12 97 24 23 30 69 39 77 20 32 31 47  8 28 42 34 50 21 10 76 91 45 98 29 73
        Card 206: 23 81 70 32 76 55 85 60 83 42 |  6 25 29 21 20 45 66 36 10 52 91 46 59 64 53 14 63 98 35 30 82 93 65 87 58
        Card 207: 67 88 35  9 86 83 66 72 85  1 | 78 94 65 31 95 41 43 71  9 80 24 51 11  8 16 61 50 64 75 66 30 39 37 15 86
        Card 208: 41 54 96 97 65 57 84 28 67 77 | 83 41 80 98 73 86 55  4 64 48 57 35 28 59 54 79 58 10 40 19  2 81 72  3 30
        Card 209: 74  3 40 51 39 68 60 85 63 11 | 75 14 83 78 28 58 86 25 45 43 79 71 23 94 76 89 84 15 32 87 72 21 26 65 50
        Card 210: 10 13 69 85 17 52 50 98 95 41 | 90 74 94 71 10 84 67  1 32 31 87 64 62 27 34 75 80  3 60 58 82 20 28 17 92
        Card 211: 61 30 95 15 73 81 69 52 26  3 | 59  8 35 56 83  5 41 71 45  4 91 73 51 93 90 89 72 28 98  9  2 18 40 47 16
        Card 212: 98 19 95 93 62 76 36 70  1 55 |  5 22 21 58 75 85 31 67 49 73 47 90 34 24 99 37 50 11 23 48 96 87  6 29 91
  recorded_at: Sun, 16 Mar 2025 02:36:11 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/05_if_you_give_a_seed_a_fertilizer.rb?token=ACG6TJ5FJVHFICRBBM73ULTH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '4384'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"6fbdc46d1b0e472eb35e79e48f7da9dcc4b0fc73f99637e1e9734cc7c3519237"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - BE39:256114:2ED4E8:3CC540:67D63919
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:11 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200049-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092571.387162,VS0,VE295
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 40b57492bcbcfecb1cb792b49456cbbc78366ccb
      expires:
      - Sun, 16 Mar 2025 02:41:11 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        seeds, *maps = DATA.read.split($/*2)

        seeds = seeds.split[1..].map(&:to_i)
        maps = maps.map { |m| m.split[2..].map(&:to_i).each_slice(3).map { [_2.._2 + _3 - 1, _1 - _2] } }

        p maps.reduce(seeds) { |seeds, map| seeds.map { |s| s + map.find { |r, _| r === s }&.[](1).to_i } }.min

        seeds = seeds.each_slice(2).map { _1.._1 + _2 - 1 }

        p maps.reduce(seeds) { |seeds, map|
          seeds.flat_map { |s|
            m = map.filter_map { |r, d| [[s.min, r.min].max..[s.max, r.max].min, d] if s.min <= r.max && r.min <= s.max }
            if m.empty?
              s
            else
              a = m.map(&:first).map(&:min).min
              b = m.map(&:first).map(&:max).max
              r = m.map { |r, d| r.min + d .. r.max + d }
              r << (s.min..a - 1) if s.min < a
              r << (b + 1..s.max) if b < s.max
              r
            end
          }
        }.map(&:min).min

        __END__
        seeds: 487758422 524336848 2531594804 27107767 1343486056 124327551 1117929819 93097070 3305050822 442320425 2324984130 87604424 4216329536 45038934 1482842780 224610898 115202033 371332058 2845474954 192579859

        seed-to-soil map:
        152560994 173671324 63296280
        22185606 1527272669 123700133
        1331635416 297391996 25501160
        2532562923 236967604 60424392
        145885739 854580877 6675255
        696074404 427174664 330582271
        0 1407203152 22185606
        1174684019 152310608 21360716
        2679050525 3516671293 482421092
        1227353908 322893156 104281508
        1077860077 757756935 96823942
        3161471617 3999092385 22763615
        1509447184 1650972802 82059456
        4170512486 2802241718 1263617
        1196044735 1495963496 31309173
        1357136576 0 152310608
        4171776103 2679050525 123191193
        1731875772 1733032258 319590386
        282432012 1001625264 405577888
        215857274 1429388758 66574738
        1026656675 2541783913 51203402
        1591506640 861256132 140369132
        688009900 2052622644 8064504
        3457346528 2803505335 713165958
        3184235232 4021856000 273111296
        2051466158 2060687148 481096765

        soil-to-fertilizer map:
        2587123207 1612631011 14556918
        425896400 1627187929 180219453
        974395525 3228073255 181091940
        606115853 2482605187 15274968
        621390821 1843957593 329096619
        4269010275 3749182981 25957021
        2601680125 1807407382 36550211
        3749182981 3775140002 91697225
        3337986166 2411426158 71179029
        2306503017 631361705 276943999
        0 205465305 425896400
        950487440 181557220 23908085
        1155487465 1188132368 424498643
        1579986108 2497880155 726516909
        2583447016 3224397064 3676191
        3840880206 3866837227 428130069
        3099614220 2173054212 238371946
        2918057000 0 181557220
        2638230336 908305704 279826664

        fertilizer-to-water map:
        0 226390191 111676682
        342717440 10141562 176981703
        3507713259 629378619 187481170
        3695194429 3739990160 60489319
        2747106431 4155961766 11528550
        2120906094 2661985654 77106422
        3983043532 1233406588 239832885
        3045388563 4287081612 7885684
        529840705 187123265 39266926
        2198012516 1102191084 16615097
        3053274247 4167490316 104130064
        2564366436 2756374717 129809025
        3331241613 816859789 87383675
        3418625288 3536806097 36187146
        1239632010 3393454292 143351805
        1147966039 1776147938 91665971
        1382983815 2230578660 82475007
        4222876417 1045170068 57021016
        3455914127 2313053667 4640764
        2835800762 3800479479 42590884
        4279897433 1473239473 15069863
        3780709534 2342720217 202333998
        1753297424 3902953503 253008263
        1465458822 1488309336 287838602
        3454812434 2588893134 1101693
        3287402694 2545054215 43838919
        2704024450 1002088087 43081981
        629378619 2589994827 71990827
        3189558071 904243464 97844623
        2214627613 2886183742 264407413
        2006305687 1118806181 114600407
        3460554891 1867813909 47158368
        3755683748 2317694431 25025786
        111676682 338066873 231040758
        519699143 0 10141562
        2479035026 3313735125 69870178
        2548905204 4271620380 15461232
        2775917622 3843070363 59883140
        3157404311 2198424900 32153760
        864513416 1914972277 283452623
        2758634981 2739092076 17282641
        701369446 3150591155 163143970
        2878391646 3572993243 166996917
        2694175461 3383605303 9848989

        water-to-light map:
        1222332482 2306154207 322881400
        3721269109 3329751112 30895612
        4157109606 3191893422 137857690
        2602036554 3676681423 255279159
        2293973174 3078247260 113646162
        1208052724 2246358310 14279758
        1835200232 1597610395 302070784
        3118371905 1208052724 389557671
        2137271016 3519979265 156702158
        2501933666 1952285487 54586749
        3753874345 1899681179 52604308
        3806478653 3931960582 7636192
        3973340148 2006872236 24436917
        3814114845 2629035607 159225303
        3507929576 2031309153 213339533
        3752164721 2244648686 1709624
        2857315713 3939596774 261056192
        3997777065 3360646724 159332541
        2556520415 2260638068 45516139
        2407619336 4200652966 94314330
        1545213882 2788260910 289986350

        light-to-temperature map:
        40645637 589707204 89929230
        2331703372 3634092968 247989827
        375013050 880330876 388603146
        959059361 861524497 18806379
        3081535248 2703807387 671456921
        2080450790 1678532701 100545991
        1520717011 1522300302 156232399
        3801827392 4285326304 9640992
        2834731556 1990942492 115059472
        2949791028 2566169187 71005535
        3020796563 4224587619 60738685
        4159346802 1855321998 135620494
        977865740 0 297257755
        3811468384 3375264308 157802817
        2304295289 1779078692 27408083
        3752992169 1806486775 48835223
        2579693199 3882082795 255038357
        130574867 328095764 236983298
        4081903724 3533067125 77443078
        367558165 310812857 7454885
        3969271201 3610510203 23582765
        4080320433 1520717011 1583291
        777171298 679636434 181888063
        2180996781 2106001964 56665843
        3992853966 4137121152 87466467
        0 1268934022 6189473
        30817615 318267742 9828022
        1676949410 2162667807 403501380
        763616196 297257755 13555102
        6189473 565079062 24628142
        2237662624 2637174722 66632665

        temperature-to-humidity map:
        3854764317 3086190444 332386294
        2110554705 1096342109 65650849
        3236082645 1211923153 20175736
        846106827 1853452836 60731419
        596073066 1972015961 100470927
        1202254149 2647779239 280062599
        2176205554 2107199879 422980149
        2943801812 432921932 58618218
        1824616452 1161992958 3317671
        1201112206 2106057936 1141943
        1840640266 1631373972 178403432
        2767591984 62542954 155027747
        2743880612 491540150 8409669
        62542954 1273100182 24571446
        4208015516 3772661112 86951780
        3477752908 217570701 215351231
        2019043698 3681150105 91511007
        1482316748 4027597725 172205397
        766244356 4199803122 79862471
        950513678 665972626 23438579
        89279871 1232098889 41001293
        1654522145 1914184255 36130017
        3002420030 3660808941 20341164
        452765307 1525178112 98766078
        551531385 840194947 44541681
        1827934123 2072486888 12706143
        87114400 3859612892 2165471
        1091551468 3873351076 109560738
        2714852730 884736628 29027882
        906838246 1809777404 43675432
        760232399 1297671628 6011957
        696543993 3861778363 11572713
        3693104139 633914109 32058517
        1690652162 499949819 133964290
        151982853 3418576738 142433848
        2922619731 689411205 21182081
        2599185703 1165310629 46612524
        2752290281 4279665593 15301703
        3022761194 913764510 182577599
        2645798227 3561010586 69054503
        130281164 1950314272 21701689
        973952257 2530180028 117599211
        715546488 3982911814 44685911
        4187150611 2085193031 20864905
        3256258381 1303683585 221494527
        3725162656 710593286 129601661
        708116706 1623944190 7429782
        3205338793 3630065089 30743852
        294416701 2927841838 158348606

        humidity-to-location map:
        3745579304 2724582328 81388084
        2201043082 981698567 150857305
        456470998 689872919 41258774
        2351900387 2312761976 47825019
        497729772 314502888 115122928
        4036836228 4279991461 14975835
        784121118 3255986437 5687937
        612852700 0 118278993
        3894168411 842107405 27168107
        3127730376 4061803810 218187651
        1230572305 1958697503 125808488
        304425981 163566931 106757079
        789809055 3790646012 241507252
        1777374448 1871672054 39148062
        1816522510 1504159194 367512860
        235721965 621168903 68704016
        4051812063 1480547431 14406303
        3826967388 1228960483 58471320
        411183060 118278993 45287938
        3921336518 869275512 103693352
        4025029870 2304659906 8102070
        2838210137 1132555872 96404611
        2934614748 1287431803 193115628
        1414367080 3422182046 363007368
        3345918027 1494953734 9205460
        2184035370 2805970412 17007712
        2631131158 2088210279 207078979
        1356380793 784121118 57986287
        2399725406 2493176576 231405752
        1031316307 3261674374 160507672
        44178878 429625816 191543087
        4195166765 3165556554 90429883
        4285596648 2295289258 9370648
        3403000874 2822978124 342578430
        1191823979 3785189414 5456598
        1197280577 2459884848 33291728
        4066218366 4032153264 29650546
        3355123487 1910820116 47877387
        3885438708 972968864 8729703
        0 270324010 44178878
        4095868912 2360586995 99297853
        4033131940 2084505991 3704288
  recorded_at: Sun, 16 Mar 2025 02:36:11 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/06_wait_for_it.rb?token=ACG6TJ5O5NQT77ANUBIXXJTH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '214'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"09203ff9a937326456aca788d7853145177bf60ff5ab9d4a29e7056bd6b0fd9d"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 26EE:25F6AA:EFC5A0:131DE47:67D6391B
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:11 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100064-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092572.822864,VS0,VE87
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 80628b37ef2bf1ea97e5f5a6b2b5cb5fe842969e
      expires:
      - Sun, 16 Mar 2025 02:41:11 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        times, distances = DATA.map { _1.split[1..].map &:to_i }

        p times.size.times.map { |i| (1...times[i]).count { _1 * (times[i] - _1) > distances[i] } }.reduce :*

        time, distance = [times, distances].map { _1.join.to_i }

        p (1..time).count { _1 * (time - _1) > distance }

        __END__
        Time:        56     71     79     99
        Distance:   334   1135   1350   2430
  recorded_at: Sun, 16 Mar 2025 02:36:11 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/07_camel_cards.rb?token=ACG6TJ6AWLXKCDLFYPBR2K3H2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '5795'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"d79536aedbceb7c29b903364ffaee7600ac73c25f502de8a42bb28f4d35c1166"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 2366:BA713:F9497:1614E4:67D63918
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:12 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100046-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092572.048855,VS0,VE461
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - b006ca5675ad9dd39d63026eb5fa612f43c24d52
      expires:
      - Sun, 16 Mar 2025 02:41:12 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        S = "23456789TJQKA"
        J = S.index ?J

        hjb = DATA.map { |l|
          c, b = l.split
          [c.chars.map { S.index _1 }, c.count(?J), b.to_i]
        }

        def s(r, j)
          s = r.tally.values.sort.reverse + [0]
          s[0] += j
          s
        end

        def w(h) = h.each.with_index(1).sum { |(_, _, b), i| b * i }

        p w hjb.sort_by { |h, _, _| [s(h, 0), h] }
        p w hjb.sort_by { |h, j, _| [s(h - [J], j), h.map { _1 == J ? -1 : _1 }] }

        __END__
        Q4QKK 465
        28555 580
        JJQK2 602
        84448 722
        7QQ7Q 734
        KKKAK 278
        JQ274 574
        9J242 805
        A33AK 619
        TAK9T 659
        34QK8 514
        23273 199
        T8TT8 318
        333TT 101
        5A955 482
        TT5KJ 784
        59K37 126
        T59TQ 890
        3K549 806
        37QQ3 655
        TJ5T4 958
        8Q7KQ 148
        888AT 868
        4KKKA 67
        QQQ8Q 520
        555Q5 325
        8T4K2 132
        K32Q5 399
        QQ455 937
        55QQQ 592
        63T89 220
        434Q4 254
        88KK8 944
        79799 793
        KJKKK 725
        99J59 70
        73777 788
        5892A 641
        J8JJJ 26
        76676 336
        55T5T 354
        5755T 431
        22299 746
        82462 803
        3J63J 408
        95999 711
        Q59K6 511
        QKJK4 977
        QQKK9 606
        QQ9Q9 47
        A2TQ5 214
        68A88 281
        TQA64 453
        T4633 648
        95959 53
        23377 293
        39993 844
        8QTT8 974
        95655 10
        AAQ4Q 773
        69243 213
        44244 953
        6297T 850
        KAAK4 443
        Q77J2 865
        J4A3A 651
        3Q7Q7 163
        9A28T 129
        J2277 68
        AAAAT 568
        T33TT 907
        KA3Q9 942
        67787 21
        9TAJA 751
        K6KKK 485
        5T4J5 900
        3TKTK 207
        4KQQ4 961
        TTQ4T 613
        K6TQ4 906
        A8K8Q 965
        63QJ5 807
        597Q7 634
        64664 723
        63479 505
        JQQ7Q 870
        JT888 185
        7JTQ8 650
        9888J 7
        6646T 405
        9J66J 140
        2JT22 194
        K5KKK 361
        T7T79 274
        33535 758
        27638 314
        99699 49
        K2QQQ 351
        2K72K 92
        J63KK 702
        J7KT5 795
        J6KJ5 770
        97K99 928
        K376Q 139
        882AT 34
        KK8K8 995
        98AQA 894
        5928Q 364
        AA6A5 633
        T96Q4 249
        96696 567
        AQ9A5 855
        Q6Q44 335
        6K2A8 763
        7665Q 295
        J7364 89
        88848 875
        285K3 623
        6932T 735
        999T6 484
        77888 903
        J8888 261
        324A2 610
        Q6Q53 662
        83QTQ 499
        J6666 256
        5Q5Q2 507
        T6A4K 787
        J5AT5 210
        AQ39Q 400
        8K6K2 331
        J3Q44 280
        KK8KK 926
        66784 923
        87K88 142
        7J235 445
        4QQ44 676
        84KKK 30
        65J56 169
        3AA3A 631
        QTQ4Q 760
        A5A5J 342
        5QT5T 674
        9K549 776
        T2232 343
        96Q66 616
        8J899 597
        J76A6 116
        77388 321
        53333 433
        KK797 394
        9J53Q 545
        5K9KK 985
        66868 874
        J6T63 654
        9A333 696
        678JJ 738
        AATAT 812
        AAT6J 801
        JTTQK 441
        75757 993
        JQ4QQ 523
        222JJ 671
        Q5552 459
        944J9 133
        69A8A 588
        A75K6 872
        KKK44 661
        2K43Q 83
        3KKKK 350
        47773 887
        35858 710
        K65T9 731
        ATQ8J 496
        8K484 397
        TT9QT 157
        2J332 630
        5K3K4 743
        68J26 135
        555J5 975
        K4KQT 452
        QAAAA 884
        8J4J9 398
        4TJ77 679
        55585 93
        J9A4T 182
        42942 503
        5JK2A 151
        2T2K7 672
        4Q2T5 563
        22422 291
        28868 947
        KT7KK 759
        JQQ88 31
        8273K 54
        55588 418
        5K28K 849
        2Q279 896
        65995 590
        723A4 598
        6KA74 127
        KK333 284
        44696 714
        777Q7 277
        K469A 673
        433QJ 862
        A4442 512
        66624 665
        8AA88 536
        7777J 268
        A7575 586
        7K42Q 789
        6A32A 159
        T97Q6 218
        KJA5J 108
        363AJ 510
        4JAT7 960
        88898 534
        2Q2J7 383
        57A9T 852
        TJ9TQ 750
        9T748 775
        QTA83 13
        4KK5K 701
        Q8482 72
        66655 109
        6TTTT 381
        A33JA 779
        62AAA 968
        3KA2Q 924
        2J54A 444
        6A285 886
        63697 595
        459QA 134
        JK5KQ 41
        34628 231
        94544 446
        K6JK6 824
        KKTT6 815
        22229 327
        88TT8 916
        K6J56 2
        T7A73 945
        2J222 555
        727T2 106
        K5664 390
        KJ77Q 326
        555A5 272
        55757 943
        33447 128
        4A37Q 462
        7JJ2T 609
        5T2T5 920
        49932 219
        9J297 221
        QK2J2 332
        J23KK 745
        8A5K4 854
        374K5 371
        35Q7T 663
        666T6 721
        9K9Q3 842
        J55J2 73
        AT6AA 969
        2TAQK 689
        KQ9QQ 486
        99KJ9 996
        4894Q 774
        T9J8Q 61
        TK6T6 488
        7777K 226
        77767 922
        K5QK8 12
        45444 740
        4A448 752
        A8793 426
        3393J 771
        7JTTT 830
        434J9 938
        66656 470
        6JJ66 333
        444J4 170
        33JJJ 800
        Q2K79 467
        254JK 757
        9994Q 186
        94499 804
        J86K6 908
        J8K8K 946
        4276T 164
        K9QAA 695
        779AT 519
        7K463 660
        55454 208
        KK8K9 339
        QJJK9 146
        6K3J6 538
        38T79 732
        6QQ6Q 474
        Q8J4K 299
        99T99 475
        3JK42 87
        T8Q8J 107
        Q4QQK 682
        3J333 811
        54662 744
        JJ4J2 972
        2QA87 473
        249TK 51
        65JA9 251
        AAA6A 871
        QTT73 222
        44J45 670
        47747 3
        2T299 604
        9A922 122
        4T428 359
        4744T 814
        944QQ 532
        28JA8 522
        JJJJJ 230
        88432 910
        K6TAJ 315
        K7AA3 544
        6729J 600
        95QQQ 300
        T7J77 976
        J448T 587
        72J58 412
        T8888 168
        83333 450
        98Q9T 298
        5249Q 352
        58656 558
        347JA 579
        27222 893
        4QK82 131
        5TTT8 994
        43494 454
        474TT 458
        22338 728
        77AJ8 562
        86633 410
        Q7J5A 501
        955J2 242
        QQQ79 835
        ATAQT 525
        A5AAA 178
        39287 289
        KTKQK 845
        364K2 449
        AK3A2 259
        627J2 138
        K8K82 285
        66669 794
        6Q2TA 911
        TTJTJ 24
        KKK33 997
        QKKQK 372
        3K7QQ 264
        62994 175
        3T244 227
        Q77K7 14
        88568 44
        8JT98 404
        7277Q 250
        66555 529
        2KJK2 709
        94T85 263
        T6652 313
        53555 113
        J5T88 432
        Q6949 624
        TKTA8 202
        96667 748
        4AAAA 491
        4A4K4 329
        6252K 998
        4Q269 347
        Q3QQ3 95
        488J6 262
        99J9Q 100
        82T77 591
        35T22 362
        Q7KQQ 691
        A56A5 22
        649Q4 898
        53J22 301
        J4Q5Q 569
        585QJ 81
        82528 495
        K6TTT 32
        Q2222 737
        2Q5T5 990
        Q888Q 341
        8Q866 416
        4449A 508
        88KQQ 819
        AA274 879
        K8Q88 160
        26TK5 237
        JJQQQ 492
        K52QA 490
        JJ974 223
        7T846 136
        32236 820
        9AJ9A 239
        J6QQQ 380
        97Q94 970
        56552 856
        6QQTQ 905
        JJ5AA 837
        K9TT9 103
        8A9TA 267
        J8AA4 196
        2ATAQ 897
        JQTJQ 279
        TTT2T 699
        T2TJ2 966
        JJ5J5 294
        J4K4K 60
        63KKK 768
        AAAA7 38
        K4J44 502
        23493 888
        666KK 831
        TAQ58 434
        AK75T 319
        565A8 769
        58K88 705
        97579 506
        TTQTT 120
        5QQJ8 77
        55KJ5 328
        Q6T3T 375
        KQ9T6 476
        9K777 305
        TT5TT 581
        5557K 955
        69869 91
        Q6925 367
        9624J 530
        9A9A2 550
        5854J 71
        T588T 857
        74QA4 1
        5TJ83 956
        T797J 413
        T6534 935
        T93T3 162
        7A488 859
        737A3 19
        72877 195
        3QAAA 78
        44449 927
        77792 420
        43227 537
        K986T 84
        3J444 754
        83AA5 436
        89T55 553
        86JT6 603
        J22JT 461
        KQ8QQ 309
        82292 43
        J6QQA 211
        T986J 62
        38383 382
        4AQ6Q 614
        2223J 42
        8T36A 435
        JTTAT 66
        44QJQ 829
        9TTTT 236
        JAJ4A 959
        4QJ4J 621
        34333 235
        Q2Q79 245
        Q2A22 388
        QQ44Q 635
        58A54 539
        26A87 440
        727A9 149
        J33Q6 406
        6479T 627
        KK66K 419
        3333T 664
        KK9KK 317
        J2Q2Q 306
        K5K5K 201
        44224 63
        6644J 322
        QQQ3J 96
        A4AK4 212
        K46JQ 557
        J656J 608
        JAJAA 584
        K5KK8 615
        AAAA2 889
        T6T66 478
        QQTJ3 494
        5QQ75 16
        492QJ 909
        JKK9K 411
        346KQ 144
        J27A7 403
        88QQ4 707
        T6579 866
        TT669 358
        TKT84 847
        QAJQ4 848
        9J9JA 229
        3443A 479
        455J3 154
        43QQ3 762
        A9449 246
        JK666 417
        5588J 448
        5KAQ3 427
        62A47 58
        K4Q74 632
        9999Q 468
        37537 785
        8KT74 166
        K93Q2 428
        2QQ5Q 688
        A6A22 873
        5986A 424
        74T36 677
        J3958 46
        4J4Q4 451
        64654 863
        58TK3 409
        JK6KJ 348
        Q8QQJ 666
        QQQ53 35
        JAK28 839
        6KKJK 713
        23567 792
        QQ5QQ 147
        J9447 582
        77QQ7 963
        4T84K 204
        44747 583
        K858Q 307
        76J5A 542
        A57Q8 180
        22262 252
        7J689 105
        44844 836
        76674 23
        7A22A 29
        7JT56 570
        7857J 456
        9Q685 215
        83878 190
        277A7 172
        T5T5T 500
        64464 477
        4T445 65
        A43Q9 152
        JT5J7 310
        TTK55 715
        7K85J 365
        4A4AA 98
        Q68QJ 952
        6T266 929
        2442T 629
        6A776 119
        Q57K2 369
        555JJ 187
        525TJ 438
        Q99K7 980
        Q9888 657
        85854 967
        QK85T 930
        332A3 667
        QJQQQ 243
        AAAA3 121
        44TQT 270
        K35T6 637
        TJ7Q7 559
        TJT85 797
        J6J25 853
        J6348 593
        7T6T7 498
        J222Q 877
        Q4QQQ 112
        Q93KQ 117
        48934 258
        44465 817
        AA66A 253
        TJTT2 167
        K67QK 384
        T2292 430
        77337 344
        T99J8 192
        334J4 982
        2J939 833
        23229 353
        TJ6Q5 912
        36T8K 755
        2822J 535
        48446 5
        A8QA5 988
        4J464 130
        K9K88 694
        A4777 266
        888T9 17
        33QQ3 639
        67868 643
        T78T7 248
        6382Q 577
        444Q7 596
        2222K 981
        99KK4 288
        TJ4T4 575
        QTJTT 99
        33QAA 97
        525J5 189
        24QQ3 864
        8465J 936
        T48KA 571
        JT9TT 255
        6Q6J8 517
        24999 387
        TKAQJ 687
        93944 914
        JT4Q3 158
        T76QT 481
        48T9Q 225
        JJA6J 141
        95555 549
        4JK37 686
        62662 197
        68QA7 566
        J3742 747
        J8K9K 287
        QJ4J3 638
        AAKKK 607
        72A6T 948
        JK2KK 878
        67337 978
        TT8TT 895
        A8A8A 181
        4K977 939
        K44AQ 102
        5T264 33
        54TQK 183
        6K666 340
        KT9KK 366
        3QQ9Q 742
        5K829 311
        2KK77 576
        67A9Q 589
        J4A5Q 712
        8ATTJ 345
        KK339 9
        774J9 698
        69996 652
        KQQKQ 548
        43339 188
        J6585 681
        62253 979
        99J47 8
        32522 425
        K43KQ 115
        33Q33 483
        55AA5 636
        48Q54 973
        Q55QJ 184
        9TTQ9 203
        3J733 546
        339JJ 556
        J62J2 48
        JT4Q5 780
        99AA9 25
        KKJQJ 275
        75A42 273
        QKTJ5 232
        4JJ4T 808
        7647K 786
        22522 876
        76737 599
        J8858 217
        9Q45T 153
        8JT2K 493
        26634 913
        7QJTA 302
        KK998 645
        49TT8 840
        T22T6 904
        9AK2A 899
        3TQ7J 304
        3A48Q 376
        33TTJ 720
        246A6 983
        9TJ32 224
        35343 605
        J4AQA 269
        332T8 692
        KK9K9 949
        87KJ8 917
        56KK8 303
        76K52 933
        AAJA2 82
        38339 915
        J2299 391
        677J7 826
        A22TA 316
        69J6T 123
        9JJ99 437
        J5624 730
        Q7QT7 292
        5Q9QJ 547
        K876J 541
        7JJ44 377
        K2435 901
        TK64T 228
        8878J 902
        99989 193
        222TT 708
        QQ88Q 813
        59294 668
        TKTKJ 50
        KQ893 932
        3557T 265
        7A396 110
        Q8888 85
        36663 447
        87A99 818
        7442J 37
        TQ4T5 622
        45J7J 20
        Q6697 414
        2226Q 892
        Q7QQQ 233
        5J395 429
        22KJ6 986
        662K6 94
        J7398 783
        AQJA8 843
        78K8K 716
        Q4QTK 810
        J54J5 885
        32223 238
        97776 594
        33693 69
        47T2Q 286
        2QA52 781
        Q4J22 761
        99A6A 685
        9A999 11
        444Q4 200
        TAK95 56
        7Q363 528
        KA99J 809
        QQTQQ 991
        2KAK2 4
        599K8 28
        TT27T 717
        22525 165
        78222 349
        A6667 838
        3Q39T 393
        87868 741
        8AAJK 513
        TQ555 543
        79777 925
        866J6 560
        72788 931
        23TTT 374
        AA66T 772
        K75K4 356
        J6JKJ 509
        K3K4J 891
        44443 276
        K8A88 611
        8483A 753
        KKKJJ 312
        AA6JA 463
        K9TKT 704
        JTT66 296
        6A987 869
        22232 951
        7K9A7 385
        K2223 987
        Q24AJ 554
        766J8 240
        8Q9JA 114
        7AKJ9 736
        QQ9QQ 851
        28AA2 124
        3939K 179
        3K284 324
        94K3J 964
        63333 883
        89J45 143
        8J2T2 471
        TT5QK 719
        JKQKQ 823
        A2898 407
        4AK94 565
        K889J 260
        8KQQT 950
        59K59 104
        AA7TA 487
        36666 308
        T64TJ 573
        6864J 626
        6Q4QQ 703
        AAQA4 75
        9KJ9Q 649
        26J22 257
        99889 989
        KJTTT 881
        83TK9 79
        82828 765
        KKQK6 552
        J5JQQ 683
        A9A98 457
        KKK2K 290
        49999 464
        64QTJ 706
        88Q7Q 55
        23233 118
        37333 739
        QTQTT 378
        AT8T7 767
        A687A 421
        9A63T 15
        325J9 749
        K7966 921
        AAAKK 489
        29829 675
        7377A 455
        KJ3KK 57
        4QT2K 36
        J7384 718
        K3K77 656
        Q4J85 442
        53AK9 39
        53782 766
        Q4545 572
        522TJ 330
        J4J42 472
        JA56A 497
        64534 137
        4J322 27
        57777 111
        TT338 828
        44J4J 984
        8AAAA 612
        J7Q25 821
        Q7J57 368
        88289 415
        888JJ 646
        36833 727
        T9TT2 271
        44A88 802
        K33J2 155
        Q3TQT 59
        AK755 524
        3J3J2 346
        AJ3TA 941
        9635K 357
        499JJ 234
        Q8884 337
        J8QJ8 678
        3333A 860
        TT775 480
        AATAQ 882
        5QQAA 247
        95833 80
        3TTQ8 690
        T32TJ 934
        QAQQ6 370
        A9998 684
        KTJ37 585
        52JKJ 320
        879A8 640
        7KJ77 161
        9QQAA 216
        32J6T 373
        389A5 76
        T988T 282
        86865 518
        45K45 578
        8288T 796
        96524 297
        78J55 625
        QJQKT 954
        J4353 334
        37KAJ 86
        4J9TQ 401
        Q674K 940
        QQKQQ 617
        A2356 460
        2A38K 825
        Q3TQ2 45
        57AJ3 790
        3A7J7 841
        A43A4 669
        24AJ3 653
        68666 466
        33793 88
        9J999 439
        5J577 389
        9Q7J6 173
        Q5T8T 540
        A7AT7 531
        T99TT 206
        565A5 858
        7935J 561
        A593Q 861
        898A9 18
        A8887 392
        424J2 40
        36336 867
        7J577 205
        5JJ43 386
        TTTTJ 693
        QT624 628
        A7TT7 832
        K44K5 150
        3J35Q 198
        9T29A 726
        KK5J7 423
        AAJAT 396
        37J7K 764
        7TTT7 971
        7K63A 647
        TT66T 515
        4644A 798
        TJ944 177
        2J6K9 323
        47674 880
        AAJAA 379
        86884 74
        6J366 64
        ATQ2T 469
        7J9QK 680
        TATT7 782
        Q7QQ4 52
        52555 816
        AA9A5 156
        K2K8T 283
        278J8 724
        95Q55 360
        3K332 516
        7Q5A3 125
        TAATT 733
        2K44K 363
        58K74 601
        7J77J 919
        4474J 191
        7T4JJ 521
        22A6K 620
        33T3J 244
        JTAJT 551
        879Q5 338
        67324 1000
        JJ333 918
        887AA 957
        QTAKK 504
        22A22 999
        A336A 700
        4J93T 729
        K5555 992
        QTTAJ 846
        QT59A 791
        42J4A 145
        JKK9T 526
        JA887 658
        J2255 618
        JQJ3Q 6
        6A4JT 176
        683J8 171
        A66Q6 533
        Q268J 527
        8Q2K9 241
        792T2 778
        QJJQA 402
        AAT24 827
        A75AA 697
        99444 209
        AKA99 799
        77667 777
        52275 962
        7688K 422
        72689 174
        99929 395
        TJ444 642
        22Q2Q 90
        AJ447 834
        58545 564
        JT5J4 756
        86888 822
        9A563 644
        666QQ 355
  recorded_at: Sun, 16 Mar 2025 02:36:12 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/08_haunted_wasteland.rb?token=ACG6TJ6N6LJRMZIODG3HZQTH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '6226'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"629dcdd40cef162c5aa9fd1c60771a009092c8012a8da31d0c92fdf7cf56f878"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - DFC4:310678:3F4BA1:50783B:67D6391C
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:12 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100028-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092573.651003,VS0,VE301
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 1e05d76c5db0fc1aea8aeb13c21239a9331f1f43
      expires:
      - Sun, 16 Mar 2025 02:41:12 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        directions, moves = DATA.read.split $/*2

        moves = moves.split($/).to_h { a, l, r = _1.scan(/\w{3}/); [a, ?L => l, ?R => r] }

        position = "AAA"

        p 0.step { |s|
          position = moves[position][directions[s % directions.size]]
          break s + 1 if position == "ZZZ"
        }

        periods = []
        positions = moves.keys.filter { _1.end_with? ?A }

        p 0.step { |s|
          positions.map! { moves[_1][directions[s % directions.size]] }
          positions.delete_if { periods << s + 1 if _1.end_with? ?Z }
          break periods if positions.empty?
        }.reduce :lcm

        __END__
        LLRLRLRRRLRLRRRLRRRLRRLLRLLRRRLRLRRLLRLRLRRLRLRLLRLRRRLRLRRLRRLRRRLRRLRRLRRLLRRLLRRRLRRLRRLRRRLRLRRLRRLLLLRLRRLRLRRLLLRRLRRRLRRRLLRRRLRRRLRRLRRRLLLRRRLLLRRLRRLRRRLRRLRRRLRRLRRRLLRLRLRRRLRRLRLRLRRRLRLRLLLRRRLRRRLRRLRRLRLRRRLRRRLLRRRLRRLRLLLRRLLRRRLRRRLRRRLLRRRLLRRLRLRRRLRRLRRRR

        BKM = (CDC, PSH)
        CBS = (RPQ, GSM)
        CDB = (BQV, NHX)
        SRC = (TPK, PGR)
        CLC = (DVN, DVR)
        GKD = (HHH, FLR)
        BFF = (DXV, NMR)
        MMD = (TLN, KHH)
        LFV = (QBF, HJM)
        GCR = (QST, RRL)
        DSN = (VMF, PBB)
        SSQ = (FRV, FRV)
        PRD = (FVB, JQM)
        HCP = (RHM, QJH)
        GPM = (VJC, KPQ)
        RSF = (TFR, QGN)
        GNQ = (DBF, DBV)
        MPR = (XNM, GNQ)
        SPT = (HJK, MKP)
        BCN = (HFN, KFC)
        XFQ = (RMQ, NCD)
        CQJ = (PGL, KVX)
        PHJ = (VCG, VNT)
        KFS = (GFF, THH)
        JQH = (BHL, RLT)
        JMR = (TQP, SDD)
        XMM = (XRC, NXM)
        XRH = (NML, LHC)
        JHA = (FMP, JFL)
        XKN = (LPL, MPR)
        CFQ = (XBD, NNB)
        NLF = (BKM, CGR)
        KJC = (SPJ, RBF)
        MRQ = (DHX, QHV)
        LQZ = (FMN, SXC)
        NQT = (GND, NSV)
        FQZ = (RFH, LBP)
        PPL = (VCG, VNT)
        JFL = (TBR, BSP)
        QGN = (SRG, HPC)
        TDQ = (FKG, HCD)
        TVM = (QJJ, MJB)
        QJM = (QSP, CJB)
        LPL = (XNM, GNQ)
        PRG = (THM, KKG)
        GRN = (LVL, MQV)
        VVN = (XKF, MRQ)
        BTG = (LVS, FNX)
        VRK = (HMJ, TKP)
        RFV = (RMQ, NCD)
        MXJ = (DXJ, CNQ)
        GKX = (HSC, GTX)
        TRX = (NFM, SFF)
        SXC = (QRX, CTX)
        DPF = (MDX, KRB)
        LQC = (RPC, CBS)
        KVC = (NGT, XPR)
        GBH = (HJM, QBF)
        PNF = (GNG, FNV)
        VSV = (XMM, DRV)
        HPN = (VTB, RJC)
        FVT = (GRF, QFT)
        DVC = (SHX, DPF)
        QHN = (LNH, LJD)
        QSV = (XHV, PRT)
        NVC = (CDB, KRJ)
        NCQ = (HCS, KDS)
        SXK = (SFT, JXR)
        NSV = (TJC, LDN)
        FNV = (CSR, FHQ)
        MHN = (XSL, RSX)
        TKG = (JCV, MQT)
        FHQ = (RPP, HKT)
        XCX = (TCN, HKX)
        VRT = (TDB, RFQ)
        SQR = (LQR, RLS)
        TGR = (PJM, TQV)
        LKR = (MBR, TLD)
        KVN = (BHG, SHM)
        GCH = (DGR, KXL)
        CHM = (NXR, NXR)
        VVJ = (RNT, VJR)
        QRX = (SFN, RQX)
        JRV = (CVN, VHV)
        PQM = (SSX, DHQ)
        NDL = (SDF, RLB)
        PCG = (RFV, XFQ)
        KLN = (PFX, NLS)
        RDS = (PBB, VMF)
        CCL = (BNB, FSJ)
        HTR = (GNN, BHC)
        HJK = (QCS, XRH)
        RMK = (BQL, SKL)
        SFT = (FLV, KJC)
        XBD = (GRH, BTG)
        VLG = (PXN, CRR)
        KFC = (QMD, VHM)
        KSX = (GKL, SRM)
        DQK = (GPM, JFX)
        PMP = (LFL, SLN)
        FRM = (SCD, TBZ)
        PGR = (LBH, SRF)
        GFT = (QTJ, GCD)
        QBQ = (RPH, XSF)
        MDR = (GLS, RTV)
        RFH = (MKR, HVP)
        DXV = (MJS, PQF)
        PCV = (QTC, HTL)
        PLH = (JVT, BJT)
        DQX = (CRT, VVH)
        JGJ = (RNC, RPK)
        HKD = (BLG, NMD)
        BRQ = (TDC, SDB)
        SMG = (TVS, DCH)
        TFR = (SRG, SRG)
        HXM = (HTS, KSN)
        DFD = (MVH, KGP)
        NML = (DXP, KCM)
        PQV = (SKH, DQX)
        JVT = (MMS, SNV)
        MDX = (GPD, XDF)
        MKR = (PDL, JPG)
        CGB = (NLF, TCF)
        XQP = (JHM, KNX)
        FBH = (MNR, NCT)
        BGN = (JJB, SMG)
        MPG = (HVD, BKR)
        QSL = (XDK, PKP)
        TDM = (QVP, DVD)
        FMP = (BSP, TBR)
        CDC = (TSK, TBQ)
        PSH = (TSK, TBQ)
        HJM = (PKJ, HDD)
        PGP = (SMG, JJB)
        PKD = (FHH, NFJ)
        MCG = (MFR, MBT)
        SFN = (DXN, KSX)
        XQJ = (MMM, PQM)
        QCT = (SHR, GCG)
        KVS = (PTJ, PLH)
        QMC = (BKR, HVD)
        NXF = (VGR, NCG)
        FXC = (CCL, RTM)
        DRV = (XRC, NXM)
        BGC = (TRV, SJN)
        LBP = (MKR, HVP)
        HQN = (PGL, KVX)
        JQC = (NHP, HGG)
        RPK = (CMR, SQR)
        KHR = (CBJ, QHN)
        RMS = (LBD, TDQ)
        DCH = (NFK, JNS)
        FLV = (SPJ, RBF)
        KXQ = (MQK, KJH)
        JVM = (NGP, KVS)
        DXJ = (FRL, BVB)
        RGC = (RDS, DSN)
        NLL = (JKK, CLC)
        SHD = (QVF, PXM)
        RXQ = (QSL, GXT)
        DVD = (CDR, HCL)
        BSP = (NBX, RSM)
        DBV = (SRX, LST)
        KRJ = (NHX, BQV)
        LTT = (TJV, TBN)
        RLQ = (RMS, RBP)
        PLN = (QHS, PCV)
        XKF = (DHX, QHV)
        LVS = (VDH, SJL)
        TLN = (LVD, BFS)
        HGB = (GTX, HSC)
        LKB = (PNF, CRG)
        CHN = (BPF, QPF)
        NMD = (VTL, GMR)
        MRL = (LQB, RXN)
        HKX = (GCR, KBD)
        VQN = (TLD, MBR)
        CTR = (TMH, GBR)
        VPN = (LMR, RXQ)
        FSL = (GDL, SXG)
        FGG = (JKJ, LDT)
        TCN = (GCR, KBD)
        RPH = (QHP, RLQ)
        NCA = (SXC, FMN)
        LPQ = (LKR, VQN)
        KXG = (LVN, KHR)
        KGL = (SDB, TDC)
        XJH = (XKM, GCL)
        JCV = (SVP, HBS)
        QSP = (QNM, VRT)
        RDR = (DHR, MHX)
        FMN = (QRX, CTX)
        CXJ = (KGL, BRQ)
        SRF = (DLG, LKT)
        XHP = (TRX, LSD)
        PNV = (LFL, SLN)
        MXM = (TCN, HKX)
        KDS = (CMT, XQP)
        GLS = (DVC, XRR)
        VHQ = (CLC, JKK)
        QBF = (HDD, PKJ)
        HSC = (GFT, TKX)
        LQM = (TSS, GMG)
        FFK = (QXF, NRK)
        NMK = (MMG, BRX)
        NFK = (HSR, KTL)
        VGR = (MXJ, BRK)
        VJR = (BGC, QFH)
        CMJ = (XLD, QVQ)
        PKB = (SPT, NDR)
        SRM = (LFG, RBV)
        NKH = (XMS, STV)
        SBC = (CGS, VLK)
        QGL = (BQL, SKL)
        GTX = (TKX, GFT)
        KJH = (RVM, FQB)
        NDD = (NRQ, RDT)
        VTD = (JSJ, LSR)
        RSX = (BCR, LPQ)
        JFX = (VJC, KPQ)
        GCL = (RKV, TFH)
        PTF = (VRX, JND)
        DDJ = (FKH, NHM)
        NFJ = (CHM, NTV)
        JGS = (CCL, RTM)
        BFX = (FPR, SNC)
        CMT = (JHM, KNX)
        RTM = (FSJ, BNB)
        MMA = (KVC, LHQ)
        JGL = (TMF, PVQ)
        GCD = (GCH, LDX)
        GXT = (XDK, PKP)
        HHH = (SXK, XMK)
        SKL = (CXJ, XFB)
        SQH = (JQH, FBV)
        NTV = (NXR, JFC)
        JXR = (FLV, KJC)
        VND = (RPD, SFX)
        GJS = (QJH, RHM)
        NVL = (LVN, KHR)
        CNQ = (FRL, BVB)
        KSQ = (DBG, RXP)
        FLT = (SCD, SCD)
        TJV = (RDR, FLM)
        AAA = (DFD, PLS)
        NLT = (HVX, NDD)
        FRR = (FQX, XHP)
        RSK = (VHV, CVN)
        LCF = (NMK, KCR)
        VBC = (GKX, HGB)
        CJB = (VRT, QNM)
        QNM = (TDB, RFQ)
        BQL = (XFB, CXJ)
        PVQ = (TFG, JMB)
        VCG = (VVS, HTG)
        GJF = (CXS, GLG)
        BJT = (SNV, MMS)
        BHL = (PMP, PNV)
        NDR = (MKP, HJK)
        CSD = (GBR, TMH)
        LXP = (VGM, TKG)
        KMS = (RSN, GSK)
        HBS = (DSR, BLN)
        LQR = (RLN, NVC)
        JSJ = (KLT, CMJ)
        QCS = (LHC, NML)
        MQV = (DDV, LQZ)
        MJG = (LVL, LVL)
        HTL = (HDX, HKD)
        HCD = (LFV, GBH)
        FTV = (HTS, KSN)
        QVQ = (KJT, TDM)
        LDN = (LMS, HHM)
        RHL = (XJK, RJF)
        LHQ = (XPR, NGT)
        LSD = (SFF, NFM)
        CVC = (XBD, NNB)
        LFB = (JDR, PKB)
        SHX = (KRB, MDX)
        FKG = (LFV, GBH)
        THH = (BGN, PGP)
        NNB = (GRH, BTG)
        XDK = (MNQ, SXS)
        RXP = (MLN, NLT)
        XDF = (BFX, GTV)
        RTV = (DVC, XRR)
        RXN = (VJP, VXV)
        SDF = (NKH, QBR)
        FLR = (SXK, XMK)
        BNB = (DNG, NCQ)
        JPG = (KLN, QLT)
        JMB = (PKD, HLD)
        DBG = (MLN, NLT)
        CXS = (PLN, GXP)
        QBR = (STV, XMS)
        MFR = (QBQ, RNG)
        LFG = (CTR, CSD)
        RSN = (CFH, LTT)
        TMH = (RFR, RCJ)
        VML = (GKX, HGB)
        BRK = (DXJ, CNQ)
        DVN = (GBJ, NQB)
        SHR = (GQQ, KFS)
        TGL = (KBF, RCD)
        VVH = (MJG, GRN)
        BHG = (BMN, HPH)
        KJB = (FXC, JGS)
        KMT = (MBK, RTX)
        QJJ = (QSV, LLP)
        LKT = (VVJ, BCG)
        GRS = (LSM, LSM)
        TXH = (JGL, PMM)
        HMM = (RDS, DSN)
        RML = (RCH, VND)
        RXK = (RJF, XJK)
        NHP = (XKN, JHQ)
        SJL = (QDH, QCC)
        XTD = (PPL, PHJ)
        XRC = (KXK, GMB)
        BCG = (RNT, VJR)
        LSJ = (HFN, KFC)
        JKJ = (LXP, XBB)
        GNG = (CSR, FHQ)
        KCM = (JMD, VSV)
        SHS = (CKT, PRD)
        KCX = (PGG, CLB)
        RLB = (NKH, QBR)
        XMK = (JXR, SFT)
        GRH = (LVS, FNX)
        NFM = (RGC, HMM)
        KXD = (RSV, FBH)
        GBJ = (VRK, TXJ)
        QCC = (RMK, QGL)
        KHT = (PQD, RGT)
        BJV = (LQM, QMJ)
        RDH = (HPN, SVN)
        QHV = (LVF, PTX)
        QFH = (SJN, TRV)
        NGT = (KMT, FHF)
        CSR = (RPP, HKT)
        HTS = (XMP, XMP)
        CTX = (RQX, SFN)
        CGR = (CDC, PSH)
        RRL = (RMN, MMD)
        RJF = (BXG, BFF)
        LNM = (FRR, PBM)
        VNT = (VVS, HTG)
        BPF = (PRG, QLS)
        FNZ = (GCG, SHR)
        GKL = (LFG, RBV)
        LSR = (KLT, CMJ)
        QFT = (HQJ, XQJ)
        HVP = (JPG, PDL)
        SKD = (HTR, MBN)
        SFF = (RGC, HMM)
        BMG = (NDL, RKP)
        TRV = (KVN, MXP)
        SFX = (VLG, HCB)
        MBK = (VML, VBC)
        SDD = (SBD, SHT)
        KFK = (QJT, SBC)
        XQM = (TGR, XQQ)
        RBP = (LBD, TDQ)
        TBQ = (MHN, CCB)
        CXG = (VPN, DHJ)
        BXG = (NMR, DXV)
        DSL = (CLB, PGG)
        JPH = (KVS, NGP)
        BKR = (HBR, KSQ)
        LCX = (FRV, QDZ)
        TKX = (GCD, QTJ)
        XLD = (KJT, TDM)
        SDB = (LNM, GXM)
        GBR = (RCJ, RFR)
        BTD = (MLK, CRF)
        XFB = (BRQ, KGL)
        MJB = (LLP, QSV)
        FGK = (SKH, DQX)
        PXQ = (NHP, HGG)
        BMN = (MPG, QMC)
        QTC = (HKD, HDX)
        FQB = (DDJ, KDJ)
        LMS = (BSG, SQH)
        HCB = (CRR, PXN)
        GQF = (BJV, VTR)
        PMM = (PVQ, TMF)
        CLB = (MTK, LCF)
        QSF = (CBS, RPC)
        VTB = (PNQ, DJK)
        KPQ = (JTH, NXF)
        NMR = (MJS, PQF)
        CFH = (TBN, TJV)
        GMG = (KGG, SRQ)
        NBX = (JGJ, JQK)
        CRF = (DRH, BRS)
        KBF = (CGB, GSQ)
        GNN = (LMP, RML)
        GRF = (HQJ, XQJ)
        DBF = (LST, SRX)
        LVF = (RVN, KXD)
        HPC = (GRS, QNF)
        PHH = (NVL, KXG)
        XPD = (NRK, QXF)
        RNC = (CMR, SQR)
        GSK = (LTT, CFH)
        JQM = (VTF, KXQ)
        SPJ = (LFB, NQH)
        XGH = (DPT, GKD)
        JDR = (SPT, NDR)
        FMQ = (VVN, MLH)
        HJH = (JVM, JPH)
        DHX = (PTX, LVF)
        HDD = (FMQ, GMH)
        VHM = (TGL, TSJ)
        GFF = (BGN, PGP)
        LHC = (DXP, KCM)
        RCH = (RPD, SFX)
        GMH = (MLH, VVN)
        SCD = (FMP, JFL)
        TJC = (LMS, HHM)
        MVH = (XRJ, VKM)
        MMG = (XGH, CXK)
        GQQ = (GFF, THH)
        VGM = (MQT, JCV)
        DGR = (HJH, KNH)
        LDT = (LXP, XBB)
        XBB = (TKG, VGM)
        XKM = (RKV, TFH)
        KSN = (XMP, XGB)
        GSM = (TXH, CJK)
        PJM = (GJS, HCP)
        ZZZ = (PLS, DFD)
        NCG = (BRK, MXJ)
        SRG = (GRS, GRS)
        RQX = (KSX, DXN)
        SFH = (HXR, CXG)
        DXP = (JMD, VSV)
        LQB = (VJP, VXV)
        CGS = (CQJ, HQN)
        CMR = (LQR, RLS)
        TSB = (CKT, PRD)
        HVX = (NRQ, RDT)
        CRG = (GNG, FNV)
        GQJ = (PQD, RGT)
        LRL = (TGR, XQQ)
        TPK = (LBH, SRF)
        QHS = (HTL, QTC)
        DHQ = (SSQ, LCX)
        LMR = (GXT, QSL)
        KKG = (MNJ, QLB)
        JTH = (NCG, VGR)
        CKV = (GND, NSV)
        PFX = (KRH, BTD)
        RKP = (RLB, SDF)
        VHV = (TLM, PHH)
        GXM = (PBM, FRR)
        QST = (MMD, RMN)
        PKJ = (GMH, FMQ)
        RDL = (PGR, TPK)
        CRT = (MJG, MJG)
        JQK = (RPK, RNC)
        FLM = (MHX, DHR)
        LHB = (TQP, SDD)
        GSQ = (NLF, TCF)
        HQJ = (MMM, PQM)
        RCJ = (RXK, RHL)
        LFL = (KJB, QPB)
        BRS = (RDL, SRC)
        RPC = (RPQ, GSM)
        JJB = (DCH, TVS)
        GMR = (KMS, KLC)
        XJX = (SBC, QJT)
        DJK = (CFQ, CVC)
        FQX = (TRX, LSD)
        GLG = (GXP, PLN)
        VTR = (LQM, QMJ)
        MNR = (LKB, BTH)
        XSF = (QHP, RLQ)
        RNT = (BGC, QFH)
        HPH = (MPG, QMC)
        CJK = (PMM, JGL)
        KRH = (CRF, MLK)
        TBZ = (JFL, FMP)
        XSL = (LPQ, BCR)
        TFH = (GQF, VKF)
        LST = (RDH, MJT)
        TSJ = (RCD, KBF)
        VXV = (CHG, BMG)
        DHR = (RSK, JRV)
        BVN = (PXM, QVF)
        VJC = (NXF, JTH)
        TXJ = (TKP, HMJ)
        JFC = (XGT, FQZ)
        QGS = (FSL, HRD)
        HVD = (KSQ, HBR)
        MCH = (LSJ, BCN)
        QDZ = (LHQ, KVC)
        DGF = (BDS, SFH)
        MQK = (RVM, FQB)
        RMQ = (GQJ, KHT)
        FRL = (QSF, LQC)
        PXN = (XTD, BQR)
        JHD = (MJB, QJJ)
        PKP = (SXS, MNQ)
        THM = (MNJ, QLB)
        BQV = (RGS, FGG)
        PBM = (XHP, FQX)
        CBJ = (LNH, LJD)
        SVP = (DSR, BLN)
        QMJ = (GMG, TSS)
        MNJ = (FGK, PQV)
        GXP = (QHS, PCV)
        XGT = (LBP, RFH)
        MBT = (QBQ, RNG)
        FPQ = (XRV, DQK)
        VVS = (DRL, MDR)
        KVX = (VLR, MCG)
        PQD = (MJR, FPQ)
        VBQ = (FLT, FLT)
        HFN = (VHM, QMD)
        KGG = (HXM, FTV)
        MXP = (SHM, BHG)
        BJJ = (FLT, FRM)
        VJP = (BMG, CHG)
        KDJ = (FKH, NHM)
        RNG = (XSF, RPH)
        BTH = (CRG, PNF)
        QDH = (RMK, QGL)
        XHV = (SHD, BVN)
        QTJ = (LDX, GCH)
        KQR = (HRD, FSL)
        TBF = (RXN, LQB)
        KRB = (XDF, GPD)
        NCT = (BTH, LKB)
        DPT = (HHH, FLR)
        MHX = (RSK, JRV)
        LMP = (VND, RCH)
        QMD = (TGL, TSJ)
        JNS = (KTL, HSR)
        MQC = (RFV, XFQ)
        JND = (SJH, XJH)
        VRX = (SJH, XJH)
        HTG = (MDR, DRL)
        NQB = (TXJ, VRK)
        PTX = (RVN, KXD)
        QJT = (CGS, VLK)
        BFS = (CHN, SFK)
        HCL = (TBF, MRL)
        GCG = (GQQ, KFS)
        PGG = (LCF, MTK)
        DHJ = (LMR, RXQ)
        VLR = (MBT, MFR)
        TBN = (RDR, FLM)
        RQB = (GLG, CXS)
        TDB = (KCX, DSL)
        CDL = (GRF, QFT)
        QPF = (QLS, PRG)
        CHG = (NDL, RKP)
        NHM = (FTG, SKD)
        SJH = (GCL, XKM)
        PGT = (MQC, PCG)
        SLN = (QPB, KJB)
        NRQ = (PGT, LHS)
        BRX = (CXK, XGH)
        BDS = (CXG, HXR)
        PTJ = (BJT, JVT)
        BQR = (PPL, PHJ)
        RPQ = (CJK, TXH)
        PXM = (JMR, LHB)
        RSV = (MNR, NCT)
        SXG = (NDN, RSF)
        BSG = (JQH, FBV)
        GND = (LDN, TJC)
        QLB = (PQV, FGK)
        GMB = (KQR, QGS)
        RLN = (KRJ, CDB)
        MLK = (BRS, DRH)
        NHX = (FGG, RGS)
        LLP = (XHV, PRT)
        BVB = (QSF, LQC)
        RVN = (FBH, RSV)
        KTL = (XPD, FFK)
        MJS = (VTD, HNL)
        HXR = (VPN, DHJ)
        NDN = (TFR, QGN)
        BCR = (LKR, VQN)
        MTK = (NMK, KCR)
        SNV = (PXQ, JQC)
        QJH = (PTF, PCX)
        MBR = (VHQ, NLL)
        XJK = (BFF, BXG)
        HDX = (NMD, BLG)
        VMF = (CKV, NQT)
        SKH = (CRT, VVH)
        XNM = (DBV, DBF)
        SRQ = (HXM, FTV)
        FTG = (MBN, HTR)
        VTL = (KLC, KMS)
        DNG = (KDS, HCS)
        XPR = (FHF, KMT)
        QLT = (NLS, PFX)
        BLN = (TSB, SHS)
        NGP = (PTJ, PLH)
        NCD = (GQJ, KHT)
        CCB = (XSL, RSX)
        TFG = (PKD, HLD)
        MKP = (QCS, XRH)
        RLT = (PMP, PNV)
        TSS = (SRQ, KGG)
        QXF = (XFL, DGF)
        RFR = (RHL, RXK)
        LBD = (HCD, FKG)
        SVN = (RJC, VTB)
        QHP = (RBP, RMS)
        LVL = (DDV, DDV)
        SNC = (KNN, MCH)
        MJR = (DQK, XRV)
        TKP = (JHD, TVM)
        KBD = (RRL, QST)
        RJC = (PNQ, DJK)
        NRK = (DGF, XFL)
        NSF = (QCT, QCT)
        DRH = (RDL, SRC)
        KNH = (JVM, JPH)
        RTX = (VBC, VML)
        HNL = (LSR, JSJ)
        KGP = (XRJ, VKM)
        VTF = (KJH, MQK)
        KXK = (QGS, KQR)
        XRR = (SHX, DPF)
        KNX = (CDL, FVT)
        VDH = (QDH, QCC)
        PGL = (VLR, MCG)
        KCR = (BRX, MMG)
        NXR = (XGT, XGT)
        DSR = (TSB, SHS)
        NXM = (KXK, GMB)
        QVP = (CDR, HCL)
        HMJ = (JHD, TVM)
        FHH = (CHM, CHM)
        GTV = (FPR, SNC)
        SFK = (QPF, BPF)
        XMS = (MXM, XCX)
        FPR = (KNN, MCH)
        SSX = (SSQ, SSQ)
        DXN = (SRM, GKL)
        VKM = (GJF, RQB)
        DVR = (GBJ, NQB)
        TMF = (TFG, JMB)
        XRV = (GPM, JFX)
        TJJ = (QCT, FNZ)
        KLT = (XLD, QVQ)
        SRX = (MJT, RDH)
        RGT = (MJR, FPQ)
        SHM = (HPH, BMN)
        TVS = (NFK, JNS)
        LVN = (CBJ, QHN)
        XRJ = (RQB, GJF)
        TQP = (SBD, SHT)
        BHC = (LMP, RML)
        TLD = (NLL, VHQ)
        NLS = (BTD, KRH)
        HSR = (XPD, FFK)
        JMD = (DRV, XMM)
        FRV = (KVC, LHQ)
        PBB = (NQT, CKV)
        KXL = (KNH, HJH)
        DDV = (SXC, FMN)
        TQV = (HCP, GJS)
        GPD = (GTV, BFX)
        RCD = (GSQ, CGB)
        JHQ = (LPL, MPR)
        FVB = (KXQ, VTF)
        MQT = (HBS, SVP)
        QVF = (LHB, JMR)
        LHS = (PCG, MQC)
        KLC = (RSN, GSK)
        MNQ = (KFK, XJX)
        KHH = (BFS, LVD)
        SJN = (MXP, KVN)
        FKH = (SKD, FTG)
        CXK = (GKD, DPT)
        LJD = (QJM, TRC)
        TVA = (SHR, GCG)
        QLS = (KKG, THM)
        PLS = (MVH, KGP)
        HKT = (LRL, XQM)
        MLH = (MRQ, XKF)
        FNX = (SJL, VDH)
        RFQ = (KCX, DSL)
        PNQ = (CVC, CFQ)
        KJT = (DVD, QVP)
        RBF = (LFB, NQH)
        LDX = (DGR, KXL)
        QPB = (FXC, JGS)
        PRT = (BVN, SHD)
        JHM = (CDL, FVT)
        MJT = (SVN, HPN)
        HRD = (GDL, SXG)
        BLG = (GMR, VTL)
        HLD = (FHH, NFJ)
        DTA = (LBP, RFH)
        CDR = (MRL, TBF)
        SHT = (VBQ, BJJ)
        DLG = (BCG, VVJ)
        QNF = (LSM, ZZZ)
        HBR = (RXP, DBG)
        XMP = (NSF, NSF)
        RMN = (TLN, KHH)
        RVM = (KDJ, DDJ)
        STV = (MXM, XCX)
        FBV = (RLT, BHL)
        TLM = (NVL, KXG)
        CVN = (TLM, PHH)
        FHF = (RTX, MBK)
        PCX = (JND, VRX)
        VKF = (VTR, BJV)
        DRL = (GLS, RTV)
        NQH = (JDR, PKB)
        CRR = (BQR, XTD)
        LBH = (DLG, LKT)
        MBN = (GNN, BHC)
        TSK = (CCB, MHN)
        HGG = (XKN, JHQ)
        LVD = (CHN, SFK)
        SXS = (XJX, KFK)
        LNH = (TRC, QJM)
        RPD = (HCB, VLG)
        XFL = (SFH, BDS)
        RKV = (GQF, VKF)
        RPP = (LRL, XQM)
        HCS = (CMT, XQP)
        XGB = (NSF, TJJ)
        MLN = (NDD, HVX)
        TDC = (GXM, LNM)
        VLK = (HQN, CQJ)
        MMM = (SSX, SSX)
        PQF = (VTD, HNL)
        RDT = (PGT, LHS)
        SBD = (VBQ, VBQ)
        RSM = (JGJ, JQK)
        CKT = (FVB, JQM)
        TCF = (BKM, CGR)
        RGS = (JKJ, LDT)
        KNN = (BCN, LSJ)
        MMS = (JQC, PXQ)
        JKK = (DVN, DVR)
        FSJ = (DNG, NCQ)
        GDL = (NDN, RSF)
        LSM = (DFD, PLS)
        PDL = (QLT, KLN)
        HHM = (BSG, SQH)
        XQQ = (PJM, TQV)
        RLS = (RLN, NVC)
        RHM = (PCX, PTF)
        RBV = (CSD, CTR)
        TRC = (QSP, CJB)
        TBR = (RSM, NBX)
  recorded_at: Sun, 16 Mar 2025 02:36:12 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/09_mirage_maintenance.rb?token=ACG6TJYNOGJBLXY67RQTYM3H2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '10862'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"2f32d50f9427a61ceaf5d0e2c4aa03f9e470a62be115ba67ac6a318b8ec754f1"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - DFC4:310678:3F4BC5:50785D:67D6391C
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:13 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100080-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092573.082883,VS0,VE287
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f12d5ba86d776f25855edf0a9a6d03ecb52a5252
      expires:
      - Sun, 16 Mar 2025 02:41:13 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        puts DATA.map.with_object([0, 0]) { |l, s|
          h = l.split.map &:to_i
          l, r, m = 0, 0, 1

          until h.all? 0
            l += h[0] * m
            r += h[-1]
            m = -m
            h = h.each_cons(2).map { _2 - _1 }
          end

          s[0] += r
          s[1] += l
        }

        __END__
        23 34 50 94 210 482 1077 2327 4864 9829 19209 36438 67557 123497 224466 408029 743317 1354940 2461668 4436846 7899892
        7 9 15 26 43 67 99 140 191 253 327 414 515 631 763 912 1079 1265 1471 1698 1947
        12 32 74 154 291 503 814 1298 2210 4286 9343 21393 48633 106944 226041 460406 909128 1752848 3324280 6245160 11693791
        5 18 46 106 235 508 1066 2167 4287 8327 16052 31043 60763 120970 244922 502099 1035401 2133556 4369562 8861092 17752611
        27 50 81 131 223 400 743 1399 2619 4806 8573 14811 24767 40132 63139 96671 144379 210810 301545 423347 584319
        7 20 53 118 222 367 553 793 1158 1879 3542 7421 16003 33768 68296 131782 243049 430158 733723 1211048 1941212
        7 5 12 34 74 135 240 495 1245 3405 9085 22675 52646 114551 236281 467922 901195 1708405 3219482 6070032 11475986
        5 13 33 65 109 165 233 313 405 509 625 753 893 1045 1209 1385 1573 1773 1985 2209 2445
        8 -2 -17 -37 -52 -23 148 661 1876 4388 9121 17443 31304 53399 87358 137965 211408 315562 460307 657883 923284
        15 21 44 102 223 460 922 1844 3736 7677 15877 32763 67136 136539 276119 556377 1117965 2238201 4454922 8791220 17153221
        3 16 34 67 142 305 618 1152 1977 3157 4788 7200 11632 22063 49558 121622 300847 719834 1643270 3573485 7423202
        11 17 36 88 213 494 1087 2251 4375 8024 14095 24327 42724 79084 157087 331858 726650 1607251 3529578 7627561 16167592
        -1 0 21 78 198 427 846 1608 3017 5678 10763 20486 39010 74316 142220 275028 539771 1075368 2165681 4378150 8818318
        18 22 38 82 181 381 753 1405 2517 4425 7789 13889 25102 45622 82494 147042 256780 437904 728472 1182388 1874315
        0 1 21 81 210 445 831 1421 2276 3465 5065 7161 9846 13221 17395 22485 28616 35921 44541 54625 66330
        9 27 58 113 216 424 873 1870 4069 8807 18742 39037 79480 158128 307321 583238 1080569 1954363 3451690 5956433 10051312
        0 15 43 82 139 256 556 1322 3137 7150 15616 33032 68536 140880 288411 588317 1192156 2388619 4709831 9104648 17212191
        4 2 12 55 158 353 677 1181 1958 3197 5262 8782 14720 24366 39171 60306 87792 119004 146304 153505 110810
        6 21 45 69 80 61 -9 -155 -406 -795 -1359 -2139 -3180 -4531 -6245 -8379 -10994 -14155 -17931 -22395 -27624
        19 32 45 58 71 84 97 110 123 136 149 162 175 188 201 214 227 240 253 266 279
        10 13 24 50 101 199 404 873 1976 4501 9988 21240 43067 83327 154336 274727 471846 784781 1268128 1996606 3070641
        0 3 7 18 51 129 282 546 962 1575 2433 3586 5085 6981 9324 12162 15540 19499 24075 29298 35191
        17 31 45 59 73 87 101 115 129 143 157 171 185 199 213 227 241 255 269 283 297
        8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48
        1 10 39 114 273 568 1066 1847 3012 4748 7561 12914 24758 52917 120106 275652 620853 1353401 2841486 5742580 11189623
        14 17 17 14 8 -1 -13 -28 -46 -67 -91 -118 -148 -181 -217 -256 -298 -343 -391 -442 -496
        10 18 23 25 24 20 13 3 -10 -26 -45 -67 -92 -120 -151 -185 -222 -262 -305 -351 -400
        7 21 35 40 27 5 46 380 1577 4877 12782 30145 66241 138771 281571 559245 1094594 2119788 4072116 7774237 14774706
        16 23 49 115 254 527 1061 2136 4362 9015 18660 38309 77606 155029 306115 599783 1171024 2286635 4477211 8800303 17358594
        6 12 17 21 24 26 27 27 26 24 21 17 12 6 -1 -9 -18 -28 -39 -51 -64
        8 13 38 102 241 526 1092 2186 4257 8134 15369 28861 53924 100017 183417 331187 586870 1018427 1729032 2871440 4666755
        18 30 55 98 178 340 676 1361 2711 5278 10014 18564 33789 60676 107865 190115 332144 574414 981593 1654614 2747468
        18 20 21 22 34 89 257 674 1586 3414 6845 12954 23362 40435 67529 109286 171986 263960 396069 582254 840162
        20 35 60 100 175 341 727 1591 3407 7019 13956 27133 52437 102235 202842 409760 837515 1715946 3493279 7021299 13886128
        15 25 44 79 155 343 810 1895 4220 8855 17578 33324 61032 109319 193790 343400 612197 1100085 1988056 3595765 6472489
        19 38 71 118 179 254 343 446 563 694 839 998 1171 1358 1559 1774 2003 2246 2503 2774 3059
        10 24 49 99 199 402 824 1713 3579 7433 15232 30745 61319 121575 241175 481021 966676 1956580 3979811 8111053 16511955
        19 31 57 103 175 279 421 607 843 1135 1489 1911 2407 2983 3645 4399 5251 6207 7273 8455 9759
        0 -1 4 24 87 253 640 1478 3206 6627 13136 25036 45957 81393 139372 231274 372812 585191 896460 1343072 1971667
        10 36 75 127 192 270 361 465 582 712 855 1011 1180 1362 1557 1765 1986 2220 2467 2727 3000
        -6 -5 -2 12 69 245 687 1656 3603 7306 14121 26447 48580 88239 159197 285682 509691 903614 1594019 2811443 5002638
        -1 -1 0 4 21 82 254 660 1510 3152 6155 11439 20470 35541 60163 99593 161529 257005 401522 616454 930771
        14 21 40 91 194 361 591 871 1192 1618 2508 5092 12744 33476 84391 199070 439114 911299 1792008 3360753 6044662
        11 22 47 97 194 371 672 1152 1877 2924 4381 6347 8932 12257 16454 21666 28047 35762 44987 55909 68726
        1 -6 -20 -31 -5 141 579 1630 3858 8230 16404 31252 57788 104755 187233 330765 577663 996354 1694860 2839779 4682449
        7 8 10 20 45 88 156 295 667 1684 4214 9874 21425 43284 82168 147885 254287 420400 671746 1041872 1574101
        20 40 65 95 130 170 215 265 320 380 445 515 590 670 755 845 940 1040 1145 1255 1370
        21 31 40 48 53 57 85 218 635 1647 3701 7367 13449 23654 42799 84428 183024 417769 955047 2119794 4510308
        6 25 58 105 166 241 330 433 550 681 826 985 1158 1345 1546 1761 1990 2233 2490 2761 3046
        19 34 70 153 321 623 1112 1827 2763 3834 4847 5535 5753 6022 8685 19939 52788 130387 288488 576099 1059512
        0 -7 -16 -22 -9 59 247 658 1442 2805 5018 8426 13457 20631 30569 44002 61780 84881 114420 151658 198011
        8 10 17 34 73 164 376 847 1827 3757 7444 14462 28051 55078 110200 224438 462238 954184 1957407 3963142 7881761
        20 34 57 89 130 180 239 307 384 470 565 669 782 904 1035 1175 1324 1482 1649 1825 2010
        3 4 9 17 27 38 49 59 67 72 73 69 59 42 17 -17 -61 -116 -183 -263 -357
        -3 -3 4 30 91 219 486 1046 2204 4519 8951 17097 31687 57858 106570 203428 410155 873797 1933322 4339084 9684335
        10 25 40 55 70 85 100 115 130 145 160 175 190 205 220 235 250 265 280 295 310
        -4 7 33 80 157 272 422 571 607 266 -992 -4173 -11026 -24431 -48925 -91396 -161978 -275183 -451309 -718166 -1113165
        8 16 39 93 198 378 661 1079 1668 2468 3523 4881 6594 8718 11313 14443 18176 22584 27743 33733 40638
        3 7 20 59 156 383 906 2082 4613 9771 19708 37865 69494 122307 207266 339528 539559 834431 1259316 1859191 2690768
        9 30 55 79 102 142 254 566 1367 3319 7914 18366 41259 89580 188492 386780 780041 1557464 3094013 6126141 12074720
        11 22 51 109 212 373 595 886 1342 2384 5301 13362 33956 82595 190387 418201 884049 1816682 3660479 7278227 14335104
        19 22 26 35 62 136 318 749 1775 4227 9978 22954 50842 107815 218682 424970 793555 1428580 2487530 4202477 6907662
        21 31 45 68 100 139 194 325 737 1960 5143 12466 27624 56293 106580 190008 325237 550617 959681 1788700 3611684
        -4 5 32 90 203 415 814 1586 3126 6256 12634 25483 50825 99472 190104 353853 640912 1129799 1940028 3249072 5314647
        13 34 66 106 155 238 434 929 2114 4764 10362 21685 43875 86463 167418 321730 620219 1210847 2407738 4877617 10018867
        15 40 88 175 333 636 1247 2495 4992 9801 18667 34324 60892 104379 173304 279458 438821 672654 1008786 1483117 2141359
        9 15 37 84 164 289 479 771 1250 2130 3924 7753 15855 32366 64456 123914 229287 408689 703407 1172442 1898134
        9 26 55 117 251 530 1096 2234 4517 9074 18070 35550 68900 131341 246150 453809 824268 1478552 2628474 4653755 8260732
        17 18 15 4 -13 -10 90 449 1359 3325 7268 15036 30585 62440 128345 263285 532179 1048390 1998963 3678322 6537405
        21 28 35 42 49 56 63 70 77 84 91 98 105 112 119 126 133 140 147 154 161
        22 41 69 120 231 472 954 1844 3416 6207 11424 21894 44129 92630 198667 428027 916737 1942612 4067342 8415103 17210070
        10 4 9 47 159 425 996 2137 4282 8113 14703 25819 44590 76974 134963 243555 455734 883874 1763329 3576095 7281317
        0 9 28 57 96 145 204 273 352 441 540 649 768 897 1036 1185 1344 1513 1692 1881 2080
        4 4 10 27 72 179 400 804 1476 2512 3989 5857 7651 7858 2727 -15596 -61125 -153822 -309483 -500209 -540831
        2 11 36 92 206 423 812 1472 2538 4187 6644 10188 15158 21959 31068 43040 58514 78219 102980 133724 171486
        7 13 27 73 191 453 991 2042 4034 7776 14888 28737 56364 112236 225186 450672 891561 1732103 3291689 6107481 11058165
        12 40 92 177 299 453 621 768 838 750 394 -373 -1731 -3901 -7149 -11790 -18192 -26780 -38040 -52523 -70849
        2 10 36 91 202 431 909 1893 3855 7616 14545 26853 48025 83449 141320 233919 379392 604182 946298 1459639 2219628
        16 29 65 143 282 494 787 1185 1768 2732 4467 7650 13350 23143 39237 64610 103168 159935 241293 355297 512098
        10 5 12 38 96 220 487 1059 2282 4931 10788 23917 53323 118277 258683 554867 1164838 2393797 4822956 9546940 18608510
        11 24 50 99 183 327 594 1138 2302 4788 9954 20347 40665 79456 152009 285077 524313 945636 1672246 2899791 4933431
        1 7 33 99 232 470 883 1622 3013 5733 11152 22022 43880 87868 176248 352827 701969 1382067 2682539 5117917 9578800
        8 4 -2 -3 27 147 473 1223 2795 5897 11776 22662 42674 79652 148739 279218 527591 1003263 1920647 3706984 7225286
        8 9 11 16 45 163 513 1361 3153 6581 12649 22723 38542 62161 95793 141516 200814 273929 359015 451106 540939
        13 16 14 10 9 14 23 34 84 384 1667 5941 17938 47682 114784 255368 533109 1057155 2012660 3716109 6720753
        13 23 42 77 147 297 614 1246 2441 4667 8966 17865 37461 81790 181409 399474 860801 1802863 3662826 7221761 13835595
        24 33 39 50 87 186 405 841 1671 3258 6416 13015 27236 57965 123052 256464 519738 1019599 1934157 3550744 6319205
        12 25 46 90 192 414 860 1709 3277 6126 11266 20576 37758 70530 135517 268659 546296 1125970 2322222 4742431 9522654
        0 1 -3 -14 -33 -60 -94 -133 -174 -213 -245 -264 -263 -234 -168 -55 116 357 681 1102 1635
        -4 7 26 50 83 141 270 590 1387 3309 7796 18018 40870 91096 199609 429975 910670 1897655 3894826 7883742 15756517
        21 24 37 69 127 230 435 875 1809 3684 7209 13441 23883 40594 66311 104583 159917 237936 345549 491133 684727
        6 4 -1 1 34 148 444 1112 2482 5088 9745 17639 30430 50368 80422 124422 187214 274828 394659 555661 768554
        23 40 66 101 145 198 260 331 411 500 598 705 821 946 1080 1223 1375 1536 1706 1885 2073
        14 16 29 70 165 350 675 1231 2244 4314 8934 19546 43664 97163 212917 457876 965814 1997888 4050487 8040434 15612411
        4 13 43 102 195 328 530 917 1841 4196 9996 23406 52516 112337 229827 452313 861586 1597375 2896065 5153678 9026609
        -8 -1 25 77 164 297 492 782 1244 2047 3527 6295 11384 20441 35970 61632 102608 166031 261493 401633 602812
        24 37 55 79 115 180 314 604 1234 2601 5588 12166 26609 57758 123022 255360 515860 1017797 1975233 3803805 7328983
        12 14 23 61 175 445 998 2039 3924 7327 13593 25419 48056 91256 172164 319258 577398 1014674 1734881 2909539 4869847
        12 10 19 51 124 273 579 1231 2648 5714 12236 25864 54002 111875 231267 479212 997404 2083634 4356277 9078801 18785272
        -2 -11 -17 -13 5 49 169 507 1380 3397 7615 15739 30371 55313 95929 159571 256074 398325 602911 890851 1288417
        3 1 -4 -3 32 153 441 1011 2017 3657 6178 9881 15126 22337 32007 44703 61071 81841 107832 139957 179228
        3 5 24 76 193 433 900 1791 3497 6802 13259 25907 50693 99390 195638 387278 770904 1539404 3071735 6098927 12005782
        7 15 42 95 182 316 512 779 1116 1541 2240 4056 9795 27268 75688 198084 483877 1107795 2394006 4917853 9662028
        3 15 33 60 99 152 224 335 555 1095 2507 6064 14403 32516 69162 138743 263635 476887 825093 1371100 2196035
        14 19 29 53 108 219 416 728 1174 1751 2419 3083 3572 3615 2814 614 -3730 -11189 -22999 -40703 -66196
        19 47 96 171 270 385 522 756 1339 2881 6626 14847 31386 62367 117112 209292 358347 591211 944380 1466363 2220558
        13 17 32 67 148 344 820 1942 4475 9944 21289 44066 88659 174301 336168 637393 1188485 2177203 3912210 6883485 11841026
        11 22 46 93 177 329 615 1155 2138 3825 6522 10483 15664 21188 24293 18415 -10099 -87352 -260282 -609319 -1266917
        5 16 42 93 188 369 722 1418 2810 5668 11714 24759 53000 113516 240922 503944 1037329 2104085 4218930 8396808 16657278
        13 22 30 34 33 26 4 -57 -179 -287 81 2511 11446 38112 109202 285643 702073 1647364 3723532 8148980 17318427
        -10 -16 -15 9 80 230 499 935 1594 2540 3845 5589 7860 10754 14375 18835 24254 30760 38489 47585 58200
        25 48 79 118 165 220 283 354 433 520 615 718 829 948 1075 1210 1353 1504 1663 1830 2005
        17 33 66 114 169 221 276 393 742 1698 4035 9394 21409 48259 108122 240351 527839 1141439 2428576 5091846 10552481
        17 21 25 29 33 37 41 45 49 53 57 61 65 69 73 77 81 85 89 93 97
        24 31 39 48 54 49 21 -46 -172 -381 -701 -1164 -1806 -2667 -3791 -5226 -7024 -9241 -11937 -15176 -19026
        24 32 35 33 26 14 -3 -25 -52 -84 -121 -163 -210 -262 -319 -381 -448 -520 -597 -679 -766
        -4 -11 -26 -48 -57 -1 217 752 1830 3761 6952 11920 19305 29883 44579 64480 90848 125133 168986 224272 293083
        25 49 86 151 280 550 1119 2294 4635 9103 17260 31529 55522 94444 155581 248880 387629 589245 876178 1276939 1827260
        21 40 80 166 333 631 1135 1960 3281 5358 8566 13430 20665 31221 46333 67576 96925 136820 190236 260758 352661
        1 14 42 90 162 255 349 393 287 -140 -1156 -3156 -6696 -12531 -21657 -35357 -55251 -83350 -122114 -174514 -244098
        11 36 72 123 194 294 458 797 1583 3374 7182 14685 28482 52388 91764 153875 248267 387152 585788 862839 1240698
        0 0 15 55 130 250 425 665 980 1380 1875 2475 3190 4030 5005 6125 7400 8840 10455 12255 14250
        8 18 36 57 73 67 16 -82 -125 294 2321 8719 25582 65633 154559 343189 730803 1509265 3045463 6033724 11776940
        -6 8 45 117 255 527 1073 2181 4453 9156 18932 39171 80556 163599 326438 637799 1217892 2271160 4136295 7360841 12810093
        -5 -7 6 61 210 541 1199 2438 4747 9126 17628 34331 66985 129775 248135 467680 871677 1616059 2999641 5603532 10565076
        16 20 26 45 102 241 537 1116 2189 4114 7509 13460 23936 42715 77591 145645 285394 583456 1230208 2630623 5615774
        16 27 47 76 114 161 217 282 356 439 531 632 742 861 989 1126 1272 1427 1591 1764 1946
        26 44 80 156 300 550 965 1643 2746 4532 7394 11906 18876 29406 44959 67433 99242 143404 203636 284456 391292
        3 3 17 56 143 329 710 1445 2775 5043 8715 14402 22883 35129 52328 75911 107579 149331 203493 272748 360167
        8 25 61 139 309 661 1334 2526 4517 7724 12814 20908 33916 55050 89569 145817 236622 381131 607163 954169 1476895
        17 30 42 44 27 -8 -27 76 541 1851 4949 11704 25947 55791 118750 252688 538313 1143420 2406244 4986244 10126859
        27 41 55 69 83 97 111 125 139 153 167 181 195 209 223 237 251 265 279 293 307
        19 38 72 139 263 485 903 1751 3536 7282 15003 30691 62449 127086 259832 534432 1103901 2281810 4701898 9626407 19531031
        7 14 32 58 84 97 79 7 -147 -416 -838 -1456 -2318 -3477 -4991 -6923 -9341 -12318 -15932 -20266 -25408
        -1 13 36 65 99 139 188 251 335 449 604 813 1091 1455 1924 2519 3263 4181 5300 6649 8259
        19 29 31 27 21 19 30 75 231 764 2438 7135 19006 46526 106073 227986 466399 914279 1724577 3136463 5501023
        8 14 38 95 203 383 659 1058 1610 2348 3308 4529 6053 7925 10193 12908 16124 19898 24290 29363 35183
        -9 -18 -19 -2 42 134 336 799 1827 3947 7969 15027 26651 45129 74986 127739 234931 480152 1071709 2497940 5843812
        1 2 6 20 57 149 367 848 1829 3688 6992 12552 21485 35283 55889 85780 128057 186542 265882 371660 510513
        19 26 49 115 277 640 1410 2974 6028 11792 22384 41477 75463 135555 241668 429671 764877 1366666 2452191 4411515 7932621
        18 18 12 -2 -26 -62 -112 -178 -262 -366 -492 -642 -818 -1022 -1256 -1522 -1822 -2158 -2532 -2946 -3402
        20 47 92 163 281 493 889 1625 2954 5267 9146 15431 25303 40385 62863 95629 142448 208151 298856 422219 587717
        8 25 63 142 290 541 933 1506 2300 3353 4699 6366 8374 10733 13441 16482 19824 23417 27191 31054 34890
        -3 10 33 61 89 112 125 123 101 54 -23 -135 -287 -484 -731 -1033 -1395 -1822 -2319 -2891 -3543
        0 6 34 97 214 418 769 1377 2440 4302 7536 13057 22270 37258 61015 97729 153120 234838 352926 520353 753622
        3 6 21 61 161 390 865 1780 3476 6607 12522 24112 47605 96194 197051 404364 822757 1648136 3237095 6222123 11698781
        -3 6 24 52 102 210 465 1062 2386 5146 10618 21150 41290 80351 158174 317705 651388 1354197 2825776 5860072 11987885
        -6 1 25 68 128 196 258 321 490 1123 3092 8203 19921 44787 95443 197247 402536 820630 1679579 3451173 7100776
        16 28 52 87 138 238 491 1150 2759 6421 14320 30749 64118 130805 262403 519191 1015136 1964740 3772294 7204873 13731480
        17 29 45 63 93 169 357 759 1519 2853 5169 9451 18313 38575 86999 202117 467101 1051637 2285101 4779391 9628013
        17 24 30 38 66 166 448 1107 2455 4974 9440 17236 31101 56807 106721 207074 412313 832592 1684894 3385342 6711128
        5 12 21 37 65 110 177 271 397 560 765 1017 1321 1682 2105 2595 3157 3796 4517 5325 6225
        15 33 67 137 276 542 1055 2084 4236 8841 18684 39306 81179 163152 317662 598301 1090421 1925537 3300345 5501199 8934878
        17 33 56 88 146 275 564 1183 2471 5124 10576 21774 44787 92171 189935 391680 806673 1654423 3368668 6791624 13529572
        14 20 29 41 57 85 155 359 952 2587 6822 17155 41070 94032 207286 443115 924585 1892777 3814446 7578544 14842554
        19 33 47 61 75 89 103 117 131 145 159 173 187 201 215 229 243 257 271 285 299
        9 35 74 126 191 269 360 464 581 711 854 1010 1179 1361 1556 1764 1985 2219 2466 2726 2999
        4 1 -3 -8 -14 -21 -29 -38 -48 -59 -71 -84 -98 -113 -129 -146 -164 -183 -203 -224 -246
        8 22 49 111 240 488 962 1896 3776 7544 14922 28916 54583 100178 178876 311485 531164 892610 1491347 2505101 4281102
        19 25 35 58 109 213 416 814 1624 3340 7055 15121 32534 69903 149820 320260 681865 1441415 3012595 6198864 12513843
        16 24 31 39 50 66 89 121 164 220 291 379 486 614 765 941 1144 1376 1639 1935 2266
        -3 2 26 80 175 322 532 816 1185 1650 2222 2912 3731 4690 5800 7072 8517 10146 11970 14000 16247
        3 23 67 152 306 588 1137 2277 4718 9906 20588 41671 81467 153429 278496 488178 828525 1365137 2189385 3426026 5242408
        4 14 34 69 135 276 589 1253 2558 4930 8948 15349 25017 38952 58215 83845 116744 157526 206326 262565 324667
        -2 5 32 87 178 313 500 747 1062 1453 1928 2495 3162 3937 4828 5843 6990 8277 9712 11303 13058
        10 14 18 22 26 30 34 38 42 46 50 54 58 62 66 70 74 78 82 86 90
        -4 7 31 65 109 181 344 747 1693 3774 8172 17357 36698 78069 167555 361054 774146 1636229 3383653 6812237 13315587
        4 3 -1 0 27 122 368 939 2212 4999 11017 23842 50835 106942 221926 453569 910780 1792467 3450595 6489188 11915283
        -5 4 19 33 35 10 -61 -201 -437 -800 -1325 -2051 -3021 -4282 -5885 -7885 -10341 -13316 -16877 -21095 -26045
        -1 -2 3 28 89 197 347 503 579 416 -245 -1794 -4787 -9985 -18397 -31327 -50425 -77742 -115789 -167600 -236799
        4 16 37 72 137 274 567 1154 2230 4036 6829 10828 16131 22598 29695 36294 40424 38968 27301 -1136 -55331
        2 13 42 101 214 443 933 1986 4193 8694 17720 35731 71758 144096 289487 580743 1159992 2300323 4517950 8772093 16813322
        19 28 42 73 149 325 716 1577 3466 7551 16174 33877 69240 138092 268946 511891 952661 1734206 3088826 5384809 9192551
        2 12 44 108 210 343 470 500 267 -468 -1961 -4318 -7079 -8198 -1557 28951 123080 374933 1000696 2486171 5904680
        12 21 55 131 278 562 1132 2306 4725 9607 19136 37035 69422 126176 223308 387327 663438 1130801 1930337 3314239 5732378
        3 25 68 152 326 684 1385 2692 5067 9394 17455 32857 62708 120511 231130 439616 827811 1547071 2883854 5389714 10131642
        2 15 40 71 109 177 336 710 1539 3290 6867 13972 27680 53302 99621 180597 317648 542625 901610 1459677 2306767
        2 0 9 39 112 282 671 1538 3403 7244 14765 28683 52886 92176 151206 232390 333580 449312 586517 820327 1443696
        3 -2 -7 -12 -17 -22 -27 -32 -37 -42 -47 -52 -57 -62 -67 -72 -77 -82 -87 -92 -97
        -4 3 32 100 230 468 924 1844 3714 7393 14277 26519 47387 81978 138840 233850 399463 706075 1309191 2548656 5147939
        10 12 8 -1 -4 25 132 388 894 1786 3240 5477 8768 13439 19876 28530 39922 54648 73384 96891 126020
        -1 -2 -1 15 76 237 590 1278 2507 4563 7879 13270 22570 40087 75597 150131 306718 629679 1278058 2541040 4924779
        6 11 37 93 189 349 636 1199 2368 4855 10167 21409 44779 92290 186698 370476 722452 1389717 2651819 5056495 9717067
        18 24 33 47 67 97 163 363 978 2701 7081 17332 39723 85844 176135 345170 649306 1177438 2065745 3517469 5828939
        18 35 65 129 273 595 1288 2705 5466 10653 20177 37451 68565 124233 222868 395239 691274 1189695 2011305 3336893 5430881
        8 16 22 39 105 300 779 1846 4105 8744 18060 36461 72466 142823 281093 555533 1106071 2219890 4483805 9086663 18409344
        -2 -6 -10 -14 -18 -22 -26 -30 -34 -38 -42 -46 -50 -54 -58 -62 -66 -70 -74 -78 -82
        17 32 61 125 265 555 1131 2256 4457 8803 17454 34711 68956 136139 265959 512819 975397 1831886 3403551 6268573 11463055
        4 20 45 80 138 264 573 1311 2944 6280 12629 24006 43382 74988 124677 200349 312444 474508 703837 1022204 1456674
        19 35 60 97 147 205 256 271 203 -17 -484 -1323 -2693 -4791 -7856 -12173 -18077 -25957 -36260 -49495 -66237
        15 26 56 115 223 439 909 1947 4181 8823 18169 36525 71936 139470 267591 510765 974681 1866797 3596898 6974250 13586527
        15 20 22 31 65 150 327 680 1422 3125 7280 17566 42555 101170 233169 518440 1111279 2299649 4605667 8953841 16950205
        6 10 13 20 47 146 449 1238 3054 6878 14462 28969 56209 106944 200990 374179 689670 1255626 2251915 3969258 6865147
        12 20 28 45 98 239 551 1158 2254 4193 7746 14769 29806 63702 141370 317903 711064 1565202 3374044 7111009 14650730
        7 27 74 167 335 632 1161 2107 3779 6661 11472 19235 31355 49706 76727 115527 169999 244943 346198 480783 657047
        7 14 30 80 206 479 1019 2029 3848 7028 12452 21545 36696 62115 105534 181588 318906 576315 1082463 2134847 4443259
        22 30 37 42 55 117 328 891 2183 4871 10104 19841 37454 68967 125892 232163 441415 879483 1845822 4046547 9108744
        11 29 62 129 272 570 1155 2238 4162 7508 13289 23276 40509 70055 120084 203343 339117 555775 894008 1410875 2184782
        7 20 48 97 183 345 664 1311 2667 5589 11946 25630 54378 112952 228561 449940 862323 1611794 2944352 5267719 9247757
        11 10 20 57 143 310 603 1080 1820 2985 5049 9416 19824 45236 105488 242048 538249 1156912 2409250 4878527 9636677
  recorded_at: Sun, 16 Mar 2025 02:36:13 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/10_pipe_maze.rb?token=ACG6TJ4UKBK3MHY4NQIH7K3H2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '7983'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"662bd584b588cea51fa02d2fdbfdc8def5c7b0f4600601a69ad6543c8ea40a07"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 0DAC:36E58E:2EAF64:380852:67D6391D
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:13 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200160-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092574.552605,VS0,VE316
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - ef5aa379bd1ff9916e03a39f450f62e47da4875d
      expires:
      - Sun, 16 Mar 2025 02:41:13 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        map = DATA.map { _1.chomp.chars }

        sy = sx = 0

        map.each_with_index { |row, y|
          row.each_with_index { |cell, x|
            (sy = y; sx = x) if cell[?S]
          }
        }

        q = [[sy, sx]]
        d = { [sy, sx] => 0 }
        Y, X = map.size, map[0].size
        N = [[-1, 0], [1, 0], [0, -1], [0, 1]]
        M = {
          ?- => { [0, -1] => "-LF", [0, 1] => "-J7" },
          ?| => { [-1, 0] => "|F7", [1, 0] => "|LJ" },
          ?L => { [0, 1] => "-J7", [-1, 0] => "|7F" },
          ?J => { [0, -1] => "-LF", [-1, 0] => "|7F" },
          ?F => { [0, 1] => "-J7", [1, 0] => "|LJ" },
          ?7 => { [0, -1] => "-LF", [1, 0] => "|LJ" },
        }

        map[sy][sx] = ?J if sy > 0 && "|F7"[map[sy - 1][sx]] && sx > 0 && "-LF"[map[sy][sx - 1]]
        map[sy][sx] = ?L if sy > 0 && "|F7"[map[sy - 1][sx]] && sx < X - 1 && "-J7"[map[sy][sx + 1]]
        map[sy][sx] = ?7 if sy < Y - 1 && "|LJ"[map[sy + 1][sx]] && sx > 0 && "-LF"[map[sy][sx - 1]]
        map[sy][sx] = ?F if sy < Y - 1 && "|LJ"[map[sy + 1][sx]] && sx < X - 1 && "-J7"[map[sy][sx + 1]]

        while c = q.shift
          y, x = c
          N.each { |dy, dx|
            yy, xx = y + dy, x + dx
            n = yy, xx
            (0...Y) === yy && (0...X) === xx && !d[n] && M[map[y][x]]&.[]([dy, dx])&.[](map[yy][xx]) && q << n && d[n] = d[c] + 1
          }
        end

        p d.values.max

        inside = -> y, x {
          ys, xs = (y + 1...Y), (x + 1...X)
          l = [ys.size, xs.size].min
          ys.min(l).zip(xs.min(l)).count { d[[_1, _2]] && "-|FJ"[map[_1][_2]] }.odd?
        }

        p Y.times.sum { |y|
          X.times.count { |x|
            !d[[y, x]] && inside[y, x]
          }
        }

        __END__
        -L7F7-J77|-FF7F-.|-JF77FF-FLJF--F--77-77-F|-F77.FF|7-F|-L-LL.L.77F7F-J.F-LFJ7-F|-F7J-F|.F7.FF-7.FJ7FL7F|-F-F---F-FL-F-7J7F.F77.F77FJ.77.L.7J
        J.||L-7FL|.|LF|.7JF-LJF-J7J.|7.F-7FF7F|FF-F-JJ-77J|F.|J-|.|.FL7--F77LJF|-LLL-7J||LJ7-JJ.LJL-J|F77|F-7-J..-F-JLFFFJJ||7|7-F-J7--L7-FJLJLJ-L..
        |-|-JLLJ|LF|-J|FJF7.L7-JFF.-|7L7FLJ|FF-7-J||7L7F7.|.--7-LF7F|F7JF||LLF7L7.7JJ.-FFJ|7||.LJ7.LF-|.F7J.|JF|7J|77.L7JJ7|.F77-J7LJFJ-7.L7L7JJ7-LF
        FF7LF7.FLFL.LL-7|-J.L---|F-.-7JFF-J7FF7JJFFLJF-7F7F7F7.FJF-77JL77.J.|||FJ-7-F7.L7-7L-J-|F-7J|FJ--7-F|F-L.--JL|L|77|JF||L-J7--77--J77F|L.|.|J
        FLJ7FF-F7LLF.FJ7..-L-JJ7|J.FLL-FF7L-LJL|F-LJJJLFJLJL7F7|F|FJ7LFFJFLFFFJJJ7L-JFJJLL|7|---|-7-J7|.-|LLJ7|LF|J7F7-J.LJ7-LJFLL-7.FL7.LF7||.FJ7JF
        L.L|L|7J77LLFL7L--L-7JJJLJ-7J7FJLF.|7F-F-FJJ|.-L--7FJ||F-J|JJ7.F7J|FJ|JJL77FL-.|LF|.F7-LLJ||FF--7F-J-LJ.FJ.LJJ||-.FF7-LL7FL.7JJF7.JL-J-J-L-|
        |7JL7LJ-F777JF-J.FJFL77F||...-7-FJ7F|J-|FJL|7FJLF7|L7|||F7|F7-FJ|L|JF7|F-FJ|.|.7-FJ-|J-.L-LJJJJFJ|L77|-FJFFJJFF|-L7.--.L-F.L7|F7--7F||L7|LFJ
        ||LF|---FJ||JL7.777L777F7-FJ-|L|JF-FJJ7J|JFF7FF-JLJFJ||LJ|LJL7L7L7F-JL-77JJ|-7LF-7.LLJ.FL-|..F--JF7L77F7J-L--|---F7.|||J..|.|7LJ.||LLJF|7FFJ
        -.LJJL-J.FF||L|J..-.|J7||.-7L-77FJ.-.L-.|7FF77L---7L7||JFJF--J-L7|L7F--JJ77FJ|-|-J77.|F7FLF--7-JL|.F.F-J..JJFLJ.-F7---JF7FL--F7LFFL7-|F|F-FJ
        L-7.7J.L-|J77J||7.F-7F-77-L|.LJF--F|7|L7FF7||F7-F-JFJ||FJFJ-F7FFJL7|L7F7JF--77.F7-F7F7-|77L-7|7F7F-7FFJF-JJFFJF|.|JJL|J-LJ-7JJL7J7-|7F|F--J.
        .FF-LF.|FJ.-J.LL-77LLFJLF77F7.F7|.FF77F-FJLJ|||FJF7L-J|L7|F-JL-JF-JL7|||.L-7L7-||FJLJL-7.FFFJL-JL7LL7|-||.LFJJ.FF7JJ.|7..LFL-FJLL7-L--J|L|LJ
        L-L77LF7JL7.F7L|J.|LF|L-|L7||7|L7F--7F7-L--7|||L-JL-7FJFJ|L---7FJF7FJLJL7F7|FJFJ|L7F-7FJ7F7L---7FJF7L|-L7--JFFF-J|..7||-7-|||L7|FL7J|L7J.LL|
        F||..F.JJFL--|F7F7FFFL7-L7||L7L7|L-7|||-F7FJLJL-7F--J|7L7L7F7FJ|-|||F---J|LJL7L7L7|L7LJ-FJL-77FJL-JL77|L|.L-F-|F-J..L||||F-7-.FJ-LJ.|-|.FF.F
        -.7FL7F|||F..-LJ-L--|.F-7|||FJ-||F-J||L7|LJF7F--JL--7|F7L7|||L7L7|||L7F-7L--7|.L7LJFJF7JL--7|FJF----JL77FF7.F-||JJF|7.|JF7FJLF.|JLL-JFLFJL7L
        L7JJ7LF.J7LF7JF7.77L|FL7|||||F7||L-7LJFJL7FJ|L7JF7F7|LJ|FJLJL7|FJ|||FJ|FJJF7||F7|F-JFJL-7F7||L7|F7F7|-FF7JFF7L||.7.F-F--||7FF7-L.7.F7L-7.L-7
        FF-LF--7--.|F--|7JFFF-7||||||||||F7L-7L-7||LL7L7|LJ||F-JL-7F7LJ||||||FJL7FJLJLJLJL-7L7F-J|LJL-JLJLJL-7FJ|F7|L7||F7F-7JLFJL--J|JJL--J-.FLJJJ|
        F.FF7.L|7|-7|.FL--F-JFJ|||||||LJLJL7FJF-JLJF7|FJL-7|||7F7|LJL-7L-J|||L-7|L7F----7F-JFJL-7L---7F-7F7F-JL7LJLJFJ|||||FJF7L7F---JJ|LJ-J.LF.LFF7
        LF-LL7.FF77.FF-.|-L-7L-JLJLJ|L----7|L7L-7F7|LJL--7||||FJL7FF7FJF7FJ||F7||FJL7F-7LJF-JF7FJFF7FJL7LJ||F-7L--7FJFJ|||||FJ|FJL-7J|JF7LFJ|7L|7..|
        LJJJ||-LJFF.L.|-L-|F|F-----7|F--7F|L7|F7|||L--7F-J||||L-7L7|LJFJLJFJLJLJ||F-J|FJF7L-7|LJF-JLJF-JF7LJL7|.F-JL7|FJ|LJ|L7||F--J-F-77JL-FJ.L|.F|
        FFF---7L-|L7F77J|F7FJ|F---7||L7FJFJFJ||LJ||LF7|L7FJ||L7L|FJL-7L-77L--7F7LJL-7|L7|L7FJL-7L7F7FJF7|L-7FJL7L--7||L7L-7L7|LJL--77..L7F-7JF|.L-J|
        L-|7L-|J-FFJFL-F-J|L7||F-7LJ|FJ|LL7|FJL7FJL7|||FJL7||FJFJL-77|F-JF7F7LJL---7LJFJ|FJ|F--J|LJ|L7|LJF-JL-7L7F-J||FJF7|FJ|F----J7-|L|FL---JJJ.LF
        LL|7J.|-F-L-J|7L-7|.LJ||JL-7||FJF-J|L7FJL-7|||||.FJLJL7|F7FJFJL7-||||F7F---JF-JFJ|FJL-7F-7FJFJ|F-JF7F7|FJL7FJ||J|||L-JL----7J|L-L7.|7|.L7FFF
        L|.|JFL7J7LL7|LJFJL--7LJF7FJLJ|.L-7|FJL7F7|||||L7L--7FJLJ|L-JF-JFJ|||||L--7FJF7|FJ|F--JL7|L7|J|L-7||||||F7|L7|L7|LJF--7F---JJF7|7LFFJ-7.J7LJ
        FLLFJFL|7|7.F|JFL-7F7L7FJLJF-7L7F-JLJF-J|||||LJFJFF7||F7||F-7|F7|FJ|LJ|F7|||FJLJL7|L-7F7||7|L7|F-J|LJ|||||L7LJFJL7FJF7LJ.F---JL77F7LJJ|7|F-L
        |FL.F-7.|JF7F|LFLFJ|L7LJF--J.L7|L7F-7L--J|||L-7|LFJLJLJL7LJFJLJLJL-JF7||L-JLJF7F-J|F-J||||FJFJ|L-7L-7||||L7L-7|F7|L-JL--7|F----JL-|J|F77|J7|
        L|L7LLJ-F7.LL--FJL-JFJF-JF7F7F|L7LJ.L--7FJ|L7FJL7L--7F-7|F7|F-7F7F--JLJL7F-7FJLJF-J|F7||||L7|L|F-JF-J||||FJF7|LJLJF7F7F7LJL7F-77FL|F7-F7F-JJ
        F|7J-FJ7LLF7J.||F|LLL-JF7|LJL7|FJF7F---JL7|FJL7FJF7FJL7LJ||LJFJ|LJF--7F7LJ7|L-7FJF-J|LJ|||7|L7||F7L-7LJ|||FJ||F---JLJLJL---J|FJ7J-FF7LLF77|7
        -7JJ.J-|-J.J-L77-J7FF--J|L--7||L7||L--7F-J||F7||FJ|L7FJLFJL-7L7L7J|F-J|L7F7|F-JL7L7|L-7||L7L7LJ||L7|L7FJ||L7||L---7F-7F7F---J|F7JF7||7.L|FF7
        LJ7.7.F777FJ7.-JJ.L-L--7L7|FJ||FJ||F--J|F-J|||||L7L7||F7L7F-J-L7L-J|F7|FJ|||L7F7|FJF7FJLJFJFJF-J|FJF-J|FJL7|||F---J|FJ|||F--7LJL-JLJL7JFL7.7
        |--7.FFL-JLFF7|..7.|7F7L7L-JFJ|L7||L--7|L-7LJLJL7L7||LJ|FJ|F7LFJF7FJ||||FJLJFJ|LJL7||L7F7L7L7L7J|L7|F-JL-7||LJL-7F7||FJ||L-7L---7F7F-JJ7-F-|
        J-LL7F|.|.-LLF7.F7-F-J|-L--7L7L7||L7F7|L-7L--7F-JL|LJF-JL7|||FJFJLJFJLJ|L-7FJ.L--7||L7LJ|FJLL7L7|FJ||LF7FJ||F--7LJLJLJFJ|F-JF--7||LJJLLF-JJ|
        .|.L7FFF7F.FFJL-JL7L-7|F7F7L7|F|||FJ|||F-JF77|L-7FJF-JF-7|LJ|L7|F--JF--JF-JL-7.F7|||FJF7||LFFJFJ|L7|L7||L7LJL7FJF--7F7L-JL7L|F-J||JFL.FL7FF|
        FJJ7LFJJ7.FFL----7L7.|||LJL-JL-J||L7|LJL7.|L7L7FJ|FJF7L7|L-7L7|||F--J.F7L7F--JFJ||LJL7|LJL7FJFJL|FJL7|||L|F--JL7L-7LJ|F7F7L-JL-7LJ7F--7FF|-J
        ||L--LL-FFF-7JF7.L7L-J|L------7FJ|FJL7F-JFJFJ.|L7|L7|L7||F7|FJ||||F7F7||FJ|F77L7|L-7FJL7F-JL7|F7||F7|||L-JL---7L--JF7LJLJL7F7F-JF7-F7J|J.|J7
        L77L7|J7F7L7|F||F7L--7|F------JL-JL7.||F7L7|F7|FJ|FJL7|||||||-|||||||||||FJ||F7||F7||F7||LF7||||||||||L7F-----JF7F7|L7F7F7|||L7|||7.|F.|.|||
        FLJ7FF7F7F-JL7||||F7L||L----7F7F7F7L7||||FJ|||||FJ|F-JLJ||LJL7|||||||||||L7|||||||||||||L7|||||LJLJ||L7|L--7F-7|LJLJFJ|LJ|LJL-JFJL7J7|7.F7-F
        FJF|-JF|LJF-7LJLJLJL-JL-----J|||LJL7LJ||LJ7||||||FJ|F7.FJ|-F-J|||LJ|||||L7||LJLJLJ||||||FJ|LJLJJF--JL7|L7F-JL7||F---J-|F-JF-7F7L7FJ7|LL7LF.|
        ||-JJ|LL7FJ-L--7F7F-7F7F--7F7|LJJF7L7FJL--7||LJLJL7LJL7L7L7|F7||L-7||||L7||L--7F--J|||||L7|F-7F7|F7F7|L-J|F-7|LJL7F---JL--JFJ|L-JL7-L--7JF-J
        L|L7.F|FLJLF7F-J||L7LJ||F-J|||F--JL-J|F7F-JLJF----JF-7L7|FJ||LJ|F-J||||FJ|L7F7||F-7|||||FJLJFJ|LJ||||L7F-J|FJ|F--J|F---7F--JFJF---J|.L7J7.LJ
        FJ7.7-|J7LFJLJF7|L-JF7LJ|F7|LJL-----7|||L---7L-7F7FJ-L7||L7||F-JL7-LJ|||FJFJ||||L7||||||L7F7L7L7FJ|||FJL--J|J||F7|||F7-LJ|F-JFJF7F77F7FF--F7
        F-LFJJLLF7L--7|||F--JL-7LJLJF7FF----JLJL-7F-JFFJ||L--7|||FJ||L7F7L7F7LJ|L7L7||||FJLJ||LJFLJ|FJFJL7LJLJFF7F7L7|LJL7|LJL7|F7|F-J7|LJL---7J|7LL
        L.|LJJFFJ|F-7|||||F7F-7L--7FJ|FJF7F7F7F7-LJF-7L7|L-7FJ|||L7||FJ|L7LJL-7L7L7||LJLJJF7|L7F---SL7L7FJF----JLJL7LJF-7LJF-7L7||||F--JF-----J7-J7.
        L7-|7LLL7||FJ|||||||L7L7F7|L7|L-JLJLJLJL---JFJ|||LFJL7LJ|FJ|||FJ|L7F--J-L7|||LF-7FJLJFJ|F7F7FJL|L7|F------7|F7L7|F7L7L7LJ||||F--JF--7F7J|.|.
        FJF|FFFJ||||LLJLJLJL-JLLJ||FJL---7F-7F--7F-7L7FJ|FJF7L7FJL7||||F--JL----7|||L7L7LJF-7|FJ||||L-7|FJLJF--7F-JLJL-JLJL-JFJF-J|LJL---JF7LJL7FL|L
        |L-|LF--JLJL7F7F7|F7F---7||L----7|L7|L7|LJJL7|L7||FJ|FJL7FJ||LJL7F7F7F--J||L7L7L-7|FJ||FJLJ|F7||L--7L-7|L----7.F--7F7L-J7FJF------JL7F7|7|LJ
        F7FLJL---7F7LJLJL-J|L7F7LJL-----JL-JL-JF7LF7LJJLJ||FJL7-|L7|L7F-J||||L--7|L7L7|.FJ||FJ|L-7FJ||||F--JF-JL--7F7L-JF-J||F---JFJF7F7F--7LJLJJL7.
        -7FLF-|LF|||F7F7F-7|7LJL------7F------7|L-JL----7||L-7L7|FJ|FJ|F7||||F7FJ|FJL|L7L7||L7L-7||FJ||||F--JF---7LJL7F7L7FJLJF--7L-JLJLJF7L7LFLJ.J.
        FF-J|FJ.-LJ||||LJFJ|F7F------7LJF7F---J|F-7F7F-7|LJF-JFJ||-LJFJ|||||LJ||JLJ7FJFJFJ|L7L-7|||L7LJLJL---JF-7L7F7||L7LJF-7L77L7F7F7F7|L-JF-77FL7
        |7J--JJFJF-J|LJF7L7|||L-----7|F7||L----JL7LJ|L7|L-7L-7L7||F7FL7|||||F-JL-7F-JFJ7L7|FJF7|LJ|FJF7F-----7L7L-J||LJ.|F7|LL7L-7LJLJ|||L--77.FJJF-
        F7JL||F7|L--JF-JL-JLJ|F7|F7FJLJLJL7F-7F-7L-7L-JL--JF-JFJ|LJL7FJ||||||F7F7|L-7L--7LJL7||L-7LJ-||L----7|FJF7-|L--7|||L77L-7L---7LJ|F-7L--7JJJ.
        J|FF|-7|F7LF7L-7F---7LJL-JLJF7F--7|L7|L7|F7L---7F7FJF7L7|F-7||FJ||||||||||F-JF--JF7|LJ|F-J-F7||F7F7FJLJFJL-JF7FJLJL7L7F-JF7F7L-7|L7|F7FJLLJ7
        LL-|||F-JL-J|F-J|F--JF7F-7F-JLJF-JL-J|FJLJL7F--J||L7||FJ|L7LJ|L7LJLJ||LJ|||F7L7F-JL---JL-7FJLJLJLJLJF--JF---JLJFF--JFJL-7||||F-J|FJ||LJ||LFJ
        ..|L-F|F---7|L--JL--7|||FJ|F---JF--7JLJ|F-7|L--7|L7|||L7L7|.FJFJF---JL7.LJ||L-JL--7F-7F--JL-7F7F7F--JLF7L----7F7L---JFF7LJLJ|L7|LJFJL--77--J
        7-L7JL||F7FJL----7F7||LJL7|L7F7FJF-JF7F7|FJ|F-7LJFJLJL-JJ|L7L7L7|F7F-7L-7JLJFF7F--J|FJ|F7F7FJ|||||F---JL-----J|L7F7F-7|L---7L7L--7L--7FJ|..7
        L-J.7-LJ|LJF7F--7|||LJF7-LJ|LJLJFL--JLJLJ|7||7|F-JF7F---7L7L7L7|||||FJF-JF7F7|LJF7FJL7||LJ|L-JLJLJL7F7F7F7F7F7|FJ|||FJ|F---JJL7F-JF7JLJ||-7J
        .||LF--7L--JLJF-J|||F7|L7F-7|F--------7F7L7|L7|L--JLJF-7|LL-JFJ|||||L7L-7||||L--J|L-7LJL-7|F7F7F7F7LJLJLJLJLJLJL7|LJL-JL7F7J.|LJF-J|-L-7JFJ7
        .F7-L-7L7F7F--JF7LJ|||L7|L7L7L-------7LJL-JL-J|F7F7F7L7|L--7FL-JLJ||||F7||LJ|F7F7L--J|F--JLJLJLJLJL---7F--------J|F----7LJL7F-7J|F-J||L|LFLF
        .FJ-F7L7LJ|L---JL-7||L7||7L7|F--7F---JF7F---7LLJLJ||L-JL--7L7F77|.LJFJ||||F7LJLJL7F7F7L7F7F7F7F--7F--7|L---------JL---7L---J|FJFJL7.J7---7|.
        -F|J||.L-7|F7F----J||FJ||F7||L7FJL----JLJF--JF7|F7|L-----7L7LJL7J7-LL7|||LJL--7F7LJLJL7LJLJLJ||F-J|F-JL---7F-7F7F-7F-7L---7FJ|FJF7L7JFF-LL77
        |J|F||F--JLJ|L-7F-7LJL7|LJLJL-JL------7F-JF7FJL-J||F7F-7FJFJF--J--77.LJ||F--7-||L7F7F7|F---7LLJL--JL-----7LJFLJ|||LJFJF---J|FJ|FJL-J7F7-7.|-
        --F7||L----7L7FLJFJF-7LJF-7F-7F7F7F7F7LJF-JLJF-7FJ||LJJLJ7L-JJLL-7.-JLLLJ|F7L-J|FJ|LJ||L-7FJF7F----7F---7L----7LJF7JL-JF77FJL7|L-7F7FJL7L-F.
        |FJLJ|F7F--JFJF--JFJ-L-7L7LJFLJ||LJLJL--JF7F7|||L7|L-------77L7|-F77|J|J-LJL---J|FJF7|L--JL7||L---7|L--7L-----JFFJL7F7FJL7|F7LJF7LJLJF-J-L-7
        FL--7LJ|L--7|-L--7L--7F|FJF-7F7||F---7F--JLJ|L7|FJL7F7F7F--J7.F-7L|-LF7FF.LF7F--J|||LJF-7F7LJL----J|F7LL-------7L7FJ||L7FJ||L--JL-7F7L-7-JFL
        |JLFJF7L77FJL-7F7|F--JFJ|JL7LJ|LJL--7|L-7F-7L7|||F7LJ|||L---7.J|FFF7LJJFL-FJLJF-7|FJF7L7|||F7F7F7F7LJL------7F7|FJL-JL-JL-JL----7-|||F-J.FL|
        |L|L-JL7L-JF-7LJLJL7F7|FJF7L-7|7F-7FJL7FJ|FJJLJLJ||F7||L----J7F||F7J|7||||L--7|F||L-JL-J||||LJ||||L7F7F---7|LJLJL7F----7F-7F----J.LJLJJFF7||
        F.FF---JF7FJFJF---7|||LJFJ|F-JL7L7|L-7|L-JL-----7|LJ|LJF7F7LF7-JL7JJL7FJ-JFLFJ|FJ|F-----J|LJF7LJLJFJ|||F--JF---7J||F7F7LJLLJF--7J.F7|F|F--F7
        LFJL7F7FJ||FJFJF-7LJ||LFJFJL7F7L-JL--JL----7F---J|F-JF7|LJL-J|7FL77.|F77|LLJL7||FJL-7F-7FJF-JL----JFJ||L---JF--JFJLJLJL-----JF7L--JL-77J7.J.
        -7.LLJLJ7LJL7|JL7L7F||FJFJLFLJL-------7F--7||F---JL7FJ||F7F7FJ777FJF|L|-JL|JFJ||||F7||FJ|JL--------JFJ|F----JFF7|F-----7F7F7FJ|F7F---J.7J.F|
        L-J.FFF-----JL7.L7|FJ|L7|F7F7F7F7F----J|F-J|||F----J|FJ||LJLJJ|LJ.L--7|-L7JFL-JLJFJLJ|L7|F-----7F--7L-JL---7F7|LJL----7|||||L7LJ|L---7F|-|7F
        ||.--FL-7F-7F-JF-J|L7|FJLJ|||||||L-----JL-7LJ||F7F--JL-JL7F7J||7.|-JF|-J||L|.|.FFJF7FJ.LJL7F7F7LJF7L-------J|||F------JLJLJL-JF-JF7F-J7JF-JJ
        F77L7F--J|FJ|.FJF7L-J|L--7LJLJLJL7F-------JF-JLJLJF-7F7F7LJ|7F|7--FJ-7..|77FF-F-JFJ||F--7L||LJL--J|F7F------JLJL-----7F-----7FJF-JLJ|LF7.|LL
        7L7-FL-7FJL7|FJFJL--7|F--JF-----7|L7F------JF7F-7FJFJ|LJL-7L-7J.7J.J.L7-J-|JJ7L--JJLJ|F7L7LJF--7F7||LJF-7F-7F--------JL7F7F-JL-JF7F--7JFL-.L
        |-7--F-JL7F||L7|F---JLJF-7|F--7FJL-J|F--7F--JLJJLJ-L7L---7L7FJ---FF.|7||L7J.7-|-L-F7-LJL7|F7L-7LJLJ|F7L7|L7LJF7LF---7F-J|LJFF7LFJ||F-J7|-|77
        |F-7.|F7FJ-LJ.LJ|F7F7F7|FJ||F7LJF7F-J|F7LJ7F-------7L7F-7L7LJJL.L7J--JLL-J-F|F|-7FF---7FJLJL-7|F7F7||L-JL-JF7|L-JF7FJ|F7L7F7|L7|FJ|L--77-|FJ
        F77F7LJ|||.L|F7.LJLJ||LJ|FJLJL7FJLJF7LJL--7L7F7F--7|FJ|7|FJJJJ.FFF7JJL7|F7LLJFF-LLL--7|L7F--7|LJLJLJL------JLJF--JLJJ||L-J|||FJ||L|F--J77LFJ
        FF-||-LLJ7L.FJ|F----JL7FJ|F---J|F--JL-----JFJ||L-7||L7|FJL7JFFFF7||7.F7JJLJ|7|J-|.LF7|L-JL7FJL------------7F-7L7F7F--JL7F7|LJL-JL-J|F|JL-7L-
        L|.|7FJ-|F|-L7|L------JL-JL7F--JL7F-----7F7|FJ|F7|||FLJL--JF7F7||||7JJLL77LL7|.--7FJ||F7F7|L-7F7F7F----7F7LJLL7LJLJF--7LJLJF------7L7--LJL7|
        F|---F-||-7.FJL---7F-7F7F7FJ|F---J|F---7LJLJL7LJLJLJF7F--7FJ||||LJL77.||L--FL-7L.-L7|LJLJLJ-FJ|LJLJF--7LJL--7FJF7F7L-7L7F-7L-----7L-JJ7LJ.|-
        LJFJ-JLFJ-7F|F---7|L7LJLJLJFJL----JL--7L7F7F7L77F7F7|||F-JL7LJ||F--J7-J7-|F-J--7F|.|L7LF7.F-JFJJF--JF7L-----J|FJLJ|F-J7|L7L7F--7FJJJFF-FJFJ|
        J||J.LFJ-LF-J|F--JL-JF-7F--JF7F-----7FJ|LJLJL7L7|||||||L7F-JF-J|L---7|LF-777.LFF7F7|FJFJL7L--JF7L---JL7F----7LJF--JL--7|FJ7|L-7LJJ7F|J7..LF7
        |-|J.7---JL--JL7F7F-7||LJ|F-J|L7F7F7LJF7JF7F7L7LJLJLJ||FJ|F7L7FJF--7L-7|FJJF-7F||||||FJF-JF-7FJL-----7LJ|F--JF7L---7F-JLJF7L--JF7-F7LJF77..J
        F-7.-J7||-|7F-7LJLJF||F---JF7L7LJLJL--JL-JLJ|-L------J|L7LJL7||FJF7L--J||F7L7|F|LJ|||L7|F7L7LJF-7F7F7L-7FJF--JL7F-7LJF---JL-7F7|L7777-L|-|-J
        L-7-|LFLJ|.FL7|F----J|L----JL7|F7F---------7L-7LF-7|F7L7L7LFJLJL-J|7F7FJLJL7|L7L-7|||FJ||L7L--JJLJLJL-7|L7L7F--JL7L7FJF-----J|||FJF77.LL7|.|
        |||-J-JL-JFF-J|L-----J|F7F--7||||L-7F7JF7F7L-7L7L7L-JL7L7L-JF-----JFJLJF---J|FJF-JLJ|L7||FJ-F7F-7F7F--JL7|FJ|F-7F|FJ|FJ|F7F7FJLJL-J|-|L|J7.|
        FLJ7L|L|.F-L-7|F7-F7F7FJLJF7LJLJL-7LJL-JLJ|F7L-J.|F---JFJF-7L--7F-7L--7L7F7L|L7L7F-7L-JLJ|F7||L7|||L---7|||FJ|FJFJL-JL-7|||||F--7F7L7JF--FF7
        F-J7FJ-F-7-F-J||L-JLJLJF--JL---7F7L-7F--7FJ|L7F-7||F-7FJFJL|F-7LJFJJF7L7LJ|FJFJ-LJ.|F-7F7LJ|||FJ||L7F-7|LJ|L-JL-JF7F--7||LJLJL-7||L-JJ7|-F.J
        |7FLL-FL7|7L7FJL-------J-F-----J|L-7||F7||.L7LJFJ|||FJL7L-7||-L7FJJFJL7|F-JL7|F7F7FJ|FLJ|F7LJ|L7|L7|L7|L--JF--7F-J|L-7|LJF--7F-JLJLJ7J|.|JF.
        7F|7JF--JL--JL-7F7.F7F7F7L7F-7F7|F-JLJ||LJF7|F-JFJLJL7FJF7||L77LJF7|F7|||F7FJ||||||FJF7|LJL-7L-JL-JL-JL---7L-7|L-7|F7||F7L-7|L-7J|FL|.J7FFJ7
        L-JLFL7F7F-7F-7LJL7|LJLJ|FJ||LJLJL----JL--JLJL--JF7F7LJFJLJL-JF7FJ|LJ||||||L7|||||LJFJL-7F-7L-7F7F-7F7F7F7L--JL7FJ||LJ|||F7||F7|-LF-F--J-JLJ
        7J.FJ-LJ||FJ|FJF7FJL---7|L-JF7F---------7F7F-7F7FJ|||F7L--7-F7||L7L--J|||||FJLJ||L7FJF--JL7L-7LJLJ7LJLJ||L----7LJFLJF7LJLJLJLJLJL-JL|JFJ|7.J
        |-FJ.|JFLJL7|L-J||.F---JL---JLJF-7F----7||||FJ|||-LJ|||F7FJFJ||L7L---7|||||L--7||FJL7|F7F7L-7|JF77F----J|F-7F7L-----JL--------7|F|F77JJLF7-|
        L.L-77F-J|LLJF7FJL7L--7F7F7F-7FJ.LJF-7FJ|||||FJ|L-7JLJLJ||FJFJ|FJLF7FJLJ||L-7FJLJ|F-J|||||F-JL-JL7|F7F--JL7||L7F---7F7F7F-----JF7-||F-7.L||L
        .7.7JF|7JF-7L|LJF7|.F7LJ||LJFJ|F---J7LJ7LJLJ|L7|F7L----7LJL7L-J|F7||L-7FJ|F-JL7F-JL-7LJLJ|L----7FJLJ||F---JLJJ|L-7JLJLJ|L--7F-7||FJLJFJ7.LFJ
        J7F|F-.J-L7|-L-7||L-JL--J|F7|FJL---7F------7L7|LJL7F7F7L-7FL7F-J||||F-J|J||.F-JL7LF7L7F--JF-7F-JL--7LJL7F7F-7FJF7L-7F7.L--7LJFJ|||F7FJ-|-FL-
        L--|-7-|..|L--7||L7F7F7F7|||||F----J|F-7F--JFLJF7-LJLJL7FJF7|L7FJLJ|L7FJFJL7L--7L7||FJ|F-7L7|L----7|F7.LJLJFJL7||F7LJL7F7FL--JF||||LJ-LJ.777
        F-FJ.L.L-FJF-7LJL7||||LJLJ||LJL-----J|FJL---7F-JL-7F7F7LJFJLJFJ|F-7L7|L7|F-JF7FL7|||L7LJFJFJL--7F-JLJL----7L-7LJ|||F-7LJL-7F---JLJL7J|7F--J7
        |L|F7|F-FL-JFJF7FJLJLJ-F--J|-F7F7F7F7|L-----J|F---J|||L-7L--7L7LJFJFJ|FJ|L77||F-JLJL7L7FJFJF7F7LJF-------7L-7L-7|||L7L7F--JL7F7F-7FJ-F|||JLJ
        F-F-JF-F7-F-JFJ||F-----JF-7|FJLJLJLJ|L7|F--7FJ|F7JFJ|L7FJF-7|FJF7L7L-JL7|FJFJ|L----7L7||LL-JLJL--JF7F7F7JL-7L--JLJ|FJFJ|-F7L||LJL|L77LL-JL.|
        L..FLL-|L7L7FJFLJL--7F--JFJLJF-7F7F7L-JFJF-JL7LJL7L7|FJL7L7|||FJ|LL--7FJ|L-JFJF7F--JFJ|L7|F7F7|F--JLJLJL7F7L---7F7LJ|L7L-JL-JL7F7L-JJF|7J.JJ
        L77|F|.L7L-JL-7F--77LJF7FJF--JLLJ||L-7FJFJJF7|F--JFJ|L7FJFJLJLJFJF7F-JL7L7F7|F|||F-7L7L7L-JLJL7L--7F7F-7LJL7F7FJ|L7F-7L7F7F--7LJL7F7LF7777JJ
        -.LJL|77L--7F-JL-7|F7.||L-JF7F7F-J|F-J|FJF7|||||F7L7L7||FJF-7F7|FJ|L--7L7||LJFJ|LJFJFJJL7F----JF7FLJ||FJF-7LJLJ-|FJ|FJ||||L-7L7F7LJL-JL-7|F7
        |L|JJL|FJLF||J.LFJLJL7|L-7.|LJLJF-JL-7|L7||||||FJ|FJFJ||L7L7LJLJL7|F-7|FJ|L7FL7L7JL7L7-FJL-7F--JL-7FJ|L-JFJF7F7FJL-JL7FJ||F7|FJ||F--7F-7|-||
        |7|JFFL7JFFLJLFFJF--7||F7L-JF-7FJFF-7||FJ|||||||FJL7L7|L7L7|F7F77||L7LJ|L|FJF7L7|F7L7L7L7F-JL---7FJL-JF--JFJLJLJF----JL7|LJLJL7||L7-|||LJ-|7
        7-7-L-LL|F7-F7FJFJF-JLJ|L7F-JFLJF7L7LJ|L7||||||||F7|FJL7|FJLJ||L7|L7L-7L7|L7||FJ|||FJFJL|L-7F7F-JL7F7-L7F-JF7F--J7F7F7J|L---7-LJ|FJ-LJF|.F77
        JFLJ...F||.|||L-JFJF7F7|FLJF7F7FJL-JF7L7|||||||||||||F7|||F--JL7||FJF7|FJ|FJ||L7|||L7|F7|F-J||L-7FJ||F7LJF-JLJJF7FJLJL7L----JF7FJL7LLJ77FJLJ
        FJ-LL7--.FLFJL---JFJ||||F--JLJ|L--7FJ|FJ||||||||||LJ|||||||F7F7||||FJ|||FJ|FJ|FJ||L7||||||F7|L7FJL7||||F7L----7||L7F-7|F7F7F-J||F-J7.JLFF--J
        LJ.7L--L7FLL--7F--JFJ|LJL7F7F7L---JL7|L7||||||||LJ7FJ|LJLJ||LJ|||||L7|||L7|L7||FJL7||||||LJ||.||F-J|LJ||L7F---J|L-JL7|LJLJLJF7|LJ7-F7-L|..LJ
        FF-F-7F.L-F-J|LJF--JFJ|F7LJLJL7F7F-7||FJ|||||||L7F7|FJF77FJL7FJ|||L7|LJ|FJ|FJ||L7FJLJ|||L-7|L7||L-7L7FJ|FJL----JF7F7||F7F-7FJ|L7.J.L7-F-J7J7
        F7.J7L7J.FJ-J|LFJF-7|F-JL7F7F7||||FJ|LJFJ|LJ||L7LJ|||FJL-JF7||FJ||FJ|F-J|FJ|L|L7|L7F-J|L7FJ|FJ|L7F|FJL7|L7F-7F7FJLJLJLJLJ|LJFL7|JL|7L7J|---|
        .|-J7-7J7-L|JJJL-JFJ|L7F7LJLJLJ|||L7L7FJFJ|FJ|LL7FJLJL7F-7||||L7||L7||F7|L7L7|FJ|FJ|F7L7||FJ|FJFJFJL-7|L7|L7LJ|L---7F7F-----7-LJJ.|J7|-77L7|
        LF7-|7..JFF7F||L|LL7|FJ|L7F-7F-J|L7|FJL7|LFJFJF-JL-7F-JL7|||||FJLJFJ|||||.L7|||7LJ7||L7|||L7|L7|FJF7FJ|FJL7L-7|F7F7LJLJF----JJ7LJ-JLL-7L7LLJ
        |LL7JL--L-J-LF7.|J-LJL7|FJ|FLJF-JFJLJF-JL7L7|FJF-7FJL-7FJ|||||L-7FJFJLJLJF-J||L---7LJFJ|||.||L|||FJLJL|L7FJF-JLJLJL---7L------77F-J.L|F7LF||
        7LF|7JF||.J7.LJ-L-FFF-J|L7|F--JF7L--7|F7FJ7LJ|FJFJL7.FJL7LJLJL7FJL7L--7F7L--J|F7F-JF-JFJ|L7||FJ|||F-7FJFJL7|FF-------7|F7F7F--J7-.FJ7J|7F-L7
        JF-LJ-|-77.LJ||-|FF7L--JFLJL-7FJL7F-J|||L-7F-J|FJF7|FJF7L----7||LFJF--J|L7F--J|||F-JF-JL|FJLJL7||||FJL7|F-JL-JF--7F--JLJ|||L--7|LJLLL.LFJFLJ
        L|LF||LJFL.FF|.FF-J|-F--7F--7||F-JL77LJL7FJ|F-JL7||||FJ|F7F--J|L7L7L-7JL7LJF7FJLJ|F7|F--JL7-F-J||LJL-7||L7F7F-JF7LJF7||LLJ|F-7|77..7|.7LLJFJ
        L|-FJ7|L|.FL|-|J|F7L7L-7LJF7LJ|L-7FJF-7-||7||F--J|||LJFJ||L--7L-JFJF7|F-JF7||L-7FJ|LJL7F-7|FJF-J|F7F-JLJFJ||L--JL7FJL-77LL|L7|L77-F|J7JJ|LLJ
        FJ-|FLLJ.F||LLL-LJL7|F-JF-JL-7L7FJL7L7|FJL7||L7F7||L77L-JL-7FJF7|L7||||F7|||L7FJL-JF7F|L7||L7L-7|||L---7L-JL7F7F7LJF-7L7LF|FJ|FJJ.77FL-.|-F-
        -L.--J7.FF-7.L|JF--JLJF7|F7F-JFJ|F-JFJLJF7||L7LJLJL-JF-----JL-J|F7LJLJ|||||L7|||F7.|L-JFJ||||F-J|||F7F-JF---J|LJ|F-J.|FJF-JL7LJ-F-|JFLJ7JF|.
        ||F|-F7.FL-777|JL--7F-J||||L-7L7|L-7L-7FJ||L7L---7F--JF-7F7F--7LJL7F7|LJ|||FJ|L-JL7L7F7|FJ|FJL7.||LJ|L-7L-7F7|F7|L--7||LL-7FJ7L-7||.7.LL7-L7
        |JFJ7L-L|7-|.J7FJ..||F7|||L--JFJ|F7L7FJ|F||J|F7F-JL7F7|FJ||L-7L7F7LJL-7FJ|||FJF-7FJFJ||||FJL7FJFJL7|L-7|F-J||LJ|L---JLJ-JL|L-7FLF7J.|F.FJ7L7
        L7J.FF7F777.FJLJ7.FJ||LJ|L---7L7LJ|FJL7L7||FJ|||F--J|LJL7||F7L7|||F7F7|L-J||L7|FJL7|FJ|||L7JLJFJF7L--7LJL-7||F7L--7F7JFL77L--JJ-FJJ--F7FFFJ.
        FJF7J|F-JLJ--J.F|FL7|L7FJF---JFJF-J|F-JFJ|||FJ|||F-7|F-7LJ||L7|LJ||LJ|L-7FJL7||L7FJLJL|||FJF--JFJ|F-7L-7|FJ|||L7F7LJL--7LF||||L-|.|LLL-|-77-
        --|7F77.F|.--F7---7||FJ|FJF7F7L7|F7|L7FJJ|||L7LJ|L7LJL7|-FJL7LJF-JL7JL--JL-7|||FJL---7|||L7|F-7|FJ|FJF7L7L-J||FJ||F7F--J7-F7.FJF|-F..|-|.|J|
        ||JL7J|7FJ.|7LL.|L-LJL-JL-JLJ|FJLJ|L7||F-J||FJ7FJFJF7FJL-JF-JF7L-7FJF7F7F-7LJ|||F7F7FJ|||FJLJFJ||FJL7|L7L-7FJ|L7||||L7|JF-7LFJFJL-L77FF.FL-J
        FL7|J-7-F7.77|.FF-LL7LF-----7||-F7L-J||L-7|||-FJFJFJLJF7F7|F7|L--JL7|LJLJFJF7LJ||LJLJ|||LJ.LLL7|||F7||-L7FJL7|FJ||||FJF77.L77LJ77.L--|.J-LFL
        |L-|-F|-|-|L7F|-|.LF7.|F-7F7LJL-JL--7LJFFJ|||FJFJ7L-7FJ|||LJ|L7F7F7LJF7F-JF||F-JL----7LJ|L|7||||LJ|LJL-7|L-7||L7||||L-J|F77F77L7--F7-J.|||||
        -J|L7-L.-F.LLLF-.77LJ-LJFJ|L-7F--7F7|LJ-L-J|||FJF--7||FJ||F7L7LJ||L7FJ|L---J||F--7F-7|.FJLLF--JL7.|F-7FJL7FJ||FJ||||F-7LJL-JL-7J7F|L..F7--7|
        |-|-|7JF||--JJ|.-FJ-|F|LL-JF-JL-7LJLJFF|-|L||LJ-L-7LJ|L7||||FJF-J|FJ|FJF--7FJ||F-JL7|L7JJ7LL-7F7|FJ|F|L-7|L7LJL7||||L7L7F7F7F-J-F-7-JJ-77FLJ
        |.|LL7.-JL.|.FL7.|.77J7FJ|JL-7F7L-7-L7JLFF-LJ7.F--JF7|F|||||L7L7FJL7|L7L-7|L7|||F7FJL-JJ7-FFLLJ||L7L7L7FJL-J-|-LJ|||FJLLJLJ||JFF-7F-7J.L-J-7
        |7.F-FJJF|-FJ7-F7.F.--J|.7JF-J||F7L7-L|F7L|.FF.L--7|||FJ|LJ|FJF|L-7||FJF7|L-J||LJ|L-77|||J|7J.LLJ7L7|.|L---7-L-JL||||L7||.LLJ|-|J-..7-.L|JJ.
        F..|J||-77.JJ||FJ.J7-7.FJJFJF-J||L-J7|LLF.--J-FLLL||LJL7L-7||F-JF7|||L-J|L--7||J|L7FJ7-FJ7L--FJ7LF-JL7|F7F7|-L7.FLJLJL|F|7.FLLJJ|.L.L7J-|LF7
        F-|.||.FJ|-7F7-7-7L7|JFLJLL7|JJ|L-7J-LJLLJ.F|.7||FJ|JFLL7FJ||L7FJ||LJ7F-JF7FJLJJL7LJJF-7F|-LFJ77FL-7FJ||||LJ7--7FJL-J-|-7--JJJ.FF7L-7JJLJ-|7
        |.LF7|7|FL7FLL.J7F.L-77|.LLLJ7FJF-J.|JFFL7F|-7JL-L-J||FFJ|FJ|FJ|FJ|F--JF7|LJ.|J7.J|LF|JLF7-FL.J--JFLJFJ|LJJ-L7L||F|-LJ|LLL|-|7LJ.-7J|F7.L7|L
        LF--JJLF7.FL7FF--.J7|LLL7FF7.FJFJ.L-J.|JFJ.JFL-JL7LFFJLL-JL-J|FJL-J|F7FJ|L7.FL--J7|LL.7.||F|J-7||-JJFJFJ.|JJ.L||F|..LFL..FJJLJJ7|L7-L-JF7LL7
        L|7F|7..J7L|-|L7L|F7-JJLLJJF-L7L-7.|.F|L77F7-|7J.F777J|.LLJ|L||J.F-J|LJFJFJ7.L-J.JJ.|-||--L-..F-L7F-L7|-F||FF.FJ-L777LLL|J7.|J.F|.|.F7FJJ.||
        -|-L|-FL7|FJ-J7|LLFL7-77|..JLLL--J-F-|L7JF|JLLL7L--.||FF.-L7L||J7L7FJJFL7L7.77|.F|-L7.L|LL7|.F--|LLJLLJ.-J-F|7JLJF7JJ|LF|LFLL.|JJ-LJLLJ|7FL.
        FL7-|F77F|7-FFL-.|F7J7JFJ-7FFJJFLL.7-F-.|F77-.LJJJL|JL-L|77FFLJF7FLJL77FJFJ..F|-LJ|LLFLL7L77FFL-L7JF7F|7LJ|L||F-LLJ|.J.L7||FLFJL7.|..|FJF7J|
        |LJ.--F7LJ|F7.|.-FLF7-.LF|7LL7FLF-L--7J.LFL-.|.F||..-JLLL7-JLJ.LL-7JJ|FL-J-F7.LF|F7.L|JJ.-JJ7L.LL|J.-FL7JL-JLFF-FL---J.|J-F7||LLJ.LL-FJ77|-J
        |-LF7|.|..JLJ.FJ.||.--J.J.JLFLL7F77.|.|7LJ|FF.F7FLL-FF7LJ||-J.7..|L.LLLJLJ7JFJ.L|F--7|F7F||7-|FFFL---F-JFJ-LF7.FJ|7|7FL-J.FJ7L-7LJ7J.|L-J|||
        |7-L|--J-L.|JLJLJ-JJ-7-F|-L-|JLJL---LJLJ-LJJ--L-F.J.F|.--LJJ..7--|L7-LLFJ|J-|JL-7J.7J-F----JLL-F7L7J-L|LJ-.L-JF|-L--J-JJ-J7JLJ--FL--L7JL-F|J
  recorded_at: Sun, 16 Mar 2025 02:36:13 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/11_cosmic_expansion.rb?token=ACG6TJ2NRMAYEDKXQWY2JZTH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1346'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"e8bc586eaff52d955c7349f7eafb54f8a62f14e9efab9e4e2f3493c233cef62e"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - A5A4:332194:39B56E:4ADED3:67D6391D
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:14 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200097-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092574.007380,VS0,VE295
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - dc0c0d543cdc8f65e34d16f7320e06f55c60c217
      expires:
      - Sun, 16 Mar 2025 02:41:14 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        galaxies = DATA.flat_map.with_index { |row, y|
          row.gsub(/#/).map { [y, $~.begin(0)] }
        }

        ys = galaxies.map &:first
        xs = galaxies.map &:last

        yy = (0..ys.max).filter { !ys.include? _1 }
        xx = (0..xs.max).filter { !xs.include? _1 }

        puts [2, 1_000_000].map { |t|
          galaxies
            .map { |y, x| [y + yy.count { _1 < y } * (t - 1), x + xx.count { _1 < x } * (t - 1)] }
            .combination(2)
            .sum { |(y1, x1), (y2, x2)| (y1 - y2).abs + (x1 - x2).abs }
        }

        __END__
        ..#........................................................#...............................#............................#...................
        .......#........................#..........................................#......#.................#.............#...........#......#......
        ............................................................................................................................................
        .....................................................................#......................................................................
        ..............................................................................................#......................#......................
        ..............#.......#............................#.........#...............#................................#.............................
        .#.....................................................................................................#................................#...
        ..........................#.................#...............................................................................................
        .....................................................................................#..................................#...................
        .....#..........................................................................................#...........................................
        .........................................#.....................#...........#.............#...............#..........#.......................
        ...........#.....#...............................................................................................................#..........
        ................................#...........................................................................................................
        .......................#.............#.............#........................................................................................
        #..................................................................#.................................................................#......
        ...............................................#..............#..........#..............................#...................................
        ...................#.....................................................................#............................#.....................
        ...........#.............................................#..................................................................................
        .........................................#.......................................#.................#.....................................#..
        ................#..............#..................................#..........................................#.............#........#.......
        ............................................................#..................................#..................#.........................
        .#........................#.......................#..........................#..............................................................
        ..........#.............................................................#...............#.............................#.....................
        ............................................................................................................................................
        ....................................#....................#........................................#.........................................
        ................#.............................#......................................#......................................#..........#....
        .....#.....................#..........................................................................#.....................................
        ....................#.............................#...........#.............#................................#..............................
        ..................................#.........................................................................................................
        .............#..........................#............................#...........#..........#............................................#..
        ...#......................................................#............................#............#.......................................
        .......................#...................................................................................#......................#.........
        ..........................................................................#.............................................#...................
        ............................#................................#.....................................................#..........#.............
        ......................................................#....................................................................................#
        ...............................................#..................................................#.....#...................................
        ....#.................#........#.........................................................#..................................................
        ....................................................................................#................................................#......
        ................#......................#....................................................................................................
        ...............................................................................................................#............................
        .................................#.................#..............#..........................................................#..............
        .....#......................#................#.................................#.....................#..............#.......................
        #........................................................................#..................................................................
        ..........#...........................#......................#...................................................................#..........
        .........................#..........................................#.......................................................................
        ....................#...........................#......#................................#........................#..........................
        ............................................................................................................................................
        .............................................................................................................#..............................
        ...........#.............................................................#.....#............................................................
        ....................................................................................#......................................................#
        .................................#.........#..............#......#...........................#..............................................
        ...#..............................................#......................................................................#..........#.......
        ............................................................................................................................................
        .............#....................................................................#.........................#...................#...........
        ............................................................................#..........................#.........#..........................
        .........................#......#......................................#....................................................................
        .....................................................................................................................................#......
        .....#.............#.......................#.........#..........#...........................................................................
        ............#...................................#.............................................#...........#...............#......#..........
        ............................#..............................#.......................................................#........................
        .....................................................................#....................#............................................#....
        ......................#............................#..........................#......#.................#.....................#..............
        ..........#......................#..............................................................#...........................................
        ..........................................................................#...............................................................#.
        ..............#......................#........................................................................#.............................
        ......#.....................................#....................#...............#..................................#...........#...........
        ....................#.....................................#.................................#...............................................
        ............................................................................................................................................
        ............#.......................................#...................................................................#...................
        .....................................................................#........#........................#..........................#.....#...
        ......................................#.....................................................................................................
        ............................................................................................................................................
        .#.........................#...........................#........................................#.........#.......#.........#...............
        ...........#.....#...............................................#.................#.................................................#......
        ......#.........................#................#...................................................#......................................
        ...............................................................................#..............................#.............................
        ........................................................................................................................................#...
        ....................#........................#.............................#................................................................
        ...............#.......................#.............#.......#......................#.......................................................
        .......#.............................................................#................................................#.....................
        ........................#.........................................................................................................#.........
        ............................................................................................................................................
        .................................................................................#..................#...................................#...
        ...................................#........#...............................................#...............................................
        .....#........#.............#........................#..............................................................#.......................
        ................................................................#..........................................................#................
        .#.......................................#..................................................................................................
        ...........#..................................................................#............................#................................
        .....................................#...................................#......................................................#...........
        ..................#............................#...........#.........................#................#....................................#
        ............................#......................................................................................#........................
        ......#................................................................................................................................#....
        .................................................................................#............................#........#....................
        .........................................#.......................#.........#...................#.................................#..........
        ..................................#.......................#.................................................................................
        ..........#.....#.....#...........................#....................#....................................................................
        ............................#................#.........................................#...............#.................................#..
        ......#................................#...............#....................................#...............................................
        ...................................................................................#..............#.........................................
        ...................#......................................................#.......................................#..........#..............
        ..............................#............#.................................................................#.....................#........
        ............................................................#.............................#.................................................
        ..........#...........#...........#..................................#..........................#......................#....................
        #......................................................#..............................................#.....................................
        ................................................................................#.........................................................#.
        .......................................#...........#...........................................................................#............
        ...............................#....................................................#....................#..................................
        ...........#........................................................#....................#.......#..........................................
        ...........................#................................................................................................................
        .........................................................................................................................#...............#..
        ....#..............................#........................................................................................................
        ..............................................................#..................#..........................................................
        .............................#................................................................#.............................#...............
        ..........#.........#............................#........#...........................................#.....................................
        ............................................................................#....................................#...................#......
        ............................................................................................................................................
        ....................................................#.....................................#.......#.......................#.....#...........
        ...............#......................#.................................................................................................#...
        .....................#.....#.....#................................#........................................#................................
        ........#....................................................................................................................#..............
        ..................................................#............................#............................................................
        ...#........................................#..........#............................#................................#......................
        ..........................................................................................................................................#.
        ........................#.........#.........................................#.............................#.................................
        .......................................................................#.................#.......#.............#................#...........
        #...........................................................................................................................................
        ........................................................#...................................................................................
        ..........#.........................................................................................#.......................................
        ...#................................................................#..........................#...........#................................
        ............................#................................................#.......................................#......................
        .................#..........................................#...................................................#...........................
        #......#................#...................................................................................................................
        ................................#..........#............................#...............#..........................................#........
        ....................................................#..........#...................................................#......................#.
        ..............................................................................................................................#.............
        ............#.......................#.......................................#.....#.........................................................
        .....#...................................#.......................................................#..............#...........................
        .........................................................#..............................................................#...................
        ...............#.........................................................................#..............................................#...
        ........#.........................................#.................................................#......#....................#...........
  recorded_at: Sun, 16 Mar 2025 02:36:14 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/12_hot_springs.rb?token=ACG6TJ5YPIKGBWBOIFOZNUDH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '6851'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"12508525081d39ee619ed3de57625a15429459737d76032e0ba987c60616b17d"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - BE3C:2B47D9:429AAD:53C31E:67D6391D
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:14 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100039-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092574.453255,VS0,VE286
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 79dcd5282e26040ed71c4d4c610fbe0aa9f222d7
      expires:
      - Sun, 16 Mar 2025 02:41:14 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        @cache = {}

        arrangements = -> (springs, groups, g = -1) {
          @cache[[springs, groups, g]] ||= begin
            if springs.empty?
              return groups.empty? && g <= 0 ? 1 : 0
            end

            case springs[0]
            when ?.
              return 0 if g > 0
              arrangements[springs[1..], groups, -1]
            when ?#
              return 0 if g == 0
              if g < 0
                groups.empty? ? 0 : arrangements[springs[1..], groups[1..], groups[0] - 1]
              else
                arrangements[springs[1..], groups, g - 1]
              end
            when ??
              arrangements[?. + springs[1..], groups, g] +
              arrangements[?# + springs[1..], groups, g]
            end
          end
        }

        puts DATA.map.with_object([0, 0]) { |line, p|
          a, b = line.split
          b = b.split(?,).map &:to_i
          p[0] += arrangements[a, b]
          p[1] += arrangements[([a] * 5) * ??, b * 5]
        }

        __END__
        #.?#.#???????...??## 1,2,2,1,1,4
        ???#???.?#?????? 1,2,2,3,2
        ???????#??.???#? 2,2,4,3
        .???????#?? 4,1
        ?????#????. 1,2,1
        #.?#???#???.?#. 1,3,1,1,2
        ???#?.#.?#??????# 1,2,1,9
        .???#????? 4,1
        #????#??..????? 1,2
        ??.#?.???????#??? 2,1,6,3
        ???.???????.#.#?#?. 1,3,1,1,1,1
        ???##?????????????## 12,2
        ???#?????.?#??????.. 9,1,4
        ?????#?..???????##?? 4,1,1,6
        .?#.?.??????.????#. 2,2,5
        ?##?##.#?##?#????. 5,4,2,1
        ???..??..????? 2,1,4
        ?????#?.?##.??##?. 5,3,4
        .???.#.#??????.??? 3,1,1,1,1,1
        ?.???.?#???#??#?# 1,3,1,1,6
        .?.??..???#???#????# 1,1,12
        ..?.?..??? 1,3
        ???.????????? 3,1,1
        .?????.??##??? 3,2
        .???????#.### 2,2,1,3
        ##???.??????#?#?#??? 3,1,1,10
        .?##??##??#??? 3,3,1
        .????.????????????? 2,1,3,1,1,1
        ???#??#??.#?? 8,1
        ???.????.?? 2,1,2
        ??#?#?.????? 4,1
        ???????#???#?#?#? 4,9
        #.???????. 1,1,3
        ?#??????.? 1,1,1
        ?#???##?.???..???? 8,2,1
        ????????#???.# 9,1,1
        ???.???#???#?????? 1,1,1,3,4,1
        ?????##?.??#? 1,5,3
        #??##.?.????#???? 1,2,1,6,1
        ?????#????#???? 1,1,7
        ????????..??????? 1,2,1,3,1
        ?##?...???#.?? 4,4
        ?????#.?.??? 2,3
        ????.?????#???### 1,1,5,3
        #.???#?#?????# 1,3,1,5
        .????#?.?????#????? 4,5
        .??.???.#?#?#?#.? 2,1,7
        .??#?????.?. 5,1
        ??#??##?.???? 4,2,2
        ?.?.###?.?#?????##? 1,3,2,5
        ?#??????#?.??..?# 2,5,2
        .????????##?.? 2,4
        ????##??#???????. 12,2
        ?.#??.??????#??#?# 1,1,1,9
        ?#?#??#??#?.???????# 8,1,3,1,1
        .?????????.??#? 2,1
        ??##??.??.? 1,3,1
        ??.????##???#????# 1,1,7,2,1
        ????.#???#??##????.? 2,1,9,1
        ?.??###?.?.??? 4,1
        ??????#.??????? 6,3,1
        ??.?????##??. 1,1,6
        .#????#??? 1,1,1
        ??#??.??.?. 4,2,1
        ?.????????.?.... 1,1
        #??..?.#??.?? 3,3
        ..?#???#?#??#?..#??? 2,8,1,1
        ???#???.??? 4,1,1
        ????#?..?.?????? 3,3
        ??????#????#?.?.?# 12,1,1
        #??????????#..? 1,3,1,1,1
        ???#??#.?#????#? 4,1,2,2
        #.?#??#?#???#?.# 1,1,6,1,1
        ??????.??????. 1,1,2,2
        ???#???#?. 1,1,1
        ..??.????#?##??#?? 1,1,9
        ???.????#?? 1,5
        .??.?.???? 1,1,1
        ??.#????????????#. 1,8,1,2
        ?#?????????????? 5,1,5
        ..??.??.#?#?? 1,1,1,3
        ?????#?????...???? 5,1,1,1,1
        .???.??#??# 3,5
        ???#.????#??????# 3,2,1,1
        ??????####?.?? 1,8,1
        ..???#???..??? 4,1,2
        ????##?#?.#?.?? 2,5,2,1
        ??##?#???????.??.. 8,1,1
        ??????????#? 2,1,1
        ?.?#???#????.???#?? 1,3,1,3,1,3
        ???????#?? 1,3
        ???.?#...##???# 1,1,2,1,1
        #?.#?#?????. 1,1,1,2
        .##.????###?.?.? 2,7,1,1
        ?#????#???????#???. 9,2
        ?.#???#??##????? 1,2,6,2
        .#?#???.?#??????# 3,1,1,2,3
        ?#?#??.?..???#?. 4,1,4
        ?###..?##???#??#. 4,3,1,1
        .#??.#????..?..?? 2,1,2,1,2
        ?..??.??????.?..? 2,3
        .?#.??##???????.?? 1,9
        ???..???????###???. 1,1,8,1
        ???##??????.? 3,3
        ???????#??? 1,1,3
        ??.??????##.??. 1,1,6,2
        .##????????????????. 2,5,1,2,1
        ?#??#????? 1,4,1
        #??????.???#???? 4,1,2,1
        .##??.??#???#?????? 3,11
        .?.??..???.#??? 1,2
        ...??..??.#????? 2,1
        .??#?#?#?#???#?? 9,3
        .?#????..##?? 3,3
        ##??##?????#???#??? 13,2,1
        ????????????#??# 1,1,6,1,1
        ?#?##???#??? 1,6
        ##????#.?#??.#?????? 5,1,2,3,1
        ??#????#??? 1,4
        ?.?.?.????##?#?##?? 1,1,1,7,2,1
        ?????????.??.??. 2,2,1,2,1
        ??????.????? 4,5
        ??#?.???#?#??.???? 2,1,6,2
        .#.??#...#?.??? 1,1,2
        ..???.??.?. 1,1
        #????.????? 1,1,4
        ?#.???#??##??? 1,1,3,1
        ???##???##??#?##.#?? 15,1
        ?????.#.????? 1,1
        ???#?#?###??????? 1,8,1,1
        ?????#????????.#?# 2,7,1,1,1
        .????????.#?.#. 3,3,1,1
        ???##?#?.. 1,6
        ????#????????#?.??. 6,3
        .##?#?.????????? 4,1,2
        ?#?...????#? 3,4
        ???.????#? 1,3
        ???.#??????#??.#??. 3,8,1,1,1
        .#???##???? 3,3
        ??????#?????. 6,1
        ???.?.?????#? 3,3,1
        ??##???#????.?#?#?? 4,4,2,1,1
        ???#??.??.#??#? 3,2,2,1
        ##?##???????????.? 7,2,1,1,1
        .?.??.#????? 1,1,3
        ?.??????.???#????# 1,1,4,1,2
        ??#???#?.#?#?##.? 4,2,6,1
        ..??#..??###?? 2,5
        ?#????????..?#???#? 3,3,1,3,2
        ?.???????? 2,2
        #?????#?###??? 1,9
        ??.???##?.???????#?? 1,1,2,10
        ?#?#.????#?.?#??? 4,5,5
        ???.????????..? 1,5
        ???#?????.?#.???##?. 2,6,1,5
        .????????###??????? 2,1,6,1
        ??#?.?#?.???? 3,2,1
        .????#????.# 1,1,5,1
        ??????##?.?..??? 2,3
        .?#??????. 2,1
        ?.?.???????.???????? 1,1,1,4,6,1
        ??.??.#??##??#???? 1,11
        ????????##?#??? 12,1
        ?#??#?#.????#?#???# 6,9
        ?#???.#?.. 3,1
        ??#?.?#?????. 4,2,4
        .??.?..??#??? 1,4
        ???#..??.?#??????? 1,1,1,4,3
        ?###???.?#???? 6,5
        ?.#?????????.?# 1,2,3,2,2
        .?#?.#????##.?. 1,7
        ?.?#..???????? 1,1,2,2
        ?????.??#?.?#??..? 1,3,4,1
        #??..??????????##? 1,1,1,1,3,5
        ?????.??#??##???? 2,1,6
        ..?.?#??###????. 2,4,1,1
        ##??.#????#?#???.. 4,6,2,1
        ??#?#??#.#???#??? 4,2,1,6
        .#?#????#..?#??#. 8,4
        ???..???#?..#??? 2,5,1,1
        ?##?.?.???##?????.?# 2,1,1,7,1
        ??????#.?.?#???#.? 1,3,1,6
        ?????????#????#? 3,5,2
        ?.##?##???#? 5,3
        ???#?#??#?#?# 1,10
        ?##??#???? 3,1,3
        ??#??#????.??.?##. 1,3,2,1,2
        ???????##????? 1,5,1
        ??##????#.???# 9,3
        ?.??????#??.?.????. 9,2
        ??.??????#???? 7,2
        ??#?.??.#.??? 4,1,1,2
        ??.#??#??.?? 6,1
        #??????????? 1,1,2,1
        ?##???##?.?##???? 8,5
        ?.?#?#??.?#??#?.? 3,4
        .#?.????#??#?##.. 2,1,7
        ?#?.#?##.? 1,4,1
        ?????##?##??? 7,2,1
        ??.?.?##???? 2,7
        ???.????#???. 1,6
        ?#?????.??. 5,2
        ????#??.#?#. 1,2,1,1
        .???.????#?#?.?? 3,6,2
        ???.??.?.?.? 1,1,1,1
        ?#.#????#??#??? 1,7,1
        .???#?????#??.?? 1,2,2,1,1
        ..??.???##..? 1,5,1
        .???????..? 2,2
        ?#????????????#? 2,2,4,1
        ????..??##?...#????? 1,1,4,1,1,2
        ?#.???#?????????? 2,4,4
        ?#??..??.#? 2,1,1
        ?.?#??????.??#?..?# 1,7,1,1,1
        #??#..???? 2,1,1
        ??#?.??#?.???? 2,2,3
        .#???..??? 1,2,1
        .??.?#?##.#???.?#? 1,5,3,1
        ?????.?#?#??????#?? 1,1,7,1,1
        ??#??????.?#??#?#? 1,5,8
        ??.?.?.???????? 1,8
        ?#?#???#?????# 1,9,1
        .??#.#??.?#???##?# 2,1,1,1,4
        ???#???.??#?#? 6,1,1
        ?###???.?#.?..? 4,2
        ?#???.????.??#.???. 5,2,1,1,1,1
        ??????..??.?.##.? 1,2
        ?.#?#??????...????? 9,1
        ..??.?.#?? 1,1,2
        ??##???????????.##? 9,1,1,2
        .???.?????? 2,1,1
        ??#.#?.?#?????.?.? 1,1,1,1,3,1
        ???#????#????.#. 1,1,7,1
        ?????#?#?.?.. 6,1
        ???.???????#??#????. 1,12,1
        ??.??.?#??# 2,5
        ?.????#?#????. 1,4,1
        ???##????#??? 4,3
        ???????##. 1,1,3
        .?.##???#?.?#????? 1,3,2,5
        ?.??.##??.? 1,2,2
        ???????#?#???? 3,1,7
        #?#.??????#?#??.?.?. 3,2,8,1
        .??.??.???? 1,2
        ???????..?#??? 4,1
        ?.????##?? 1,5
        ????#??#??.?#. 7,2
        ?.##????##?????#???? 2,5,5
        .??#.???...##?? 1,1,1,1,2
        #??????##???? 1,1,3,3
        ?###??????????????? 6,11
        ?#?.#????#??.? 3,2,2
        .????#?????#?? 10,1
        ?????#???? 1,1,5
        ?#?????.?????#??#.. 1,1,1,1,1,4
        ????#??.?# 1,5,1
        ???#?????? 4,1,1
        ?#?..?.?.?? 2,1,1
        #??.??#??#?##??#???? 1,4,1,5,3
        ?..?#?#??.#???? 4,1,2
        ?????#???#??#.?#??? 13,1,2
        ?..#??.??? 2,1,1
        ???#????#?.????#? 8,2
        .???#.???##?????? 1,2,1,9
        #..#?#???## 1,5,2
        ??..?#.??? 1,1,1
        ??????#?.??.???#. 1,3,1,4
        .?##.?..???##?. 3,1,4
        ?#????#?#?????.? 9,4
        ??##?.?#??##??. 5,7
        ??#????####??..#???? 11,4
        ..#??????? 3,2
        ?.????????##????.?#? 11,1
        .?##????#???. 4,1,4
        #???.???????#. 2,1,1,5
        #??????#??.?? 1,1,5,1
        ???????##???#?#.?#? 1,1,5,3,2
        ?##????##??##? 2,2,2,2
        ?##?#????..????#?? 5,3,7
        .????.#???#? 1,1,2,1
        ??##???#.?.?#.#?? 7,1,1,3
        ??.#??#.?#?????.#? 1,1,1,6,1
        ???????.?#????? 3,1,5
        ??.?#?.?#?? 2,3
        ?##??????.?##?? 5,1,4
        ???.#???#?????#???. 2,12,1
        ???#??##???#??# 1,6,3,1
        ??.??.#??####??#?#? 1,2,2,10
        ??????.?.??????. 2,5
        ...???.??##?... 1,3
        ????#..#??#?#?#??### 1,1,13
        ????????.???.?#.? 4,1,2,1,1
        ??##??????#????? 7,4,1
        ???????#?#?#?????#.? 1,1,4,4,1
        ..?#???#????? 4,4
        ?#??.##???.#?? 2,5,1,1
        .??????#??.#?.?. 1,1,3,2,1
        #???.??????????? 1,1,1,9
        ??.??.?#?.? 1,1,3
        #??????#??? 3,4
        ??#??.??.???#.??# 4,2,4,3
        ??#???????..?.???### 4,1,1,1,1,4
        ?.?????#??#?????.. 7,1
        ?????..?.# 1,2,1
        .???###???????###??? 10,6
        ?#??.?????? 3,1
        .#.??#??????? 1,2,1,1
        .??#??????#? 1,8
        ?.?#??..?????? 4,4
        ?#?#.#.?.?#????? 4,1,1,1,4
        ?#.?.?###????? 1,1,6,1
        .?#?##?###??.?..? 9,1,1
        ..??????#??????#??? 7,3,2
        ???#???#?????.. 7,1
        ??##????.??#??. 5,1
        ???#????.#?#????? 1,1,1,1,5
        ????#?????.? 1,5,1
        ?????#?????????#?..# 4,5,6,1
        ?????#?#???.?..???? 6,1,1,1,1
        ?.???#?#?.#?.?.? 1,5,1,1,1
        ?##????.?.?##?? 3,4
        .#?..????. 2,1
        ??#.##??.. 1,3
        ?####?#####?????? 11,1
        .??.#?..??#.???? 2,3,3
        ???..????#?#?. 1,3,3
        ????????#??? 1,2,4
        ##???.??.#?#????##?# 2,1,11
        ??.?##??.?..?#??. 3,3
        ??.#.#.??.????? 2,1,1,1,2
        ?????..?#???? 4,3
        ??????#?#??###??? 2,4,5
        ??#??#?#.?? 8,1
        ??#?????#? 6,1
        ??.##?#?#?#???# 8,1
        #?#?##???#??#?#????? 1,5,2,1,1,1
        .?.#?#?#..??. 5,2
        ??##?###????? 7,1
        ?.#???????##????? 1,1,4,2
        .??.??.?.?#?????# 1,1,3,2,1
        .#???????.??#?? 2,1,4
        ????##?????.#?? 8,1
        ????????.#.. 5,1
        ?????#?#???? 6,1
        ..?..???????..?#?# 6,3
        ??.?????#?#? 1,4,1,1
        .?????#..???? 2,2,1,1
        .#??????#???##??? 1,1,7,1
        ??.?##??#.????..? 5,1
        ?.??#.????? 1,1
        ???.?.?????#??#???# 1,1,1,1,8,1
        .?#??.##.##??#??#??? 2,1,2,6,3
        ?.???#??????.? 4,1,2
        ?.?????#.?? 3,1
        #???##?.?. 6,1
        ????.???##?#???????? 1,1,4,3,2
        .??.?#?.## 2,1,2
        ???.??????????.?? 1,10,1
        .???.?????? 1,1,2
        ??..???????#?..?#?#? 2,4,3,5
        #?##?.????? 4,3,1
        ???#??#?#????#??#??? 7,7
        ??#.??##????. 2,4,1
        ??#??????????.#?? 1,6,1,1
        ????##?????.?#???? 7,1,4
        ?.??????????#.???? 9,2
        ???????##.????#.? 6,5
        ????#??.??????#???? 3,2,1,5
        .???#?????#.?..???. 9,1
        #..??.??##. 1,2,4
        ???????#?#..? 2,1,1,1
        ?????????.????? 2,5,1
        ???#?#???.? 1,6
        ?#???##?#?. 2,6
        ?..??#???? 1,1,1
        ?????#?.#.? 2,1,1
        .#.????#??#?##?? 1,1,11
        ?.??.#??#????#. 1,1,1,6
        ?...##.????#.? 2,2
        ?????.???#??.#. 1,1,6,1
        ?#???#????###?#. 1,1,1,8
        ??#??.?.?. 2,1
        #??????????.????##? 1,1,3,1,6
        ?.?.?????#??????#??? 1,1,9,1
        ???#??.????????##?## 1,4,4,1,5
        .#???????. 3,2
        ???#.????.?.####?# 1,1,3,6
        ....??????#???? 3,6
        .??????#??????.? 5,3
        ?.????.?## 2,2
        ?#????#?..?#? 7,1
        .?#??????.??? 6,1
        ?.?#????????#??. 2,3
        ?..????#???.?#?? 3,1
        ##???#???.?.?.? 2,3,1,1,1
        ?.??#?.?#?#?####?.?. 2,9
        .??..##?????. 1,3,3
        .?#???##?#??.??..? 4,6,1
        ?.?#?..??#?#??. 3,6
        ???#?????##?.??#?#? 3,2,2,6
        ?#????#?.?#.#? 3,3,1,1
        ???#??????????????? 1,4,3,6
        .##?#?.?#????##?? 2,2,7,1
        ?????#????.??.?.#??? 8,1,2,1,1,1
        #.?.?????#?..????.? 1,1,7,2,1,1
        ..##?.#?.??#?.# 2,1,1,2,1
        ??#??...?#???##. 4,2,3
        #?#?#????????????? 7,3,1,2
        ..#??#?##. 4,2
        ##?####.#??.??.?? 7,1,1,1,1
        ??#.???##??#.#?#? 2,8,4
        ?#????#..?.????#?# 2,3,2,4
        ?.?.#.?????#?#???. 1,1,1,2,1,6
        ?#???##?#.##???????. 8,6,2
        ????.??..??##?#? 1,2,1,5
        ???#??.#?#????? 1,1,1,1,5
        ????###?#?????? 1,12
        ???????##????#?##? 1,2,8,3
        #.???.?.?#??????. 1,1,1,1,7
        ?.?#....????. 1,4
        ??.#???.?#? 1,2,1
        ?.?.?#???? 1,5
        ????#?.???#?? 5,1,3
        ??#?#??#.?.?? 8,1
        ??#.?#??#.??.?? 1,2,1,1,1
        ???#???..??#?? 1,1,3
        ??.#??????? 1,3
        ?.?#?#?#???????#? 1,8,1,3
        ?.?####??.?.?.? 5,1
        ?#???#?.???.?##? 2,3,1,2
        .#??????#??..? 3,4
        ????##?.????#???#? 1,3,1,1,5
        ???????#????#????#?. 1,2,2,3,1,1
        ??#..?????#???? 1,2,3
        ????#?.??? 1,1
        ??.?#??#???.????? 1,5,2,2,1
        ..??????#.???# 5,1,1
        ?#?#?##.????. 6,2
        ?##.?????.??... 2,4
        .????.#?...?##.# 1,1,2,3,1
        .????#?#??# 2,7
        ?#?#.##??#?#??.?#??# 1,1,7,1,2,1
        ????#?????? 1,3
        ????##?#?..#?#?#??? 7,5
        .?.???.??.?? 1,1,1,1
        ???.???#??.???#???# 3,4,3,3
        .??##???#??#???#??.? 12,2,1
        ????#?#?#???#.#???.# 1,7,1,1,1,1
        .?#?###??#??.?#?? 7,1,1,4
        .#????.?#?#. 1,1,3
        ?#?????.?? 2,2
        ??.???#.?????? 1,2,1,3
        ?#.??##???#?.. 1,2,1,2
        ??.??.???#??? 2,4
        ???.????.?..?? 2,1,1,2
        ?#??#####???#.?????? 3,9,2
        ??.??.??#???#? 1,1,3,4
        ??#.?.??#???#??. 2,1,2,1,1
        ?.?????#?? 1,7
        ?.###????.??. 6,1
        .??#??????#?##?? 8,1,4
        ???##?#???.??.? 6,1
        .??..####? 1,4
        ??????.??????# 2,2,1,1
        ?.#???#.??#?? 5,3
        ?...#?#?.???#??.?# 1,1,1,3,1,1
        #???.????? 1,1,2
        ??#..??#?? 3,3
        #????.????#?#..?#. 2,1,1,5,1
        .#?#??????????????? 1,1,7,1,1,1
        ??#?????#??.??.?## 11,1,3
        #??#????#????? 9,1,1
        ?????##?????#? 2,8
        ???????????.???###? 9,1,3
        ??#?.?.???.#.?. 3,2,1,1
        ?.??#?#?????.???? 1,4,1,1,4
        .##??????? 3,1,1
        ?????#???#????? 1,1,4,1
        .??#?????..#????? 6,6
        #??#??#????????# 13,1
        ??###?????#??????# 9,1,3,1
        ##???.???#?#?????# 2,2,1,5,1,1
        .??...???#? 1,4
        ?.????.???.???#?#? 2,1,2,3,1
        ??#?#????? 1,1,2
        ???#??????????? 3,6
        ??#?.?#?#. 2,4
        .?#????????.??? 3,4,2
        ????#.???????? 3,8
        .??.???#?#???. 2,4
        ?.??#????#.#.??# 1,8,1,2
        ..???.?#??. 1,1,1
        ?????#..?#???# 6,2,1
        ?###???.#.???#?.??.? 6,1,2,2,1,1
        ?.??##??##???? 1,3,6
        ????#.??#??#??#??? 3,2,1,4
        #?##?????.##????#? 5,2,7
        ????#??##?..??? 1,2,3,1
        ???????#????#?? 1,3,2,1
        ##??#???????..??#. 8,1,1,1
        .##?#?##?#??#?#?#? 12,1,1
        ??????##?.????? 9,2
        ????????.. 3,1
        ?.?#??..?#???.# 1,1,1,5,1
        .#???..?#.?#???? 1,1,1,2,2
        #.#?#?#?#.#??.???? 1,7,2,1,1
        ????#??.?#?#??????#? 1,2,1,11
        ?.#???.??.?#????## 1,2,2,1,5
        ?#???.??.#?#? 4,2,1,2
        ????.?.????#??.?? 3,7
        ?????.#???.# 1,1,1,1
        #?.?.???#?##??? 1,1,2,5,1
        .?.??#.?#?..?#?????? 1,1,1,2,4,1
        ??????#.??????? 4,1,1,2
        ???##??###? 3,4
        ????.#?????#???#.# 2,2,1,1,1,1
        ?????.???#??#???? 4,7,2
        #.??#?????#?. 1,5,3
        ?##????.??. 3,2,1
        ????..??##? 1,1,4
        ?.#??.?#??.??????#? 1,3,2,1,4
        ????.?#???. 2,2
        #.???#?.?#?? 1,1,1,2
        ??##?.?#???##??.## 4,7,1,2
        ?.?????.?#? 2,1,2
        ????????### 2,6
        #?.?????#?# 1,6,1
        ??#?#??.??????.??.. 3,1,1,4,1,1
        ?#?.??.#?? 1,2,2
        .??????#.#??.#????# 7,1,3,2
        ??##???###?#??????? 5,8,2
        ?#.??#?????#??#?? 1,6,1,2,1
        ?.##??#?#???. 1,2,3,1
        #???#????#?#????? 6,1,4,1
        ?.?#..?????????# 1,1,5,1
        ???#???.#??? 4,1,1,1
        ?#??#?##.??? 4,2,1
        ?####????#? 6,3
        ?????##??#?##??#???? 1,11,3
        ?????????????#??#??? 1,1,1,1,1,7
        ???????.??##.?#?? 3,1,3,3
        ???#?.????? 3,1
        ??.#??????#???.?#.? 1,1,1,5,2
        ?#???#??.. 1,1,3
        ??#?#???????? 5,1,1,1
        ?#.???#??#???#?#??? 2,3,9
        ????##?????.?#???# 1,2,1,2,6
        ?.????#???????.?? 1,8,1
        .??????#?#?? 1,9
        .?##..???#??.?# 2,1,1,1,2
        .#?#?????#????????#. 1,1,1,2,7
        ??#??????#?#? 3,1,3
        ?????.???..???? 1,1,2,1,2
        .???.???.#?#? 1,1,1
        ????#.??#?#?.?##??? 3,2,2,4,1
        .????????.#?#??#? 1,1,1,4,1
        ?.#??##???????? 1,2,2,2,2
        .?????#?????##? 3,1,2,2
        ???#??????.?? 1,3,3,1
        .???#?####?#??.?# 1,11,2
        #?#..????#?. 1,1,1,2
        .???????#??#??? 3,5
        ?.?.???#?.?#??. 1,1,1,3,3
        ?.??#?#####?.#???.? 8,4
        ??.???#?.#??#????#?# 5,5,3
        .??????..??? 1,1,3
        #????##??????? 3,3,2,1
        #?.?##??##????. 1,9
        ??#??#.????#?.?#?## 3,1,2,3,5
        .???#?????.?? 3,1
        ..????????#???.. 8,1
        ?????#?.???# 4,2
        ?.?.????#??.???##? 1,1,2,1,1,4
        ??#?#..?#???#?#??.?? 4,8,1
        ?#??.??.?#? 3,1,2
        ?.?...##???? 1,5
        ??#?.??????? 2,5
        ???.??##?#?#??? 1,1,7,1
        .??.???????#???? 1,9
        ??##?.????.?#???#?? 5,3,1,4
        #?????#?.?? 2,3,2
        ??#??#???##??????.? 4,11
        ???????##????. 1,11
        ?#??..?#??#??? 2,6
        ????????#?#????#???? 1,1,8,1,1,1
        ?..?.#??.???#?? 1,2,2,1
        ???#?.???#? 4,2
        ?.??.#?.??? 1,2
        ???.?????#? 2,3,1
        ?..#??#???#?#.? 1,1,1,5
        ?#?#?#??????#.?#???? 13,3
        ????#?.??????? 2,6
        ???..#???.????#? 2,4,4
        ?????#.??#?#??#?##? 1,1,1,6,3
        .???????????? 2,5
        .??.??.?????.??#?#? 2,1,1,2,3
        .?#?#??????.###?#.? 5,2,1,5,1
        ??.??##???#?.?.????. 7,1
        .#??.?#???#?#?????.. 3,12
        ?..??..#?.?.?? 2,2
        ???????.?#????. 1,5,2,1
        ##?.?#.???????#??#? 3,1,1,2,2,1
        ?.??#?.?????????. 4,1,1,1,2
        ????.??##? 3,4
        ?..??.?#???#?#???#.? 1,11
        ???#??#?????????. 1,4,4,1
        #????#?.??#. 1,3,1,1
        .???..??????.? 2,1,2
        .??????????#?##?.?? 1,7
        #.?.#.????#?.#? 1,1,4,2
        ???#?.?.??#. 4,1,1
        ?.??#??.?.?.#????# 3,1,1,1,4
        ??????#?#.?# 2,4,1,1
        ?.?????##?.??.??? 1,1,4,1,1
        ?##????.?.#?# 5,1,1,1
        ..??#??#??. 1,3
        ??????#?#???..??. 9,1,1
        ?.#.#?##?##?#???# 1,1,1,7,1
        ??.?#????? 1,1,4
        ?.?.??#?#.??#????. 1,5,5,1
        ???.?#?#??? 1,1,1
        ??#??????? 1,2,2
        ..????.??#.? 1,3
        ???.??..??#?##??.?.? 2,7,1
        ?#?.???.????.?? 1,3,1,2
        #?????#.???# 5,1,1,1
        ??.??.???#???##??? 2,7
        ?.?.#?#??.???..? 1,1,3,1,1
        .#?.???..###??????#? 2,1,5,5
        ??.??????????.???? 8,2
        ??????????? 4,1
        ??#??#???.#. 3,2,1,1
        ???#????##?.?#?#? 4,4,4
        ??#????#?????.. 2,8
        ?.???.##?????? 1,1,6
        ??#.?##???#?. 2,2,4
        ???#?#?????????? 6,1,2
        ?.????##?###?##? 9,3
        ?????????? 1,4,1
        .??#?????? 4,1
        .??##..?#?#? 2,4
        ?????#??#??#?.#.? 1,8,1
        .??.?##?#?#? 1,7
        ????????#??. 2,6
        ??#.?.#???.?? 2,4
        ?##?##???##? 7,3
        ?#????????#? 3,3,2
        ?.?????##?? 1,4
        .????????.??? 5,3
        ##.????#??? 2,3,1
        ?#?.?..??. 3,1,2
        ????????#????##??### 1,3,3,9
        ??????#????#????? 2,4,1,6
        ???.???.#.???#?##? 2,1,1,1,5
        ???###?.#?????##.. 6,8
        ???#???#?##.??#?. 3,6,1
        ?#???...?.??###.??.# 4,1,4,1,1
        ??????#??#? 1,2,2
        ??????.??.??. 1,2,2,1
        ?.?.#????? 1,1,1
        .??????.#??? 1,1,1,1
        ?.?#??#??.????#??.?# 2,2,1,3,3,2
        ??????.?.#?#???.? 4,1,1,2,1
        ?????#.###.? 1,2,3,1
        ???##??#??#???????? 12,4
        ?#?????????? 3,1,1
        ?.??#??.????#? 5,1,3
        .???##???? 1,2,1
        ?.???????? 4,1
        .#?.?.???? 1,3
        ??#.??????# 3,3,1
        ??.?##?.?.??#?? 1,2,1,1,2
        .????#??.##??.?#. 2,4,2,1,1
        ?????.#??. 2,1,1
        ?#?????#.? 2,1,3
        ?.?????#?? 1,5
        ??????#?#..?? 1,1,1,2
        ?????.????###? 1,2,1,5
        .???#?#??? 4,1
        .?.?###????? 1,5,1
        ??????????..?###? 6,1,3
        ????#?#?#?????###??? 2,3,3,8
        ??#?..#???? 1,3
        ???#???.??.?? 4,1,1
        ??#..???#???#??? 1,1,5,4
        ??..???##?.??#..? 1,4,1,1,1
        #??#.?#????? 1,1,4,1
        .??.?##????# 4,2
        ??#??#????.???# 1,1,1,1,2
        ?#.????.?.????#??.?# 2,3,1,2,3,1
        ##???..?.?.????? 5,1,2,1
        ???.?????????????#?? 1,15
        ??##???.??#??? 1,5,2,1
        .?.??????#?? 2,3
        ?.#???#??? 1,2
        .??.??..???# 2,2,2,1
        ????#?#??? 1,4
        ??#??#???? 1,3
        ??#..??#??????? 1,1,1,8
        ??????.????#???#.? 1,2,1,6,1
        .???##???? 1,2,1
        .?????.?#..?. 4,1
        #?.???####?#?.???? 1,1,8,1,2
        .?.?#..??#??.? 1,3
        ?????#????????#??. 1,6
        #???#??.??# 1,3,3
        ?????????? 7,1
        ??.???.??? 1,1,1
        ??????#??.???????.#? 1,2,1,5,1,1
        ?#??????????????#?. 5,2,7
        #???.?.??.?..#? 3,1,1,1,1
        .????????????.???.# 1,9,1,1,1
        ?#?#??????#???## 6,7
        ..??#.???#.#.????#? 3,3,1,5
        ?????###?????##???. 16,1
        ????????#??????#??# 1,1,7,5
        .#?????#???####??#? 2,4,8
        ?#.????###?#?. 1,1,1,6
        ?.??????###??#?? 1,1,6,4
        .?..??.??.???#?.##? 1,1,1,5,3
        ?????.?#??#??##? 1,2,1,1,3
        ?#??.?.#?? 3,3
        .?????#??.?.# 1,5,1,1
        .???????.??#?##?#?#? 1,5,1,9
        ????#?#??#. 5,1,1
        ?#????.##?##?..?# 5,6,2
        .?????.??#????#???# 1,3,5,2,1
        ?##????.#??????#? 6,1,1,1
        ??##?.????##??#?#?? 5,4,4
        .???###??...?????? 1,4,1,1,1,2
        ???#?..???. 3,2
        .?.?.#???##???.. 1,2,6
        ????#?#?#?????. 10,1
        .???#??.??.??? 2,1,2
        ?..#?.?#?????.?? 1,2,1,3,1
        ??????.??#?#?#. 1,1,3,3
        ??#??.?##?????##??? 2,3,4
        ?#?.#.???? 2,1,1
        .?.?#?#?####.?.#?# 1,3,4,1,1,1
        ??.#?..?#?????? 1,1,3,1
        #??#??#??.?# 2,6,1
        ?#??#???????#??#??? 5,6,2
        ?..#??#?#####.?#???? 1,10,1,1,1
        ??.????#???#?##?? 1,9
        ????.?#.?# 1,1,1
        ???????????? 6,1,2
        #..????#?#?#??##.??. 1,3,1,1,5,2
        ??#?.????###???? 1,1,1,6,1
        ????.????#?.?# 2,1,1,1
        ???##????.?.???.??. 1,2,2,2,2
        ?????.#?#.???.??? 2,1,1,1,2
        ???#??????.?? 4,1,2
        ?#?#?????#?#..??#. 11,2
        .?#?##?????###???.#? 6,7,1
        #?.##?????# 1,8
        #..#????????? 1,3,1,2
        ????#??#??? 2,2
        .?##?.?..?.???.?# 4,1,1,1,1
        ?.????.?#?.???? 2,1,2,2
        ??#??#?.?. 6,1
        ?#??#??#??##..?## 3,1,6,3
        ??#.???##? 2,4
        #??#????.?????..?.? 1,5,2,1,1
        .?#??#??#????#?#?? 2,2,10
        ####????#??##.?????? 5,1,3,4
        ???##.?.??.? 1,2,1,1
        .?#?????##?????##?. 8,4
        .?#????###??#??#???? 2,11
        ???###?#???#????# 9,1,4
        ??.??.?.?#???. 1,1,4
        #???#??#?#?#???##? 1,3,1,1,1,2
        #????##?.? 1,6
        ##?.?#?#??#?? 3,7
        ??##????#?.?.?#?#??? 1,2,5,1,1,4
        .?#?#?..#?.... 4,1
        ##?#?#??????. 2,4,1,1
        ?????????#?????? 1,3,1
        ?.??#??????? 3,1
        ###?????#?#??#.#??. 3,2,4,1,1,1
        .#???.??###? 1,1,5
        ?###???.?????. 5,2
        ?##???????????.? 3,1,5
        ??#??#?####??.?? 9,1,1
        ##??#..??????.??#??? 3,1,1,4,2
        .???.???...?????? 1,1,5
        .?????#????# 3,2,2
        .####?.???? 4,1,1
        ?#.?#??#??##?????? 2,12
        .????#?.???? 2,1,2
        ??#????#??#?? 3,5
        ?????#???#.?..??#??# 9,2,2
        ??????.?#? 1,1,3
        ?#?.#?????. 2,1,1
        ?#??.???.? 2,1
        ???????#?.. 6,2
        #?????#?#??..# 10,1
        ?????????. 1,2
        ...??.##?????#??.?? 8,1
        #??????#??##???.? 2,4,6,1
        ?.##????#??#.?#???# 3,1,1,2,2,1
        ???#??.???? 1,2,1
        #..??#??#??.?????.? 1,4,2,3,1
        ?#?#.??###??##? 4,9
        .???#.??.? 4,2
        ?..?.?#.????#.?? 2,2
        .???##??#???###.?.?? 6,7,1
        ??##???#?.?? 4,1
        ??##?#????#?????#.? 13,1
        ???#?.#?##?.#?#? 3,5,1,1
        ??.???#????. 1,5,1
        .??#???.???. 5,2
        ??????.#??#.??? 5,4
        ??#????#?##???.?#??? 12,3
        #????????? 1,1,2
        ???????????#?.. 1,1,1,1,2
        ??#??#?##????#???#?? 1,2,9,2
        ?????..??????.??#.?. 3,3,3
        ??.?#?#?????##?.#?.? 4,6,1,1
        ??#????##.???? 8,2
        ?#?.??.#?#?##????? 2,1,9,1
        ???#???#?..??.?.. 7,2
        #.??#??#???.????.?#? 1,9,1,1,2
        ????##?.?.??.?????## 7,1,2,1,1,2
        .?#?#???#???#.?.. 6,1,1,1,1
        ??.?#??#????.? 1,3,5,1
        ?#?.??#??? 2,3,1
        ???#?##???????? 6,1,1
        ?#?.?????#?????#?. 2,5,5
        #?#?#??#???.???? 6,1,1,2
        ?.??#????#?.??###?. 8,5
        .##??#??#???.? 2,2,1,1
        ???##?.??? 1,3,1
        ?##.?.????#.#..?# 2,1,3,1,1
        ?#?#?...?#?#????.??? 4,3,2,3
        ..##??..????#?????? 2,9
        ?#??.?#?#?????#???. 3,5,4
        ???#?????.#???#??? 1,1,1,1,5,2
        ????.??.#?#??# 2,1,3,1
        ?#??#????#???.#? 12,1
        ??????????#??????.?# 1,7,1,2,2
        ??.????#?##????#? 1,2,1,4,2
        ??###????? 1,3,1
        ?#?#???#???.??# 3,1,1,1,2
        ???#????????. 6,1
        ##..????.? 2,3
        ?##????... 3,3
        .?.?.?.#?? 1,3
        .?.???????????????? 8,7
        ??#?###?.??..?? 7,1,1
        ?????.?#?#? 2,3
        ??#.??#???????#????. 1,7,1,3,1
        ?????.??#?? 1,1,4
        .?????##??# 3,4,1
        ..??.??#??. 1,1
        ??????????.#??#?#? 6,7
        ##???????? 4,4
        ?????##.?#??. 5,2
        #?.?????#??? 2,2,1,1
        ??#??...??? 4,1
        ???#??.???#? 1,2,4
        ??#?????.#? 1,5,1
        ????.??##?? 2,1,3
        ?????.??.?.? 3,2,1
        .#??.???.?.??#??#?? 2,2,1,2,1,1
        #????.??..??#?.#?## 5,1,1,2,4
        ???????##.????.?#? 7,1,2,2
        .???.???????#??????? 1,2,1,5,2
        .?#????.??? 1,1,2
        .#?#?#?#??#???#..??? 1,10,1,1
        ??.????#?.????????#? 1,3,2,1,8
        ?????##??#??.????.. 5,2
        ..?#???#?##?#??? 2,2,5
        ??#.?#.??????#? 2,2,1,1,2
        .???.????#????? 1,8
        ??##?###??????#???? 8,3,2,2
        ???..#.??#? 2,1,2
        ?#???#???.?# 7,1,1
        .#?.???#???#? 1,7
        ???.??#???..??.? 3,2
        ..?.#????????. 1,1,1,3
        ????#??#???#??????? 9,1
        .?#????.?...?. 5,1
        #??.?????.???#??#?? 3,4,5,1,1
        ????###??#? 5,1
        #???##?#??.?.?????? 10,1,2
        ?????#?##??.?...##?? 1,6,4
        ???????#???.?##??. 4,4
        #.??#?#.#??.??# 1,2,1,2,3
        ?????.??????? 2,1,1,1
        ?????#.##??#?#? 1,3,7
        .??????#?#???.??.?. 12,2
        ??#????.####??#??.?? 3,1,4,3,1
        ?#.#?????#.?#? 1,7,2
        ?.?????.?????? 3,4
        ??????#?.????#???? 2,1,1,1,6
        ???.#???#? 1,1,2
        ????#???#??. 6,3
        #?##????.?? 6,1,1
        ?.???##?##.??? 7,1
        ????.????#.? 2,5
        .?#???#???# 1,3,3
        ##????..#??###???.?? 6,2,4,1,1
        ?????#?..?#???#?? 2,2,8
        ??#?##??..?#????#??? 5,3,2,2
        ???#?????#?.???? 1,7,2
        .?.???#????.??#???? 5,1,1,1,2
        #????????#?.?#?? 11,1
        ???#??#??? 1,5
        ?#??#??????#? 2,1,4
        ????.#??#.??? 1,1,1
        .?????????? 7,1
        .??#?#???.??. 1,5,1
        #???#?????.#..?..? 1,1,6,1,1,1
        ?..??.???#???? 2,5,1
        ???????..??##???.. 3,7
        #????.????? 5,1,2
        .??#????#???? 1,3
        ?##????##?. 3,1,3
        .?..??#??? 2,1
        ??#?#????.?# 4,3,1
        ?##?..????#??#??#? 2,6,1,2
        ??#??#?###???##?#.#? 1,1,12,1
        ??##??.#?#??#?.? 1,4,7
        ??##?#??#??? 6,2,1
        ????.???.?#?#?##? 2,2,6
        #????.????.# 4,1,1,1
        #?????#?.???? 1,1,1,3
        ?#???.##?##?#?#?.?# 3,2,2,4,2
        ..#?#??#?????#?? 4,9
        ??#?.??#?. 3,3
        .??.????????# 1,2,1,2
        ?.????..?????????? 1,2,6,1
        ??#??.????#??.????#? 5,3,3,1,2
        .#?.????.????#?? 2,1,2,5
        #?.##????#? 2,3,2
        ..#?.#?##???.?#?#? 2,4,1,4
        ????????????#??.?#? 4,1,5,1,1
        #?#????#..#????##??? 1,1,2,1,6
        ?#???#?#?????? 2,8,1
        ?#???.?#?? 2,1,4
        ?#???.???#?# 1,2,6
        ?#?##?.??# 5,2
        ?#???.???????? 3,1,7
        ?.???????????#?????? 1,3,1,4,1,2
        ..???????.??? 1,1
        #?????#??#.?.#.??..? 10,1,1,2,1
        ?.?#??????? 4,2
        .???#????##?????? 10,2
        ?#??????##. 1,1,2
        ###???????#..??#.?? 11,3,1
        .???#??.?#??? 2,1,2
        .?.?###?##? 1,3,2
        #.#?#??####?#?????. 1,1,10,1
        .??.????#?#? 1,5
        #???????#.??? 3,1,1,1
        #..????#??#?#?##. 1,13
        ?.???.?#?.???#.???? 1,2,2,2,1,3
        ?..????????. 1,2,3
        ?.????.?....#????? 2,1,1,6
        ?##?..??#. 3,3
        ???.#???..??#.. 2,1,1,3
        .?#??.????? 2,1
        ??????.???. 1,1,1
        ???#.????#???????. 1,1,8,1
        ???##???.??#??? 3,1,1,2
        ????#?..??? 1,2
        ???#.#??#???##?.??? 1,1,1,7,1
        ?.????#.?????? 1,5,3,1
        ????????.??#??#.??.? 1,6,3,1,1,1
        ..???.?..?#?? 2,1,1,1
        ???.??..????###?#? 1,1,1,7
        ??.????.????###? 2,6
        ????#??#?.?# 1,4,2
        .#.##?.?????. 1,2,2
        ?.????????? 2,2,1
        ?#???#???.??? 2,1,2,2
        ???????##? 1,6
        #.?????#.#????# 1,4,6
        ??.##?#?????.#?????? 2,9,1,2,1
        ##.?..?####?##?? 2,8
        ???#?.???#??#????? 3,10
        ?#?????????.?#?????? 10,4,2
        .???.????#????? 1,3
        #??.?????? 3,2
        .??????.?#?#?? 1,1,6
        ?????????#.# 1,1,1,1
        ??#.?#???????#.????? 2,6,2,5
        ??.?#?##??#?#?##??? 13,1
        .?.?#???##? 1,1,3
        #??????.##. 1,2,2
        ?##??#????? 6,1
        ?#????#??#.??.# 6,1,1,1
        ##...???.?. 2,1
        ?###???#.#?#?..?.?? 8,3,1
        ??#?.???##???????#. 1,1,1,4,1,1
        #####?.????#???# 5,1,1,3
        #???###??..?#? 2,6,2
        ?.???#??.#?? 4,1,2
        ????#?#?????????# 1,9,1,1
        ?##??????#? 3,2,2
  recorded_at: Sun, 16 Mar 2025 02:36:14 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/13_point_of_incidence.rb?token=ACG6TJYJJBHIZ6CLY4Y7FA3H2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '3793'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"5feab21ff3a94c315b745fe4e38de6a0ccf3f90fbb6c11f1d1754eed039c1826"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - C832:281070:2DF33C:3BADE8:67D6391B
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:15 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100069-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092575.878182,VS0,VE305
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 46d3cadae1b9dff48b5bc0a91fcc4248843a3699
      expires:
      - Sun, 16 Mar 2025 02:41:15 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        def diffs(m)
          l, r = [m[0]], m[1..]
          (1...m.size).map { |i|
            d = l.zip(r).sum { |a, b| b ? a.zip(b).count { _1 != _2 } : 0 }
            l.unshift r.shift
            [d, i]
          }
        end

        puts DATA.each_line($/*2).with_object([0, 0]) { |m, s|
          h = m.split.map &:chars
          v = h.transpose
          d = diffs(h).each { _1[1] *= 100 } + diffs(v)
          s[0] += d.find { _1[0] == 0 }[1]
          s[1] += d.find { _1[0] == 1 }[1]
        }

        __END__
        #..#..##.#.
        #..#..##.#.
        ......#..##
        ##########.
        ..####.#.##
        #.#.##....#
        ..#.##....#
        ..####.#.##
        ##########.
        ......#..##
        #..#..##.#.

        #..#####.##.#.#..
        ####..#.#....####
        ..##.......##.#.#
        #..######.#.#####
        #..######.#.#####
        ..##.......##.#.#
        ####..#.#....####
        #..#####.##.#.#..
        #..#...###..#..#.
        #..#.###.#..#...#
        ###.##..#.####.#.
        .##.###.##...#.##
        ##.###.#..###..##
        #..###.#..###..##
        .##.###.##...#.##
        ###.##..#.####.#.
        #..#.###.#..#...#

        ##.##.#
        ..#...#
        ###.##.
        ###.##.
        ..#...#
        ##.##.#
        ..#..#.
        ##.#.##
        .####.#

        #..#...#..#..
        ####.##....##
        .##.####.####
        ......######.
        .##..#......#
        .##.##..##..#
        #..###.#..#.#
        .....#......#
        #####..#..#..
        .##..#.#..#.#
        #..##..#..#..
        #..#..##..##.
        #####..#..#..

        .##.....##...
        .##.....##.#.
        .#.###...###.
        #..##.#.#####
        #####.##.....
        #####.##.....
        #..##.#.#####
        .#.###...###.
        .##.....##.#.

        #.#..####
        .##..#..#
        .##..#..#
        #.#..####
        ###......
        #.#.#.###
        ..##.##.#
        .#.#.##..
        .#.#.##..
        ..##.##.#
        #.#.#.#.#

        ####..##..#
        ..##..#.##.
        #####...##.
        #..##.#.#..
        ####..#####
        .####..####
        #.#.##.#..#
        ####...####
        ##.#.#.....
        ......#....
        ##...###..#
        ..#.#..#..#
        ..#.#..#..#
        ##...###..#
        ......#....

        .....#.
        #..#..#
        ..#.#.#
        ####...
        #..#...
        .##..#.
        #..###.
        .##....
        .##....

        ...######..##..##
        .#...#....####...
        ###..#..##....##.
        #.....#.###..###.
        #.....#.###..###.
        ###..#..##....##.
        .#.#.#....####...
        ...######..##..##
        .##..#.....##....
        ####.#.##########
        ...####.#.#..#.#.
        .##.#.#..#....#..
        .###.#.....##....
        ..#...#.##....##.
        .##...#..##..##..

        .#..#.#..
        .......##
        ######.#.
        #.##.###.
        #....#.##
        #....###.
        ######.#.
        .####....
        .####.#..
        ######.#.
        #....###.

        .####....####.#.#
        .#..#.##.#..#.###
        #.##.#..#.##.#..#
        ..##......##..###
        ##.########.###..
        .####....####.#.#
        #....#..#....#.##
        ................#
        #....####....##.#
        #....####....#..#
        ..............#.#
        ..##..##..##.....
        ......##.......#.

        .#..#..
        .#..#..
        ##.....
        ..#.#.#
        ##.##..
        .###.##
        ...##.#
        #.#.###
        #.#.###
        #..##.#
        .###.##
        ##.##..
        ..#.#.#
        ##.....
        .#..#..

        ..#....#..#
        ##.##..#..#
        ###...##..#
        .....#..##.
        ##...#..##.
        ##.####....
        #####......
        ##.###.#..#
        ##.........
        ..###.##.##
        ###.#.#....
        ###...#####
        ..##.#.....

        ..#######
        .#####...
        ###..##..
        #..##.#..
        .##......
        #..##.#.#
        ###.###..
        .#.#.#...
        .#.#.#...
        ###.###..
        #..##.#.#
        .##......
        #..##.#..
        ###..##..
        .#####...
        ..#######
        .########

        ######.##..#.##
        #####.###.#..#.
        ..#.######.##.#
        .#.#.##...##...
        ###..##.##....#
        ###..##...##...
        ..#....#..#....
        ##..##.#.#..##.
        ##..##.#.#..##.
        ..#....#..#....
        ###..##...##...

        ###.#.##..#.##.##
        ###.#.##..#.##.##
        .##..##.####.###.
        ##...##.##.....##
        ..#.##......#.#..
        .#####..#.###..##
        .#..##..#.#..#.##
        .##.#.#....#..##.
        .###.#.#.###..###
        #.#.#.###.#.#.##.
        #.#.#.###.#.#.#..

        #..#.########.#
        .#.#####.......
        #...#...#.#....
        .####....##..#.
        .###.....##..#.
        #...#...#.#....
        .#.#####.......
        #..#.########.#
        #..#.########.#

        #.#....####
        ...#####..#
        ..#########
        .#.#.#.#..#
        ......#.##.
        .##.##..##.
        ###.##..##.

        ##..##...###.#.
        ##..##...###.#.
        ....#####.##.#.
        ##.#####...#.##
        #..#..#.#.#####
        ..#...#.#.#####
        ##.#..#.....###
        #..#...########
        .#..##..#####.#
        ##..#....#.#...
        ##..#....#.#..#

        .########.##..#..
        .###..###.####...
        .########..##.#..
        .###..###.#.#..##
        ####..####.......
        ..#.##.#...####..
        ###....###....#..
        ##.#..#.####...##
        .#......#...#..##
        .###..###.#.###..
        ##.#.##.##.####..
        ...#..#....#..#..
        .#......#.#.##.##

        #.#...##.
        #.#...##.
        ##..###.#
        .###.#.#.
        ##....###
        #.....#..
        .######..
        ###.##.#.
        ##....###
        .##.####.
        .......##
        .......##
        .##.####.
        ##....###
        ###..#.#.
        .######..
        #.....#..

        ..##.#.#.##..#.#.
        ##.#.#.#.....#.#.
        #..####.#.###..#.
        .#.#.#...##.#####
        .#.#.#..###.#####
        #..####.#.###..#.
        ##.#.#.#.....#.#.
        ..##.#.#.##..#.#.
        ##.#.##.########.
        ....#.#..#....#..
        ....#.#..#....#..

        #..##..#.##.#
        .#....#.####.
        ###..####..##
        .#....##....#
        .........##..
        ..####...##..
        ..#..#..#..#.
        ...##....##..
        #......#....#
        ...##........
        ...##....##..

        .#.....#..#..##
        #..##..####..##
        ##.##.#...##.##
        .##.###.#..##.#
        .##.###.#..##.#
        ##.##.#...##.##
        #..##..####..##
        .#.....#..#..##
        #.#.##.#.#.#.##
        ..#......#.###.
        ##..#..##.####.
        .#..#...###..#.
        .#......###..#.

        ..##...####.#..
        #########..####
        .####.#.###.###
        .####..##.#.#..
        ######.###..###
        .#####.###..###
        #.##.#.#..##...
        .#..#.#.#.#..##
        .......#...##..
        .#..#.#...#....
        ##..##.##.#####

        ..##.##
        ....#..
        ....#..
        ..##.##
        ..#..##
        ##...#.
        ..###.#
        ###.##.
        .####.#

        .#..#..###..#..
        ..##.##.#.....#
        ......#.###.#.#
        ........#.#.#..
        #######....#...
        ######..#...##.
        #.##.#...#.##.#
        .####.#..##..#.
        .####......####
        #.##.##....###.
        ......###.####.
        ......###.####.
        #.##.##....###.

        ..#..#.#..###..##
        #####.#..######..
        ..#....#.#######.
        #.#.####...######
        ..###..#.####..#.
        ##.######..##.#..
        ##..####...#..#..
        ..#.#.##..##.#..#
        ####...####.....#
        ####.##...##..#..
        #####.#..###....#
        ..##.#.####..#..#
        ..##.#.####..#..#

        ###.##.#..#.##.##
        ##....#.##.#....#
        ..##..#.##.#..##.
        ##..#...#....#..#
        ...###.####.###..
        ....#.#....#.#...
        ###.###.##.###.##

        ..##........#
        .####..##..##
        ##..###..###.
        .#..#..#...#.
        #....##..##..
        #....#....#..
        ######.##.###

        ..#...###..##
        .##..##....#.
        .#.#.#####...
        .#.#.#####...
        .##..##....#.
        ..#...###.###
        ..#....#.####
        #...#..##.#..
        #...#..##.#..
        ..#....#.####
        ..#...###.###
        .##..##....#.
        .#.#.#####...

        #.#####
        ...#..#
        ####..#
        .#.#..#
        #..####
        #.#####
        #......
        #.##..#
        #.##..#
        #......
        #..####

        #####.####.#####.
        ....#......#...#.
        .#..###..###..#.#
        .##.#..##..#.##..
        ##..#.#..#.#..##.
        ################.
        ..###.#..#.###...
        ###..#.##.#..###.
        ###..#.##.#..###.

        #......#.##.#
        ..#..#..####.
        .....##..##..
        ....####.#..#
        .####.#..##..
        #.#.###......
        .##....######
        #####.##....#
        ...####..##..
        ...####..##..
        #####.##....#
        .##....######
        #.#.###......

        ..#..#.##
        .##.#..#.
        .##..####
        ###...#.#
        .##.##.##
        .#.#..#..
        ##..##.##
        ##..##.#.
        #.###....
        #.##.#.#.
        .###..##.
        .#.#.##.#
        ...#.##.#
        ...#.##.#
        .#.#.##.#

        .........#.##.#
        ...........##..
        .#.##.#....###.
        .#....#.#.#..##
        #.####.#..####.
        ...##.....##...
        ...##....#..#..
        #.#..#.#.###.#.
        ...##....##...#
        .#.##.#..##.###
        .#.##.#..####..
        .##..##......##
        .##..##......##
        .#.##.#..####..
        .#.##.#..##.###
        ...##.....#...#
        #.#..#.#.###.#.

        ..#..#.##.##.
        ....####.####
        ..#..#.#.....
        ####......##.
        ####.#.#...#.
        ##..#........
        ..##.#.#.#..#

        #..##....
        .#.##....
        ##....##.
        #.#.#.##.
        .####.##.
        ###..#..#
        #.#.#.##.
        .#.#.####
        ..#.#.##.
        .##..####
        #####.##.
        .#.#.####
        .#...####
        .#.#.####
        .#.#.####
        #####.##.
        .##..####

        #.###.##.##
        #.###.##.##
        ..#.#....#.
        ####..##..#
        ......##..#
        ##.........
        ####.#..#.#
        .###..##..#
        #..........

        #..#...#...##.#.#
        #..#.#.#....#.#.#
        .#.#####...#..#.#
        .#.##...#.#.##.##
        .#.##...#.#.##.##
        .#.#####...#..#.#
        #..#.#.#....#.#.#
        #.##...#...##.#.#
        ..#..###.#....##.
        #..#.#..#.##....#
        ..###.##..#####.#
        ..###....###.####
        ..###....###.####

        .##.###..#.#...
        ####.#.##..###.
        ...##...#.###.#
        ####..###.###..
        ....#..#.#.#..#
        #..#.#.##......
        #..#.#.##......

        ...##########....
        #.#..######..#.##
        #...#..##..#...##
        ##...######...###
        ##...#.##.#...###
        #####.#..#.######
        ..#.##....##.#...
        ..###.####.###...
        .#.#.######.#.#..
        ..#####..#####...
        ######.##.#######
        #...##....##...##
        .#..########..#..
        #...########...##
        #............#.##
        #.###.#..#.###.##
        .##.##.##.##.##..

        .#....#.....#.#
        ###..###.#...#.
        ###..###.#...#.
        .#....#.....#.#
        .#.##.#.###..##
        ..#..#....#####
        #.#..#.#...#.#.
        ##########.###.
        .#....#.#.#####
        .#.##.#.#...##.
        ###..###..#..#.
        .#....#.##.##.#
        ##....##.....#.
        ...##.....####.
        ##....#....####

        .#..#.##...#.
        ##..##...#.#.
        ##..##...#.#.
        .#..#.##...#.
        .####..##...#
        ###.###...##.
        ##..####...#.
        #######....##
        ######.#.###.
        .......##..##
        ######.###.##
        ..##...###...
        #....#.#..###
        ######.#...#.
        #.##.#####...

        #..#..#...#.#
        .##.####.#.#.
        .###.##.#####
        ...#.####.###
        .....#####.#.
        .....#####.#.
        ..##.####.###
        #####..##.###
        #####..##.###
        ..##.####.###
        .....#####.#.
        .....#####.#.
        ...#.####.###

        ..#.###
        ####.##
        ...####
        .##....
        #..##..
        ####...
        .###...

        ..##...####
        #...##.#...
        #.#.#.##...
        #.#.#.##...
        #...##.#...
        ..##...###.
        ##..#..#...
        ##..###....
        ..#.....###
        ....###..##
        #.#..###.#.
        .#.#..##.##
        .#.#..##.##

        ##.##.###
        ...#####.
        ###.#...#
        ##.###.##
        ..##..##.
        ...#.###.
        .....####
        ..#.##...
        .##.#....
        ....###..
        ....#...#
        ##...#..#
        ##...#..#

        #####...#
        #####.###
        ####..##.
        #..#.##.#
        .##.##.#.
        .##.##.#.
        #..#.##.#
        ####..##.
        #####.###
        #####...#
        ####.#.##
        .....#...
        #####..#.
        #..#..#..
        .##..####
        ##.#.#...
        #..#..#..

        ##.#...
        ##...#.
        ##..##.
        ###.#.#
        ....#.#
        ..#.###
        ..#.###
        ....#.#
        ###.#.#
        ##..##.
        ##...#.
        ##.#..#
        ...#...

        #####..###.#.###.
        #####..###.#.###.
        .#..#.##..#.#....
        .#.#....####.....
        ...##..###.####.#
        .#####..#...##..#
        .#####..#...##..#
        ...##.####.####.#
        .#.#....####.....
        .#..#.##..#.#....
        #####..###.#.###.

        ..####.###.##.#
        .#...##...#.##.
        #...###....#...
        #...#..#.#...##
        #..##..#.#...##
        #...###....#...
        .#...##...#.##.
        ..####.###.##.#
        ###.###...#####
        #.##.#..#####.#
        #.##.#..#####.#

        ..####.#..###.#
        ..####.#..###.#
        #..##.###...###
        .#...#...##...#
        ..#..#####..##.
        ..#..####...##.
        .#...#...##...#
        #..##.###...###
        ..####.#..###.#

        #.######.##..##.#
        #...##...##..##..
        ##.####.########.
        #.##..##.##..##.#
        #..####..######..
        ####..####....###
        ###....####..####
        .##....##..##..##
        .##.##.##..##..##
        ###.##.####..####
        .#......#.#..#.#.
        ...#..#...#..#...
        #.##..##.#.##...#
        .########......##
        #........#....#..
        #..#..#..#....#..
        ##......##.##.##.

        ...........#.#.#.
        .#..#.#..##.#....
        .#..#.#..##.#....
        ...........#.#.#.
        .#..#....#.##...#
        ..##.#.#..##.#...
        .####...#####...#
        #....###.#####.#.
        ######.###..##.#.
        .####.##.#..#....
        .#..#..##.....#.#
        ..##..#..####.##.
        ######.#...###...
        #....##.#..#...#.
        ..##.....#.###...

        ##..#.#
        #...#.#
        #..###.
        #...##.
        .###.#.
        ##.#.##
        ...##.#
        .#.##..
        .#.##..
        ...##.#
        ##.#.##
        .###.#.
        #...##.
        #..###.
        #...#.#

        #.#..#.
        ##.##.#
        .#....#
        #.####.
        #.####.
        .#....#
        ##.##.#
        #.#..#.
        .##..#.
        #..##..
        ##....#
        .#....#
        #......

        .####.#..##
        .#..#..##..
        ######.####
        #.##.####..
        #......##..
        .####..#...
        #....######
        ..##..#....
        ##..#######
        #....#.#...
        .####.#####
        ######.##..
        ######.####
        ..##...####
        .####......
        ######.#.##
        ..##....###

        ##.#.##
        ##..#.#
        ....#.#
        ##.#.##
        ##.#.##
        ....#.#
        ###.#.#
        ##.#.##
        ##.####
        ....#..
        ##.#...
        ..#####
        ##.#.##

        ##.#.###.
        ##...###.
        ##..#.###
        #.#...#.#
        .#....###
        .#.####..
        ...#.####
        .#...####
        .#..##.#.
        #..#...##
        .##...#.#
        #.##..#..
        .#...#...
        ....###..
        ....###..
        .#...#...
        #.##..#..

        .#....#..
        ##....#..
        #...#.#..
        #..#....#
        .####....
        .#.###.##
        .##.###.#
        .##.###.#
        .#.###.##

        ###..#....#
        ...########
        ###.#......
        ##..##....#
        ####.######
        ##..#.#..#.
        ..###.#..#.
        ..#.#.####.
        ....#.#..#.
        .......##..
        #####.####.
        ##.#######.
        ###.###..##

        #..#...########..
        #######...##...##
        .##...#........#.
        ....###..####..##
        .##..............
        #..##..########..
        ....##..#....#..#
        .##.#..##....##..
        #..#.###..##..###
        ....##....##....#
        ....#...##..##..#

        .#.#....#.#.##.#.
        ..###..###..##..#
        ##..#..#..##..##.
        ....####.........
        .#.#.##.#.#....#.
        #.########.#..#.#
        .##......##....##
        ..########......#
        #..#.##.#..####..
        #..#.##.#..#..#..
        ..#.#..#.#..##..#
        ....####......#..
        ##.######.######.
        #.#.####.#.####.#
        #..######..#..#..

        ######.###..####.
        ######.....##.#..
        ####..##.##....##
        ####...####.#.##.
        #####.#.##.###.#.
        ....##..##.##..#.
        ......######.###.
        ####..#.#.###...#
        .##.#.#.####.##.#

        #..##..###..###
        ..#..#...#..#..
        .........####..
        #......##.##.##
        ..####..#....#.
        ...##.....##...
        #.####.##.##.##
        ..........##...
        ...##...##..##.
        .#....#...##...
        .#....#.#....#.
        .#....#......#.
        ##....##..##..#

        ....#..#...
        ..##....##.
        ..########.
        ##.#.##.#.#
        ...##..##..
        ##...##...#
        ..########.
        ..#..##..#.
        ###.......#
        ##.#.##.#.#
        ##.######.#

        ##..##.#.........
        ##....#..###..###
        ..###..##...##...
        ....#..#.........
        .#.####..#......#
        ##...#....##..##.
        ##.#..#..#.#..#.#
        ....#..#.#.####.#
        ####.#.##.##..##.

        #....####....##
        #.##.#..##..##.
        #....#.##....##
        .####..#..##..#
        #######.##..##.
        .####..######.#
        ######.##.##.##
        ##..##.##....##
        .#..#.#..####..
        .####.#..#..#..
        ########..##..#
        .#..#..#..##..#
        #....#....##...
        #.##.#.#.#..#.#
        ######..#....#.
        .........#..#..
        #....#.###..###

        ##..######..##.##
        #...#..#.#...#..#
        ###.######.#####.
        ..##......##..###
        #.#........#.#.#.
        ..###.##.###..#..
        ..###.##.###..#..

        #.#..#.#.#.
        ###..###..#
        ..####...##
        #..##..####
        .#....#.#.#
        #.####.###.
        .##..##...#
        ##....####.
        ########..#
        ##....##.##
        ##.....#.#.
        #..##..##..
        ..####....#
        ###..###...
        #..##..####
        ##....###..
        ##....###..

        ####..#..#..#
        .#####....###
        #.##..#..#..#
        #...##....##.
        .############
        #..#..####..#
        #######..####
        .######..####
        .######..####
        ##.....##....
        .##.##....##.
        #.#.##.##.##.
        #.#....##....
        ..#..........
        .##.##.##.##.

        .####.#.##.
        ##..#####..
        ...#...####
        ..##..#....
        ......#####
        #....####.#
        .#..#..#..#
        ..##....###
        .#..#...###
        ..##...##..
        .####...#.#
        .####...#.#
        ..##...##..
        .#..#...###
        ..##....###
        .#..#..#..#
        #....####.#

        ..#..#...########
        #.####.###......#
        .........#.#..#.#
        .######..###..###
        ##.##.##.........
        ##.##.##.#.#..#.#
        #.####.#####..###
        .######.###....##
        #.#..#.#.#.#..#.#
        ........###....##
        .........#.#..#..
        ########...####..
        #.#..#.##.#....#.

        ##...###.#..#.#
        ..###.##.##.###
        ...#..#.####..#
        ..####.##.#....
        ..#.##...#..#..
        ###...#.#.....#
        ###...#.#.....#
        ..#.##...#..#..
        ..####.##.#....
        ......#.####..#
        ..###.##.##.###

        ..####...####
        #.#..#.##.##.
        .#....#.#####
        ...#....##..#
        ..####...#..#
        ..#..#..#.##.
        ##########..#
        .#.##.#.#.##.
        ##....###.##.
        .######.#.##.
        #......#.....

        ##.##......#.
        ##..#.##..##.
        ##..#.##..##.
        ##.##......#.
        ####.###....#
        ...#...#.#...
        ...##...#.#..
        #.##..#.#...#
        .........####
        ...#.#####.##
        ########....#
        ###..####.#.#
        ..#.#.###....

        #.#.##.###.
        #.######.##
        ..######..#
        #........##
        ##########.
        #..#..#..#.
        #..#..#..#.

        ##..###.#.#
        ......#####
        .#..#.##...
        #...###....
        ######.####
        ##..##..###
        .####.#.###
        #.##.#.#.#.
        #....#..###
        .#..#.....#
        .#..#.....#
        #....#..###
        #.##.#.#.#.
        .####.#.###
        ##..##..###

        #..#.###...
        ###.....###
        .....###.##
        ......##...
        .##.#.###..
        .##.#.###..
        ......##...
        .....###.##
        ###.....###
        #..#.###...
        ....#..####
        #..##..#...
        ......####.

        #.#....##
        #.#....##
        ###.#.#..
        ###..####
        ...##..#.
        #.###...#
        ####...##
        ####..###
        #.###...#
        ...##..#.
        ###..####

        ....#.#..##..#.#.
        ..##.####..####..
        #..###.#....#.###
        ###.###..##..###.
        #.#.....####.....
        .....####..####..
        .#...............
        ##...###....###..
        ..#.#.#......#.#.
        ..#.#.#......#.#.
        ##...###....###..
        .#...............
        .....####..####..
        #.#.....####.....
        ###.###..##..###.

        #.##.#..#...#
        #.##.#..#.#.#
        .#..#...#..##
        #.##.#....#.#
        #.##.####.#..
        ......#######
        ##..##.##....

        ####...
        ##..#..
        ..#.#..
        ..#.#..
        #####.#
        ...#...
        .##..#.
        ##.#.##
        ####...
        ##..#..
        ##.#.##
        ###...#
        ##.##..
        ..#....
        ...##.#
        ..#.#.#
        ..#.#.#

        .#.###.
        ...#.#.
        ....###
        ##....#
        ##....#
        ....###
        ...#.#.
        .#..##.
        ###.##.
        ###.###
        ###.###

        .##...#..
        .##...#.#
        .###.##.#
        ..####.#.
        #..#.#.#.
        ..#...#..
        ##...#..#
        #.##.#.##
        ...##.###
        #..#.#.##
        #..#.#.##
        ...##.###
        #.##.#.##
        ##...#..#
        ..#...#..

        .#.##..##.#..#.
        .#.######.#..#.
        ........#......
        ..###..###....#
        ...#.##.#......
        ..###..###....#
        #.##....##.##.#
        ##........####.
        ##.#.##.#.####.

        .######
        ..#....
        ..#.##.
        ###....
        #..#...
        ####..#
        #.#....
        #.#.##.
        ##.....
        ##.####
        ###....
        ###....
        .#..##.
        #..####
        #..####
        .#..##.
        ###....

        ##..#..#....#
        ##..#..##.###
        ##..#..##.###
        ##..#..#....#
        ###.#......#.
        ....#..#.###.
        ###..###.#...
        ####.#.#####.
        ..##.######.#
        ##.#..##.#.##
        ##..#####..#.
        ##.#.###..#..
        ...#####...##
        .#..#..##.#..
        ..#......#.##
        ..#.#####....
        ##...#.#.####

        ####..##.#.##.#.#
        ##.##.###########
        ...##....##..##..
        ####.###..####..#
        ...#.####.#..#.##
        .......#.#.##.#.#
        .....#.#.#..#.#.#

        ..#...##...
        .###.#..#.#
        .#.##.##.##
        .#..######.
        .##.#.##.#.
        .##.######.
        #...#....#.
        ..#########
        .#..##..##.
        .#.#.####.#
        #..########
        ##.#......#
        .#..######.
        ##...#..#..
        #####....##
        #.###....##
        ##...#..#..

        .##.##.##..#.....
        #.##.#########.##
        ##..##..####.#.##
        #.####...#.####..
        ......#.#.##..#..
        #....##..#..#..##
        ....#.#....#.####
        ....#.#....#.####
        #....##..#..#..##
        ......#.#.##..#..
        #.####...#.###...
        ##..##..####.#.##
        #.##.#########.##
        .##.##.##..#.....
        ....#.##..##.#...

        #.#.##.#.#...
        ..#.##.#....#
        ####..####.#.
        ..#.##.#...#.
        #.##..##.#...
        #..####..#.##
        .#.#..#.#.#.#
        #.######.#..#
        .#......#....
        ..#.##.#...#.
        .#.#..#.#.#..
        .#..##..#.#.#
        .###..###.###
        ..........##.
        .########.#..
        .#..##..#.#.#
        .#..##..#.###

        .....#..#.#....##
        .....#..#.#.#..##
        ###....#........#
        ###....#.#.#.####
        ...#.#..#.##.###.
        ..#.####...#....#
        ######...##.#.#..
        ..##.####.####..#
        ..#######.##.##..
        ##...#.#####..#.#
        ..#..#.##.#.#.#..
        ...#..#.....#.###
        ##..#.#.##..####.
        ##....#...#...#..
        ...#.###...###..#
        ##.##.#.##.###.#.
        ..#.#....#.#.##.#

        ..#..#...#..#..#.
        .#.....#..##....#
        ..###.#.#....##..
        #..#..#..###.##.#
        ###...##.###.##.#
        #..##..###.#....#
        .###.######.#..#.
        ###.#..#....####.
        ...#..#..#..#..#.
        ##.#..###.#......
        .##.#..###.######
        ....#.##..##.##.#
        ..###...####....#
        ..#...#...##.##.#
        ..#...#.#.##.##.#

        ....#.#..
        ......#..
        .##.#....
        ....#.###
        ####..##.
        .#.#.##.#
        .##.##...
        .#.#.#.##
        .#.#.#.##

        #....#.#.
        ..##..#..
        ..##..#.#
        #....#.#.
        ##..###..
        ##..###..
        #....####

        #######.#..
        #..#.#..##.
        #..#.#.#..#
        .##.....##.
        .##...##...
        #..#..##...
        .....##.#.#
        .....##..#.
        .....##..#.
        .....##.###
        #..#..##...
        .##...##...
        .##.....##.

        ###..##..###.
        ..#.####.#...
        ..#.####.#..#
        ###..##..###.
        ##........###
        #.##.##.##.##
        #.########.##

        ###..##
        ...##..
        ..#..#.
        ##.##.#
        ###..##
        ..####.
        #####.#
  recorded_at: Sun, 16 Mar 2025 02:36:15 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/14_parabolic_reflector_dish.rb?token=ACG6TJ4Y35I7H3CDF6ZVOSLH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '2840'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"e9e1e56e39115216c78527e02d8b87e53fcbf70a7a62000303495a0eebd05f18"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - B6E6:2A64D9:3B95D6:4CC486:67D6391F
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:15 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200054-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092575.316192,VS0,VE322
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 6909f701c2e84d23bc70b580fb9f3e08d586f790
      expires:
      - Sun, 16 Mar 2025 02:41:15 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        map = DATA.map { _1.chomp.chars.map &{ ?O => 0, ?# => 1 } }

        def load(m) = m.sum { _1.each_with_index.sum { |c, i| c == 0 ? i + 1 : 0 } }
        def rotate(m) = m.reverse.transpose

        def tilt(m)
          n = Array.new(m.size) { [nil] * m[0].size }
          m.each_with_index { |row, r|
            (b = row.size).downto(0) { |c|
              case row[c]
              when 1; n[r][b  = c] = 1
              when 0; n[r][b -= 1] = 0
              end
            }
          }
          n
        end

        p load tilt rotate map

        seen = []

        4.times { map = tilt rotate map } until offset = (seen << map)[...-1].index(map)

        p load rotate seen[offset + (1_000_000_000 - offset) % (seen.size - 1 - offset)]

        __END__
        ..O...............O....O..O#.OO...O.O#...OO##O....#....O#.O#O....O#.......#.#OOO...O.......O##..#...
        OO##.O..#..O..#.#........OO.....#...O.#.O..O...O..O.O...O..O....OOO.........#.#O.O....#..OO..#.##.O.
        .#.O......O#.##..O..#...#..##.O......O.O#......O.O.OO..#.##.#OO.O..O.O..O#...O.O#.#O..O.#....O.O....
        ..#....O.#....O..O.OO#....#..#.OO...O..##OO###.#O#..#.O...#...#.O....O..#O#.O#..OO.#..O...#....O.O..
        ..#OO.O..###.....#.OOO...O....#OO.#..O.#.O.#.#.#O......O.O.O....O#O.O.O##.O..O..O..#.#O.#.O..O.O...O
        ..O...O.O##...#...O...##...#..O..........O#.#.OOO#.#..#.O......OO##........OO..O#...#.OO.....O.....#
        .#.OO#.#O...#.OO....O.....O.O..O...#...O....O..#......###O..O..O#.....#.O..#O..#..O......#...O.....#
        ##....#O.#OO..#.......OO.....#..##....#..O#OO.#...OO.....O....#.....O#....O...OO#..#...#...O#...#.O#
        ...#...OO.O...O#.O.......#O....#..O..#.#.O.#.OOO.#..OOO.O#........##....#.O.O...#O..O.#OO.#OOO.O....
        OO#.....O..#.#O....O...#..O.O...O..O.O#.........#O#OO..O.O....OO..OO...O...O...O.O....O....#..#..#..
        O.#.O.#.....#...#.#........O..OO..O#O#O#.....#.#....O#..O.O......O.......#.....O...O...O.OO.O.O#...#
        ...#...O.#.#....O.OOO...#.##......OO.O...O....#.O#O..O....#..#..##.O...O....#...O..O.O.O........#OOO
        .#.#......##O.OO.OO##.O...#.......O.#OO.##.#...O..#O..O.OO..O.O.O.#.O.O..#..O..#..#....OO..#..#.....
        ...#OO#.O....#O..O#.O..#.#.....#...#..O..O#O...........#...OO#O..O..#O...O.#..###.O.#......#...OO.O.
        ..#O....O.O#.O.O#.#.#...O....O.....O....#O........#OO.O#O#...O#.OO.O.....O.##..O.#...#.#.O...O#..#.#
        .#..O#O...#O#.O.....O..#.#......O..OO.O.....O.....O.#.#O#.#O.O#.O###............##...O.....O.O.....#
        .....O...#O#.#....O......##.#..#.##...#..O.O.O##....O..#...#O.O.....O..O#..#..O#...##...#...#OOO..O.
        ....O......OO##..O#O..O.....O#.#...O.#.O.#....#.OO.#OOO..#.O.O##.....O.O...#.....#.O.O....#...#.....
        ...O....#O....OO..#...#.O.......O.O....#.O......O..#.##O.....O...#O..#O#O.O#....#O..OO##..OO#....O.#
        .#...#..#....O.....O.#OO.O..#...##...O.......O......#.O.#O..#..O....O..#........#...O...O###..O.....
        #..#.O....O.#OOO##O#.##.O.#.#.#..#..O......#...OO.#..O...#....#....O...OO.#.OO...#.#........O......#
        .....#O.#..###..O..#.#.#..#..#..O....#..#......#...O..#O....O....O.....OO.O#.......O..#....#...#..##
        .#..#........#.#O#O...#...........O#....#.O.....#....#.##...#.O.O##..#O.#..O...#...##.O.##.O....O..O
        ...#.O...O...O........#...O..#.O.#.O.#....#OO......OO#.O.O##...##..OO#.#O.O.#..O....O......#....##..
        .....#O..#.#.....#O#.#.#..#..O.........O.O.#...O...#OO#.....#.....O.O.#..##...OO...O...#OO.#........
        ....#.#..#O...O..#.O...O.OO......#O#.O##O.#..O..##.#O.O....O...##O..O...#.O..#O...##...O..O.#O....OO
        ...O..#....OO..O#.......#...........#..O.....O#OO#.O..O.O..#O...OOO..##OO........#..O.O##OO#...#O...
        .O.......O.......O..O...###...O.....O.O.O#.#...O.O#..#O..#.O..OO....#O.....##...O...#O.#....O..#OO.O
        ##O#.O...OO.O.##.O...#....#..O.....OO.O....O#.O#.O..#....OO#.....OO..##.#......O.OO..#..#....#O..#O.
        ....#...#O....OO.....OO.O#.#.....#...O#O...#...#..OO..O##.O...O.O.O..........O.#.O#O....#O#...O.....
        .....O.OO#OOO..##....##.....O#.......O#..#.#..OO...O..O...##...O..O.O#....OOO..#.OO........O..##..O.
        .O.......#........#.....O.O...O...O.O...O..O....O#.....#.OO..O..#.##.#..#...#.#...O.#..##.......O...
        .....O#....O.O.#..O.........O.O....###..O..OOO.O#..#..........#......OOOO.#O...O...O.O.....O.OOO##OO
        #..#...........#....#...#.O..#...#O#...#...##.#....#O#.O#O......O#.#.#...O.O.#.O.#...O.O...OO.#....#
        .O..O##....#..O.O..##.O.#..#........#..#.O.##...O...O....O.#...O...##..O#OO.#.#..O....O..##O...OO.O#
        ...O..#......#.#.......OO....#.....#......O.O....##O..OO.OO.#....##.O..O...........#OO...OO.O.O.OOO.
        .........#.OO..O.O#....#.#..O...#.....O.O..............#.....OOOO.#..O.O#O.O.O...#..O.O.OO....O..#.O
        O.........O##...#.....#....#.O......O.O.O.O..#.O#...O.OO.#.O.O.#.....O.O..OO#.#.#.O.#...#.....#....#
        .OO.O.#O..O..#..O.O#.O..#O.#.#.OO.#O#OO..O.........O....#....#.O.O#.O.O.#...#..O...#..#.........O..O
        OO..O......O#..#O..O.O.O..O...#..OO#.OO....#.OO.#O..O.O..#......#O.#....#...#.OOO....O.O.OO....#....
        .O..#O#.......O....OO.O....#OO.O...O..#.....O#.O.OO.#..O..O.O#.....###O....#.....O.#.......O.....OO.
        .O..O.O.##.OO..#.#.O...#...#.#..OOO..O.....#.#O#..OO.OOOO.#......O..#....O.#.O.#....#.....O...#..OO.
        .#.#...OO..O....O.....O..##.#.#O#...#.....#..O.#......O.O##..#......O##..O.O...#O.#.O...........#O..
        .OOO#....#..#O##..#.....O.OO#..O..#.##....OO..OO....#.##.#...#...O#O.....O#.#.#.O......#O...#.....#.
        ....O##....#...###O.OO..#...#.O.OO#O..O.O..##......O....#....#..O###..#..#.....O.......#..O.O#......
        O.O...........O.#...OO.O.......#.....O...##.#..#.O#..#...#.O##..#O.##...O.....O...OOO.O.O..#OOO....#
        .O.O#O...O...#...............OO#......O........##OO.......O...#OO.O..O....O..###.O..O...O...O.#.....
        .O.##OO.........OO.OO..O..OO.#..#.#......O..O#O.O..##..O..O.##.....O#O.O...OO...O###..O......#.O....
        #.O...O.O.O..O#..O.O......O.#.....O.O...#.#O.O..O.......O....#.....O#OO..O..O.O...O##..O.......#....
        OOO...##...#..#.OO#O..O#.O.....O........O#....#.#.....O#.OOOO...#OOO...OO..OOO...O#........O...#....
        #....#....#.....#....O.O..O.O...##.#..O##.#O.#.O.##O.............###..#O#O.O#..#........#.#O#....#..
        O.#.#.OO.....#.##....OO...##..OO.#.......#O...O#............#O#O#....O..#......#......O#.OOO.O##..O.
        ....O....O.#O...#OO#...#.O....#.OO.O...##.O.O.O....OO#O.#....O.....O..#..O.#.O##O##....#..#..#.O.O..
        ###....#..#...OOO##O.O.#..#..O#......O....#.#.#OO.O....O.OOO..#...#O.##.#......OO.....O..#.O...#OO..
        .#...O...O....OO.....O..O#..O.O.O.#.....#OO#O....O...OO..#..O.O.O.#..#O......##.....#.....#O.O......
        .OOO........O.#.#....#OO..#.O.O...#.....#OO......O.....#......#.##.O.OO.....#O.#O..O.O....#...O.##.#
        #O.O#..#..#...O.O#...O##..#..OOO....OO.#....#.O#OO.#..OO#.#OOO##OO.....O.O.O.....O...###O..O#O....#.
        ###...O..O.OO.#...#.O.O#O.OO..##O.OO..#..O...#.......#.......#.....#..#.#..O..#.OO....O..O..OO...#O.
        OO...#OO.#....#.O.O.O..O....#O..#..O.O.O.#.......O......O.O.O.....O...O.OO#OO.......O..#.......#O...
        .#OO.......O..OO.#O.#OO...#OO..O..O.#...O.O....O....#O#..OOO.#........#.O.O...#...O#.O...O.#.#....O.
        #OO##.O...O....##..#....O.#..#.....##..O....#O...#......#O#.O..O.##.....O.O...#O.#OO.###O..#..O#O..#
        .#...#.....O#.#....O.OO##.O.O..O........O##....#.O#O#.....##...O..O#.#....O.#...##...#..#O....O....O
        ..O..O....#..#....#..#.#.#O#........O..#.....O.###.#O...O...O##..O.O..#.#.O..#...OO.O.OOO.......#...
        ..OO##O.O..OO.O..#.#...O..O.#..O#..O#...#...O.O....#..O...O.#..#.#...O..OO..........O...O.O......O..
        ..#..#.#..O#.........O.......#.....#..#.....O#..#O.....OO..#...O#O.O#....#..O#....O..#O....O...O....
        O..O..O.....#..#...O...#O.....O.OO..O....O.O....##..O.#OOO..#.#.O.O#......#.OOO..O.O.....#..#.......
        ....#.O.O.#.#..O#.....#..O##O..#..#.#....##O.....O##.#....O........O##...##OO...O#.#.O..O#O..#..O...
        ...#O.....O..##.#....O.OO.O...##..O........O..O.#.#........OO..OO...OO##...#....#...OO#..#O.O.......
        ##O..#OO....O..O#.O.O.#.OO.#O#.......#....O...#........O...#..O..OO#..O.....#...O...#....#..........
        ...##OO.O...#..#O...OO...#.OO.....O.O...OO..O#.........O...O....O#O#.O.#...OO...##O.#.#.O....O#..#..
        #.....#...O.O.O...O#..#...OO.OO...O..##.#.......#.##OO...........O...O...##..OO..O..#.....#.O...OO..
        ..O.O...O#.OO#......OO..O#....O.O...#O.#.........O...#OO....O.O.O.#O........#.##.......#....##...#..
        #.#...OO..#O..O.....OO###OOO........O.O.O....O#O#O#.O.....O#O..##.##O...O###....####.O..#..##....##O
        ..#..O.#.O.#.#...O.......O....O...OOOO...#.OO#....#.......O..O.........#..O.O.........#.O..O..O.O..#
        #..OO...##.O.#.#..#...O.........#O.#.......#O....#..#O.#...O.O..##OOOO..#.#..........O..O.O.####..#.
        #...O..#....#O..O#O#O.......O..O..O...O...OO.OO.OO.O..#.#.#OO#.#OO.#O........O..O.O.....OO.#O.#..O.#
        ..O.#...........O..OO......#OOO#...O#O#O......#......OO..O......O#..#.OOOO...O........#..#.OOO...#O.
        O.##...#OO....OOO...O....O.....OO...##....#...#O.O..#..O#O....O#....O....##......OOO.O..#...O#OOOO..
        ...O.....O.O.#.#...OOO#OOO.O.....O#OOO#.#O...O#OO.O...#...O......OO.....O...#.O.#..##....#..O...OOO.
        .#...O.....#..O......O...#.....##..O#.#O..O....O..#....O......##..#OO..O.##..#O....O......#.O.#OOO.O
        .#...O...OO.....#.O..#OOO#.O....O.O...........#...O.....OO.##.#......O.O....#.O.##O....##......O....
        .OO.....#O.##.##...#....#....OO.O...#.......OOO#..OO..O.O......#....#O...###.O..#.##.#.#..O.#...O...
        ....O.....OO..O##.O...#O##.O.#.OO.OO.O........#O............#OO.O#O.#.O##.##...........#..O.#O.O.#OO
        ..O..O...#O....O#..O.O..O..OOO..O..#.#.OO..#O#.#...O....#.O.#...#....##.....##O...#O##..O#.....#O...
        O#.....O...#..##OO..O#O........#.#...#O...O#......#O..##.#O...O.O....OO..O.OOOO...#O.O.O....#OO.O.#.
        .OO.....##..#...#.#....O...O...O...O..OO....#O..##O...O.#.OO.O##....#..O.OO.....O..##.O#.....#O..O#.
        O.....O.O..#...O..#.#.OO...O..O#.#O..#O.#.#.##..#.O.OO##..O...#.#.O...##.O....O...OO...O#O..O.O.##O#
        .#.O........##..........#...O...#O..O..#..O....OO.OO.#..O.O##.#...#.O#.O...##.O#...#....O......#..O.
        O#O.OOO..##OO.#........#O.#O...OO...#.OO.........O.#.........#..#.....O.O...#..O#O.OO..O..O....O#...
        .O#..O#...#O...O.O..O#...O.#.O.O....##O....O....##OO....O..O.#O.O....##.#O.....OO..#O..O....#OO...#.
        O..........O.O.........#O...#...#..##........O.#......O#..O#.......O...O...#O....#.##......O.#.#.O.O
        ....O...#OO..O.O.....OO.#.#O.#........#O.O...#..#.....O...O.....OO...#.OO..##.O.#......#...#.O#..#..
        ...O..#.#...#.#..#..#...OO.#........##..O.O..#....#..O...O......#..O.......##....O............O.#..#
        ..O#.O.###........#.#.#...#.O.#O#O.O.O..O.O#O.....#O.O.O...O##O.....OO.O..O..#......O....O..#O......
        #..O...O....OO.O.......O.......#..#O.#...O.###.....OO..O..O..OO.O#..#O.#OO.O#.O.O.O.O..O#...###O....
        #....##O..O.#...O...#O....O#O#........#..#........###...##..O...O...OO.#.OO#..##..OOO......O.O.#.O#.
        ...OO.O........O...O..OO...O.O#O...O#.O.#.........O.O.......O.#....O...O..#.OO#..OOO...O.#..OO....O.
        #O.OO.OO.##.#O...O.......#O.#O....O.#..O.......OOO...O#...##O##.#.......OO#O.....OO.OO#.O#O#O#....#.
        ....OO#OO...#........OO#...#..O....#.O..O...O.O.OO......O.#OO....#..#...........O...##..O..O.O......
        #...O.O..O.##.......O.......O....O.O..#..#O...O.....OOO.#.O.....##..O..#O.......#..O..O.O.....O#OO.O
  recorded_at: Sun, 16 Mar 2025 02:36:15 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/15_lens_library.rb?token=ACG6TJ7UYNKYJGLG6ROU26LH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '10515'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"7a3b220cac5e78ee5cf1a3eb7bba9092be7b7ffd6ff606f8f9318eaae31629b5"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 252A:29F3BD:3AC72A:4BD0B2:67D6391F
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:16 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200138-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092576.782808,VS0,VE317
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - eb9653513d2ffe60a0d07bb4e385a21604b47f54
      expires:
      - Sun, 16 Mar 2025 02:41:16 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        steps = DATA.read.split ?,

        def h(s) = s.chars.reduce(0) { (_1 + _2.ord) * 17 % 256 }

        p steps.sum { h _1 }

        boxes = Hash.new { _1[_2] = {} }

        steps.each {
          if _1[?=]
            l, f = _1.split ?=
            boxes[h l][l] = f.to_i
          else
            l = _1[...-1]
            boxes[h l].delete l
          end
        }

        p boxes.sum { |box, lenses| (box + 1) * lenses.each_value.with_index(1).sum { _1 * _2 } }

        __END__
        tsqxjb=8,hr=6,dtv=1,chhq=8,lcrbv=6,szm-,mx-,xj=4,dmm-,prdgn-,cnk-,tl=5,zhc-,xvcp=8,mpvh=5,xff=4,tx=6,vgr-,hkh=4,zjm-,kfj=5,gg=4,nltf=1,hc=1,rsn=7,hqs-,zsrs-,qjpjv=4,zxf=6,jrt-,sc-,gtnx-,jcl-,dm-,nch-,ct-,lh-,qzd-,rvv=9,vkqzk-,sq-,ptp=4,hng-,mmf-,vj-,nfdkq=6,hv=9,nsp-,fh-,fbn=5,bnmft=8,xtnl=8,xsb-,st=9,bjgs=7,pk-,slt-,jlxf-,zxf=7,qx-,scd=2,clh=3,xjdg-,flf=5,rrh=8,mg=7,bjvn-,cqcn-,pvr=7,rlsj=4,hxn=9,cds-,mhr-,lt=3,qcm=8,rfh-,gpknq=9,cp=2,msc=1,bg-,vmt-,jr=4,pxdlpv-,jkmvr-,rqxk-,hjx-,jr-,szm=1,sh=8,hrn-,lpsk-,ts=7,jdkkq-,czv=9,fddj-,gqgbf-,kkk-,bds=4,fldg-,dhb-,gx=4,dlf=4,lq=2,kx=1,bzhl=8,nqfn=6,vfpx-,bt=2,gnx=4,hrn=3,pxdlpv-,qjf-,rqxk-,pf-,nlcv-,srfl=7,zg=2,rjm=2,kgx=7,psc-,php=3,bj-,bds-,st=4,dfj=4,qrfx-,sgqlsb-,frp-,pf=9,lm-,jn=6,srfl-,njnpq=8,mpvh-,ghcd=7,dm-,kzbc=6,lh=8,jtc=6,qcqk=2,jm=3,vlcvb=7,tnz-,zfrs-,nqfn=5,cv=6,prdgn-,cqcn-,njnpq=6,bvt=3,hhp=6,hrn=5,bj-,jflv=9,hbh=2,ggd=9,qp-,cx-,pmhz-,ptp=3,jvnjh-,zz=5,bjbrrv-,gmvc-,qr-,fp=2,tqd-,bx-,qcqk=5,nm=5,jrc=1,ht-,ddz-,bn=6,dlnc=5,zvzc-,vf-,zxnq=4,ltxz=6,qrd=6,jtc=6,fgr=2,vcmrn-,tch-,fp=3,zrt-,slt=5,cn=1,sb=7,zd=2,cxptjr-,hc-,vfpx-,fx=3,gkj-,jjpk-,nh-,fh-,mpvh-,cn-,gdtqh=7,bctx=3,qsv-,gbv=1,gmvc-,gcf=7,rrh=4,cpds-,shxm-,hr=6,gz=5,rlsj-,pj=5,cqrh-,ggd-,sc-,nb-,fn-,pzv=1,cs-,ttj=4,tr=2,cdq=9,sntf=9,brx-,ht=2,jkjrx-,zhc-,vjtk-,tzdz-,qkmnn=8,vbd-,jlxf-,fc=6,xsl-,sp=4,ltxz=3,pmgjkd-,kl-,ggdb-,gl=5,hf=7,nqfn=1,bbjb-,sgnz-,px=3,dj=2,fq-,tcs-,zxf=8,rlsj-,hc-,frp=9,cds-,cqp-,bffjx-,khnv-,nvrn-,sg=1,zsfls=3,gpknq=5,mx-,czzf=9,jd-,gmvc=4,qjpjv-,qfl-,fh-,zvzc-,zsm=4,nj-,cqnpv-,fmm-,dqrx=8,fpmhbp=1,nfdkq-,rd=3,thq=6,mb-,cs-,lrlj=4,ht=3,slt-,hz=6,ggd-,ljr-,gtnx-,bctx-,bq-,stf-,shdd-,dpg=8,cpq=2,zdqxlx-,mzqmg-,nhq=2,qfv=4,qzft=8,gkxmct-,fcn-,xl-,gqgbf-,jxkh-,ctbxs=3,vkqzk-,bjf=9,njrg-,dsc=3,dsc-,gckl-,mdq=3,sgg=6,flf-,rfh=9,znzbpb-,gf-,fbn=6,xjb-,fnz=6,qkk=7,sxk-,lqh-,cqcn-,qzft-,hqs-,cs-,fq-,xhjtm=9,fcn=1,xrqhbm-,nrrr-,cq=2,ds-,fq-,tl=7,lk-,lcrbv-,bp=2,hqs=9,mmjb-,hm=8,dnx=8,sz=4,zgrn-,gp-,jn-,ccr=5,cnk-,hng-,sc=4,jmp-,zg=6,lqfr-,fz-,bz=4,jhd-,kskj=8,xvcp=8,fsgl-,ggt=4,pf-,ds=6,sc-,zhl-,vjtk-,gdg=7,fmb-,qr=9,tcs=3,lq=1,thq-,zhc-,ggdb-,bctx=6,zd-,fc=4,xr-,ddz=4,gfps-,lzs=9,qmj=9,qfv=5,hk-,hk-,vnh-,ggt-,dg=7,gx=4,zfr=4,jd-,njrg-,ttx=7,gtnx=4,nhq=2,mbdcz=1,pjc-,ngttt-,sq=3,zmk=1,hsq-,qrd-,ttjrn=3,dr=2,xtnl=6,nbg=1,rkx-,dcr-,qsv=6,vfpx=3,ld-,lzzb-,jdh-,tch=4,gdg-,kc-,rqgp=6,bt-,bj=7,stf-,zmd-,vfh-,hm=2,cv-,knmdd-,hz=7,pmgjkd=8,xsb-,jkjrx-,jdkkq-,qkmnn-,rr-,dsc-,mdq=3,pld=5,sq=9,mt-,sxk=8,xqqdv-,drv=1,qfv-,shdd-,xc=1,nbg=7,ptp-,dtv=8,ghcd=9,skrn-,qzd=7,gtnx=9,xrqhbm=1,nlcv-,bfvzh-,jflv-,hnf=2,dqrx-,gg-,tqd=4,dg-,lzs=3,ptmbcq-,gt-,hv=4,sg-,sgnz-,vh-,tnz=5,fk=5,bds-,dpj=5,xgq=2,xhjtm=6,dt-,nf-,jvzb=2,sn-,hv=3,lfbxds=5,qkmnn=7,qg=2,hxn-,pvr-,qg=4,zn=1,vv-,frp-,dt-,rrh=4,vtm=7,dcr-,jkjrx-,mbdcz=9,td-,rq=2,stg-,mdps=3,ggd-,dhb=7,mkm=9,mdps=2,xr=7,txbr-,tzz-,tk-,dhb-,rtct-,zmd=4,jc-,ttjrn=2,pvr-,hhp=9,dcr-,rg-,mdq-,jr-,khnv=7,rk-,jz-,bqq-,cpds-,tncjgs=5,ml=5,vx-,bjgs=9,mmf=9,dfj=8,rqgp-,pjtzxc-,tx=4,shdd-,jp-,qg=7,pvr=2,nnm=4,bzhl-,pzv=8,ttjrn-,qkk-,pc-,fsgl=7,hz=9,ttjrn=8,bj=5,xhb-,sg=4,tt=3,rkr=5,tqd=9,vtm=6,rvv-,vfh=4,sdkkg-,rt-,zxf=3,gpknq=2,php=4,cxptjr=1,gpknq-,psc=8,tcs-,khnv-,fk-,rq-,ngttt=9,gdtqh-,hk-,jz=3,xndq=5,ngttt=8,vh=4,mb=8,gdm=1,cbnfl=7,rbhl-,vhvpk-,lcrbv=2,knb=7,pmhz=9,tk=4,cf-,tl-,xn-,bvt=1,dlf=1,fhx=4,xsb=4,sntf=4,hf=1,sh-,vzscd-,nlcv-,gq-,bc-,qr=5,qr=2,nl-,mmjb=2,gqgbf-,gdg=7,vfh=8,pmgjkd=7,vg=2,sq=5,gg=3,zvb=5,gg=9,zrt=7,qmj=1,xn-,rlsj=1,clh-,dhrgg=4,czzf-,ds-,zhl-,fh-,dhq=3,lh-,hkh-,kkk-,hkh=2,dlnc-,thq=8,ttjrn=1,kgf=5,hqs-,zsm=8,lt-,nltf-,stf=4,ld-,qp=8,bbjb-,fzfg=5,zd-,vmt=8,lpsk-,dv-,crc-,hc-,xj-,rd-,qsv-,zmk=6,vtm-,lc=3,th=4,lt-,bbb=3,xff-,znzbpb=7,gdtqh=3,mzqmg-,kfj-,xndq=8,czv-,jjpk-,msc=5,fh-,jjpk=7,zmk=1,cf-,zfrs=6,rt-,zvzc=5,jvzb-,hr-,lt-,hcnchc-,pld=7,svz-,gf-,cn=1,gkj=3,rz-,fc-,rg-,zmd=5,pmhz=5,szj=4,ltxz=1,lm=5,qcm-,jxlg-,gckl-,znx-,xtr-,mpvh-,lq-,zdjkk=9,vl=9,zkdjf-,cvpp-,xl=9,fcn-,thq=4,zdpcrj-,mb=7,tt=7,dph=7,zfrs=7,fzfg=3,jp-,rd-,pmgjkd-,pmhz-,qpnf-,qfmjv-,ljr-,ds-,bjvn-,rd=4,cdq-,pmhz-,sb-,ngttt-,qfv-,cpnx-,hqs=5,qcqk=8,vhvpk-,jhd-,jtc-,bjbrrv=9,hjx=5,gx-,nh=9,xnj=5,fpmhbp-,jnzl=2,jpmnk=9,fhx-,qjf=3,mc=6,qp=3,nz-,fx=8,bjvn=8,fgr=4,fhgz-,jvzb-,scd=3,rvv=6,sg=3,tsqxjb=1,sgg-,zhc=8,dqk-,jhd=8,qjf-,nr=9,dph-,fp=4,nb=3,vnf=5,kx=9,slt=2,sg-,nvld-,knmdd=3,msc=9,mbdcz-,zsfls-,fnz-,hf-,svhqlj-,nf-,xj-,rt=1,gx=8,szm=2,bjgs-,dhz-,pk-,kk-,knb=7,tr=3,frvmt-,zhl-,tj=7,dg=9,ml=9,xhjtm-,frvmt=9,snhdx-,pmgjkd=9,dfj=9,sx=1,bg-,qzft-,jrt-,nhq=4,tk=6,bd=5,fbn-,lh=1,qcqk=2,jmp-,nh-,zmk-,hnf-,shb-,stg=6,tsqxjb=1,dznp-,pjc-,lpk-,gbv=5,rg=8,ggt=3,xtnl-,mp=3,xjdg=6,vf-,zsrs=2,ht=9,ttj-,dg=4,tx-,rrh=2,qfl-,msc=6,bbjb=3,ct=1,fhgz-,bjf-,dpg=8,xn-,sgnz-,xc=4,qh-,bnmft=4,zgx-,gzbg-,qzft-,hkh=8,stg-,czv-,rs=1,dlf=6,brx=9,xqqdv-,hsq-,hjx=4,hm=3,lx-,kzbc-,czzf=3,dznp=9,gfq=8,mkm=4,bjbrrv-,bzhl=1,lfbxds=9,tsz-,rvv=7,ldvl-,xl-,sc-,pmhz-,lzzb-,cp=6,nfdkq-,kzbc-,rm-,hscr-,rd=6,nqbl-,rz-,gg=3,gdg=6,vhvpk=5,cbnfl=8,kxsj=1,fvd=4,bjbrrv=8,td=1,rvv=8,bfvzh-,mb=2,px-,vx-,xc-,bjst=1,dzf=3,pjtzxc-,stf=7,gckl-,stg-,kkk=9,vgk=8,brx-,cf=1,lfbxds=5,bg=1,bcdqgj=5,scd-,jlxf=7,sz-,bjq=2,qkk-,ccr=3,cdq=8,ltxz=4,nltf-,qghqc-,dhq-,kgx=2,dj-,cxptjr-,qr=4,lt=6,rz=3,dlnc-,bzhl-,jvtl=3,skrn=3,rvv=9,rbhl-,qjpjv=6,stg=1,gtnx-,bqhxd-,slt-,dj-,xhjtm=4,vl-,mmjb-,cpq=8,xqqdv=2,qfl-,vj=6,kk-,zgx=9,qjpjv=9,tt=5,lpsk=7,vnf=8,dr=3,fnz=9,jkmvr=1,xsl-,bq-,bfvzh-,rvv=6,sgqlsb=4,sc=6,qfl-,zxf-,frp=3,clh=8,rt-,zxf-,xjb-,tsqxjb-,hhp=6,mnm-,gz-,nrrr=8,mbdcz-,fvd-,dznp=5,nbg-,vlcvb-,xsb=9,qjpjv-,xtnl-,gbv=2,cnk=6,jflv-,vgk-,lrlj=3,hf=9,dlf=7,bbjb-,lfbxds-,bcdqgj-,ctbxs-,fdc=2,mzqmg=5,kxqg-,qh=9,hnf-,xhb-,pc=3,ff=3,jhd-,dlnc-,bqq-,svz-,kskj=7,nnm=6,xtr=6,sntf=3,jpmnk=9,tms-,tsz-,dhz=1,nltf=2,phljs=2,ht-,szj=7,mpvh=2,tnngr=4,zkdjf=1,zvgx-,txbr-,bn-,rlsj-,sb=2,rkr-,hjx=8,ggt-,zjm=4,dfj=6,lpk=3,flf=4,vtm=6,qzd=3,dph-,bx=8,bctx-,ngttt-,skrn=6,dzf-,zdjkk=9,zs-,ljv-,jnzl-,bsxfk=3,xxz=5,hfcjfx=2,bctx=4,bzhl-,tch-,dj=7,vfpx=1,dlnc=3,hs=5,bffjx-,flf-,pxdlpv-,kvzd=2,pjc-,dpg=9,drv=1,rjm-,mc=8,qsv-,scd-,ds-,ldvl=6,bj=6,bds=4,qjf-,lzzb=3,lrk-,lqh-,shxm-,ds-,zn=5,cqp=5,ddz-,pnblf-,lfbxds=2,nch-,zjm-,spmz-,zfrs-,fzfg-,pxdlpv-,bffjx=7,td=4,dbs-,dsq=4,kcgr-,xgq-,qkk=4,xn-,rbhl-,kcgr-,qfv-,xrqhbm-,kl-,vtm=9,znzbpb=6,lm-,mm=3,bfvzh-,frp=9,jr-,slt=3,xndq-,bjvn-,qx-,sgnz-,dr-,mqlfsf=6,skrn=6,qdqp-,ctbxs=2,nltf-,mp=2,rm-,vtm=5,nch=2,shdd=8,jqfs=6,lrk=5,pj-,hqs=3,vvf=2,qrd=2,pvr-,zdjkk-,hc-,dg-,cpnx=2,rbhl=9,bn-,cqrh-,kvzd-,vrq=8,kcgr=7,lt-,hk=5,nbdsxb-,bp-,zxnq=8,tdg-,vcmrn=5,cpq=3,qp-,fc-,rz=9,dlf-,gf-,ksg=1,zn=6,ftd-,spmz=2,sxs=6,nhq=2,lfbxds=1,rfh-,sgg=1,nch=6,gqgbf=7,rt=6,dm=5,fbn-,nrrr=5,vhvpk=1,ljr-,bbjb=2,kfj=4,fzfg=7,qpnf=3,ttjrn-,qm-,rbhl=1,khnv=4,rx-,cbnfl-,dg=1,gfps=2,hrn-,tncjgs=6,tqd-,fc-,tj=8,mp-,tms=5,vgr=5,jmp-,fz-,zkdjf-,shb=2,nj-,dbs=5,qzft-,mv=9,ptmbcq-,fp=6,frvmt-,qjf=6,hf-,ld-,zhc-,qzd=5,zrt-,rj-,vsck=6,fvd-,czzf-,qfmjv=8,knv-,hm=2,cq-,cf-,mm-,dt-,cpnx-,rsn=1,dm=9,bslt=7,hm=8,jkmvr-,zkdjf-,qfl-,nrrr-,ts-,nj-,jp=3,qpnf-,lcrbv=3,fn-,fc=9,bn=4,xvcp=2,gcz=2,psc=5,bqq-,bd=7,rd-,ftd=7,nfdkq=6,srfl=8,vhvpk-,lh=6,khnv=5,dfj-,bp-,xqqdv-,cq=6,vsck-,cx-,tj-,szj-,mdps-,gq=2,fc-,lzzb=2,lt=5,zxf=5,crc=7,jvnjh-,cxptjr=4,vv-,zdpcrj-,jlxf-,cq-,gx-,xsb=9,bt-,jmp=4,cpq-,zsfls=5,ftd-,lpsk-,jkjrx=6,fn=8,ml=1,znzbpb=4,krhb=1,jc-,hr-,fzfg-,cqnpv-,lt-,nb=9,hv=3,zn-,xhjtm=1,vfpx=4,mmf-,fz=1,stg=3,zvb-,gmvc=2,vg=4,zfr=9,fvd-,gl=4,gqgbf-,bjq-,vf-,zd=7,bds-,gg-,ngttt-,dpg-,cz-,fcn-,rzd-,pkp=6,nvrn-,xndq-,nbg-,bzhl=8,bcdqgj-,nz-,fjv-,nbg-,thq=6,rd-,bvt-,cds-,qfl=7,gt-,dhq=9,lh=6,sb-,gdg-,fldg-,ds=9,vzscd=2,cqnpv-,xjb=9,nnm=8,fsgl=5,bds=2,hqs-,nh=1,tj=3,lqh-,njrg=4,hlx-,kxsj-,dhb=2,qmfxv=8,fz-,mt-,vgk-,gq-,lqfr=4,pxdlpv=7,xn-,frvmt=9,lpt-,dr-,fvd=9,bjvn-,gt=7,hjx=9,gnx=6,jr=6,gcf-,tdg-,mg=8,kgf=8,hrn-,td=6,sxs-,pk=9,xl=1,pnblf=3,ml=1,nz-,tx-,xrh-,dhb-,ddz-,fx=7,hbh-,vnh=8,dhz=7,knv-,ccr-,xxz-,nqbl=6,bjst-,rsn-,sxs-,qjpjv-,tzz-,hz=2,vbd=7,psc=5,bffjx-,dmm-,hbh=7,frvmt-,tnngr-,nvrn-,dpj=6,lzs=6,mv=3,qmfxv=6,hbh-,xtnl=1,dfj=1,zdjkk=3,qt-,sxk=4,cds-,jdkkq-,hnf-,mx=3,vzscd-,cpq-,vdfvp=9,hqs=2,rqgp-,xxz=5,hcnmh=9,hcnmh-,hfcjfx-,gkxmct-,bzhl=4,hng-,nr=3,xxz-,fq=7,dhb-,rbhl-,svz=1,gqgbf=5,frvmt-,vjtk=1,kl=9,hs-,jfp-,pkp-,dt=5,fdc=9,qx-,bg-,rq=8,vgr-,jxlg=7,tdg-,jtc-,zfrs=3,dhz-,rjt=5,pnblf=6,st=8,cdq=1,bsxz-,xjdg=2,zgrn=6,qx-,dqk=1,kzbc-,vn-,dpg-,pf-,dfj=9,jlxf-,znx-,hfcjfx-,qfv=5,zkdjf-,dhrgg=4,pmhz-,vcmrn=4,kkk=6,drv-,gmvc-,hsq-,lzzb=2,ggt=2,ddz-,bctx-,hlx=8,jrt=4,zs=9,bjt=9,bbb=3,fldg=8,cnk=3,vgk=4,stg=9,tsz=9,qfv-,lfbxds=8,sntf-,vn=2,vfpx=9,zkdjf=9,lh=8,qfl-,fvd=5,dv-,mt-,zsm-,nb=2,kvzd-,hr=4,njnpq=7,dsc=9,nfdkq-,dqk=8,vcmrn=9,dsc-,dmm-,hfcjfx-,dqrx=4,qzft-,hlx-,ljv-,qkk=3,msc-,cqrh=9,xxz=2,kkk=9,lfp=3,qx=8,vgr=5,rkx=7,jrt=9,cn-,gd-,fcn=8,mhr=2,tr-,dtv-,cqnpv-,cpnx=3,cdq=6,vf=4,zvb=2,jdkkq-,gq=8,zdqxlx=4,chhq-,dsq=6,xgq=1,nr=5,bfvzh-,hnf=8,hcnmh=4,gmvc=2,nvrn-,hnf=7,vv-,zxf=1,dqrx-,gkj-,fq-,xl=8,kfj-,pjtzxc=8,stg=1,vx=5,ptmbcq-,zvgx=5,lq=4,mzg-,hcnchc-,mb-,ggd=7,nltf=7,zgrn-,xtr-,szm-,ggd=7,bffjx-,cvpp-,gckl-,cn=9,pfbkbm-,knv=7,kxsj=7,nrrr=9,ggt-,flf-,qrd=7,rd-,xc=5,gnx-,dhb-,qrd-,dmm=1,st=4,hhp=1,zmk-,bbjb=1,lc-,cnk-,shxm-,bt-,gqgbf-,vj-,bj-,ts=2,bq=1,qdqp-,gg=6,bjq=3,gfq-,bjbrrv-,cl=1,vfh=9,bjq=9,qn=7,flf=9,rkx-,cnk=3,fbn=6,gkj=6,bp-,jd-,mhr=1,scd=4,dnx=5,cnk-,vtm-,bjv-,shb=4,vhvpk-,cqnpv-,kxqg=5,ttjrn-,tt-,cqcn-,lpk-,bvt-,qn-,tzdz=3,bvr=5,pvr-,gf-,tvc=3,sxk=1,dlf-,vh=3,pld=4,kgf-,rqgp-,qsv=7,bbb-,bjv=5,lcrbv-,bqhxd-,zfr-,lqfr=9,zsfls-,zkdjf-,ttj=4,szj-,ghcd=9,pfbkbm=3,jvzb=6,ts=1,vzscd-,kgx=1,tzdz-,sq-,qn-,rbhl-,lrk=1,nhq=7,sgqlsb=6,xj-,bjst=5,cx-,xl=6,sh-,qdqp=5,jkr-,pjtzxc=5,vlcvb-,vkqzk=9,gz-,jqfs=3,thq=9,srfl-,tsz=3,hrn=3,ng=6,qghqc-,ljv-,vgk-,mc=1,slt-,lrk-,sq-,fbn-,jqfs=7,hk=1,jflv=1,zgx=2,hng=1,gpknq-,qpnf-,dm-,ghcd=7,lrlj-,bp=7,bcdqgj-,hz-,cqnpv=1,gfps-,qrd=8,sgnz=8,vvf=7,nsp-,hscr-,xjb-,zdjkk=2,vj=2,tms-,zmk=6,tqd=5,bd-,cpds-,cds-,qjf=6,gd-,tdg=4,kk-,sx-,bcdqgj=6,mss-,ctbxs=2,rrh-,tt=5,tk-,jfp=2,szj=6,qghqc=7,gp=3,njnpq-,nltf-,fjv=3,zz=6,kdmd-,cz-,sntf-,knv=8,sxs=4,hm=8,zdjkk=8,qm=5,xn-,vvf-,snhdx=7,shb=4,vvf-,sn=8,pmhz=4,sgg=2,jflv-,mv=3,ccr-,scd-,ltxz-,snhdx-,rk=2,pmgjkd=7,shb=7,xxz-,jvtl-,ds=3,kxqg-,zvb-,cqcn-,ts-,czzf-,dhrgg-,mmf=1,qp=1,mv=2,scd-,bt=9,gfq=5,rrh=8,gkj-,gcz=8,ng-,rkr-,cz-,fcn=5,pfbkbm=2,nqfn=3,cbnfl=9,ksg=1,ksg=9,sxs=4,lh-,mnm-,gcz-,nvld-,tqd=7,fmm-,vfpx=5,jlxf=5,tx-,gt-,vvf=1,dsq=8,thq-,fddj-,mhr=2,tt=6,nb=7,shb=3,zvb-,szm=4,cpq-,zmk-,hng-,sb=4,rbhl-,bctx=7,mp=1,gzbg=9,tnz=2,sx-,sgqlsb=5,sgqlsb-,vnf-,fddj-,mk-,bvr-,rvv-,kfj-,pzv=5,rz-,rqgp=6,bbjb-,hk-,sgg-,ngkmdh=5,ggdb=2,fk=9,hc=1,mv=5,vrq-,rlsj-,mbdcz-,sdkkg=4,nlcv-,pj=7,bjvn-,cqnpv=1,sp=6,kfj-,xr=1,pc-,jkmvr-,cds=2,ggt=6,brx-,xxz=9,bcdqgj-,zg-,fcn=4,vdfvp=7,ggt-,nsp-,hcnchc-,cf=6,jvnjh=6,sgqlsb=5,rg=8,kxsj=2,sc-,xff-,gdtqh-,ds=2,zdqxlx=6,ds-,lx=7,pkp-,mss-,dmm-,tcs=1,gp=4,gckl-,pjtzxc-,hm=5,lzzb=8,hsq=4,bqhxd=4,qfl-,gmvc-,ldvl=7,mmf-,vtm-,zdpcrj-,nnm-,bc=2,lcrbv-,kkk=4,php-,gkj-,bsxz=6,mm-,zdqxlx=6,sz=2,tnz-,nbdsxb-,ggd=6,zvzc=3,gbv-,gg=9,qx=8,gmvc=8,jkmvr-,slt=7,td=4,bc=1,drv=5,dznp=1,nq=9,ml=7,cv-,cnk-,xtnl=6,bzhl=3,nfdkq=3,dfj-,qg-,drv-,skrn-,tzdz=4,fn-,rr-,kl-,nfdkq-,kvzd=9,nvld=9,dtv-,lcrbv-,xr-,vh-,ljr-,kzbc-,gqgbf=8,frvmt=2,dbs=6,qx=1,gmvc=8,fn-,lx-,fn-,nbp-,dznp-,bfvzh=7,cq-,vzscd-,jnzl=3,ftd=2,vcmrn=2,vj=5,tnngr-,ldvl=1,qcm-,vf=9,nsp=2,jm=5,jvnjh=2,lq-,rg-,ml=6,rjm-,bjt-,szm=9,tsz=7,jflv=3,ltxz-,mkm=1,shdd-,mk=7,cqnpv=2,hrn=8,khnv-,qr-,vf-,xhb=9,jdh=3,jcl-,svz=5,hm=8,qfv-,fp=9,vzscd=2,zvb-,ddz=3,dvn=5,rbhl-,vhvpk-,rkx-,gd=3,rs-,hsq-,ksg=8,sntf=3,gg-,hm=9,jd=7,xn=5,njrg=3,jqfs-,prdgn=6,clh-,tqd-,psc-,drv-,gkxmct=6,jkjrx-,sx-,zmd-,vsck=5,sgnz=5,vgk-,fpmhbp=8,hcnchc=9,zdqxlx-,lx=2,gkxmct-,hjx=3,hng-,bjgs-,qxm-,bg=1,gckl=6,czv=2,gkj-,px-,dg=2,xrqhbm-,fn=3,nq=8,xsb=8,qmj=1,nch-,tdg-,gfps=2,hbh-,dbs-,bc-,dhq=5,gckl-,gl-,dt-,lpk=6,gqgbf-,fgr-,bx-,slt-,fgr=5,gkxmct-,lq-,bzhl-,tdg-,zfrs=6,mqlfsf-,fzfg=8,cqp=5,dznp=9,sntf-,xzbll=7,vl-,vkqzk=9,lrk=2,tnngr-,jz-,nh=7,znx=8,ldvl=4,stg=9,sntf-,dt=6,qrd=3,cbnfl=6,bqhxd=1,mnm-,fhgz=7,kskj-,vgr=4,jxkh-,lrk-,bffjx=7,dt-,xhb-,pfbkbm-,xrh-,xzbll-,gpknq=2,kxqg-,ggd-,qg=6,tsqxjb-,dph-,nz=9,crc=3,sc=3,nl-,qpnf=8,jkr=1,xhb=9,vnf-,qxm-,rjt-,czzf=4,rd-,nh=5,qxm-,rm=4,zxf=9,lfbxds-,km-,rs=4,gp=9,vrq=6,sgqlsb=1,gbv-,mv=6,bjf=5,ttjrn-,mk=1,xzbll-,gqgbf=9,jdh-,nj=5,xxz-,kcgr=2,frvmt=3,jm=1,kxsj-,jhj=6,tzdz=7,rkx=4,lt-,fgr-,rk=5,dmm=7,nlcv-,ff=8,xrh=4,ltxz-,cds-,bnmft-,gqgbf-,nz=6,ccr=7,mdps-,td-,tzdz=4,tqd=6,nnm=9,vnf=9,kfj=3,sg=8,qpnf=8,zdpcrj-,gtnx=1,mx=2,vdfvp-,rx=7,qcm-,rrh=9,rjm-,zz-,gd=4,xc=1,zn=3,vg=7,rz-,bjt=2,ptp=1,vkqzk=8,psc=1,fjv-,zg=7,rg=8,kdmd=5,fhgz-,tk=4,tx-,vcmrn-,gnx=3,hsq=3,kskj=6,xj-,zg-,zg-,bsxfk-,bsxz=1,hrn=9,qr-,czv-,pf=5,shdd-,kfj-,brx=5,dr-,mdps-,kc-,rg-,lrk-,jn=4,xr-,gqgbf-,lpk=5,tt=4,rt-,sp-,ttjrn=1,znx-,km=7,xzbll=5,mmjb-,kfj=4,kzbc=8,qsv-,px=2,gdtqh=2,lt=6,qpnf-,xl=3,kfj-,gf=5,rtct=5,khnv=6,tnz-,jfp=1,qp=1,fsgl=9,fvd-,nsp-,hcnmh=9,nvld-,prdgn-,hcnchc=9,hv=7,mzg-,nvrn=2,gq=4,frp=2,khnv=8,tvc=4,kxqg-,bfvzh-,fcn=1,kcgr-,dzf-,vvf-,zxnq-,cvpp-,bq-,fvd=7,shdd=2,pxdlpv-,pfbkbm=4,dhz-,czv=2,zd=2,qfmjv=3,qn-,tt-,lrlj-,hr=6,chhq-,vcmrn=7,vfpx-,mzg-,kc-,gkj-,dhz-,xtnl=8,qh-,lc=9,gp=6,gkxmct-,bp-,nlcv-,tr=6,jvnjh=5,gf-,vmt-,vrq-,qfmjv-,bjv=9,fz=1,cz-,qjpjv=7,ff=6,kvzd=9,mk-,zdjkk-,qn-,hsq=9,qdqp=2,zjm-,pf=1,ggt-,jjpk-,tk-,jdh=9,gq-,lk=1,dfj=9,brx-,bjf=3,szj=7,jtc-,cs-,hf-,px-,nsp=1,zmd-,gmvc=6,dj-,rlsj=5,nrrr=6,nz-,cs-,zfrs-,hc=5,qkk-,mg-,chhq-,sq-,nfv=3,gg-,vh-,kfj-,lt=5,vh-,jfp-,nfdkq-,jrt=7,zsfls=4,qrfx-,sz-,bvt-,zvzc-,ml-,fgr=1,szm=8,rtct=1,rkr=5,jhj=2,xsl-,zgx-,pxdlpv=1,jhj-,mt-,xsl-,mkm=8,kl=8,qrfx=1,dqrx=8,ggd-,zfrs-,mmjb-,bvt=9,cz=5,qm=7,ljr-,mdps-,dfj-,gnx-,xbcm=1,bx=6,zhc=5,qjpjv=7,ptp=5,ljv-,gdm=9,dv=1,tx=5,pnblf=4,mnm-,tl=9,hr=2,jmp-,ts-,dlf-,xsl=1,dfj=8,dsc-,gc-,tnngr=9,dph=7,bjt-,fsgl=4,rjt-,njnpq=5,gdg=8,njrg=5,jvtl-,bt-,kl-,svz=6,mkm-,jqfs=4,rr=5,rs-,cpds=9,xvcp=3,gdm=3,bjq=8,tnz-,fjv-,stg-,lk-,dcr-,nltf-,zdqxlx-,nqfn=3,hk=6,xl-,rk-,vg=4,hsq=7,cqrh=8,zgx-,khnv-,sgg-,php=3,lfbxds=8,dzf-,pkp=5,nb-,qpnf-,xqqdv=9,vcmrn=4,frvmt-,nbp-,xgq-,rzd-,zfr=5,xvcp=4,bffjx-,gz=9,xtnl-,fk=8,vfpx=9,sntf-,nrrr=9,bp-,gkxmct=4,qm-,prdgn=4,jxkh-,nb-,nfdkq-,psc=9,zsfls=6,psc=4,dmm=4,qkk-,qh-,bj=6,gdm=6,zz=4,sdkkg-,thq=8,hjx=7,snhdx-,bslt-,hf-,mhr=1,bjf=7,vlcvb=9,bd-,ttj-,qpv-,prdgn=3,gdm=8,mkm=7,hmj=4,kcgr-,fsgl-,qmj=1,bz=2,zmk=1,hlx-,cpds-,fhx-,nbdsxb-,rsn-,tnz-,nfv=9,sq-,bz=9,ts-,fjv-,vh-,tcs-,zn=1,ccr=3,zhl=5,qfv-,mpvh=5,shxm-,rvv=1,msc-,qjf-,gq=4,sdkkg=5,fk=4,pjc-,mzg=9,nrrr=2,dhrgg=2,zs=8,hv-,dph-,rr=3,rbhl-,bq-,xndq=4,qsv=5,dfj-,dlf=5,vh-,jtc-,qmfxv-,kzbc-,prdgn=9,mzg-,nbg-,jqfs=3,gd-,bvr=4,cl-,gcz-,jrt-,fdc=7,lpsk=1,hrn=8,dfj=3,cqrh-,rqxk-,bjbrrv=7,dhb=8,jrc=6,zd-,bvt=9,fx=8,ldvl-,zvgx-,ljr-,snhdx=5,bz-,ljr-,jrc=4,lh=2,jkmvr-,pc-,jn-,qg=1,hr=3,lrk-,ltxz-,lk=4,dm-,ftd-,sx=9,vhvpk-,qjpjv=9,qfmjv-,ttx-,sh-,qt-,kxsj=3,hv-,xrqhbm=7,rs=8,ksg=8,cn-,vdfvp=5,tncjgs=2,hcnchc-,cz-,tms-,lzzb=1,snhdx-,pmhz=6,kfj=6,sh-,gkj=9,zkdjf=4,rqgp-,rq=4,gdm-,tms-,zfr=7,lc=2,ct-,fjv=6,nbp-,jhd=6,cv=7,zd-,mss=4,vcmrn=9,bbjb=1,qzft-,slt-,vbd=3,vrq=6,nnm=5,nl-,dr=6,spmz-,nbp-,sxk=5,znzbpb-,vfpx-,hcnchc-,gcf-,jhj-,vlcvb=1,pk-,jcl=2,zz-,cs-,nvrn=2,zgx-,xjdg=4,bd=4,sgnz-,fjv=4,psc=9,gz=5,nq=9,kcgr-,xtr=8,mx-,nltf=5,tsqxjb=1,zgrn-,fhx=4,vhvpk=3,nm=2,tr=5,qkk-,pnblf-,kcgr-,pmhz=5,tnz-,dpg=8,msc-,fmb-,lpt=9,pxdlpv=5,tnz-,hnf=7,srfl-,hf=5,bqq=2,dr-,krhb=7,nfdkq-,mm=1,ml-,xhb-,qp=9,jfp=3,zdjkk-,xr-,rkr-,czzf=2,hcnmh=7,xrh=5,jkjrx=7,dfj=6,pj-,shb-,kgx=8,fmm=5,gg=5,jxlg=3,xjdg-,zfrs-,xr=3,qkmnn-,gcf=3,st=6,ngttt-,vnh-,crc-,xhb=9,bqhxd=8,lcrbv=2,dznp-,vzscd-,bn-,zrt=4,nj-,ltxz=8,rr-,qm-,tcs=5,bqq=2,qx-,sq=2,zz=3,drv-,rvv-,php-,nh=6,chhq-,nz-,lx=5,dm=4,vfh=6,cpnx-,kcgr=8,jz=8,qxm=8,xj=8,lqh=4,zkdjf-,hnf=4,ct-,bq-,hc=5,hc-,nqbl=9,lrlj-,jjpk-,sn-,drv-,gdg=5,pxdlpv-,rx=1,cp-,cdq=4,vgk=7,kl=9,rs-,xff-,bzhl=4,dqrx=6,mzg-,xbcm=4,bnmft=7,vl=1,nqfn-,hv-,dfj=5,zfr=7,sz=1,rg-,cqrh=3,bqq=3,st-,bctx=8,kc=7,hc=3,ljv=3,zg=7,vg=2,pjtzxc-,gbv=6,jrc=1,qcqk-,jmp=8,stg-,nfdkq-,kfj-,xl=3,xrqhbm=1,rrh-,stf-,vrq=9,gc-,qmj-,rk=9,fhgz-,vtm-,vx=5,drv-,cn-,sb=8,cx=2,bslt=1,qzd=2,hk=1,vf-,zn-,ld-,jrc=2,bt=1,zsfls=3,ttx=8,nlcv-,bjbrrv-,lfp=5,cf-,dj=1,vgk=4,jvtl-,khnv=3,cqrh=3,ts-,kxsj=1,pld-,hkh=2,hbh=3,shb-,tx-,bp-,dtv=4,bffjx=1,dm-,ljr-,ksg=4,vcmrn-,cvpp-,rjt=4,jr-,pf-,znzbpb-,cqnpv-,fc=3,dhb=8,rx-,fsgl=6,stf-,tch-,vv=6,cf=6,tzz-,qfmjv-,ngkmdh-,rjm=7,jz-,cqnpv-,cpq=1,ggdb=3,jxkh-,hmj=6,qp=7,vfpx=1,ggt-,qm-,vnh=9,cx=5,zfrs=1,fk=4,hqs=2,zdqxlx-,cpnx=7,hc-,qzd=5,dznp=6,dlnc-,fmm=2,shdd=2,gx=3,cnk=8,jdh=5,zdpcrj=9,gfq-,gnx-,qdqp=8,dlf=3,vfh-,kcgr-,xff-,xsl=9,njnpq=7,tzz=4,gbv-,qjf-,zsrs=4,tsqxjb=5,mk-,knv-,nvrn-,jxlg-,nrrr-,nf-,qdqp=5,cds-,gmvc-,qfmjv-,dv=2,hs=6,szj-,knv=4,vgk-,fbn-,hlx-,tcs-,ljv=9,qmj=9,vl-,skrn=6,vhvpk-,mzqmg=7,xc=8,czzf-,ftd-,jdh=4,nj-,mpvh-,ht-,cds=8,kcgr-,gtnx=9,xzbll=5,ftd-,sb-,pld-,vnf-,pnblf-,sq-,dlf=9,tcs=7,st-,vv-,ksg-,jm=7,cqcn-,kzbc-,hng=8,sc-,phljs=4,qrd=8,xgq=2,xxz-,shxm=3,mp=9,hnf-,nq-,mbdcz-,stf-,pvr=2,tsqxjb-,bctx=8,bj-,zsfls=8,psc-,kc=1,mhr-,hc=4,vg=3,bcdqgj=2,vjtk=3,hr=3,sxs=4,zxf=9,qmfxv=3,hqs-,bjq-,sz-,bqq=4,sp=8,lx=1,jvtl=5,zdqxlx=2,fc-,xnj=3,svhqlj-,bqhxd-,cf=8,lh=8,dvn=9,jdh=6,szm=8,gx=1,vnh=2,nb=6,vj=6,xhb=6,cv-,km-,dqrx-,rrh-,zgx-,knb=5,tsqxjb=2,rx-,vvf-,nbp-,hk-,ml=8,gg=6,txbr-,vtm-,rtct=8,dlnc-,dph-,jz-,rjt=5,nf-,pjc=5,kxqg-,fldg-,dsc-,vj-,cvpp=7,qjf=9,sp-,tch=4,tsz=3,zvgx=7,vdfvp-,zfrs=1,flf=1,jkmvr-,lzzb=4,mv-,gfps-,bz-,cds=5,nh=7,tcs-,msc-,pnblf-,ctbxs-,mt-,ggt-,mbdcz-,xsl=1,dsq=6,cn-,flf-,qm-,qdqp-,bctx-,vfpx-,jdh-,fk=9,gg-,ptmbcq=7,ngkmdh-,hfcjfx-,cdq=9,jhd-,kdmd=1,kxsj=5,snhdx-,jnzl=1,zz=3,zfr-,stf=5,vcmrn=8,xsb-,zgx-,bjbrrv-,xhjtm-,xj=4,xsb=4,tzz=9,qfv=8,ljv=4,nf-,hkh=7,srfl=7,dg=5,gx-,pnblf-,dqk=2,nj-,vg=1,nh=1,td-,dqk-,xvcp-,rs-,tzz=1,fq-,phljs-,lpk-,vf=3,hcnmh-,hr-,xl=8,fk-,ds-,zrt=1,lpt=5,xqqdv=2,vfh-,bsxz-,zxf=8,jp=8,phljs=3,tzz-,kskj=3,jxkh-,bsxfk-,gqgbf=3,mzg=4,kxqg-,lpsk=6,jn=1,qpv=4,nbdsxb=7,jxkh-,ts=4,ltxz=2,tj=9,xsb-,rqxk=6,cn-,jvzb=6,hcnchc-,gmvc-,mm-,lq=5,chhq-,dnx=6,qfmjv-,hcnmh-,vg=2,fvd-,bq=6,krhb=9,nvld=7,spmz=6,mdps-,cqp=6,bj-,scd-,snhdx-,rkr=2,vzscd-,rg=3,bjv-,fhgz-,dt=4,ttj=6,hmj=4,jpmnk-,jz=6,zkdjf-,phljs-,dzf=7,hfcjfx-,ld=9,dvn=9,scd=1,njnpq-,gdtqh-,php-,zxnq=4,thq-,rzd=3,ts-,nvld=1,jdh=1,sdkkg-,qkmnn-,pf-,mss=3,vl-,bjvn=2,jvnjh=4,fn=7,jdkkq=1,bt=4,cpnx-,qsv-,fzfg-,fjv-,dph=7,hz-,tdg=3,hxn-,jcl-,fp-,vn=4,kc=9,qxm-,shxm=1,qjf-,bg=9,ds-,mkm=4,bjbrrv-,qsv=9,czv=9,rfh-,ljv=2,ljv=1,jxlg=3,mb=6,dt-,tms=8,mpvh-,cv-,jvtl-,vv=9,ttx-,jkmvr-,dqrx-,gp=4,dhrgg=9,vhvpk-,kzbc-,vf-,cq-,gq-,hscr-,rj=8,ldvl-,nltf-,vtm-,jkjrx-,cdq=1,rvv-,nz=8,mp-,gdtqh-,mzg-,vnh=3,jhj=3,qjf=4,prdgn-,cn-,cqcn=4,zxf=7,gmvc=6,jvnjh=3,vnh-,qsv=6,nfdkq=5,kskj=4,fpmhbp=2,zz=5,kkk=9,cqcn-,lcrbv=7,zd-,chhq=1,ggd-,td-,dsc-,nm=2,lk-,tch=4,bz=2,fvd=1,ng-,gfq-,vlcvb=4,jxkh=7,cn-,dtv=1,mx=9,jr-,cqcn=4,qxm-,nr=1,lx-,jtc=6,sz-,pmhz-,qfl=7,vkqzk=3,fhx=6,cqnpv-,jlxf-,txbr=8,zvb-,hng-,hr=2,txbr-,mbdcz=3,vh=8,sq=5,lk-,qfmjv=8,rkr=7,sn-,jlxf-,bjbrrv=4,lfbxds-,vnf=9,cqcn-,dznp=2,bjt-,jfp=9,qghqc=1,ct-,rqxk-,mmf-,nlcv=9,ngttt=3,ljv=2,vgk-,hbh-,flf=1,nltf=6,ts=6,cq-,zsrs=7,vf-,cq-,gmvc=1,fp-,qzd=2,bfvzh-,kxsj=9,zhl-,xnj-,kx=6,xr=2,jdh-,ggdb=7,ltxz-,rm=2,svhqlj=6,xj=4,dj=5,hkh=8,mx-,zxf-,qh=9,fcn-,gbv-,qr-,drv-,qpv=2,zgx-,bc-,pmhz-,dfj=3,gt=9,zs-,gfq=6,sb=6,dhrgg=5,zg=8,nlcv-,pf=5,mkm=3,qrfx=8,bg-,kc=4,hxn=1,szj=8,ht=5,zfr-,rfh=1,bjvn-,vnh=8,gx=6,rbhl=8,gg=5,nbg=7,bjgs-,bjst-,zgrn-,kkk=1,dfj=4,hz-,td-,qkmnn-,sgnz-,qfv=2,nsp-,tms-,jmp=4,jkjrx=9,frp-,sn-,kvzd=9,gdg-,nr-,dsc=8,jvtl=2,stf-,jr-,bffjx-,cx-,gpknq-,jnzl=3,tdg=1,vjtk-,mc=2,jlxf=9,tdg-,mbdcz-,jn-,spmz=6,hqs-,xr-,fc-,ld-,thq=6,qx=6,fhgz=9,jrc-,xrqhbm=8,zvzc=5,pnblf-,hc-,tr=2,fcn=1,gcf-,hk-,xtnl=5,nqfn-,ggt-,bt-,xqqdv-,rx-,qkmnn=6,rkx=2,ht-,bjvn-,kxsj-,zsfls-,jvnjh=5,jnzl=5,dfj-,pmgjkd=7,jvtl=7,ld-,xff-,xtr-,rkr=2,zvgx=1,jflv-,rfh=7,pvr=6,qr-,zdjkk-,hkh-,dfj-,jm=3,znzbpb=2,rm=4,sz=7,ld-,lpt=3,qmfxv=4,fc-,pjtzxc-,mdps-,ld=9,zrt=1,rkr=9,xn=2,ml-,fh-,rg=9,bsxfk=7,jdkkq-,frvmt=9,dhz-,bnmft-,fbn-,brx=5,jz-,rq-,zmd=2,vcmrn=1,tl-,pjtzxc-,zvzc=5,qmfxv-,xc=9,bx-,thq-,rkr-,pk-,zs-,bslt=2,rg=7,bjq=6,mmf-,zvb-,mmjb=4,kxsj=3,ld=9,bcdqgj=6,lq-,mv=4,fpmhbp-,szm-,jjpk=4,tzz=2,svz=8,jd=1,jkr=5,cds=1,mv=7,sp=6,qh-,rkx=3,nb-,dph-,lm=5,cl=6,ttj-,gg=2,sdkkg-,ljv=9,zvb-,hnf=1,lrk-,txbr-,bsxfk-,mzqmg-,bqq-,bbb=4,nbdsxb-,nz-,ld=8,bjq=6,cbnfl=4,vf-,dm-,lpk-,nch=1,ghcd=9,fpmhbp=7,lh-,qmj-,rqxk-,rbhl=3,bjt-,bjf-,mzqmg=8,qkmnn=6,szm-,bsxfk=7,cf-,xsb-,xgq-,slt=6,hcnchc-,lpk-,hk=7,crc=3,xsb=5,cqrh-,nnm-,nhq=9,pxdlpv-,cz-,rs-,nfv=7,bsxz-,vn=2,rm-,pjtzxc=2,xjb=8,mqlfsf=3,ngkmdh=6,cf-,mdq=4,nqbl-,jtc=5,njnpq=1,jrc-,nch=5,szj=3,jr=7,qn-,gx=1,psc-,zjm=6,tzdz-,mdps-,cdq=1,bjv=9,pkp-,gzbg-,qrfx-,mc=3,cnk=9,zdpcrj=7,qfv=3,mm-,bx-,jz=9,zdjkk-,qzft-,szj-,xnj-,xj-,fz=7,bzhl=3,jkmvr-,zdjkk-,rr-,ccr=5,tr-,szj-,hjx-,bsxz-,sgqlsb=8,td=4,qkk=8,bffjx-,zxf-,zhc=4,ccr=9,gpknq-,qcm=5,tch=8,gnx=6,vf=4,qpnf-,sxs=1,vl=6,dlnc-,fvd-,gt-,hng=2,ts-,xzbll-,prdgn-,cp-,bsxfk=5,qfmjv-,bjt=1,mhr-,mzqmg=2,chhq=3,gbv-,shxm-,fc-,qkk=3,jrt=4,fhx-,bq-,hlx-,nfdkq=2,cs-,jtc-,sx=1,ggd-,jvtl-,ctbxs=4,nrrr=8,gdg=3,cdq=7,gcz=3,jc=1,ggd-,hm-,fn-,prdgn=9,zsfls=7,bbjb=6,bjf=6,tl=6,hbh=7,vsck-,pmgjkd-,knb=1,khnv-,xn-,fzfg=5,sntf-,bsxfk-,rvv-,shb-,bj-,spmz=5,bfvzh-,pjtzxc-,vkqzk=6,rx=4,vfh=2,rzd=5,hkh-,zmd=3,sb-,ltxz-,msc-,zsrs=6,lh-,jvzb=5,hhp-,rj-,bqq-,zvzc-,dhb=1,hz-,rs-,cqrh=4,gd-,gkxmct-,frvmt-,zs-,vj=4,rx=6,kgf=2,bvt=5,njnpq-,nh=4,jp-,qm-,bctx=3,fvd=1,zfr=7,bjbrrv-,cf-,hxn-,xbcm-,pld=8,km=2,zxf=3,hscr=3,fpmhbp-,xndq=7,bjq=6,bqq=1,dhb=7,mpvh-,kl-,jkmvr=1,knmdd=7,hjx=1,tr=1,pjc=9,sxs=5,qn-,ngttt=8,cqrh=4,gqgbf=8,qfv-,mk=7,jr-,sh-,fzfg-,ttx-,xc=9,xr=1,vnf-,lqh-,drv=6,dqrx=2,sn=4,hfcjfx=1,dhrgg-,msc-,zmk=5,gtnx=1,gfq=2,qpnf=8,tsqxjb=1,kk-,fh=9,zmk=2,jkr=3,sh=8,st=8,jvtl=3,xj=4,mm=7,fcn=6,bc-,gz-,cbnfl=5,ggd-,fn-,hlx=3,mm-,qr-,kvzd-,xzbll=7,nbp-,dj=9,lzzb-,pf-,qpnf=8,bcdqgj-,svhqlj-,bcdqgj-,dhb-,vv=5,bjbrrv=6,xvcp=2,rfh=1,pj-,fvd-,pfbkbm-,flf-,mp-,qfmjv-,bqhxd=6,xqqdv-,jp-,bjf=2,svz=6,zfr=3,zsm=5,sp=6,kc-,ml-,gtnx-,mv=5,fc-,krhb-,nch-,xc=9,pkp-,lm-,bbb=5,cp=4,bn=6,rk=6,lk=8,qzft=3,bsxz=3,dvn-,znx-,pzv-,rzd=2,lc-,gd-,sh=4,rzd=6,dm=4,ts=4,ftd-,xvcp-,sx-,fsgl-,bjv-,dqk-,qg-,rqxk-,bsxfk=5,rqxk=1,bvt-,qjf-,fzfg-,ftd-,rqgp-,prdgn=7,gmvc=4,qmj=4,mdps-,qp-,vfpx-,vmt-,xgq-,hcnmh-,tsqxjb-,lqfr-,jpmnk=2,tch=2,bvr=1,vmt=8,xhb=7,xhjtm=9,vjtk-,nqbl-,fp-,jvtl=5,brx=1,pld=3,vl=6,fc=1,zg=3,gfps=7,mzg-,gc=4,gckl=6,nqfn=2,bffjx=9,hxn-,tzz=8,pj=7,ts=5,fn-,jqfs=2,rqgp=3,dsc-,gkxmct=4,ttx-,xndq-,stg=8,pnblf-,shxm=5,zvb=4,gfps-,tk-,fmb=5,psc=1,gf-,pzv-,fzfg-,xgq=2,mdq=2,nfv=2,hhp=1,zxnq-,bctx=9,cv=6,vjtk-,hz=4,lx=6,nq-,dqrx-,xgq-,hr=3,shb=9,hsq-,znx-,fvd=3,xhb=7,dbs=9,jmp-,bnmft=4,jdh-,bqhxd=8,cf-,sgqlsb=3,vvf=8,bnmft=8,xzbll=8,dqrx=2,dzf-,cqnpv=1,sg-,hqs-,tcs-,nz=9,rzd-,gdg-,xjdg=2,knmdd=3,tdg=4,xtnl=5,ptmbcq-,kgx=1,frp-,vdfvp=4,nqfn-,xgq-,zvgx=2,lzs-,hk-,rjm-,fdc=6,st=4,xtr-,pf-,vx=6,qdqp=3,bfvzh-,ldvl=8,rzd-,bjst-,bvr=2,xn=7,zhc-,sb=1,lfp-,tch-,bbb=4,fhgz-,gckl=1,hm-,hbh=8,lrlj=5,rlsj-,xqqdv=1,fldg=9,mx=9,pzv-,jvtl-,qrfx=7,xjb-,zfr=4,bds=5,bj=1,bq-,bd=8,zmxkmz-,mm-,vfh=6,jmp-,jjpk=7,zhl-,sp=8,zmxkmz=1,txbr=7,xr=8,ldvl=2,ttj=4,bffjx-,zfrs-,xc=1,jrc=2,qfv=9,nrrr=7,vsck=7,rk=7,xhjtm=8,zvgx-,jxlg-,cx=2,zgrn-,zfr-,bz-,ttj=3,ht-,qfv=1,dcr-
  recorded_at: Sun, 16 Mar 2025 02:36:16 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/16_the_floor_will_be_lava.rb?token=ACG6TJ5ZE54JVA43BMN6Z43H2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '2214'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"0781e65dd2b8012e95253373a82be89b90dd32e0c04cb35c85ad224599f96d25"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 7464:332194:39B648:4ADFF4:67D6391F
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:16 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100175-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092576.294102,VS0,VE380
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - f92b6bf8180a43be08a0dc4efbe0d71ecf4862aa
      expires:
      - Sun, 16 Mar 2025 02:41:16 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: "G = DATA.map &:chomp\nY, X = G.size, G[0].size\n\ndef \U0001F526(y,
        x, dy, dx)\n  beams = [[y, x, dy, dx]]\n  energized = Set.new\n  seen = Set.new\n\n
        \ while b = beams.shift\n    next if !seen.add?(b)\n    y, x, dy, dx = b\n
        \   ny, nx = y + dy, x + dx\n    next if ny < 0 || ny >= Y || nx < 0 || nx
        >= X\n    energized << [ny, nx]\n\n    case G[ny][nx]\n    when ?.\n      beams
        << [ny, nx, dy, dx]\n    when ?/\n      if dy > 0 # down\n        beams <<
        [ny, nx, 0, -1]\n      elsif dy < 0 # up\n        beams << [ny, nx, 0, 1]\n
        \     elsif dx > 0 # right\n        beams << [ny, nx, -1, 0]\n      elsif
        dx < 0 # left\n        beams << [ny, nx, 1, 0]\n      end\n    when ?\\\\\n
        \     if dy > 0 # down\n        beams << [ny, nx, 0, 1]\n      elsif dy <
        0 # up\n        beams << [ny, nx, 0, -1]\n      elsif dx > 0 # right\n        beams
        << [ny, nx, 1, 0]\n      elsif dx < 0 # left\n        beams << [ny, nx, -1,
        0]\n      end\n    when ?-\n      if dy == 0\n        beams << [ny, nx, dy,
        dx]\n      else\n        beams << [ny, nx, -dx, dy]\n        beams << [ny,
        nx, dx, -dy]\n      end\n    when ?|\n      if dx == 0\n        beams << [ny,
        nx, dy, dx]\n      else\n        beams << [ny, nx, -dx, dy]\n        beams
        << [ny, nx, dx, -dy]\n      end\n    end\n  end\n\n  energized.size\nend\n\np
        \U0001F526(0, -1, 0, 1)\n\np [\n  *Y.times.map { \U0001F526(_1, -1, 0, 1)
        },\n  *Y.times.map { \U0001F526(_1, X, 0, -1) },\n  *X.times.map { \U0001F526(-1,
        _1, 1, 0) },\n  *X.times.map { \U0001F526(Y, _1, -1, 0) }\n].max\n\n__END__\n\\..................-..........................-............................................-...-.............|\n..........-........//....../...-....../.....|...............................|.............-.....-.............\n..\\....\\............./...\\.......\\/.................................................../................-......\n|...................................................\\...................|...||-..............|................\n.....\\.................\\.........................|-.....|.........-.\\...............-.........|....\\.......\\..\n.....\\.......|.-...................|.............|...................................................-........\n\\..............|............-......-.....|........................-..........--................./..\\..........\n..................../.\\|..|.......\\.-..........|..\\..../.-..\\/.................-.............................\\\n..\\...........|.......\\............./..................|...|................../......|.........|.........-....\n.\\...........|.........|....-....../..................\\.................................|.....\\...............\n...............\\../......-.............|......./.......-/...-............................|..|.................\n.......\\.........................-.........-.|......\\../.-......-........../................................/.\n.........|............./..-.........\\.....-\\.........................|..|.........................-...\\.......\n.\\..............|.............../...........................................|......-./........................\n...............\\........-......-........\\............................../|.\\....\\...../..-......-.....\\.....\\..\n...........................\\..../.......................-............./\\../.|...../..--.......\\......-........\n........|...................................\\....-.....|........./.........\\....-..........-......./..........\n.........|...\\.........-....\\/......\\............\\-.-......|....................................../-..........\n.../........../...-...|......./......................\\.........../.............../.......\\....................\n..................././/....................|......-...........-........-........\\..........|....|.............\n..\\..-../.|............/...............................\\-.../...-../...\\.......|............/...|.............\n............../.....................................\\.......-.....................................-....../....\n.........................|..\\....................|\\..|.................\\-..........-......................../.\n.-.....................\\....................|...........................-../........../........|.......-......\n.../...................|..-|..|-......................|.\\........|\\.\\...../......-................../...-.....\n-\\/...............\\.........-..../.....\\.......|....|..........|..........|....................../..........|.\n../.../................\\......|............\\/...|.............../............................||...............\n................\\....-\\./....\\...\\.......................|....|.....-.-..........-|...../....|................\n..............\\.............................../..........|...............-./............/...........\\.-.....-|\n...............-.../......-....|.....................................-............/..-...........-\\|..........\n......|-..............................................//./........./\\..............-........./|...............\n..........\\........|.........|..../..\\........|.....................-....\\\\-.........................|./......\n......-................-\\..-.....\\........../...\\....................../....-...|........./........\\|........-\n........../.........../.\\...................|..........|.-.......\\.....|...............-........../...........\n..........\\../........................|........./........-.....|........................-.../...........-....-\n..................../...........................|...|.\\.............\\......-........|............\\.......\\....\n-....-/...................\\................|....-..|.............................-...|........................\n.........\\.................|.\\........|...-................|....................../......................-....\n.......|..-.....\\...........\\.........../.......\\..|..............................\\.....................\\.....\n/......|...-..............|..|.......\\.\\...|.......||...-...............|....../.........\\.....\\./............\n....-.-../..\\../......\\\\/......................|....|..................../....|.\\.........................|...\n...-..................|.-......................\\\\\\.................//..-............|........./...\\..-........\n.........................\\.....-/|....|../............|...-.......\\./.............\\.........|.................\n../.................../..../......./..........-.....................................-..-.--.....|.........\\...\n.\\........................-\\........../....|..................-........\\...........\\............./............\n.........................-...|......|-.............................................../...|-.............../...\n............/.|.........-../.........................|......-..............-...|..--.........................\\\n..|...............\\.......\\..-................\\.........................|/...--.....\\..\\........\\\\........\\...\n........-....../........-................/.......\\/......-.............................|...........-..\\.......\n.-..|......................../...........-......\\...........|..|.............\\................................\n|..........|..\\....\\..............-...../.\\.|-...................|......|............|...\\..........|...|\\....\n.-............-/.-.........-..................................|.../........................\\..................\n.........-.....-.......|........../...........-/.........\\.........../-./..-.............................|....\n.........................................../...|.|.........../..-...........|....../...|\\........-......./....\n......................--|.....................\\-................./..|............./...........................\n...............................././......\\...-.........|..|.........\\|.../.-/....-........|........|..........\n.........-.../..../................../...-.........../..................../..../|/.........|..................\n..\\...\\....-.-.....................................................\\......--.......\\.....|............/.......\n\\.........../......\\..............-....-...........\\........||................./../......./........\\..........\n...............||..-..........-............\\........../|.............................-.../-...................\n......../.............|....................|-.|...\\...-..........................................-............\n.........\\.../........-..........................................................-.....................|......\n....\\|................/.......\\................/............./.-..|...\\........-............../-..\\...........\n....................\\.....-.........-..|.......\\..../.|...-......................|....|.......................\n..................................|.|...................-|......................\\............|................\n............-/......................|................\\.............-.....................\\...............-....\n......................../....-.......\\.\\.....|....-...................-...............\\......................\\\n......|.........................../.............................../.........\\.................................\n......\\-.........../........\\...........-.......-........|.....\\../.....-.../..............\\......\\./.........\n...|.....\\......|..........-.-\\......-..-../...................|................./..../............-.........|\n......|.............|/........|....\\...-...................../.........|...-..........\\.............-.........\n...........................--..........\\.......................................-......|.......|...............\n..\\......|..............|.........................................|............../.|...........-......|.......\n.......................................|......-....................................|.......\\.-................\n|......./..\\.|............................/....../..............-.|...\\..../.../.....-........................\n...../..../.....\\................................-...|......................./...|..............|.........|...\n......-/....../-.............-.......-../-....\\.....................\\.........................................\n..|.../.|.|......................-....../..--.....|\\............./......................./................\\...\n................/..........\\...................../...........\\.....-/............|........\\..................\\\n.-....................-........-........./..............................\\.........../..................\\\\.....\n..........-......../..||........|........-|.....\\.....................\\.......|............\\.....\\........-...\n....-|../...................../.\\.-...................../.................|............\\...|../...............\n......../..................../.....|.....-\\././..\\............\\....\\........../...|.....\\.....|......./.......\n........\\................|.....|......\\.-............................\\..........|...........|.................\n../............/.........-...................|./............../...........|.../-..-./..............\\....-.....\n...-...-....|\\.......-..../...|................\\...\\.........../.......-.....-..../....|......................\n....\\.........-............|....\\.......|................................|.....|......../....\\.....\\..........\n......-......|.../-......./.........................\\..|\\/.........-../..............|..-...............\\..\\..\n.............../............-................................-......-......./............|....................\n....\\........../................\\....|..........|...............-...|.................-......-...........-....\n....\\.....|..................\\..............\\...............././...-../...........\\/..........................\n.........................../.................-.................-......\\.....................................\\.\n................|/......../.....-.........................../....\\...........|..........-.......|.|........./.\n......./......|.\\............\\............................/.....-........\\.............../.|..................\n.../......./......|.......|.................................................\\.....\\................/|.........\n............../....../...|...\\.................................\\.........|/...|.\\....-...............\\-/......\n......\\..--.|.........-.|......................-....................-...........-..|-......................./.\n................/...../.\\.../......|.............................../.\\...-./.......-|......|.|................\n.....\\./..........-....\\..-..|...\\..........-...|.....-......|.......\\......|.|..........................-....\n......../....|.........../.....\\.....|........./.|..................\\....|......-....\\............/........../\n....../.....|..|...../.............|.......|/......-....|......|..../..........-..................|.........\\.\n...-..|.../.......-......-....................-.....\\.....|...-..../............\\..........................\\..\n...\\..\\|....|\\|-.................../...../......-.-/\\.........................-.........-.............|...|...\n.\\.....|........................-.\\...\\....|............../.-...................................../-..|.\\....|\n..\\.......................|...-...\\...-.........../.......................\\.........................|.../.....\n....\\.....|...-............../...-.|............/.-........\\..-....\\.....|................../..........\\......\n..................................|..-.................\\..............\\..................................-|...\n.........................\\.........../.-/.|............|...........-.........../...../.\\|..\\.../.....|...-....\n..........\\.........-.-../-......-..\\.......|.............-........|..............................\\.....\\.....\n..\\.........../........|..-...-..............|./....................\\.........\\..........|....-..............."
  recorded_at: Sun, 16 Mar 2025 02:36:16 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/17_clumsy_crucible.rb?token=ACG6TJ3VMQP3KRIPX5AEADTH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '10207'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"23c265bacc927f0f5661d0888b662a4645958dc9163eed47eaee9909a05f4e23"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - AA62:11C765:2B3686:38E182:67D63920
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:17 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100155-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092577.812728,VS0,VE295
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 9e5ef408d0cff466af29ee08f6f9d6b446359144
      expires:
      - Sun, 16 Mar 2025 02:41:17 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        require_relative "priority_queue"

        M = DATA.map { _1.chomp.chars.map &:to_i }
        Y, X = M.size, M[0].size
        TY, TX = Y - 1, X - 1
        N = [[-1, 0], [1, 0], [0, -1], [0, 1]]

        heat_loss = -> (min, max) {
          v = Set.new
          q = PriorityQueue.new
          q.push [0, 0, 0, 0, 0, 0], 0

          while c = q.pop
            h, y, x, dy, dx, t = c

            return h if y == TY && x == TX

            next unless v.add?([y, x, dy, dx, t])

            if t < max && [dy, dx] != [0, 0]
              ny, nx = y + dy, x + dx
              q.push([h + M[ny][nx], ny, nx, dy, dx, t + 1], h + M[ny][nx]) if ny >= 0 && ny < Y && nx >= 0 && nx < X
            end

            if t >= min || [dy, dx] == [0, 0]
              N.each { |ndy, ndx|
                next if [ndy, ndx] == [dy, dx] || [-ndy, -ndx] == [dy, dx]
                ny, nx = y + ndy, x + ndx
                q.push([h + M[ny][nx], ny, nx, ndy, ndx, 1], h + M[ny][nx]) if ny >= 0 && ny < Y && nx >= 0 && nx < X
              }
            end
          end
        }

        p heat_loss[1, 3]
        p heat_loss[4, 10]

        __END__
        234224446511352516455541135325314531634727166622143245766763225647632451765767416671144613511443236745711614774573513156356624145646555245245
        212322435323514544553641367363253666612634513752244741772464882587283261185481663234173466116432233354744314723223443226616466142554244615221
        154152563214532244465661223532752765765536752111625474845637887368476118636565287714213441214743556752653777372231566152665555565542223661132
        525351545121363546115654612131231624245142132533745467388828681775578761357857745526314153768275636564561457571644657123363231241411332326452
        522114653525543314412571231775375576521726522526173787746687625733216838476458572461735582761552332354146473113664476437323544256213653465312
        443461111453464425134533263471641143456312642513254553134486255281263333132627453587376148513841638112145441447467121325743662524522222564561
        121561242535123615432415761156744117343342787528337632685333272267485453814315762514375344282355222836135147727216735114447424342623145611115
        252364155625164632364226342712756457722482166171424514185723628628385346554137328865165246138577236216314644645345152746244165463554263431662
        526235655521461214532363651147275227312867814244778334561422454447813222487123182687265214271615331836735221433453425273364571222611316513141
        225613523613165246477246751254654753681146264113713375321815133313787726311628571367126163638537824746257617322231667614624625234561431115155
        616563433623453266134751445441374188283828448111241335241358271167617623631466526171652755173476473628624453325743534253553643215315665446664
        362454134346111664574275576134363881382835554627886265337151312271626774356824843526711868556657745186332348785164631216416322634341234413516
        624336624532333445671425266574645652272115613176467134887187742741469411579948718446242474241162354716284775774771647436742135325654335522566
        132343424642761631543123634645772441446845427562772253584555613884465971938339166852115365255171177614564262127653746766446335143674613123433
        535535523125362516275233147278361816341145714212373261429933467545965438848556428291619597711642148812153188248135232621151315233111352664626
        315343656233125631622636314237357726527844653166554352554933575475553534566517335193254452417712415515324211548464562731652665511511512253654
        245346621476366211755722344353743773657654226437321698155539423337438917574628428885639646215654518165726815413468712371547455776676132656243
        414551316523274412372317175216327536416562753587542796888542934873711444595783331864282184886161875526523451851636436814722427114752445365531
        562663143716616766467664564174363675132344384574777184479621561743232265434434231935369454446266975363876764334367855477613562617435121536253
        333251744334237531433255753676546564133517262375329868342183881735133142953538769718862388827716173671453554811618816365677225577565111344134
        512661663126517112325472217657543714745735553916577177949218283171176592187821211794496862411899576961517632242138512638331655164553266254665
        244227644642536633766824571648522446857399591619871385492483166519243226118878624437768759799251983569643248154211166213445165777234666464641
        324626331157265155157741667232871854422398384135566321537312449412339576552296252386497358829297514485667786624681566152245124765225523676712
        235175461263227616717532311838821361526356926784576534178895547893938757513753139533558433561823156636393612812576511244357754316122434344372
        454551271165612352163544844775382463429373136432582264346514888937676299395477556354793172118843462717455359334461235517642641433143315324673
        416777235642161515516777522231658872775586436867518275137556927363464472797246945994621431276264617637494126252357632267636242572624251211772
        575512561173237458478861338838441972978863848866185494238353553765253724428398463789383193574682229233161522986384788872722638445261673456274
        432461231356112282843327267713475289479639627883637285329736352263523668944488476829536699931496583343898715537781226624225246115566447124214
        252374211644248241181722875581971815998627361756281283355698847254989548635729983476322282385822532133147958951348772444685135673375547112111
        744751517727144286855173182671674768351646816849663957283526244234354549743269888853236478424856479232256548691921754871261651632127374773326
        347346713512748345888728346126596745814927293432346969427775577329297989639265922864632254289837722247933768912811567686168868843565656653217
        263525422653617877331388151423687859343291276798643458639499872848588365842774627258743984789859872779948615316313852576628322412161271277416
        277113175314438882726783556873396413855231169332222256398724594787499249972764694354548667347376366499328522189845971158626881316477422427223
        245677355173582872431581449915548919571284795989627935422527427683596825792637987238353427594946982728418324518961279422112637337471142624163
        267354316271177145465486649797625579633264878858779569537863652839985535626474226832335689299483588652398435544987621954432653625233147551173
        377654346388462182388671459629376356923778826739354739567967376956676676475646775265329749698236263866938779859135684496138268675617576414665
        771754626518631562445589178277977182765474439572987274739268222633497565479748389525293666578349426979961779336492775716647444226316124512655
        232677165584621238512574545123333857973584553287462722332937834949437747996976746325689466574343999457446979149255222712874245157455322253161
        571517331668313885733787433842981235372267297852833756684977873598543647564674339786482286889793593647935699321881725769461878284244721524126
        532213162631227782434387883462491267556949225489659973844878533548853853785345757484536544846887554546273496481544598171122555452171867424543
        211233451885228341726955645125112515585522746724447664543555776843449658349758686847933942944526824425798375866989587953863528851883575732257
        461673283885572418721956824884534117853785825835245753536773798749846489855758979583477964976962528886524484291832616559944782258142811254113
        551745567215173881717465384242285886475968986496477846444344838468847889563747683844699878434799647432635288748175368314713153814671171583316
        433136211825262278825549652223761352636945979765397635476539984848657445443793375637456955348734622577948439847242476876339788672616754773222
        341476444277473656149363138182378655456396734378335886793793873964643865998394976458373365937348733496289268894571554998394665558346517171532
        725148333332238721464119665117194535376789327288965665679644644849889355359637636575364545538834985277623753633296688395633394345638365141251
        237733752121746652195652112461855435637442435369468347339547836585458374859445746866355579938788624834422823493824725835514514145252633111217
        742173484483385623323737178513575879868346925664777384638899835397536798453557999739935988976993788948756778953321354545976365682473315831873
        256162553288246862454931669768823755967327448644574654865398338646594775785845734838346993343964353956596849355391873252421731271378154158416
        647611143287731788875665377547398763778946959366367468535776755896579896667774888566654676466854465465234899323699225115696914378788782261761
        761584483441614646496258979977773637988422437459976888934949955888448847978846588785393643933759698533938252289955483438238344821416112135431
        131653441781113528654819832795793723536858747568374353586645585579456598545786878747735688386453798489973229893572541932211763522545754288432
        351435431774587738542714531244945446233565793677477556657866475985655674989947669744744833498483568563857529348972253818416477686632645617222
        474833573242841478256345936362392996854889844895586943335546985765757966878465665597669844578549484969635755547986436374943152167431585427724
        668874184642473919751153976864969787866297896464737784547795946547569494576846995766756738548589494956528446584679438364951963249487138322523
        528725624761152327819595517454868825557798544787777668748684886944587886875784597564494955345468545557764664683692997796272664459383234468271
        177437148884516181535654988786999739996678493436643755697498977987775798565946898889884577867886763979792697332792946798841654853731628523744
        442361247181141182933518157353757765727538878755858474557755996494864876969578594588669746866956689553358636896564543761518884527661143322531
        375251227671244772949529497956653786555839448577749749769654888645574864787864998687767898555567899563635343933337472963879652274874388156822
        528858226558578556821285155698996484679446995674879994687857876767595796446896759794489559979683384366869269434996895238567686659384214676447
        136263238663856349766786373944888986784864369665885574949979597644468788658685799698986768794337593377696744756996756723172285446462245728465
        767223256145565586897633287358249238285396779986757478994569764845577997689589457955686858855463663485667696392425465253428235418156226256151
        437775176261364587767849429958878855345499435634376668774568949777568776887597748587485784897759749468984385667483598878343637736486713363811
        214436474531345195792918567557532395448683458888896855779677697985867879959577998686867849558878938333959823725857345712255479596583727545833
        414758443545213224319231493927398357335449653347797747757849687757596755885966686654846554689534984885555933248756559948356274139793432274843
        464165873353938783791212759986898624337359999933665694495697877758789989578656876878868668474776699744579462679968668748268121718868115527214
        281418552824348619758435738856526466847658575477565769565589797978678988676857877567445988989677469469538539829686463432572149939875173433145
        174745572187172734825327438492543924575974589439498578765746598899767757988956855785496888877558459337747787694597297962228175473327338484777
        423561863457895625429957337935554753395958554744554766885876588597758565895778566777687765574496986947556946637957739771361764529851733731778
        876464625342977414342158652568734625934775657348846666744756579888578769688896976589767479895447583959567439826398946571623698744513387161862
        861524435137586438869557842356734487944663935494599899799687965887979778565885959677497645587789989738875346495894362792944358783326623864717
        252162437585483184143333563589379384846535454987886746764794958895655596556598777898799798677965837694666889622667872721462528751722864574531
        511835467648858463122855834823235252594346993435979575697859585787856759886889685959994484765896644589375446245555422761754213596566133655786
        185767163152935413185483934749657393776997338375844977976999877696777885767957658878599568766597959677644694337432859589864618184367464663237
        168352331587493643594282544262874648433436948954476859757786685998985686877996689784845779978789888367567753568222364473887654656831873518886
        313847575343358369622475425393596573693553553475664966456468988556596966579695897966647774879958544966675886284764996391981912412686273864525
        373283716753197975283815795263553242688656659394667497869488778578655597989779778678966748859587549566998575497752466827394482447342838558687
        836764585368366932293427479724823928799384596667899864645965898686987768975986988968598745579674388483936764685998592549762341336622547118571
        247882245157662991361453943787554369377534987474547945644678695868855779857988867745865484878656354465456887234799955694478693551968514531566
        571745824313431258854696432362643266678736763794959846494594744699969798768675654768746549576975777495396784569274894757254671157467263337537
        275382782161696438145337579287764348363465957967784446484488955786985868887786764645484487445587897476735675249884843668512937819945782888438
        217118865135294215886286244356928338247374968985465849584876446499965788598767897674866859457883995589468837868668764946672362581157458453223
        161762616588571177211757624985496884768757663548899465646697995957588866885879774694559595869535679899358587552833589569798385633683824477376
        615738185278515945148931826499354984928337698948544695886769645955595854794467855979769766459398866945859864537966827295362723756851454667378
        463858275648821252653439544785654984695649693834339356684947566497785794859445899577455595969447784764465834993256959555194238234428274766576
        338526824731316778299327722883284957232494386489595686444589559979778766677669449569784497684534633973373369673487954545216614341354486546688
        632663341188217371767432175779672344263585379573973398998568459976764465847449488495965985856776398569564967592352275586132667341372774582144
        325327418886431163516783134822583489572569383579476977848996495497666599599859986968485869759576557439658784226222552141432856567122715223315
        175626222822669261225782114655635489383869379798566579878595947674675967475666487769897769377955995976854626825643456128323475267184368481358
        521323357458161622944913168548772657649499844398453597795696968688464675479887784797895439499343878895935872889348688549327979526282321534555
        657685352472514713663558244566679583882284594596694645799956565484574989698659844865945858348354669445944379478334867693834555938122537147716
        141488171222833987755851223559928238636427963876857645886446476578795976467947777658558593773699579953767927838358486398739277326554475442265
        412228731552363175889135217262652782645923285376439895389973585975758446984555465573895895596848488625986957427972975581749123637831761353381
        617657426244228783349859988279727555729665575366666558833739986957676488955584699954955898855544586592226593279252313954949991982333435345743
        563442734644636355662243521542523458337282367653649638884398879578985456684668653974966989874646697672782569953496336899511812338637762232843
        123663572448778825513745536862954443659747664546953765778543734458335968973986374649983369665896784968524444424982732395492581267433746863823
        376137586674633422247188654418472528946595834784945567566555865934666645875353358387573569744966475669534496983426926432416113218734182381755
        536512416727716348573211189799286479936666386849438359939695539833385979538849989684875449876478945525759697657772175829389678813764551371776
        363762235558516186995537179287137923595878379285484597469333538564595445667659395973583984664463972748945252996983429483238836425782225683314
        411567166341374665512465714148135639464364664678858934748484833547993355358584697736779897843654377746544924667542949676594752322771766675517
        266463442531538515324415365824823343796529839682437757497647479747465599445594584493697737967736967359439396723339167681517716552748316854546
        633435562174817662819725623494342626327278792489579386934644484644498873873868948379464469982422437757864357965387175465818761476538223856362
        271474173321581181863484657984524328824246435927523486584385459438749874835766639984498748222533995293879343664866751243411775711247686463445
        172532467668431552657851134947876991864446634488763265888467474978838337773547939668583324433527566227443264838614694858513778615328843151631
        435124444672478328857526275643761216658887846797547794956838949975773449586349935373834828857947226423265395741533458688623884763564786266637
        527444267343572326138358326494265251515445724778664453589368769497437586989568786664953228358866755867323355671375222573553884523886831565716
        232337242156786171451425413151143419785995526686499884629874972235468659879944847389624798358326959692735154455522549119836424612438782565661
        525324767315186524221162635561617576129944485347978995887487338596577476435565783459232524539973955777662639947226566144181176541648162561146
        374312313453312672658751476534281367282451989647686494962485282847957484876677835643636882948663369983595636223946539735662847525583337135237
        657725674341517314457517872977437584615635962693597374837933993832832447824828324257766543384427365687137896483877556522741157743758623147235
        372771127456775223357761286248823729625469464727389249234268533582598285959338783389942977743988349247557954865442128257123555573555665712277
        515335142747587238136873274317921898723494161257278958799238797628727856354779782864486553256846279834971983684475434414142845851554475257543
        211654411663544148312323264167279678992961187448639679752372227475263666927434479985957627522647248923252666532949661642868618327463727133563
        575353243265174755577627351259572411237675399671852542638477264597378258822786682357658459859297678637384567437676676788158223637447654324241
        344563236652472466162868335152512983162251322752221983569455659558997445574957993598937383382183666629133836889984451477661412435246555225437
        223437426514546151342863435541278568599978275856575243983899862339557836373398238542432233847936295436294528611618584858851828155673555363673
        565267721125431772222258467541455975845395974995469284982657533426324232877942832789383857469751548722226928556847584174234736857324544174152
        365667545462772453144622182647818785365195919574971662635979473568846497942633855587497515748764182696877559548732422754666482313545142511135
        223136324577276227545366164446137136233877236897773326422143147259726566925933512459523473114954553466232232776114255426767556663344523436615
        424657666415524464138833867462574616883893546743855815271583277657111922247498683683766485168765665542848175476622462668832226126115112332563
        265116573351654653441425345433343264833724888898842991923143888271879144828857645268426289642628397318681665422186228823688656343674532547354
        361613244731346314646327483436567238222652636787896548679217398257817686662528758385799662244638311167665784234841576282126433564612123217133
        566364152131725364444145773355671731247157114363871741697496591525191862316358584851473882379619342855334363254135373643731231155715651443244
        111256566517565774627311267233356113376155286417849697544313299988665623767484297173881389848752358814348845512636815363336672474277513532513
        443415375565151466272566277284217717116514368712686791634141681571148667847889493663177485648178298411228854887663854727367737311167552216516
        346244164371664363576256455768247347527684384744154279982116974879397294334515785175512974663863243245154443634883878735143151637137165135251
        245632136545644623126337434764381666623631161252826613527253566475798597166214319621828796869725132868176464361433567372227351272445425655651
        216516466233275546255724611446138854335312811112351914676757679869148379278132566316591751417332726833815854582571241637211356745616512565456
        535111311616623261131633537112222351656224611568521375539855193624971352427634275747912521578651888765337513854385447315451356342663443241522
        523564135532151626121315326541456154526371646221237578445836513495426246777258961949148742547244632878273363385166566742534466366314635143152
        252234333515321424364621267324383352132525716557115147854544432871484997689117152888713844268647861353255157166367574546234537757321331262556
        145425651236623323273646167464663122164851147643457787247461125283223626312635725718725441162657418176341734786544172723625253573163221641535
        153544115353616111234322326252465422638432222836276323413433218484851271551611574588585845524146471163748483365626544317657137523214565531664
        142454216141535536457677212613665411757451356675835477342741324113281212655366244462261387532622858861721373636645712474172445746411324252141
        544366355562212456323663575657652624265473162613232765146888652425214745741187347176246123657843165474374431111567224417353336461634551513361
        162431526333225556252567676426362353124153634115551752877846847315344364261273381582556742168434542853227112722624762136771622135152112255361
        545211215455544513544364765155651334654454375184885815375682761478165137382187757661532864566263223816742121372337523621743544464511511654416
        323113161515166212124556631324747676271655372663781844847848363158431826435478212561154784384763281335313764523453446537353211111351216512414
        312123524165526161625112775375335447714743527628876182525825513257478674653831351253148186847312267555532675463177543242652353436331666156244
        355325535435126443145256221374357314335277645253556148534766883344445466258512416725216676611327231436111554244566637214312626234251335633244
        452513136443331344523212472543322532423675742651453274312732754834486467728123135388734127674473266575113615746472746566662242413522623644335
  recorded_at: Sun, 16 Mar 2025 02:36:17 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/18_lavaduct_lagoon.rb?token=ACG6TJ746A7K2NUKNBIQFBLH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '3507'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"021dcf31493380c631acbb98e4efa9d35044006324f24f0afc2cbba18dd5902e"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 56F3:2FD5B2:435057:547CE9:67D6391D
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:17 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100064-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092577.237914,VS0,VE296
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 3cf967b29eab3660c5ced3feed6d2641db939755
      expires:
      - Sun, 16 Mar 2025 02:41:17 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        D = { ?R => 0, ?D => 1, ?L => 2, ?U => 3 }
        N = [[0, 1], [1, 0], [0, -1], [-1, 0]]
        I = DATA.map {
          _1 =~ /(.) (\d+) \(#(\h{5})(\h)\)/
          [[N[D[$1]], $2.to_i], [N[$4.to_i], $3.hex]]
        }

        def area(vs)
          y = x = 0
          v = vs.map { |(dy, dx), s| [y += dy * s, x += dx * s] }
          (vs.sum { _2 } + v.each_cons(2).sum { |(y1, x1), (y2, x2)| x1 * y2 - y1 * x2 }) / 2 + 1
        end

        p area I.map &:first
        p area I.map &:last

        __END__
        L 6 (#389f92)
        U 3 (#6f4c53)
        L 10 (#0313a2)
        U 12 (#562d71)
        L 12 (#1f0eb2)
        U 8 (#4bd8f1)
        L 16 (#1ce002)
        U 6 (#1c8f03)
        L 3 (#62de32)
        D 14 (#857763)
        L 9 (#17fd12)
        U 11 (#654d63)
        L 8 (#3ee5c2)
        D 11 (#1b8673)
        L 6 (#870dc2)
        U 5 (#281291)
        L 8 (#0bbe62)
        D 14 (#281293)
        L 11 (#816e52)
        D 7 (#5594f1)
        L 9 (#12ef72)
        U 13 (#9a8b31)
        L 7 (#520e22)
        D 10 (#785073)
        L 7 (#44c312)
        D 15 (#426b93)
        L 5 (#44c310)
        U 15 (#7ac743)
        L 10 (#069380)
        U 10 (#6b4203)
        L 6 (#7596a0)
        D 13 (#13d473)
        L 8 (#8c6450)
        U 13 (#13d471)
        L 3 (#08cf40)
        U 8 (#4d0c91)
        L 11 (#968bd0)
        U 7 (#4d0c93)
        R 12 (#0715e0)
        U 5 (#755d43)
        R 3 (#45a6d0)
        U 9 (#745733)
        R 9 (#3d53d0)
        D 11 (#2c42c3)
        R 6 (#78a0e0)
        U 11 (#1e36c3)
        R 7 (#5c6f12)
        U 8 (#336373)
        R 4 (#17a9f2)
        U 6 (#4ac073)
        R 4 (#1c3452)
        D 16 (#6f5501)
        R 6 (#593632)
        U 16 (#6f5503)
        R 7 (#5a7862)
        U 6 (#21b1b3)
        R 5 (#90efb0)
        U 9 (#5095f3)
        R 14 (#569d20)
        U 12 (#6c3653)
        R 8 (#5c6f10)
        U 14 (#843773)
        L 4 (#4c5d22)
        U 6 (#327b63)
        L 9 (#2082a2)
        D 5 (#5decb3)
        R 5 (#4a9d32)
        D 10 (#5decb1)
        L 5 (#4ff212)
        D 14 (#6d9623)
        L 3 (#6c2742)
        U 5 (#53ca73)
        L 2 (#5ddd82)
        U 11 (#33dab3)
        L 2 (#33c442)
        U 3 (#688a13)
        L 11 (#33c440)
        U 10 (#218fa3)
        L 3 (#3df8c2)
        D 6 (#0e5d33)
        L 2 (#253720)
        D 9 (#5cfe03)
        R 13 (#609ff0)
        D 3 (#5cfe01)
        L 13 (#3313f0)
        D 11 (#0fde43)
        L 10 (#12d340)
        U 9 (#9ebd91)
        L 8 (#7f38d0)
        U 5 (#9ebd93)
        L 13 (#660740)
        U 8 (#0fde41)
        R 13 (#5e6e30)
        U 7 (#166263)
        L 12 (#34f090)
        U 4 (#1d25b1)
        R 5 (#a47680)
        U 12 (#1d25b3)
        R 7 (#51a8f0)
        D 2 (#3a9a21)
        R 5 (#8e9a70)
        D 13 (#2f0b21)
        R 7 (#40ff70)
        U 7 (#65ac81)
        R 11 (#076090)
        U 8 (#52a2f1)
        R 3 (#787450)
        U 6 (#07e5a1)
        R 13 (#2393d0)
        U 9 (#5c6b23)
        L 11 (#694440)
        U 7 (#848973)
        R 11 (#9a9670)
        U 10 (#2d4013)
        R 3 (#011bb0)
        U 2 (#0e40f3)
        R 10 (#748422)
        U 7 (#8f6b63)
        R 2 (#4da692)
        U 9 (#8f6b61)
        R 10 (#42cbb2)
        U 11 (#0d64c3)
        R 11 (#417480)
        U 9 (#ad3253)
        R 14 (#481180)
        U 5 (#103ad3)
        R 4 (#49a840)
        D 11 (#72e543)
        R 6 (#95a660)
        D 3 (#548ae3)
        R 7 (#837d20)
        D 13 (#4ad8a3)
        R 4 (#118dd0)
        D 5 (#632c63)
        L 10 (#2d7c62)
        D 4 (#5d15f1)
        L 4 (#ae9b12)
        U 7 (#660a91)
        L 4 (#81da62)
        U 4 (#6db043)
        R 4 (#592fd2)
        U 8 (#557043)
        L 7 (#054972)
        D 16 (#9732c3)
        L 7 (#496070)
        D 3 (#01bf13)
        L 3 (#075b10)
        D 6 (#519253)
        L 6 (#9c9b90)
        D 8 (#636633)
        R 16 (#123ee0)
        D 5 (#0cbef3)
        L 16 (#6a7ec0)
        D 5 (#77b273)
        R 6 (#819940)
        D 3 (#269563)
        R 10 (#4189d0)
        D 5 (#1fdd73)
        L 5 (#82fb80)
        D 9 (#1fdd71)
        R 5 (#259650)
        D 6 (#4b8393)
        R 5 (#1d2170)
        U 5 (#37a363)
        R 2 (#4a8b20)
        U 15 (#0f37d3)
        R 4 (#462450)
        D 9 (#132893)
        R 10 (#5ed3a0)
        D 4 (#66bf13)
        R 4 (#3ae720)
        D 11 (#267f43)
        R 10 (#525ea0)
        U 4 (#565393)
        R 4 (#53e302)
        U 4 (#74b693)
        L 7 (#21afe0)
        U 5 (#82a143)
        R 7 (#21afe2)
        U 8 (#5d9b63)
        R 7 (#53e300)
        U 7 (#031403)
        R 10 (#6db3f2)
        U 9 (#78b413)
        L 13 (#664e62)
        U 11 (#219e13)
        L 6 (#31dcd2)
        U 10 (#492943)
        R 4 (#866fe0)
        U 7 (#2a3cc3)
        R 13 (#29a7a0)
        U 8 (#7f1823)
        R 2 (#55c7a0)
        U 7 (#3461c3)
        L 13 (#0a2920)
        U 5 (#68b861)
        L 8 (#a7efd0)
        U 5 (#35b301)
        R 12 (#247ee0)
        U 6 (#5e4901)
        R 7 (#9b8910)
        U 5 (#5e4903)
        L 8 (#5a6330)
        U 4 (#4de021)
        R 8 (#afc460)
        U 8 (#151331)
        R 6 (#2cf9c0)
        D 17 (#7903a1)
        R 5 (#897132)
        U 6 (#761f71)
        R 11 (#45b6a2)
        D 6 (#1d2411)
        R 4 (#636ff0)
        U 8 (#5a8bd3)
        R 3 (#3ca330)
        U 4 (#5a8bd1)
        R 12 (#2f14b0)
        U 11 (#23bad1)
        R 6 (#94fbe0)
        U 15 (#49a6e1)
        L 11 (#3328c2)
        U 13 (#052603)
        L 11 (#88c882)
        U 3 (#052601)
        R 17 (#060462)
        U 9 (#11b0b1)
        R 5 (#afc462)
        U 3 (#3aa071)
        R 12 (#5bf940)
        U 7 (#33fe31)
        R 5 (#3a93f0)
        U 5 (#90c5b1)
        L 6 (#4f5620)
        U 6 (#106051)
        L 11 (#137040)
        U 5 (#5b2b01)
        R 17 (#8969f0)
        U 4 (#2f4d81)
        L 5 (#1fcc40)
        U 9 (#5896c1)
        R 15 (#037282)
        U 9 (#556751)
        R 9 (#122122)
        U 8 (#0ded41)
        L 9 (#93a292)
        U 7 (#6fe131)
        L 15 (#6394b0)
        U 6 (#619811)
        L 6 (#65b200)
        U 12 (#3d7971)
        L 12 (#3e5120)
        U 3 (#938591)
        L 9 (#81fbd0)
        U 11 (#2bf3c1)
        R 3 (#899780)
        U 10 (#662b81)
        R 10 (#39b4e2)
        D 10 (#115511)
        R 8 (#6bf8b2)
        U 8 (#754cf1)
        R 6 (#6e0342)
        U 11 (#358fd1)
        R 4 (#8f5cc2)
        U 6 (#625d91)
        L 10 (#70ec22)
        U 9 (#72aaf3)
        R 10 (#17dec2)
        U 11 (#7641a3)
        R 12 (#567e42)
        D 9 (#37d953)
        R 7 (#888ed2)
        U 13 (#857a11)
        R 4 (#420892)
        D 13 (#7904e1)
        R 10 (#454552)
        D 6 (#2246f1)
        L 3 (#4fb1d2)
        D 7 (#2eb173)
        L 10 (#5e4262)
        U 7 (#682b13)
        L 8 (#032002)
        D 11 (#87b2e3)
        R 11 (#8b9212)
        D 9 (#847351)
        R 4 (#643dc2)
        D 4 (#392f13)
        R 5 (#04f562)
        U 6 (#2f32d1)
        R 6 (#5c72a2)
        U 6 (#438dc3)
        R 14 (#0dd272)
        D 12 (#438dc1)
        R 3 (#683532)
        U 4 (#2f32d3)
        R 13 (#10d982)
        D 5 (#597f83)
        R 4 (#29ded2)
        D 10 (#92ae91)
        R 14 (#325de2)
        D 4 (#81a581)
        R 7 (#003b80)
        D 12 (#04f7b1)
        R 10 (#3eaf90)
        D 6 (#437133)
        L 17 (#6da030)
        D 9 (#437131)
        L 13 (#055600)
        D 11 (#5a53e3)
        L 5 (#614ab0)
        D 5 (#17f0b3)
        L 4 (#55c1c0)
        D 7 (#724491)
        L 5 (#3fd5e0)
        D 5 (#46a9a1)
        L 13 (#316a70)
        D 3 (#64f371)
        L 3 (#54c8a0)
        D 8 (#56d821)
        L 7 (#42d0f0)
        D 13 (#73cb21)
        L 7 (#3c5bc2)
        D 9 (#1c52f1)
        L 3 (#257552)
        D 5 (#9022e1)
        L 3 (#257550)
        D 6 (#0acc11)
        R 7 (#3c5bc0)
        D 17 (#37f5e1)
        R 3 (#56fab0)
        D 7 (#25bfa1)
        R 7 (#93a970)
        D 13 (#27dc41)
        R 7 (#1f67b0)
        U 14 (#3791f1)
        R 8 (#9045e0)
        U 6 (#3f0d01)
        R 7 (#25dc50)
        D 15 (#0ceb41)
        R 3 (#9bd3f0)
        D 10 (#6ee491)
        R 4 (#7174a2)
        D 8 (#8ffd61)
        R 5 (#7174a0)
        D 10 (#87a811)
        R 5 (#41ab00)
        D 5 (#816fe3)
        R 10 (#783780)
        U 9 (#1c1451)
        L 5 (#8c2250)
        U 10 (#7fa0c1)
        R 5 (#1618a0)
        U 4 (#9bb513)
        R 10 (#2368f0)
        D 3 (#816fe1)
        R 8 (#814690)
        D 11 (#6ac2d1)
        R 6 (#631bf0)
        D 11 (#36fb71)
        L 6 (#752c02)
        D 13 (#6216d1)
        R 6 (#3dc1f2)
        D 4 (#14d411)
        R 5 (#1b3f90)
        D 5 (#2fc501)
        L 10 (#7637f0)
        D 10 (#2fc503)
        L 7 (#217670)
        D 9 (#08b011)
        L 6 (#6fd5d0)
        D 4 (#449161)
        L 5 (#6e7d00)
        D 4 (#313521)
        L 14 (#16e192)
        D 9 (#133791)
        R 7 (#8a5e82)
        D 13 (#133793)
        L 7 (#138412)
        D 6 (#411cc1)
        L 4 (#0a5030)
        U 9 (#0c0da3)
        L 11 (#5f39d0)
        U 4 (#0c0da1)
        L 3 (#4b3a20)
        D 10 (#540dd1)
        L 9 (#6e7d02)
        D 3 (#85fda1)
        L 4 (#6fd5d2)
        D 13 (#902831)
        L 8 (#777522)
        U 8 (#754ba1)
        R 5 (#7587d2)
        U 10 (#38e651)
        L 5 (#6bccb0)
        U 8 (#77a921)
        L 4 (#83b390)
        D 7 (#1c7d81)
        L 11 (#1cdd40)
        D 6 (#86f151)
        L 4 (#257902)
        U 11 (#333151)
        L 3 (#8723d2)
        U 9 (#3b3401)
        L 2 (#5fc0b2)
        U 4 (#4d74d1)
        L 3 (#777762)
        U 12 (#746be3)
        L 8 (#a81fb2)
        D 4 (#1cc213)
        L 13 (#16cc82)
        D 8 (#426733)
        L 6 (#250fd2)
        D 5 (#245fd3)
        L 6 (#3818e2)
        D 8 (#272333)
        L 9 (#9ca460)
        D 4 (#711283)
        L 4 (#9ca462)
        D 11 (#4dab83)
        L 9 (#5cad02)
        D 9 (#6e6213)
        L 12 (#496782)
        D 7 (#38ebd3)
        L 3 (#549c42)
        D 6 (#7a07c1)
        L 12 (#5a0cc2)
        D 10 (#27d0c1)
        R 4 (#0c07a2)
        D 9 (#131191)
        L 7 (#635052)
        D 11 (#a9d031)
        R 7 (#4bb8e2)
        D 6 (#5a56c1)
        L 4 (#4921e2)
        D 3 (#34fbb3)
        R 2 (#30dc92)
        D 16 (#b06223)
        R 10 (#3ed232)
        U 7 (#2c8353)
        R 7 (#56a8a2)
        U 9 (#91e233)
        R 8 (#160d12)
        U 8 (#91e231)
        R 2 (#610772)
        U 11 (#0321e3)
        R 8 (#0b6212)
        D 2 (#51e0c3)
        R 8 (#0af852)
        D 8 (#26e6c1)
        R 11 (#8b1df2)
        D 4 (#26e6c3)
        L 6 (#57b9c2)
        D 7 (#47a373)
        R 6 (#05bfa2)
        D 14 (#3ad7d3)
        R 7 (#1f0cf2)
        U 12 (#941a83)
        R 4 (#7bfc22)
        U 5 (#560e73)
        R 8 (#64c342)
        U 7 (#5fff71)
        R 6 (#5e3582)
        U 12 (#5fff73)
        R 6 (#4b54f2)
        U 10 (#7147a3)
        R 3 (#13ec52)
        U 5 (#4fdab3)
        R 10 (#80d372)
        D 9 (#6fbc93)
        R 3 (#80d370)
        D 7 (#3500a3)
        R 11 (#61ff90)
        D 2 (#0cdbb1)
        R 6 (#048810)
        D 14 (#535771)
        R 2 (#048812)
        U 14 (#5301b1)
        R 13 (#40a800)
        U 11 (#6c1541)
        R 3 (#644370)
        U 4 (#1f7853)
        R 2 (#2decc0)
        U 3 (#4279e1)
        R 6 (#0b0c90)
        D 17 (#69b221)
        R 2 (#002d70)
        D 8 (#2a8943)
        R 5 (#797cd0)
        D 5 (#4f8153)
        R 10 (#60f160)
        D 8 (#322173)
        R 13 (#191bd0)
        D 13 (#1f7851)
        R 14 (#149560)
        D 3 (#06fa13)
        R 10 (#789560)
        D 5 (#3ac1e3)
        R 8 (#633b92)
        U 7 (#634b53)
        R 6 (#633b90)
        D 7 (#7652c3)
        R 6 (#789562)
        D 7 (#03f013)
        L 7 (#1bfb10)
        D 3 (#4b64c3)
        L 13 (#2bb9c2)
        D 7 (#404123)
        L 10 (#270982)
        D 6 (#4b5d01)
        L 5 (#a36852)
        D 15 (#424f71)
        L 9 (#916322)
        D 2 (#773293)
        L 6 (#1032a2)
        D 12 (#1679e3)
        L 15 (#861d62)
        D 9 (#404121)
        L 11 (#464d82)
        D 9 (#353503)
        L 5 (#1823c2)
        U 9 (#673ef3)
        L 11 (#141870)
        D 5 (#8945a3)
        L 9 (#141872)
        D 6 (#4672f3)
        L 3 (#1823c0)
        D 8 (#1ab0e3)
        L 9 (#5b7a42)
        D 8 (#2ef571)
        L 7 (#2b0400)
        D 6 (#9da191)
        L 5 (#2b0402)
        D 13 (#051981)
        L 9 (#04f0f2)
        D 11 (#59c3f1)
        R 12 (#41aba2)
        D 13 (#43c6a3)
        R 10 (#1dbbd2)
        D 7 (#5ed3b3)
        R 3 (#665a62)
        D 13 (#7deb63)
        L 10 (#3b9832)
        D 5 (#2d9993)
        L 2 (#3a9562)
        D 10 (#08c8b1)
        L 13 (#25b500)
        D 7 (#42e111)
        L 4 (#69c662)
        D 10 (#4e84e1)
        L 13 (#69c660)
        D 6 (#5554f1)
        L 3 (#25b502)
        U 12 (#5e9bb1)
        L 5 (#492462)
        U 4 (#790b31)
        L 17 (#42c172)
        U 10 (#529cb3)
        L 4 (#18b510)
        U 10 (#463b03)
        L 8 (#2a7052)
        U 13 (#6f5de3)
        L 2 (#2a7050)
        U 14 (#420883)
        L 6 (#18b512)
        D 5 (#19b783)
        L 11 (#212782)
        D 11 (#3da601)
        L 7 (#8b58d2)
        D 5 (#670f61)
        L 15 (#2f7e42)
        D 6 (#121221)
        L 7 (#6a8422)
        U 4 (#ad2e11)
        L 8 (#126832)
        U 11 (#706e11)
        R 4 (#2d7e10)
        U 4 (#15bd53)
        R 15 (#b09480)
        D 4 (#15bd51)
        R 5 (#01d2f0)
        U 15 (#26f303)
        R 9 (#811550)
        U 8 (#26f301)
        R 5 (#3ab180)
        U 12 (#12a7d1)
        R 7 (#5ae932)
        U 10 (#0e62f3)
        R 9 (#3aa802)
        D 10 (#0e62f1)
        R 3 (#23c482)
        D 12 (#6dd741)
        R 3 (#6c3330)
        U 13 (#9e7a41)
        R 4 (#4749e0)
        U 8 (#258501)
        R 10 (#4b0942)
        U 13 (#8ea2a3)
        L 10 (#23c412)
        U 8 (#8ea2a1)
        L 3 (#44afc2)
        U 3 (#0410d1)
        L 7 (#5b15a2)
        U 11 (#30b341)
        L 7 (#2cb3a2)
        U 7 (#04aa43)
        L 7 (#488922)
        U 8 (#959c73)
        L 10 (#616ec2)
        U 7 (#93fd31)
        L 5 (#2601a2)
        U 14 (#064981)
        L 11 (#18a172)
        U 4 (#033653)
  recorded_at: Sun, 16 Mar 2025 02:36:17 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/19_aplenty.rb?token=ACG6TJ5NMPDGRSLBZCSKGQTH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '9680'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"59b22b57758b4023198761f3905b1701be0da816632438693d7c7cbbbcc08b15"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 3A17:1D52A2:2DA41C:3B5753:67D6391F
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:18 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200050-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092578.671939,VS0,VE339
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 47c223cbbb07d9f6394e556e2997b650b53785b9
      expires:
      - Sun, 16 Mar 2025 02:41:18 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        rules, parts = DATA.read.split($/*2).map &:lines

        W = rules.to_h { _1[/(.+)\{(.+)\}/]; [$1, $2.split(?,)] }.merge(?A => [?A], ?R => [?R])
        parts.map! { _1.scan(/\d+/).map &:to_i }

        def p1(rules, values)
          rules.each {
            case _1
            when ?A
              return ?A
            when ?R
              return ?R
            when /(.)(<|>)(\d+):(.+)/
              i, v = "xmas".index($1), $3.to_i
              return p1(W[$4], values) if $2[?<] ? values[i] < v : values[i] > v
            else
              return p1(W[_1], values)
            end
          }
        end

        def p2(rules, ranges)
          current, *rest = rules

          case current
          when ?A
            ranges.map(&:size).reduce :*
          when ?R
            0
          when /(.)(<|>)(\d+):(.+)/
            i, v = "xmas".index($1), $3.to_i

            r, left, right = ranges[i], ranges.dup, ranges.dup
            left[i] = $2[?<] ? r.begin..v-1 : v+1..r.end
            right[i] = $2[?<] ? v..r.end : r.begin..v

            p2(W[$4], left) + p2(rest, right)
          else
            p2(W[current], ranges)
          end
        end

        p parts.sum { p1(W["in"], _1)[?A] ? _1.sum : 0 }
        p p2(W["in"], [1..4000] * 4)

        __END__
        hfm{a<1891:R,m<2881:A,m<2987:A,R}
        ns{s>2289:R,x<3094:A,R}
        vll{s<2397:R,x>1015:A,A}
        fx{a>3383:R,a>3059:A,A}
        bhg{x>669:A,x<605:R,a>3407:R,A}
        fr{m>2523:A,m>2353:R,x>2678:dts,A}
        llj{m<2149:vzl,pjq}
        qh{s<2205:R,R}
        nml{a>1072:R,x>1129:R,A}
        tb{m<2429:A,m<2506:A,x>2910:R,R}
        cr{x<735:R,a<2972:R,x<973:R,R}
        rb{s>2603:A,x>240:R,s>2405:A,A}
        xr{x>975:A,R}
        pb{a>2460:A,s>686:A,cq}
        dfv{x>1219:A,km}
        kc{m>1600:nsj,tjp}
        lx{s>3383:kgn,qrh}
        dc{s<723:A,x>2900:R,x>2607:A,A}
        gxn{s<3351:R,s<3754:A,A}
        kkk{a>1099:R,R}
        jbz{x>3246:R,m<3301:lh,zz}
        qf{s<3162:R,m>2686:R,R}
        gqb{s>2575:A,m>2634:R,R}
        pz{a>2415:sv,x<1649:A,a<1508:bv,R}
        fn{m<2045:ht,a<1532:sm,x>1630:bxs,gfk}
        br{m>631:A,m>392:A,R}
        dtx{a<3420:A,x<582:A,R}
        ms{m<1784:R,a<1945:R,x<276:R,A}
        ljm{a<3677:R,m<2840:R,a>3790:R,A}
        gcp{x<964:zqt,a>3632:qr,cvc}
        kz{m>2543:A,m<2302:R,ns}
        gqp{a>1014:A,R}
        hq{a>416:kz,m>2537:mm,pt}
        bcb{m<2838:A,x>355:R,R}
        cp{s>2863:A,R}
        gfr{s>2813:vxb,R}
        kx{s>3076:A,s>2788:bcb,rb}
        lrf{m>3285:jg,a<1934:A,R}
        sjf{x>2162:dc,s>886:ddk,s>327:qjs,zqv}
        cqp{a<3274:R,a<3562:pjn,A}
        zkb{x>927:vpm,x>553:pbm,pvv}
        cl{s<2019:A,a<672:mx,hh}
        vxm{s>3645:A,x<3010:R,R}
        tl{m>2863:hfq,s<618:xmd,zf}
        lc{m<1255:qjt,m<1360:mml,m<1405:rrz,R}
        mk{m<2694:A,m<2720:A,m<2742:R,R}
        vhd{a<1005:R,a<1032:fl,m>3001:hp,vc}
        bhl{a<63:A,A}
        dnp{m>2478:R,js}
        vx{x>459:A,s>3010:R,A}
        mgm{a>2427:A,m<512:A,m<672:R,A}
        mkg{m<3037:kqc,pg}
        pgn{x<657:dbf,bp}
        gk{a<2387:A,m>3634:tjf,xrs}
        bk{x<1464:R,m<2385:R,s<2889:A,R}
        brh{x<592:A,a>1420:A,a>1294:A,A}
        jlk{x>3037:A,R}
        sj{x>1055:R,A}
        hpg{a>2950:R,s<183:R,R}
        rvj{s>535:fv,x<2858:kjp,m<1563:hv,ff}
        nxz{m>2313:R,s<3765:A,a>2157:A,A}
        gml{x>3077:hk,fr}
        mnn{a>363:R,A}
        rh{a>120:A,a<63:R,a<86:A,A}
        kqs{m<1616:xpt,zzs}
        pp{s>2657:nk,m<2894:hhh,clh}
        tnr{m>2934:A,x>1403:A,x<1189:R,A}
        kk{x>2090:zkj,m<2508:A,m>2704:A,qln}
        zl{a>239:xgn,x<2628:nn,a>99:A,bhl}
        lm{a<2364:R,a>3061:A,a<2725:A,A}
        mml{s<927:A,A}
        pn{a<66:R,s>3144:R,x>3414:A,R}
        grp{a>988:gfr,knm}
        rbq{a<1659:R,m>2412:R,a>1755:R,R}
        bs{x<455:R,m<2320:R,a<1359:A,R}
        kh{m<354:A,pcg}
        xc{a<915:A,x>481:A,m>1053:R,R}
        zm{x<921:A,x<994:A,a<1883:R,A}
        xmd{a<1534:vg,m>2299:rpl,xs}
        dpj{a>155:A,s<3370:lf,s<3618:nxx,R}
        jzt{x<2429:R,R}
        bgg{a<224:A,m<2159:R,A}
        gcg{x<467:A,drb}
        smm{s<3438:rdk,m<1941:A,a<2090:A,shf}
        fds{m<817:A,A}
        dts{m<2173:A,x<2824:R,A}
        nch{a<862:R,A}
        pkx{x>1081:A,R}
        kl{a>3653:A,A}
        zmn{a<3055:A,A}
        vpm{s>2871:gb,a>302:A,x<1117:qh,A}
        zjh{s<681:R,s>1108:A,a>2949:R,A}
        csf{x<2624:A,R}
        fqm{a<2452:A,R}
        fp{m<2297:R,x<1623:A,m<2552:tb,lgz}
        qjs{x>1439:A,m>195:R,A}
        tcp{a>3014:dbd,a<2122:xr,s>395:R,qpp}
        qlq{m<2703:A,s<1679:R,a<3363:R,A}
        qp{s>3440:bmb,s>3155:jxr,m>2536:trb,gtv}
        pgt{x>2227:R,x<1942:R,m<2848:A,R}
        ks{a>2805:A,a>2754:A,A}
        gzs{a<1925:mg,A}
        nn{m<3249:R,x<2147:R,m>3368:A,R}
        hv{a<2412:fkv,hpg}
        sf{s<3613:A,s<3794:R,a>2553:A,R}
        dx{a>2210:kvd,lz}
        rt{x<702:sq,a<2430:dp,jd}
        tdx{a>951:R,R}
        rdk{m>1912:R,s<3160:A,s<3318:A,R}
        xd{a>1917:A,a<1756:cgg,s<1553:R,R}
        xgn{x<2590:A,A}
        mm{m>2703:R,gqb}
        kg{x>575:A,s<2499:A,s>2683:R,R}
        ml{a>1963:R,R}
        nt{x<1093:bfn,dr}
        kxz{s<2359:qxx,bkc}
        qqz{m<1860:A,a<3554:A,s<937:R,R}
        zc{s>2080:R,m<2808:qlq,s<1761:bl,lb}
        tvf{s>2113:A,a<3780:R,R}
        dhh{a<2922:A,a>3078:A,A}
        gtv{a>2013:A,m>2316:R,s<3022:R,mc}
        xh{x>2824:R,A}
        mq{s>2361:thg,sgb}
        lf{s>3091:R,A}
        lz{a>1814:spd,x<958:jj,kkj}
        th{s<215:A,x<3295:R,m>3355:A,A}
        xtp{s<2152:A,R}
        gqm{m<1316:R,R}
        dr{x>2043:A,m>2796:A,s>782:A,R}
        dbf{x<616:A,s<2980:R,A}
        hhh{x>2202:jzt,R}
        sq{a>2651:qcp,s>2270:kx,a<2082:bqv,sh}
        sh{x<322:lnq,txg}
        tc{x>1958:hr,rkl}
        hkm{m<2693:A,m>2768:kv,R}
        vjh{m>3433:nqx,a>372:qxl,s>2941:dpj,zl}
        nb{m>1186:A,m<1106:R,R}
        ttg{a<1907:R,R}
        rzt{x>1028:R,x<934:A,s<1494:R,A}
        gcj{m>493:A,A}
        mj{m>759:xc,a<926:A,A}
        rp{x>1430:llz,a>3405:R,s>253:cr,xzt}
        ngj{a<1849:jkc,vcl}
        ddk{x>1064:A,a>860:A,s>1170:A,R}
        fs{m<3638:zv,m>3842:R,s>1558:fh,xg}
        rpl{s>314:szc,a<2372:pkk,s<158:gsj,rp}
        jpb{s<2898:zh,pdq}
        ngr{a>1086:A,m<1535:A,R}
        lsm{m>2766:R,A}
        vt{a>2734:R,sf}
        kfg{m<3340:jnx,s>2974:jhg,jpx}
        hbg{a>39:pn,x>3436:rzv,A}
        pjq{a<3306:R,a<3496:R,A}
        fv{a<2261:ltf,qck}
        hh{x>2281:R,s<2324:R,A}
        pv{m<3610:kfg,dnd}
        kfm{x<1892:R,A}
        gck{x<1059:zm,s<1802:tnr,R}
        knz{s>1104:xlt,x>2522:hkm,m<2690:dnp,nt}
        zb{a<1282:A,gxn}
        qn{a<2568:R,a>3362:A,A}
        fhz{m<2469:R,x<1017:A,R}
        hl{s<2004:A,m<2517:A,s<2219:gn,R}
        hr{x<2819:A,x<3556:R,R}
        hs{m>1138:A,m>1099:R,x<1102:A,R}
        gm{s>1235:A,x>871:A,R}
        sm{x<1462:xmf,m>2947:xjm,sr}
        sgn{a>785:A,hgs}
        ll{s>2311:A,x<941:A,s>1709:A,A}
        gr{m<3579:R,m<3743:R,bcr}
        hgz{m>1825:R,A}
        vcl{x>1884:A,R}
        bp{s<2265:R,a<2991:R,m<931:R,R}
        vtg{a>589:A,s>611:A,x<1171:R,A}
        drb{x>499:R,x>483:A,R}
        kkj{s>2996:prz,s<2115:A,s<2591:rbq,R}
        mf{m>1621:xdf,m>1509:R,zpx}
        qx{m>2493:A,s<67:R,s>99:R,A}
        xj{x>1073:sd,a<2088:ssz,a<2874:mv,fx}
        nl{x>1901:vt,dhh}
        qxx{s>1740:gk,a<2502:xd,fs}
        lh{x>2845:R,x<2721:R,s<1013:R,R}
        gn{a<2827:A,x<888:R,R}
        ssr{x<1329:hcd,a<3869:bk,s>2378:R,fcm}
        djv{a<669:R,s>2282:A,A}
        vg{m>2419:xbq,xxp}
        hxz{s>1149:R,s<970:R,R}
        pcg{m<563:A,R}
        pfz{s>3593:A,s>3372:R,a<1883:A,R}
        spt{s>1816:ffb,R}
        js{a>3135:R,a>2472:A,R}
        qck{m<1565:R,R}
        spd{m<2263:R,x>787:A,fbv}
        cnh{m<106:vrl,R}
        gmg{m<76:A,R}
        ltf{a<1339:R,A}
        ssz{x<912:R,s>2404:R,A}
        hx{a>2776:A,s>3120:R,a>2575:R,A}
        ps{m<2121:R,m>2614:lsm,R}
        vzl{s>2769:R,A}
        qbq{x<1041:R,A}
        zn{x>2869:xtp,s>2386:qv,x>2164:vm,gq}
        xpt{a<1592:hkg,jrs}
        ckf{x<2913:A,s<3461:A,qd}
        vmr{s<538:R,A}
        xjl{s<1931:R,R}
        sd{s<2558:R,m>674:R,R}
        gzx{s>3734:R,a>2118:A,x<2007:R,R}
        vxb{a>1179:A,x>2948:R,R}
        grj{a<986:A,x<3665:A,R}
        hz{m<2410:R,a<1473:R,m<2553:A,R}
        xfz{m<664:R,A}
        qjt{a>2336:A,R}
        skl{m<1447:tbm,x<2563:kc,x<3380:rvj,xmk}
        rpt{s>3373:kk,a>3465:pmz,qs}
        tbm{x>1640:gl,x>940:lc,x>555:dh,ppp}
        rkl{s>758:A,s>703:A,A}
        kt{a<1525:sjf,m<165:cnh,a<3002:kmt,glm}
        rxb{a>1274:A,s>217:R,x<2590:R,R}
        bmb{a<1887:qmq,m>2527:gzx,nxz}
        lj{m>1658:A,x<1304:R,a<2946:R,R}
        dz{m>958:skl,kqg}
        cgg{m>3549:A,a<1669:R,a>1715:A,A}
        bv{a<517:R,A}
        pzp{m>1796:A,s>337:R,A}
        kjp{x>2667:R,a>2007:jq,x<2619:tf,R}
        mmn{a<962:bfg,s<3092:rd,a<1071:vhd,kkk}
        qpj{m<474:jx,vrb}
        nbd{s<2643:fdz,x<2979:qc,a>109:dg,hbg}
        gv{m<1621:A,a<2391:R,s<526:R,A}
        bqv{x<397:A,s>1928:R,s>1735:hfm,vb}
        bxn{s>3496:A,R}
        rd{m<2982:R,a>1048:R,x>688:rs,A}
        xs{x>1594:hnv,m>2097:tcp,spr}
        hd{x<2832:R,a<1703:A,A}
        sgb{x<2756:R,m<3350:R,a>989:A,R}
        ct{s>268:A,m<1145:R,R}
        gfn{x>2445:R,m>3468:A,R}
        jrs{m>1415:R,s<2989:R,csf}
        mx{a<418:A,a<544:A,R}
        sz{x<3171:R,A}
        xp{x>96:kp,br}
        bz{m<2623:zn,x>2581:npm,s<2334:qz,pp}
        hsm{a<809:A,m>2928:R,s>2549:R,R}
        vm{x<2604:R,s>1820:A,R}
        jnx{a<2355:R,ll}
        ffb{a<3297:R,x>1272:R,m>2403:A,A}
        dkm{x>1784:A,a<3116:R,A}
        pjn{s>2661:A,A}
        vrb{x>458:rjt,a<2892:bj,xcb}
        ktc{s<1670:R,zs}
        cq{m<1671:A,a<1916:A,A}
        tt{s<2036:A,A}
        hnv{s<227:A,R}
        djh{m>3475:R,R}
        bx{x>3185:R,m<3404:A,gfn}
        bh{m>3890:R,a>2742:R,s<2390:R,R}
        jk{s<2685:nv,a>577:mj,m>532:vjr,gcg}
        zdz{m<2908:R,s<3336:A,R}
        bl{a<3471:R,m>2937:A,a<3715:R,A}
        gxl{s>3244:jcc,m<2779:rfj,npx}
        gq{a<2394:A,s<2052:R,x<1953:dkm,R}
        cqv{m<3827:jm,hlq}
        vrl{x<2650:R,x<3541:A,A}
        glm{x>1916:A,a>3599:nhd,ggg}
        zlm{x>195:A,R}
        md{x>1309:zdz,ttg}
        vpp{x<3122:R,R}
        kv{m>2823:R,x<3299:A,R}
        fcm{s<1752:R,m<2347:A,A}
        hmr{x<549:bh,a>2572:R,R}
        nm{x>2081:R,ljm}
        shf{x>2947:A,s>3634:A,x>1974:A,A}
        pt{x>2491:R,x<2085:A,s<3066:mnn,A}
        xdf{a<861:A,R}
        dbx{x<1876:A,a<1669:R,R}
        dp{s>2341:md,s>2015:gzs,s<1618:pqp,gck}
        kgn{x<1215:R,A}
        lgz{a>1196:A,R}
        in{s>1392:fn,vv}
        qln{s>3608:R,m>2588:R,a<3582:A,A}
        dvf{x>592:A,m<2183:R,x>320:A,A}
        dh{a>1930:A,x>739:A,a<1115:rbz,R}
        kvg{x<2234:R,A}
        qtn{a>1139:A,s<1193:A,A}
        pc{a>1879:cm,nch}
        fcr{m>2273:rdr,zqz}
        qcd{a<2274:A,s>2074:R,R}
        bcr{x<3112:A,s>600:R,A}
        nv{a<903:cx,s<2221:qnm,a>1077:fds,A}
        lkf{x<1086:A,R}
        qnm{m<806:R,s<1909:R,m<985:R,R}
        gb{a<426:A,x<1187:R,s>3618:R,R}
        sxt{s>2383:zt,m>218:nf,x<678:gmg,zmn}
        tsc{a<2880:bxn,s>3543:bhg,A}
        npx{x<551:R,m<3518:mjv,rkd}
        fbv{x>325:R,m>2480:R,x>134:A,A}
        zz{a>2965:A,x>2929:R,x<2695:A,A}
        np{a>3482:A,x<3481:A,A}
        sbs{s<259:A,x<1379:A,R}
        bn{m>3500:R,s<1981:A,R}
        rxv{x>2424:gml,a>3161:rpt,a<2452:qp,nl}
        rrz{m>1386:A,A}
        bpn{s<3253:A,m<2833:A,A}
        hvk{s>893:qtn,s>718:fp,ps}
        xzt{s<214:A,a<2852:A,a<3195:A,A}
        gt{m<2278:dvf,x<488:zlm,s>2549:A,tvf}
        nk{m>2791:kxp,bbf}
        sx{x>429:A,A}
        hvr{m>1538:vmr,x>3824:zjh,R}
        vd{m<1786:A,A}
        hgs{m<3070:R,R}
        vlk{a<1234:cl,bmn}
        lnq{a<2399:A,A}
        xbq{s>361:zmh,x>1853:A,A}
        jcc{m<2771:bm,s<3604:ssm,a<1271:A,R}
        jpx{m>3485:A,x>558:phc,m>3423:tt,A}
        hfq{x<2572:zbr,xt}
        bkc{m>3587:xrm,bx}
        sn{m>847:cqp,mvz}
        nq{x<785:ms,vd}
        lt{a>3074:R,hx}
        gl{s<547:nb,m>1232:gqm,lm}
        vk{s>2248:R,x>1018:R,x>875:A,R}
        nh{s<2219:A,R}
        rkd{a>1307:R,m>3778:R,s>3005:R,A}
        pl{m>532:nx,ckf}
        cvc{m<2242:llj,s>2486:lx,spt}
        xlt{x<1412:gm,R}
        tlh{s<680:R,m>1528:R,R}
        xcb{m>816:R,m<635:R,R}
        rf{a<3404:R,a<3430:A,s>3097:A,A}
        npm{a>2858:zc,m<2822:gvj,vpp}
        vb{x>516:R,a<1732:R,a<1881:A,A}
        rbz{m>1164:R,m>1031:R,R}
        dpg{m<2841:R,A}
        djj{x<2363:A,x<2667:A,R}
        jg{m>3682:R,x<1403:R,s<1039:A,R}
        jkc{a<1057:kvg,x<1649:brh,R}
        bm{x>529:A,s>3739:R,A}
        mvz{a>2875:A,x>2783:R,a<2598:mgm,vp}
        szc{s<471:zx,R}
        jb{x<659:R,x>709:R,x>676:dt,R}
        mb{a>173:R,a<102:R,R}
        qcp{m>2929:gkj,m>2762:dpg,x>412:mk,R}
        pld{m<1537:A,s<834:gv,m>1601:hxz,R}
        pzt{m>2415:pkc,m<2185:A,x<753:bs,A}
        jq{a<3196:A,s<241:A,A}
        hcd{s<2451:R,x>1173:A,A}
        nj{x<2302:R,x<2582:R,a<2520:A,R}
        fpt{a<3130:R,A}
        cbt{s>2382:R,s>2035:A,x<3432:A,A}
        tjp{a>2112:tlh,m>1498:ngr,a>994:R,vtg}
        xjm{a<583:vjh,m<3559:fhm,cqv}
        pg{s<2659:R,m<3065:R,s<3521:A,A}
        rs{m<3568:R,s<2122:R,R}
        tdg{a>716:R,s>1859:R,m<2373:R,R}
        vjr{s<3323:A,m<887:R,s>3746:R,R}
        qz{a<3160:pgt,nm}
        tk{x>369:R,x<184:A,x<290:A,R}
        qmq{m<2599:R,x<2042:R,a<1683:A,A}
        tv{x<344:A,x<362:R,A}
        pbm{x>798:R,s<2731:xq,A}
        jj{m>2323:tk,s>2354:vx,x<498:R,R}
        qgp{s>1012:A,R}
        ph{x<1029:R,R}
        hp{s>3534:R,R}
        xrm{s<3121:cp,x<2635:R,s>3518:R,R}
        xmf{a<675:zkb,a<1132:mmn,s<2787:gj,gxl}
        jtd{a<2647:nml,lkf}
        dnd{m<3828:dcc,hmr}
        zj{a<1710:jb,m>522:pgn,s>3129:tsc,sxt}
        cz{s>3009:jc,zzv}
        hck{s<2868:jzg,m<2279:px,x<1200:gp,A}
        fdl{m<1066:qbq,hs}
        qs{a<3302:R,x>1926:R,x>1732:rf,cxv}
        ggg{s<517:A,R}
        qr{a>3785:ssr,a<3690:dfv,hck}
        tjf{m>3817:A,R}
        xmk{a<1412:mf,x<3641:pld,m<1591:hvr,pb}
        kp{s>2187:R,x>165:A,A}
        fg{x<399:csz,x>551:zj,a<1392:jk,qpj}
        thg{m<3389:R,a>1107:R,R}
        zqz{x>596:A,x>213:R,R}
        qc{x<2322:A,mb}
        vv{m<1712:dz,tl}
        pbv{m<2080:mhd,s<878:tc,plt}
        px{a<3748:A,A}
        jzg{a>3732:R,A}
        tlp{x<3026:R,a>2164:R,m>353:A,R}
        xzl{s>159:R,x<3229:R,x>3323:R,R}
        zmh{s>488:A,x<1954:R,A}
        tf{s>209:R,s<81:R,R}
        vq{m<1053:R,a<2219:vll,A}
        glz{m<2247:A,x>725:R,m<2273:R,R}
        zkj{m<2706:R,s<3737:A,s>3825:R,A}
        nf{m<397:R,s>1752:R,s>1617:A,A}
        gfk{m>3145:pv,m>2600:rt,a>2976:gcp,dx}
        jhg{s>3608:djh,R}
        hlq{x>2998:grj,R}
        dv{s<2926:R,s<3607:A,x>402:dq,fpt}
        fh{m>3713:A,m<3664:A,s<1671:A,R}
        zzb{a<161:A,A}
        pkc{x>535:R,s<2008:A,a<1368:R,A}
        dg{m>2360:A,bgg}
        cx{s>2101:A,x>475:A,s<1778:R,R}
        zss{a>2883:R,s<2474:R,A}
        nx{s>3208:vxm,s>3008:tdx,R}
        gh{s>107:A,m<2657:R,A}
        qrh{x>1346:A,m<2388:R,m<2525:R,A}
        zv{x>3110:R,R}
        jm{a>1039:A,s<2431:R,A}
        kj{m>2931:nh,vk}
        jd{s>2473:lt,s<2087:ktc,kj}
        mhd{a<3200:R,x<2076:R,qqz}
        zzv{m>1041:A,A}
        krh{s>1661:xjl,m<446:R,rzt}
        tsj{x<132:R,m>834:nc,zss}
        jzz{x>368:R,A}
        xt{a<1846:gr,s<470:th,jbz}
        kxs{m>3533:R,a>1643:A,R}
        pvv{s>3049:A,a>280:R,m<2872:A,bn}
        zt{m>312:A,R}
        prz{a>1630:R,A}
        dcc{s<2488:qn,A}
        ppp{s>555:qgp,ct}
        sgl{x<1049:kxs,m>3295:dbx,ml}
        xrs{a<3128:R,R}
        qd{s<3697:A,s>3883:A,m<256:A,R}
        mg{a>1779:A,A}
        kvd{s>2370:mkz,a<2669:lvz,m<2375:ks,hl}
        gp{s>3412:A,m>2453:R,s<3190:A,A}
        gs{m<3214:hnp,a>1327:R,m<3478:R,R}
        dq{m<2294:A,a<3133:R,s>3809:R,R}
        fhm{m>3214:mq,a<1065:sgn,m<3095:mkg,nzh}
        kqg{m<471:kt,ngj}
        gvj{x>3475:dkt,m<2753:A,kq}
        bbm{a<2651:R,x<1934:R,a<2930:A,A}
        sr{a>523:grp,a<289:nbd,hq}
        zx{x>1522:R,s<413:R,x>551:R,R}
        rx{a>2719:R,a<2394:A,x>892:R,A}
        nsj{a<2290:gqp,lj}
        ht{m>1276:kqs,x>1383:vr,x<809:fg,jpb}
        rfj{a>1363:hz,x<924:jzz,x<1249:rvd,gjv}
        rdr{a>3396:R,x<490:A,s>1707:A,A}
        llz{m<2526:A,a>2958:A,A}
        vp{s<2776:R,m>438:A,R}
        bxs{m>3075:kxz,s>2929:rxv,bz}
        zh{s<2067:krh,m>838:vq,m>452:xj,qg}
        mv{s<2553:R,a>2583:A,R}
        lq{s<3384:A,s<3723:A,a<502:R,A}
        hk{a<2548:pfz,s>3580:lms,qf}
        fl{x>561:A,a<1018:R,A}
        qxl{a>469:R,xh}
        bfn{x<471:R,a>2998:R,s>903:A,A}
        htd{m<2745:A,A}
        lms{s<3778:R,A}
        mjv{x<1153:A,A}
        nqx{x>2835:cbt,a<271:zzb,a<391:djj,R}
        dt{s<2326:A,x<694:R,R}
        spr{m>1944:A,a>3045:pzp,x>1013:sbs,hgz}
        jx{s>2889:R,m<279:qcd,x>487:A,sx}
        trb{a<1977:R,a>2166:A,A}
        zs{a>3142:A,x<1091:R,R}
        vr{a>2273:sn,m>843:cz,s>2681:pl,vlk}
        gsj{x<2446:qx,s>79:gh,a<3044:A,np}
        sc{m>2483:A,R}
        nc{a<2727:A,s<2752:R,m<1032:A,A}
        pmz{x>2124:A,a>3726:kfm,A}
        rzv{m>2612:A,a>17:A,A}
        pkk{m<2591:sc,R}
        qv{m>2307:R,nj}
        mkz{m>2298:rx,m<2213:ph,a<2681:R,glz}
        txg{s>1691:R,A}
        kxp{x<2013:A,R}
        jc{m<1072:A,a<1090:lq,s<3550:hd,R}
        zpx{a>639:R,a>349:R,x<3587:R,A}
        cm{m>1760:R,R}
        zqv{x<1298:A,a<689:A,a<1166:R,R}
        bj{x>424:R,s<2808:A,a<2043:A,A}
        kmt{x>2294:tlp,s>566:R,x>1268:A,A}
        km{s<2922:A,a>3666:R,a>3644:R,A}
        hnp{x>507:R,x>187:A,R}
        ctf{m<1863:A,x<1658:A,A}
        lb{m>2935:A,s>1913:R,s>1845:R,R}
        zqt{a>3510:gt,a<3321:dv,s>2328:dtx,fcr}
        zbr{s<567:sgl,lrf}
        fdz{x<2671:rh,a>121:R,A}
        nhd{a<3761:A,s>849:R,a<3857:R,A}
        qpp{a>2654:A,m<2211:R,A}
        bmn{x<3088:R,a<1847:A,gcj}
        fkv{m>1512:A,x<3170:R,x>3258:A,A}
        sv{x>2547:R,R}
        dkt{x>3767:R,s<2076:R,s<2423:A,A}
        dbd{x<944:R,x<1326:A,A}
        xg{a<3113:A,m>3707:A,s<1469:A,R}
        phc{s<1991:R,x>1172:R,x<840:A,R}
        phf{s>1933:kg,s<1674:R,x>508:A,R}
        pqp{m>2786:A,s>1514:R,R}
        gj{m<2941:pzt,m>3643:phf,gs}
        rvd{a<1252:R,s>3015:R,R}
        knm{s<2302:tdg,m<2584:jlk,htd}
        clh{x>2113:R,a>2983:A,fqm}
        ssm{s>3366:A,A}
        zzs{s<2716:pz,x<1486:nq,m<1843:pc,smm}
        nxx{a<86:R,m<3157:R,s>3477:R,A}
        csz{x>235:df,a>2090:tsj,s<2596:xp,zb}
        lvz{x<566:R,m<2338:hf,fhz}
        kqc{m>3000:A,a<1259:R,x>2607:A,A}
        pdq{s>3502:jtd,m>734:fdl,kh}
        nzh{s<2592:R,s>3085:R,R}
        kq{x<3010:R,a>2121:A,s<2261:A,A}
        jxr{m<2447:A,a<1841:A,a<2096:A,bpn}
        plt{a>3255:kl,bbm}
        hkg{m>1491:R,djv}
        xq{a<399:A,x<652:R,R}
        rjt{a<3053:A,a>3622:R,R}
        cxv{x>1677:A,R}
        hf{s<1982:R,x<1260:R,x>1414:R,A}
        mc{a<1706:R,x<2072:A,A}
        bbf{m<2692:R,a<2801:R,R}
        bfg{x<492:A,hsm}
        vc{a>1052:R,s<3558:R,A}
        ff{x<3072:R,s<333:xzl,x<3262:sz,R}
        gjv{m<2383:A,A}
        df{a<2151:xfz,tv}
        qg{m>298:sj,pkx}
        xxp{m<2001:ctf,x<1555:R,a<853:A,rxb}
        gkj{a<3512:R,R}
        zf{a<2136:hvk,m<2363:pbv,knz}

        {x=270,m=803,a=872,s=703}
        {x=168,m=751,a=718,s=82}
        {x=153,m=830,a=1600,s=1613}
        {x=335,m=2651,a=45,s=535}
        {x=1744,m=2707,a=2054,s=421}
        {x=792,m=2226,a=694,s=2812}
        {x=2839,m=2056,a=3184,s=1188}
        {x=136,m=2452,a=76,s=610}
        {x=917,m=1348,a=184,s=1413}
        {x=1109,m=1790,a=648,s=1026}
        {x=1397,m=450,a=1618,s=714}
        {x=486,m=1721,a=1685,s=718}
        {x=2719,m=106,a=910,s=447}
        {x=623,m=1151,a=772,s=1053}
        {x=977,m=493,a=1463,s=2396}
        {x=499,m=270,a=3225,s=760}
        {x=70,m=2583,a=2786,s=300}
        {x=39,m=2807,a=3758,s=133}
        {x=1875,m=2332,a=869,s=2285}
        {x=2498,m=1034,a=2958,s=2313}
        {x=412,m=596,a=1271,s=295}
        {x=59,m=2215,a=3630,s=331}
        {x=1357,m=240,a=630,s=15}
        {x=48,m=1507,a=269,s=1936}
        {x=394,m=844,a=923,s=660}
        {x=227,m=436,a=2767,s=792}
        {x=27,m=773,a=586,s=987}
        {x=574,m=40,a=166,s=99}
        {x=1818,m=379,a=1740,s=908}
        {x=507,m=419,a=300,s=1289}
        {x=241,m=1679,a=226,s=235}
        {x=98,m=2248,a=1826,s=1645}
        {x=1608,m=752,a=1752,s=1596}
        {x=491,m=1129,a=780,s=2579}
        {x=41,m=2383,a=1346,s=336}
        {x=2266,m=755,a=248,s=29}
        {x=610,m=378,a=533,s=1732}
        {x=1681,m=935,a=2270,s=2267}
        {x=2150,m=1331,a=1113,s=3004}
        {x=689,m=261,a=1010,s=1711}
        {x=991,m=225,a=1468,s=2326}
        {x=18,m=1705,a=1963,s=664}
        {x=28,m=546,a=2929,s=92}
        {x=3391,m=440,a=1644,s=2483}
        {x=859,m=1340,a=508,s=25}
        {x=865,m=654,a=578,s=3020}
        {x=1297,m=144,a=172,s=611}
        {x=691,m=1975,a=1682,s=368}
        {x=5,m=3220,a=1769,s=356}
        {x=1974,m=1287,a=1944,s=215}
        {x=345,m=421,a=2361,s=2440}
        {x=1009,m=351,a=431,s=410}
        {x=749,m=836,a=40,s=79}
        {x=2735,m=2444,a=3141,s=813}
        {x=74,m=12,a=2040,s=3428}
        {x=20,m=188,a=14,s=1207}
        {x=1123,m=108,a=591,s=35}
        {x=184,m=410,a=22,s=251}
        {x=146,m=1425,a=833,s=1064}
        {x=2551,m=1056,a=1433,s=1569}
        {x=1883,m=1442,a=108,s=646}
        {x=804,m=14,a=1000,s=1944}
        {x=160,m=104,a=1040,s=2738}
        {x=1185,m=651,a=2981,s=1563}
        {x=43,m=1746,a=512,s=1247}
        {x=386,m=1151,a=1189,s=1107}
        {x=2118,m=2914,a=226,s=75}
        {x=3542,m=3035,a=1877,s=584}
        {x=120,m=1243,a=575,s=8}
        {x=3828,m=1207,a=124,s=7}
        {x=142,m=1824,a=2620,s=574}
        {x=622,m=713,a=354,s=1178}
        {x=107,m=671,a=142,s=446}
        {x=230,m=581,a=1034,s=1436}
        {x=622,m=521,a=440,s=2084}
        {x=671,m=717,a=224,s=535}
        {x=64,m=818,a=1947,s=214}
        {x=74,m=1639,a=441,s=1224}
        {x=625,m=1559,a=3240,s=134}
        {x=1738,m=2097,a=197,s=511}
        {x=884,m=2434,a=178,s=1287}
        {x=1524,m=773,a=201,s=1309}
        {x=99,m=24,a=3313,s=812}
        {x=216,m=97,a=2561,s=182}
        {x=2981,m=399,a=383,s=252}
        {x=61,m=439,a=671,s=1747}
        {x=309,m=3,a=8,s=2011}
        {x=74,m=958,a=87,s=896}
        {x=100,m=661,a=1197,s=174}
        {x=391,m=284,a=2173,s=348}
        {x=1477,m=1641,a=150,s=1475}
        {x=1376,m=801,a=10,s=221}
        {x=706,m=1658,a=415,s=2618}
        {x=137,m=13,a=1319,s=264}
        {x=754,m=940,a=245,s=362}
        {x=1977,m=987,a=206,s=1058}
        {x=1652,m=194,a=1058,s=1236}
        {x=66,m=297,a=2194,s=339}
        {x=1440,m=1819,a=200,s=923}
        {x=221,m=35,a=2729,s=1582}
        {x=145,m=503,a=160,s=2628}
        {x=643,m=772,a=1129,s=634}
        {x=1580,m=5,a=847,s=503}
        {x=2069,m=370,a=447,s=465}
        {x=2794,m=92,a=1234,s=1493}
        {x=2752,m=215,a=305,s=1296}
        {x=1769,m=449,a=1991,s=210}
        {x=1513,m=405,a=1029,s=1594}
        {x=1260,m=1937,a=327,s=959}
        {x=165,m=557,a=1077,s=3128}
        {x=1263,m=180,a=19,s=72}
        {x=369,m=173,a=530,s=1370}
        {x=331,m=639,a=567,s=263}
        {x=1046,m=2303,a=32,s=461}
        {x=106,m=160,a=18,s=1293}
        {x=1202,m=48,a=644,s=155}
        {x=1411,m=1973,a=68,s=1002}
        {x=3082,m=1684,a=1314,s=2303}
        {x=781,m=414,a=885,s=341}
        {x=294,m=2955,a=2670,s=268}
        {x=913,m=49,a=378,s=1057}
        {x=67,m=1402,a=910,s=310}
        {x=304,m=2341,a=214,s=1026}
        {x=668,m=478,a=1233,s=363}
        {x=2275,m=3714,a=12,s=57}
        {x=2603,m=591,a=1357,s=1809}
        {x=7,m=511,a=3472,s=1883}
        {x=1305,m=2652,a=1194,s=227}
        {x=308,m=2241,a=416,s=2248}
        {x=83,m=3545,a=3477,s=372}
        {x=2771,m=1273,a=1640,s=816}
        {x=3080,m=174,a=542,s=724}
        {x=209,m=70,a=534,s=210}
        {x=452,m=114,a=679,s=1008}
        {x=771,m=294,a=338,s=1258}
        {x=1730,m=826,a=345,s=27}
        {x=2901,m=1038,a=1499,s=2199}
        {x=2066,m=3193,a=957,s=393}
        {x=130,m=3257,a=2250,s=253}
        {x=235,m=987,a=278,s=597}
        {x=2465,m=1268,a=1893,s=2360}
        {x=940,m=470,a=435,s=1386}
        {x=958,m=392,a=79,s=18}
        {x=1513,m=2440,a=1287,s=36}
        {x=84,m=361,a=3217,s=28}
        {x=2451,m=2374,a=57,s=1242}
        {x=251,m=1008,a=1114,s=1458}
        {x=2058,m=46,a=657,s=989}
        {x=2398,m=463,a=1753,s=917}
        {x=1181,m=2013,a=4,s=2832}
        {x=1548,m=271,a=6,s=218}
        {x=1934,m=240,a=410,s=954}
        {x=2328,m=1860,a=1111,s=1487}
        {x=2370,m=27,a=694,s=1372}
        {x=2299,m=350,a=669,s=360}
        {x=2010,m=2306,a=700,s=1297}
        {x=349,m=2569,a=223,s=352}
        {x=50,m=343,a=49,s=17}
        {x=1980,m=82,a=20,s=1637}
        {x=1336,m=1955,a=269,s=264}
        {x=154,m=3620,a=2,s=818}
        {x=623,m=3021,a=2297,s=1911}
        {x=2981,m=2825,a=1290,s=69}
        {x=493,m=534,a=1029,s=3961}
        {x=44,m=1352,a=1311,s=1147}
        {x=920,m=389,a=2045,s=1441}
        {x=1166,m=930,a=1522,s=291}
        {x=51,m=673,a=2995,s=496}
        {x=950,m=557,a=24,s=1444}
        {x=1261,m=2375,a=234,s=1565}
        {x=303,m=464,a=645,s=923}
        {x=2077,m=287,a=740,s=1523}
        {x=1813,m=370,a=1529,s=111}
        {x=861,m=2269,a=1182,s=2074}
        {x=111,m=1145,a=543,s=326}
        {x=504,m=468,a=2391,s=990}
        {x=1701,m=1719,a=2574,s=331}
        {x=1123,m=70,a=754,s=2870}
        {x=6,m=1068,a=1404,s=2472}
        {x=991,m=1306,a=767,s=2885}
        {x=50,m=980,a=947,s=856}
        {x=1450,m=580,a=869,s=229}
        {x=684,m=486,a=1191,s=2639}
        {x=100,m=1569,a=66,s=644}
        {x=1756,m=138,a=1347,s=3488}
        {x=1403,m=562,a=726,s=619}
        {x=601,m=2128,a=43,s=953}
        {x=40,m=160,a=73,s=161}
        {x=556,m=2694,a=792,s=22}
        {x=505,m=1755,a=2185,s=391}
        {x=2545,m=3215,a=850,s=430}
        {x=1256,m=153,a=112,s=1132}
        {x=2016,m=2104,a=408,s=2138}
        {x=238,m=1081,a=645,s=882}
        {x=1735,m=620,a=52,s=34}
        {x=39,m=125,a=655,s=269}
        {x=233,m=1962,a=601,s=248}
        {x=284,m=2418,a=468,s=17}
        {x=864,m=2542,a=1040,s=399}
        {x=229,m=152,a=753,s=285}
  recorded_at: Sun, 16 Mar 2025 02:36:18 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/20_pulse_propagation.rb?token=ACG6TJ75F7E6DMMNAUJ5WYTH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '886'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"b8c5f58230a23c1ed3d57fa0e993294251d08a00f88f617e0e4d9d0d7a8a0b6a"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 9A23:AFB4B:2FDEB8:3DCE5F:67D6391F
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:18 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200162-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092578.249580,VS0,VE313
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - c4ea8c06aa5178f4c4e55409df1eaa20028199a8
      expires:
      - Sun, 16 Mar 2025 02:41:18 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        M, S, T = {}, {}, {}

        DATA.each {
          name, targets = _1.chomp.split(" -> ")
          type = name[0].to_sym
          name = name["broadcaster"] ? name : name[1..]

          M[name] = type
          T[name] = targets.split(", ")
          S[name] = type == :& ? {} : false
        }

        T.each { |src, targets|
          targets.each { M[_1] == :& && S[_1][src] = false }
        }

        rx_src = T.find { _2.include? "rx" }[0]
        H = S[rx_src].keys.to_h { [_1, nil] }

        P = { true => 0, false => 0 }

        1.step { |pushes|
          q = [["button", false, "broadcaster"]]

          p P[true] * P[false] if pushes == 1000

          while c = q.shift
            src, pulse, dst = c

            P[pulse] += 1

            H[dst] ||= pushes if H.has_key?(dst) && !pulse
            (p H.values.reduce &:lcm; exit) if H.values.all?

            case M[dst]
            when :b
              T[dst].each { q << [dst, pulse, _1] }
            when :%
              next if pulse
              S[dst] = !S[dst]
              T[dst].each { q << [dst, S[dst], _1] }
            when :&
              S[dst][src] = pulse
              pulse = !S[dst].values.all?
              T[dst].each { q << [dst, pulse, _1] }
            end
          end
        }

        __END__
        %cf -> tz
        %kr -> xn, gq
        %cp -> sq, bd
        broadcaster -> vn, sj, tg, kn
        %hc -> pm
        %fd -> xn, mj
        %qz -> xf
        %vf -> mc, pm
        %zm -> rz, pm
        %cn -> bd, qz
        %jj -> bp
        %ks -> ff
        %nb -> xn, ks
        %bm -> pm, vf
        &xn -> kc, jb, cb, tg, ks, tx
        %lm -> rk
        %dn -> bd, cn
        %ft -> dn
        %pn -> pm, ll
        %rk -> bp, fs
        %tz -> bp, gp
        %mc -> jx
        %fs -> kx
        %jf -> bd, fm
        %rz -> hc, pm
        %tg -> cb, xn
        &hf -> rx
        %vp -> pn
        &pm -> ll, mc, sj, vd, vp
        %rn -> kc, xn
        %vn -> bd, cp
        &nd -> hf
        %fm -> bd, gc
        %ff -> xn, fd
        &bp -> cf, fh, pc, kn, fs, gn, lm
        &pc -> hf
        %mj -> xn
        %qg -> bd
        %fh -> lm
        %kc -> nb
        %xf -> bd, jf
        %gc -> qg, bd
        &bd -> vn, sq, qz, ft, nd
        %jb -> kr
        %gp -> bp, rp
        %gq -> xn, rn
        %sj -> pm, bm
        %rp -> bp, jj
        %sq -> ft
        %cb -> jb
        &vd -> hf
        %gn -> cf
        %kx -> gn, bp
        %ll -> zm
        &tx -> hf
        %jx -> md, pm
        %md -> pm, vp
        %kn -> fh, bp
  recorded_at: Sun, 16 Mar 2025 02:36:18 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/21_step_counter.rb?token=ACG6TJYL6KQQJGANHZKTGELH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '2480'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"93a1a9d6c199dabac77fb7ca693b3bb73e7aec368df8233fbede10a2c6bd8938"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 5E98:322B1B:3DB7E1:4EE662:67D63922
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:19 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kjyo7100100-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092579.761185,VS0,VE304
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - a7065fd0c08ed4208395e49e0b89d6c6f139483f
      expires:
      - Sun, 16 Mar 2025 02:41:19 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        M = DATA.map &:chomp
        Y, X = M.size, M[0].size
        N = [[-1, 0], [0, -1], [0, 1], [1, 0]]

        M.each_with_index { |l, y|
          l.each_char.with_index { |c, x|
            S = [y, x] if c[?S]
          }
        }

        t, x0 = 26_501_365.divmod X
        x1 = x0 + X
        x2 = x1 + X

        q = [S]
        s = Set.new
        r = Array.new(x2 + 1, 0)

        (1..x2).each { |d|
          q = q.flat_map { |y, x|
            N.filter_map { |dy, dx|
              n = ny = y + dy, nx = x + dx
              s.add?(n) && !M[ny % Y][nx % X][?#] && n
            }
          }
          r[d] = q.size + r[d - 2]
        }

        p r[64]

        y0, y1, y2 = r[x0], r[x1], r[x2]

        vel = y1 - y0
        acc = y2 - 2 * y1 + y0

        p y0 + (vel * t) + (acc * t * (t - 1) / 2)

        __END__
        ...................................................................................................................................
        ...................#.....#.....#.#.............#.#......#.......................#......#.......#......#...#...#.##..........##.....
        ......#......#.....#....#........#...............#..........................#................#...........#...#......#.....#.##.#...
        ..#.........#......#........##..##.#............#.#.#.#...................##....#......#.#............#...........#................
        .#...............#....###.#....#...........#........##..............................#...............##.............#....#..........
        ............#.............##..#.#.....#..........#...#....................###...#.......#...........#.......##.#.........#.........
        .................#..........#..#..#.....##..#........#..........#............#...##.#..............#.....#.........#....#..#.......
        ...#.......#..........#..#......###............#...#.#......................#.....#........###.#.............#..#....#..........#..
        .................#...#........................................................#.#..................##...#.#.#....#...##..........#.
        ....#..........#...##...#...........#...........#................................#..#.............#.#...........#....#........#....
        .....#....##...#........#......#.#..............#..........#......#..............#.......#...................#.......#...##..#...#.
        ......#...#.#....#...............#............#.....................#................#...###.#...#..........#.##...#...............
        .....##..#............#..#.........#..#....#...............#..............................#.#.......................#............#.
        .........##.....#.....#.........#.....#....#...............#.##.#....................#........................#..#..#...........#..
        ......#.##.............#......#.##.............................#......#..#..........#....#.#.......#...#.#...#.......#.#........#..
        ...................#..........#...........#.................#......#.......#..................#.....#...........#.#...#............
        .....#.........##........#.........#.#.#.##..............#....#..........##.............###.##.....#......##.##.#...............#..
        .#..#.....#...#..#......#..........................................#..........................#.....#......#.......................
        .....#.#....#..........#............#.....##.................#................................#.##..#...........#............#.....
        ............#.......#...#.#......#.............................#...............................#..........#................#.....#.
        .......#.....##..........##.#.........#...............................#......#.#..........................#......#......##.....#...
        ......#.#.......#..#..#..#............................##.#....##..........#...............#.......#.............##.....##..........
        ................#..#.........#.....#...........#...##.#.....#.......#......#...............#..#......##........#...#.#.............
        .#............#..#.#.#....#....#.............................#.........#...........#................#....#...#....#...#.#...#......
        .................#......#......##..............#.........#........#.........#...#....#............#.#..#...................#..##...
        ........#..........#..........................##..#....#...............................................#......#...........##..#....
        ........#.#.#..........#...#....................#....#..#....#.........#...#..#.................#......#..##......#..........#.....
        ...............#..................#.................................#..#....#..#..#...................#.......#............#.......
        .#.#..............#......#.............................................#..............##....................#...........#......#.#.
        .#.........#.....#............#...............#...........#.......#......#........................#...#..................#.........
        ......#.........#....#.....................#.#..................#....#....#.....###..#.#.............#..#..........................
        ...#....#................................#.....#.#...........#.................#.................................#.......#.....#.#.
        ...#...#..##...........#..............#....................#.........#.#....#....##..................#....#...#....................
        ......#..........#........#...........................##........#.#.....#.....#.......#...............#.......#....................
        .......#..........##..#.#..........................#.#........#.#...........#...........#....#.........#..................#.#......
        ....................#....................#.........#...#......#.......#.......##...................................................
        ..........#............#..........#........#...........#......................#..........................##.#..#.........#...#.....
        ......#.....#.....................#.##.........#...#............#.#...........#...#.#............#.........##......#..........#....
        .....#..........#.....#..............#.......#..##...........#.............#..#....#...#.......................##...........##...#.
        .#..........#...#....................#...#......#..#.................#........#..........#...#...#..#.........#.........#....#.....
        ......#......#.....................#.......#.....#.........................##............#.#..##.................#...#...###.......
        .......#.......#...................#..........#...#.....#......................#......##.....#.................#.............#.....
        ......#.....#..#..................#............................#....#.#..#..##.....................................................
        .....#..#....#..#.#...............#......#.............#..#...........#.....#....#..#......#.#.....................##.#............
        ....#.......#..#.........#........#....#.#..................##......#..........#........................#.............#.....#......
        .#.....#......#........................#..#..............................#..........#.......#.......##...#...........#.............
        ...........................#.........#....##.....#.#....#...###...######...#.#......#...............#..........................##..
        ..#......#................#.#......#.#.............#..#......#....#..#..#..#.........................##.........................#..
        ...#........#.........#.##..............................##.#....#.......#.......#.......................#.#.#...............#....#.
        .......#..#.......................#..............#..........................#.#.....#.....#............#..............#..#.#.....#.
        ..#.........................##......................#.........#.#.#.#........#.................#.....#..#.#........................
        ..................#.......#.................#.#...................#.......#.#...........#......##...........................#......
        .......................#.#.....##...#.#.....#...#...#.##...#.............#.....................##.##...............................
        ..#...............#.....#......#.....###.......................#............#.............#.#.....#.#.#............................
        .......#...................#......#...#....................#.#...............#..........................#..#................#..#...
        ...........................#..........##..#..........#................................#..##..#.......##....#....#...........#......
        ...##.............#...##.....#.......#...............#.....###..#.........#.............#....#........#...#.....#.#................
        .#...................#...##...........#............##........................#....#....#.....#........#......#...................#.
        ..............#.#..........#................................#...........#..#..............##..##...#.......#.......#..#..........#.
        ...............#........#........#..............#....#.........#.......#..........#.......#.#............#......#.#...#.........#..
        .........#.......###...#.#...#..................#..#.......#...##...#.....##............#..#.......#...............................
        ............#......#.......................#..........#...#........#.#.......#....................#......#......#....#....#........
        .........##.....#.......................................#...........#........................#.........#...........................
        ..........##.........#.....#.......#.................##..#.#......##...............#....#...#..#..#...##..#.##.#.....#.#.#.........
        .......................#..............#......##.#.#.#...................##....##........#....#.....................#...............
        .................................................................S.................................................................
        .....#............#................#..###............#..##....#.#......#...........#..........#...#................................
        ...........#.......#...#.........#....#........#..#................#.........#.#......................#....#....#.........#.#......
        ................#..#........................#..#................#......#..#.......#...........##...#...............#...............
        ............#....#...#.....#.##.............#.#..............#.#...#........#...........#..#...##.........................#........
        .#.........##.#..#...#.....#.#....##.#.#.....#.................#...#.........................#............#.#.#....#...............
        .#...........#.#..........#......................#...#......##............#....................#......##.......#........#..........
        ..#......................#.#.............#..#.........................#........##.#.#...#..#.#...................#.................
        .........................................#.#...#.#............#.............#...........#.#..#.#.#.......#.#.....#..#..............
        ....#........................#........#...#...........#..#..................##.#.#...........#....#.#......#...................#.#.
        ......#..........#.......##....#..........#.....#.............#.#......#..........#....#...........#.......#.......#...........#...
        ...#............#........#..#...........#........#..###.....#..#..........#...........#.........#.........#...##.###............##.
        .......#........#....#.#.#.........#..#...............#..#........#.......#.................#.......#...#........#..............#..
        .......................#............#.....#......#............#....#.....#.#..#..........#.......#...#........#..........#.........
        ...#..............#...................#.....#.........#....#.........#.......#.#.............##........#....#...#..................
        ..........#..........#......#.............#....................#..#.......#.#.#....##...#.#................................#.......
        ..#...........................#.......................................#....#..........#....................#................#....#.
        ......................#.#...............#.......#.........#....##.................#......#..........#....................##......#.
        .........#...#............#...............##.....#......#..#........#.....#...#............#....................................#..
        ......##..#.#...........#..#...........###.....#........................##.....................#........#..........................
        ............#...............#....#..#..............#.................#......#.#..#..........#..................................#...
        .............#.##...................................#.........##...#.....................................#.................#.#...#.
        .#...........................#............#............#.####..........................#.#...#.#.....#...........#.................
        .....#...........#.#.................#....#....#....##.#.....#.....#...#............##...#.#....................#.#.#..#..#..#.....
        ........#.#..#..#...........#.........#..#.....#.##.#........#......................#........#.....##...........#......#...........
        ............#..#................#......#.#.#............#...#...........#....#..#..............................................#.#.
        ......#...#............................................................#...#................#.##............#.....#....#.......#...
        ..#..........#...#.....................#............#........#.......#.##....#...#.............#........................##......#..
        ..#....#.#..........................#.#......#.......#..........#......#..........#......#.....#...............#.##.....#...#......
        .................#......##........#....................#..#.......#........#.......#.#.....................#...................#...
        ....####..............##...........#.........#....#......#.....................#.#...#.....#.#...............#.#...................
        ......#.....#.............................#.........#..#..#.....#.#............##......##..#............#..#....#......#...#...###.
        .#........#............#...#..............#..............##....#......#...#.#.#.........#..#.#........#...........#...##....#......
        .......#......#..#.....#.....................#....#..#..............#...............#....................#....#...##..#.......#.##.
        ........#.........#....###...#...........#..........#..........#....#....#...........#......#...........#...#..........#.......#...
        ....#...........#.......#...##.........#...#...#...#......#..............#......................................#.......##....##...
        .....##..#..........#..#...#.................##.........................#..#............................#......#.#..............#..
        .#.#.##...............#.........#...............................#..#....##.#......#...#..#.............#................#..........
        .....................#....#.....#............#..#.#.....#...........#......#..........................#................###...#.....
        .#.......#..#.....................##..........#.............................##......#.................#...............#.....#.##...
        ..#..............#...#.#........................#..#..................##.......#..............##.#..................##.............
        ............#..........#.................................................#......#..#.#.........#...#....................#....#.....
        .......#.................#.....................#.....#..##....................#.........................#........#...#....#.##.....
        .#..............###.....#.........#...................#....#............#..#.................#......##....##.#.#.........#.........
        ..................#.#.................................#.......##..#..#.#..#.#.#.........................#...#..........#...#.......
        .......##...#...##...#.............................................#...#.........................#..........##.....###...#.....#...
        .......#........#..#...#....#..........#.#........#........#......#..#...................#........#.#....##.#......#.#.........#...
        ..#....#..........#.#..#...........#.....................#..#...#.#...#..#..#..............#......#..#.......#..##..#..............
        ..........#.........#...##..........#...#..........................#.........................#.................#.....#.....#.....#.
        ............#......#..#...............#.....#..................#.......#....................#...#....#...#......#........#...#.....
        .##........................#....##.#....................#.....#...........#...........#...#........#...#..........#..#......#......
        ...#....................#...............#...............................#....................................#....#.#..........#...
        ......................#.............##....#.............#....#..#.#.......#............##............#.#.##.........#......#...#...
        ..#..#..........#.##.........#......##...#......................#...................#.................#..................##........
        .........#............##.#....#......#....##.#.#..........#.......#...#.............#........................#..........#..........
        .....#..#............#..............#..#..............................#................#.....#...........................#.#.#.....
        ........#..#.##...#..#..##.#....#..........##.................##..#...............#.#....#..........#.........##..##...............
        ..........#..........#....#..#.............#.................#.....#..............#...........##......##...........................
        .#....##...#...........#.................##....................................#..#..........................#...........#.........
        .............................#............#..#......#...........................##..............#.#...#............#.......##.#....
        ....#...........#..##....##.#......##.....##........#..##.................#.........................#.......##.#.#...#...#.........
        ..........#...#............#....#....#..##.....#.........#........................#..............#.......................#.....#...
        ..#.....#....#...#..##.#..........#.#.....#...............#..............#.##..#...#..........#.....#.#.........##.##.....#......#.
        ......#....#.........#............#.....................##................#..#.............#..............#....#.............#.....
        .......#...........#......#........#.............#...#......#................#.#.#........#.....#.#.#....#.######......#...........
        ...................................................................................................................................
  recorded_at: Sun, 16 Mar 2025 02:36:19 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/22_sand_slabs.rb?token=ACG6TJ5LJLZ7CGVMFUFXOG3H2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '7708'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"4982f97c710ba424d612391c2afbeadf7b8508fdad65af29c2372f44e8d63384"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - EA2F:3041E0:418DA4:52BCCC:67D63922
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:19 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200026-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092579.261030,VS0,VE326
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 9a29bb217e757677221bbbb7c7cc644860abf577
      expires:
      - Sun, 16 Mar 2025 02:41:19 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        bricks = DATA.map { _1.scan(/\d+/).map &:to_i }.sort_by { _1[2] }

        def all(x1, y1, z1, x2, y2, z2) = [*x1..x2].product([*y1..y2], [*z1..z2])

        grid = bricks.flat_map { |b| all(*b).map { |x, y, z| [[x, y, z], b] } }.to_h

        bricks.each { |b|
          while b[2] > 1
            points = all(*b)
            break if points.any? { |x, y, z| grid[[x, y, z - 1]] && grid[[x, y, z - 1]] != b }
            points.each { |x, y, z| grid.delete([x, y, z]); grid[[x, y, z - 1]] = b }
            b[2] -= 1
            b[5] -= 1
          end
        }

        above = bricks.to_h { |b| [b, all(*b).map { |x, y, z| grid[[x, y, z + 1]] if grid[[x, y, z + 1]] && grid[[x, y, z + 1]] != b }.compact.to_set] }
        below = bricks.to_h { |b| [b, all(*b).map { |x, y, z| grid[[x, y, z - 1]] if grid[[x, y, z - 1]] && grid[[x, y, z - 1]] != b }.compact.to_set] }

        p bricks.count { |b| above[b].all? { below[_1].size > 1 } }

        p bricks.sum { |b|
          fallen = [b].to_set
          q = above[b].to_a

          while c = q.shift
            below[c].all? { fallen.include?(_1) } && fallen.add?(c) && q += above[c].to_a
          end

          fallen.size - 1
        }

        __END__
        4,4,141~6,4,141
        5,2,15~5,3,15
        7,9,173~9,9,173
        1,0,234~1,1,234
        6,8,38~8,8,38
        0,9,92~2,9,92
        8,7,244~8,7,244
        5,2,240~8,2,240
        5,1,298~5,3,298
        6,4,203~6,7,203
        4,4,230~4,6,230
        7,7,238~7,9,238
        1,7,43~1,9,43
        1,2,198~3,2,198
        6,7,31~6,9,31
        2,5,200~2,8,200
        0,3,240~2,3,240
        4,6,213~4,8,213
        3,4,10~3,4,12
        5,9,169~5,9,171
        7,5,145~7,7,145
        1,5,71~1,5,73
        9,1,156~9,2,156
        6,4,123~9,4,123
        3,4,272~3,6,272
        5,5,89~5,8,89
        7,6,240~7,6,241
        7,5,96~7,5,99
        7,5,210~7,7,210
        1,2,152~1,2,153
        2,9,95~3,9,95
        5,0,81~6,0,81
        4,0,11~5,0,11
        5,2,10~8,2,10
        3,3,85~5,3,85
        2,4,149~2,6,149
        3,2,90~6,2,90
        6,0,53~6,0,54
        5,0,289~5,2,289
        0,3,137~0,5,137
        1,5,261~1,6,261
        7,3,37~7,4,37
        5,7,166~5,8,166
        4,4,198~4,6,198
        9,2,27~9,6,27
        6,4,12~7,4,12
        8,9,265~9,9,265
        3,1,90~6,1,90
        2,4,5~4,4,5
        5,0,233~5,4,233
        8,2,42~8,2,44
        1,5,50~1,7,50
        9,1,122~9,3,122
        2,1,200~2,3,200
        1,2,93~3,2,93
        6,9,271~9,9,271
        1,5,84~1,5,86
        5,8,85~7,8,85
        6,8,158~8,8,158
        6,1,201~6,3,201
        7,7,6~8,7,6
        0,3,129~0,6,129
        8,0,133~8,2,133
        9,2,217~9,3,217
        1,1,43~2,1,43
        5,9,194~8,9,194
        6,7,206~9,7,206
        4,6,278~5,6,278
        4,5,281~6,5,281
        3,3,49~3,5,49
        2,4,58~2,7,58
        1,0,74~1,2,74
        4,3,195~4,5,195
        4,7,44~4,7,46
        9,5,74~9,7,74
        2,6,70~4,6,70
        0,5,2~0,7,2
        0,3,10~0,5,10
        8,4,208~8,5,208
        6,8,195~6,8,197
        0,1,232~1,1,232
        1,6,105~4,6,105
        0,2,2~0,4,2
        6,1,222~6,3,222
        2,3,250~3,3,250
        5,5,31~5,6,31
        9,6,213~9,7,213
        4,3,80~4,5,80
        0,9,136~0,9,138
        1,4,145~3,4,145
        4,6,158~4,8,158
        3,4,251~3,6,251
        1,2,29~4,2,29
        4,7,81~4,7,81
        7,7,34~7,9,34
        0,0,193~1,0,193
        7,0,126~7,2,126
        9,4,77~9,5,77
        3,0,227~3,1,227
        4,5,14~4,5,15
        1,5,120~1,8,120
        8,0,57~8,0,57
        2,6,248~3,6,248
        2,6,209~4,6,209
        4,2,65~6,2,65
        6,4,300~7,4,300
        3,2,130~5,2,130
        2,8,181~4,8,181
        5,2,18~8,2,18
        3,1,195~3,4,195
        0,2,215~0,6,215
        2,6,113~2,6,113
        5,0,281~5,2,281
        2,9,49~5,9,49
        0,3,272~2,3,272
        5,3,220~5,6,220
        0,5,223~0,8,223
        6,7,190~6,9,190
        3,8,24~5,8,24
        3,5,245~3,8,245
        3,9,163~6,9,163
        2,0,276~2,2,276
        0,3,242~2,3,242
        0,6,43~0,8,43
        8,4,258~8,6,258
        6,8,172~8,8,172
        6,6,185~6,9,185
        3,4,197~4,4,197
        0,8,204~3,8,204
        4,8,110~6,8,110
        4,2,292~7,2,292
        9,0,201~9,1,201
        5,3,18~5,3,21
        5,7,9~6,7,9
        7,6,3~9,6,3
        0,1,9~3,1,9
        0,6,229~0,9,229
        3,2,248~3,3,248
        0,4,189~0,5,189
        4,2,138~4,2,139
        4,9,216~6,9,216
        6,2,51~6,5,51
        3,7,3~3,7,5
        6,4,183~6,6,183
        3,4,211~3,5,211
        0,9,164~3,9,164
        7,2,183~7,2,185
        9,1,49~9,3,49
        7,1,101~7,4,101
        6,2,146~7,2,146
        8,4,83~8,6,83
        1,4,83~1,7,83
        5,3,296~7,3,296
        3,2,262~6,2,262
        5,5,2~5,6,2
        4,5,124~4,7,124
        7,5,56~7,5,57
        4,2,198~6,2,198
        9,5,151~9,8,151
        5,1,18~6,1,18
        0,3,130~0,3,133
        1,3,290~3,3,290
        5,0,129~5,3,129
        6,8,263~8,8,263
        2,0,66~2,0,66
        9,2,219~9,4,219
        8,1,41~8,3,41
        4,8,219~6,8,219
        0,3,139~0,6,139
        8,3,266~8,6,266
        7,0,52~8,0,52
        0,5,121~3,5,121
        7,6,91~7,8,91
        2,5,66~2,7,66
        4,3,138~7,3,138
        1,6,139~4,6,139
        6,1,294~6,4,294
        0,6,218~0,6,219
        6,0,48~6,3,48
        1,3,238~1,6,238
        7,5,149~9,5,149
        6,0,200~6,2,200
        2,7,19~2,9,19
        3,3,238~3,3,240
        5,7,178~5,9,178
        5,4,180~5,4,180
        6,6,109~8,6,109
        4,5,183~4,7,183
        3,0,4~3,1,4
        6,9,174~7,9,174
        5,6,215~7,6,215
        4,7,253~4,7,255
        1,4,3~1,4,5
        0,7,209~2,7,209
        2,4,183~4,4,183
        3,8,227~3,9,227
        8,9,175~8,9,175
        3,2,118~5,2,118
        7,1,245~9,1,245
        1,1,111~2,1,111
        2,1,274~6,1,274
        6,7,161~6,9,161
        4,1,275~7,1,275
        8,6,178~8,8,178
        5,8,278~8,8,278
        9,5,3~9,5,5
        8,1,280~9,1,280
        0,0,42~0,2,42
        7,1,72~7,4,72
        0,4,37~0,6,37
        3,7,57~3,8,57
        9,5,94~9,5,94
        1,0,190~3,0,190
        0,2,76~1,2,76
        4,1,131~4,3,131
        6,0,178~9,0,178
        3,4,81~3,5,81
        8,2,287~9,2,287
        8,7,218~8,9,218
        5,1,244~5,3,244
        7,4,270~7,5,270
        1,0,54~4,0,54
        8,2,259~9,2,259
        7,5,147~7,7,147
        8,6,11~9,6,11
        2,9,79~4,9,79
        4,4,118~4,6,118
        6,8,166~9,8,166
        7,8,93~9,8,93
        0,3,42~1,3,42
        3,8,248~3,8,251
        9,2,257~9,5,257
        8,1,291~8,3,291
        5,0,50~7,0,50
        2,1,17~2,4,17
        1,4,63~3,4,63
        9,5,14~9,7,14
        2,0,77~4,0,77
        5,4,98~5,4,98
        4,8,275~7,8,275
        9,6,12~9,8,12
        3,2,92~4,2,92
        4,5,7~4,6,7
        6,5,238~8,5,238
        4,9,195~6,9,195
        2,4,31~2,6,31
        2,3,87~3,3,87
        0,7,198~0,7,201
        5,4,278~8,4,278
        1,2,202~1,2,205
        3,3,192~6,3,192
        2,2,266~5,2,266
        6,1,44~8,1,44
        4,3,35~5,3,35
        1,9,125~3,9,125
        5,6,23~5,8,23
        6,3,242~8,3,242
        6,6,277~9,6,277
        8,4,201~8,4,205
        0,6,179~0,9,179
        1,3,269~1,5,269
        7,9,191~8,9,191
        0,9,23~3,9,23
        5,6,269~5,8,269
        6,1,50~6,3,50
        5,4,57~5,5,57
        2,7,47~2,8,47
        6,0,258~8,0,258
        5,2,132~5,4,132
        1,6,5~1,8,5
        2,0,74~5,0,74
        3,7,65~5,7,65
        4,5,274~4,6,274
        8,1,96~8,3,96
        2,5,1~2,6,1
        5,5,124~5,7,124
        3,3,163~5,3,163
        2,8,216~4,8,216
        7,3,154~9,3,154
        2,1,69~4,1,69
        3,6,8~3,9,8
        4,5,76~4,8,76
        0,0,196~0,0,196
        2,8,62~4,8,62
        3,4,249~6,4,249
        7,6,33~7,9,33
        4,5,194~4,7,194
        1,6,246~3,6,246
        2,4,32~5,4,32
        7,3,211~7,5,211
        0,8,134~2,8,134
        4,6,21~6,6,21
        6,6,193~6,8,193
        6,2,247~9,2,247
        3,9,270~5,9,270
        1,3,165~3,3,165
        2,7,11~4,7,11
        7,5,82~7,7,82
        2,6,88~5,6,88
        4,0,78~7,0,78
        6,7,3~6,8,3
        1,7,179~1,9,179
        2,6,174~2,8,174
        9,4,81~9,6,81
        3,3,198~5,3,198
        2,0,189~2,1,189
        3,1,224~3,3,224
        6,8,62~7,8,62
        7,6,29~9,6,29
        4,1,236~7,1,236
        9,0,2~9,2,2
        2,0,37~2,2,37
        2,8,50~4,8,50
        4,5,95~4,7,95
        8,0,173~8,1,173
        6,1,276~6,2,276
        7,0,241~7,1,241
        5,1,206~7,1,206
        0,0,194~2,0,194
        1,1,191~2,1,191
        7,4,141~7,5,141
        0,9,181~1,9,181
        3,2,37~3,5,37
        9,0,68~9,2,68
        4,7,271~7,7,271
        5,5,171~8,5,171
        2,2,225~3,2,225
        7,2,256~7,4,256
        2,8,152~4,8,152
        0,4,188~2,4,188
        8,4,94~8,6,94
        4,1,93~5,1,93
        2,2,272~3,2,272
        7,0,295~7,2,295
        2,8,163~3,8,163
        9,7,76~9,7,76
        4,6,40~4,9,40
        4,5,75~4,6,75
        3,9,51~6,9,51
        6,2,59~9,2,59
        7,3,214~7,5,214
        8,4,40~8,7,40
        9,1,70~9,3,70
        8,1,217~9,1,217
        4,8,163~6,8,163
        4,4,201~5,4,201
        1,8,66~1,9,66
        5,1,52~6,1,52
        6,3,36~7,3,36
        2,2,186~2,4,186
        2,4,90~5,4,90
        4,3,62~7,3,62
        0,7,71~2,7,71
        0,5,277~2,5,277
        2,9,133~4,9,133
        3,7,278~3,8,278
        0,2,151~1,2,151
        7,2,281~9,2,281
        5,4,174~5,6,174
        7,5,4~7,6,4
        0,6,261~0,8,261
        3,3,76~3,5,76
        2,4,232~2,7,232
        2,2,204~2,2,206
        9,6,83~9,6,86
        8,0,3~9,0,3
        5,3,131~7,3,131
        5,6,177~8,6,177
        4,8,20~5,8,20
        0,9,132~2,9,132
        1,0,57~2,0,57
        1,4,131~1,6,131
        2,1,46~2,2,46
        7,0,255~7,2,255
        4,8,209~4,9,209
        2,0,79~2,2,79
        0,3,256~0,6,256
        5,0,291~5,0,293
        4,2,267~5,2,267
        2,1,114~2,1,116
        1,1,40~4,1,40
        7,5,267~7,6,267
        4,6,182~6,6,182
        2,8,15~4,8,15
        6,5,158~8,5,158
        6,4,267~6,6,267
        0,3,273~4,3,273
        2,0,32~2,2,32
        0,3,70~0,3,71
        4,2,263~4,3,263
        2,3,113~2,3,115
        7,4,89~7,4,89
        2,6,130~4,6,130
        8,1,4~9,1,4
        8,3,50~8,5,50
        2,5,71~5,5,71
        3,9,48~5,9,48
        0,6,106~0,8,106
        6,4,140~6,6,140
        5,6,82~5,9,82
        9,8,14~9,9,14
        2,5,176~4,5,176
        8,2,74~8,5,74
        1,7,270~2,7,270
        5,7,90~6,7,90
        1,4,209~2,4,209
        5,3,184~7,3,184
        3,5,191~6,5,191
        1,7,22~3,7,22
        9,7,211~9,9,211
        7,4,237~7,7,237
        2,7,55~3,7,55
        2,4,140~2,6,140
        7,3,148~7,5,148
        5,5,154~7,5,154
        1,5,239~4,5,239
        2,3,2~4,3,2
        2,1,97~5,1,97
        4,3,234~4,6,234
        5,4,223~5,4,225
        5,6,26~5,7,26
        0,4,81~1,4,81
        8,5,145~8,8,145
        4,5,251~4,7,251
        0,2,85~0,3,85
        2,2,80~2,2,83
        4,0,32~4,3,32
        3,1,269~3,2,269
        6,7,34~6,9,34
        5,3,302~7,3,302
        8,1,244~9,1,244
        4,3,267~4,5,267
        5,0,13~5,1,13
        3,7,265~3,7,267
        7,8,154~9,8,154
        5,5,289~7,5,289
        0,1,234~0,2,234
        6,9,88~9,9,88
        3,0,3~3,1,3
        9,4,72~9,6,72
        1,3,13~2,3,13
        1,8,202~2,8,202
        2,7,14~2,8,14
        8,8,34~8,8,37
        5,9,222~5,9,222
        8,3,127~9,3,127
        6,5,162~6,7,162
        4,5,150~7,5,150
        1,9,235~2,9,235
        6,1,221~7,1,221
        4,7,156~4,7,157
        6,8,37~7,8,37
        4,7,78~4,9,78
        0,3,68~0,5,68
        0,7,5~0,7,7
        1,7,198~4,7,198
        0,9,135~2,9,135
        2,6,85~5,6,85
        5,0,247~5,1,247
        3,7,167~5,7,167
        9,0,9~9,0,11
        0,4,66~0,6,66
        9,2,30~9,4,30
        8,5,174~8,5,177
        3,7,60~4,7,60
        0,4,70~2,4,70
        6,7,65~9,7,65
        5,7,5~8,7,5
        4,3,211~4,6,211
        0,7,1~0,9,1
        2,8,69~3,8,69
        0,6,249~1,6,249
        6,9,188~8,9,188
        0,9,24~0,9,27
        4,6,212~6,6,212
        2,4,1~2,4,3
        3,4,47~3,6,47
        4,7,21~4,9,21
        1,2,134~4,2,134
        0,6,210~3,6,210
        3,1,133~5,1,133
        3,5,178~3,7,178
        3,3,121~6,3,121
        2,5,128~2,7,128
        9,4,141~9,6,141
        5,2,116~5,4,116
        9,4,16~9,4,18
        6,3,168~6,5,168
        4,5,147~4,7,147
        0,6,124~1,6,124
        1,0,155~1,2,155
        5,5,251~5,5,254
        9,1,85~9,4,85
        9,0,71~9,0,74
        3,7,195~4,7,195
        2,7,6~4,7,6
        2,1,16~2,3,16
        1,2,60~3,2,60
        1,1,51~2,1,51
        0,0,81~2,0,81
        1,0,208~1,2,208
        1,3,271~1,4,271
        4,7,28~7,7,28
        5,9,263~5,9,264
        4,3,269~4,3,269
        0,7,210~2,7,210
        5,4,44~5,5,44
        3,9,85~5,9,85
        7,4,90~7,6,90
        7,0,7~9,0,7
        6,1,62~8,1,62
        5,6,276~5,7,276
        4,1,218~7,1,218
        8,6,21~9,6,21
        3,5,136~3,8,136
        6,6,231~6,9,231
        3,8,17~5,8,17
        6,3,71~8,3,71
        6,1,279~8,1,279
        3,8,67~5,8,67
        6,1,189~8,1,189
        6,1,167~6,4,167
        6,2,13~8,2,13
        9,5,268~9,8,268
        8,7,85~8,9,85
        4,6,235~7,6,235
        6,7,163~6,7,166
        1,7,204~1,7,207
        6,3,266~6,5,266
        6,3,256~6,6,256
        3,7,61~3,9,61
        0,6,46~0,8,46
        8,6,271~9,6,271
        0,8,168~0,8,169
        7,6,209~7,7,209
        3,9,22~5,9,22
        0,8,90~3,8,90
        4,7,268~4,9,268
        5,3,23~8,3,23
        5,1,1~5,1,3
        6,6,30~8,6,30
        1,6,71~3,6,71
        7,4,28~9,4,28
        7,3,275~7,6,275
        6,7,33~6,9,33
        6,5,265~8,5,265
        1,4,172~1,6,172
        5,2,239~7,2,239
        6,2,251~6,4,251
        4,5,241~4,8,241
        7,7,262~9,7,262
        3,4,281~6,4,281
        1,3,174~1,5,174
        4,4,13~4,7,13
        6,9,269~7,9,269
        4,6,28~6,6,28
        6,9,56~7,9,56
        7,7,149~9,7,149
        0,1,228~3,1,228
        4,7,83~7,7,83
        1,7,68~4,7,68
        1,4,78~3,4,78
        1,1,72~2,1,72
        6,5,196~9,5,196
        4,4,92~4,7,92
        5,7,56~5,9,56
        4,2,96~4,5,96
        1,7,127~1,9,127
        4,0,212~7,0,212
        9,1,66~9,3,66
        0,7,28~0,9,28
        5,1,123~5,3,123
        2,2,41~2,5,41
        4,9,84~7,9,84
        4,1,31~4,3,31
        1,7,113~1,7,115
        2,7,167~2,9,167
        5,3,300~7,3,300
        5,8,60~9,8,60
        0,7,29~0,7,31
        7,9,267~8,9,267
        3,0,56~5,0,56
        5,3,89~7,3,89
        5,5,38~5,8,38
        3,2,203~5,2,203
        1,2,190~1,4,190
        7,4,241~9,4,241
        1,2,264~1,5,264
        8,8,13~9,8,13
        6,4,297~7,4,297
        1,0,50~2,0,50
        0,6,100~0,9,100
        4,1,42~4,1,44
        5,3,260~7,3,260
        4,4,268~4,4,269
        4,1,83~4,4,83
        6,2,176~6,6,176
        9,4,290~9,7,290
        7,0,75~7,1,75
        6,2,93~8,2,93
        6,6,255~8,6,255
        1,6,91~3,6,91
        7,7,211~7,9,211
        2,2,286~2,2,287
        1,2,180~1,2,181
        6,1,259~6,4,259
        7,5,281~8,5,281
        8,3,117~9,3,117
        2,3,230~5,3,230
        0,7,197~3,7,197
        1,3,291~1,5,291
        7,4,17~7,7,17
        4,5,146~6,5,146
        4,0,51~4,2,51
        6,8,66~7,8,66
        3,2,287~5,2,287
        1,2,44~1,3,44
        4,6,108~4,8,108
        5,1,179~8,1,179
        9,0,212~9,3,212
        1,6,203~1,9,203
        1,0,237~1,2,237
        6,1,104~6,3,104
        3,3,222~4,3,222
        6,0,177~6,2,177
        3,8,2~6,8,2
        5,2,213~7,2,213
        4,0,237~4,1,237
        9,5,8~9,5,10
        9,3,69~9,6,69
        8,1,31~8,1,33
        6,2,7~8,2,7
        4,4,143~6,4,143
        1,6,169~4,6,169
        9,0,123~9,1,123
        9,1,258~9,4,258
        2,7,131~2,9,131
        5,4,151~5,7,151
        3,7,128~3,9,128
        0,0,14~0,2,14
        0,4,233~2,4,233
        5,1,74~5,1,75
        7,0,104~7,1,104
        4,1,183~5,1,183
        5,2,64~6,2,64
        2,5,72~2,5,73
        2,1,7~3,1,7
        3,4,52~3,4,54
        8,3,240~8,5,240
        4,1,260~8,1,260
        7,3,156~7,3,159
        7,7,201~8,7,201
        1,4,207~1,5,207
        2,1,184~2,1,186
        1,2,106~4,2,106
        0,6,12~0,8,12
        6,4,17~6,5,17
        8,2,134~8,2,134
        5,4,152~5,4,153
        7,0,282~7,1,282
        3,9,134~5,9,134
        6,1,173~6,3,173
        1,3,92~2,3,92
        5,7,288~6,7,288
        8,1,130~8,1,132
        2,1,289~2,4,289
        7,4,156~7,5,156
        6,1,282~6,3,282
        6,3,164~8,3,164
        8,7,84~8,9,84
        7,4,149~7,4,151
        2,6,35~3,6,35
        9,3,220~9,5,220
        1,4,216~1,6,216
        7,4,264~7,4,266
        4,8,175~6,8,175
        5,2,195~5,4,195
        1,6,16~4,6,16
        5,8,64~7,8,64
        0,8,206~2,8,206
        0,1,193~0,1,193
        3,9,229~5,9,229
        5,2,232~5,3,232
        7,5,93~9,5,93
        6,9,93~8,9,93
        7,5,173~7,6,173
        8,2,249~8,2,251
        0,4,290~2,4,290
        4,2,278~7,2,278
        0,0,84~2,0,84
        3,5,271~3,7,271
        1,1,148~1,4,148
        4,4,154~5,4,154
        8,3,8~8,4,8
        6,3,66~6,3,69
        4,9,8~6,9,8
        1,2,182~1,4,182
        4,2,14~7,2,14
        5,2,33~5,4,33
        0,6,221~3,6,221
        5,2,93~5,4,93
        8,5,241~8,7,241
        8,4,198~8,7,198
        9,5,198~9,6,198
        5,0,209~5,2,209
        2,2,228~4,2,228
        0,6,23~1,6,23
        6,4,88~6,7,88
        9,3,197~9,5,197
        8,1,36~8,3,36
        7,5,79~9,5,79
        1,9,136~1,9,139
        3,3,228~5,3,228
        2,3,61~2,4,61
        8,8,219~9,8,219
        0,4,34~2,4,34
        5,1,216~8,1,216
        2,0,203~4,0,203
        2,5,269~5,5,269
        3,5,258~3,7,258
        3,6,159~5,6,159
        5,5,54~5,6,54
        4,2,9~4,4,9
        6,1,256~7,1,256
        2,7,26~2,9,26
        0,8,166~0,9,166
        2,6,61~3,6,61
        4,5,82~4,8,82
        7,4,215~7,4,215
        2,6,89~2,9,89
        2,5,18~2,6,18
        9,3,276~9,6,276
        6,3,268~6,5,268
        4,1,49~4,3,49
        2,1,49~2,1,50
        7,7,281~9,7,281
        3,9,219~6,9,219
        2,2,284~5,2,284
        1,9,82~4,9,82
        1,4,215~1,5,215
        9,0,198~9,3,198
        3,5,217~3,6,217
        0,2,86~0,4,86
        8,0,107~8,1,107
        2,0,195~2,0,197
        3,0,250~3,0,250
        0,3,253~2,3,253
        3,0,121~5,0,121
        5,1,87~5,3,87
        5,6,41~6,6,41
        9,1,256~9,4,256
        2,5,4~4,5,4
        9,5,273~9,6,273
        5,3,187~5,3,190
        4,7,165~4,9,165
        3,8,205~3,9,205
        2,8,236~2,9,236
        6,7,286~7,7,286
        7,1,243~9,1,243
        8,4,152~8,6,152
        1,5,255~3,5,255
        2,6,68~4,6,68
        3,5,174~3,8,174
        3,3,265~5,3,265
        5,7,284~7,7,284
        2,4,143~2,6,143
        9,1,84~9,4,84
        9,3,13~9,5,13
        4,1,77~4,4,77
        8,0,16~8,2,16
        1,6,65~1,6,66
        7,2,144~7,4,144
        5,4,113~8,4,113
        0,5,11~0,7,11
        5,7,260~5,9,260
        8,3,178~8,5,178
        1,5,5~2,5,5
        5,1,59~6,1,59
        8,6,157~8,9,157
        6,1,213~9,1,213
        1,6,77~1,7,77
        0,9,251~1,9,251
        3,6,53~3,8,53
        0,1,54~0,1,56
        0,1,28~3,1,28
        6,6,18~8,6,18
        2,9,284~5,9,284
        1,0,266~1,2,266
        6,5,279~9,5,279
        5,7,279~9,7,279
        0,4,236~0,4,238
        4,6,186~4,9,186
        9,2,120~9,5,120
        0,0,130~0,2,130
        1,3,79~3,3,79
        3,7,77~3,7,79
        0,6,97~2,6,97
        5,0,16~7,0,16
        0,1,135~0,3,135
        5,4,260~5,4,261
        3,3,98~4,3,98
        3,3,185~3,4,185
        5,8,9~6,8,9
        0,0,48~0,0,50
        4,4,1~4,4,3
        6,4,14~6,6,14
        0,2,127~0,5,127
        6,1,171~8,1,171
        5,0,182~5,2,182
        5,8,90~5,8,92
        2,5,51~2,6,51
        6,9,232~6,9,235
        6,1,45~9,1,45
        9,2,214~9,4,214
        6,8,96~6,9,96
        1,4,150~3,4,150
        6,1,3~6,3,3
        8,3,151~8,6,151
        5,4,175~5,4,178
        7,2,253~7,2,253
        2,4,88~4,4,88
        1,5,274~3,5,274
        3,1,51~3,3,51
        2,3,91~2,5,91
        9,0,265~9,0,267
        8,5,95~8,6,95
        3,4,115~5,4,115
        5,0,120~5,3,120
        9,2,155~9,5,155
        2,2,201~2,5,201
        5,2,79~8,2,79
        1,6,122~1,9,122
        6,4,107~6,6,107
        5,4,259~5,6,259
        3,0,248~5,0,248
        7,3,263~7,6,263
        7,4,36~7,6,36
        8,1,127~8,1,128
        7,4,271~7,4,273
        1,7,110~3,7,110
        4,1,283~6,1,283
        4,6,128~6,6,128
        6,4,179~6,6,179
        6,6,142~8,6,142
        2,8,221~4,8,221
        3,9,283~5,9,283
        0,1,78~0,2,78
        8,5,73~9,5,73
        9,2,97~9,5,97
        6,5,145~6,6,145
        1,0,177~1,3,177
        8,6,256~8,6,257
        0,4,126~0,6,126
        5,6,261~5,7,261
        7,8,266~9,8,266
        4,0,201~4,2,201
        5,4,147~5,7,147
        3,6,119~4,6,119
        5,5,257~5,8,257
        6,7,113~7,7,113
        6,1,257~6,3,257
        2,6,133~2,7,133
        4,6,42~4,9,42
        2,8,43~5,8,43
        0,4,8~1,4,8
        1,4,15~3,4,15
        5,5,53~7,5,53
        5,4,84~8,4,84
        6,7,274~8,7,274
        4,3,171~7,3,171
        6,4,206~6,5,206
        7,5,7~7,8,7
        8,7,8~9,7,8
        7,5,18~8,5,18
        1,8,219~2,8,219
        8,2,284~8,4,284
        0,6,259~0,7,259
        0,0,229~0,1,229
        9,5,158~9,6,158
        7,4,230~7,6,230
        6,2,243~6,2,244
        7,1,20~7,2,20
        5,6,201~6,6,201
        6,0,4~9,0,4
        1,2,77~1,2,77
        2,7,274~3,7,274
        2,6,30~4,6,30
        3,6,142~3,8,142
        6,3,77~8,3,77
        7,4,136~7,6,136
        4,7,150~4,8,150
        1,7,46~1,9,46
        1,1,34~3,1,34
        1,0,83~2,0,83
        0,9,287~3,9,287
        3,4,56~3,6,56
        7,9,192~8,9,192
        2,2,10~2,4,10
        1,7,75~3,7,75
        8,5,290~8,7,290
        3,8,58~3,8,59
        6,5,138~9,5,138
        3,4,34~3,7,34
        5,7,62~7,7,62
        3,4,42~5,4,42
        1,2,199~1,3,199
        0,7,281~2,7,281
        7,4,41~9,4,41
        8,6,31~8,8,31
        6,9,213~8,9,213
        3,2,301~5,2,301
        8,2,209~9,2,209
        0,8,47~0,9,47
        1,0,278~3,0,278
        1,5,61~3,5,61
        9,2,289~9,4,289
        7,0,261~9,0,261
        5,2,98~5,2,100
        0,6,40~1,6,40
        7,4,43~9,4,43
        7,2,123~9,2,123
        8,1,288~8,3,288
        5,6,274~5,9,274
        9,4,172~9,5,172
        3,3,246~5,3,246
        6,2,63~9,2,63
        8,2,85~8,4,85
        7,4,299~8,4,299
        6,7,7~6,9,7
        0,1,11~0,3,11
        4,9,223~5,9,223
        7,8,1~9,8,1
        4,7,111~6,7,111
        6,3,254~9,3,254
        1,8,133~3,8,133
        3,2,2~3,2,3
        5,5,125~7,5,125
        4,0,30~4,2,30
        3,5,254~3,6,254
        7,2,250~7,4,250
        5,3,161~8,3,161
        1,2,15~1,3,15
        3,0,132~5,0,132
        0,6,94~2,6,94
        5,6,228~8,6,228
        6,5,201~8,5,201
        0,7,74~0,9,74
        0,6,64~2,6,64
        0,3,149~0,5,149
        6,4,180~7,4,180
        4,3,179~6,3,179
        2,3,42~2,3,43
        4,5,177~4,5,179
        3,1,26~3,3,26
        1,5,108~1,7,108
        2,4,94~2,4,96
        5,2,53~6,2,53
        7,3,59~7,5,59
        5,6,218~5,6,218
        1,6,274~1,8,274
        2,4,40~3,4,40
        8,6,67~8,7,67
        5,3,66~5,3,68
        5,4,86~7,4,86
        5,6,59~5,8,59
        2,1,109~2,4,109
        2,3,110~2,6,110
        0,5,214~3,5,214
        4,2,75~7,2,75
        3,7,261~3,7,263
        3,4,247~5,4,247
        3,0,30~3,1,30
        1,0,46~1,1,46
        9,0,67~9,1,67
        4,6,272~6,6,272
        8,5,81~8,7,81
        3,5,284~3,8,284
        4,9,54~6,9,54
        4,9,91~6,9,91
        5,1,98~6,1,98
        2,8,16~2,9,16
        0,3,108~1,3,108
        6,0,133~6,3,133
        0,7,177~3,7,177
        1,4,267~1,7,267
        4,5,74~7,5,74
        2,6,37~5,6,37
        7,1,48~9,1,48
        7,3,134~7,4,134
        6,1,169~7,1,169
        8,2,38~8,5,38
        0,2,66~2,2,66
        6,2,61~9,2,61
        6,2,25~6,5,25
        1,5,128~1,8,128
        1,5,141~1,7,141
        4,4,89~4,4,89
        9,6,264~9,9,264
        2,4,180~2,8,180
        8,3,25~9,3,25
        7,1,209~7,3,209
        3,7,19~3,9,19
        8,7,216~8,9,216
        4,8,79~6,8,79
        8,7,180~8,9,180
        6,4,170~9,4,170
        2,7,234~2,9,234
        0,8,65~2,8,65
        6,2,263~6,4,263
        8,2,207~8,4,207
        8,1,124~8,4,124
        8,5,260~8,8,260
        0,6,250~0,9,250
        2,2,112~2,4,112
        3,3,54~5,3,54
        3,4,67~3,4,69
        0,1,192~0,4,192
        6,3,105~6,4,105
        2,6,276~2,8,276
        7,4,202~7,7,202
        4,0,294~4,2,294
        1,2,107~1,4,107
        1,5,100~1,6,100
        9,6,5~9,9,5
        5,5,60~7,5,60
        0,1,52~1,1,52
        7,7,221~9,7,221
        3,8,281~3,9,281
        8,0,28~8,3,28
        6,1,207~6,3,207
        1,3,243~2,3,243
        4,1,293~4,2,293
        3,2,245~4,2,245
        0,3,259~0,4,259
        5,9,166~8,9,166
        3,5,73~3,7,73
        7,2,186~7,4,186
        2,6,168~2,7,168
        3,8,224~6,8,224
        3,2,242~5,2,242
        7,2,96~7,2,99
        4,5,247~6,5,247
        8,3,281~8,4,281
        7,1,203~7,4,203
        5,3,127~5,6,127
        3,1,271~3,1,271
        4,3,244~4,6,244
        8,1,9~8,2,9
        5,9,172~7,9,172
        2,1,181~5,1,181
        5,5,193~6,5,193
        1,8,167~1,9,167
        3,4,48~3,6,48
        1,8,3~4,8,3
        5,4,96~5,6,96
        6,3,33~6,3,35
        1,5,69~3,5,69
        4,5,249~6,5,249
        4,1,16~7,1,16
        6,6,265~8,6,265
        7,4,9~8,4,9
        0,0,47~1,0,47
        6,0,105~8,0,105
        5,0,298~7,0,298
        0,9,286~2,9,286
        8,0,181~8,0,183
        6,7,2~9,7,2
        0,6,103~3,6,103
        6,6,148~6,9,148
        6,6,199~8,6,199
        2,6,171~4,6,171
        5,4,9~6,4,9
        0,2,82~0,5,82
        8,3,3~9,3,3
        2,3,241~2,6,241
        1,7,279~3,7,279
        3,1,70~5,1,70
        8,2,116~8,5,116
        1,5,258~1,6,258
        2,8,207~5,8,207
        4,0,10~4,2,10
        4,7,126~6,7,126
        4,9,45~7,9,45
        6,4,185~6,5,185
        3,1,46~5,1,46
        3,5,21~3,7,21
        6,1,76~6,2,76
        3,3,23~3,5,23
        8,0,263~9,0,263
        1,6,235~3,6,235
        4,6,18~5,6,18
        9,0,51~9,2,51
        3,2,302~3,4,302
        6,5,252~6,8,252
        1,7,91~1,9,91
        6,3,110~6,5,110
        4,3,103~7,3,103
        5,0,61~5,2,61
        2,8,46~2,9,46
        8,2,117~8,2,120
        4,5,226~4,5,228
        5,3,226~5,6,226
        6,8,264~8,8,264
        8,8,269~9,8,269
        5,8,169~6,8,169
        3,7,277~3,9,277
        0,9,180~1,9,180
        7,3,167~7,3,169
        2,6,125~4,6,125
        4,5,121~6,5,121
        2,0,63~2,3,63
        4,3,63~6,3,63
        4,3,223~4,5,223
        6,8,272~8,8,272
        7,7,88~8,7,88
        6,3,49~6,4,49
        3,4,206~3,7,206
        3,7,35~3,7,37
        1,5,273~1,8,273
        5,4,185~5,6,185
        6,1,56~6,3,56
        0,2,43~2,2,43
        3,1,80~3,3,80
        0,6,183~2,6,183
        8,0,186~8,3,186
        5,0,36~5,2,36
        8,8,14~8,8,16
        0,6,185~1,6,185
        7,2,82~8,2,82
        6,0,77~6,1,77
        3,3,236~5,3,236
        1,8,151~4,8,151
        6,5,16~7,5,16
        5,0,96~5,2,96
        4,2,210~6,2,210
        2,4,7~6,4,7
        1,6,18~1,6,20
        5,5,234~5,5,237
        7,7,18~9,7,18
        4,8,267~6,8,267
        0,6,222~0,7,222
        3,4,65~3,5,65
        4,5,153~4,7,153
        8,2,5~8,3,5
        6,1,136~6,4,136
        1,6,49~3,6,49
        5,0,71~5,2,71
        1,0,29~1,1,29
        7,1,182~7,3,182
        2,1,66~3,1,66
        0,9,11~3,9,11
        9,6,208~9,9,208
        3,3,219~3,7,219
        5,5,186~5,5,189
        9,6,88~9,8,88
        3,8,160~5,8,160
        6,6,9~9,6,9
        7,2,6~9,2,6
        6,2,204~8,2,204
        5,8,95~5,8,98
        2,1,208~2,3,208
        2,5,231~5,5,231
        0,7,44~0,7,45
        6,2,32~6,6,32
        4,1,137~4,2,137
        0,1,40~0,4,40
        0,7,226~1,7,226
        3,2,58~3,4,58
        4,7,48~6,7,48
        0,6,76~0,8,76
        3,2,45~3,4,45
        1,4,204~1,6,204
        8,0,55~8,1,55
        1,7,208~1,7,208
        2,7,203~5,7,203
        3,7,244~5,7,244
        7,3,208~8,3,208
        8,2,47~8,3,47
        5,1,294~5,4,294
        1,5,117~1,7,117
        7,1,238~7,2,238
        6,8,81~8,8,81
        1,4,85~3,4,85
        9,6,155~9,8,155
        5,7,128~6,7,128
        7,8,182~9,8,182
        0,4,89~0,4,90
        9,9,90~9,9,92
        2,5,209~3,5,209
        2,1,41~4,1,41
        0,9,9~3,9,9
        2,8,25~4,8,25
        5,7,69~5,8,69
        6,7,287~8,7,287
        1,7,1~2,7,1
        4,1,105~4,4,105
        5,1,215~7,1,215
        0,5,24~0,7,24
        7,5,288~7,7,288
        1,7,40~3,7,40
        8,6,42~9,6,42
        0,5,146~3,5,146
        7,6,257~7,6,259
        2,6,218~3,6,218
        8,7,159~8,7,160
  recorded_at: Sun, 16 Mar 2025 02:36:19 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/23_a_long_walk.rb?token=ACG6TJ3TTXXTG2XP6QDBG4LH2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '3282'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"9362581fc22fbf4bc6ce66c1b5d384e8dede05a08ed8f0dfa1888eface076cd1"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - 1DFE:294D63:2C9E69:3A4D1B:67D6391F
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:20 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200076-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092580.720196,VS0,VE438
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 4b1c031b933f562f11344357b76d8030353b1c6c
      expires:
      - Sun, 16 Mar 2025 02:41:20 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        map = DATA.map &:chomp
        X = map[0].size
        map *= ""
        S, G = map.index(?.), map.rindex(?.)
        N = [-1, 1, -X, X]

        neighbors = -> l {
          n = []
          n << l - X if map[l - X] != ?# && (map[l] == ?. || map[l] == ?<)
          n << l - 1 if map[l - 1] != ?# && (map[l] == ?. || map[l] == ?^)
          n << l + 1 if map[l + 1] != ?# && (map[l] == ?. || map[l] == ?>)
          n << l + X if map[l + X] != ?# && (map[l] == ?. || map[l] == ?v)
          n
        }

        best = 0
        dfs_1 = -> current, visited = [], distance = 0 {
          best = [best, distance].max if current == G
          neighbors[current].each { |n|
            next if visited[n]
            visited[n] = true
            dfs_1[n, visited, distance + 1]
            visited[n] = false
          }
        }

        dfs_1[S]
        p best

        distances = Hash.new { _1[_2] = [] }
        intersections = [S] | (S..G).filter_map { !map[_1][?#] && neighbors[_1].size > 2 && _1 } | [G]

        intersections.each { |l|
          q = [l]
          s = [l].to_set
          d = 0
          while q.any?
            d += 1
            qq = []
            q.each { |c|
              N.each {
                n = c + _1
                map[n] && map[n] != ?# && s.add?(n) && (intersections.include?(n) ? distances[l] << [d, n] : qq << n)
              }
            }
            q = qq
          end
        }

        dfs_2 = -> current, visited = [], distance = 0 {
          best = [best, distance].max if current == G
          distances[current].each { |d, n|
            next if visited[n]
            visited[n] = true
            dfs_2[n, visited, distance + d]
            visited[n] = false
          }
        }

        dfs_2[S]
        p best

        __END__
        #.###########################################################################################################################################
        #...###...#...#.......#...#.....#.........#...#...#...#...#...#.....#...#.......#...#...#.......#.....#...........#.....#...###...#.....#...#
        ###.###.#.#.#.#.#####.#.#.#.###.#.#######.#.#.#.#.#.#.#.#.#.#.#.###.#.#.#.#####.#.#.#.#.#.#####.#.###.#.#########.#.###.#.#.###.#.#.###.#.#.#
        #...#...#...#.#.#.....#.#.#...#.#.......#.#.#.#.#.#.#.#.#.#.#.#.#...#.#.#...#...#.#.#.#.#.#.....#.#...#.........#.#...#.#.#...#.#.#...#.#.#.#
        #.###.#######.#.#v#####.#.###.#.#######.#.#.#.#.#.#.#.#.#.#.#.#.#.###.#.###.#.###.#.#.#.#.#.#####.#.###########.#.###.#.#.###.#.#.###.#.#.#.#
        #...#...#.....#.#.>.###.#.#...#.#.....#.#.#.#.#.#.#.#.#.#...#...#.>.>.#...#.#...#.#...#...#.#...#.#.....#.......#.###.#.#.#...#.#.###.#.#.#.#
        ###.###.#.#####.#v#.###.#.#.###.#.###.#.#.#.#.#.#.#.#.#.###########v#####.#.###.#.#########.#.#.#.#####.#.#######.###.#.#.#.###.#.###.#.#.#.#
        #...#...#.#...#.#.#.....#...#...#...#.#.#.#.#.#.#.#.#.#.#.........#.#.....#.#...#...#.......#.#.#.#.....#.......#.....#.#.#...#.#.#...#.#.#.#
        #.###.###.#.#.#.#.###########.#####.#.#.#.#.#.#.#.#.#.#.#.#######.#.#.#####.#.#####.#.#######.#.#.#.###########.#######.#.###.#.#.#.###.#.#.#
        #.#...###...#...#.....###...#...#...#...#.#.#.#.#...#...#.......#...#...#...#.#.>.>.#.....#...#.#.#.###...#...#.......#...###.#.#.#.#...#.#.#
        #.#.#################.###.#.###.#.#######.#.#.#.###############.#######.#.###.#.#v#######.#.###.#.#.###.#.#.#.#######.#######.#.#.#.#.###.#.#
        #.#...###.............#...#.....#.......#...#.#...#.......#...#.....###.#.#...#.#...#.....#.#...#.#...#.#.#.#.#.......#...###...#.#.#.....#.#
        #.###.###.#############.###############.#####.###.#.#####.#.#.#####.###.#.#.###.###.#.#####.#.###.###.#.#.#.#.#.#######.#.#######.#.#######.#
        #.#...#...#.........###.......#.>.>.....#...#.#...#.....#.#.#.....#...#.#.#.#...#...#...###.#...#.#...#.#.#.#.#.........#.....#...#.#.......#
        #.#.###.###.#######.#########.#.#v#######.#.#.#.#######.#.#.#####.###.#.#.#.#.###.#####.###.###.#.#.###.#.#.#.###############.#.###.#.#######
        #.#...#.#...#.....#.......###.#.#.#...###.#.#...#.......#.#.....#.#...#.#.#.#.#...#...#...#...#.#.#.#...#...#.#...............#.....#.......#
        #.###.#.#.###.###.#######.###.#.#.#.#.###.#.#####.#######.#####.#.#.###.#.#.#.#.###.#.###.###.#.#.#.#.#######.#.###########################.#
        #.#...#.#...#...#.........#...#.#.#.#.....#.....#.#.....#.......#...###...#...#.....#...#...#.#.#.#.#...#.....#.............###.............#
        #.#.###.###.###.###########.###.#.#.###########.#.#.###.###############################.###.#.#.#.#.###.#.#################.###.#############
        #...###.....###...........#.#...#.#.#...........#...###...........#...###...#...#...#...#...#.#.#.#.#...#.#...>.>.#.........#...#...#.......#
        #########################.#.#.###.#.#.###########################.#.#.###.#.#.#.#.#.#.###.###.#.#.#.#.###.#.###v#.#.#########.###.#.#.#####.#
        #...#.......#...........#.#.#...#...#.........#...#.............#...#...#.#...#...#...###.....#...#.#.#...#.###.#.#.......###...#.#.#.#.....#
        #.#.#.#####.#.#########.#.#.###.#############.#.#.#.###########.#######.#.#########################.#.#.###.###.#.#######.#####.#.#.#.#.#####
        #.#.#.....#.#.........#...#.....#...#.........#.#.#.#...#...###.........#...#...#...#...........#...#.#...#.#...#.........#...#...#...#.....#
        #.#.#####.#.#########.###########.#.#.#########.#.#.#.#.#.#.###############.#.#.#.#.#.#########.#.###.###.#.#.#############.#.#############.#
        #.#.#.....#.#.........#...###.....#.#...........#.#...#...#.............###...#...#...#.....#...#.....###...#...#...#.....#.#...###...#.....#
        #.#.#.#####.#.#########.#.###.#####.#############.#####################.###############.###.#.#################.#.#.#.###.#.###.###.#.#.#####
        #.#.#.....#.#.......###.#...#.....#.#.........#...#...#.................#...###.........###...#...#...#...#.....#.#.#...#.#...#.###.#.#...###
        #.#.#####.#.#######v###.###.#####.#.#.#######.#.###.#.#.#################.#.###.###############.#.#.#.#.#.#.#####.#.###.#.###.#.###.#.###v###
        #.#...#...#.......#.>.#.#...#.....#.#.......#...###.#.#...........#.....#.#...#.........#...#...#...#.#.#.#.....#.#.....#.#...#.#...#.#.>.###
        #.###.#.#########.#v#.#.#.###.#####.#######.#######.#.###########.#.###.#.###.#########.#.#.#.#######.#.#.#####.#.#######.#.###.#.###.#.#v###
        #.#...#.........#.#.#.#.#...#.....#.#...#...#.....#.#.....#...#...#.#...#...#.#...#.....#.#.#.#.......#.#.###...#.......#.#...#.#...#.#.#...#
        #.#.###########.#.#.#.#.###.#####.#.#.#.#v###.###.#.#####.#.#.#.###.#.#####.#.#.#.#.#####.#.#.#.#######.#.###v#########.#.###.#.###.#.#.###.#
        #.#.........###.#.#.#.#.#...#...#.#...#.>.>.#.#...#.....#.#.#...###.#.#...#.#.#.#.#.....#.#.#.#...#...#.#...>.>.#.....#.#.#...#.....#...#...#
        #.#########.###.#.#.#.#.#.###.#.#.#######v#.#.#.#######.#.#v#######.#.#.#.#.#.#.#.#####.#.#.#.###.#.#.#.#####v#.#.###.#.#.#.#############.###
        #.........#.#...#.#.#...#.#...#.#.....#...#.#.#...#.....#.>.>.....#.#.#.#.#.#...#...#...#.#...#...#.#.#.#.....#.#.###.#.#.#...#.........#...#
        #########.#.#.###.#.#####.#.###.#####.#.###.#.###.#.#######v#####.#.#.#.#.#.#######.#.###.#####.###.#.#.#.#####.#.###.#.#.###.#.#######.###.#
        #.........#...###...###...#.###.#.....#...#.#...#...###...#.#.....#.#.#.#.#...#.....#...#.....#.....#...#.....#.#...#...#.#...#...#...#.....#
        #.#####################.###.###.#.#######.#.###.#######.#.#.#.#####.#.#.#.###.#.#######v#####.###############.#.###.#####.#.#####.#.#.#######
        #.....................#...#...#.#.#.......#.....#.......#...#.#...#.#.#.#.#...#.......>.>.#...#####.....###...#...#.....#...#####...#.......#
        #####################.###.###.#.#.#.#############.###########.#.#.#.#.#.#.#.###########v#.#.#######.###.###.#####.#####.###################.#
        #...#...........#...#.#...#...#...#.......###...#...#.......#.#.#.#.#...#.#.###.........#...###.....#...#...#.....#.....#.....###...#.......#
        #.#.#.#########.#.#.#.#.###.#############.###.#.###.#.#####.#.#.#.#.#####.#.###.###############.#####.###.###.#####.#####.###.###.#.#.#######
        #.#...#.......#.#.#.#.#...#.#...#...#...#.....#...#...#.....#...#...###...#.#...#.......###...#.....#.....###.....#.#...#...#.....#...#...###
        #.#####.#####.#.#.#.#.###.#.#.#.#.#.#.#.#########.#####.###############.###.#.###.#####.###.#.#####.#############.#.#.#.###.###########.#.###
        #.#...#.#.....#...#...###.#.#.#...#...#.#.........#.....#.........#.....#...#.....#...#...#.#.#.....#...###...###...#.#...#.............#...#
        #.#.#.#.#.###############.#.#.#########.#.#########.#####.#######.#.#####.#########.#.###.#.#.#.#####.#.###.#.#######.###.#################.#
        #.#.#...#...###...#...###...#.........#.#.....#####.......#.....#.#.#.....#...###...#...#.#.#.#.......#.....#.#...#...#...#...###...#.......#
        #.#.#######.###.#.#.#.###############.#.#####.#############.###.#.#.#.#####.#.###.#####.#.#.#.###############.#.#.#.###.###.#.###.#.#.#######
        #...###...#.....#...#...#.............#.....#...#...........###...#.#.#.....#.....#...#.#.#.#.................#.#.#.#...#...#.#...#...#.....#
        #######.#.#############.#.#################.###.#.#################.#.#.###########.#.#.#.#.###################.#.#.#.###.###.#.#######.###.#
        #.......#.......#.......#.........#.......#.....#.................#...#.#...#.....#.#.#...#.........#.........#.#...#...#...#.#.......#.#...#
        #.#############.#.###############.#.#####.#######################.#####.#.#.#.###.#.#.#############v#.#######.#.#######.###.#.#######.#.#.###
        #...#...#...###...#...#...#...###...#...#.......#.................#.....#.#...###...#.........#...>.>.#.....#.#.#.......#...#.....###...#...#
        ###.#.#.#.#.#######.#.#.#.#.#.#######.#.#######.#.#################.#####.###################.#.###v###.###.#.#.#.#######.#######.#########.#
        #...#.#.#.#.....###.#.#.#.#.#.###...#.#.........#.............#...#.......###...#...#.........#...#.###.###...#.#.....###.......#.#.........#
        #.###.#.#.#####.###.#.#.#.#.#.###.#.#.#######################.#.#.###########.#.#.#.#.###########.#.###.#######.#####.#########.#.#.#########
        #...#.#...#.....#...#.#.#.#.#...#.#.#.............#...........#.#...#...#.....#...#...#...........#...#...###...#.....#...#.....#.#.........#
        ###.#.#####v#####.###.#.#.#.###.#.#.#############.#.###########.###.#.#.#.#############.#############.###.###.###.#####.#.#.#####.#########.#
        ###...#...#.>.###...#.#.#.#...#.#.#...#...........#.......#...#.#...#.#.#.............#.......#...###...#...#.#...#...#.#.#...#...#...###...#
        #######.#.#v#.#####.#.#.#.###.#.#.###.#.#################.#.#.#.#.###.#.#############.#######.#.#.#####.###.#.#.###.#.#.#.###.#.###.#.###v###
        #.......#...#...###.#.#.#.###.#.#...#.#...###...###...#...#.#...#.#...#.#...#...#.....#...###...#...#...#...#.#...#.#.#.#.#...#.#...#.#.>.###
        #.#############.###.#.#.#.###.#.###.#.###v###.#.###.#.#v###.#####.#.###.#.#.#.#.#.#####.#.#########.#.###.###.###.#.#.#.#.#.###.#.###.#.#v###
        #.......#.....#.#...#.#.#.#...#...#.#...>.>.#.#.#...#.>.>.#.#.....#...#.#.#.#.#.#.#...#.#.#.....#...#.###.....###.#.#.#.#.#...#.#.###...#...#
        #######.#.###.#.#.###.#.#.#.#####.#.#####v#.#.#.#.#####v#.#.#.#######.#.#.#.#.#.#v#.#.#.#.#.###.#.###.###########.#.#.#.#.###.#.#.#########.#
        #######.#.###.#.#.#...#.#.#...###...###...#.#.#.#.#.....#...#...#...#.#.#.#.#.#.>.>.#.#.#.#.#...#.###.......#####.#.#.#.#...#.#...#...#...#.#
        #######.#.###.#.#.#.###.#.###.#########.###.#.#.#.#.###########.#.#.#.#.#.#.#.###v###.#.#.#.#.###.#########.#####.#.#.#.###.#.#####.#.#.#.#.#
        #.......#.#...#...#.....#.#...#.........###.#.#...#...........#.#.#.#.#.#.#...#...###...#...#...#.#.......#.....#...#.#.#...#.#.....#...#...#
        #.#######.#.#############.#.###.###########.#.###############.#.#.#.#.#.#.#####.###############.#.#.#####.#####.#####.#.#.###.#.#############
        #.........#.........#...#.#.#...#...#.....#.#.#...#...........#...#.#.#...#...#.....#...#...#...#.#.....#.#.....#...#.#.#...#.#.............#
        ###################.#.#.#.#.#.###.#.#.###.#.#.#.#.#.###############.#.#####.#.#####.#.#.#.#.#.###.#####.#.#.#####.#.#.#.###.#.#############.#
        #...#...#...#.......#.#.#...#.....#...#...#...#.#.#.....#...#...###.#.#.....#.......#.#...#.#.....#.....#...#.....#.#...#...#...#...........#
        #.#.#.#.#.#.#.#######.#.###############.#######.#.#####.#.#.#.#.###.#.#.#############.#####.#######.#########.#####.#####.#####.#.###########
        #.#...#...#...#...###.#...#...#...#...#.....#...#.......#.#.#.#...#...#...#...#.....#.#.....#...###.......###.#.....#...#.......#...........#
        #.#############.#.###.###.#.#.#.#.#.#.#####.#.###########.#.#.###.#######.#.#.#.###.#.#.#####.#.#########.###.#.#####.#.###################.#
        #.#.............#...#...#.#.#.#.#...#.......#.............#...#...#...###...#...#...#.#.#...#.#.#...#.....#...#.....#.#.#...#.........#.....#
        #.#.###############.###.#.#.#.#v###############################.###.#.###########.###.#.#.#.#.#.#.#.#.#####.#######.#.#.#.#.#.#######.#.#####
        #...#...............###.#.#.#.>.>.#.......#.....................#...#...#...#...#...#.#.#.#.#.#.#.#.#.#####...#.....#.#.#.#.#.......#.#.....#
        #####.#################.#.#.###v#.#.#####.#.#####################.#####.#.#.#.#.###.#.#.#.#.#.#.#.#.#v#######.#.#####.#.#.#.#######.#.#####.#
        #...#.........#...#...#.#.#.###.#...#.....#.#.....#.......#.....#...#...#.#.#.#.#...#.#.#.#.#.#...#.>.>.#...#.#.#...#.#.#.#...#...#.#.#...#.#
        #.#.#########v#.#.#.#.#.#.#.###.#####.#####.#.###.#.#####.#.###.###.#.###.#.#.#.#v###.#.#.#.#.#######v#.#.#.#.#.#.#.#.#.#.###.#.#.#.#.#.#.#.#
        #.#.......###.>.#.#.#...#.#.#...#...#...###...#...#.#.....#...#.#...#...#.#.#.#.>.>.#.#.#.#.#...#.....#.#.#.#.#.#.#.#.#.#...#.#.#.#.#.#.#...#
        #.#######.###v###.#.#####.#.#.###.#.###.#######.###.#.#######.#.#.#####.#.#.#.###v#.#.#.#.#.###.#.#####.#.#.#.#.#.#.#.#.###.#.#.#.#.#.#v#####
        #.......#.....###.#.....#...#.#...#.....#...###.....#.....###.#.#.#...#.#.#.#.#...#...#...#.....#.....#.#.#.#.#.#.#.#.#...#.#.#.#.#.#.>.#...#
        #######.#########.#####.#####.#.#########.#.#############.###.#.#.#.#.#.#.#.#.#.#####################.#.#.#.#.#.#.#.#.###.#.#.#.#.#.###v#.#.#
        #.....#.........#.#...#.#...#.#.....#...#.#...#...#...#...#...#.#...#.#.#.#.#.#.#...###.....#.....#...#...#.#.#.#.#.#...#.#.#.#.#...###...#.#
        #.###.#########.#.#.#.#.#.#.#.#####.#.#.#.###.#.#.#.#.#v###.###.#####.#.#.#.#.#.#.#.###.###.#.###.#.#######.#.#.#.#.###.#.#.#.#.###########.#
        #...#.#.........#...#...#.#...#...#.#.#.#.#...#.#.#.#.>.>...###.......#...#.#.#.#.#...#.#...#...#.#.......#.#.#.#.#.#...#.#.#...#...........#
        ###.#.#.#################.#####.#.#.#.#.#.#.###.#.#.###v###################.#.#.#.###.#.#.#####.#.#######.#.#.#.#.#.#.###.#.#####.###########
        #...#...#.......#...#.....#.....#.#.#.#...#...#.#.#.###...#...........#...#...#...#...#.#.......#.#.......#...#...#.#.###.#.....#...........#
        #.#######.#####.#.#.#.#####.#####.#.#.#######.#.#.#.#####.#.#########.#.#.#########.###.#########.#.###############.#.###.#####.###########.#
        #...#.....#.....#.#.#.......#.....#...###...#...#...#.....#.#.........#.#.#.....###.....#...#.....#.....#.....#.....#.#...#.....#...#.....#.#
        ###.#.#####.#####.#.#########.###########.#.#########.#####.#.#########.#.#.###.#########.#.#.#########.#.###.#.#####.#.###.#####.#.#.###.#.#
        #...#.#.....#...#.#.#.........#...###.....#.....#...#.......#...........#.#...#.#.........#...#...###...#.#...#.....#.#.#...#...#.#.#...#.#.#
        #.###.#.#####.#.#.#.#.#########.#.###.#########.#.#.#####################.###.#.#.#############.#.###.###.#.#######.#.#.#.###.#.#.#.###.#.#.#
        #.....#.....#.#.#.#.#...........#...#.......#...#.#.#...#...#.......#.....#...#.#.......#.....#.#.#...#...#.....#...#.#.#.#...#...#.....#.#.#
        ###########.#.#.#.#.###############.#######.#.###.#.#.#.#.#.#.#####.#.#####.###.#######.#.###.#.#.#.###.#######.#.###.#.#.#.#############.#.#
        #.........#...#...#.....#.......#...#...#...#...#.#.#.#.#.#.#.....#.#.#...#...#.#.....#...#...#.#.#.....#...#...#...#.#...#.............#.#.#
        #.#######.#############.#.#####.#.###.#.#.#####.#.#.#.#.#.#.#####.#.#.#.#.###.#.#.###.#####.###.#.#######.#.#.#####.#.#################.#.#.#
        #.......#...............#.....#...###.#.#...#...#.#.#.#.#.#.###...#...#.#.#...#...#...#.....#...#.........#.#.....#.#...#.........#.....#...#
        #######.#####################v#######.#.###.#.###.#.#.#.#.#.###v#######.#.#.#######.###.#####.#############.#####.#.###.#.#######.#.#########
        #.......#.....#...#...#.....>.>.#.....#.....#...#.#.#.#...#.#.>.>.#...#.#.#...#.....###.#...#.............#.#...#.#.....#.......#.#...#...###
        #.#######.###.#.#.#.#.#.#####v#.#.#############.#.#.#.#####.#.#v#.#.#.#.#.###.#.#######v#.#.#############.#.#.#.#.#############.#.###.#.#.###
        #.........#...#.#.#.#.#.....#.#...#...#...#.....#.#.#.....#.#.#.#...#.#.#.#...#.#...#.>.>.#...###...#.....#...#...#...#...#...#.#.....#.#.###
        ###########.###.#.#.#.#####.#.#####.#.#.#.#.#####.#.#####.#.#.#.#####.#.#.#.###.#.#.#.#v#####.###.#.#.#############.#.#.#.#.#.#.#######.#.###
        #...........#...#.#.#.###...#.#...#.#.#.#.#.....#.#.....#.#...#...###.#.#...###...#.#.#.###...#...#...###...###...#.#.#.#.#.#.#.........#...#
        #.###########.###.#.#.###.###.#.#.#.#.#.#.#####.#.#####.#.#######.###.#.###########.#.#.###.###.#########.#.###.#.#.#.#.#.#.#.#############.#
        #...........#...#.#.#...#.#...#.#.#.#...#.....#.#.#.....#.#.......#...#.....###...#...#...#.###.......#...#...#.#...#.#.#.#.#.#.......#...#.#
        ###########.###.#.#.###.#.#.###.#.#.#########.#.#.#.#####.#.#######.#######.###.#.#######.#.#########.#.#####.#.#####.#.#.#.#.#.#####.#.#.#.#
        #.......###...#.#...#...#.#...#.#...#.........#...#.#...#.#.....###...#...#.#...#.###.....#.#...#...#.#.#.....#...#...#.#.#.#.#.....#.#.#...#
        #.#####.#####.#.#####.###.###.#.#####.#############.#.#.#.#####.#####.#.#.#.#.###.###.#####.#.#.#.#.#v#.#.#######.#.###.#.#.#.#####v#.#.#####
        #.....#...#...#.....#...#.###...#...#...........###...#.#.#...#.....#...#...#...#...#.....#.#.#.#.#.>.>.#.....#...#...#.#.#.#.#...>.#...#...#
        #####.###.#v#######.###.#.#######.#.###########.#######.#.#.#.#####.###########.###.#####.#.#.#.#.###v#######.#.#####.#.#.#.#.#.###v#####.#.#
        #####.#...#.>...#...###.#.....#...#.###.........#...###...#.#.......###.....###...#.......#...#.#.###.......#.#.....#.#.#.#.#.#...#.......#.#
        #####.#.###v###.#.#####.#####.#.###.###.#########.#.#######.###########.###.#####.#############.#.#########.#.#####.#.#.#.#.#.###.#########.#
        #.....#.....###...#...#.......#...#.#...#...#.....#...#...#.#...#...#...#...#.....#.......#...#.#.#.........#.#.....#.#.#.#.#.#...#.........#
        #.#################.#.###########.#.#.###.#.#.#######.#.#.#.#.#.#.#.#.###.###.#####.#####.#.#.#.#.#.#########.#.#####.#.#.#.#.#.###.#########
        #.........#.........#...#.....#...#.#.....#...#.......#.#.#...#...#...#...###.#...#.#.....#.#.#...#.........#.#...#...#.#...#...###...#...###
        #########.#.###########.#.###.#.###.###########.#######.#.#############.#####.#.#.#.#.#####.#.#############.#.###.#.###.#############.#.#.###
        #.........#.#...........#.#...#...#...........#...#...#.#.###...........#...#...#...#.......#...#...........#.#...#...#.###...#...#...#.#...#
        #.#########.#.###########.#.#####.###########.###.#.#.#.#.###.###########.#.###################.#.###########.#.#####.#.###.#.#.#.#.###.###.#
        #.#.....#...#.#...........#...#...#...#.....#.....#.#.#.#...#...........#.#.###.......#...#.....#...........#...#...#...#...#...#.#.....#...#
        #.#.###.#.###.#.#############.#.###.#.#.###.#######.#.#.###.###########.#.#.###.#####.#.#.#.###############.#####.#.#####.#######.#######.###
        #...#...#.###...#...#...#.....#.....#.#.#...#...###.#.#.#...###.........#.#...#.....#...#...#####...###.....###...#.#...#.......#.....#...###
        #####.###.#######.#.#.#.#.###########.#.#.###.#.###.#.#.#.#####v#########.###.#####.#############.#.###.#######.###.#.#.#######.#####.#.#####
        #...#...#...#.....#...#...#.......###...#.....#.#...#.#.#...#.>.>.#.....#.#...#...#.....###...#...#.....#...###.#...#.#.#.....#.....#...#...#
        #.#.###.###.#.#############.#####.#############.#.###.#.###.#.###.#.###.#.#.###.#.#####.###.#.#.#########.#.###.#.###.#.#.###.#####.#####.#.#
        #.#.....#...#...#...###...#.#.....#...#.........#...#.#...#.#.###.#.#...#.#.#...#.#...#.....#.#.........#.#.###.#.###.#.#.#...#...#...#...#.#
        #.#######.#####.#.#.###.#.#.#.#####.#.#.###########.#.###.#.#.###.#.#.###.#.#.###.#.#.#######.#########v#.#.###.#.###.#.#.#.###v#.###.#.###.#
        #...#.....#...#...#...#.#.#.#.#...#.#.#.......###...#.#...#.#.#...#.#...#.#.#...#.#.#.#.......#...#...>.>.#...#.#...#.#.#.#.#.>.#.....#...#.#
        ###.#.#####.#.#######.#.#.#.#.#.#.#.#.#######.###.###.#.###.#.#.###.###.#.#.###.#.#.#.#v#######.#.#.#########.#.###.#.#.#.#.#.#v#########.#.#
        #...#.#.....#...#...#.#.#.#.#.#.#.#.#.#####...#...###.#.###.#.#...#.#...#.#.....#.#.#.>.>.#...#.#.#.#...#...#.#.###.#.#.#.#...#...#...#...#.#
        #.###.#.#######.#.#.#.#.#.#.#.#.#.#.#.#####v###.#####.#.###.#.###.#.#.###.#######.#.#####.#.#.#.#.#.#.#.#.#.#.#.###.#.#.#.#######.#.#.#.###.#
        #...#.#.#.....#...#...#.#.#.#.#.#.#.#...#.>.>.#...#...#...#.#.#...#.#...#.###.....#.....#.#.#.#.#.#...#...#.#.#...#...#.#.#.......#.#.#...#.#
        ###.#.#.#.###.#########.#.#.#.#.#.#.###.#.###.###.#.#####.#.#.#.###.###.#.###.#########.#.#.#.#.#.#########.#.###.#####.#.#.#######.#.###.#.#
        ###.#.#.#.###.......#...#.#.#...#.#.#...#.###.#...#.....#.#...#.....###.#...#.#...#.....#.#.#.#.#...#.....#.#.#...#.....#.#.....#...#.#...#.#
        ###.#.#.#.#########.#.###.#.#####.#.#.###.###.#.#######.#.#############.###.#.#.#.#.#####.#.#.#.###.#.###.#.#.#.###.#####.#####.#.###.#.###.#
        #...#.#.#.#.........#.#...#.....#.#.#...#.###.#.#.......#.....#.........#...#.#.#.#.....#.#.#.#.#...#...#.#.#.#...#...#...#.....#.#...#.#...#
        #.###.#.#.#.#########.#.#######.#.#.###.#.###.#.#.###########.#.#########.###.#.#.#####.#.#.#.#.#.#####.#.#.#.###.###.#.###.#####.#.###.#.###
        #.....#...#...........#.........#...###...###...#.............#...........###...#.......#...#...#.......#...#.....###...###.......#.....#...#
        ###########################################################################################################################################.#
  recorded_at: Sun, 16 Mar 2025 02:36:20 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/ZogStriP/adventofcode-old/master/2023/25_snowverload.rb?token=ACG6TJ23VND6YNADPHDITD3H2Y4VK
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '11043'
      cache-control:
      - max-age=300
      content-security-policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      content-type:
      - text/plain; charset=utf-8
      etag:
      - W/"fa0e3b79cda21dff53def7e3e2eecac37be526fe66a1b941de582c3d700ca53f"
      strict-transport-security:
      - max-age=31536000
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
      x-github-request-id:
      - B749:2C95E5:3FB65E:50E2A0:67D63919
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sun, 16 Mar 2025 02:36:20 GMT
      via:
      - 1.1 varnish
      x-served-by:
      - cache-iad-kcgs7200046-IAD
      x-cache:
      - MISS
      x-cache-hits:
      - '0'
      x-timer:
      - S1742092580.405790,VS0,VE323
      vary:
      - Authorization,Accept-Encoding,Origin
      access-control-allow-origin:
      - "*"
      cross-origin-resource-policy:
      - cross-origin
      x-fastly-request-id:
      - 7cc17f23a1373e1be3057db394253cae7ea90de4
      expires:
      - Sun, 16 Mar 2025 02:41:20 GMT
      source-age:
      - '0'
    body:
      encoding: UTF-8
      string: |-
        G = Hash.new { _1[_2] = [] }

        DATA.each { |l|
          l, *rs = l.scan(/\w+/)
          rs.each { |r|
            G[l] << r
            G[r] << l
          }
        }

        start = G.keys.sample

        left = { start => true }
        bridges = G[start].to_h { [[start, _1], true] }

        while bridges.size > 3
          add = bridges.keys.map(&:last).uniq.min_by { |u| G[u].sum { |v| left[v] ? -1 : 1 } }
          left[add] = true
          G[add].each { |v| left[v] ? bridges.delete([v, add]) : bridges[[add, v]] = true }
        end

        p left.size * (G.size - left.size)

        __END__
        xhb: xng xdp ntl nlv
        gfz: fml
        tht: mjk dgk lsc snb
        xqk: jlb
        grs: hcc
        gks: hzx kpc hzg
        cfj: gbx mkj rrx
        dhs: fxn rxj
        dvv: tmb pnj dqf lsc
        qdn: gds pvq
        dqs: bqc
        tnk: lkv
        dgc: qlt lvc gmj llm tgm
        nsn: dcr kcn fpl sdq
        ntk: nlv std rtx nst tlg
        zhl: vsd sjj vtl bbp
        gqk: brq
        zpt: pqm zdp hkh znv
        gdq: gpc cmb
        lpl: jpx
        ksg: qjv zgb kbv
        hcc: fxv
        zdf: mlx zjm fks jxg
        cnc: qtb ggf
        xtk: psd bln pcj gtc
        fbl: qzb
        svk: srp smq hcc
        mdm: fxn fkb bpb bkk
        vhq: rbl ktz pvg
        xbm: zhp jbj ffd
        dnv: sbm hjp
        hvt: rhb gtv ksp nsr mcv
        lkp: lgq glp
        lsh: cfg
        mmx: xpg jfx pzb scf
        qfp: hcf frb mck
        llk: sfc
        bqx: nvl txt pbl xqb
        zhp: rfg hrs dhn
        kmc: zjt njh xdl
        fcb: vvk dmk xmp pzf
        tcd: vvb
        bpb: sht dfc
        hxz: jgt dvc mdl
        jks: qlg drj tlq rfg
        rtx: mgt pxx zbh
        qlv: mgh psq nzf lsh xpd
        vxq: shv jlq hrd vrg
        bpm: kpf rpg mlz
        hzz: tzc qbn lpc
        pzf: rpr
        kzl: xkm
        lpp: pjp ckj rvv zfj qxz
        dzn: crj jzn
        ckf: ljt vpm sfc
        kln: fqf nvd qsk xrp
        sdb: ffs nbp gkg
        xrp: kzl
        slk: gbx
        znf: sjj mzg
        hfx: vlk
        bpr: zpz ctn bmt
        pnm: kpn zhp mgt
        hfm: vzz rrx
        zlp: hxp nkq flj
        ctj: llk ldc zgm
        bfc: xdb
        hsj: bzt krl gls dpv
        njl: bvn dqg hdf
        gvj: nqm
        grt: tzc
        fnm: cjz kkz qcl
        ppc: khj fxg
        fnf: rck qnn qnp
        xxk: jrt
        hgr: krj
        zkf: nst
        nzb: kxq tzc kjt
        qqv: zsk dpb zkf nsr
        llm: sht
        dcd: kvv qsk
        rct: bbt qqr
        pgk: rrm vrk pdx
        gls: kpl
        shq: pdq vtl mhq msq
        fqk: fgv crb fbb
        xhc: bpj hgr
        mzt: dnm hvp fms vxd
        tnc: zqz vqf jnj cfm
        fsp: ggf cll zqd smc
        pvz: ltm
        glf: vgh bht
        mzj: bnf hlx sdq vrg
        ktf: mgt hrj njh dzg
        dzl: sgz rxj
        nfm: tzf
        lfl: srf lff frt fjg vqp
        sjm: qkm zpg
        hcx: pcj ghn qmz bxj
        jvr: zqd xkf gpc
        pkv: qqm gds jtk
        xnn: ddx qkl nnn gqd zkf
        jlq: xpd
        gqc: jrv vrn lpt frp rzk fmx
        qln: frb dfc lmx
        fdl: rrq rmr mcc dmt
        tdg: kvq skr bvg
        kmx: vvk
        xbp: bdh tnq qrt
        cdz: qgl ghp npz lvm
        sfs: bxv cvj hdd mdg rxj
        fnn: qgs
        vvb: tlm
        xmm: dkm
        bht: cbm rvv
        ksp: hjc
        kpn: jxr mpk
        vzt: vth xvg vcl lfn
        jkn: gnp gpn jbk
        bmf: jzk dcl tbv jtp
        fqc: pjl vjb xss
        svq: xmp
        qqj: snb tmq nrg
        dqf: qtv rxq
        bzd: dnc hrb npl
        rks: jjz
        scs: src
        qmm: nmz xcz vcz rrq
        rvc: cch hhj sgv mkv crp
        gsl: hgv rjb gnt gpm
        bzr: vsd vss dnv
        svp: zjf jhj
        gzl: hxd vxk
        gkb: zvh hmf
        bqz: kcn jdn
        jtp: jbm vsq kqg
        kbq: qgl kvt
        kzc: nst zhn qrs
        nnp: nxk mpv bcl
        nnz: chq
        kkb: pgv qjv nqm
        rht: mqr bxv jzn
        lqq: dgk mdl nmz
        cql: mmb
        ccr: pvz jjz nzb nqm
        nbg: nnx pzb pxx jrt
        hvl: hfm kzl
        fft: ktj
        ktn: vlk vsq
        dcx: zgb
        hfd: nrs cdr pnj ctn
        qjc: znc ffs nfc ncz
        bpx: nfm rhs fxn
        fkd: qfj pmp xdp stg
        lzt: fqc pqk nlh xnn
        gtb: phs pxx cng hzx
        qdk: pjm
        zlq: zgz llb slk hdf czx
        xvg: lzv
        dsl: hzk vjb rks
        xpr: dcq glv zmf
        mlz: mnd lpc rjq jvc
        ggk: pfc rlb rqx tdg zks
        sbr: rbl kzs vln qlg
        pmn: rxq ccf fzz
        xvp: nxb rmj scs
        kpf: kcn hhd tnk vzx
        zjx: rsq qhr ngj jmr
        lsz: kkp
        lcq: zkv jbh vsx hgd scf qtq
        drv: qlk
        rqx: ggz
        cjz: dkl fzv pkj
        tnm: ztd bbt
        dmt: rrx
        jfg: kbq bbt
        sfr: brh gpc jvb
        ghr: cgh nvc
        msc: gzt gzl mgm dmk rql
        dvc: zsz hhr
        llq: zgn xlr mmm
        fqx: pjm src vrb hzb qgm
        vlq: tlm flh gbx
        rtn: xml
        chq: rcp vmk
        xng: qfc pbz
        sfh: dcs
        nxk: dkl nqk
        frb: hzz zst xbv
        tnq: psl
        lrn: lqb lqn qml
        jgl: hrj mzg dnv kmc qnq
        hxd: brq
        qlg: jpt
        scc: nkq
        mds: hts qkg dvc
        mcc: kss kmd zpz pgs
        qmr: kzx mrd bfc
        rjh: vpm jtk vln
        lhg: bxx pvz csm
        tpm: vrg ddv smv pjn
        dgh: qfc kkg xvp ssv hzd
        jvn: dmk lfz jxs jfg bsn
        dcf: tsm jhh xss zkf
        kmn: gpm qqv bzr bnf
        ntl: xnb ggz ddx
        qgj: zth gkq
        vpk: sns dpn jtr
        mfm: tvg psq sjj
        sss: gzg pkk qlp
        kkp: tgl
        vrv: nlm
        dsj: smn pfc jvc bkq
        ftf: pgv hqf vjb
        xfr: mmm stg zqm dhn
        bkk: vtv hsd
        sdd: tnm rcf tss sxv
        ltl: lck cpb jcc
        sbd: xgt fft
        fjg: tfz rsg kmx
        cgz: jrt ptl phf hzz
        ppk: btd prr
        dln: rpk nnp ntf glf
        jhh: vss hsd qpl
        cnh: dpb rjl djv
        xml: fzf
        sxh: fzq drq sfq llk
        jqc: dcx
        cxp: dgc rtn grt rdl
        lsq: pmk hzg dbf
        fzt: qnq ffd qrp lnt
        jzd: zhz dfc
        ghp: plb zxz lxg
        csf: qbm llm
        tlh: nnf dmq zlg mfm
        qgz: ptx pxx xqb fpl
        hbg: ktn rvr vvr vrk
        gld: ghn cvl jzd
        mqs: qzb bmt dgk lpl
        psq: pql
        jkz: tgl rqg sbg kjt
        rbl: kvt
        znk: qgk hxd jkk xzc
        jhd: bpm hcx zgn nsk
        npp: btd btz drv nmg glk
        bpf: sdb ldb hfc
        ngj: rqx
        dpv: qtr mht cvj
        qqd: zck
        fhs: nxk khj jpx
        mbk: rcm smp ldc vcl
        bxx: scs
        qdl: plb fzz hjf prr
        rzr: mcx smn nsx
        lmb: gmv zgb pqk rkt
        skm: lvm qns vsc dcd
        spt: psb srp bkq
        dfl: blc pbz ffg hnn
        hrd: nsr qgs
        csm: vxg nsx
        rbh: std
        vzc: jbk
        xqd: sjj
        jpt: rcf
        qrx: krl njk bmp
        rjq: tmf xss vbn
        jfx: pjm zdj dzl xpb
        mlx: rrz lrn qqk
        hpp: jrv smn mcb jlq
        glv: dll xlc
        prv: vqb qsk szr
        fgv: pbh gtv
        gmj: zdj qdk csg
        bms: dzf fkc vkq
        rts: bzv pfl qnn
        hqh: ltm drx
        vds: mqm vnb jqr pdq qpq
        vrq: vxg pnm klg bkq
        ndt: hnm dkn mvq
        lrx: hhd
        fnx: xmm vrv vcz ccf fht mhd chx
        nxb: qrt ngb rbc
        pgh: bdh
        dsg: bqq dhs qmz qfj
        vmz: fzv xmp gpn
        jgc: nmr xxk pgv pvl
        mxm: gmj sdq
        kbv: lck
        sxv: bsd tsf
        jqm: ljt bcl bfx chq
        xmc: gph dsr jvr
        ngb: dcx
        mcb: tnq
        lrr: chx svq qsx nqk
        lsg: zjm qkm xbv
        hcf: vtv lnt
        cmb: rcp ccf
        fzz: vsq mzl hfx
        tbj: cqq lzv
        nvl: hnn
        jht: llp hxn
        tqh: dxd gkl
        zfv: pjn bvp
        bvq: bmp zmc
        ssq: rhs mdx gnx dbn qgs
        vsx: qtc qpn vjb
        bjf: gkb jfg mtb npp pgs
        lvz: tlg tdb bvg fml fqk zks qjv
        zbh: jqr gjz
        fhn: pmp ltm
        jld: grs mpk
        jcg: sns pfc
        xpf: hhr hxp xdb qnp
        rvr: zjf thc
        jls: vrf zhz rxj lzp vpk
        pbz: ldn qml
        nrr: lsc vth zgk
        rzn: vmk hxl lzv
        sgz: srp
        hls: ktn sfc jcn prt
        nsq: crj tgm jvc
        sjv: mnd qxl lvc
        ntf: sfq
        gsk: ggq jtr zkv qdk
        smp: cbm
        ntp: kbq ggf
        vhb: kvv
        dlp: hqh kpl kjv cgz
        tdp: xqk fhn rks xng vrn lrq qbh
        smc: rcp fjf
        fqp: tnn jdn gls zcb
        fcd: krj sfr mdl xhc
        mxc: cll
        tdb: zhl qhx dzn gld
        mmv: brq vvb zgk snr
        zhn: gbz
        mcv: htn mgt
        qnt: hts spx
        cng: gfz tnq
        zqt: mqm
        kvq: jjz crv
        crk: fzf
        dzf: xlc jpx
        qhd: rvr mzl bjv rgp
        pns: jtr xpg xtx vfj
        jqr: qrz
        jzn: vnb
        zqd: kbc
        bcr: zzp mtj gqd mrc zst
        jmn: vhb hlc phg vzc
        mdl: llp
        jpq: bdh qlt hht pxx
        qkm: jrv
        qtr: ffn
        flq: kvl qrx rzk cxj
        hnd: tkv
        rsd: csr tvg hvx mck
        mvk: hts cdr plb sbd jmv dqm cmr
        dpp: qrz bxj
        bsk: dkl kxg svp nbp
        fnt: hzg
        flj: tlf hmf
        pfl: zcz smc
        rkx: bbp dss fxq fll
        ctn: vln tbj
        hbs: jlq zdj
        hrj: nnn
        lvj: smp pzf rcs
        vtl: shn ngb fmx
        vtb: gmr zpg ztc
        lkd: ldl vlk nfj rpr mxz
        sfq: hgz
        zgr: btd krj pdx
        zvh: mrd brq xcz
        qtq: zds ngb
        zqp: csr
        kcz: lzv mvd
        mtb: zsz
        sns: kxq
        bvn: fft vhq qzr gdq nqx
        xzc: lth svp ztd
        flr: jrt cfv scs srm
        qtt: jrs gmr jlb ckq mfc
        bbs: plx fzf nnn knm mnd
        bcl: fkc xdt
        xdl: dbn
        jfs: lfn jxs zfj lcg
        rkl: hbs bxx cvl nvl
        jhl: bxj bgm lck spl zlt
        gjz: jqc dqs
        fxv: tgl
        bnf: fnt zzp
        pcb: nsj kvv
        cbm: btd
        glp: jzk lrs vqh
        hdm: kft
        gmv: pcj gqd dbn
        vnn: zhz bvp fxq
        vhv: gpc vvr
        ctl: rrk mgt frj jxg
        rhx: stk dpm rbc cgh
        szf: hxl vnc
        gtc: zqt nsr vft rgv
        ksz: hfb hnd
        bgm: pmp psl fhp
        nth: kmx rrq xvv
        dnl: tzh fbl qjl
        zfj: nzh qkt lqz
        lrp: vkq
        dbf: pzd zks
        gkj: hxp gkb
        hzg: csr
        pzn: spt lrm hrh ztc
        lhf: gdq czx plj
        rkr: lnh
        pjf: nkq gbx bpc dnl tbv
        srf: hsr nqk
        pvg: llk
        qcb: dmf sgt lrp
        qxf: qsd vpq slk jnp
        cdk: gpm qhr qgm
        pvr: kxg ncz
        qjm: cql mjk mds
        vgr: gfz smv nnn jxg
        hzx: kcf
        htn: smq
        qhr: fml
        sfg: kxz tvg tvz
        tfz: dmk npz nvn
        sbm: pjn
        zhr: vqn kvc fzj qmz
        qzp: kbc
        mmp: nsk pxf zhz kpn
        psd: mxm xpd frj
        zjf: zmf
        dsr: qkg rlk nvn
        gcz: jlq dpv zqz
        mvr: vrk dgq ppc vsq
        thf: ddf tnr qgj ncv pzv
        btz: sdp qzp czx zlh
        dmg: fhs fkc mxz jvr
        ptx: fmx
        rbc: sbm
        bzt: ndk jcc kcf
        ztq: kkt cll qgk
        rhb: vtb jtr htd
        vsd: zcb htv
        xdp: ffn
        ddv: fpl pjn knm
        hfc: gbn hxd
        hhh: mqr mrc
        ffg: frj kkg
        fhp: lrq znx jmr hqh
        llr: vdz qqd qrs csr pnd fks
        cvb: rfh phq hxl tsf
        khc: dpm rkl kkg zfv ktr rrz lzp
        qkl: kvl bxj
        bzl: lnt rkx zgx
        zpz: npl
        mdp: lth nrv vms dxx
        vdb: jcn pvg ksz fxg
        lqn: zhz jld
        cpc: zbx vzz vlm dcq
        hgv: qkm jqc sjv
        kdf: tbd slk qqr qzr
        fzq: kdb xdb
        fqf: ktj mrd
        mvq: mbz zhn
        qvr: jdn tvz cvj bml
        dqg: dcl rxq zcz
        vzx: pgv vfj
        ndz: ltr vsn dcs gjr
        qrz: bmp
        hjf: lss pkk
        ntx: klp vcb qfp pld crp
        xlr: fzj
        czx: qlp lxg rcs
        vpf: rsq zhz
        ndk: vnb
        fkc: tsf
        vgk: hlc fvx fnf vcl
        jxg: pvl
        nvx: rck hdm lxp
        vtk: qxl rsq srm hjp qgm
        hzl: mtg tpk zrn bxj rrz
        jjc: ktn lzh gzg gqk gkr
        htd: lvc qmz zqp
        ddf: rpb
        vvh: sjm nvl krl bqz
        sqh: gkl gmr
        qhx: shn nqm zcb
        fvj: dmt sfq xjm jzk znv
        krb: jkk hrb hgp
        vrg: lnh
        klk: scc bfx
        cjr: vvn jnp jht
        vsn: lzh szf sxv sgt ntp
        dsx: tdj ppc cql fdt
        frj: dzg
        gkq: kzx
        fnz: nlm
        mdg: sqh dqs hht
        hrh: rrk lzp zqt dpn
        sgt: glk
        tmc: nlm hvb
        psc: vnm lqn csf xbv klg
        grr: brh gpn lpl
        blh: cxt
        rkt: csg hcc
        mtg: kpb rmj lbf
        lmx: nzb sdq gmr
        mck: xpb gcz dbf
        pbs: ftv hlx bzl
        xnb: bbk cfv smn
        fvd: smn nzd qqz gtb
        pqk: mqr
        bhc: sns vrn
        jbh: psl xjb ksp
        gvz: hfc ppk lrl dxx
        jlh: pcb
        qbh: lsq dsl rkr
        rsl: stj nsx dtl mcl
        lkv: hzb lrx
        jck: jbm lvj ncz
        vtv: nsr
        gph: tkq drb
        rrp: ckq mtj stk rgv
        dvx: jbk rvv lth rzn dnc
        ktr: rht hcf kbv bvp
        nmc: mmm jqc sht
        vvl: slv pbs xml
        vvn: vqb fzq mpv rcs rcm
        gfn: pbn dkh mxc
        hhr: kkt
        ljc: qtc cxj mhq
        kvg: xcz jpt hgz kvv
        qsf: qgm lkv zst tnc
        bsq: krj dfd qgl
        xkx: bzr jld vxq xlr
        lhx: zgm vhv kft
        bkq: hzx
        pzv: vzz nvd
        bdv: hsd ffd hzf jgf
        slh: qnt nsj qjl
        mbm: zpg shv kdp fnt
        rlb: svk bnm
        bks: vcl prv crr xlc
        nzd: ksp cqx trf tcn
        bdk: jbk fnf
        thc: zdx tsf
        ffq: drj vqp rrq bht
        tsm: kdp klp zgx pzd
        smq: fzf drx
        qbn: gkl
        tdk: tcd qnn nvx xds rcp klk
        vqp: bsd tbd ppk
        zph: hsr bmt cjr
        ltr: lth mgv mds
        zck: xbg rrz
        gbj: cjz cxt nmg
        rmp: ldb lrl cjz rrt
        lqb: kzc ndk
        pnd: dqs rkr
        bnm: tnk hpr
        lrq: qms
        zdx: fnz tnm kjc
        qnn: qlp
        dfd: rjg sdd jhj ptq
        spx: nrg
        gmr: bth
        tnn: src trr
        ftv: psl jgf
        bbd: cgs
        ppm: csg bqq dzl gqd
        tdh: ctn qth qsd kzl
        qcl: zxz
        lfc: mrd hgz rcp
        qqz: vnb vss qbn lpc
        rxq: pbj
        pld: bqz lrx
        scz: zfn qlg dll tcd
        qjx: pvz znx lsg vbq
        flh: qgl sfc gsz
        sxt: tcd pjp pbg hjf
        bxj: tmf
        xtg: vxd lgt jkn qgj xxh
        vxd: tcd fsc zft zth
        qgk: qsx
        qmv: hqm
        vxk: cmb kqv
        crq: bvg
        vpq: vnc
        bzn: tbx pjf ggd scd xgh
        qkf: lgq lkp lqz chq
        scd: mtb dfk
        xqb: qkl ptx
        rgp: mkj qqr xgh
        stz: zjt nsx kcn kpl pgh cnq
        rpr: qlk
        tvb: hlc nmg rrx
        pnj: blh
        xvv: qcl
        bfx: pqm
        tjv: vqh lgq vzc pqm
        qrk: hgn gpn llk rqf
        vlz: mbz xqk gqd phf
        qqm: rlk plb
        zqm: cfc qmz sjj
        tqr: mmx cqx bxx ngj grt
        qjl: nnz
        nbp: pdx kbq dgq
        hsr: qtb zxz
        hqm: rcf
        rdh: gls jqc xtx qtt
        cdf: ffn dzp qxl bln
        tgd: hqf rhr lzp qtx
        hjp: dtk mbz
        gbx: jbn
        mzg: tlg fmx
        rld: bfp tmb lgt szf
        llb: dkg nkq xmm
        jrs: vcb kxz kmc jbh
        dcq: vpq
        rzp: gvj lsh fxq
        rhs: qkm
        ccb: dcr vvl kcf kkn
        kzs: nhg vzc tlf
        crz: gnx
        xzp: vxk cgs hlv
        zcp: zjm snb gbn kmd bfc
        hnc: mbk kkt lcg dkm
        fpl: zlg
        bnx: gsz vnc hfm pkj
        ljt: pln rlk dgq
        vfj: zst
        kqv: gbj hgz zkd
        fbb: crq fnt bvq
        xtj: llm kjt kdp
        bml: mtj fnp frp
        zft: spx xhc gkq
        rjl: cfv hrd
        nqm: lsz
        xsr: bvq svk khr
        vhj: xbm crz bnm rsl
        fxg: rrt
        btt: gbz zmc dbn mdj
        vpm: xlc bpj vhv
        nbv: jlb jcg sjj zzb dtl
        vcs: vsc lqz
        pkn: ffs gkb glp
        plx: tpk qlv xdp
        vrb: ssv lvc zcb
        kpc: pqk dcr
        xdt: pkk
        lxn: vhb ktj hts
        zth: vlk
        lss: sfh
        gpb: lkv tzf
        fhm: gnx ptl cnz gtz
        zfn: vvk hdm drq
        kjv: mrc nmr smn xkk
        tkv: jvb
        jdn: tvr
        jnk: fzv lpl dvx
        vjb: mcx qml zgb
        ttf: vgh qzn
        hvh: gsz hnd
        vjl: cvb brh hts ljt
        rqf: ttf xmm mzl
        vjn: mhp
        msq: qqk csf vqf rjb gqd
        nfj: fth vpp gds bsq
        vpp: krj fjf
        pbr: drq mmb qzb
        dml: ffd vqf
        mgv: jxs vnc xrp
        dxv: msq gkl mlx rqg
        chc: lnt pbl qhr vss dpn
        vlm: tcg qjm kjc
        nrs: qnt pbj pvr ljt qkt qzp
        rrn: pfl dmg ctm dcd nxk lmh
        jcc: hpr mrc
        mdb: bhz tnr ppk
        tbx: sdb bsd tgj gbn
        ffk: tkq lkp jvn nxk
        xkf: rcp
        hgn: mdb jjc rrm ldb rjg
        gxx: nsj bzv mzt dcl gfn
        qpl: dcr
        nqj: cbm ppc qkg
        kjm: zhm lth npx
        zrn: gtb shn rbc hzb
        msz: qxq dzp ftc rzp cdd
        vqn: mpk kxq tzc
        cch: mtj dfc
        xcn: pxm qbm dlp gks
        zbm: ldc tgj ngg nsj
        gtv: mbz fxq
        rmj: fxv
        pgp: pbg dqf hgr dcq
        qnp: rrq
        kkg: crv
        npl: ktj fth
        mqm: vbq
        jgt: zsz rfh nmg
        stj: qml ngt vxg
        lpt: xpd kcf
        gnp: lss
        dcv: fzj jvc ckq
        snl: ggf
        npg: gls qmz xtx srp
        qcn: bpr zcz ctn dxx
        hxp: ljt dzf
        ngg: xdt
        zgz: rpr vvr vhb
        xjm: lmh pjp drq
        mfc: pmk xtj pzd
        rnb: dfk rvv npx rgb
        lrm: fll pql zfv
        xtc: crv
        hnm: stg fnt
        sdj: jmr ksp rzk khf
        vtj: qtv pmn tht drq
        ddx: ksg pmk hbs
        hht: hgd qpn cnh
        mpv: pln rfh
        zmc: dtk
        znv: xgt ckl rrm
        kdn: gbn zgm pkk lxn
        dxd: jxr
        jcn: fjf hvl qzb bsd
        zgk: snl xqf
        fll: rqx tmf
        nnx: lsz
        qfj: rtn hjc cfv
        jsf: bhc cpb drx
        mdx: ssv
        lqz: hmf cxt
        kmd: ldl llp
        hdl: hrr xzc hxn blh
        nsk: mdx rkr tvz
        rbt: cfh kss
        crb: qdg mgh gjz zgn
        xmp: thr
        zhm: dmt hvh kjc bsn fzv phg pvq
        cmq: mfl nvj njl rlz
        rpg: pxx
        jsp: sxk dsj xtx bbn
        vmx: xkm ffs xcz vcl vrv
        prn: jzd knm khf hhh
        kvt: zgm chq vqh
        jpg: bbm xml hpr
        zpg: kkp
        nzh: fqf zmf llp
        khf: hhd cng
        lfn: blh
        prc: grs qxl pbl qqd
        kps: dss zqz rmj vtv dml mxv
        dlz: ztd pln qlk tbv
        zsk: vpf trf
        rkz: vms kbc kcz
        fkb: ggz mfc mxm
        tlr: tnn cfc zqz xpg hpr
        zdp: kjm pbg jgt gph
        bzv: gpn djs npz
        hjq: xmc cmn tmq pqm
        dpm: rmj gtz
        txt: fnn
        skr: bth ldn zst
        pqm: vsc vmk
        vbn: tvr kpl
        nlh: qtq rzk jzn
        pvj: hvl sqk glf cfj
        mkf: tkq hfd vcs tzz fms nrg prv
        vft: gpb kpc vsx
        pdq: cgh nmr
        bbc: grt cfm rkt bbp drl hrj
        lsc: rpb
        jfh: klk xpr bhz ckl xds
        jcp: bxj gdp ndk bpx
        hsd: zzp
        pmp: hjc
        mcx: cvl
        xqp: lrs rpr
        qtx: ptl xsr xdp fpl
        fbs: frj btt sqt kkp
        tlf: rlk bsd
        ldc: kmx dnc tlm
        xbr: qdn nth pjp gzl
        tzz: xgh pzv ngg
        ksh: rbt bfx mfl zlh lrl rql rrm dkg
        sts: qzb svq xdt chn
        hrc: kpc vqf jqc jjz
        lmh: sfh bxt zsz
        vcb: lnt
        vgh: pbn bpj
        bpc: fth dgk llk
        mhq: kxq dgc
        dgq: xkm gzg
        vnz: hzf mbm xjb xkk
        chn: qgk fqf
        hsb: pkn vvb rkz drv rqf
        jbj: ghn ffn
        zlg: fxv
        qrp: xbg hrs qlt
        jjf: zqp xjb srx nsq llq
        psr: gjf xmp kvg ztq
        ckj: glv vsc zcz
        xdq: bjv rbl zlp mgm mmb vms
        ldn: stg dtl zhn gbz lsz rbh ztc
        npz: spx
        fsc: fzz tbv znh rck phq
        psb: dmq khr htd
        vsg: hgz chx lxn gjf vgh
        qrs: xlr mbz
        gtz: pvl
        kqg: xvg xxm xmp
        cmh: zgr bzs pvg ndp
        kkt: prr
        tcg: gzg vmk hvb
        vvx: bpb lpt qdz pzb
        hdb: pgv shn jgl jcc
        ggz: zzp
        qbm: fxv
        rlz: brd cgs hnd zkc gnp
        fdt: ntf bvv
        klp: qtc
        sjl: jsf bvq bbk qms vbq rks
        klg: pld sgz
        ptq: rcf dkl
        jtr: djv vjn mfm
        xxh: drv hrr nqj tgn
        tnr: kss
        pfc: bdh
        nrv: hnd jht
        nmr: hrd zks
        msv: cdr rlt nzh zjf
        mmm: vdz
        vpr: vzc nfc srf bpz hjf
        trm: frt pzf vcs xvg nnp
        bzs: tvb fvx sdh
        hdd: fnn bhc tvz
        ktz: rcp
        qmh: gjf lcg mdl zth
        bcc: sqh nmc jcg cpb dtl
        jqf: lqn shn kvq xqk
        mqr: pbl
        glk: jbn lxg lrp
        jqs: nhg sgt
        ckq: fxn
        tmb: ptq nvj znh zbx
        jnj: tlg fnn zgn
        nlv: bxv
        zjt: mcb
        rhr: vdz zjt sxk xsb
        jmv: jck lrp dmf
        rgf: dnl bdk grr bbd qlk rct
        lxp: rrx jtp jqs fms ffh znh
        qdz: zjm nlv
        dcl: lfc scc
        qjv: src pxm
        hfb: zxz
        qqr: snb
        hgk: prc fks dpb qhx
        xgc: rlt dsr kxg xvv hlv
        kkn: dpv pbz ssv
        nfc: qns gbx
        pcl: rlt
        ldh: pjn jxr trr mnd
        vln: ndp
        zkd: cfh nvn cvr rjg
        dmn: znc phq qth cfh tmc
        lff: dcs smp
        hrr: dxx jht
        lvm: tkv
        krr: kzl rts hfc sfc
        fjt: hdj lqb pld pxf std
        hdj: pql bxv shv rjb
        gxp: dsr nnz jlh
        rrk: zpg rdq
        qzn: nmg
        jzk: khz bbd
        qkt: fnz dqm
        mkv: rbh ngt dzn hgd xqd
        jtl: mfl qqm krb kbc
        hxn: rpr vkq
        npx: jvb ndp
        sgv: jhd qrz ftf fzf
        smv: sxk zck dcv rdq
        nvc: qbm dcx
        zkc: scd pcl nhg
        brd: jnk rcp
        ffh: cmb sfq ztd
        qpq: crk xbp zqp sht nfm
        nqx: gph hfx snb
        jzm: zdj dnv ffg fhn
        ttg: fvx tbj rpr
        qxz: vpm hmf gqk
        qsk: rrq rfh
        bln: vbn xtc
        pcj: qnq qlt xtc
        tcn: xjb qjv
        tmf: gfz
        fbp: nqk phg tzh
        tgj: gfn hrb
        drd: phs pbz tbf hnn
        cfg: smq rzk bqz
        jgs: mgh lrx pgh
        xpb: dhs vpf
        dkh: bfc jvb
        rsq: fzj
        vqh: hvb
        nvd: ndp jkk cbm
        sll: sfx vmz lzh zlh
        nkb: npz rql qsd dqm
        sgk: bdk fzz nmz pgk
        csr: scf
        fht: qth lrs qqr
        dss: scf dtk
        bfp: qkg ntp
        pvb: dkm ckl kft btz hlc
        tzf: tgm
        xkk: tgl qhr
        qtv: pcl qzn
        hzd: mqm drl mcx mhp
        ggd: rsg qlg rpb
        blc: hzk zhd bth
        pxf: vjn jxg
        znx: bqc sbm cqx
        xxm: rbt ghp
        zhb: tfz zqd fvx vpq
        hdf: ndp khz
        rgb: qqj xrp
        lxd: rpr mjk ckf kcz
        xsb: hhh kbv
        vsq: xqp
        cvr: hlc kvt
        fcx: mvj mrd slh xzp ttg
        bbn: gvj skd htv pmk pjl
        xgt: znc
        pjt: jlh pbj dmf zjf jht
        llf: rmp hfc zft snl lhf
        dzp: ffg dpv pnd
        bxt: drb ncz drv
        rfg: gdp lgm ngt
        xlc: qzr
        jpr: dml qrx kvl lgm qpn
        fks: crz tvr
        bcp: bfp lqq dfk kxg
        xzz: bcr ksg dxd lnt
        kjc: pgs
        cbr: ltl bvp vfj sxk bvq
        sqt: hcc rgx psq
        slv: pbs ggq mmn psb vcb qgs
        nnb: xqk qdz jlb
        sdh: kss pln
        hvx: pqk mht trr
        rck: dkm
        bth: ptl
        zjs: bvg bqc nnb rjl
        kdb: hxl jhj
        jxs: hqm kzx
        tlq: zgk tmq sbd
        bbk: drx
        tlm: zsz
        hqx: bbd gkb
        lbf: mpk hzb
        dkn: nvc stk qnq pzd
        hgp: gjf gkq
        vnm: mht tgm qbn dpp
        pzb: cpb crz
        zsg: fml jqn nnx qln zlg smq
        vsv: xqf slk hqx vth
        vdz: pnd
        gzt: lss ttf hqx
        mfl: vcz
        hrs: lnh ngt qdg
        plj: qmr lhx bcf
        fvx: nlm
        tss: jpt ktz
        vzz: jbn
        ztc: htv
        kkz: svq vrk tmc
        hgd: qgb
        cmn: pcl nnz
        jbm: hsr kft
        rmr: fms jlh xzc
        vrf: jpq dmq kpn
        dmf: sfh
        qfc: klp qqk
        drl: ghn
        jnp: drb
        jqn: gpb njk cvl
        nnf: gnx
        lfz: thr kzx dkg
        rgx: kjt cgh xrv rpg
        bjv: dkh dqm
        dkg: mkq
        lnn: pql qqd ghr fkb
        phf: pvl sjm
        gpv: jfz ggq cxj qtc
        bbt: xgh sdp
        spl: dxd ffn
        fzv: bpj
        xqf: ckl vhb gsz
        rsg: nsk qsd tnr ngg
        drj: zbx snl
        qtc: txt
        rcm: djs vpm
        bvv: pvr cvr jhj
        hjt: kss ldb dvx nxk
        dzg: smq gkl
        ldl: phq jkk lrl
        xbh: rxq lfn ztd brd
        tbd: vln qsx rjg cnc
        prt: cqq gbn qmv
        vxg: vnb
        zgx: dpp dzg ptx
        cqd: scc qdn fft gkj
        ftc: xdl qrt gvj
        mxv: bbm lnt crk qkm
        cfh: prr
        tzg: jqn nnf pgh kkb crq ghr vrn
        pbh: bqc fnn
        rzk: hzz bbk
        xgh: zxz khz
        zzb: drl gls xjb crk
        cvx: qcb mkh qnp rpk jpx
        cgs: vkq
        bgk: qpl kdp ggk ltm
        hmf: mvd
        srx: ltm rjb
        fkq: khc sfg qrs crv
        zsn: qcl nbp qlp rlt
        dvg: dll gsq zfn ctm
        gnt: bbp bcr ntk
        zvn: spl zhd nsn rlb
        gpm: nqm
        pbd: hfb jbk chn fjf
        tdj: qth hqm ktz
        mxz: vqb ddf
        frt: pbr znc qsx
        tpk: pbh jmr
        qsd: gds
        tbf: vjn fpl
        nqc: vnc jqm ckj tcg
        qgb: jgf qtr sns
        dmq: kcf
        pzl: mbz xqd dcv hpr
        qgl: jbk
        rsn: tsn fxg bpf bms rbt
        cnq: trf cdk fqp
        lxv: rdq srx crj mqm
        mjk: blh
        rxx: mdj xxk nnf ljc crq
        bqc: bmp
        rdp: vqb vql mvd pjp
        srm: stg lpc
        ctm: rrx
        mdj: rkr lck jgs zds nnx
        kbc: rql
        xds: ncz nrg
        rdl: fbb bqq zqm
        kvc: djv mhp
        pbn: xgt
        zcl: ndz glk jtk cqq
        crr: mhd qmv
        vvk: rpb gqk
        hqf: vzx hhd
        gjr: fnz gxp sfx mtb
        vql: fjf dnc ddf xkf pbn
        hkh: ksz fqf nvn
        mmn: ngj mvq bqq
        jcq: bth std txt tvr
        pdx: mvd
        kpb: tbf rdq pjm
        kxz: cfc cch csm
        ddr: gks xbg qms dpb gdp
        mnd: htv
        hzf: jgf fgv
        cvf: dmt gkj jqs lxg
        khr: rhs xdl
        mkh: prr cqq hqm
        nmm: cxt fdt lgt vsc
        fnp: cfc bkk
        gkg: gnp rjh jlh
        hdr: zph jql dmg fnm vpp qjl
        zhd: qpl xbv
        pkj: cql
        rqg: srm
        mvj: pkj nrr czx
        mkq: pbj khz
        djf: nfm nsq zmc rgx
        nmz: bht qmv
        cdd: vxg qdg qms
        snr: lmh bzd zbx mmb brh
        hnn: htv
        tvg: nst
        rrt: cll mkj qzp
        qdg: fxq
        bcf: dll phg prt
        bpz: ctn qzn qdl
        qpb: lrs vvn jgt hxl
        lgm: xrv
        cxj: ngb bqc vnn tcn vbq
        bbm: xtc qtr
        mgm: zfn dfk
        cdr: vvr
        hzk: htn njh sbg
        jfz: mht frp mcb bbk
        rpk: rfh pdx
        qbt: kvl fnp pxf tzf
        zkv: zsk xqd xrv
        rgv: znf ftv trr
        bhz: pvq mxc tzh
        cnz: jrv cnh rzp
        pxm: lkv tqh rpg
        lvf: gtz xrv stk rhs
        krl: zbh
        bmt: hdf zxz
        tsv: bml lsh bmp jpg
        qns: nrv hhr
        cnx: zcz tzh fbp gqk
        ctc: pnj jnp ctj thc gkg sdh
        zds: kvl drx
        cmr: kbq nfc kss
        hvp: mxc tss fbl
        zlh: qzr
        sqk: djs nqk qtb
        qrt: xpg
        ncv: jtk jhj rcs
        fvh: ndt lnh vrb prn knm
        zvm: fht ccf dcs cmn
        dhn: qpn shn
        src: drx
        qxq: dpn plx hnm
        jtk: hxl
        pgs: thr hfb
        szr: zpz tkq
        khj: pqm bsd
        cfm: lsz psd
        cqx: qqk
        pvn: lgm njh csg xbg
        vth: crr hrr
        tsn: xkf xvv gkr
        bss: rzr fhn zgb djf jqr
        tgn: fbl pcb zjf
        sdq: zdj
        crj: grs rtn
        phs: kkp csg
        tmq: hfx xqp
        nzc: krj bhz khj rts
        mcl: hhh lrq jbj mcv
        xss: sgz
        kvp: ldl xxm lff znh cnc
        rvp: chn xdb bvv sss hxz
        jxr: nzb
        nzk: bhh npz kvt kdb
        gkr: fth drb vcz pvr mxz hvh
        crp: crj mgh
        zlt: tnq pzb zqt
        pjl: fkb mdx
        sdp: lcg djs
        shv: xqb
        skd: rqg lhg gls
        bsn: vms hgp
        djv: gbz
        klj: qtb szr lcg mkq
        mkj: bhh
        sbg: dtk
        sfx: thc jpt
        srs: lgt bhh pkj ctm qqm
        gmc: sht sdq kvc frp
        pbg: npl pvq
        jmr: kjt
        gsq: hdm hgr rct
        vlk: thr vlq
        xnj: lbf mgt csg gdp pnd
        mhd: tvb tmc chx
        hlv: flj mds
        nzf: qqk xdl pnd
        lzh: tkv hrb nhg
        jbn: xkm
        hlx: tnk ggq xxk
        hhj: ggz qbn cng hcc
        cvj: rbh
        dnm: tlm ntf vrv
        bbl: tqh cdk xpg sbg xpb
        zqv: mhp qdk xsb qqv
        jql: rgb pkv bcf lvm
        njk: trf tmf
        bhh: kkt
        lgq: mzl hvb
        kpl: htn
        nvj: zmf dkl
        hfs: znf gfz zbh hjc
  recorded_at: Sun, 16 Mar 2025 02:36:20 GMT
recorded_with: VCR 6.3.1
