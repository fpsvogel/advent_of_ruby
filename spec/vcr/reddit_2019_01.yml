---
http_interactions:
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:42 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=uPZPt5kyZFqUDH1107; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 23:06:42 GMT
- request:
    method: get
    uri: https://oauth.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '64109'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      access-control-allow-origin:
      - "*"
      access-control-expose-headers:
      - X-Moose
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '29'
      x-ratelimit-remaining:
      - '71.0'
      x-ratelimit-reset:
      - '197'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:43 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - loid=000000001ksigdidli.2.1741475202330.Z0FBQUFBQm56TTJDYjViODY3b25Da0JPRFFqTTRoeXBsWDB1ZTFqOU5mLS03YUU2ZnpLTy1YYmxqTGpUcFRUeGhMak83dm1TVGZPSGpGOUJhRm5WcGRfY01ZRTIzUGFJSVJoTGtIc2ljY2hqLV82VVlubG04bl9RNHBubk5XZWMzamF1WTFzbjk3aDM;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 23:06:42
        GMT; secure; SameSite=None; Secure, session_tracker=cdbbmqrqqcndjnoblc.0.1741475202348.Z0FBQUFBQm56TTJDTWpoS0U1MnNhM1dQSF9ReVBvelpEbVo1YkphdGQ3UlJERmVnNDlocmpiRmFBM0lCOHdmcTJRWXhyX2cwTXQtZnBOSzRUREZDaWJnRjhwSFRhSFZjRFBCUk8tS1dkVW5vcXhNcUtKcjZKRF82SWhKMzVQOE9hZkJNaGdwZkJNeEs;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 01:06:42
        GMT; secure; SameSite=None; Secure, csv=2; Max-Age=63072000; Domain=.reddit.com;
        Path=/; Secure; SameSite=None, edgebucket=RX1mdO0O7DXWbjReUo; Domain=reddit.com;
        Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '[{"kind": "Listing", "data": {"after": null, "dist": 1, "modhash":
        "", "geo_filter": "", "children": [{"kind": "t3", "data": {"approved_at_utc":
        null, "subreddit": "adventofcode", "selftext": "It''s the most wonderful time
        of year and welcome to Advent of Code 2019! If you participated in a previous
        year, welcome back, and if you''re new this year, we hope you have fun and
        learn lots!\n\nWe''re going to follow the same general format as previous
        years'' megathreads with several big changes:\n\n1. Each day''s puzzle will
        release at exactly midnight EST (UTC -5).\n1. The daily megathread for each
        day will be posted very soon afterwards and immediately locked.\n + We know
        we can''t control people posting solutions elsewhere and trying to exploit
        the leaderboard, but this way we can try to reduce the leaderboard gaming
        from the official subreddit.\n1. The daily megathread will remain locked until
        there are a significant number of people on the leaderboard with gold stars.\n
        + \"A significant number\" is whatever number we decide is appropriate, but
        the leaderboards usually fill up fast, so no worries.\n1. Top-level posts
        in Solution Megathreads are for *solutions* only. If you have questions, please
        post your own thread and make sure to flair it with `Help`.\n\n### The big
        changes this year:\nWhen the megathread is unlocked, you may post your solution
        according to the following rules:\n\n * If your code is *shorter* than, say,
        half of an [IBM 5081 punchcard](https://www.si.edu/object/nmah_690505) (5
        lines at 80 cols), go ahead and post it as your comment.\n  * **Please** consider
        using old.reddit''s [four-spaces code block formatting](https://www.reddit.com/wiki/markdown#wiki_code_blocks_and_inline_code)
        instead of new.reddit''s three-backtick format.\n * If your code is *longer*,
        link your code from an external repository such as [Topaz''s `paste`](https://topaz.github.io/paste/)
        (see below for description), a public repo like GitHub/gists/Pastebin/etc.,
        your [blag](https://xkcd.com/148/), or whatever.\n\nTopaz has written a nifty
        little thing called [`paste`](https://topaz.github.io/paste/) that ~~abuses~~
        works specifically with Reddit''s Markdown in order to reduce potential code
        loss due to link rot, external public repos doing something unfriendly with
        their ToS, etc.\n\n* It''s open-source, hosted on Github.io, and stores absolutely
        no information on disk/database.\n* Here''s a [\"hello world\"-style demo](https://topaz.github.io/paste/#XQAAAQCDAAAAAAAAAAA6nMjJE7LToPqvlvsJ2nenmDHe//mymPoGTqWFhsXJHAuLqIWt0n360N//AvzmVWBSMmPxnVOKhehOCzzoL+LeDCJfipMzF8Ia9bzCnlBOMuFpgn7K2XxoU0mt4l7srIce9w1be5piYiDdYm9s8HB8s///zoTAAA==)\n\n##
        Any questions?  Please ask!\n\n***\n\nAbove all, remember, AoC is all about
        having fun and learning more about the wonderful world of programming!\n\n***\n\n#---
        Day 1: The Tyranny of the Rocket Equation ---\n\n***\n\nPost your solution
        (rules are [HERE](/r/adventofcode/wiki/index#wiki_how_do_the_daily_megathreads_work.3F)
        if you need a refresher).\n\nReminder: Top-level posts in Solution Megathreads
        are for *solutions* only. If you have questions, please post your own thread
        and make sure to flair it with `Help`.\n\n***\n\n### Advent of Code Community
        Fun 2019: [Poems for Programmers](/r/adventofcode/w/poems4progs)\n\nThis year
        we shall be nourishing your creative sides with opportunities to express yourself
        in ~ *poetry* ~.  Any form of poetry works from limericks and haikus to full-on
        sonnets in iambic pentameter.  Here''s how it works:\n\n+ 24 hours after each
        megathread is posted, the AoC mods (/u/Aneurysm9 and I) will award Reddit
        Silver to the best of that day''s poems.\n + Latecomers, don''t despair -
        post your code and poems anyway because we will *also* award another Reddit
        Silver 5 days later to give slower entrants a fair shake.\n+ Additionally,
        every 5 days the AoC mods will have a surprise for the best poem of each 5-day
        span.\n + Shh, don''t tell anyone, it''s a *~ surprise ~*!\n+ Finally, we
        will be collating the best of the best to present to /u/topaz2078 to choose
        his top favorite(s) at the end of December.  With a nice shiny prize, of course.\n\ntl;dr:
        Each day''s megathread will have 2 Reddit Silver given out for best poem.  Every
        5 days a surprise may happen for the best-of-5-day poem.  End of December
        = Poem Thunderdome!\n\ntl;dr the tl;dr: If you submit a truly awesome poem(s),
        you might just earn yourself some precious metal-plated awesome point(s)!\n\nA
        few guidelines for your submissions:\n\n+ You do not need to submit a poem
        along with your solution; however, you *must* post a solution if you want
        to submit a poem\n+ Your poem must be in English (or English pseudocode or
        at least English-parseable)\n+ Your poem must be related to Advent of Code,
        /u/topaz2078 (be nice!), or programming in general\n+ Only one poem per person
        per megathread will be eligible for consideration\n+ Please don''t plagiarize.  There''s
        millions of words in the English language even if we steal a bunch from other
        languages, so surely you can string together a couple dozen words to make
        your own unique contribution.\n+ All sorts of folks play AoC every year, so
        let''s keep things PG\n+ Employees, contractors, directors, and officers of
        Advent of Code and their respective parents, subsidiaries and affiliated companies,
        retailers, sales representatives, dealers, distributors, licensees and the
        advertising, fulfillment, judging and promotion agencies involved in the development
        and administration of this Promotion, and each of their respective officers,
        directors, employees and agents, and their immediate family members (parent,
        child, sibling and spouse of each, regardless of where they reside) and those
        living in the same households of each (whether related or not) may submit
        poems but are not eligible for precious metal awards.\n\nI''ll get things
        started with an example limerick and haiku:\n\n&gt; There once was a man from
        New York\n\n&gt; Who was a giant programming dork\n\n&gt; He made a small
        game\n\n&gt; And in droves they came\n\n&gt; Plz don''t make servers go bork!\n\n&gt;
        ***\n\n&gt; Hello, Adventers!\n\n&gt; Think you can make a better\n\n&gt;
        Haiku than this one?\n\n***\n\n###~~This thread will be unlocked when there
        are a significant number of people on the leaderboard with gold stars for
        today''s puzzle.~~\n###*edit:* Leaderboard capped silver in 1 minute 24 seconds
        (sheesh!) and gold at 4 minutes 12 seconds, thread unlocked!", "user_reports":
        [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false,
        "title": "-\ud83c\udf84- 2019 Day 1 Solutions -\ud83c\udf84-", "link_flair_richtext":
        [], "subreddit_name_prefixed": "r/adventofcode", "hidden": false, "pwls":
        6, "link_flair_css_class": "flair-solutionmegathread", "downs": 0, "top_awarded_type":
        null, "hide_score": false, "name": "t3_e4axxe", "quarantine": false, "link_flair_text_color":
        "light", "upvote_ratio": 0.99, "author_flair_background_color": null, "subreddit_type":
        "public", "ups": 111, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id":
        null, "is_original_content": false, "author_fullname": "t2_60niu", "secure_media":
        null, "is_reddit_media_domain": false, "is_meta": false, "category": null,
        "secure_media_embed": {}, "link_flair_text": "SOLUTION MEGATHREAD", "can_mod_post":
        false, "score": 111, "approved_by": null, "is_created_from_ads_ui": false,
        "author_premium": false, "thumbnail": "", "edited": 1575177528.0, "author_flair_css_class":
        null, "author_flair_richtext": [], "gildings": {}, "content_categories": null,
        "is_self": true, "mod_note": null, "created": 1575176444.0, "link_flair_type":
        "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type":
        "text", "domain": "self.adventofcode", "allow_live_comments": true, "selftext_html":
        "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s the most
        wonderful time of year and welcome to Advent of Code 2019! If you participated
        in a previous year, welcome back, and if you&amp;#39;re new this year, we
        hope you have fun and learn lots!&lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;re going
        to follow the same general format as previous years&amp;#39; megathreads with
        several big changes:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Each day&amp;#39;s
        puzzle will release at exactly midnight EST (UTC -5).&lt;/li&gt;\n&lt;li&gt;The
        daily megathread for each day will be posted very soon afterwards and immediately
        locked.\n\n&lt;ul&gt;\n&lt;li&gt;We know we can&amp;#39;t control people posting
        solutions elsewhere and trying to exploit the leaderboard, but this way we
        can try to reduce the leaderboard gaming from the official subreddit.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;The
        daily megathread will remain locked until there are a significant number of
        people on the leaderboard with gold stars.\n\n&lt;ul&gt;\n&lt;li&gt;&amp;quot;A
        significant number&amp;quot; is whatever number we decide is appropriate,
        but the leaderboards usually fill up fast, so no worries.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Top-level
        posts in Solution Megathreads are for &lt;em&gt;solutions&lt;/em&gt; only.
        If you have questions, please post your own thread and make sure to flair
        it with &lt;code&gt;Help&lt;/code&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h3&gt;The
        big changes this year:&lt;/h3&gt;\n\n&lt;p&gt;When the megathread is unlocked,
        you may post your solution according to the following rules:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;If
        your code is &lt;em&gt;shorter&lt;/em&gt; than, say, half of an &lt;a href=\"https://www.si.edu/object/nmah_690505\"&gt;IBM
        5081 punchcard&lt;/a&gt; (5 lines at 80 cols), go ahead and post it as your
        comment.\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Please&lt;/strong&gt; consider
        using old.reddit&amp;#39;s &lt;a href=\"https://www.reddit.com/wiki/markdown#wiki_code_blocks_and_inline_code\"&gt;four-spaces
        code block formatting&lt;/a&gt; instead of new.reddit&amp;#39;s three-backtick
        format.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;If your code is &lt;em&gt;longer&lt;/em&gt;,
        link your code from an external repository such as &lt;a href=\"https://topaz.github.io/paste/\"&gt;Topaz&amp;#39;s
        &lt;code&gt;paste&lt;/code&gt;&lt;/a&gt; (see below for description), a public
        repo like GitHub/gists/Pastebin/etc., your &lt;a href=\"https://xkcd.com/148/\"&gt;blag&lt;/a&gt;,
        or whatever.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Topaz has written a nifty
        little thing called &lt;a href=\"https://topaz.github.io/paste/\"&gt;&lt;code&gt;paste&lt;/code&gt;&lt;/a&gt;
        that &lt;del&gt;abuses&lt;/del&gt; works specifically with Reddit&amp;#39;s
        Markdown in order to reduce potential code loss due to link rot, external
        public repos doing something unfriendly with their ToS, etc.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It&amp;#39;s
        open-source, hosted on Github.io, and stores absolutely no information on
        disk/database.&lt;/li&gt;\n&lt;li&gt;Here&amp;#39;s a &lt;a href=\"https://topaz.github.io/paste/#XQAAAQCDAAAAAAAAAAA6nMjJE7LToPqvlvsJ2nenmDHe//mymPoGTqWFhsXJHAuLqIWt0n360N//AvzmVWBSMmPxnVOKhehOCzzoL+LeDCJfipMzF8Ia9bzCnlBOMuFpgn7K2XxoU0mt4l7srIce9w1be5piYiDdYm9s8HB8s///zoTAAA==\"&gt;&amp;quot;hello
        world&amp;quot;-style demo&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Any
        questions?  Please ask!&lt;/h2&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Above all, remember,
        AoC is all about having fun and learning more about the wonderful world of
        programming!&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h1&gt;--- Day 1: The Tyranny
        of the Rocket Equation ---&lt;/h1&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Post your
        solution (rules are &lt;a href=\"/r/adventofcode/wiki/index#wiki_how_do_the_daily_megathreads_work.3F\"&gt;HERE&lt;/a&gt;
        if you need a refresher).&lt;/p&gt;\n\n&lt;p&gt;Reminder: Top-level posts
        in Solution Megathreads are for &lt;em&gt;solutions&lt;/em&gt; only. If you
        have questions, please post your own thread and make sure to flair it with
        &lt;code&gt;Help&lt;/code&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h3&gt;Advent
        of Code Community Fun 2019: &lt;a href=\"/r/adventofcode/w/poems4progs\"&gt;Poems
        for Programmers&lt;/a&gt;&lt;/h3&gt;\n\n&lt;p&gt;This year we shall be nourishing
        your creative sides with opportunities to express yourself in ~ &lt;em&gt;poetry&lt;/em&gt;
        ~.  Any form of poetry works from limericks and haikus to full-on sonnets
        in iambic pentameter.  Here&amp;#39;s how it works:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;24
        hours after each megathread is posted, the AoC mods (&lt;a href=\"/u/Aneurysm9\"&gt;/u/Aneurysm9&lt;/a&gt;
        and I) will award Reddit Silver to the best of that day&amp;#39;s poems.\n\n&lt;ul&gt;\n&lt;li&gt;Latecomers,
        don&amp;#39;t despair - post your code and poems anyway because we will &lt;em&gt;also&lt;/em&gt;
        award another Reddit Silver 5 days later to give slower entrants a fair shake.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Additionally,
        every 5 days the AoC mods will have a surprise for the best poem of each 5-day
        span.\n\n&lt;ul&gt;\n&lt;li&gt;Shh, don&amp;#39;t tell anyone, it&amp;#39;s
        a &lt;em&gt;~ surprise ~&lt;/em&gt;!&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Finally,
        we will be collating the best of the best to present to &lt;a href=\"/u/topaz2078\"&gt;/u/topaz2078&lt;/a&gt;
        to choose his top favorite(s) at the end of December.  With a nice shiny prize,
        of course.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;tl;dr: Each day&amp;#39;s megathread
        will have 2 Reddit Silver given out for best poem.  Every 5 days a surprise
        may happen for the best-of-5-day poem.  End of December = Poem Thunderdome!&lt;/p&gt;\n\n&lt;p&gt;tl;dr
        the tl;dr: If you submit a truly awesome poem(s), you might just earn yourself
        some precious metal-plated awesome point(s)!&lt;/p&gt;\n\n&lt;p&gt;A few guidelines
        for your submissions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;You do not need to
        submit a poem along with your solution; however, you &lt;em&gt;must&lt;/em&gt;
        post a solution if you want to submit a poem&lt;/li&gt;\n&lt;li&gt;Your poem
        must be in English (or English pseudocode or at least English-parseable)&lt;/li&gt;\n&lt;li&gt;Your
        poem must be related to Advent of Code, &lt;a href=\"/u/topaz2078\"&gt;/u/topaz2078&lt;/a&gt;
        (be nice!), or programming in general&lt;/li&gt;\n&lt;li&gt;Only one poem
        per person per megathread will be eligible for consideration&lt;/li&gt;\n&lt;li&gt;Please
        don&amp;#39;t plagiarize.  There&amp;#39;s millions of words in the English
        language even if we steal a bunch from other languages, so surely you can
        string together a couple dozen words to make your own unique contribution.&lt;/li&gt;\n&lt;li&gt;All
        sorts of folks play AoC every year, so let&amp;#39;s keep things PG&lt;/li&gt;\n&lt;li&gt;Employees,
        contractors, directors, and officers of Advent of Code and their respective
        parents, subsidiaries and affiliated companies, retailers, sales representatives,
        dealers, distributors, licensees and the advertising, fulfillment, judging
        and promotion agencies involved in the development and administration of this
        Promotion, and each of their respective officers, directors, employees and
        agents, and their immediate family members (parent, child, sibling and spouse
        of each, regardless of where they reside) and those living in the same households
        of each (whether related or not) may submit poems but are not eligible for
        precious metal awards.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I&amp;#39;ll get
        things started with an example limerick and haiku:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;There
        once was a man from New York&lt;/p&gt;\n\n&lt;p&gt;Who was a giant programming
        dork&lt;/p&gt;\n\n&lt;p&gt;He made a small game&lt;/p&gt;\n\n&lt;p&gt;And
        in droves they came&lt;/p&gt;\n\n&lt;p&gt;Plz don&amp;#39;t make servers go
        bork!&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Hello, Adventers!&lt;/p&gt;\n\n&lt;p&gt;Think
        you can make a better&lt;/p&gt;\n\n&lt;p&gt;Haiku than this one?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr/&gt;\n\n&lt;h3&gt;&lt;del&gt;This
        thread will be unlocked when there are a significant number of people on the
        leaderboard with gold stars for today&amp;#39;s puzzle.&lt;/del&gt;&lt;/h3&gt;\n\n&lt;h3&gt;&lt;em&gt;edit:&lt;/em&gt;
        Leaderboard capped silver in 1 minute 24 seconds (sheesh!) and gold at 4 minutes
        12 seconds, thread unlocked!&lt;/h3&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count":
        null, "archived": true, "no_follow": false, "is_crosspostable": false, "pinned":
        false, "over_18": false, "all_awardings": [], "awarders": [], "media_only":
        false, "link_flair_template_id": "caf5e484-9c70-11e5-aa5d-0e1abaa211ff", "can_gild":
        false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags":
        [], "visited": false, "removed_by": null, "num_reports": null, "distinguished":
        "moderator", "subreddit_id": "t5_3b3wa", "author_is_blocked": false, "mod_reason_by":
        null, "removal_reason": null, "link_flair_background_color": "#000000", "id":
        "e4axxe", "is_robot_indexable": true, "num_duplicates": 0, "report_reasons":
        null, "author": "daggerdragon", "discussion_type": null, "num_comments": 736,
        "send_replies": false, "media": null, "contest_mode": false, "author_patreon_flair":
        false, "author_flair_text_color": null, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/",
        "stickied": false, "url": "https://www.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/",
        "subreddit_subscribers": 131311, "created_utc": 1575176444.0, "num_crossposts":
        0, "mod_reports": [], "is_video": false}}], "before": null}}, {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "fmqjmx0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ConstantGazelle",
        "can_mod_post": false, "created_utc": 1586300908.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_621xwdvt", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "[part
        1](https://github.com/m-berk/AdventOfCode2019/blob/master/Day1.1.py) &amp;
        [part 2](https://github.com/m-berk/AdventOfCode2019/blob/master/Day1.2.py)
        written in Python, (my code might not be \"pythonic\" because i''m just getting
        used to it)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_fmqjmx0", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/m-berk/AdventOfCode2019/blob/master/Day1.1.py\"&gt;part
        1&lt;/a&gt; &amp;amp; &lt;a href=\"https://github.com/m-berk/AdventOfCode2019/blob/master/Day1.2.py\"&gt;part
        2&lt;/a&gt; written in Python, (my code might not be &amp;quot;pythonic&amp;quot;
        because i&amp;#39;m just getting used to it)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fmqjmx0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1586300908.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "flqbxgv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "manovirajshergill", "can_mod_post": false,
        "created_utc": 1585388050.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 1, "author_fullname": "t2_1l1fqn8c", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Hey, I''ve just started
        and I''m using Jupyter.\n\nI put the input data into an excel file before
        reading it (100 input values)\n\n&amp;#x200B;\n\nmass=pd.read\\_excel(''Book1.xlsx'')\n\nmass\n\na=np.array(mass)\n\na\n\nb=a/3\n\nb\n\nr=np.round\\_(b,
        decimals=0, out=None)\n\nr\n\nc=r-2\n\nc\n\ntotal = np.sum(c)\n\ntotal \n\n&amp;#x200B;\n\nMy
        answer is way off apparently", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_flqbxgv", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Hey, I&amp;#39;ve just started and I&amp;#39;m
        using Jupyter.&lt;/p&gt;\n\n&lt;p&gt;I put the input data into an excel file
        before reading it (100 input values)&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;mass=pd.read_excel(&amp;#39;Book1.xlsx&amp;#39;)&lt;/p&gt;\n\n&lt;p&gt;mass&lt;/p&gt;\n\n&lt;p&gt;a=np.array(mass)&lt;/p&gt;\n\n&lt;p&gt;a&lt;/p&gt;\n\n&lt;p&gt;b=a/3&lt;/p&gt;\n\n&lt;p&gt;b&lt;/p&gt;\n\n&lt;p&gt;r=np.round_(b,
        decimals=0, out=None)&lt;/p&gt;\n\n&lt;p&gt;r&lt;/p&gt;\n\n&lt;p&gt;c=r-2&lt;/p&gt;\n\n&lt;p&gt;c&lt;/p&gt;\n\n&lt;p&gt;total
        = np.sum(c)&lt;/p&gt;\n\n&lt;p&gt;total &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;My
        answer is way off apparently&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/flqbxgv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1585388050.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "fdm28jk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "# Intcode Solution for Part 1\n\n    3,127,1008,127,10,126,1005,126,24,1001,127,-48,127,1002,125,10,125,1,125,127,125,1106,0,0,1002,124,0,124,1001,125,-3,125,1001,124,1,124,1007,125,3,123,1006,123,28,1002,125,0,125,1007,124,2,122,1005,122,0,1001,124,-2,124,1,121,124,121,3,127,1008,127,10,126,1006,126,9,4,121,99\n\nThis
        solution takes the input in its original ASCII format and outputs the answer.",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Intcode
        Solution for Part 1&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;3,127,1008,127,10,126,1005,126,24,1001,127,-48,127,1002,125,10,125,1,125,127,125,1106,0,0,1002,124,0,124,1001,125,-3,125,1001,124,1,124,1007,125,3,123,1006,123,28,1002,125,0,125,1007,124,2,122,1005,122,0,1001,124,-2,124,1,121,124,121,3,127,1008,127,10,126,1006,126,9,4,121,99\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This
        solution takes the input in its original ASCII format and outputs the answer.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fdm28jk/",
        "num_reports": null, "locked": false, "name": "t1_fdm28jk", "created": 1578538072.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1578538072.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fdf7two", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "__-----_-----__", "can_mod_post": false,
        "created_utc": 1578355316.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 1, "author_fullname": "t2_4r8a8yk1", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Chez Scheme:\n\n[https://github.com/falloutphil/aoc\\_2019/blob/master/day\\_01/01.sps](https://github.com/falloutphil/aoc_2019/blob/master/day_01/01.sps)\n\nLibrary
        functions here:\n\n[https://github.com/falloutphil/aoc\\_2019/blob/master/aoc-utils.sls](https://github.com/falloutphil/aoc_2019/blob/master/aoc-utils.sls)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_fdf7two", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Chez
        Scheme:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/falloutphil/aoc_2019/blob/master/day_01/01.sps\"&gt;https://github.com/falloutphil/aoc_2019/blob/master/day_01/01.sps&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Library
        functions here:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/falloutphil/aoc_2019/blob/master/aoc-utils.sls\"&gt;https://github.com/falloutphil/aoc_2019/blob/master/aoc-utils.sls&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fdf7two/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1578355316.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fcxc1cm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "e_blake", "can_mod_post": false, "created_utc":
        1578058772.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_4tezwlii", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**m4**\n\n    divert(-1)dnl -*- m4 -*-\n    #
        Usage: m4 -Dfile=day1.input day1.m4\n    \n    ifdef(`file'', `'', `errprint(`Missing
        definition of file\n    '')m4exit(1)'')\n    define(`part1'', 0)\n    define(`part2'',
        0)\n    define(`compute'', `_$0($1)ifelse($2, `'', `'', `$0(shift($@))'')'')\n    define(`_compute'',\n      `define(`part1'',
        eval(part1 + $1 / 3 - 2))do(eval($1 / 3 - 2))'')\n    define(`do'', `ifelse(eval($1
        &gt; 8), 1, `do(eval($1 / 3 - 2))'')define(`part2'',\n      eval(part2 + $1))'')\n    compute(translit(include(file),
        `\n    '', `,''))\n    \n    divert`''part1\n    part2\n\nLate entry, but
        now that I''ve solved all of the [IntCode problems in m4](https://www.reddit.com/r/adventofcode/comments/ebp5j7/2019_m4_intcode_interpreter_in_m4/),
        I''m seeing how easy/hard it would be to solve the remaining days in m4.  This
        one was straightforward enough to post inline.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_fcxc1cm", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;m4&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;divert(-1)dnl
        -*- m4 -*-\n# Usage: m4 -Dfile=day1.input day1.m4\n\nifdef(`file&amp;#39;,
        `&amp;#39;, `errprint(`Missing definition of file\n&amp;#39;)m4exit(1)&amp;#39;)\ndefine(`part1&amp;#39;,
        0)\ndefine(`part2&amp;#39;, 0)\ndefine(`compute&amp;#39;, `_$0($1)ifelse($2,
        `&amp;#39;, `&amp;#39;, `$0(shift($@))&amp;#39;)&amp;#39;)\ndefine(`_compute&amp;#39;,\n  `define(`part1&amp;#39;,
        eval(part1 + $1 / 3 - 2))do(eval($1 / 3 - 2))&amp;#39;)\ndefine(`do&amp;#39;,
        `ifelse(eval($1 &amp;gt; 8), 1, `do(eval($1 / 3 - 2))&amp;#39;)define(`part2&amp;#39;,\n  eval(part2
        + $1))&amp;#39;)\ncompute(translit(include(file), `\n&amp;#39;, `,&amp;#39;))\n\ndivert`&amp;#39;part1\npart2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Late
        entry, but now that I&amp;#39;ve solved all of the &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/ebp5j7/2019_m4_intcode_interpreter_in_m4/\"&gt;IntCode
        problems in m4&lt;/a&gt;, I&amp;#39;m seeing how easy/hard it would be to
        solve the remaining days in m4.  This one was straightforward enough to post
        inline.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fcxc1cm/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1578058772.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "fcnuvtq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ditao1",
        "can_mod_post": false, "created_utc": 1577818894.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_e8mdl", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "#
        Racket\n\nI still struggle mostly with naming things. In retrospect reading
        the file and making it a list would''ve allowed to harness the power of list
        abstractions, but alas...\n\nhttps://github.com/NEUDitao/AOC2019/blob/master/1/day1.rkt",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_fcnuvtq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Racket&lt;/h1&gt;\n\n&lt;p&gt;I
        still struggle mostly with naming things. In retrospect reading the file and
        making it a list would&amp;#39;ve allowed to harness the power of list abstractions,
        but alas...&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/NEUDitao/AOC2019/blob/master/1/day1.rkt\"&gt;https://github.com/NEUDitao/AOC2019/blob/master/1/day1.rkt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fcnuvtq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1577818894.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fc5a17h", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "lucbloom", "can_mod_post": false, "created_utc":
        1577450532.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_vof3v4a", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My 4-line solution (purposefully contrived):\n\n    int
        arr[]={...list...};\n    int t=0;\n    for(int i:arr){for(;i&gt;0;t+=std::max(0,(i=(i/3-2))));}\n    std::cout&lt;&lt;t&lt;&lt;std::endl;",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_fc5a17h", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        4-line solution (purposefully contrived):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        arr[]={...list...};\nint t=0;\nfor(int i:arr){for(;i&amp;gt;0;t+=std::max(0,(i=(i/3-2))));}\nstd::cout&amp;lt;&amp;lt;t&amp;lt;&amp;lt;std::endl;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fc5a17h/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1577450532.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "fgrqccw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ayyquecalor",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_fgrq1wr", "score":
        2, "author_fullname": "t2_3qni0kyo", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "This is great. Thank
        you!", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_fgrqccw", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        is great. Thank you!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fgrqccw/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1581054019.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1581054019.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "fgrq1wr", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "vermilion-secrets", "can_mod_post": false,
        "created_utc": 1581053755.0, "send_replies": true, "parent_id": "t1_fbijc5w",
        "score": 1, "author_fullname": "t2_yz5va", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "You can use // instead
        of / to do floor division", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_fgrq1wr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You
        can use // instead of / to do floor division&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fgrq1wr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1581053755.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "fbijc5w", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ayyquecalor", "can_mod_post": false, "created_utc":
        1576902743.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_3qni0kyo", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python3\n\n    import math\n    \n    totalFuel
        = 0 \n    \n    f=open(\"aocinput1.txt\", \"r\") #opening input file\n    f1
        = f.readlines() #reading input txt file\n    for mass in f1:\n        fuel
        = math.floor(int(mass)/3)-2\n        totalFuel += fuel\n    \n    print(totalFuel)\n\nI''m
        learning. Please provide feedback.\n\nE:word", "edited": 1576947570.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_fbijc5w", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        math\n\ntotalFuel = 0 \n\nf=open(&amp;quot;aocinput1.txt&amp;quot;, &amp;quot;r&amp;quot;)
        #opening input file\nf1 = f.readlines() #reading input txt file\nfor mass
        in f1:\n    fuel = math.floor(int(mass)/3)-2\n    totalFuel += fuel\n\nprint(totalFuel)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m
        learning. Please provide feedback.&lt;/p&gt;\n\n&lt;p&gt;E:word&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fbijc5w/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576902743.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fbex7bt", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "chkas", "can_mod_post": false, "created_utc":
        1576796092.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_41wmaij", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "*easylang.online*\n\n[My solution](https://easylang.online/aoc/?day=1)",
        "edited": 1579881653.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_fbex7bt", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;easylang.online&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://easylang.online/aoc/?day=1\"&gt;My solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fbex7bt/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576796092.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fb7dd22", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "MayorOfMayorIsland", "can_mod_post": false,
        "created_utc": 1576586146.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 1, "author_fullname": "t2_4z5xe4aq", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "PHP TDD (ish) walkthrough
        - [https://hwright.com/advent-of-code-hints-2019/index.php/2019/12/10/advent-of-code-day-1-hints/](https://hwright.com/advent-of-code-hints-2019/index.php/2019/12/10/advent-of-code-day-1-hints/)\n\nStarter
        Code - [https://github.com/hamishwright/adventofcode2019/releases/tag/getting\\_started](https://github.com/hamishwright/adventofcode2019/releases/tag/getting_started)\n\nSolution
        Code - [https://github.com/hamishwright/adventofcode2019/releases/tag/day1part1](https://github.com/hamishwright/adventofcode2019/releases/tag/day1part1)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_fb7dd22", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP
        TDD (ish) walkthrough - &lt;a href=\"https://hwright.com/advent-of-code-hints-2019/index.php/2019/12/10/advent-of-code-day-1-hints/\"&gt;https://hwright.com/advent-of-code-hints-2019/index.php/2019/12/10/advent-of-code-day-1-hints/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Starter
        Code - &lt;a href=\"https://github.com/hamishwright/adventofcode2019/releases/tag/getting_started\"&gt;https://github.com/hamishwright/adventofcode2019/releases/tag/getting_started&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Solution
        Code - &lt;a href=\"https://github.com/hamishwright/adventofcode2019/releases/tag/day1part1\"&gt;https://github.com/hamishwright/adventofcode2019/releases/tag/day1part1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fb7dd22/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576586146.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "fb7171m", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "In c++\n\n\n\tifstream inputFile(\"input.txt\");\n\t\n\tfor
        (int i = 0; i &lt; size; i++)\n\t{\n\t\tinputFile &gt;&gt; mass[i];\n\t}\n\t\n\t\n\tfor(int
        j = 0; j &lt; size; j++)\n\t{\n\t\tfuelReq = mass[j];\n\t\twhile (found ==
        false)\n\t\t{ \n\t\t\tfuelReq = (fuelReq / 3) - 2;\n\t\t\tif (fuelReq &gt;
        0)\n\t\t\t{\n\t\t\t\tnewFuelReq += fuelReq;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfound
        = true;\n\t\t\t}\n\t\t}\n\t\tfound = false;\n\t}\n\t\n\tcout &lt;&lt; newFuelReq;\n\t\n\treturn
        0;", "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In
        c++&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ifstream inputFile(&amp;quot;input.txt&amp;quot;);\n\nfor
        (int i = 0; i &amp;lt; size; i++)\n{\n    inputFile &amp;gt;&amp;gt; mass[i];\n}\n\n\nfor(int
        j = 0; j &amp;lt; size; j++)\n{\n    fuelReq = mass[j];\n    while (found
        == false)\n    { \n        fuelReq = (fuelReq / 3) - 2;\n        if (fuelReq
        &amp;gt; 0)\n        {\n            newFuelReq += fuelReq;\n        }\n        else\n        {\n            found
        = true;\n        }\n    }\n    found = false;\n}\n\ncout &amp;lt;&amp;lt;
        newFuelReq;\n\nreturn 0;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "subreddit_type": "public", "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fb7171m/", "num_reports":
        null, "locked": false, "name": "t1_fb7171m", "created": 1576568693.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1576568693.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fb3s6yz", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "marcobiedermann", "can_mod_post": false,
        "created_utc": 1576486220.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 1, "author_fullname": "t2_y8kev", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "JavaScript\n\n    import
        { readFileSync } from ''fs'';\n    \n    const input = readFileSync(`${__dirname}/input.txt`,
        ''utf-8'');\n    \n    function calculateMass(mass: number) {\n      return
        Math.floor(mass / 3) - 2;\n    }\n    \n    function sum(accumulator: number,
        currentValue: number) {\n      return accumulator + currentValue;\n    }\n    \n    const
        totalFuel = input\n      .split(''\\n'')\n      .map(mass =&gt; calculateMass(parseInt(mass,
        10)))\n      .reduce(sum);\n    \n    totalFuel;\n\nGitHub Repository: [https://github.com/marcobiedermann/advent-of-code/tree/master/2019/day-01](https://github.com/marcobiedermann/advent-of-code/tree/master/2019/day-01)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_fb3s6yz", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        { readFileSync } from &amp;#39;fs&amp;#39;;\n\nconst input = readFileSync(`${__dirname}/input.txt`,
        &amp;#39;utf-8&amp;#39;);\n\nfunction calculateMass(mass: number) {\n  return
        Math.floor(mass / 3) - 2;\n}\n\nfunction sum(accumulator: number, currentValue:
        number) {\n  return accumulator + currentValue;\n}\n\nconst totalFuel = input\n  .split(&amp;#39;\\n&amp;#39;)\n  .map(mass
        =&amp;gt; calculateMass(parseInt(mass, 10)))\n  .reduce(sum);\n\ntotalFuel;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;GitHub
        Repository: &lt;a href=\"https://github.com/marcobiedermann/advent-of-code/tree/master/2019/day-01\"&gt;https://github.com/marcobiedermann/advent-of-code/tree/master/2019/day-01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fb3s6yz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576486220.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fb01s2z", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "heyitsmattwade", "can_mod_post": false,
        "created_utc": 1576421769.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 2, "author_fullname": "t2_985du", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Javascript - [Part
        one](https://github.com/romellem/advent-of-code/blob/master/2019/1/part-one.js)
        &amp; [part two](https://github.com/romellem/advent-of-code/blob/master/2019/1/part-two.js).\n\nEasy
        one to start things off, with a nice twist for part two. Did a recursive method
        for part two. Afterward, I realized I can improve performance by storing the
        sum _so far_ with each recursive call, but in the moment I wrote it as another
        array. Both solutions are linked above but are short enough that I can copy
        them here:\n\n### Part One\n\n    const fuel = input.map(mass =&gt; Math.floor(mass
        / 3) - 2);\n    const total_fuel = fuel.reduce((a, b) =&gt; a + b, 0);\n    console.log(total_fuel);\n\n###
        Part Two\n\n    // To find the fuel required for a module, take its mass,
        divide by three, round down, and subtract 2.\n    // Continue recursively
        for the mass of the _fuel_ you just calculated. If the mass is zero or less,
        discard it\n    const calcFuelArray = (mass, arr = []) =&gt; {\n        let
        fuel = Math.floor(mass / 3) - 2;\n        if (fuel &lt;= 0) {\n            return
        arr;\n        } else {\n            arr.push(fuel);\n            return calcFuelArray(fuel,
        arr);\n        }\n    };\n\n    calcTotalFuel = mass =&gt; {\n        return
        calcFuelArray(mass).reduce((a, b) =&gt; a + b, 0);\n    };\n\n    let fuel
        = input.map(mass =&gt; calcTotalFuel(mass));\n    const total_fuel = fuel.reduce((a,
        b) =&gt; a + b, 0);", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_fb01s2z", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript
        - &lt;a href=\"https://github.com/romellem/advent-of-code/blob/master/2019/1/part-one.js\"&gt;Part
        one&lt;/a&gt; &amp;amp; &lt;a href=\"https://github.com/romellem/advent-of-code/blob/master/2019/1/part-two.js\"&gt;part
        two&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Easy one to start things off, with a
        nice twist for part two. Did a recursive method for part two. Afterward, I
        realized I can improve performance by storing the sum &lt;em&gt;so far&lt;/em&gt;
        with each recursive call, but in the moment I wrote it as another array. Both
        solutions are linked above but are short enough that I can copy them here:&lt;/p&gt;\n\n&lt;h3&gt;Part
        One&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;const fuel = input.map(mass =&amp;gt;
        Math.floor(mass / 3) - 2);\nconst total_fuel = fuel.reduce((a, b) =&amp;gt;
        a + b, 0);\nconsole.log(total_fuel);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Part
        Two&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;// To find the fuel required for
        a module, take its mass, divide by three, round down, and subtract 2.\n//
        Continue recursively for the mass of the _fuel_ you just calculated. If the
        mass is zero or less, discard it\nconst calcFuelArray = (mass, arr = []) =&amp;gt;
        {\n    let fuel = Math.floor(mass / 3) - 2;\n    if (fuel &amp;lt;= 0) {\n        return
        arr;\n    } else {\n        arr.push(fuel);\n        return calcFuelArray(fuel,
        arr);\n    }\n};\n\ncalcTotalFuel = mass =&amp;gt; {\n    return calcFuelArray(mass).reduce((a,
        b) =&amp;gt; a + b, 0);\n};\n\nlet fuel = input.map(mass =&amp;gt; calcTotalFuel(mass));\nconst
        total_fuel = fuel.reduce((a, b) =&amp;gt; a + b, 0);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fb01s2z/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576421769.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fayrqo4", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "notperm", "can_mod_post": false, "created_utc":
        1576405768.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_4zgey", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Late but here is my solution for day 1 in
        python:\n\n`# However you get the list would work.`\n\n`mass_list = [54296,
        106942, 137389, 116551, 129293, 60967, 142448, 101720, 64463, 142264, 68673,
        144661, 110426, 59099, 63711, 120365, 125233, 126793, 61990, 122059, 86768,
        134293, 114985, 61280, 75325, 103102, 116332, 112075, 114895, 98816, 59389,
        124402, 74995, 135512, 115619, 59680, 61421, 141160, 148880, 70010, 119379,
        92155, 126698, 138653, 149004, 142730, 68658, 73811, 87064, 62684, 93335,
        140475, 143377, 98445, 117960, 80237, 132483, 108319, 104154, 99383, 104685,
        114888, 73376, 58590, 132759, 114399, 77796, 119228, 136282, 84789, 66511,
        51939, 142313, 117305, 139543, 92054, 64606, 139795, 109051, 97040, 91850,
        107391, 60200, 75812, 74898, 64884, 115210, 85055, 92256, 67470, 90286, 129142,
        109235, 117194, 104028, 127482, 68502, 92440, 50369, 84878]`\n\n`# List comprehension
        for first answer`\n\n`ans = [x // 3 - 2 for x in mass_list]`\n\n`new_list
        = []`\n\n`# Recursive function for second answer`\n\n`def fuel_calc(mass):`\n\n`if
        mass &lt;= 0:`\n\n`pass`\n\n`else:`\n\n`mass = (mass // 3 - 2 )`\n\n`print(mass)`\n\n`if
        mass &gt; 0:`\n\n`new_list.append(mass)`\n\n`return fuel_calc(mass)`\n\n`for
        x in mass_list:`\n\n`fuel_calc(x)`\n\n`print(\"Part 1 answer = \", sum(ans))`
        \n\n`print(\"Part 2 answer = \", sum(new_list))`", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_fayrqo4", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Late but here is my solution
        for day 1 in python:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;# However you get the
        list would work.&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;mass_list
        = [54296, 106942, 137389, 116551, 129293, 60967, 142448, 101720, 64463, 142264,
        68673, 144661, 110426, 59099, 63711, 120365, 125233, 126793, 61990, 122059,
        86768, 134293, 114985, 61280, 75325, 103102, 116332, 112075, 114895, 98816,
        59389, 124402, 74995, 135512, 115619, 59680, 61421, 141160, 148880, 70010,
        119379, 92155, 126698, 138653, 149004, 142730, 68658, 73811, 87064, 62684,
        93335, 140475, 143377, 98445, 117960, 80237, 132483, 108319, 104154, 99383,
        104685, 114888, 73376, 58590, 132759, 114399, 77796, 119228, 136282, 84789,
        66511, 51939, 142313, 117305, 139543, 92054, 64606, 139795, 109051, 97040,
        91850, 107391, 60200, 75812, 74898, 64884, 115210, 85055, 92256, 67470, 90286,
        129142, 109235, 117194, 104028, 127482, 68502, 92440, 50369, 84878]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;#
        List comprehension for first answer&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ans
        = [x // 3 - 2 for x in mass_list]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;new_list
        = []&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;# Recursive function for
        second answer&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;def fuel_calc(mass):&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if
        mass &amp;lt;= 0:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;pass&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;else:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;mass
        = (mass // 3 - 2 )&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(mass)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if
        mass &amp;gt; 0:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;new_list.append(mass)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return
        fuel_calc(mass)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for x in mass_list:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;fuel_calc(x)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(&amp;quot;Part
        1 answer = &amp;quot;, sum(ans))&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(&amp;quot;Part
        2 answer = &amp;quot;, sum(new_list))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fayrqo4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576405768.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "faq4vx6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kresimirlukin", "can_mod_post": false,
        "created_utc": 1576297910.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 1, "author_fullname": "t2_pbdnio7", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Python:  [https://github.com/kresimir-lukin/AdventOfCode2019/blob/master/day01.py](https://github.com/kresimir-lukin/AdventOfCode2019/blob/master/day01.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_faq4vx6", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python:  &lt;a
        href=\"https://github.com/kresimir-lukin/AdventOfCode2019/blob/master/day01.py\"&gt;https://github.com/kresimir-lukin/AdventOfCode2019/blob/master/day01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/faq4vx6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576297910.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 9, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "fagvwk3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        9, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**Intcode**\n\nPart 1:\n`3,99,7,99,0,7,105,7,38,1,13,42,42,1,37,99,99,7,99,0,22,1106,42,9,201,42,31,42,5,22,1103,-2,4,42,1006,69,1,-3,32`\n\nPart
        2:\n`3,99,7,99,52,7,105,99,54,1007,99,9,14,105,53,1007,1,38,7,7,1,53,99,99,7,99,11,29,106,11,11,7,7,106,36,105,105,106,1,7,105,105,2,16,7,99,2,36,99,7,1105,1,9,-3,55,4,105,5,16,16`\n\nSupply
        input one integer at a time, followed by -1.\n\nWriting that was fun and I''m
        not doing it again.", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Intcode&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1:\n&lt;code&gt;3,99,7,99,0,7,105,7,38,1,13,42,42,1,37,99,99,7,99,0,22,1106,42,9,201,42,31,42,5,22,1103,-2,4,42,1006,69,1,-3,32&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2:\n&lt;code&gt;3,99,7,99,52,7,105,99,54,1007,99,9,14,105,53,1007,1,38,7,7,1,53,99,99,7,99,11,29,106,11,11,7,7,106,36,105,105,106,1,7,105,105,2,16,7,99,2,36,99,7,1105,1,9,-3,55,4,105,5,16,16&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Supply
        input one integer at a time, followed by -1.&lt;/p&gt;\n\n&lt;p&gt;Writing
        that was fun and I&amp;#39;m not doing it again.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fagvwk3/",
        "num_reports": null, "locked": false, "name": "t1_fagvwk3", "created": 1576072829.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1576072829.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "fb20t20", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_fag3ga2", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "edited": false, "author_flair_css_class":
        null, "collapsed": true, "downs": 0, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "associated_award": null, "stickied": false, "subreddit_type":
        "public", "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fb20t20/", "num_reports":
        null, "locked": false, "name": "t1_fb20t20", "created": 1576443883.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1576443883.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "fag3ga2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_e4axxe", "score": 2, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": 1576039227.0, "downs": 0, "author_flair_css_class":
        null, "collapsed": true, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fag3ga2/",
        "num_reports": null, "locked": false, "name": "t1_fag3ga2", "created": 1576039044.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1576039044.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fafzy6p", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "toastnada", "can_mod_post": false, "created_utc":
        1576036217.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_13c5z6", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Self Language:\n\nhttps://i.imgur.com/6q3LV08.png",
        "edited": 1576047180.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_fafzy6p", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Self
        Language:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://i.imgur.com/6q3LV08.png\"&gt;https://i.imgur.com/6q3LV08.png&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fafzy6p/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576036217.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fadm4wh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "thibpat", "can_mod_post": false, "created_utc":
        1575978583.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_j7bwx", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here is a walkthrough of my solution in javascript
        for both parts: [https://www.youtube.com/watch?v=ComzawCqwJY](https://www.youtube.com/watch?v=ComzawCqwJY)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_fadm4wh", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here
        is a walkthrough of my solution in javascript for both parts: &lt;a href=\"https://www.youtube.com/watch?v=ComzawCqwJY\"&gt;https://www.youtube.com/watch?v=ComzawCqwJY&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fadm4wh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575978583.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "fadhyu6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dr3d3d",
        "can_mod_post": false, "created_utc": 1575972558.0, "send_replies": true,
        "parent_id": "t1_fadgldm", "score": 2, "author_fullname": "t2_6roum", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Classless Python3 Part 1 and 2\n\n    with open(r''input.txt'', ''r'') as
        f:\n        input = list(map(int,f.read().strip().split()))\n\n    fuel =
        [0,0]\n    for mass in input:\n        fuel[0] += int(mass/3-2)\n\n    for
        mass in input:\n        while int(mass/3-2) &gt; 0:\n            mass = int(mass/3-2)\n            fuel[1]
        += mass\n    print(fuel)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_fadhyu6", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Classless
        Python3 Part 1 and 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(r&amp;#39;input.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as f:\n    input = list(map(int,f.read().strip().split()))\n\nfuel
        = [0,0]\nfor mass in input:\n    fuel[0] += int(mass/3-2)\n\nfor mass in input:\n    while
        int(mass/3-2) &amp;gt; 0:\n        mass = int(mass/3-2)\n        fuel[1] +=
        mass\nprint(fuel)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fadhyu6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575972558.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "fadgldm", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dr3d3d", "can_mod_post": false, "created_utc":
        1575970434.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_6roum", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python3\n\n    class SantaFuel():\n        def
        __init__(self):\n            with open(r''input.txt'', ''r'') as f:\n                self.input
        = list(map(int,f.read().strip().split()))\n    \n        def PartOne(self):\n            fuel
        = 0\n            for mass in self.input:\n                fuel += int(mass/3-2)\n            return
        fuel\n    \n        def PartTwo(self):\n            fuel = 0\n            for
        mass in self.input:\n                while int(mass/3-2) &gt; 0:\n                    mass
        = int(mass/3-2)\n                    fuel += mass\n            return fuel\n    \n    answer
        = SantaFuel()\n    print(\"PartOne: {}\".format(answer.PartOne()))\n    print(\"PartTwo:
        {}\".format(answer.PartTwo()))", "edited": 1575971709.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_fadgldm", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class
        SantaFuel():\n    def __init__(self):\n        with open(r&amp;#39;input.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as f:\n            self.input = list(map(int,f.read().strip().split()))\n\n    def
        PartOne(self):\n        fuel = 0\n        for mass in self.input:\n            fuel
        += int(mass/3-2)\n        return fuel\n\n    def PartTwo(self):\n        fuel
        = 0\n        for mass in self.input:\n            while int(mass/3-2) &amp;gt;
        0:\n                mass = int(mass/3-2)\n                fuel += mass\n        return
        fuel\n\nanswer = SantaFuel()\nprint(&amp;quot;PartOne: {}&amp;quot;.format(answer.PartOne()))\nprint(&amp;quot;PartTwo:
        {}&amp;quot;.format(answer.PartTwo()))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fadgldm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575970434.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fa9gblh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "hackersleepyhead", "can_mod_post": false,
        "created_utc": 1575872585.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 1, "author_fullname": "t2_3kuixb2", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "PART [A Solution](https://github.com/dukevenkat/advent0fcode_2019/blob/master/Day001_A.ex)
        and [B Solution](https://github.com/dukevenkat/advent0fcode_2019/blob/master/Day001_B.ex)\n\nNeed
        code review and suggestions on different better way techniques.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_fa9gblh",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PART &lt;a href=\"https://github.com/dukevenkat/advent0fcode_2019/blob/master/Day001_A.ex\"&gt;A
        Solution&lt;/a&gt; and &lt;a href=\"https://github.com/dukevenkat/advent0fcode_2019/blob/master/Day001_B.ex\"&gt;B
        Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Need code review and suggestions
        on different better way techniques.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fa9gblh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575872585.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "awarders": [], "mod_reason_by": null, "banned_by": null, "ups": 1, "removal_reason":
        null, "link_id": "t3_e4axxe", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "farqz4p", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_faq72ei", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "It probably
        isn''t faster (at least if you''re using python), but int would be simpler
        than float imo. It also avoids issues like https://0.30000000000000004.com/.",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It
        probably isn&amp;#39;t faster (at least if you&amp;#39;re using python), but
        int would be simpler than float imo. It also avoids issues like &lt;a href=\"https://0.30000000000000004.com/\"&gt;https://0.30000000000000004.com/&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/farqz4p/",
        "num_reports": null, "locked": false, "name": "t1_farqz4p", "created": 1576319211.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1576319211.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 3, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "faq72ei", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Cowbear1233", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_fah4k74", "score": 1, "author_fullname": "t2_ltl5zji",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Is there a reason to use int over float? Is it faster? And why
        not just use float for simplicity?", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_faq72ei", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is there a reason to
        use int over float? Is it faster? And why not just use float for simplicity?&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/faq72ei/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576298847.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1576298847.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "fah4k74", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_fa66m62", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Some suggestions:\n\nInstead
        of `float` (floating point numbers), you should use `int` (integers), since
        this is purely an integer problem.\n\nInstead of writing the weights for each
        module to a file and then reading that file again to compute the sum, you
        can just do the sum in the first loop.\n\nIf you already know lists or iterators,
        you can save the fuel weights to a list and then sum it with `sum()`.\n\nHope
        that helps.", "edited": false, "author_flair_css_class": null, "collapsed":
        false, "downs": 0, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Some
        suggestions:&lt;/p&gt;\n\n&lt;p&gt;Instead of &lt;code&gt;float&lt;/code&gt;
        (floating point numbers), you should use &lt;code&gt;int&lt;/code&gt; (integers),
        since this is purely an integer problem.&lt;/p&gt;\n\n&lt;p&gt;Instead of
        writing the weights for each module to a file and then reading that file again
        to compute the sum, you can just do the sum in the first loop.&lt;/p&gt;\n\n&lt;p&gt;If
        you already know lists or iterators, you can save the fuel weights to a list
        and then sum it with &lt;code&gt;sum()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Hope
        that helps.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fah4k74/",
        "num_reports": null, "locked": false, "name": "t1_fah4k74", "created": 1576079008.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1576079008.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "fa66m62", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "master4510", "can_mod_post": false, "created_utc":
        1575821577.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_bt2yb", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Using AoC to learn my first ever programming
        language, python! I have managed to cobble together a solution. Please feel
        free to give some pointers.\n\n[Link](https://topaz.github.io/paste/#XQAAAQDgAQAAAAAAAAAzHAhHEm/fLPD63rpmkHqLcStfQoy91p64pAXMUrvJW6ALT4odsWPhPvoz0FLvJ/0agMS0BXKo2bZTiXbSGox+ZI+sJz5ompzfsJYO0Bek1Vu8H0mkuSKGeP2/Nx8TJ14tW4E2Nmz8c9PxXr6VaCkTzon3yzddck/xPmttOujCObWmmQLKVk7IoVl5FOyJVk8A0hWBdtNu4EP8QVsUrXc2PDsyOqjKoSkDWnJTKQwktrMGdnmx/2ZqUnN+O17j4VmXqN+SJBhVQYIi3uzKwfev1w2IY6UNSMx1BO4zbXFfpubIFExsQ+6/tUK8DhVdlJzLO+sFX+CkynF22mwGY1qQ2Qwdcjujyf/zZg4g)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_fa66m62", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using
        AoC to learn my first ever programming language, python! I have managed to
        cobble together a solution. Please feel free to give some pointers.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDgAQAAAAAAAAAzHAhHEm/fLPD63rpmkHqLcStfQoy91p64pAXMUrvJW6ALT4odsWPhPvoz0FLvJ/0agMS0BXKo2bZTiXbSGox+ZI+sJz5ompzfsJYO0Bek1Vu8H0mkuSKGeP2/Nx8TJ14tW4E2Nmz8c9PxXr6VaCkTzon3yzddck/xPmttOujCObWmmQLKVk7IoVl5FOyJVk8A0hWBdtNu4EP8QVsUrXc2PDsyOqjKoSkDWnJTKQwktrMGdnmx/2ZqUnN+O17j4VmXqN+SJBhVQYIi3uzKwfev1w2IY6UNSMx1BO4zbXFfpubIFExsQ+6/tUK8DhVdlJzLO+sFX+CkynF22mwGY1qQ2Qwdcjujyf/zZg4g\"&gt;Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fa66m62/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575821577.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "fa1xccr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "-victorisawesome-", "can_mod_post": false,
        "created_utc": 1575775384.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 2, "author_fullname": "t2_ojf7z", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "INTCODE (DAY 5)\n\n    1,0,0,0,1,0,0,0,
        3,0,1001,0,-3,0,1001,1,1,1,1007,0,3,4,1005,4,28, 1006,3,10,1001,1,-2,1,1,5,1,5,2,0,3,0,2,1,3,1,3,0,1005,0,10,4,5,99",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_fa1xccr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;INTCODE
        (DAY 5)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;1,0,0,0,1,0,0,0, 3,0,1001,0,-3,0,1001,1,1,1,1007,0,3,4,1005,4,28,
        1006,3,10,1001,1,-2,1,1,5,1,5,2,0,3,0,2,1,3,1,3,0,1005,0,10,4,5,99\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fa1xccr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575775384.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "fc6j8t6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "redFalcon79",
        "can_mod_post": false, "created_utc": 1577481887.0, "send_replies": true,
        "parent_id": "t1_fa1flmc", "score": 1, "author_fullname": "t2_hdyv2", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Where did I  [go wrong?](https://docs.google.com/spreadsheets/d/1GLI6L1UZD27iXaN2wGDf6HO5jy-S3sBdbSmC7rNRtys/edit?usp=sharing)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_fc6j8t6", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Where
        did I  &lt;a href=\"https://docs.google.com/spreadsheets/d/1GLI6L1UZD27iXaN2wGDf6HO5jy-S3sBdbSmC7rNRtys/edit?usp=sharing\"&gt;go
        wrong?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fc6j8t6/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1577481887.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "fa1flmc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gyzkard",
        "can_mod_post": false, "created_utc": 1575769193.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_tkhomiv", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Part
        [A](https://docs.google.com/spreadsheets/d/1ZpcnrcxoBQmrmVMEd4S_N9MhSVXv5eR3pXLffZAlRNQ)
        and [B](https://docs.google.com/spreadsheets/d/1S8zb3SfCJbXOFGQeKq4BAKjvAsqy3trdOFYeD_p9PjU)
        in google spreadsheets.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_fa1flmc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part
        &lt;a href=\"https://docs.google.com/spreadsheets/d/1ZpcnrcxoBQmrmVMEd4S_N9MhSVXv5eR3pXLffZAlRNQ\"&gt;A&lt;/a&gt;
        and &lt;a href=\"https://docs.google.com/spreadsheets/d/1S8zb3SfCJbXOFGQeKq4BAKjvAsqy3trdOFYeD_p9PjU\"&gt;B&lt;/a&gt;
        in google spreadsheets.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fa1flmc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575769193.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "fa7yp5s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "se7ensquared",
        "can_mod_post": false, "created_utc": 1575839388.0, "send_replies": true,
        "parent_id": "t1_f9tkocw", "score": 1, "author_fullname": "t2_ufc4l", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Isn''t that \"If\" statement under the while totally redundant? If it passes
        the while statement, it will surely pass the if statement, right?", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_fa7yp5s",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Isn&amp;#39;t that &amp;quot;If&amp;quot;
        statement under the while totally redundant? If it passes the while statement,
        it will surely pass the if statement, right?&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fa7yp5s/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575839388.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "fa07osy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9tkocw", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "isn''t it that you''ll never reach the \\`if\\` condition
        inside the \\`while\\` never reached so that it should be unnecessary?\n\nthe
        complexity is linear, right?", "edited": false, "author_flair_css_class":
        null, "collapsed": false, "downs": 0, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;isn&amp;#39;t it that you&amp;#39;ll never
        reach the `if` condition inside the `while` never reached so that it should
        be unnecessary?&lt;/p&gt;\n\n&lt;p&gt;the complexity is linear, right?&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fa07osy/",
        "num_reports": null, "locked": false, "name": "t1_fa07osy", "created": 1575750117.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575750117.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "f9tkocw", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "CotswoldWanker", "can_mod_post": false,
        "created_utc": 1575629509.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 2, "author_fullname": "t2_53cz41xs", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Python 3, Part Two:\n\n    import
        json\n    \n    with open(\"01_02_input.json\") as f:\n        mod_mass =
        json.load(f)\n    \n    def fuel_calc(mass):\n    \n        total_fuel = 0\n    \n        while
        mass // 3 - 2 &gt; 0:\n            if mass // 3 - 2 &gt; 0:\n                mass
        = mass // 3 - 2\n                total_fuel += mass\n    \n        return(total_fuel)\n    \n    fuel_req
        = sum(list(map(fuel_calc, mod_mass)))\n    \n    print(fuel_req)", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9tkocw",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3, Part Two:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        json\n\nwith open(&amp;quot;01_02_input.json&amp;quot;) as f:\n    mod_mass
        = json.load(f)\n\ndef fuel_calc(mass):\n\n    total_fuel = 0\n\n    while
        mass // 3 - 2 &amp;gt; 0:\n        if mass // 3 - 2 &amp;gt; 0:\n            mass
        = mass // 3 - 2\n            total_fuel += mass\n\n    return(total_fuel)\n\nfuel_req
        = sum(list(map(fuel_calc, mod_mass)))\n\nprint(fuel_req)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9tkocw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575629509.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "falcadf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "human_tree",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_fal7fdk", "score":
        1, "author_fullname": "t2_6ym4i", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Glad to hear it! I have examples
        for the other early days here: https://github.com/humantree/advent-of-code-2019-backup\n\nI
        ended up having to stop at day 7 because the borrow checker got the best of
        me, but hopefully\nI\u2019ll come back to it someday and understand what I
        was doing wrong. Good luck!", "edited": false, "top_awarded_type": null, "downs":
        0, "author_flair_css_class": null, "name": "t1_falcadf", "is_submitter": false,
        "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Glad to hear it! I have examples
        for the other early days here: &lt;a href=\"https://github.com/humantree/advent-of-code-2019-backup\"&gt;https://github.com/humantree/advent-of-code-2019-backup&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        ended up having to stop at day 7 because the borrow checker got the best of
        me, but hopefully\nI\u2019ll come back to it someday and understand what I
        was doing wrong. Good luck!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/falcadf/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1576181976.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1576181976.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "fal7fdk", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Inferior_Rex", "can_mod_post": false,
        "created_utc": 1576179660.0, "send_replies": true, "parent_id": "t1_f9tb7xf",
        "score": 1, "author_fullname": "t2_1032tj", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "I''m learning Rust myself
        at the moment and I learned a lot comparing my first code to this example,
        thank you! :)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_fal7fdk", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        learning Rust myself at the moment and I learned a lot comparing my first
        code to this example, thank you! :)&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fal7fdk/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576179660.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9tb7xf", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "human_tree", "can_mod_post": false, "created_utc":
        1575615653.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_6ym4i", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Rust\n\nI reviewed some other people''s solutions
        to this, and went back and reworked my own. Learning about `successors` was
        a great win for me! Very happy with how concise this is now.\n\n    fn main()
        {\n        let input = read_to_string(\"input.txt\").expect(\"Unable to read
        input.txt\");\n        let modules: Vec&lt;u32&gt; = input.lines().map(parse_module).collect();\n        let
        fuel_required: u32 = modules.iter().map(calculate_module_fuel).sum();\n        println!(\"Total
        fuel required: {}\", fuel_required);\n    }\n    \n    fn calculate_fuel(mass:
        &amp;u32) -&gt; Option&lt;u32&gt; {\n        (mass / 3).checked_sub(2)\n    }\n    \n    fn
        calculate_module_fuel(mass: &amp;u32) -&gt; u32 {\n        successors(Some(*mass),
        calculate_fuel).skip(1).sum()\n    }\n    \n    fn parse_module(line: &amp;str)
        -&gt; u32 {\n        line.parse().expect(\"Line was not an integer\")\n    }\n\n[https://github.com/humantree/advent-of-code-2019/blob/master/fuel-counter-upper/src/main.rs](https://github.com/humantree/advent-of-code-2019/blob/master/fuel-counter-upper/src/main.rs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9tb7xf", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;p&gt;I
        reviewed some other people&amp;#39;s solutions to this, and went back and
        reworked my own. Learning about &lt;code&gt;successors&lt;/code&gt; was a
        great win for me! Very happy with how concise this is now.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        main() {\n    let input = read_to_string(&amp;quot;input.txt&amp;quot;).expect(&amp;quot;Unable
        to read input.txt&amp;quot;);\n    let modules: Vec&amp;lt;u32&amp;gt; = input.lines().map(parse_module).collect();\n    let
        fuel_required: u32 = modules.iter().map(calculate_module_fuel).sum();\n    println!(&amp;quot;Total
        fuel required: {}&amp;quot;, fuel_required);\n}\n\nfn calculate_fuel(mass:
        &amp;amp;u32) -&amp;gt; Option&amp;lt;u32&amp;gt; {\n    (mass / 3).checked_sub(2)\n}\n\nfn
        calculate_module_fuel(mass: &amp;amp;u32) -&amp;gt; u32 {\n    successors(Some(*mass),
        calculate_fuel).skip(1).sum()\n}\n\nfn parse_module(line: &amp;amp;str) -&amp;gt;
        u32 {\n    line.parse().expect(&amp;quot;Line was not an integer&amp;quot;)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/humantree/advent-of-code-2019/blob/master/fuel-counter-upper/src/main.rs\"&gt;https://github.com/humantree/advent-of-code-2019/blob/master/fuel-counter-upper/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9tb7xf/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575615653.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9ottnu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[JS](https://github.com/CJX3M/aoc2019/blob/js/day1.js)",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/CJX3M/aoc2019/blob/js/day1.js\"&gt;JS&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ottnu/",
        "num_reports": null, "locked": false, "name": "t1_f9ottnu", "created": 1575513415.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575513415.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9ng38d", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Liotac", "can_mod_post": false, "created_utc":
        1575483811.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_jvdn0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Racket** (part 2)\n\n    (require srfi/1)\n    \n    (define
        (fuel mass)\n      (- (quotient mass 3) 2))\n    \n    (for/sum ([mass (in-port)])\n      (apply
        + (rest (unfold nonpositive-integer? identity fuel mass))))", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9ng38d",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Racket&lt;/strong&gt;
        (part 2)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(require srfi/1)\n\n(define (fuel
        mass)\n  (- (quotient mass 3) 2))\n\n(for/sum ([mass (in-port)])\n  (apply
        + (rest (unfold nonpositive-integer? identity fuel mass))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ng38d/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575483811.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9n025t", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Simple solution using awk\n\n`awk ''{x += (int($1/3)-2)}
        END { print x }''`", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Simple
        solution using awk&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;awk &amp;#39;{x += (int($1/3)-2)}
        END { print x }&amp;#39;&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "subreddit_type": "public", "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9n025t/", "num_reports":
        null, "locked": false, "name": "t1_f9n025t", "created": 1575474062.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575474062.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9pmktt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jazende",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9ofckx", "score":
        1, "author_fullname": "t2_42xca", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I purposefully don''t do this,
        so that I can interject test cases on the fly", "edited": 1575554158.0, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_f9pmktt", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I purposefully don&amp;#39;t
        do this, so that I can interject test cases on the fly&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9pmktt/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575542354.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575542354.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9ofckx", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "fleyk-lit", "can_mod_post": false, "created_utc":
        1575503214.0, "send_replies": true, "parent_id": "t1_f9myhe6", "score": 1,
        "author_fullname": "t2_u2bwgoj", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I like the simplicity of this
        one - though I would have created the int array on line two (to separate input
        handling from the rest of the script): `values = [int(v) for v in f.read().strip().split(''\\n'')]`",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9ofckx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        like the simplicity of this one - though I would have created the int array
        on line two (to separate input handling from the rest of the script): &lt;code&gt;values
        = [int(v) for v in f.read().strip().split(&amp;#39;\\n&amp;#39;)]&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ofckx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575503214.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9myhe6", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "jazende", "can_mod_post": false, "created_utc":
        1575473051.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 4,
        "author_fullname": "t2_42xca", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**python 3.7**\n\n\n    with open(r''aoc_19_01.txt'',
        ''r'') as f:\n        raw_input = f.read().strip().split(''\\n'')\n    \n    def
        fuel_required(weight):\n        return max((weight // 3) - 2, 0)\n    \n    print(\"Day
        One:\", sum([fuel_required(int(x)) for x in raw_input]))\n    \n    def fuel_extra_weight(weight):\n        fuel_req
        = max((weight // 3) - 2, 0)\n        if fuel_req == 0: return 0\n        return
        fuel_req + fuel_extra_weight(fuel_req)\n    \n    print(\"Day Two:\", sum([fuel_extra_weight(int(x))
        for x in raw_input]))", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9myhe6", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;python
        3.7&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(r&amp;#39;aoc_19_01.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as f:\n    raw_input = f.read().strip().split(&amp;#39;\\n&amp;#39;)\n\ndef
        fuel_required(weight):\n    return max((weight // 3) - 2, 0)\n\nprint(&amp;quot;Day
        One:&amp;quot;, sum([fuel_required(int(x)) for x in raw_input]))\n\ndef fuel_extra_weight(weight):\n    fuel_req
        = max((weight // 3) - 2, 0)\n    if fuel_req == 0: return 0\n    return fuel_req
        + fuel_extra_weight(fuel_req)\n\nprint(&amp;quot;Day Two:&amp;quot;, sum([fuel_extra_weight(int(x))
        for x in raw_input]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9myhe6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575473051.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 4}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 3, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9m92oe", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        3, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Hello friends!\n\nI am a current biochemistry and prospective
        bioengineering student (incidentally, I am also active duty military) and
        I have zero formal education with programming thus far. However, I very much
        enjoyed CS50. I discovered you and AoC a couple of days ago, and conveniently,
        I have intended on learning some OOP. I have decided to learn Java. Here is
        my day one solution in Java 8.\n\n[Please, criticism both constructive and
        not are more than welcome.](https://topaz.github.io/paste/#XQAAAQBsCgAAAAAAAAA4GEiZzRd1JAgcz1XqhoK8tKZGIl8db2l0s8/n44+kXvXTE8MMlhYhiVBDHmzTj6PJfZwFk744EUGcPOcEepaP7IHlA3Rziis2io/vVfP+6T1rvKv21dcR3jx+gdOB9KYrxbEK7mJtzdoYEnSOiAs79JQ+GuXjzctxpsU14eiUwRfniQNcjHkzKYcsKJ3SB847OspZIX2IHoXIzIlA+kYO6qOCfTCxrDcjMV/5gNMEEYJvXmuYmbw9DAKJ2ATCEhWO/pyCIv4wYJjHChj2godnvi0/0QvzGy2ADrxADMLkgod3UZyE6cb1N2IZ5CQmkF6JFQ8/njzTqxj241JIhdF28G/XY4EDQ46Y0jO0PdoxLSoAs20AezNt9z+LNhKGg2qJZB/G36YrXKbPzg3GRj4M6lSedWfCQWiMbo5OzHMDGya7JYZ30HhOaGc1Yb6aFXh9NCHHMBc/BfKmt50w0GolzhhBcyg3iP9+9Q6ROROg7wzL/TbxjUwFbvV2XmvS5GnuWnyJbXx7w4rpmShNeZpwue/HOdWml7cdTxi69EV8w/ULgzi3IgLNFcpFN6zayV0KrMXAWGVni2xbo5i1xBBFhJdYAlXN+3jSBCgPA3wX4LFBlw0Km9Wpg+Ig/ZgEbUpEHY6f9IelUxE7rwTYZbO5hHm/ZQERivTGRuEf2cSfHy1hGghefgIcVXzYGM3NSn2deKeyNVMLFKvPcOP0i90VaAThlqDaRHDM+kv9W21YR3caTHKZIzcoty2khtvh6XGDyajOR+bvE/WP1I75mpfqnjj6sghtZUW6MArlAKTC1/BclRo19EFDbCNsVvFaRnAe8syT28ZDksMtRc/+51sFWLNfJthrZVq2/XmzWwOo4qZ52dV/MfMD3Qcq0ptYIZGC+tOdDxFDFRtk3I9KVkbfbAZwN4msNCtovbCgPgtiGfxMg8ewfaYtgB4M0hNADHIBTYcDNOy2z9YvnQtiwnd1qNi0xjdmLFY3RdviAKcuZ6J9d1i9M0Bf88TV/Bcu3kxLMACI+qUOXNSTq22wIEXZwx3juuagcdz3b1EVi1rvsjdaGCpjKpObleliS7QBRd8Xefy7Lgw=)",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hello
        friends!&lt;/p&gt;\n\n&lt;p&gt;I am a current biochemistry and prospective
        bioengineering student (incidentally, I am also active duty military) and
        I have zero formal education with programming thus far. However, I very much
        enjoyed CS50. I discovered you and AoC a couple of days ago, and conveniently,
        I have intended on learning some OOP. I have decided to learn Java. Here is
        my day one solution in Java 8.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBsCgAAAAAAAAA4GEiZzRd1JAgcz1XqhoK8tKZGIl8db2l0s8/n44+kXvXTE8MMlhYhiVBDHmzTj6PJfZwFk744EUGcPOcEepaP7IHlA3Rziis2io/vVfP+6T1rvKv21dcR3jx+gdOB9KYrxbEK7mJtzdoYEnSOiAs79JQ+GuXjzctxpsU14eiUwRfniQNcjHkzKYcsKJ3SB847OspZIX2IHoXIzIlA+kYO6qOCfTCxrDcjMV/5gNMEEYJvXmuYmbw9DAKJ2ATCEhWO/pyCIv4wYJjHChj2godnvi0/0QvzGy2ADrxADMLkgod3UZyE6cb1N2IZ5CQmkF6JFQ8/njzTqxj241JIhdF28G/XY4EDQ46Y0jO0PdoxLSoAs20AezNt9z+LNhKGg2qJZB/G36YrXKbPzg3GRj4M6lSedWfCQWiMbo5OzHMDGya7JYZ30HhOaGc1Yb6aFXh9NCHHMBc/BfKmt50w0GolzhhBcyg3iP9+9Q6ROROg7wzL/TbxjUwFbvV2XmvS5GnuWnyJbXx7w4rpmShNeZpwue/HOdWml7cdTxi69EV8w/ULgzi3IgLNFcpFN6zayV0KrMXAWGVni2xbo5i1xBBFhJdYAlXN+3jSBCgPA3wX4LFBlw0Km9Wpg+Ig/ZgEbUpEHY6f9IelUxE7rwTYZbO5hHm/ZQERivTGRuEf2cSfHy1hGghefgIcVXzYGM3NSn2deKeyNVMLFKvPcOP0i90VaAThlqDaRHDM+kv9W21YR3caTHKZIzcoty2khtvh6XGDyajOR+bvE/WP1I75mpfqnjj6sghtZUW6MArlAKTC1/BclRo19EFDbCNsVvFaRnAe8syT28ZDksMtRc/+51sFWLNfJthrZVq2/XmzWwOo4qZ52dV/MfMD3Qcq0ptYIZGC+tOdDxFDFRtk3I9KVkbfbAZwN4msNCtovbCgPgtiGfxMg8ewfaYtgB4M0hNADHIBTYcDNOy2z9YvnQtiwnd1qNi0xjdmLFY3RdviAKcuZ6J9d1i9M0Bf88TV/Bcu3kxLMACI+qUOXNSTq22wIEXZwx3juuagcdz3b1EVi1rvsjdaGCpjKpObleliS7QBRd8Xefy7Lgw=\"&gt;Please,
        criticism both constructive and not are more than welcome.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9m92oe/",
        "num_reports": null, "locked": false, "name": "t1_f9m92oe", "created": 1575446848.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575446848.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9r7t98", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9l1ne1", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Downvoted because it''s too basic? :s", "edited": false,
        "author_flair_css_class": null, "collapsed": false, "downs": 0, "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Downvoted because it&amp;#39;s
        too basic? :s&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9r7t98/",
        "num_reports": null, "locked": false, "name": "t1_f9r7t98", "created": 1575572493.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575572493.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9offn1", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "fleyk-lit", "can_mod_post": false, "created_utc":
        1575503272.0, "send_replies": true, "parent_id": "t1_f9l1ne1", "score": 1,
        "author_fullname": "t2_u2bwgoj", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "This is more or less what
        I ended up with.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9offn1", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        is more or less what I ended up with.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9offn1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575503272.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9l1ne1", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_e4axxe", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Python 3\n\n```\ndef
        calculate_fuel(mass):\n    return math.floor(mass / 3) - 2\n\n\ndef part_one(masses):\n    total_fuel_req
        = 0\n    for mass in masses:\n        total_fuel_req += calculate_fuel(mass)\n\n    return
        total_fuel_req\n\n\ndef part_two(masses):\n    total_fuel_req = 0\n    for
        mass in masses:\n        fuel_req = mass  # init fuel_req &gt; 0\n        while
        fuel_req &gt; 0:\n            fuel_req = calculate_fuel(fuel_req)\n            total_fuel_req
        += fuel_req\n\n    return total_fuel_req\n```", "edited": false, "downs":
        0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3&lt;/p&gt;\n\n&lt;p&gt;```\ndef
        calculate_fuel(mass):\n    return math.floor(mass / 3) - 2&lt;/p&gt;\n\n&lt;p&gt;def
        part_one(masses):\n    total_fuel_req = 0\n    for mass in masses:\n        total_fuel_req
        += calculate_fuel(mass)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return total_fuel_req\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;def
        part_two(masses):\n    total_fuel_req = 0\n    for mass in masses:\n        fuel_req
        = mass  # init fuel_req &amp;gt; 0\n        while fuel_req &amp;gt; 0:\n            fuel_req
        = calculate_fuel(fuel_req)\n            total_fuel_req += fuel_req&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return
        total_fuel_req\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9l1ne1/",
        "num_reports": null, "locked": false, "name": "t1_f9l1ne1", "created": 1575412410.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575412410.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9jxk6c", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "loociano", "can_mod_post": false, "created_utc":
        1575388160.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 0,
        "author_fullname": "t2_530ql", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "__Google BigQuery__:\n\nPart One:\n```\nCREATE
        TEMP FUNCTION CALC_FUEL(mass INT64) AS ((FLOOR(mass / 3) - 2));\nSELECT SUM(CALC_FUEL(mass))
        FROM advent-of-code.day01.input\n```\n\nPart Two:\n```\nCREATE TEMP FUNCTION
        CALC_FUEL(mass INT64) RETURNS INT64 LANGUAGE js AS \n\"\"\"\n  var fuel =
        0;\n  var tmp = Math.floor(mass / 3) - 2;\n  while (tmp &gt; 0) {\n    fuel
        += tmp;\n    tmp = Math.floor(tmp / 3) - 2;\n  }\n  return fuel;\n\"\"\";\n\nSELECT
        SUM(CALC_FUEL(mass)) FROM advent-of-code.day01.input\n```", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9jxk6c",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Google
        BigQuery&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;Part One:\n&lt;code&gt;\nCREATE
        TEMP FUNCTION CALC_FUEL(mass INT64) AS ((FLOOR(mass / 3) - 2));\nSELECT SUM(CALC_FUEL(mass))
        FROM advent-of-code.day01.input\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        Two:\n```\nCREATE TEMP FUNCTION CALC_FUEL(mass INT64) RETURNS INT64 LANGUAGE
        js AS \n&amp;quot;&amp;quot;&amp;quot;\n  var fuel = 0;\n  var tmp = Math.floor(mass
        / 3) - 2;\n  while (tmp &amp;gt; 0) {\n    fuel += tmp;\n    tmp = Math.floor(tmp
        / 3) - 2;\n  }\n  return fuel;\n&amp;quot;&amp;quot;&amp;quot;;&lt;/p&gt;\n\n&lt;p&gt;SELECT
        SUM(CALC_FUEL(mass)) FROM advent-of-code.day01.input\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9jxk6c/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575388160.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9k8ryy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TomDaNub3719",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9k2eyq", "score":
        1, "author_fullname": "t2_2tekk7o0", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "I don\u2019t care if
        it becomes a float, is there any other advantage to using this method?", "edited":
        false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null,
        "name": "t1_f9k8ryy", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        don\u2019t care if it becomes a float, is there any other advantage to using
        this method?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9k8ryy/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575395289.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1575395289.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9k2eyq", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "taifu", "can_mod_post": false, "created_utc":
        1575391320.0, "send_replies": true, "parent_id": "t1_f9jv35l", "score": 1,
        "author_fullname": "t2_31xor", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "With Python 3 use:\n\n`total
        = total // 3`\n\nOr also:\n\n`total //= 3`", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9k2eyq", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;With Python 3 use:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;total
        = total // 3&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Or also:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;total
        //= 3&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9k2eyq/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575391320.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "f9jv35l", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TomDaNub3719",
        "can_mod_post": false, "created_utc": 1575386490.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_2tekk7o0", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Using
        Python 3.8 and the python-docx module.\n\n[Here''s a link to the github](https://github.com/TomDaNub/adventOfCode/blob/master/adevntcode2019day1part1.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9jv35l", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using
        Python 3.8 and the python-docx module.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/TomDaNub/adventOfCode/blob/master/adevntcode2019day1part1.py\"&gt;Here&amp;#39;s
        a link to the github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9jv35l/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575386490.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "fh1ask3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Suspicious-Service",
        "can_mod_post": false, "created_utc": 1581212840.0, "send_replies": true,
        "parent_id": "t1_f9jmv0w", "score": 1, "author_fullname": "t2_4n9suk3w", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "I did in Java exactly like you! I couldn''t figure it out recursively, sadly
        :/\n\nOne tiny thing to note, you don''t actually have to use Math.floor because
        if you get a fraction and store it as an int, it is automatically floored!",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_fh1ask3", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        did in Java exactly like you! I couldn&amp;#39;t figure it out recursively,
        sadly :/&lt;/p&gt;\n\n&lt;p&gt;One tiny thing to note, you don&amp;#39;t actually
        have to use Math.floor because if you get a fraction and store it as an int,
        it is automatically floored!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fh1ask3/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1581212840.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "distinguished":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9oabxh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mooooooon",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9n1zqe", "score":
        1, "author_fullname": "t2_441mo", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Its because of the rounding
        down per module. Consider two modules with mass [7, 7] versus one module of
        mass [14].\n\n7/3-2 = 2-2 = 0\n\n7/3-2 = 2-2 = 0\n\n14/3-2 = 4-2 = 2\n\nI
        wish the examples would have made this more clear!!", "edited": false, "author_flair_css_class":
        null, "name": "t1_f9oabxh", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Its
        because of the rounding down per module. Consider two modules with mass [7,
        7] versus one module of mass [14].&lt;/p&gt;\n\n&lt;p&gt;7/3-2 = 2-2 = 0&lt;/p&gt;\n\n&lt;p&gt;7/3-2
        = 2-2 = 0&lt;/p&gt;\n\n&lt;p&gt;14/3-2 = 4-2 = 2&lt;/p&gt;\n\n&lt;p&gt;I wish
        the examples would have made this more clear!!&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "link_id": "t3_e4axxe", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": null, "treatment_tags":
        [], "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9oabxh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575499894.0, "author_flair_text": null, "collapsed": false, "created_utc":
        1575499894.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9n1zqe", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kwhinnery", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9mzrc1", "score": 2, "author_fullname": "t2_aoab0",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "To answer my own question, I guess it''s
        just because the problem explicitly stated you had to do it this way:  \n\n\n\"What
        is the sum of the fuel requirements for all of the modules on your spacecraft
        when also taking into account the mass of the added fuel? (Calculate the fuel
        requirements for each module separately, then add them all up at the end.)\"",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9n1zqe", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;To
        answer my own question, I guess it&amp;#39;s just because the problem explicitly
        stated you had to do it this way:  &lt;/p&gt;\n\n&lt;p&gt;&amp;quot;What is
        the sum of the fuel requirements for all of the modules on your spacecraft
        when also taking into account the mass of the added fuel? (Calculate the fuel
        requirements for each module separately, then add them all up at the end.)&amp;quot;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9n1zqe/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575475261.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575475261.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9mzrc1", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kwhinnery", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9l4ubt", "score": 2, "author_fullname": "t2_aoab0",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "I''m not sure I understand why it doesn''t work to calculate
        the fuel-for-the-fuel using the solution to part one. Why does the fuel-for-the-fuel
        need to be calculated for each module rather than once at the end?", "edited":
        false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null,
        "name": "t1_f9mzrc1", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        not sure I understand why it doesn&amp;#39;t work to calculate the fuel-for-the-fuel
        using the solution to part one. Why does the fuel-for-the-fuel need to be
        calculated for each module rather than once at the end?&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9mzrc1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575473870.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575473870.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9mmz4u", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Musical_Muze", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_f9l4ubt", "score": 2, "author_fullname":
        "t2_iyiu2", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "No problem dude, glad it helped. The Part 2
        took me a while to figure out how to nest those loops correctly.", "edited":
        false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null,
        "name": "t1_f9mmz4u", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No
        problem dude, glad it helped. The Part 2 took me a while to figure out how
        to nest those loops correctly.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9mmz4u/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575465132.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1575465132.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9l4ubt", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mooooooon", "can_mod_post": false, "created_utc":
        1575414478.0, "send_replies": true, "parent_id": "t1_f9jmv0w", "score": 3,
        "author_fullname": "t2_441mo", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Thaaaank you. I''ve been banging
        my head against Day 1 Part 2 for an hour.\n\nYour python solution finally
        made it clear to me I needed to do the additional fuel calculations per fuel
        per item, if that makes sense. \nYour code has the additional fuel requirements
        in a while loop in the for loop.\n\nI was using a for loop to total up all
        the module weights to get one fuel cost and then calculating the \"telescoping\"
        fuel cost just once at the end.\n\nYou''re a life saver. Excellent code. Thanks
        for sharing.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9l4ubt", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thaaaank
        you. I&amp;#39;ve been banging my head against Day 1 Part 2 for an hour.&lt;/p&gt;\n\n&lt;p&gt;Your
        python solution finally made it clear to me I needed to do the additional
        fuel calculations per fuel per item, if that makes sense. \nYour code has
        the additional fuel requirements in a while loop in the for loop.&lt;/p&gt;\n\n&lt;p&gt;I
        was using a for loop to total up all the module weights to get one fuel cost
        and then calculating the &amp;quot;telescoping&amp;quot; fuel cost just once
        at the end.&lt;/p&gt;\n\n&lt;p&gt;You&amp;#39;re a life saver. Excellent code.
        Thanks for sharing.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9l4ubt/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575414478.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 3}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "f9jmv0w", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Musical_Muze",
        "can_mod_post": false, "created_utc": 1575380137.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_iyiu2", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "I
        know I''m way behind, but:\n\n [Day 1 in Python](https://pastebin.com/u/Musical_Muze/1/dEBTyzWP)\n\n
        [Day 1 in Java](https://pastebin.com/u/Musical_Muze/1/sgwc5W0i)", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9jmv0w",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I know I&amp;#39;m way
        behind, but:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/u/Musical_Muze/1/dEBTyzWP\"&gt;Day
        1 in Python&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/u/Musical_Muze/1/sgwc5W0i\"&gt;Day
        1 in Java&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9jmv0w/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575380137.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9jtw0u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TomDaNub3719",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9jd6z7", "score":
        1, "author_fullname": "t2_2tekk7o0", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Just
        got home and made the shorter version using python-docx:\n\n[Here, take a
        look!](https://github.com/TomDaNub/adventOfCode/blob/master/adevntcode2019day1part1.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9jtw0u", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just
        got home and made the shorter version using python-docx:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/TomDaNub/adventOfCode/blob/master/adevntcode2019day1part1.py\"&gt;Here,
        take a look!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9jtw0u/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575385655.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1575385655.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9jd6z7", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Abernachy", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9iylzl", "score": 1, "author_fullname": "t2_a29vy",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "There is, I just didn''t think about it.", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_f9jd6z7", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There is, I just didn&amp;#39;t
        think about it.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9jd6z7/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575368298.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1575368298.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9iylzl", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TomDaNub3719", "can_mod_post": false,
        "created_utc": 1575349673.0, "send_replies": true, "parent_id": "t1_f9isgzb",
        "score": 1, "author_fullname": "t2_2tekk7o0", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "This seems like it\u2019s
        a lot to do (copying all the modules with the commas). Isn\u2019t there a
        way for python to access this data and read it by itself?", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9iylzl",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This seems like it\u2019s
        a lot to do (copying all the modules with the commas). Isn\u2019t there a
        way for python to access this data and read it by itself?&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9iylzl/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575349673.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9isgzb", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Abernachy", "can_mod_post": false, "created_utc":
        1575344886.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_a29vy", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Wooh, got day 1 completed.  I''ve spent this
        year learning Python as a hobby and wanted to use this years Advent Of Code
        to help build up my skillset.  Here''s my [Github](https://github.com/Abernachy/Advent-Of-Code-2019/blob/master/advent1.py).  If
        anyone has any pointers or suggestions, let me know.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9isgzb", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wooh, got day 1 completed.  I&amp;#39;ve
        spent this year learning Python as a hobby and wanted to use this years Advent
        Of Code to help build up my skillset.  Here&amp;#39;s my &lt;a href=\"https://github.com/Abernachy/Advent-Of-Code-2019/blob/master/advent1.py\"&gt;Github&lt;/a&gt;.  If
        anyone has any pointers or suggestions, let me know.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9isgzb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575344886.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9if2ix", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "al_draco", "can_mod_post": false, "created_utc":
        1575335549.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_le1xh", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "*Golang Solution*\n\n[github](https://github.com/aldraco/adventofcode/blob/master/nineteen/golang/advent1.go)\n\nI
        tried to switch on which part of the problem (first or second -- saw another
        Go solution that does something similar, and liked it), and conditionally
        assign a function to a variable. But I couldn''t find the correct syntax.
        e.g. in Python it would be:\n\n    if part == 1:\n        algo = firstFunction\n    elif
        part == 2:\n        algo = secondFunction\n    fuel = algo(mass)\n\nAnd then
        use either the naive or the recursive-ish method, depending on the part. I
        think I need to create a type, with a function signature, but I haven''t worked
        out exactly how it looks yet. Input/criticism welcomed.", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9if2ix",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;Golang Solution&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/aldraco/adventofcode/blob/master/nineteen/golang/advent1.go\"&gt;github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        tried to switch on which part of the problem (first or second -- saw another
        Go solution that does something similar, and liked it), and conditionally
        assign a function to a variable. But I couldn&amp;#39;t find the correct syntax.
        e.g. in Python it would be:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if part ==
        1:\n    algo = firstFunction\nelif part == 2:\n    algo = secondFunction\nfuel
        = algo(mass)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then use either the
        naive or the recursive-ish method, depending on the part. I think I need to
        create a type, with a function signature, but I haven&amp;#39;t worked out
        exactly how it looks yet. Input/criticism welcomed.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9if2ix/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575335549.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9m5mbb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CraigCottingham",
        "can_mod_post": false, "created_utc": 1575442508.0, "send_replies": true,
        "parent_id": "t1_f9iepjp", "score": 1, "author_fullname": "t2_suyrv", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "You did it. You magnificent bastard, you did it.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9m5mbb", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You did it. You magnificent
        bastard, you did it.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9m5mbb/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575442508.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "f9iepjp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "dylanbeattie",
        "can_mod_post": false, "created_utc": 1575335292.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 7, "author_fullname": "t2_9ijb", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Okay,
        Reddit... let''s do this. [Rockstar](https://codewithrockstar.com/advent/day01/)
        solution to part 1:\n\n    The river is ice\n    The child is gone\n    The
        night is drawing near\n    Fear is distant so\n    Let darkness be the night
        without fear\n    \n    Listen to the fire\n    Until the fire is empty\n    Let
        the light be the fire over the river\n    Turn down the light\n    Let the
        light be without darkness\n    Let the child be with the light\n    Listen
        to the fire\n    \n    Whisper the child\n\nExplanation (and the solution
        to part 2) are here: [https://codewithrockstar.com/advent/day01/](https://codewithrockstar.com/advent/day01/)\n\nBUT
        BUT BUT!\n\nCheck out the solution from /u/aswum84 at [https://www.reddit.com/r/adventofcode/comments/e4axxe/2019\\_day\\_1\\_solutions/f9hiw1u/](https://www.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9hiw1u/)  \\-
        because I actually added some features to the Rockstar language (arithmetic
        rounding) to create my solution, and their solution used only the existing
        feature set. And it''s absolutely delightful to boot.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9iepjp", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Okay, Reddit... let&amp;#39;s
        do this. &lt;a href=\"https://codewithrockstar.com/advent/day01/\"&gt;Rockstar&lt;/a&gt;
        solution to part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;The river is ice\nThe
        child is gone\nThe night is drawing near\nFear is distant so\nLet darkness
        be the night without fear\n\nListen to the fire\nUntil the fire is empty\nLet
        the light be the fire over the river\nTurn down the light\nLet the light be
        without darkness\nLet the child be with the light\nListen to the fire\n\nWhisper
        the child\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Explanation (and the solution
        to part 2) are here: &lt;a href=\"https://codewithrockstar.com/advent/day01/\"&gt;https://codewithrockstar.com/advent/day01/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;BUT
        BUT BUT!&lt;/p&gt;\n\n&lt;p&gt;Check out the solution from &lt;a href=\"/u/aswum84\"&gt;/u/aswum84&lt;/a&gt;
        at &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9hiw1u/\"&gt;https://www.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9hiw1u/&lt;/a&gt;  -
        because I actually added some features to the Rockstar language (arithmetic
        rounding) to create my solution, and their solution used only the existing
        feature set. And it&amp;#39;s absolutely delightful to boot.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9iepjp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575335292.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 7}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9i4ujc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "J-Swift", "can_mod_post": false, "created_utc":
        1575328304.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_4z1sk", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Ruby  \nhttps://github.com/J-Swift/advent-of-code-2019/tree/master/day_01",
        "edited": 1575393835.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9i4ujc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby&lt;br/&gt;\n&lt;a
        href=\"https://github.com/J-Swift/advent-of-code-2019/tree/master/day_01\"&gt;https://github.com/J-Swift/advent-of-code-2019/tree/master/day_01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9i4ujc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575328304.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9i1zi4", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "qanazoga", "can_mod_post": false, "created_utc":
        1575326383.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_7pkj37t", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Clojure**\nI''m new to the language\n\n    (defn
        fuel-per-mass [mass]\n      (- (Math/floor (/ mass 3)) 2))\n    \n    (defn
        fuel-per-mass-redux [mass]\n      (loop [result []\n             mass mass]\n        (let
        [next (fuel-per-mass mass)]\n          (if (&lt;= next 0)\n            (reduce
        + result)\n            (recur (conj result next) next)))))\n    \n    ;; Part
        one answer.\n    (reduce + (map fuel-per-mass puzzle-input))\n    \n    ;;
        Part two answer.\n    (reduce + (map fuel-per-mass-redux puzzle-input))",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9i1zi4", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Clojure&lt;/strong&gt;\nI&amp;#39;m
        new to the language&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn fuel-per-mass
        [mass]\n  (- (Math/floor (/ mass 3)) 2))\n\n(defn fuel-per-mass-redux [mass]\n  (loop
        [result []\n         mass mass]\n    (let [next (fuel-per-mass mass)]\n      (if
        (&amp;lt;= next 0)\n        (reduce + result)\n        (recur (conj result
        next) next)))))\n\n;; Part one answer.\n(reduce + (map fuel-per-mass puzzle-input))\n\n;;
        Part two answer.\n(reduce + (map fuel-per-mass-redux puzzle-input))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9i1zi4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575326383.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9hwrtt", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "AKQuaternion", "can_mod_post": false,
        "created_utc": 1575323264.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 3, "author_fullname": "t2_61gjj", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Day 1 in 20 lines
        of short, idiomatic C++ on [GitHub](https://github.com/AKQuaternion/AdventOfCode2019/blob/master/day1.cpp).",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9hwrtt", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day
        1 in 20 lines of short, idiomatic C++ on &lt;a href=\"https://github.com/AKQuaternion/AdventOfCode2019/blob/master/day1.cpp\"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9hwrtt/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575323264.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9hsaz4", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mmellinger66", "can_mod_post": false,
        "created_utc": 1575320762.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 2, "author_fullname": "t2_4l1f7", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Swift 5.1\n\n[https://github.com/melling/AdventOfCode\\_2019/blob/master/day1](https://github.com/melling/AdventOfCode_2019/blob/master/day1/)\n\nRead
        Data\n\n    let path = Bundle.main.url(forResource: \"input01\", withExtension:
        \"txt\")\n    var text = try String(contentsOf: path!, encoding: .utf8)\n        \n    let
        massList:[Int] = text.components(separatedBy: .whitespacesAndNewlines).compactMap({Int($0)})\n\nPart
        1\n\n    let solution1 = massList.map({$0 / 3 - 2}).reduce(0, +)\n    print(\"\\(solution1)\")\n\nPart
        2\n\n    func calcFuel2(_ mass:Int) -&gt; Int {\n        if mass &lt;= 0 {\n            return
        0\n        }\n        let requiredFuel = max(mass / 3 - 2,0)\n        print(\"\\(requiredFuel)\")\n        return
        requiredFuel + calcFuel2(requiredFuel)\n    }\n    \n    let solution2 = massList.map(calcFuel2).reduce(0,
        +)\n    print(\"\\(solution2)\")", "edited": 1575406216.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9hsaz4", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Swift 5.1&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/melling/AdventOfCode_2019/blob/master/day1/\"&gt;https://github.com/melling/AdventOfCode_2019/blob/master/day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Read
        Data&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let path = Bundle.main.url(forResource:
        &amp;quot;input01&amp;quot;, withExtension: &amp;quot;txt&amp;quot;)\nvar
        text = try String(contentsOf: path!, encoding: .utf8)\n\nlet massList:[Int]
        = text.components(separatedBy: .whitespacesAndNewlines).compactMap({Int($0)})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let solution1 = massList.map({$0 / 3
        - 2}).reduce(0, +)\nprint(&amp;quot;\\(solution1)&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func calcFuel2(_ mass:Int) -&amp;gt;
        Int {\n    if mass &amp;lt;= 0 {\n        return 0\n    }\n    let requiredFuel
        = max(mass / 3 - 2,0)\n    print(&amp;quot;\\(requiredFuel)&amp;quot;)\n    return
        requiredFuel + calcFuel2(requiredFuel)\n}\n\nlet solution2 = massList.map(calcFuel2).reduce(0,
        +)\nprint(&amp;quot;\\(solution2)&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9hsaz4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575320762.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9hkw5o", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "oantolin", "can_mod_post": false, "created_utc":
        1575316871.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 0,
        "author_fullname": "t2_3fxjo", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Part 2 in Common Lisp:\n\n    (defun part2
        ()\n      (flet ((fuel (mass) (- (floor mass 3) 2)))\n        (loop for mass
        in (uiop:read-file-forms \"day01.txt\")\n              sum (loop for x = (fuel
        mass) then (fuel x)\n                        while (&gt; x 0) sum x))))",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9hkw5o", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part
        2 in Common Lisp:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun part2 ()\n  (flet
        ((fuel (mass) (- (floor mass 3) 2)))\n    (loop for mass in (uiop:read-file-forms
        &amp;quot;day01.txt&amp;quot;)\n          sum (loop for x = (fuel mass) then
        (fuel x)\n                    while (&amp;gt; x 0) sum x))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9hkw5o/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575316871.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9pa5ge", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "awsum84",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9p7zw8", "score":
        3, "author_fullname": "t2_px6o8", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Oh wow, thanks! :)", "edited":
        false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null,
        "name": "t1_f9pa5ge", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh
        wow, thanks! :)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9pa5ge/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575526887.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1575526887.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9p7zw8", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1575524658.0, "send_replies": true, "parent_id": "t1_f9hiw1u",
        "score": 3, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "And congratulations,
        you''re our first winner of \"Best in 5-Day Show\" for AoC 2019!  I gilded
        your [original post](https://www.reddit.com/r/adventofcode/comments/e4yi75/2019_day_1_rockstar_solution/)
        but I''m posting confirmation in here to keep things on the up-and-up :)\n\nEnjoy,
        and thanks for participating!!!", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_f9p7zw8", "is_submitter": true,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;And congratulations, you&amp;#39;re our
        first winner of &amp;quot;Best in 5-Day Show&amp;quot; for AoC 2019!  I gilded
        your &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/e4yi75/2019_day_1_rockstar_solution/\"&gt;original
        post&lt;/a&gt; but I&amp;#39;m posting confirmation in here to keep things
        on the up-and-up :)&lt;/p&gt;\n\n&lt;p&gt;Enjoy, and thanks for participating!!!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9p7zw8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575524658.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9i7mxn", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1575330241.0, "send_replies": true, "parent_id": "t1_f9hiw1u",
        "score": 3, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Thanks for cross-posting
        to the megathread!  Your poem-code has been entered for a chance at the Day
        1 Five-Day prize!", "edited": 1575330547.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9i7mxn", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks
        for cross-posting to the megathread!  Your poem-code has been entered for
        a chance at the Day 1 Five-Day prize!&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9i7mxn/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575330241.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9hiw1u", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "awsum84", "can_mod_post": false, "created_utc":
        1575315906.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 3,
        "author_fullname": "t2_px6o8", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "TL;DR I wrote the solution in Rockstar, so
        it kiiiinda reads like a poem in addition to being a working solution.\n\nSolution
        / Poem ([original post](https://www.reddit.com/r/adventofcode/comments/e4yi75/2019_day_1_rockstar_solution/?utm_source=share&amp;utm_medium=ios_app&amp;utm_name=iossmf)
        ):\n\n\nSadness is loneliness\nThe programmer was anticipating\nAdvent is
        extraordinary \nThe rush is uncomparable\n\nChristmas takes joy and kindness\nYour
        spirit is incredible\nWhile joy is as high as kindness\nBuild your spirit
        up\nLet joy be without kindness\n\nGive back your spirit\n\nAdventOfCode takes
        time (but it''s plenty of fun)\nLet fun be Christmas taking time, and Advent
        without the rush\nIf fun is as low as sadness\nGive back sadness\n\nGive back
        fun with AdventOfCode taking fun\n\nThe elves are thoughtful\nSanta is overseeing\nThe
        time is now\nWhile the time is right\nListen to the jingles\nIf the jingles
        ain''t ok\nBreak it down\n\nLet the jingles be without sadness\nLet the elves
        be with Christmas taking the jingles, and Advent without the rush\nLet Santa
        be with AdventOfCode taking the jingles\n\nShout the elves\nShout Santa",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9hiw1u", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;TL;DR
        I wrote the solution in Rockstar, so it kiiiinda reads like a poem in addition
        to being a working solution.&lt;/p&gt;\n\n&lt;p&gt;Solution / Poem (&lt;a
        href=\"https://www.reddit.com/r/adventofcode/comments/e4yi75/2019_day_1_rockstar_solution/?utm_source=share&amp;amp;utm_medium=ios_app&amp;amp;utm_name=iossmf\"&gt;original
        post&lt;/a&gt; ):&lt;/p&gt;\n\n&lt;p&gt;Sadness is loneliness\nThe programmer
        was anticipating\nAdvent is extraordinary \nThe rush is uncomparable&lt;/p&gt;\n\n&lt;p&gt;Christmas
        takes joy and kindness\nYour spirit is incredible\nWhile joy is as high as
        kindness\nBuild your spirit up\nLet joy be without kindness&lt;/p&gt;\n\n&lt;p&gt;Give
        back your spirit&lt;/p&gt;\n\n&lt;p&gt;AdventOfCode takes time (but it&amp;#39;s
        plenty of fun)\nLet fun be Christmas taking time, and Advent without the rush\nIf
        fun is as low as sadness\nGive back sadness&lt;/p&gt;\n\n&lt;p&gt;Give back
        fun with AdventOfCode taking fun&lt;/p&gt;\n\n&lt;p&gt;The elves are thoughtful\nSanta
        is overseeing\nThe time is now\nWhile the time is right\nListen to the jingles\nIf
        the jingles ain&amp;#39;t ok\nBreak it down&lt;/p&gt;\n\n&lt;p&gt;Let the
        jingles be without sadness\nLet the elves be with Christmas taking the jingles,
        and Advent without the rush\nLet Santa be with AdventOfCode taking the jingles&lt;/p&gt;\n\n&lt;p&gt;Shout
        the elves\nShout Santa&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9hiw1u/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575315906.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 3}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "f9hgb7n", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        true, "author": "[deleted]", "can_mod_post": false, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "# \"Functional\"
        vanilla js\n\n    $0\n      .innerText\n      .trim()\n      .split(\"\\n\")\n      .map(i
        =&gt; parseInt(i))\n      .map(i =&gt; Array.from(Array(Math.floor(Math.pow(i,
        0.3)))).map((_, n) =&gt; Array.from(Array(n+3)).reduce((a, _) =&gt; a || a
        === 0 ? Math.max(Math.floor(a / 3) - 2, 0) : i)))\n      .map(a =&gt; a.reduce((acc,
        v, i) =&gt; i === 1 ? [acc, acc + v] : [acc[0], acc[1] + v]))\n      .reduce((b,
        a) =&gt; [b[0] + a[0], b[1] + a[1]])\n      .map((v, i) =&gt; `Part ${i +
        1}: ${v}`)\n      .join(\"\\n\")", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&amp;quot;Functional&amp;quot;
        vanilla js&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;$0\n  .innerText\n  .trim()\n  .split(&amp;quot;\\n&amp;quot;)\n  .map(i
        =&amp;gt; parseInt(i))\n  .map(i =&amp;gt; Array.from(Array(Math.floor(Math.pow(i,
        0.3)))).map((_, n) =&amp;gt; Array.from(Array(n+3)).reduce((a, _) =&amp;gt;
        a || a === 0 ? Math.max(Math.floor(a / 3) - 2, 0) : i)))\n  .map(a =&amp;gt;
        a.reduce((acc, v, i) =&amp;gt; i === 1 ? [acc, acc + v] : [acc[0], acc[1]
        + v]))\n  .reduce((b, a) =&amp;gt; [b[0] + a[0], b[1] + a[1]])\n  .map((v,
        i) =&amp;gt; `Part ${i + 1}: ${v}`)\n  .join(&amp;quot;\\n&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9hgb7n/",
        "num_reports": null, "locked": false, "name": "t1_f9hgb7n", "created": 1575314674.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575314674.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9hbfzz", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "wzkx", "can_mod_post": false, "created_utc":
        1575312330.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_t1qbo", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**J**\n\n    f=: -&amp;2&amp;(&lt;.&amp;(%&amp;3))\n    g=:
        +/&amp;((f&amp;{.,[)^:(&gt;&amp;8&amp;{.)^:_&amp;f)\"0\n    echo +/f m=: \".&amp;&gt;
        cutLF CR-.~fread''01.dat''\n    echo +/g m\n\n    exit 0", "edited": 1575312727.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9hbfzz",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;J&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f=:
        -&amp;amp;2&amp;amp;(&amp;lt;.&amp;amp;(%&amp;amp;3))\ng=: +/&amp;amp;((f&amp;amp;{.,[)^:(&amp;gt;&amp;amp;8&amp;amp;{.)^:_&amp;amp;f)&amp;quot;0\necho
        +/f m=: &amp;quot;.&amp;amp;&amp;gt; cutLF CR-.~fread&amp;#39;01.dat&amp;#39;\necho
        +/g m\n\nexit 0\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9hbfzz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575312330.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9h7lvv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "toomasv", "can_mod_post": false, "created_utc":
        1575310433.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 0,
        "author_fullname": "t2_11sy0059", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "#Red\nFirst Part\n```\ns: 0 foreach i load
        %input1 [s: i / 3 - 2 + s]\n```\nSecond Part\n```\nfuel: func [m][s: 0 if
        (f: m / 3 - 2) &gt; 0 [s: f + fuel f] s]\ns: 0 foreach i load %input1 [s:
        s + fuel i]\n```", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9h7lvv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Red&lt;/h1&gt;\n\n&lt;p&gt;First
        Part\n&lt;code&gt;\ns: 0 foreach i load %input1 [s: i / 3 - 2 + s]\n&lt;/code&gt;\nSecond
        Part\n&lt;code&gt;\nfuel: func [m][s: 0 if (f: m / 3 - 2) &amp;gt; 0 [s: f
        + fuel f] s]\ns: 0 foreach i load %input1 [s: s + fuel i]\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9h7lvv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575310433.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9h3zfk", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "aardvark1231", "can_mod_post": false,
        "created_utc": 1575308803.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 0, "author_fullname": "t2_24zg2nv1", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "C#\n\n    static void
        Main(string[] args) {            \n                string[] input = System.IO.File.ReadAllLines(\"E:/AdventGit/2019/Day1/Input.txt\");\n                Console.WriteLine(\"Part
        1: \" + Part1(input));\n                Console.WriteLine(\"Part 2: \" + Part2(input));\n                Console.ReadLine();\n            }\n    \n            static
        int Part1(string[] input) {\n                int total = 0;\n                foreach
        (string s in input) {\n                    int fuel = int.Parse(s);\n                    total
        += (fuel / 3) - 2;\n                }\n                return total;\n            }\n    \n            static
        int Part2(string[] input) {\n                int total = 0;\n                foreach
        (string s in input) {\n                    int fuel = int.Parse(s);\n    \n                    while
        ((fuel / 3) - 2 &gt; 0) {\n    \n                        fuel = (fuel / 3)
        - 2;\n                        total += fuel;\n    \n                    }\n                }\n                return
        total;\n            }", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9h3zfk", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;static
        void Main(string[] args) {            \n            string[] input = System.IO.File.ReadAllLines(&amp;quot;E:/AdventGit/2019/Day1/Input.txt&amp;quot;);\n            Console.WriteLine(&amp;quot;Part
        1: &amp;quot; + Part1(input));\n            Console.WriteLine(&amp;quot;Part
        2: &amp;quot; + Part2(input));\n            Console.ReadLine();\n        }\n\n        static
        int Part1(string[] input) {\n            int total = 0;\n            foreach
        (string s in input) {\n                int fuel = int.Parse(s);\n                total
        += (fuel / 3) - 2;\n            }\n            return total;\n        }\n\n        static
        int Part2(string[] input) {\n            int total = 0;\n            foreach
        (string s in input) {\n                int fuel = int.Parse(s);\n\n                while
        ((fuel / 3) - 2 &amp;gt; 0) {\n\n                    fuel = (fuel / 3) - 2;\n                    total
        += fuel;\n\n                }\n            }\n            return total;\n        }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9h3zfk/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575308803.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 3, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9i7wst", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_f9h6o19", "score": 2, "author_fullname":
        "t2_60niu", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "Your poem has been entered for a chance at the
        Day 1 Five-Day prize!", "edited": false, "top_awarded_type": null, "downs":
        0, "author_flair_css_class": null, "name": "t1_f9i7wst", "is_submitter": true,
        "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your poem has been entered
        for a chance at the Day 1 Five-Day prize!&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9i7wst/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575330430.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575330430.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9h6o19", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9h2e8g", "score": 3, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Poem: All
        I want for Christmas\n\n&amp;#x200B;\n\nAll I want for Christmas\n\nis a language
        with class\n\nand perhaps more objects\n\nto deal with this mass\n\n&amp;#x200B;\n\nProceedural
        programming is odd\n\nlibraries collect as morass\n\nwhile I forget about
        real math\n\nlike Fourier and Laplace\n\n&amp;#x200B;\n\nFor Python and R\n\nmy
        bosses I harass\n\nbut unfortunately it seems\n\nwe''re at an impasse\n\n&amp;#x200B;\n\nNot
        to be too subtle\n\nmy software doesn''t have much gas\n\nI only have an outdated\n\nversion
        of SAS", "edited": 1575310528.0, "author_flair_css_class": null, "collapsed":
        false, "downs": 0, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Poem:
        All I want for Christmas&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;All
        I want for Christmas&lt;/p&gt;\n\n&lt;p&gt;is a language with class&lt;/p&gt;\n\n&lt;p&gt;and
        perhaps more objects&lt;/p&gt;\n\n&lt;p&gt;to deal with this mass&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Proceedural
        programming is odd&lt;/p&gt;\n\n&lt;p&gt;libraries collect as morass&lt;/p&gt;\n\n&lt;p&gt;while
        I forget about real math&lt;/p&gt;\n\n&lt;p&gt;like Fourier and Laplace&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;For
        Python and R&lt;/p&gt;\n\n&lt;p&gt;my bosses I harass&lt;/p&gt;\n\n&lt;p&gt;but
        unfortunately it seems&lt;/p&gt;\n\n&lt;p&gt;we&amp;#39;re at an impasse&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Not
        to be too subtle&lt;/p&gt;\n\n&lt;p&gt;my software doesn&amp;#39;t have much
        gas&lt;/p&gt;\n\n&lt;p&gt;I only have an outdated&lt;/p&gt;\n\n&lt;p&gt;version
        of SAS&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "subreddit_type": "public", "can_gild":
        false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9h6o19/",
        "num_reports": null, "locked": false, "name": "t1_f9h6o19", "created": 1575309975.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575309975.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "f9h2e8g", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_e4axxe", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "No one solved
        in SAS? (what''s available at work right now...)\n\n&amp;#x200B;\n\n    proc
        fcmp outlib=work.funcs.a;\n        function getFuel(mass);\n            if
        mass eq . or mass  le 6 then do;\n                fuel = 0;\n            end;\n            else
        do;\n                fuel = (int(mass / 3))-2;\n                fuel = fuel
        + getFuel(fuel);\n            end;\n            return(fuel);\n        endsub;\n    run;\n     \n    options
        cmplib=work.funcs;\n    data work.part2;\n        set work.foo;\n        retain
        tot_fuel;\n        fuel = getFuel(mass);\n        tot_fuel + fuel;\n    run;",
        "edited": 1575308426.0, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No
        one solved in SAS? (what&amp;#39;s available at work right now...)&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;proc
        fcmp outlib=work.funcs.a;\n    function getFuel(mass);\n        if mass eq
        . or mass  le 6 then do;\n            fuel = 0;\n        end;\n        else
        do;\n            fuel = (int(mass / 3))-2;\n            fuel = fuel + getFuel(fuel);\n        end;\n        return(fuel);\n    endsub;\nrun;\n\noptions
        cmplib=work.funcs;\ndata work.part2;\n    set work.foo;\n    retain tot_fuel;\n    fuel
        = getFuel(mass);\n    tot_fuel + fuel;\nrun;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9h2e8g/",
        "num_reports": null, "locked": false, "name": "t1_f9h2e8g", "created": 1575308170.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575308170.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9h2a4x", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mastercake10", "can_mod_post": false,
        "created_utc": 1575308122.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 0, "author_fullname": "t2_13jisr", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Clojure\n\n    (require
        ''[clojure.string :as str])\n    \n    (let [list (map read-string (str/split-lines
        (slurp \"input\")))\n          calc-fuel #(- (int (/ % 3)) 2)]\n      [(reduce
        + (map calc-fuel list))\n       (reduce + (mapcat (fn [x] (rest (take-while
        #(&gt; % 0) (iterate calc-fuel x)))) list))]\n    )", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9h2a4x", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Clojure&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(require
        &amp;#39;[clojure.string :as str])\n\n(let [list (map read-string (str/split-lines
        (slurp &amp;quot;input&amp;quot;)))\n      calc-fuel #(- (int (/ % 3)) 2)]\n  [(reduce
        + (map calc-fuel list))\n   (reduce + (mapcat (fn [x] (rest (take-while #(&amp;gt;
        % 0) (iterate calc-fuel x)))) list))]\n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9h2a4x/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575308122.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9gunui", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "al_draco", "can_mod_post": false, "created_utc":
        1575304988.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 3,
        "author_fullname": "t2_le1xh", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\*\\*Bash solution\\*\\*\n\nBeen wanting
        to get better at bash for a while now; this seems like a fun way to do it.\n\n[first
        part](https://github.com/aldraco/adventofcode/blob/master/nineteen/bash/advent1a.sh)\n\n[second
        part](https://github.com/aldraco/adventofcode/blob/master/nineteen/bash/advent1b.sh)\n\n&amp;#x200B;\n\nIs
        this an idiomatic way to feed data into a script?", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9gunui", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;**Bash solution**&lt;/p&gt;\n\n&lt;p&gt;Been
        wanting to get better at bash for a while now; this seems like a fun way to
        do it.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/aldraco/adventofcode/blob/master/nineteen/bash/advent1a.sh\"&gt;first
        part&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/aldraco/adventofcode/blob/master/nineteen/bash/advent1b.sh\"&gt;second
        part&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Is
        this an idiomatic way to feed data into a script?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9gunui/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575304988.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "fao4ukc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "FinstereGedanken",
        "can_mod_post": false, "created_utc": 1576257324.0, "send_replies": true,
        "parent_id": "t1_f9gm7nn", "score": 1, "author_fullname": "t2_1ygskrn", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Hello,\nhow are you doing on R this far?\nI''m attempting to solve it on
        R as well. \n\nMy solution for day 1 was much different.", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_fao4ukc",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hello,\nhow are you
        doing on R this far?\nI&amp;#39;m attempting to solve it on R as well. &lt;/p&gt;\n\n&lt;p&gt;My
        solution for day 1 was much different.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fao4ukc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1576257324.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9nxxds", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "orangeanton", "can_mod_post": false, "created_utc":
        1575492581.0, "send_replies": true, "parent_id": "t1_f9gm7nn", "score": 1,
        "author_fullname": "t2_2qfhnh3t", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Only crazy if I am too. I''m
        using some common packages to help though, especially dplyr.\n\nHere''s my
        part 1:\n\n    library(dplyr)\n    setwd(dirname(sys.frame(1)$ofile))\n    indata
        &lt;- read.csv(\"input.txt\", header=FALSE)\n    indata %&gt;% mutate(fuel=trunc(V1/3)-2)
        %&gt;% summarize(sum(fuel))\n\n[Part 2 on github](https://github.com/antonbijl/AoC2019/blob/master/Day01p2.R)\n\nI''m
        sure this can be done much better though, I''m a total R noob.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9nxxds",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Only crazy if I am too.
        I&amp;#39;m using some common packages to help though, especially dplyr.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s
        my part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;library(dplyr)\nsetwd(dirname(sys.frame(1)$ofile))\nindata
        &amp;lt;- read.csv(&amp;quot;input.txt&amp;quot;, header=FALSE)\nindata %&amp;gt;%
        mutate(fuel=trunc(V1/3)-2) %&amp;gt;% summarize(sum(fuel))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/antonbijl/AoC2019/blob/master/Day01p2.R\"&gt;Part
        2 on github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m sure this can be done
        much better though, I&amp;#39;m a total R noob.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9nxxds/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575492581.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9h5l7l", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Tomj88", "can_mod_post": false, "created_utc":
        1575309436.0, "send_replies": true, "parent_id": "t1_f9gm7nn", "score": 2,
        "author_fullname": "t2_mvvcy", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I\u2019m doing all mine in
        R, but not sure if it violates rules to link to my GitHub repo (as I have
        solution for day 2 in same repo...)\n\nI think R could through some issues
        up throughout, mainly because of 1-based indexing... but having vectorised
        functions built in (like sum) does make other things easier for sure!", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9h5l7l",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I\u2019m doing all mine
        in R, but not sure if it violates rules to link to my GitHub repo (as I have
        solution for day 2 in same repo...)&lt;/p&gt;\n\n&lt;p&gt;I think R could
        through some issues up throughout, mainly because of 1-based indexing... but
        having vectorised functions built in (like sum) does make other things easier
        for sure!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason": null,
        "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9h5l7l/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575309436.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9gm7nn", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "moo3heril", "can_mod_post": false, "created_utc":
        1575301477.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_kvfun", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Am I crazy for attempting to do all of these
        in R? Probably, probably yes. Did it pay off for a nice solution for Day 1
        though? Again, probably yes. Following is both part A and B\n\n    input &lt;-
        read.table(\"./day1.txt\")\n    aoc1 &lt;- function(this) {return(floor(this
        / 3) - 2)}\n    aoc1r &lt;- function(this) {\n      tmp &lt;- aoc1(this)\n      if
        (tmp &lt;= 0 ) {return(0)} else {return(tmp + aoc1r(tmp))}\n    }\n    \n    sum(aoc1(input))\n    sum(apply(input,
        1, aoc1r))", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9gm7nn", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Am
        I crazy for attempting to do all of these in R? Probably, probably yes. Did
        it pay off for a nice solution for Day 1 though? Again, probably yes. Following
        is both part A and B&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input &amp;lt;- read.table(&amp;quot;./day1.txt&amp;quot;)\naoc1
        &amp;lt;- function(this) {return(floor(this / 3) - 2)}\naoc1r &amp;lt;- function(this)
        {\n  tmp &amp;lt;- aoc1(this)\n  if (tmp &amp;lt;= 0 ) {return(0)} else {return(tmp
        + aoc1r(tmp))}\n}\n\nsum(aoc1(input))\nsum(apply(input, 1, aoc1r))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9gm7nn/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575301477.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9hu5vh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Stupidname101",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9gjih9", "score":
        1, "author_fullname": "t2_9r49a", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Are you planning on doing
        the rest of the days? It is very helpful as a college student who needs extracredit...",
        "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9hu5vh", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Are
        you planning on doing the rest of the days? It is very helpful as a college
        student who needs extracredit...&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9hu5vh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575321802.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575321802.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9gjih9", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "PaladinWho", "can_mod_post": false, "created_utc":
        1575300314.0, "send_replies": true, "parent_id": "t1_f9ggll3", "score": 1,
        "author_fullname": "t2_11ur5a", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I also made Part B for whoever
        may be interested [https://scratch.mit.edu/projects/349943957/](https://scratch.mit.edu/projects/349943957/)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9gjih9", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        also made Part B for whoever may be interested &lt;a href=\"https://scratch.mit.edu/projects/349943957/\"&gt;https://scratch.mit.edu/projects/349943957/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9gjih9/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575300314.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9ggll3", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "PaladinWho", "can_mod_post": false, "created_utc":
        1575298982.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 4,
        "author_fullname": "t2_11ur5a", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "I jokingly solved Day 1 part A in scratch.  It''s
        literally a brute force method since scratch doesn''t have the best string
        handling.  You can check out the project here: [https://scratch.mit.edu/projects/349929639/](https://scratch.mit.edu/projects/349929639/)  \n(edit:
        I personally recommend shift clicking the green flag to turn on turbo mode
        before clicking the green flag, pretty sure it makes it go faster, and I''m
        80% sure it still works)", "edited": 1575299815.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_f9ggll3", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I jokingly solved Day 1 part A in scratch.  It&amp;#39;s
        literally a brute force method since scratch doesn&amp;#39;t have the best
        string handling.  You can check out the project here: &lt;a href=\"https://scratch.mit.edu/projects/349929639/\"&gt;https://scratch.mit.edu/projects/349929639/&lt;/a&gt;&lt;br/&gt;\n(edit:
        I personally recommend shift clicking the green flag to turn on turbo mode
        before clicking the green flag, pretty sure it makes it go faster, and I&amp;#39;m
        80% sure it still works)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ggll3/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575298982.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 4}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9gfw95", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "MirrorLake", "can_mod_post": false, "created_utc":
        1575298665.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 3,
        "author_fullname": "t2_5l2vr", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Excel solution. The only ''manual'' step
        is deciding when to stop dragging the formula out, everthing else is automatic.\n\n1.
        Paste into column A\n2. Formula in B1, extend to B100:\n\n    =IF(ROUNDDOWN(A1/3,0)-2
        &gt; 0,ROUNDDOWN(A1/3,0)-2,0)\n\n3. Drag formula in B1:B100 to column K.\n4.
        Formula in L1, drag to L100:\n    =SUM(B1:K1)\n\n5. Formula in L101:\n   =SUM(L1:L100)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9gfw95", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excel
        solution. The only &amp;#39;manual&amp;#39; step is deciding when to stop
        dragging the formula out, everthing else is automatic.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Paste
        into column A&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Formula in B1, extend to B100:&lt;/p&gt;\n\n&lt;p&gt;=IF(ROUNDDOWN(A1/3,0)-2
        &amp;gt; 0,ROUNDDOWN(A1/3,0)-2,0)&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Drag
        formula in B1:B100 to column K.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Formula
        in L1, drag to L100:\n=SUM(B1:K1)&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Formula
        in L101:\n=SUM(L1:L100)&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9gfw95/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575298665.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9gejmb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "terserterseness", "can_mod_post": false,
        "created_utc": 1575298044.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 2, "author_fullname": "t2_15oytn", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "C# with Linq: \n\n     var
        masses = File.ReadAllText(\"day1.txt\").Split(''\\n'').Select(m=&gt;int.Parse(m));  \n     int
        p1 = masses.Sum(m =&gt; m / 3 - 2);\n     int p2 = masses.Sum(m =&gt; { int
        t=0; while ((m = m / 3 - 2) &gt; 0) t+=m; return t; });", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9gejmb",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C# with Linq: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;
        var masses = File.ReadAllText(&amp;quot;day1.txt&amp;quot;).Split(&amp;#39;\\n&amp;#39;).Select(m=&amp;gt;int.Parse(m));  \n
        int p1 = masses.Sum(m =&amp;gt; m / 3 - 2);\n int p2 = masses.Sum(m =&amp;gt;
        { int t=0; while ((m = m / 3 - 2) &amp;gt; 0) t+=m; return t; });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9gejmb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575298044.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9j16k1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tripkip",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9i8avv", "score":
        2, "author_fullname": "t2_abhl9", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "different lip busy oil placid
        wakeful money consist friendly somber\n\n *This post was mass deleted and
        anonymized with [Redact](https://redact.dev/home)*", "edited": 1732386701.0,
        "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "name":
        "t1_f9j16k1", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;different
        lip busy oil placid wakeful money consist friendly somber&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;This
        post was mass deleted and anonymized with &lt;a href=\"https://redact.dev/home\"&gt;Redact&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9j16k1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575352131.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575352131.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9i8avv", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1575330706.0, "send_replies": true, "parent_id": "t1_f9ga1pf",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "What language is this?",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9i8avv", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What
        language is this?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9i8avv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575330706.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9ga1pf", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "tripkip", "can_mod_post": false, "created_utc":
        1575295951.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 0,
        "author_fullname": "t2_abhl9", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "handle badge disgusted cable growth weather
        boast airport pot command\n\n *This post was mass deleted and anonymized with
        [Redact](https://redact.dev/home)*", "edited": 1732386706.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9ga1pf", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;handle badge disgusted cable
        growth weather boast airport pot command&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;This
        post was mass deleted and anonymized with &lt;a href=\"https://redact.dev/home\"&gt;Redact&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ga1pf/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575295951.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9g7v2m", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Quailia", "can_mod_post": false, "created_utc":
        1575294874.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 0,
        "author_fullname": "t2_2k9puf8y", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Sed, part A\n\n    #!/usr/bin/sed -Enf\n    #
        Run as ./a.sed &lt; input | tr -d ''\\n'' | wc -m\n    s/$/:/\n    :1\n    s/9:/8:x/;s/8:/7:x/;s/7:/6:x/;s/6:/5:x/;s/5:/4:x/;s/4:/3:x/;s/3:/2:x/;s/2:/1:x/;s/1:/0:x/;\n    /([^0])(0+:)/{\n        s//\\1,\\2x/\n        :2;s/0(0*):/9\\1:/g;t2\n        s/1,/0/;s/2,/1/;s/3,/2/;s/4,/3/;s/5,/4/;s/6,/5/;s/7,/6/;s/8,/7/;s/9,/8/\n    }\n    t1\n    s/.*://\n    \n    s/xxx/X/g\n    s/x//g\n    s/XX//\n    H\n    ${x;
        s/\\n//gp}\n\nPart B\n\n    #!/usr/bin/sed -Enf\n    # Run as ./b.sed &lt;
        input | tr -d ''\\n'' | wc -m\n    s/$/:/\n    :1\n    s/9:/8:x/;s/8:/7:x/;s/7:/6:x/;s/6:/5:x/;s/5:/4:x/;s/4:/3:x/;s/3:/2:x/;s/2:/1:x/;s/1:/0:x/;\n    /([^0])(0+:)/{\n        s//\\1,\\2x/\n        :2;s/0(0*):/9\\1:/g;t2\n        s/1,/0/;s/2,/1/;s/3,/2/;s/4,/3/;s/5,/4/;s/6,/5/;s/7,/6/;s/8,/7/;s/9,/8/\n    }\n    t1\n    s/.*://\n    \n    :3\n    s/xxx/X/g\n    s/x//g\n    s/XX?//\n    H\n    s/X/x/g\n    t3\n    ${x;
        s/\\n//gp}", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9g7v2m", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sed,
        part A&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/sed -Enf\n# Run as ./a.sed
        &amp;lt; input | tr -d &amp;#39;\\n&amp;#39; | wc -m\ns/$/:/\n:1\ns/9:/8:x/;s/8:/7:x/;s/7:/6:x/;s/6:/5:x/;s/5:/4:x/;s/4:/3:x/;s/3:/2:x/;s/2:/1:x/;s/1:/0:x/;\n/([^0])(0+:)/{\n    s//\\1,\\2x/\n    :2;s/0(0*):/9\\1:/g;t2\n    s/1,/0/;s/2,/1/;s/3,/2/;s/4,/3/;s/5,/4/;s/6,/5/;s/7,/6/;s/8,/7/;s/9,/8/\n}\nt1\ns/.*://\n\ns/xxx/X/g\ns/x//g\ns/XX//\nH\n${x;
        s/\\n//gp}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part B&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/sed
        -Enf\n# Run as ./b.sed &amp;lt; input | tr -d &amp;#39;\\n&amp;#39; | wc -m\ns/$/:/\n:1\ns/9:/8:x/;s/8:/7:x/;s/7:/6:x/;s/6:/5:x/;s/5:/4:x/;s/4:/3:x/;s/3:/2:x/;s/2:/1:x/;s/1:/0:x/;\n/([^0])(0+:)/{\n    s//\\1,\\2x/\n    :2;s/0(0*):/9\\1:/g;t2\n    s/1,/0/;s/2,/1/;s/3,/2/;s/4,/3/;s/5,/4/;s/6,/5/;s/7,/6/;s/8,/7/;s/9,/8/\n}\nt1\ns/.*://\n\n:3\ns/xxx/X/g\ns/x//g\ns/XX?//\nH\ns/X/x/g\nt3\n${x;
        s/\\n//gp}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9g7v2m/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575294874.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9g15fh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mensch0mat", "can_mod_post": false, "created_utc":
        1575291118.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_53t8wlej", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python 3.7\n\nPart1: \n```python\nsum([(int(x)
        // 3) - 2for x in file.read().split(''\\n'')])\n```\nPart2:   \n```python\nint_list
        = [int(val) for val in in_dat.read().split(''\\n'')]\nsum([int_list.append(x
        // 3 - 2) or x // 3 - 2 for x in int_list if (x // 3 - 2) &gt; 0])\n```",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9g15fh", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3.7&lt;/p&gt;\n\n&lt;p&gt;Part1: \n&lt;code&gt;python\nsum([(int(x) // 3)
        - 2for x in file.read().split(&amp;#39;\\n&amp;#39;)])\n&lt;/code&gt;\nPart2:&lt;br/&gt;\n&lt;code&gt;python\nint_list
        = [int(val) for val in in_dat.read().split(&amp;#39;\\n&amp;#39;)]\nsum([int_list.append(x
        // 3 - 2) or x // 3 - 2 for x in int_list if (x // 3 - 2) &amp;gt; 0])\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9g15fh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575291118.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9fyeq7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "u794575248", "can_mod_post": false, "created_utc":
        1575288623.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_larkuvo", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python 3.8\n\n    # Part 1:\n    sum(int(x)//3-2
        for x in inp.splitlines())\n    # Part 2:\n    from math import log\n    sum(sum((y:=y//3-2)for
        _ in range(int(log(y,3))-1))for x in inp.splitlines()if(y:=int(x)))", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9fyeq7",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3.8&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Part 1:\nsum(int(x)//3-2 for x in inp.splitlines())\n# Part 2:\nfrom math
        import log\nsum(sum((y:=y//3-2)for _ in range(int(log(y,3))-1))for x in inp.splitlines()if(y:=int(x)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fyeq7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575288623.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9i8fsm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1575330798.0, "send_replies": true,
        "parent_id": "t1_f9fxd6q", "score": 2, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "&gt; Perl 6 / Raku\n\nI mis-read \"Raku\" and was wondering how you got Perl
        on your Roku...  I need more caffeine.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9i8fsm", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Perl 6
        / Raku&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I mis-read &amp;quot;Raku&amp;quot;
        and was wondering how you got Perl on your Roku...  I need more caffeine.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9i8fsm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575330798.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9fxd6q", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "21JG", "can_mod_post": false, "created_utc":
        1575287950.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 3,
        "author_fullname": "t2_qdk15", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Perl 6 / Raku\n\n## Day 1\n\n    lines.map(*.Int
        div 3 - 2).sum.say\n\n## Day 2\n\n    my &amp;m-to-f = * div 3 - 2;\n    lines\\\n        .map(*.Int.&amp;m-to-f)\\
        # \"30 60 134\" -&gt; (8 18 42) \n        .map(-&gt; $f { |($f, &amp;m-to-f
        \u2026^ * \u2264 0) })\\ # (8 18 42) -&gt; (8 18 4 42 12 2)\n        .sum\\
        # 86\n        .say", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9fxd6q", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Perl
        6 / Raku&lt;/h1&gt;\n\n&lt;h2&gt;Day 1&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;lines.map(*.Int
        div 3 - 2).sum.say\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Day 2&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;my
        &amp;amp;m-to-f = * div 3 - 2;\nlines\\\n    .map(*.Int.&amp;amp;m-to-f)\\
        # &amp;quot;30 60 134&amp;quot; -&amp;gt; (8 18 42) \n    .map(-&amp;gt; $f
        { |($f, &amp;amp;m-to-f \u2026^ * \u2264 0) })\\ # (8 18 42) -&amp;gt; (8
        18 4 42 12 2)\n    .sum\\ # 86\n    .say\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fxd6q/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575287950.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9frjyp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "chrisby247", "can_mod_post": false, "created_utc":
        1575283974.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 0,
        "author_fullname": "t2_16nkvk", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My Bash solution. Going to see how far I
        can get using only bash built-ins\n\n    #!/bin/bash\n    \n    p2Fuel() {\n        if
        ((${1}&gt;0)); then\n            ((P2+=${1}));\n            p2Fuel $(((${1}/3)-2));\n        fi\n    }\n    \n    ((P1=0));
        ((P2=0));\n    while read -r L || [[ -n \"$L\" ]]; do\n        ((A=(${L}/3)-2));\n        ((P1+=${A}));\n        p2Fuel
        ${A};\n    done &lt; $1;\n    \n    echo \"${P1}-${P2}\"", "edited": 1575284195.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9frjyp",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Bash solution. Going
        to see how far I can get using only bash built-ins&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/bash\n\np2Fuel()
        {\n    if ((${1}&amp;gt;0)); then\n        ((P2+=${1}));\n        p2Fuel $(((${1}/3)-2));\n    fi\n}\n\n((P1=0));
        ((P2=0));\nwhile read -r L || [[ -n &amp;quot;$L&amp;quot; ]]; do\n    ((A=(${L}/3)-2));\n    ((P1+=${A}));\n    p2Fuel
        ${A};\ndone &amp;lt; $1;\n\necho &amp;quot;${P1}-${P2}&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9frjyp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575283974.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9fne17", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "diddle-dingus", "can_mod_post": false,
        "created_utc": 1575280418.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 0, "author_fullname": "t2_550w01uf", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Clojure solution.
        Just picked up this language and I think it rely gud.\n```\n(def input (-&gt;&gt;
        (slurp \"input\")\n                (clojure.string/split-lines)\n                (map
        read-string)))\n\n(defn fuel-req [x] (- (quot x 3) 2))\n\n(def part-1 (transduce
        (map fuel-req) + input))\n(def part-2 (transduce (map #(reduce +\n                                     (rest
        (take-while\n                                            pos?\n                                            (iterate
        fuel-req %)))))\n                       + input))\n```", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9fne17",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Clojure solution. Just
        picked up this language and I think it rely gud.\n```\n(def input (-&amp;gt;&amp;gt;
        (slurp &amp;quot;input&amp;quot;)\n                (clojure.string/split-lines)\n                (map
        read-string)))&lt;/p&gt;\n\n&lt;p&gt;(defn fuel-req [x] (- (quot x 3) 2))&lt;/p&gt;\n\n&lt;p&gt;(def
        part-1 (transduce (map fuel-req) + input))\n(def part-2 (transduce (map #(reduce
        +\n                                     (rest (take-while\n                                            pos?\n                                            (iterate
        fuel-req %)))))\n                       + input))\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fne17/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575280418.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9fg9jd", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "clc_xce", "can_mod_post": false, "created_utc":
        1575270506.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 4,
        "author_fullname": "t2_2azv9y8y", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here''s my solution in **Forth** if anyone
        fancies concatenative programming: [Forth repository](https://github.com/georgjz/advent-of-code-2019-forth)
        \n\nIf my epic \"use the search tool\" skills are right, I''m the first in
        almost two years to post Forth code :P", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9fg9jd", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my solution
        in &lt;strong&gt;Forth&lt;/strong&gt; if anyone fancies concatenative programming:
        &lt;a href=\"https://github.com/georgjz/advent-of-code-2019-forth\"&gt;Forth
        repository&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;If my epic &amp;quot;use the search
        tool&amp;quot; skills are right, I&amp;#39;m the first in almost two years
        to post Forth code :P&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fg9jd/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575270506.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9jbp2f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Smccx",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9iioxe", "score":
        1, "author_fullname": "t2_c0mdv", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "collapsed": false, "body": "That makes
        sense. Tbf I stuck some prints in my recursion because obviously println is
        the best debugger haha", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9jbp2f", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That
        makes sense. Tbf I stuck some prints in my recursion because obviously println
        is the best debugger haha&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9jbp2f/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575365895.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1575365895.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9iioxe", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "fidesachates", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_f9ie2p1", "score": 1, "author_fullname":
        "t2_rp6vv", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "Yes you are right and it\u2019s better. Only
        reason it\u2019s not is because it was easier to debug this way.", "edited":
        false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null,
        "name": "t1_f9iioxe", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes
        you are right and it\u2019s better. Only reason it\u2019s not is because it
        was easier to debug this way.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9iioxe/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575338097.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1575338097.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9ie2p1", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Smccx", "can_mod_post": false, "created_utc":
        1575334833.0, "send_replies": true, "parent_id": "t1_f9ffsvy", "score": 1,
        "author_fullname": "t2_c0mdv", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "In your GetFuelRequired function
        fuels instead of being an accumulated list which you sum, could just be an
        accumulated int of the total", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_f9ie2p1", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;In your GetFuelRequired function fuels instead
        of being an accumulated list which you sum, could just be an accumulated int
        of the total&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ie2p1/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575334833.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "f9ffsvy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fidesachates",
        "can_mod_post": false, "created_utc": 1575269964.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_rp6vv", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "My
        scala solution; haven''t been using it at work lately so I thought I''d use
        this as a cheap refresher.\n\nHappy I remembered tailrecs. \n\n      def main1()
        = {\n        val lines = Source.fromFile(\"src/main/resources/input1.txt\").getLines.map(x
        =&gt; x.toLong).toList\n        val sum = lines.foldLeft(0L) { (acc, i) =&gt;
        acc + GetFuelRequired(i) }\n        println(sum)\n      }\n    \n      @tailrec\n      def
        GetFuelRequired(mass: Long, fuels: List[Long] = List[Long]()): Long = {\n        val
        fuelNeeded = Math.floor(mass / 3).toLong - 2\n        if (fuelNeeded &lt;
        0) { fuels.sum } else { GetFuelRequired(fuelNeeded, fuels :+ fuelNeeded) \n      }",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9ffsvy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        scala solution; haven&amp;#39;t been using it at work lately so I thought
        I&amp;#39;d use this as a cheap refresher.&lt;/p&gt;\n\n&lt;p&gt;Happy I remembered
        tailrecs. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  def main1() = {\n    val
        lines = Source.fromFile(&amp;quot;src/main/resources/input1.txt&amp;quot;).getLines.map(x
        =&amp;gt; x.toLong).toList\n    val sum = lines.foldLeft(0L) { (acc, i) =&amp;gt;
        acc + GetFuelRequired(i) }\n    println(sum)\n  }\n\n  @tailrec\n  def GetFuelRequired(mass:
        Long, fuels: List[Long] = List[Long]()): Long = {\n    val fuelNeeded = Math.floor(mass
        / 3).toLong - 2\n    if (fuelNeeded &amp;lt; 0) { fuels.sum } else { GetFuelRequired(fuelNeeded,
        fuels :+ fuelNeeded) \n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ffsvy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575269964.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9ffbjy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ribenaboy15", "can_mod_post": false, "created_utc":
        1575269415.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 0,
        "author_fullname": "t2_jjpdu", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Brute-y in (elegant) F# 4.5 including I/O**\n\n    let
        masses = \n        File.ReadAllLines \"day1_input.txt\"\n        |&gt; Array.map
        int\n    \n    let answer1 = Array.sumBy (fun v -&gt; v / 3 - 2) masses\n    \n    let
        calculate v =\n        let rec loop v acc =\n            if v &lt; 8 then
        acc\n            else \n            let sum = v / 3 - 2\n            in loop
        sum (acc + sum)\n        loop v 0\n    \n    let answer2 = Array.sumBy calculate
        masses", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9ffbjy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Brute-y
        in (elegant) F# 4.5 including I/O&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        masses = \n    File.ReadAllLines &amp;quot;day1_input.txt&amp;quot;\n    |&amp;gt;
        Array.map int\n\nlet answer1 = Array.sumBy (fun v -&amp;gt; v / 3 - 2) masses\n\nlet
        calculate v =\n    let rec loop v acc =\n        if v &amp;lt; 8 then acc\n        else
        \n        let sum = v / 3 - 2\n        in loop sum (acc + sum)\n    loop v
        0\n\nlet answer2 = Array.sumBy calculate masses\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ffbjy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575269415.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9fe0ea", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "VERYstuck", "can_mod_post": false, "created_utc":
        1575267985.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 0,
        "author_fullname": "t2_3laau", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# [JavaScript](https://github.com/AdamMescher/advent-of-code-2019/blob/master/Day1/index.js)\n    const
        fs = require(''fs'');\n    let input = fs.readFileSync(''./input.txt'', {encoding:
        ''utf8''}).split(/\\r?\\n/);\n    const calculateFuelConsumption = mass =&gt;
        parseInt(mass / 3) - 2;\n    const calculateModuleFuelRequirement = (arr)
        =&gt; {\n        return arr.reduce((accum, mass) =&gt; {\n            return
        accum += calculateFuelConsumption(mass);\n        }, 0);\n    };\n    const
        calculateFuelConsumptionWithAddedFuel = mass =&gt; {\n        let total =
        0;\n        while (mass &gt; 8) {\n        total += calculateFuelConsumption(mass);\n        mass
        = calculateFuelConsumption(mass);\n        }\n        return total;\n    };\n    const
        calculateModuleFuelRequirementWithAddedFuel = (arr) =&gt; {\n        return
        arr.reduce((accum, mass) =&gt; {\n            return accum += calculateFuelConsumptionWithAddedFuel(mass);\n        },
        0);\n    };", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9fe0ea", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://github.com/AdamMescher/advent-of-code-2019/blob/master/Day1/index.js\"&gt;JavaScript&lt;/a&gt;&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        fs = require(&amp;#39;fs&amp;#39;);\nlet input = fs.readFileSync(&amp;#39;./input.txt&amp;#39;,
        {encoding: &amp;#39;utf8&amp;#39;}).split(/\\r?\\n/);\nconst calculateFuelConsumption
        = mass =&amp;gt; parseInt(mass / 3) - 2;\nconst calculateModuleFuelRequirement
        = (arr) =&amp;gt; {\n    return arr.reduce((accum, mass) =&amp;gt; {\n        return
        accum += calculateFuelConsumption(mass);\n    }, 0);\n};\nconst calculateFuelConsumptionWithAddedFuel
        = mass =&amp;gt; {\n    let total = 0;\n    while (mass &amp;gt; 8) {\n    total
        += calculateFuelConsumption(mass);\n    mass = calculateFuelConsumption(mass);\n    }\n    return
        total;\n};\nconst calculateModuleFuelRequirementWithAddedFuel = (arr) =&amp;gt;
        {\n    return arr.reduce((accum, mass) =&amp;gt; {\n        return accum +=
        calculateFuelConsumptionWithAddedFuel(mass);\n    }, 0);\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fe0ea/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575267985.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9fmdnh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Boiethios", "can_mod_post": false, "created_utc":
        1575278827.0, "send_replies": true, "parent_id": "t1_f9fdezd", "score": 2,
        "author_fullname": "t2_1m7sui78", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Mine is really different:\n\n    calcFuel
        :: Int -&gt; Int\n    calcFuel mass = max 0 $ mass `quot` 3 - 2\n\n    calcFuel''
        :: Int -&gt; Int\n    calcFuel'' = List.sum\n            . (List.takeWhile
        $ (/=) 0)\n            . List.tail\n            . List.iterate calcFuel\n\n    calcTotalFuel
        :: (Int -&gt; Int) -&gt; [String] -&gt; Int\n    calcTotalFuel formula = List.sum
        . List.map (formula . read)\n\n    part1 :: [String] -&gt; Int\n    part1
        = calcTotalFuel calcFuel\n\n    part2 :: [String] -&gt; Int\n    part2 = calcTotalFuel
        calcFuel''", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9fmdnh", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Mine
        is really different:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;calcFuel :: Int -&amp;gt;
        Int\ncalcFuel mass = max 0 $ mass `quot` 3 - 2\n\ncalcFuel&amp;#39; :: Int
        -&amp;gt; Int\ncalcFuel&amp;#39; = List.sum\n        . (List.takeWhile $ (/=)
        0)\n        . List.tail\n        . List.iterate calcFuel\n\ncalcTotalFuel
        :: (Int -&amp;gt; Int) -&amp;gt; [String] -&amp;gt; Int\ncalcTotalFuel formula
        = List.sum . List.map (formula . read)\n\npart1 :: [String] -&amp;gt; Int\npart1
        = calcTotalFuel calcFuel\n\npart2 :: [String] -&amp;gt; Int\npart2 = calcTotalFuel
        calcFuel&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fmdnh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575278827.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9fdezd", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_e4axxe", "score": 2, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": 1599272922.0, "downs": 0, "author_flair_css_class":
        null, "collapsed": true, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fdezd/",
        "num_reports": null, "locked": false, "name": "t1_f9fdezd", "created": 1575267344.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575267344.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9fdb93", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "xXabr4", "can_mod_post": false, "created_utc":
        1575267231.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 0,
        "author_fullname": "t2_2rofb1v0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here''s my [Python solution](https://topaz.github.io/paste/#XQAAAQBFAQAAAAAAAAA7mkrvHeIvDZUizuO0c8Sl46lE4LxCubYtwE3rgRtkQHzebYJBaDvJgtbh/b5FvlImr9uzI9QJav5TYy085Ex+9CTmH5IFN3OUUZzAKglhA1tAItgJmyPXZUV6ua8FhDGeOsfwopTp4q1fDIqwRq26RqAVPgKV7PNIXL2JwLSpVU9V1YeLue3lPPOhKCVWYmOZYSP/biladGj+LgfPCz2m55CuRSd6KVGwfsEFoomw+aXqtP8xtlSazkd0lPd3HIvWx+39TFdi5DwKlSB75fb8GwbA)
        for day 1. I went for a straightforward solution, not very optimized I guess,
        but still fast with the constraints given.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9fdb93", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my &lt;a href=\"https://topaz.github.io/paste/#XQAAAQBFAQAAAAAAAAA7mkrvHeIvDZUizuO0c8Sl46lE4LxCubYtwE3rgRtkQHzebYJBaDvJgtbh/b5FvlImr9uzI9QJav5TYy085Ex+9CTmH5IFN3OUUZzAKglhA1tAItgJmyPXZUV6ua8FhDGeOsfwopTp4q1fDIqwRq26RqAVPgKV7PNIXL2JwLSpVU9V1YeLue3lPPOhKCVWYmOZYSP/biladGj+LgfPCz2m55CuRSd6KVGwfsEFoomw+aXqtP8xtlSazkd0lPd3HIvWx+39TFdi5DwKlSB75fb8GwbA\"&gt;Python
        solution&lt;/a&gt; for day 1. I went for a straightforward solution, not very
        optimized I guess, but still fast with the constraints given.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fdb93/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575267231.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9fcdsh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "bugz945123", "can_mod_post": false, "created_utc":
        1575266241.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_4u45qa26", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "A nifty way to utilize Python 3.8''s new
        walrus operator:\n\n    with open(\"input.txt\") as f:\n        masses = [int(l)
        for l in f.readlines()]\n\n    # part 1\n    print(sum(m // 3 - 2 for m in
        masses))\n\n    # part 2\n    total = 0\n    for m in masses:\n        while
        (m := m // 3 - 2) &gt; 0:\n            total += m\n    print(total)", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9fcdsh",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A nifty way to utilize
        Python 3.8&amp;#39;s new walrus operator:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;input.txt&amp;quot;) as f:\n    masses = [int(l) for l in f.readlines()]\n\n#
        part 1\nprint(sum(m // 3 - 2 for m in masses))\n\n# part 2\ntotal = 0\nfor
        m in masses:\n    while (m := m // 3 - 2) &amp;gt; 0:\n        total += m\nprint(total)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fcdsh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575266241.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9f9k6a", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "nirgle", "can_mod_post": false, "created_utc":
        1575263470.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_5cvua", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Go**, using channels: https://github.com/jasonincanada/aoc-2019/blob/master/golang/Day01.go",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9f9k6a", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Go&lt;/strong&gt;,
        using channels: &lt;a href=\"https://github.com/jasonincanada/aoc-2019/blob/master/golang/Day01.go\"&gt;https://github.com/jasonincanada/aoc-2019/blob/master/golang/Day01.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f9k6a/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575263470.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9f96z7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "irichter", "can_mod_post": false, "created_utc":
        1575263128.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_hxwzr", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Verbose solution in Swift [https://github.com/ingorichter/AdventOfCode/blob/master/2019/day-1/Sources/day-1/day\\_1.swift](https://github.com/ingorichter/AdventOfCode/blob/master/2019/day-1/Sources/day-1/day_1.swift)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9f96z7", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Verbose
        solution in Swift &lt;a href=\"https://github.com/ingorichter/AdventOfCode/blob/master/2019/day-1/Sources/day-1/day_1.swift\"&gt;https://github.com/ingorichter/AdventOfCode/blob/master/2019/day-1/Sources/day-1/day_1.swift&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f96z7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575263128.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9f64of", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "giodamelio", "can_mod_post": false, "created_utc":
        1575260583.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_63dck", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Part one and two in Clojure. Also [runnable
        version on repl.it](https://repl.it/@giodamelio/Day-1). Pretty new to Clojure
        so let me know if you see any anti-patterns.\n\n    (ns day-1\n      (:require
        [clojure.string :as str]\n                [clojure.pprint :as pp]))\n    \n    ;;
        Stolen from https://github.com/dgrnbrg/spyscope just without the puget pretty
        printing\n    (defn spy\n      [form]\n      `(doto ~form pp/pprint))\n    \n    (defn
        calculate-fuel\n      \"Calculate the fuel needed to launch a module\"\n      [mass]\n      (-&gt;
        mass\n        (/ 3)\n        int ;; Round down\n        (- 2)))\n    \n    (defn
        calculate-fuel-recursive\n      \"Calculate the fuel needed to launch a module.
        Recursivly calculate the fuel need to launch the fuel as well\"\n      [mass]\n      (loop
        [fuel (calculate-fuel mass)\n             total fuel]\n        (let [the-fuels-fuel
        (calculate-fuel fuel)]\n          (if (&gt;= 0 the-fuels-fuel)\n            total\n            (recur
        the-fuels-fuel (+ total the-fuels-fuel))))))\n    \n    (defn parse\n      \"Parse
        the input into a vector of numbers\"\n      [input]\n      (-&gt;&gt; input\n        ;;
        Read the file\n        slurp\n        ;; Split it into lines\n        str/split-lines\n        ;;
        Convert each line to a number\n        (map read-string)))\n    \n    (defn
        part-1\n      \"Calculates the fuel requement of each module from the input
        and sums them\"\n      []\n      (-&gt;&gt; \"input.txt\"\n        ;; Parse
        the input file\n        parse\n        ;; Calculate the fuel requirement\n        (map
        calculate-fuel)\n        ;; Add them up\n        (reduce +)))\n    \n    (defn
        part-2\n      \"Calculates the fuel requement of each module (with it''s fuel
        included) from the input and sums them\"\n      []\n      (-&gt;&gt; \"input.txt\"\n        ;;
        Parse the input file\n        parse\n        ;; Calculate the fuel requirement\n        (map
        calculate-fuel-recursive)\n        ;; Add them up\n        (reduce +)))\n    \n    (printf
        \"Part 1: %d\\n\" (part-1))\n    (printf \"Part 2: %d\\n\" (part-2))", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9f64of",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part one and two in
        Clojure. Also &lt;a href=\"https://repl.it/@giodamelio/Day-1\"&gt;runnable
        version on repl.it&lt;/a&gt;. Pretty new to Clojure so let me know if you
        see any anti-patterns.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns day-1\n  (:require
        [clojure.string :as str]\n            [clojure.pprint :as pp]))\n\n;; Stolen
        from https://github.com/dgrnbrg/spyscope just without the puget pretty printing\n(defn
        spy\n  [form]\n  `(doto ~form pp/pprint))\n\n(defn calculate-fuel\n  &amp;quot;Calculate
        the fuel needed to launch a module&amp;quot;\n  [mass]\n  (-&amp;gt; mass\n    (/
        3)\n    int ;; Round down\n    (- 2)))\n\n(defn calculate-fuel-recursive\n  &amp;quot;Calculate
        the fuel needed to launch a module. Recursivly calculate the fuel need to
        launch the fuel as well&amp;quot;\n  [mass]\n  (loop [fuel (calculate-fuel
        mass)\n         total fuel]\n    (let [the-fuels-fuel (calculate-fuel fuel)]\n      (if
        (&amp;gt;= 0 the-fuels-fuel)\n        total\n        (recur the-fuels-fuel
        (+ total the-fuels-fuel))))))\n\n(defn parse\n  &amp;quot;Parse the input
        into a vector of numbers&amp;quot;\n  [input]\n  (-&amp;gt;&amp;gt; input\n    ;;
        Read the file\n    slurp\n    ;; Split it into lines\n    str/split-lines\n    ;;
        Convert each line to a number\n    (map read-string)))\n\n(defn part-1\n  &amp;quot;Calculates
        the fuel requement of each module from the input and sums them&amp;quot;\n  []\n  (-&amp;gt;&amp;gt;
        &amp;quot;input.txt&amp;quot;\n    ;; Parse the input file\n    parse\n    ;;
        Calculate the fuel requirement\n    (map calculate-fuel)\n    ;; Add them
        up\n    (reduce +)))\n\n(defn part-2\n  &amp;quot;Calculates the fuel requement
        of each module (with it&amp;#39;s fuel included) from the input and sums them&amp;quot;\n  []\n  (-&amp;gt;&amp;gt;
        &amp;quot;input.txt&amp;quot;\n    ;; Parse the input file\n    parse\n    ;;
        Calculate the fuel requirement\n    (map calculate-fuel-recursive)\n    ;;
        Add them up\n    (reduce +)))\n\n(printf &amp;quot;Part 1: %d\\n&amp;quot;
        (part-1))\n(printf &amp;quot;Part 2: %d\\n&amp;quot; (part-2))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f64of/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575260583.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9ky1g6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CybertRON987",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9ixuv0", "score":
        1, "author_fullname": "t2_6w0ji", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Thanks /u/losmooks for giving
        this a quick look. I''ll make the changes  :D", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_f9ky1g6", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks &lt;a href=\"/u/losmooks\"&gt;/u/losmooks&lt;/a&gt;
        for giving this a quick look. I&amp;#39;ll make the changes  :D&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ky1g6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575410192.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575410192.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9ixuv0", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "losmooks", "can_mod_post": false, "created_utc":
        1575349010.0, "send_replies": true, "parent_id": "t1_f9f5rb3", "score": 1,
        "author_fullname": "t2_14m4z1", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "&gt;const fuelCalculation
        = R.compose(subtract2(), floor(), divideBy3())\n\nYou don''t need to invoke
        your function calls in compose if you aren''t passing anything in them. Ramda
        is auto curried. so its just returning a function.\n\n`const part1 = R.reduce((acc,
        mass) =&gt; acc + fuelCalculation(mass), 0)`\n\n&amp;#x200B;\n\njust expects
        an argument now so its point free, not better but in case you were curious.\n\n&amp;#x200B;\n\n&amp;#x200B;\n\nIt''s
        a bit late so thats all I got but nice work!", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9ixuv0", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;const fuelCalculation
        = R.compose(subtract2(), floor(), divideBy3())&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You
        don&amp;#39;t need to invoke your function calls in compose if you aren&amp;#39;t
        passing anything in them. Ramda is auto curried. so its just returning a function.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const
        part1 = R.reduce((acc, mass) =&amp;gt; acc + fuelCalculation(mass), 0)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;just
        expects an argument now so its point free, not better but in case you were
        curious.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s
        a bit late so thats all I got but nice work!&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ixuv0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575349010.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9f5rb3", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "CybertRON987", "can_mod_post": false,
        "created_utc": 1575260295.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 1, "author_fullname": "t2_6w0ji", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "JS, functional soln,
        trying to work on getting better with functional programming. If there''s
        anything I can do better, hmu! \n\n    const fs = require(''fs'')\n    const
        path = require(''path'')\n    const R = require(''ramda'')\n    \n    const
        input = fs.readFileSync(path.join(__dirname, ''input.txt''), ''UTF8'')\n    const
        inputArray = input.split(''\\n'')\n    \n    const divideBy3 = R.divide(R.__,
        3)\n    const floor = R.curry(Math.floor)\n    const subtract2 = R.subtract(R.__,
        2)\n    const fuelCalculation = R.compose(subtract2(), floor(), divideBy3())\n    \n    const
        part1 = massArray =&gt; {\n      return R.reduce((acc, mass) =&gt; acc + fuelCalculation(mass),
        0, massArray)\n    }\n    \n    const part2 = () =&gt; {\n      const reduceFuelCalculations
        = R.reduce((acc, fuel) =&gt; acc + fuel, 0)\n    \n      const fuelCalculationIsGTZero
        = R.compose(\n        R.lte(R.__, 0),\n        R.curry(fuelCalculation)\n      )\n    \n      const
        mapMassToFuelCosts = R.map(mass =&gt; {\n        let fuelValue = fuelCalculation(mass)\n        let
        acc = fuelValue\n        R.until(fuelCalculationIsGTZero, () =&gt; {\n          fuelValue
        = fuelCalculation(fuelValue)\n          acc = acc + fuelValue\n          return
        fuelValue\n        })(fuelValue)\n        return acc\n      })\n    \n      return
        R.compose(reduceFuelCalculations, mapMassToFuelCosts)(inputArray)\n    }\n    \n    const
        part1soln = part1(inputArray)\n    const part2soln = part2()", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9f5rb3",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JS, functional soln,
        trying to work on getting better with functional programming. If there&amp;#39;s
        anything I can do better, hmu! &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        fs = require(&amp;#39;fs&amp;#39;)\nconst path = require(&amp;#39;path&amp;#39;)\nconst
        R = require(&amp;#39;ramda&amp;#39;)\n\nconst input = fs.readFileSync(path.join(__dirname,
        &amp;#39;input.txt&amp;#39;), &amp;#39;UTF8&amp;#39;)\nconst inputArray =
        input.split(&amp;#39;\\n&amp;#39;)\n\nconst divideBy3 = R.divide(R.__, 3)\nconst
        floor = R.curry(Math.floor)\nconst subtract2 = R.subtract(R.__, 2)\nconst
        fuelCalculation = R.compose(subtract2(), floor(), divideBy3())\n\nconst part1
        = massArray =&amp;gt; {\n  return R.reduce((acc, mass) =&amp;gt; acc + fuelCalculation(mass),
        0, massArray)\n}\n\nconst part2 = () =&amp;gt; {\n  const reduceFuelCalculations
        = R.reduce((acc, fuel) =&amp;gt; acc + fuel, 0)\n\n  const fuelCalculationIsGTZero
        = R.compose(\n    R.lte(R.__, 0),\n    R.curry(fuelCalculation)\n  )\n\n  const
        mapMassToFuelCosts = R.map(mass =&amp;gt; {\n    let fuelValue = fuelCalculation(mass)\n    let
        acc = fuelValue\n    R.until(fuelCalculationIsGTZero, () =&amp;gt; {\n      fuelValue
        = fuelCalculation(fuelValue)\n      acc = acc + fuelValue\n      return fuelValue\n    })(fuelValue)\n    return
        acc\n  })\n\n  return R.compose(reduceFuelCalculations, mapMassToFuelCosts)(inputArray)\n}\n\nconst
        part1soln = part1(inputArray)\nconst part2soln = part2()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f5rb3/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575260295.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9f1ovv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kirkegaarr", "can_mod_post": false, "created_utc":
        1575257251.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_1q29jum", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "python3 recursive solution. I''m a big fan
        of sending the puzzle input through `stdin`, eg: `bin/part1 &lt; input`\n\n    from
        typing import Iterator\n    from sys import stdin\n    \n    def read_input()
        -&gt; Iterator[int]:\n        return map(int, stdin)\n    \n    def fuel_required(mass:
        int) -&gt; int:\n        return mass // 3 - 2\n    \n    def total_fuel(mass:
        int) -&gt; int:\n        fuel = fuel_required(mass)\n        return fuel +
        total_fuel(fuel) if fuel &gt; 0 else 0\n    \n    def part1():\n        print(sum(map(fuel_required,
        read_input())))\n    \n    def part2():\n        print(sum(map(total_fuel,
        read_input())))\n\n\\[ [repo](https://github.com/gumballhead/aoc2019) | [day1](https://github.com/gumballhead/aoc2019/tree/master/day1)
        \\]", "edited": 1575258139.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9f1ovv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;python3
        recursive solution. I&amp;#39;m a big fan of sending the puzzle input through
        &lt;code&gt;stdin&lt;/code&gt;, eg: &lt;code&gt;bin/part1 &amp;lt; input&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        typing import Iterator\nfrom sys import stdin\n\ndef read_input() -&amp;gt;
        Iterator[int]:\n    return map(int, stdin)\n\ndef fuel_required(mass: int)
        -&amp;gt; int:\n    return mass // 3 - 2\n\ndef total_fuel(mass: int) -&amp;gt;
        int:\n    fuel = fuel_required(mass)\n    return fuel + total_fuel(fuel) if
        fuel &amp;gt; 0 else 0\n\ndef part1():\n    print(sum(map(fuel_required, read_input())))\n\ndef
        part2():\n    print(sum(map(total_fuel, read_input())))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;[
        &lt;a href=\"https://github.com/gumballhead/aoc2019\"&gt;repo&lt;/a&gt; |
        &lt;a href=\"https://github.com/gumballhead/aoc2019/tree/master/day1\"&gt;day1&lt;/a&gt;
        ]&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f1ovv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575257251.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9f1kus", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Part 2 Solution, Python\n\n    def recursiveHelper(num):\n        d
        = num // 3 - 2\n        if d &lt;= 0:\n            return 0\n        return
        d + recursiveHelper(d)\n    lines = [int(line.rstrip(''\\n'')) for line in
        open(''input1.txt'')]\n    print(sum(map(recursiveHelper, lines)))", "edited":
        false, "downs": 0, "author_flair_css_class": null, "collapsed": false, "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part 2 Solution, Python&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        recursiveHelper(num):\n    d = num // 3 - 2\n    if d &amp;lt;= 0:\n        return
        0\n    return d + recursiveHelper(d)\nlines = [int(line.rstrip(&amp;#39;\\n&amp;#39;))
        for line in open(&amp;#39;input1.txt&amp;#39;)]\nprint(sum(map(recursiveHelper,
        lines)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f1kus/",
        "num_reports": null, "locked": false, "name": "t1_f9f1kus", "created": 1575257171.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575257171.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9f1g4b", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "2SmoothForYou", "can_mod_post": false,
        "created_utc": 1575257076.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 2, "author_fullname": "t2_hephg", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Haskell\n\n    module
        Main where  \n    \n    main = do  \n      putStrLn \"Advent of Code Day 1\"  \n      input
        &lt;- readFile \"input.txt\"  \n      putStrLn \"Part 1\"  \n      print $
        sum . map (getFuel1 . read :: String -&gt; Int) $ lines input  \n      putStrLn
        \"Part 2\"  \n      print $ sum . map (getFuel2 . read :: String -&gt; Int)
        $ lines input      \n    \n    getFuel1 :: Int -&gt; Int  \n    getFuel1 n
        = n `div` 3 - 2  \n    \n    getFuel2 :: Int -&gt; Int  \n    getFuel2 n  \n     |
        (n `div` 3 - 2) &lt;= 0 = 0  \n     | n &gt; 0 = (n `div` 3 - 2) + getFuel2
        (n `div` 3 - 2)\n\nI realized after I could''ve been more efficient and used
        the (&amp;&amp;&amp;) function in Control.Arrow to split the input to both
        part 1 and part 2 but I did this one really quickly on a bus back to campus
        after a 5 hour flight so I just pumped out the easiest solution, excited for
        the rest of the calendar!", "edited": 1575257378.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_f9f1g4b", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module
        Main where  \n\nmain = do  \n  putStrLn &amp;quot;Advent of Code Day 1&amp;quot;  \n  input
        &amp;lt;- readFile &amp;quot;input.txt&amp;quot;  \n  putStrLn &amp;quot;Part
        1&amp;quot;  \n  print $ sum . map (getFuel1 . read :: String -&amp;gt; Int)
        $ lines input  \n  putStrLn &amp;quot;Part 2&amp;quot;  \n  print $ sum .
        map (getFuel2 . read :: String -&amp;gt; Int) $ lines input      \n\ngetFuel1
        :: Int -&amp;gt; Int  \ngetFuel1 n = n `div` 3 - 2  \n\ngetFuel2 :: Int -&amp;gt;
        Int  \ngetFuel2 n  \n | (n `div` 3 - 2) &amp;lt;= 0 = 0  \n | n &amp;gt; 0
        = (n `div` 3 - 2) + getFuel2 (n `div` 3 - 2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        realized after I could&amp;#39;ve been more efficient and used the (&amp;amp;&amp;amp;&amp;amp;)
        function in Control.Arrow to split the input to both part 1 and part 2 but
        I did this one really quickly on a bus back to campus after a 5 hour flight
        so I just pumped out the easiest solution, excited for the rest of the calendar!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f1g4b/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575257076.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 2, "removal_reason": null, "link_id": "t3_e4axxe",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "awarders": [], "mod_reason_by": null, "banned_by": null, "ups": 1, "removal_reason":
        null, "link_id": "t3_e4axxe", "author_flair_template_id": null, "likes": null,
        "replies": {"kind": "Listing", "data": {"after": null, "dist": null, "modhash":
        "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "distinguished": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "f9gpmbd", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        true, "author": "rabuf", "can_mod_post": false, "send_replies": true, "parent_id":
        "t1_f9gjw7u", "score": 2, "author_fullname": "t2_38xc9", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "If you haven\u2019t yet, checkout the mailing lists for J. They were very
        active last I looked, and very friendly.", "edited": false, "author_flair_css_class":
        null, "name": "t1_f9gpmbd", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If
        you haven\u2019t yet, checkout the mailing lists for J. They were very active
        last I looked, and very friendly.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "link_id": "t3_e4axxe", "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": null, "treatment_tags":
        [], "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9gpmbd/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575302911.0, "author_flair_text": null, "collapsed": false, "created_utc":
        1575302911.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9gjw7u", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9gdkdq", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "The one I
        would really love to try (from this family) is APL, but J works quite nicely
        on Android, so I can try to solve the problems on my phone while commuting.\n\nOTOH
        searching for information is hard, the name is not googleable. Fortunately
        the documentation is quite nice.\n\nYes, trying to think differently is great,
        that''s why I always try languages that I do not use normally.", "edited":
        false, "downs": 0, "author_flair_css_class": null, "collapsed": false, "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The one I would really
        love to try (from this family) is APL, but J works quite nicely on Android,
        so I can try to solve the problems on my phone while commuting.&lt;/p&gt;\n\n&lt;p&gt;OTOH
        searching for information is hard, the name is not googleable. Fortunately
        the documentation is quite nice.&lt;/p&gt;\n\n&lt;p&gt;Yes, trying to think
        differently is great, that&amp;#39;s why I always try languages that I do
        not use normally.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9gjw7u/",
        "num_reports": null, "locked": false, "name": "t1_f9gjw7u", "created": 1575300473.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575300473.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 3, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "f9gdkdq", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "rabuf", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9fpkzn", "score": 2, "author_fullname": "t2_38xc9",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Cool. I liked J but found it difficult to use regularly. I should
        revisit it now that I''m a bit more mature in my understanding of computers
        and languages (I last invested time in it over 10 years ago now, shortly after
        getting out of college). It''s probably a better languages for this as the
        one I''ve chosen is rather poorly documented. But it''s a fun challenge trying
        to figure out how to solve these in a very different style than my normal
        work.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9gdkdq", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cool.
        I liked J but found it difficult to use regularly. I should revisit it now
        that I&amp;#39;m a bit more mature in my understanding of computers and languages
        (I last invested time in it over 10 years ago now, shortly after getting out
        of college). It&amp;#39;s probably a better languages for this as the one
        I&amp;#39;ve chosen is rather poorly documented. But it&amp;#39;s a fun challenge
        trying to figure out how to solve these in a very different style than my
        normal work.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9gdkdq/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575297598.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1575297598.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9fv92e", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "doublec", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9fpkzn", "score": 1, "author_fullname": "t2_1s6a",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "I used J as well. I initially tried a scan-type solution using
        power - I got a solution but not very clean. I re-did it using a recursive
        solution but I''d be interested in seeing other approaches.", "edited": false,
        "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "name":
        "t1_f9fv92e", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        used J as well. I initially tried a scan-type solution using power - I got
        a solution but not very clean. I re-did it using a recursive solution but
        I&amp;#39;d be interested in seeing other approaches.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fv92e/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575286549.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575286549.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9fpkzn", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9f1d5e", "score": 2, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Nice.\n\nI''m
        trying J and as I''ve never done it before (and have little time) I''m a bit
        stumped on the second part still. Your will serve as inspiration.\n\nMy first
        is quite similar to yours:\n\n    a=. 3 : ''_2+&lt;.3%~y''\n    t=:all the
        numbers of the input\n    +/ a t", "edited": false, "author_flair_css_class":
        null, "collapsed": false, "downs": 0, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Nice.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        trying J and as I&amp;#39;ve never done it before (and have little time) I&amp;#39;m
        a bit stumped on the second part still. Your will serve as inspiration.&lt;/p&gt;\n\n&lt;p&gt;My
        first is quite similar to yours:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a=. 3
        : &amp;#39;_2+&amp;lt;.3%~y&amp;#39;\nt=:all the numbers of the input\n+/
        a t\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fpkzn/",
        "num_reports": null, "locked": false, "name": "t1_f9fpkzn", "created": 1575282571.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575282571.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "f9f1d5e", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "rabuf", "can_mod_post": false, "created_utc":
        1575257016.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_38xc9", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Shakti\n\nI decided to play around with
        a new language, in the APL/J/K family this time.\n\n    data: \"i\"$0:\"01.txt\"\n    fuel:
        {[m] (3 div m) - 2}\n    recfuel: {[m] $[(fuel m) &lt; 0; 0; (fuel m) + (recfuel
        (fuel m))]}\n    +/fuel''data\n    +/recfuel''data\n\nThis''ll be something
        I continue to play with, but Common Lisp will be my main language.\n\nI''ve
        been spending the last few minutes learning more. Integer division can be
        skipped in favor of using `_` (floor), and fuel can be rewritten to return
        0 for 0 or negative values using max, `|`:\n\n    fuel: {0 | (_ m % 3) - 2}\n\nPart
        1:\n\n    +/fuel data\n\nThe recursive version can be simplified a bit using
        scan, `\\`, and drop `1 _ ??`. So part 2 becomes:\n\n    +/+/(1 _ fuel\\)data\n\nNo
        need, now, to write conditional or recursive code. Scan will repeatedly apply
        the function to the left to the data on the right until the result is 0 (probably
        some other condition, but that''s my current understanding).", "edited": 1575259877.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9f1d5e",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Shakti&lt;/h1&gt;\n\n&lt;p&gt;I
        decided to play around with a new language, in the APL/J/K family this time.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data:
        &amp;quot;i&amp;quot;$0:&amp;quot;01.txt&amp;quot;\nfuel: {[m] (3 div m) -
        2}\nrecfuel: {[m] $[(fuel m) &amp;lt; 0; 0; (fuel m) + (recfuel (fuel m))]}\n+/fuel&amp;#39;data\n+/recfuel&amp;#39;data\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This&amp;#39;ll
        be something I continue to play with, but Common Lisp will be my main language.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve
        been spending the last few minutes learning more. Integer division can be
        skipped in favor of using &lt;code&gt;_&lt;/code&gt; (floor), and fuel can
        be rewritten to return 0 for 0 or negative values using max, &lt;code&gt;|&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fuel:
        {0 | (_ m % 3) - 2}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;+/fuel
        data\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The recursive version can be simplified
        a bit using scan, &lt;code&gt;\\&lt;/code&gt;, and drop &lt;code&gt;1 _ ??&lt;/code&gt;.
        So part 2 becomes:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;+/+/(1 _ fuel\\)data\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;No
        need, now, to write conditional or recursive code. Scan will repeatedly apply
        the function to the left to the data on the right until the result is 0 (probably
        some other condition, but that&amp;#39;s my current understanding).&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f1d5e/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575257016.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9jqpuw", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Rietty", "can_mod_post": false, "created_utc":
        1575383316.0, "send_replies": true, "parent_id": "t1_f9ez7vy", "score": 1,
        "author_fullname": "t2_jl2zu", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I just have to ask, why even
        bother using AVX512, or any AVX here?", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9jqpuw", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I just have to ask, why even
        bother using AVX512, or any AVX here?&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9jqpuw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575383316.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9ez7vy", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_e4axxe", "score": 1, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": true, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ez7vy/",
        "num_reports": null, "locked": false, "name": "t1_f9ez7vy", "created": 1575255392.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575255392.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9eyvvr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "aoc-fan", "can_mod_post": false, "created_utc":
        1575255138.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_13cqpt", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[TypeScript](https://github.com/bhosale-ajay/adventofcode/blob/master/2019/ts/D01.test.ts),
        [GoLang](https://github.com/bhosale-ajay/adventofcode/blob/master/2019/go/01_test.go),
        and [Clojure](https://github.com/bhosale-ajay/adventofcode/blob/master/2019/clj/test/d01.clj)
        Solutions : [Repo](https://github.com/bhosale-ajay/adventofcode/tree/master/2019)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9eyvvr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/bhosale-ajay/adventofcode/blob/master/2019/ts/D01.test.ts\"&gt;TypeScript&lt;/a&gt;,
        &lt;a href=\"https://github.com/bhosale-ajay/adventofcode/blob/master/2019/go/01_test.go\"&gt;GoLang&lt;/a&gt;,
        and &lt;a href=\"https://github.com/bhosale-ajay/adventofcode/blob/master/2019/clj/test/d01.clj\"&gt;Clojure&lt;/a&gt;
        Solutions : &lt;a href=\"https://github.com/bhosale-ajay/adventofcode/tree/master/2019\"&gt;Repo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eyvvr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575255138.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "awarders": [], "mod_reason_by": null, "banned_by": null, "ups": 1, "removal_reason":
        null, "link_id": "t3_e4axxe", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "f9gmw1s", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9fcz1v", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Yeah but he
        said is was trying to write in as function a style as possible", "edited":
        false, "downs": 0, "author_flair_css_class": null, "collapsed": false, "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah but he said is
        was trying to write in as function a style as possible&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9gmw1s/",
        "num_reports": null, "locked": false, "name": "t1_f9gmw1s", "created": 1575301769.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575301769.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 3, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "f9fcz1v", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "SmartAsFart", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9f1gso", "score": 1, "author_fullname": "t2_zur9e",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "I would argue that this isn''t pythonic style though. The original
        was already fine.", "edited": false, "top_awarded_type": null, "downs": 0,
        "author_flair_css_class": null, "name": "t1_f9fcz1v", "is_submitter": false,
        "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would argue that this isn&amp;#39;t
        pythonic style though. The original was already fine.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fcz1v/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575266872.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575266872.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9f2bo4", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Jay__Money", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9f1gso", "score": 1, "author_fullname": "t2_nu6t1",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "I love it, thanks!", "edited": false, "top_awarded_type": null,
        "downs": 0, "author_flair_css_class": null, "name": "t1_f9f2bo4", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I love it, thanks!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f2bo4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575257709.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575257709.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9f1gso", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f9eyv0f", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "&gt; total_module_fuel
        = sum(calculate_fuel(mass) for mass in masses)\n\n    You can change this
        to total_module_fuel=sum(map(calculate_fuel,masses))", "edited": false, "author_flair_css_class":
        null, "collapsed": false, "downs": 0, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;total_module_fuel =
        sum(calculate_fuel(mass) for mass in masses)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre&gt;&lt;code&gt;You
        can change this to total_module_fuel=sum(map(calculate_fuel,masses))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f1gso/",
        "num_reports": null, "locked": false, "name": "t1_f9f1gso", "created": 1575257089.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575257089.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "f9eyv0f", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Jay__Money", "can_mod_post": false, "created_utc":
        1575255120.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_nu6t1", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here''s my day 1 python solution. Trying
        to write in as functional a style as possible:\n\n    from aoc_lib import
        file_utils\n\n\tdef calculate_fuel(mass: int) -&gt; int:\n\t\treturn (mass//3)-2\n\n\tdef
        calculate_fuel_for_fuel(current_fuel: int) -&gt; int:\n\t\tfuel = max(calculate_fuel(current_fuel),
        0)\n\t\tif fuel == 0:\n\t\t\treturn fuel\n\t\treturn fuel + calculate_fuel_for_fuel(fuel)\n\n\tdef
        calculate_total_fuel_for_module(mass: int) -&gt; int:\n\t\tmodule_fuel = calculate_fuel(mass)\n\t\treturn
        module_fuel + calculate_fuel_for_fuel(module_fuel)\n\n\tif __name__ == ''__main__'':\n\t    masses
        = file_utils.read_file_into_int_list(''inputs/day1input.txt'')\n\n\t    total_module_fuel
        = sum(calculate_fuel(mass) for mass in masses)\n\t    print(f''Part 1: {total_module_fuel}'')\n\n\t    total_fuel
        = sum(calculate_total_fuel_for_module(mass) for mass in masses)\n\t    print(f''Part
        2: {total_fuel}'')", "edited": 1575255490.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9eyv0f", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        my day 1 python solution. Trying to write in as functional a style as possible:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        aoc_lib import file_utils\n\ndef calculate_fuel(mass: int) -&amp;gt; int:\n    return
        (mass//3)-2\n\ndef calculate_fuel_for_fuel(current_fuel: int) -&amp;gt; int:\n    fuel
        = max(calculate_fuel(current_fuel), 0)\n    if fuel == 0:\n        return
        fuel\n    return fuel + calculate_fuel_for_fuel(fuel)\n\ndef calculate_total_fuel_for_module(mass:
        int) -&amp;gt; int:\n    module_fuel = calculate_fuel(mass)\n    return module_fuel
        + calculate_fuel_for_fuel(module_fuel)\n\nif __name__ == &amp;#39;__main__&amp;#39;:\n    masses
        = file_utils.read_file_into_int_list(&amp;#39;inputs/day1input.txt&amp;#39;)\n\n    total_module_fuel
        = sum(calculate_fuel(mass) for mass in masses)\n    print(f&amp;#39;Part 1:
        {total_module_fuel}&amp;#39;)\n\n    total_fuel = sum(calculate_total_fuel_for_module(mass)
        for mass in masses)\n    print(f&amp;#39;Part 2: {total_fuel}&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eyv0f/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575255120.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9ey3dl", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "rafaeelaudibert", "can_mod_post": false,
        "created_utc": 1575254548.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 2, "author_fullname": "t2_2fkk23bi", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Here''s my [solution](https://github.com/rafaeelaudibert/AdventOfCode.dart/blob/master/lib/src/day_1.dart)
        in Dart.\n\n&amp;#x200B;\n\nWill try to keep it going for all the 25 days,
        while try to learn some new functional style programming with dart [here](https://github.com/rafaeelaudibert/AdventOfCode.dart)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9ey3dl", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        my &lt;a href=\"https://github.com/rafaeelaudibert/AdventOfCode.dart/blob/master/lib/src/day_1.dart\"&gt;solution&lt;/a&gt;
        in Dart.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Will try
        to keep it going for all the 25 days, while try to learn some new functional
        style programming with dart &lt;a href=\"https://github.com/rafaeelaudibert/AdventOfCode.dart\"&gt;here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ey3dl/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575254548.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9exxv4", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "driedplant", "can_mod_post": false, "created_utc":
        1575254432.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 3,
        "author_fullname": "t2_i3fst", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python 3 one-liners:\n\nPart 1:\n\n    print(sum([(int(i)//3)-2
        for i in open(''input.txt'').readlines()]))\n\nPart 2:\n\n    print(sum([(lambda
        f, x: x + f(f, (x//3)-2) if x &gt; 0 else 0)(lambda f, x: x + f(f, (x//3)-2)
        if x &gt; 0 else 0, (int(i)//3)-2) for i in open(''input.txt'').readlines()]))",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9exxv4", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3 one-liners:&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(sum([(int(i)//3)-2
        for i in open(&amp;#39;input.txt&amp;#39;).readlines()]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(sum([(lambda f, x: x + f(f, (x//3)-2)
        if x &amp;gt; 0 else 0)(lambda f, x: x + f(f, (x//3)-2) if x &amp;gt; 0 else
        0, (int(i)//3)-2) for i in open(&amp;#39;input.txt&amp;#39;).readlines()]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9exxv4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575254432.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9exvv0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "uniqueYoung91", "can_mod_post": false,
        "created_utc": 1575254392.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 1, "author_fullname": "t2_46wzue98", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Here is my solution
        in C++. I am still a beginner but I want to give this challenge a shot to
        learn more about programming. Any feedback is very appreciated.\n\n&amp;#x200B;\n\n\\#include&lt;iostream&gt;  \n\\#include&lt;fstream&gt;  \n\\#include&lt;string&gt;  \n\\#include&lt;sstream&gt;  \n\\#include&lt;cmath&gt;  \nusing
        namespace std;  \nint calculateFurtherFuel(int fuel){  \n int totalResult;  \nint
        furtherFuel;  \n fuel /= 3;  \n fuel = floor(fuel);  \n fuel -= 2;  \n furtherFuel
        = fuel;  \nwhile(furtherFuel &gt;= 0) {  \n // just result where all operations
        could be conducted considered  \n totalResult +=furtherFuel;  \n furtherFuel
        /= 3;  \n furtherFuel = floor(furtherFuel);  \n furtherFuel -= 2;  \n }  \n\n\nreturn
        totalResult;  \n}  \n\n\n// calculate the sum of all --&gt; separately --&gt;
        altogether  \nint main(){  \nifstream file(\"input.txt\");  \n string str;  \nint
        x = 0;  \nint furtherFuel = 0;  \nint totalResult = 0;  \nwhile(getline(file,str)){  \nstringstream
        ss(str);  \n ss&gt;&gt;x;  \n totalResult+=calculateFurtherFuel(x);  \n }  \n\n\n   cout&lt;&lt;\"Result
        is \"&lt;&lt;totalResult&lt;&lt;endl;  \nreturn 0;  \n}", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9exvv0",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is my solution
        in C++. I am still a beginner but I want to give this challenge a shot to
        learn more about programming. Any feedback is very appreciated.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;#include&amp;lt;iostream&amp;gt;&lt;br/&gt;\n#include&amp;lt;fstream&amp;gt;&lt;br/&gt;\n#include&amp;lt;string&amp;gt;&lt;br/&gt;\n#include&amp;lt;sstream&amp;gt;&lt;br/&gt;\n#include&amp;lt;cmath&amp;gt;&lt;br/&gt;\nusing
        namespace std;&lt;br/&gt;\nint calculateFurtherFuel(int fuel){&lt;br/&gt;\n
        int totalResult;&lt;br/&gt;\nint furtherFuel;&lt;br/&gt;\n fuel /= 3;&lt;br/&gt;\n
        fuel = floor(fuel);&lt;br/&gt;\n fuel -= 2;&lt;br/&gt;\n furtherFuel = fuel;&lt;br/&gt;\nwhile(furtherFuel
        &amp;gt;= 0) {&lt;br/&gt;\n // just result where all operations could be conducted
        considered&lt;br/&gt;\n totalResult +=furtherFuel;&lt;br/&gt;\n furtherFuel
        /= 3;&lt;br/&gt;\n furtherFuel = floor(furtherFuel);&lt;br/&gt;\n furtherFuel
        -= 2;&lt;br/&gt;\n }  &lt;/p&gt;\n\n&lt;p&gt;return totalResult;&lt;br/&gt;\n}  &lt;/p&gt;\n\n&lt;p&gt;//
        calculate the sum of all --&amp;gt; separately --&amp;gt; altogether&lt;br/&gt;\nint
        main(){&lt;br/&gt;\nifstream file(&amp;quot;input.txt&amp;quot;);&lt;br/&gt;\n
        string str;&lt;br/&gt;\nint x = 0;&lt;br/&gt;\nint furtherFuel = 0;&lt;br/&gt;\nint
        totalResult = 0;&lt;br/&gt;\nwhile(getline(file,str)){&lt;br/&gt;\nstringstream
        ss(str);&lt;br/&gt;\n ss&amp;gt;&amp;gt;x;&lt;br/&gt;\n totalResult+=calculateFurtherFuel(x);&lt;br/&gt;\n
        }  &lt;/p&gt;\n\n&lt;p&gt;cout&amp;lt;&amp;lt;&amp;quot;Result is &amp;quot;&amp;lt;&amp;lt;totalResult&amp;lt;&amp;lt;endl;&lt;br/&gt;\nreturn
        0;&lt;br/&gt;\n}&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9exvv0/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575254392.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9exp6d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Wunkolo",
        "can_mod_post": false, "created_utc": 1575254256.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_120x5f", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "C++\n\n    #include
        &lt;cstdio&gt;\n    #include &lt;cstdint&gt;\n    #include &lt;cstddef&gt;\n    #include
        &lt;iostream&gt;\n    \n    int main()\n    {\n            std::intmax_t CurMass
        = 0;\n            std::intmax_t MassFuel = 0;\n            std::intmax_t TotalFuel
        = 0;\n            while( std::cin &gt;&gt; CurMass )\n            {\n                    if(
        CurMass &lt; 9 ) continue;\n                    std::intmax_t CurMassFuel
        = (CurMass / 3) - 2;\n                    MassFuel += CurMassFuel;\n                    do\n                    {\n                            TotalFuel
        += CurMassFuel;\n                    } while( (CurMassFuel = ((CurMassFuel
        / 3) - 2)) &gt; 0 );\n            }\n            std::cout &lt;&lt; \"Mass
        Fuel:\" &lt;&lt; MassFuel &lt;&lt; std::endl;\n            std::cout &lt;&lt;
        \"Total Fuel:\" &lt;&lt; TotalFuel &lt;&lt; std::endl;\n    }", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9exp6d",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;cstdio&amp;gt;\n#include &amp;lt;cstdint&amp;gt;\n#include &amp;lt;cstddef&amp;gt;\n#include
        &amp;lt;iostream&amp;gt;\n\nint main()\n{\n        std::intmax_t CurMass =
        0;\n        std::intmax_t MassFuel = 0;\n        std::intmax_t TotalFuel =
        0;\n        while( std::cin &amp;gt;&amp;gt; CurMass )\n        {\n                if(
        CurMass &amp;lt; 9 ) continue;\n                std::intmax_t CurMassFuel
        = (CurMass / 3) - 2;\n                MassFuel += CurMassFuel;\n                do\n                {\n                        TotalFuel
        += CurMassFuel;\n                } while( (CurMassFuel = ((CurMassFuel / 3)
        - 2)) &amp;gt; 0 );\n        }\n        std::cout &amp;lt;&amp;lt; &amp;quot;Mass
        Fuel:&amp;quot; &amp;lt;&amp;lt; MassFuel &amp;lt;&amp;lt; std::endl;\n        std::cout
        &amp;lt;&amp;lt; &amp;quot;Total Fuel:&amp;quot; &amp;lt;&amp;lt; TotalFuel
        &amp;lt;&amp;lt; std::endl;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9exp6d/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575254256.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9jqwkt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Rietty",
        "can_mod_post": false, "created_utc": 1575383459.0, "send_replies": true,
        "parent_id": "t1_f9exfyz", "score": 1, "author_fullname": "t2_jl2zu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Personally I just save the information into a vector and instead of reading
        using getline you can do something like this..\n\n```\n// Read file into a
        vector.\ntemplate&lt;typename T&gt;\nstd::vector&lt;T&gt; readIntoVector(const
        std::string &amp;filename) {\n\tstd::ifstream input(filename);\n\tstd::istream_iterator&lt;T&gt;
        start(input), end;\n\tstd::vector&lt;T&gt; data(start, end);\n        input.close();\n\treturn
        data;\n}\n```", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9jqwkt", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Personally
        I just save the information into a vector and instead of reading using getline
        you can do something like this..&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n// Read
        file into a vector.\ntemplate&amp;lt;typename T&amp;gt;\nstd::vector&amp;lt;T&amp;gt;
        readIntoVector(const std::string &amp;amp;filename) {\n    std::ifstream input(filename);\n    std::istream_iterator&amp;lt;T&amp;gt;
        start(input), end;\n    std::vector&amp;lt;T&amp;gt; data(start, end);\n        input.close();\n    return
        data;\n}\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9jqwkt/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575383459.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "f9exfyz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TypeAskee",
        "can_mod_post": false, "created_utc": 1575254068.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_eni8d", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "My
        Day 1 solutions. I''m relatively new to C++ and trying to learn more for a
        new project at work, so any feedback would be much appreciated! \n\n [https://github.com/TechMirage/adventofcode2019/tree/master/day1](https://github.com/TechMirage/adventofcode2019/tree/master/day1)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9exfyz", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        Day 1 solutions. I&amp;#39;m relatively new to C++ and trying to learn more
        for a new project at work, so any feedback would be much appreciated! &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/TechMirage/adventofcode2019/tree/master/day1\"&gt;https://github.com/TechMirage/adventofcode2019/tree/master/day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9exfyz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575254068.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9ewoav", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mudokin", "can_mod_post": false, "created_utc":
        1575253507.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_5nkqx", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Sorry for being late to the game, I just
        realised there is a Subreddit for this. I am trying my best doing these with
        Processing. This is the link to the complete solution: [https://pastebin.com/D4e1BkwT](https://pastebin.com/D4e1BkwT)\n\n      IntList
        modules = new IntList();\n      boolean ready = false;\n      String line;\n      int
        totalFuel = 0;\n      int moduleFuel = 0;  \n     \n      while (!ready) {\n        try
        {\n          line = reader.readLine();\n        }\n        catch (IOException
        e) {\n          line = null;\n          ready = true;\n        }    \n        if(line
        != null) {\n            //println(line);\n            moduleFuel = module(int(line));\n            int
        tempFuel = moduleFuel;\n            while (tempFuel &gt; 0) {\n              tempFuel
        = module(tempFuel);\n              if (tempFuel &gt; 0)\n                moduleFuel
        += tempFuel;\n            }\n            modules.append(moduleFuel);\n        }
        else {\n          ready = true;\n        }\n      }\n      for(int values
        : modules)\n         totalFuel += values;\n      return totalFuel;\n    }\n\nAnd
        here is my haiku\n\n \n\n    There is always a way,\n    If not, just use
        stack overflow,\n    Told you there''s a way.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9ewoav", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sorry for being late to the
        game, I just realised there is a Subreddit for this. I am trying my best doing
        these with Processing. This is the link to the complete solution: &lt;a href=\"https://pastebin.com/D4e1BkwT\"&gt;https://pastebin.com/D4e1BkwT&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  IntList
        modules = new IntList();\n  boolean ready = false;\n  String line;\n  int
        totalFuel = 0;\n  int moduleFuel = 0;  \n\n  while (!ready) {\n    try {\n      line
        = reader.readLine();\n    }\n    catch (IOException e) {\n      line = null;\n      ready
        = true;\n    }    \n    if(line != null) {\n        //println(line);\n        moduleFuel
        = module(int(line));\n        int tempFuel = moduleFuel;\n        while (tempFuel
        &amp;gt; 0) {\n          tempFuel = module(tempFuel);\n          if (tempFuel
        &amp;gt; 0)\n            moduleFuel += tempFuel;\n        }\n        modules.append(moduleFuel);\n    }
        else {\n      ready = true;\n    }\n  }\n  for(int values : modules)\n     totalFuel
        += values;\n  return totalFuel;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And
        here is my haiku&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;There is always a way,\nIf
        not, just use stack overflow,\nTold you there&amp;#39;s a way.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ewoav/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575253507.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9ewiw2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "amalloy", "can_mod_post": false, "created_utc":
        1575253398.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 3,
        "author_fullname": "t2_6f5lu", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Haskell [repo](https://github.com/amalloy/aoc-2019/blob/master/day1/src/Main.hs)
        and [video](https://www.youtube.com/watch?v=1DPcr5_LEas&amp;list=PLKDpSfFMS1VTYb3gbwNTAvtbWI2mSKDe8).",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9ewiw2", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell
        &lt;a href=\"https://github.com/amalloy/aoc-2019/blob/master/day1/src/Main.hs\"&gt;repo&lt;/a&gt;
        and &lt;a href=\"https://www.youtube.com/watch?v=1DPcr5_LEas&amp;amp;list=PLKDpSfFMS1VTYb3gbwNTAvtbWI2mSKDe8\"&gt;video&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ewiw2/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575253398.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9f7mq7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jydimir", "can_mod_post": false, "created_utc":
        1575261764.0, "send_replies": true, "parent_id": "t1_f9ew4si", "score": 1,
        "author_fullname": "t2_5h6kiyr", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "&gt;I felt it was stupid that
        you couldn''t run the fuel required on the overall mass of the fuel rather
        than on individual modules.\n\nThat''s what I tried to do too. Any ideas why
        we can''t calculate the overall \"fuel for modules\" and after that run \"fuel
        for fuel\" calculations?", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9f7mq7", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I
        felt it was stupid that you couldn&amp;#39;t run the fuel required on the
        overall mass of the fuel rather than on individual modules.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That&amp;#39;s
        what I tried to do too. Any ideas why we can&amp;#39;t calculate the overall
        &amp;quot;fuel for modules&amp;quot; and after that run &amp;quot;fuel for
        fuel&amp;quot; calculations?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f7mq7/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575261764.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "f9ew4si", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "# Kotlin\n\n## Problem 1:\n\n    fun main() {\n        print(File(\"data/Day01.txt\").readLines().map
        { (it.toInt() / 3) - 2 }.sum())\n    }\n\n## Problem 2:\n\n    fun main()
        {\n        val fuel = File(\"data/Day01.txt\").readLines().map {\n            val
        componentFuel = (it.toInt() / 3 - 2)\n            componentFuel + calcMetaFuel(componentFuel)\n        }.sum()\n        print(fuel)\n    }\n    \n    fun
        calcMetaFuel(fuel: Int): Int {\n        val metaFuel = fuel / 3 - 2\n        return
        if (metaFuel &lt;= 0) 0 else metaFuel + calcMetaFuel(metaFuel)\n    }\n\nI
        got really hung up on:\n\n&gt;(Calculate the fuel requirements for each module
        separately, then add them all up at the end.)\n\nI felt it was stupid that
        you couldn''t run the fuel required on the overall mass of the fuel rather
        than on individual modules.", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Kotlin&lt;/h1&gt;\n\n&lt;h2&gt;Problem
        1:&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;fun main() {\n    print(File(&amp;quot;data/Day01.txt&amp;quot;).readLines().map
        { (it.toInt() / 3) - 2 }.sum())\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Problem
        2:&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;fun main() {\n    val fuel = File(&amp;quot;data/Day01.txt&amp;quot;).readLines().map
        {\n        val componentFuel = (it.toInt() / 3 - 2)\n        componentFuel
        + calcMetaFuel(componentFuel)\n    }.sum()\n    print(fuel)\n}\n\nfun calcMetaFuel(fuel:
        Int): Int {\n    val metaFuel = fuel / 3 - 2\n    return if (metaFuel &amp;lt;=
        0) 0 else metaFuel + calcMetaFuel(metaFuel)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        got really hung up on:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;(Calculate
        the fuel requirements for each module separately, then add them all up at
        the end.)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I felt it was stupid
        that you couldn&amp;#39;t run the fuel required on the overall mass of the
        fuel rather than on individual modules.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "subreddit_type": "public", "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ew4si/", "num_reports":
        null, "locked": false, "name": "t1_f9ew4si", "created": 1575253117.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575253117.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9evq69", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "NihilistDandy", "can_mod_post": false,
        "created_utc": 1575252824.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 2, "author_fullname": "t2_4sr2c", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**Over-Engineered
        Haskell**\n\n    {-# LANGUAGE OverloadedStrings, LambdaCase, NoImplicitPrelude
        #-}\n    module Day1 where\n\n    import Common ( Parser, getInput, printOutput,
        lexeme )\n    import Prelude ( IO, Int, (.), (&gt;), (+), quot, (&lt;$&gt;),
        sum, subtract )\n    import Data.Text.IO ( putStrLn )\n    import Control.Monad
        ( join )\n    import Text.Megaparsec ( many )\n    import Text.Megaparsec.Char.Lexer
        ( decimal )\n    import Data.Functor.Foldable ( hylo, ListF(..) )\n\n    main
        :: IO ()\n    main = do\n      putStrLn \"Day 1\"\n      putStrLn \"Part 1:\"\n      day1
        &lt;- getInput 1\n      printOutput (many parsePart1) sum day1\n      putStrLn
        \"Part 2:\"\n      printOutput (many parsePart2) sum day1\n\n    parsePart1
        :: Parser Int\n    parsePart1 = calculateFuel &lt;$&gt; entry\n\n    parsePart2
        :: Parser Int\n    parsePart2 = totalFuel &lt;$&gt; entry\n\n    calculateFuel
        :: Int -&gt; Int\n    calculateFuel = subtract 2 . (`quot` 3)\n\n    totalFuel
        :: Int -&gt; Int\n    totalFuel = hylo sum'' fuel\n      where\n        sum''
        = \\case\n          Nil -&gt; 0\n          Cons x xs -&gt; x + xs\n        fuel
        n = case calculateFuel n of\n          f | f &gt; 0 -&gt; join Cons f\n          _
        -&gt; Nil  \n\n    entry :: Parser Int\n    entry = lexeme decimal\n\nWhere
        `Common` is just some conveniences:\n\n\n    {-# LANGUAGE NoImplicitPrelude
        #-}\n    module Common where\n\n    import System.IO ( IO )\n    import Data.Monoid
        ( (&lt;&gt;) )\n    import Data.Text ( Text )\n    import Data.Text.IO ( readFile
        )\n    import Data.Either ( Either(..) )\n    import Prelude ( print, Show(..),
        error, Int )\n    import Text.Megaparsec as M ( parse, errorBundlePretty,
        Parsec, empty )\n    import Data.Void ( Void )\n    import Data.Function (
        (.), ($) )\n    import qualified Text.Megaparsec.Char as M ( space1 )\n    import
        qualified Text.Megaparsec.Char.Lexer as L\n    ( lexeme, space )\n\n    type
        Parser = Parsec Void Text\n\n    getInput :: Int -&gt; IO Text\n    getInput
        = readFile . (\"./inputs/day\" &lt;&gt;) . show\n\n    processInput :: Parser
        a -&gt; (a -&gt; b) -&gt; Text -&gt; b\n    processInput parser consumer input
        = \n      case parse parser \"\" input of\n        Left bundle -&gt; error
        $ errorBundlePretty bundle\n        Right output -&gt; consumer output\n\n\n    (.::)
        :: (b -&gt; c) -&gt; (a1 -&gt; a2 -&gt; a3 -&gt; b) -&gt; a1 -&gt; a2 -&gt;
        a3 -&gt; c\n    (.::) = (.) . (.) . (.)\n\n    printOutput :: Show b =&gt;
        Parser a -&gt; (a -&gt; b) -&gt; Text -&gt; IO ()\n    printOutput = print
        .:: processInput\n\n    space :: Parser ()\n    space = L.space M.space1 M.empty
        M.empty\n\n    lexeme :: Parser a -&gt; Parser a\n    lexeme = L.lexeme space",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9evq69", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Over-Engineered
        Haskell&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{-# LANGUAGE OverloadedStrings,
        LambdaCase, NoImplicitPrelude #-}\nmodule Day1 where\n\nimport Common ( Parser,
        getInput, printOutput, lexeme )\nimport Prelude ( IO, Int, (.), (&amp;gt;),
        (+), quot, (&amp;lt;$&amp;gt;), sum, subtract )\nimport Data.Text.IO ( putStrLn
        )\nimport Control.Monad ( join )\nimport Text.Megaparsec ( many )\nimport
        Text.Megaparsec.Char.Lexer ( decimal )\nimport Data.Functor.Foldable ( hylo,
        ListF(..) )\n\nmain :: IO ()\nmain = do\n  putStrLn &amp;quot;Day 1&amp;quot;\n  putStrLn
        &amp;quot;Part 1:&amp;quot;\n  day1 &amp;lt;- getInput 1\n  printOutput (many
        parsePart1) sum day1\n  putStrLn &amp;quot;Part 2:&amp;quot;\n  printOutput
        (many parsePart2) sum day1\n\nparsePart1 :: Parser Int\nparsePart1 = calculateFuel
        &amp;lt;$&amp;gt; entry\n\nparsePart2 :: Parser Int\nparsePart2 = totalFuel
        &amp;lt;$&amp;gt; entry\n\ncalculateFuel :: Int -&amp;gt; Int\ncalculateFuel
        = subtract 2 . (`quot` 3)\n\ntotalFuel :: Int -&amp;gt; Int\ntotalFuel = hylo
        sum&amp;#39; fuel\n  where\n    sum&amp;#39; = \\case\n      Nil -&amp;gt;
        0\n      Cons x xs -&amp;gt; x + xs\n    fuel n = case calculateFuel n of\n      f
        | f &amp;gt; 0 -&amp;gt; join Cons f\n      _ -&amp;gt; Nil  \n\nentry ::
        Parser Int\nentry = lexeme decimal\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Where
        &lt;code&gt;Common&lt;/code&gt; is just some conveniences:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{-#
        LANGUAGE NoImplicitPrelude #-}\nmodule Common where\n\nimport System.IO (
        IO )\nimport Data.Monoid ( (&amp;lt;&amp;gt;) )\nimport Data.Text ( Text )\nimport
        Data.Text.IO ( readFile )\nimport Data.Either ( Either(..) )\nimport Prelude
        ( print, Show(..), error, Int )\nimport Text.Megaparsec as M ( parse, errorBundlePretty,
        Parsec, empty )\nimport Data.Void ( Void )\nimport Data.Function ( (.), ($)
        )\nimport qualified Text.Megaparsec.Char as M ( space1 )\nimport qualified
        Text.Megaparsec.Char.Lexer as L\n( lexeme, space )\n\ntype Parser = Parsec
        Void Text\n\ngetInput :: Int -&amp;gt; IO Text\ngetInput = readFile . (&amp;quot;./inputs/day&amp;quot;
        &amp;lt;&amp;gt;) . show\n\nprocessInput :: Parser a -&amp;gt; (a -&amp;gt;
        b) -&amp;gt; Text -&amp;gt; b\nprocessInput parser consumer input = \n  case
        parse parser &amp;quot;&amp;quot; input of\n    Left bundle -&amp;gt; error
        $ errorBundlePretty bundle\n    Right output -&amp;gt; consumer output\n\n\n(.::)
        :: (b -&amp;gt; c) -&amp;gt; (a1 -&amp;gt; a2 -&amp;gt; a3 -&amp;gt; b) -&amp;gt;
        a1 -&amp;gt; a2 -&amp;gt; a3 -&amp;gt; c\n(.::) = (.) . (.) . (.)\n\nprintOutput
        :: Show b =&amp;gt; Parser a -&amp;gt; (a -&amp;gt; b) -&amp;gt; Text -&amp;gt;
        IO ()\nprintOutput = print .:: processInput\n\nspace :: Parser ()\nspace =
        L.space M.space1 M.empty M.empty\n\nlexeme :: Parser a -&amp;gt; Parser a\nlexeme
        = L.lexeme space\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9evq69/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575252824.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9euym8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "lulxD69420", "can_mod_post": false, "created_utc":
        1575252248.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_6jg4ryc", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "#C\n\nfirst time participating\n\n    #include
        &lt;stdlib.h&gt;\n    #include &lt;stdio.h&gt;\n    #include &lt;stdint.h&gt;\n    \n    uint32_t
        calculate_fuel(uint32_t mass);\n    uint32_t calculate_fuel_recursively(uint32_t
        mass);\n    void calculate_fuel_for_input_file(const char *file);\n    \n    int
        main(int argc, char **argv)\n    {\n    \tcalculate_fuel_for_input_file(\"input_day1.txt\");\n    \treturn
        EXIT_SUCCESS;\n    }\n    \n    uint32_t calculate_fuel(uint32_t mass)\n    {\n    \treturn
        (mass / 3) - 2;\n    }\n    \n    uint32_t calculate_fuel_recursively(uint32_t
        mass)\n    {\n    \tuint32_t current_mass = mass;\n    \tuint32_t total_fuel
        = 0;\n    \twhile (current_mass &gt; 6) {\n    \t\tcurrent_mass = calculate_fuel(current_mass);\n    \t\ttotal_fuel
        += current_mass;\n    \t}\n    \treturn total_fuel;\n    }\n    \n    void
        calculate_fuel_for_input_file(const char *file)\n    {\n    \tuint32_t current_mass
        = 0;\n    \tuint32_t total_fuel = 0, total_fuel_recursive = 0;\n    \n    \tFILE
        *fp = fopen(file, \"r\");\n    \tif (!fp) {\n    \t\texit(EXIT_FAILURE);\n    \t}
        else {\n    \t\twhile(fscanf(fp, \"%u\", &amp;current_mass) == 1) {\n    \t\t\ttotal_fuel
        += calculate_fuel(current_mass);\n    \t\t\ttotal_fuel_recursive += calculate_fuel_recursively(current_mass);\n    \t\t}\n    \t\tfclose(fp);\n    \t\tprintf(\"Total
        fuel part 1: %u\\n\", total_fuel);\n    \t\tprintf(\"Total fuel part 2: %u\\n\",
        total_fuel_recursive);\n    \t}\n    }", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9euym8", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C&lt;/h1&gt;\n\n&lt;p&gt;first
        time participating&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdlib.h&amp;gt;\n#include
        &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdint.h&amp;gt;\n\nuint32_t calculate_fuel(uint32_t
        mass);\nuint32_t calculate_fuel_recursively(uint32_t mass);\nvoid calculate_fuel_for_input_file(const
        char *file);\n\nint main(int argc, char **argv)\n{\n    calculate_fuel_for_input_file(&amp;quot;input_day1.txt&amp;quot;);\n    return
        EXIT_SUCCESS;\n}\n\nuint32_t calculate_fuel(uint32_t mass)\n{\n    return
        (mass / 3) - 2;\n}\n\nuint32_t calculate_fuel_recursively(uint32_t mass)\n{\n    uint32_t
        current_mass = mass;\n    uint32_t total_fuel = 0;\n    while (current_mass
        &amp;gt; 6) {\n        current_mass = calculate_fuel(current_mass);\n        total_fuel
        += current_mass;\n    }\n    return total_fuel;\n}\n\nvoid calculate_fuel_for_input_file(const
        char *file)\n{\n    uint32_t current_mass = 0;\n    uint32_t total_fuel =
        0, total_fuel_recursive = 0;\n\n    FILE *fp = fopen(file, &amp;quot;r&amp;quot;);\n    if
        (!fp) {\n        exit(EXIT_FAILURE);\n    } else {\n        while(fscanf(fp,
        &amp;quot;%u&amp;quot;, &amp;amp;current_mass) == 1) {\n            total_fuel
        += calculate_fuel(current_mass);\n            total_fuel_recursive += calculate_fuel_recursively(current_mass);\n        }\n        fclose(fp);\n        printf(&amp;quot;Total
        fuel part 1: %u\\n&amp;quot;, total_fuel);\n        printf(&amp;quot;Total
        fuel part 2: %u\\n&amp;quot;, total_fuel_recursive);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9euym8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575252248.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9eudfz", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "karstens_rage", "can_mod_post": false,
        "created_utc": 1575251814.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 1, "author_fullname": "t2_e5zi", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**Java** using JShell
        (v. 11.0.4)\n\n    File file = new File(\"./input01\")\n\nPart1:\n\n    Files.lines(file.toPath()).mapToDouble(Double::valueOf).map(d
        -&gt; Math.floor(d/3)-2).sum()\n\nPart2:\n\n    Files.lines(file.toPath()).mapToDouble(Double::valueOf).map(m
        -&gt; DoubleStream.iterate(Math.floor(m/3)-2, d -&gt; Math.floor(d/3)-2).takeWhile(d
        -&gt; d &gt; 0).sum()).sum()", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_f9eudfz", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt; using
        JShell (v. 11.0.4)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;File file = new File(&amp;quot;./input01&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Files.lines(file.toPath()).mapToDouble(Double::valueOf).map(d
        -&amp;gt; Math.floor(d/3)-2).sum()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Files.lines(file.toPath()).mapToDouble(Double::valueOf).map(m
        -&amp;gt; DoubleStream.iterate(Math.floor(m/3)-2, d -&amp;gt; Math.floor(d/3)-2).takeWhile(d
        -&amp;gt; d &amp;gt; 0).sum()).sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eudfz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575251814.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9etccb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Python Solution (Forgot it start December 1st 0:00 and
        not December 1st 24:00 so 21,000 place):\n\n    import math\n    \n    fuel
        = 0\n    for line in open(\"DataText.txt\", \"r\"):\n        Module = int(line)\n        while
        Module &gt; 0:\n            Module = math.floor(int(Module)/3)-2\n            if
        Module &gt; 0:\n                fuel += Module\n    print(int(fuel))\n    \n\n&amp;#x200B;\n\n#
        Poem titled \"Just use Python\":\n\nSpaceships are grey\n\nSanta is red\n\nUse
        python, don''t delay\n\nFor top 100 filled with dread\n\n&amp;#x200B;\n\nRecursing
        the days away\n\nLoop after loop\n\n\"Just use Python\" they say\n\nFor you
        always have OOP", "edited": false, "downs": 0, "author_flair_css_class": null,
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        Solution (Forgot it start December 1st 0:00 and not December 1st 24:00 so
        21,000 place):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import math\n\nfuel = 0\nfor
        line in open(&amp;quot;DataText.txt&amp;quot;, &amp;quot;r&amp;quot;):\n    Module
        = int(line)\n    while Module &amp;gt; 0:\n        Module = math.floor(int(Module)/3)-2\n        if
        Module &amp;gt; 0:\n            fuel += Module\nprint(int(fuel))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;h1&gt;Poem
        titled &amp;quot;Just use Python&amp;quot;:&lt;/h1&gt;\n\n&lt;p&gt;Spaceships
        are grey&lt;/p&gt;\n\n&lt;p&gt;Santa is red&lt;/p&gt;\n\n&lt;p&gt;Use python,
        don&amp;#39;t delay&lt;/p&gt;\n\n&lt;p&gt;For top 100 filled with dread&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Recursing
        the days away&lt;/p&gt;\n\n&lt;p&gt;Loop after loop&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;Just
        use Python&amp;quot; they say&lt;/p&gt;\n\n&lt;p&gt;For you always have OOP&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9etccb/",
        "num_reports": null, "locked": false, "name": "t1_f9etccb", "created": 1575251046.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575251046.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9f31db",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nakilon",
        "can_mod_post": false, "created_utc": 1575258244.0, "send_replies": true,
        "parent_id": "t1_f9etbve", "score": 1, "author_fullname": "t2_g2nns", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "    ruby -rmll/core_ext -e ''p `pbpaste`.split.sum{ |s| MLL::nest_while_list[s.to_i,
        -&gt;_{_/3-2}, -&gt;_{_&gt;0}].to_a.most.rest.sum }''", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9f31db", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;ruby -rmll/core_ext
        -e &amp;#39;p `pbpaste`.split.sum{ |s| MLL::nest_while_list[s.to_i, -&amp;gt;_{_/3-2},
        -&amp;gt;_{_&amp;gt;0}].to_a.most.rest.sum }&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f31db/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575258244.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9etbve", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ECTXGK", "can_mod_post": false, "created_utc":
        1575251036.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_7q60l", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Ruby\n\n    def total_fuel_for_module(module_fuel)\n      current_fuel_needed
        = (module_fuel / 3).floor - 2\n      return 0 if current_fuel_needed &lt;=
        0\n      current_fuel_needed + total_fuel_for_module(current_fuel_needed)\n    end\n    \n    x
        = input.reduce(0) do |total_fuel, single_module_fuel|\n      total_fuel +
        total_fuel_for_module(single_module_fuel)\n    end\n    \n    puts x", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9etbve",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        total_fuel_for_module(module_fuel)\n  current_fuel_needed = (module_fuel /
        3).floor - 2\n  return 0 if current_fuel_needed &amp;lt;= 0\n  current_fuel_needed
        + total_fuel_for_module(current_fuel_needed)\nend\n\nx = input.reduce(0) do
        |total_fuel, single_module_fuel|\n  total_fuel + total_fuel_for_module(single_module_fuel)\nend\n\nputs
        x\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9etbve/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575251036.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9esvnj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vwkaravan",
        "can_mod_post": false, "created_utc": 1575250692.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_3md10hwg", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Python
        3 -\nBit janky but did it on my phone so I''ll take it.\n[My solution for
        both parts.](https://topaz.github.io/paste/#XQAAAQDgAQAAAAAAAAA0m4poOBCMftd75GmWSCCRuQwdaKv6H8RJ53I1MxswuQTcU2q42wkk/FhCtimjoyotRkYN9Oofhe7bqjnwHlo/cjHqymFV7OYasy/NA0diIjFVg/x0oHPZnR1IlGZNHl4HdK0Qaepuy88AzrZkMqHHUWfh4HLaqAgdhD8uXtRgUX9sGnmTGQ9xnufrOIuhgDucQ7/CBAn5P2R9pIhRZd7tQCfCpr2A5aCKHIc5R9O3QdgrmuIYcdowwBR4EiaeA88v6zXacWW6cDBTjIQQaUXgZFd2ojjWGzNNIR11pcMt5LDoM2r3ReBL6ERm8fx6Dxf/2e7/oA==)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9esvnj", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3 -\nBit janky but did it on my phone so I&amp;#39;ll take it.\n&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDgAQAAAAAAAAA0m4poOBCMftd75GmWSCCRuQwdaKv6H8RJ53I1MxswuQTcU2q42wkk/FhCtimjoyotRkYN9Oofhe7bqjnwHlo/cjHqymFV7OYasy/NA0diIjFVg/x0oHPZnR1IlGZNHl4HdK0Qaepuy88AzrZkMqHHUWfh4HLaqAgdhD8uXtRgUX9sGnmTGQ9xnufrOIuhgDucQ7/CBAn5P2R9pIhRZd7tQCfCpr2A5aCKHIc5R9O3QdgrmuIYcdowwBR4EiaeA88v6zXacWW6cDBTjIQQaUXgZFd2ojjWGzNNIR11pcMt5LDoM2r3ReBL6ERm8fx6Dxf/2e7/oA==\"&gt;My
        solution for both parts.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9esvnj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575250692.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9ert1y", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "RazorSh4rk", "can_mod_post": false, "created_utc":
        1575249874.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_t6m17", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Scala, somewhere halfway between readable
        and short\n\n(i didnt bother checking if the input would fit in an int but
        oh well)\n\n[github](https://github.com/RazorSh4rk/AOC2k19)\n\n    def _1()
        {\n    \timport java.math._\n    \t\t\n    \tval in = Source.fromFile(\"inputs/1.txt\").getLines.toList.map(
        _.toLong )\n    \t\t\t\n    \tval c = (in: Long) =&gt; Math.round(in / 3)
        - 2\n    \n    \tval part1 = in.map( c(_) ).sum\n    \n    \tdef calcFuel(in:
        Long): Long = {\n    \t\tval tmp = c(in)\n    \t\tif(tmp &lt;= 0) 0\n    \t\telse
        tmp + calcFuel(tmp)\n    \t}\n    \n    \tval part2 = in.map( c(_) ).map(
        el =&gt; el + calcFuel(el) ).sum\n    \n    \tprintln(part1)\n    \tprintln(part2)\n    }",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9ert1y", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Scala,
        somewhere halfway between readable and short&lt;/p&gt;\n\n&lt;p&gt;(i didnt
        bother checking if the input would fit in an int but oh well)&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/RazorSh4rk/AOC2k19\"&gt;github&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        _1() {\n    import java.math._\n\n    val in = Source.fromFile(&amp;quot;inputs/1.txt&amp;quot;).getLines.toList.map(
        _.toLong )\n\n    val c = (in: Long) =&amp;gt; Math.round(in / 3) - 2\n\n    val
        part1 = in.map( c(_) ).sum\n\n    def calcFuel(in: Long): Long = {\n        val
        tmp = c(in)\n        if(tmp &amp;lt;= 0) 0\n        else tmp + calcFuel(tmp)\n    }\n\n    val
        part2 = in.map( c(_) ).map( el =&amp;gt; el + calcFuel(el) ).sum\n\n    println(part1)\n    println(part2)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ert1y/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575249874.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9er65y", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "raginjason", "can_mod_post": false, "created_utc":
        1575249386.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_14aeem", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Day 1 solution in Go/Golang](https://github.com/raginjason/aoc2019/blob/master/day1.go)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9er65y", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/raginjason/aoc2019/blob/master/day1.go\"&gt;Day
        1 solution in Go/Golang&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9er65y/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575249386.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9febqi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bsl333",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9fc00c", "score":
        2, "author_fullname": "t2_nezbk", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Np! I
        am also using AOC to get better with Go. My solution is pretty similar to
        yours. [repo](https://github.com/bsl333/AoC/tree/master/day1/go-solution)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9febqi", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Np!
        I am also using AOC to get better with Go. My solution is pretty similar to
        yours. &lt;a href=\"https://github.com/bsl333/AoC/tree/master/day1/go-solution\"&gt;repo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9febqi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575268316.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575268316.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9fc00c", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "created_utc":
        1575265845.0, "send_replies": true, "parent_id": "t1_f9fbxhf", "score": 1,
        "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Oh thanks for the pointers! I''ve never written Go before,
        using AOC 2019 to learn it. :)", "edited": false, "author_flair_css_class":
        null, "downs": 0, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh
        thanks for the pointers! I&amp;#39;ve never written Go before, using AOC 2019
        to learn it. :)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fc00c/",
        "num_reports": null, "locked": false, "name": "t1_f9fc00c", "created": 1575265845.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "collapsed": false, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "f9fbxhf", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "bsl333", "can_mod_post": false, "created_utc":
        1575265773.0, "send_replies": true, "parent_id": "t1_f9eqock", "score": 2,
        "author_fullname": "t2_nezbk", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Nice job! \n\nA few things
        you do to simplify/enhance your code:\n\ndon''t forget to close your file
        after calling os.Open(\"input\"):\n`defer file.Close()`\n\nYou can simplify
        \n```\nfunc calc(i int) int {\n\tf := float64(i)\n\tj := math.Floor(f / 3)\n\tk
        := int(j - 2)\n\treturn k\n}\n// to\nfunc calc(i int) int {\n\treturn i /
        3 - 2\n}\n```\nSince i is type int, division will result in truncating the
        decimal.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_f9fbxhf", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice
        job! &lt;/p&gt;\n\n&lt;p&gt;A few things you do to simplify/enhance your code:&lt;/p&gt;\n\n&lt;p&gt;don&amp;#39;t
        forget to close your file after calling os.Open(&amp;quot;input&amp;quot;):\n&lt;code&gt;defer
        file.Close()&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;You can simplify \n&lt;code&gt;\nfunc
        calc(i int) int {\n    f := float64(i)\n    j := math.Floor(f / 3)\n    k
        := int(j - 2)\n    return k\n}\n// to\nfunc calc(i int) int {\n    return
        i / 3 - 2\n}\n&lt;/code&gt;\nSince i is type int, division will result in
        truncating the decimal.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9fbxhf/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575265773.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "f9eqock", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "My solution in Go.\n\n```\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"math\"\n\t\"os\"\n\t\"strconv\"\n)\n\nfunc
        sum(array []int) int {\n\tresult := int(0)\n\tfor _, v := range array {\n\t\tresult
        += v\n\t}\n\treturn result\n}\n\nfunc calc(i int) int {\n\tf := float64(i)\n\tj
        := math.Floor(f / 3)\n\tk := int(j - 2)\n\treturn k\n}\n\nfunc main() {\n\tfile,
        _ := os.Open(\"input\")\n\tfscanner := bufio.NewScanner(file)\n\ta := []int{}\n\n\tfor
        fscanner.Scan() {\n\t\ti, err := strconv.Atoi(fscanner.Text())\n\n\t\tif err
        != nil {\n\t\t\tpanic(err)\n\t\t}\n\n\t\tj := calc(i)\n\t\tfor j &gt; 0 {\n\t\t\ta
        = append(a, j)\n\t\t\tj = calc(j)\n\t\t}\n\t}\n\tfmt.Println(sum(a))\n}\n\n```",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution in Go.&lt;/p&gt;\n\n&lt;p&gt;```\npackage main&lt;/p&gt;\n\n&lt;p&gt;import
        (\n    &amp;quot;bufio&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;math&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;strconv&amp;quot;\n)&lt;/p&gt;\n\n&lt;p&gt;func
        sum(array []int) int {\n    result := int(0)\n    for _, v := range array
        {\n        result += v\n    }\n    return result\n}&lt;/p&gt;\n\n&lt;p&gt;func
        calc(i int) int {\n    f := float64(i)\n    j := math.Floor(f / 3)\n    k
        := int(j - 2)\n    return k\n}&lt;/p&gt;\n\n&lt;p&gt;func main() {\n    file,
        _ := os.Open(&amp;quot;input&amp;quot;)\n    fscanner := bufio.NewScanner(file)\n    a
        := []int{}&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for fscanner.Scan() {\n    i,
        err := strconv.Atoi(fscanner.Text())\n\n    if err != nil {\n        panic(err)\n    }\n\n    j
        := calc(i)\n    for j &amp;gt; 0 {\n        a = append(a, j)\n        j =
        calc(j)\n    }\n}\nfmt.Println(sum(a))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eqock/",
        "num_reports": null, "locked": false, "name": "t1_f9eqock", "created": 1575248996.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575248996.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9eqikc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "# [AWK](https://en.wikipedia.org/wiki/AWK)\n\npart 1\n\n    awk
        ''{ sum += int($1/3)-2 } END { print sum }'' input.txt\n\npart 2\n\n    awk
        ''{ $1 = int($1/3)-2; while($1 &gt;= 0) {sum += $1; $1 = int($1/3)-2 }} END
        { print sum }'' input.txt", "edited": 1575289070.0, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://en.wikipedia.org/wiki/AWK\"&gt;AWK&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;awk &amp;#39;{ sum += int($1/3)-2 }
        END { print sum }&amp;#39; input.txt\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;awk &amp;#39;{ $1 = int($1/3)-2; while($1
        &amp;gt;= 0) {sum += $1; $1 = int($1/3)-2 }} END { print sum }&amp;#39; input.txt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eqikc/",
        "num_reports": null, "locked": false, "name": "t1_f9eqikc", "created": 1575248870.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575248870.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "fadvjql",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nlukjanov",
        "can_mod_post": false, "created_utc": 1575987453.0, "send_replies": true,
        "parent_id": "t1_f9eqedj", "score": 1, "author_fullname": "t2_29rtjdpn", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "This is great!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_fadvjql", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        is great!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason": null,
        "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fadvjql/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575987453.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9eqedj", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ClySuva", "can_mod_post": false, "created_utc":
        1575248781.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_6acog", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "## Javascript oneliner\n\nAssuming you have
        the inputs read in an array called `inputs`\n\n    console.log(inputs.reduce((r,m)=&gt;r+((f,m)=&gt;f(f,m))((f,m)=&gt;((m=~~(m/3)-2)&lt;=0)?0:m+f(f,m),m),0))\n\nOr
        if you wanna run it from the browser console on the adventofcode site.\n\n    await
        fetch(''https://adventofcode.com/2019/day/1/input'').then(r=&gt;r.text()).then(d=&gt;d.split(''\\n'').reduce((r,m)=&gt;r+((f,m)=&gt;f(f,m))((f,m)=&gt;((m=~~(m/3)-2)&lt;=0)?0:m+f(f,m),Number(m)),0))",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9eqedj", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Javascript
        oneliner&lt;/h2&gt;\n\n&lt;p&gt;Assuming you have the inputs read in an array
        called &lt;code&gt;inputs&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;console.log(inputs.reduce((r,m)=&amp;gt;r+((f,m)=&amp;gt;f(f,m))((f,m)=&amp;gt;((m=~~(m/3)-2)&amp;lt;=0)?0:m+f(f,m),m),0))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or
        if you wanna run it from the browser console on the adventofcode site.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;await
        fetch(&amp;#39;https://adventofcode.com/2019/day/1/input&amp;#39;).then(r=&amp;gt;r.text()).then(d=&amp;gt;d.split(&amp;#39;\\n&amp;#39;).reduce((r,m)=&amp;gt;r+((f,m)=&amp;gt;f(f,m))((f,m)=&amp;gt;((m=~~(m/3)-2)&amp;lt;=0)?0:m+f(f,m),Number(m)),0))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eqedj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575248781.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9eq53q", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snekk420",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9epze6", "score":
        1, "author_fullname": "t2_4tove4uw", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Okey, i will look that
        up. i have no idea what takeWhile does.", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_f9eq53q", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Okey, i will look that
        up. i have no idea what takeWhile does.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eq53q/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575248576.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575248576.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9epze6", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "MysticPing", "can_mod_post": false, "created_utc":
        1575248451.0, "send_replies": true, "parent_id": "t1_f9epv1g", "score": 2,
        "author_fullname": "t2_e0j0p", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "If you want a tip on a fun
        way to do it in haskell, try to use takeWhile and iterate for the 2nd part.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9epze6", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If
        you want a tip on a fun way to do it in haskell, try to use takeWhile and
        iterate for the 2nd part.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9epze6/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575248451.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "f9epv1g", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snekk420",
        "can_mod_post": false, "created_utc": 1575248358.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_4tove4uw", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "I
        did a solution in haskell, I have never worked with haskell before so this
        was very fun.\n\n    readInt::String -&gt; Int\n    readInt = read\n    \n    calcFuel::Int
        -&gt; Int\n    calcFuel mass = mass `div` 3 - 2\n    \n    calcFuelRec::Int
        -&gt; Int\n    calcFuelRec mass\n        | mass &lt; 0 = 0\n        | otherwise
        = mass + calcFuelRec (calcFuel mass)\n    \n    main = do\n        massList
        &lt;- readFile \"input.txt\"\n    \n        -- part 1\n        print . sum
        . map calcFuel . map readInt . words $ massList\n        \n        -- part
        2\n        print(sum([calcFuelRec y - y | y &lt;- map readInt . words $ massList]))",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9epv1g", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        did a solution in haskell, I have never worked with haskell before so this
        was very fun.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;readInt::String -&amp;gt;
        Int\nreadInt = read\n\ncalcFuel::Int -&amp;gt; Int\ncalcFuel mass = mass `div`
        3 - 2\n\ncalcFuelRec::Int -&amp;gt; Int\ncalcFuelRec mass\n    | mass &amp;lt;
        0 = 0\n    | otherwise = mass + calcFuelRec (calcFuel mass)\n\nmain = do\n    massList
        &amp;lt;- readFile &amp;quot;input.txt&amp;quot;\n\n    -- part 1\n    print
        . sum . map calcFuel . map readInt . words $ massList\n\n    -- part 2\n    print(sum([calcFuelRec
        y - y | y &amp;lt;- map readInt . words $ massList]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9epv1g/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575248358.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9ep9oz", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "SorryMcFlurry", "can_mod_post": false,
        "created_utc": 1575247977.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 4, "author_fullname": "t2_penhj", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**Scratch**\n\n\nDid
        the first challenge in scratch for fun\n\nPart 1:\nhttps://i.imgur.com/rmYbr79.png\n\nPart
        2: \nhttps://i.imgur.com/EwbTWTf.png", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9ep9oz", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Scratch&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Did
        the first challenge in scratch for fun&lt;/p&gt;\n\n&lt;p&gt;Part 1:\n&lt;a
        href=\"https://i.imgur.com/rmYbr79.png\"&gt;https://i.imgur.com/rmYbr79.png&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2: \n&lt;a href=\"https://i.imgur.com/EwbTWTf.png\"&gt;https://i.imgur.com/EwbTWTf.png&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ep9oz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575247977.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 4}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "faar439", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bcmyers",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_fa9kg9j", "score":
        1, "author_fullname": "t2_b2bkl", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I may have pasted the code
        incorrectly.  Check out https://github.com/bcmyers/aoc2019 . The code has
        evolved a bit since I posted this, but for day 1 it should essentially be
        the same.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_faar439", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        may have pasted the code incorrectly.  Check out &lt;a href=\"https://github.com/bcmyers/aoc2019\"&gt;https://github.com/bcmyers/aoc2019&lt;/a&gt;
        . The code has evolved a bit since I posted this, but for day 1 it should
        essentially be the same.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/faar439/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1575912449.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1575912449.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "fa9kg9j", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "SpeedWagon2", "can_mod_post": false, "created_utc":
        1575877532.0, "send_replies": true, "parent_id": "t1_f9embyw", "score": 1,
        "author_fullname": "t2_kja3h", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "When I try to run your code
        I keep \n\nError: ParseIntError { kind: Empty }\n\nHave you ran into this
        while doing this problem?", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_fa9kg9j", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When
        I try to run your code I keep &lt;/p&gt;\n\n&lt;p&gt;Error: ParseIntError
        { kind: Empty }&lt;/p&gt;\n\n&lt;p&gt;Have you ran into this while doing this
        problem?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "link_id": "t3_e4axxe", "unrepliable_reason": null,
        "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fa9kg9j/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575877532.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9embyw", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "bcmyers", "can_mod_post": false, "created_utc":
        1575246458.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_b2bkl", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My solution in [rust](https://github.com/bcmyers/advent-of-code-2019).\n\n```rust\nuse
        std::fs;\nuse std::io::{self, BufRead};\nuse std::path::Path;\n\nfn main()
        -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let input
        = \"data/aoc_2019_01.txt\";\n\n    let one = run(input, part_one)?;\n    println!(\"{}\",
        one);\n\n    let two = run(input, part_two)?;\n    println!(\"{}\", two);\n\n    Ok(())\n}\n\nfn
        run&lt;F, P&gt;(input: P, func: F) -&gt; Result&lt;usize, Box&lt;dyn std::error::Error&gt;&gt;\nwhere\n    F:
        Fn(usize) -&gt; usize,\n    P: AsRef&lt;Path&gt;,\n{\n    let file = fs::File::open(input)?;\n    let
        mut reader = io::BufReader::new(file);\n    let mut buffer = String::new();\n\n    let
        mut acc = 0;\n    loop {\n        if reader.read_line(&amp;mut buffer)? ==
        0 {\n            break;\n        }\n        let n = buffer.trim().parse::&lt;usize&gt;()?;\n        acc
        += func(n);\n        buffer.clear();\n    }\n    Ok(acc)\n}\n\nfn part_one(n:
        usize) -&gt; usize {\n    match (n / 3).checked_sub(2) {\n        Some(m)
        =&gt; m,\n        None =&gt; 0,\n    }\n}\n\nfn part_two(mut n: usize) -&gt;
        usize {\n    let mut acc = 0;\n    loop {\n        let m = match part_one(n)
        {\n            0 =&gt; return acc,\n            m =&gt; m,\n        };\n        acc
        += m;\n        n = m;\n    }\n}\n```", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_f9embyw", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in &lt;a href=\"https://github.com/bcmyers/advent-of-code-2019\"&gt;rust&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;```rust\nuse
        std::fs;\nuse std::io::{self, BufRead};\nuse std::path::Path;&lt;/p&gt;\n\n&lt;p&gt;fn
        main() -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt;
        {\n    let input = &amp;quot;data/aoc_2019_01.txt&amp;quot;;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        one = run(input, part_one)?;\nprintln!(&amp;quot;{}&amp;quot;, one);\n\nlet
        two = run(input, part_two)?;\nprintln!(&amp;quot;{}&amp;quot;, two);\n\nOk(())\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;fn
        run&amp;lt;F, P&amp;gt;(input: P, func: F) -&amp;gt; Result&amp;lt;usize,
        Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt;\nwhere\n    F: Fn(usize)
        -&amp;gt; usize,\n    P: AsRef&amp;lt;Path&amp;gt;,\n{\n    let file = fs::File::open(input)?;\n    let
        mut reader = io::BufReader::new(file);\n    let mut buffer = String::new();&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        mut acc = 0;\nloop {\n    if reader.read_line(&amp;amp;mut buffer)? == 0 {\n        break;\n    }\n    let
        n = buffer.trim().parse::&amp;lt;usize&amp;gt;()?;\n    acc += func(n);\n    buffer.clear();\n}\nOk(acc)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;fn
        part_one(n: usize) -&amp;gt; usize {\n    match (n / 3).checked_sub(2) {\n        Some(m)
        =&amp;gt; m,\n        None =&amp;gt; 0,\n    }\n}&lt;/p&gt;\n\n&lt;p&gt;fn
        part_two(mut n: usize) -&amp;gt; usize {\n    let mut acc = 0;\n    loop {\n        let
        m = match part_one(n) {\n            0 =&amp;gt; return acc,\n            m
        =&amp;gt; m,\n        };\n        acc += m;\n        n = m;\n    }\n}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9embyw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575246458.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9ez1yw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jay__Money",
        "can_mod_post": false, "created_utc": 1575255269.0, "send_replies": true,
        "parent_id": "t1_f9ekxby", "score": 2, "author_fullname": "t2_nu6t1", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Welcome!\n\nOne tip I would give is to practice reading input from a file
        - the majority of inputs for AoC will be progressively more complex text inputs.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9ez1yw", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Welcome!&lt;/p&gt;\n\n&lt;p&gt;One
        tip I would give is to practice reading input from a file - the majority of
        inputs for AoC will be progressively more complex text inputs.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_e4axxe", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ez1yw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575255269.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "f9ekxby", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "moustacherobot", "can_mod_post": false,
        "created_utc": 1575245759.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 2, "author_fullname": "t2_7cuzq", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "# Javascript\n\n    //
        Just converting the given test data into a useable array here\n    const testInputString
        = \"109067 75007 66030 93682 83818 108891 139958 129246 80272 119897 112804
        69495 95884 85402 148361 75986 120063 127683 146962 76907 61414 98452 134330
        53858 82662 143258 82801 60279 131782 105989 102464 96563 71172 113731 90645
        94830 133247 110149 54792 134863 125919 145490 69836 108808 87954 148957 110182
        126668 148024 96915 117727 147378 75967 91915 60130 85331 66800 103419 72627
        72687 61606 113160 107082 110793 61589 105005 73952 65705 117243 140944 117091
        113482 91379 148185 113853 119822 78179 85407 119886 109230 68783 63914 51101
        93549 53361 127984 106315 54997 138941 81075 120272 120307 98414 115245 105649
        89793 88421 121104 97084 56928\"\n    \n    const testArray = testInputString.split(\"
        \").map(string =&gt; parseInt(string))\n    \n    // Part One\n    const calculateFuelRequirements
        = (masses) =&gt; {\n      let sum = 0\n    \n      for (let i = 0; i &lt;
        masses.length; i++) {\n        let currentMass = masses[i]\n    \n        sum
        += Math.floor((currentMass/3) - 2)\n      }\n    \n      return sum\n    }\n    \n    calculateFuelRequirements(testArray)\n    \n    //
        Part Two\n    const calculateFuelRequirementsFurther = (masses) =&gt; {\n      let
        sum = 0\n    \n      for (let i = 0; i &lt; masses.length; i++) {\n        let
        currentMass = masses[i]\n        let currentMassFuel = Math.floor((currentMass/3)
        - 2)\n    \n        while (currentMassFuel &gt;= 0) {\n          sum += currentMassFuel\n          currentMassFuel
        = Math.floor((currentMassFuel/3) - 2)\n        }\n      }\n    \n      return
        sum\n    }\n    \n    calculateFuelRequirementsFurther(testArray)\n\nFirst
        time posting here - Any and all feedback is welcome!", "edited": 1575245976.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_f9ekxby",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Javascript&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        Just converting the given test data into a useable array here\nconst testInputString
        = &amp;quot;109067 75007 66030 93682 83818 108891 139958 129246 80272 119897
        112804 69495 95884 85402 148361 75986 120063 127683 146962 76907 61414 98452
        134330 53858 82662 143258 82801 60279 131782 105989 102464 96563 71172 113731
        90645 94830 133247 110149 54792 134863 125919 145490 69836 108808 87954 148957
        110182 126668 148024 96915 117727 147378 75967 91915 60130 85331 66800 103419
        72627 72687 61606 113160 107082 110793 61589 105005 73952 65705 117243 140944
        117091 113482 91379 148185 113853 119822 78179 85407 119886 109230 68783 63914
        51101 93549 53361 127984 106315 54997 138941 81075 120272 120307 98414 115245
        105649 89793 88421 121104 97084 56928&amp;quot;\n\nconst testArray = testInputString.split(&amp;quot;
        &amp;quot;).map(string =&amp;gt; parseInt(string))\n\n// Part One\nconst calculateFuelRequirements
        = (masses) =&amp;gt; {\n  let sum = 0\n\n  for (let i = 0; i &amp;lt; masses.length;
        i++) {\n    let currentMass = masses[i]\n\n    sum += Math.floor((currentMass/3)
        - 2)\n  }\n\n  return sum\n}\n\ncalculateFuelRequirements(testArray)\n\n//
        Part Two\nconst calculateFuelRequirementsFurther = (masses) =&amp;gt; {\n  let
        sum = 0\n\n  for (let i = 0; i &amp;lt; masses.length; i++) {\n    let currentMass
        = masses[i]\n    let currentMassFuel = Math.floor((currentMass/3) - 2)\n\n    while
        (currentMassFuel &amp;gt;= 0) {\n      sum += currentMassFuel\n      currentMassFuel
        = Math.floor((currentMassFuel/3) - 2)\n    }\n  }\n\n  return sum\n}\n\ncalculateFuelRequirementsFurther(testArray)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;First
        time posting here - Any and all feedback is welcome!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ekxby/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575245759.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "more", "data": {"count": 2, "name": "t1_f9eozcu",
        "id": "f9eozcu", "parent_id": "t1_f9eh6wj", "depth": 1, "children": ["f9eozcu"]}}],
        "before": null}}, "user_reports": [], "saved": false, "id": "f9eh6wj", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "0rac1e", "can_mod_post": false, "created_utc":
        1575244132.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 3,
        "author_fullname": "t2_jqvvy", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Raku\n\n    my &amp;calc = +* div 3 - 2;\n    \n    my
        @fuel = ''input''.IO.words.map(&amp;calc);\n    \n    # Part 1\n    say @fuel.sum;\n    \n    #
        Part 2\n    say @fuel.map(-&gt; $x { |($x, &amp;calc ...^ * \u2264 0) }).sum;",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_f9eh6wj", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Raku&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;my
        &amp;amp;calc = +* div 3 - 2;\n\nmy @fuel = &amp;#39;input&amp;#39;.IO.words.map(&amp;amp;calc);\n\n#
        Part 1\nsay @fuel.sum;\n\n# Part 2\nsay @fuel.map(-&amp;gt; $x { |($x, &amp;amp;calc
        ...^ * \u2264 0) }).sum;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eh6wj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1575244132.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "more",
        "data": {"count": 625, "name": "t1_f9eg9ka", "id": "f9eg9ka", "parent_id":
        "t3_e4axxe", "depth": 0, "children": ["f9eg9ka", "f9efrvr", "f9eermi", "f9eeedl",
        "f9eegtn", "f9e2bqc", "f9eekny", "f9e9pw0", "f9eawlr", "f9ecpup", "f9e9tzf",
        "f9e95u8", "f9cp8mc", "f9e1sk0", "f9dtlzm", "f9e9ua1", "f9e4482", "f9e4b15",
        "f9dmskw", "f9e24jv", "f9dunbd", "f9e9xm0", "f9e7v2y", "f9bn9zl", "f9e8ys9",
        "f9d6u94", "f9cln1y", "f9cne42", "f9d8gmb", "f9dg3fh", "f9bjvy2", "f9dkh16",
        "f9dyd7m", "f9d7t9r", "f9dywlq", "f9dofwf", "f9e30z9", "f9e00mx", "f9agoy2",
        "f9d3gbd", "f9dcddm", "f9cju7c", "f9db9ap", "f9dpg4s", "f9cy7al", "f9dhs8c",
        "f9dzmu8", "f9dxd4j", "f99ktoc", "f995vox", "f9bdi1r", "f9dnnwd", "f9brgyu",
        "f9arrdj", "f9amv7r", "f9br9iq", "f9cftvh", "f9bimpm", "f9cyg9v", "f9bko7p",
        "f9d2flh", "f9bwkd1", "f9atyxf", "f9am8ik", "f9dg9ou", "f9c1ee9", "f9ccnpo",
        "f9davk5", "f9d5p8j", "f9d7ohp", "f9btcz0", "f9bqe57", "f9ahnaa", "f9dnszy",
        "f9e2a8s", "f9dsw8j", "f9cv5yb", "f9csybv", "f98xud8", "f99humy", "f9ccaxs",
        "f9ciuxd", "f9cfhy7", "f9buj8b", "f9bk1l3", "f9bnqbt", "f9d3aat", "f9cenbt",
        "f9cftjt", "f9baof0", "f9bt11z", "f9cqb6l", "f9d2qxa", "f9axszk", "f9dkpm0",
        "f9dns88", "f9czaku", "f9cs39t", "f993t8l", "f99gw7s", "f98t10w", "f98gtug",
        "f9a38at", "f99149g", "f9ct724", "f9c9axd", "f9bgpnf", "f9br68q", "f98l9rk",
        "f99qstk", "f9a8ysf", "f99o1zf", "f99c5ul", "f9abv6n", "f9b6wc3", "f9b9r1k",
        "f9bbql2", "f9934ee", "f9b3g1e", "f9aazci", "f98m85t", "f998ti6", "f9amkve",
        "f99rbhn", "f9912n1", "f9bbta9", "f9ae4ur", "f99tllv", "f99uxjy", "f99k37o",
        "f9c8pu8", "f9d48p8", "f9bhurl", "f9auk2h", "f9b8e5g", "f9953fj", "f9cegpe",
        "f9d7eoe", "f9ajerr", "f99qys1", "f9d0ixq", "f9bvb7k", "f998ent", "f9b5118",
        "f99vdez", "f98jkld", "f99e8bl", "f98o7px", "f9dghsb", "f9a8wat", "f9910kz",
        "f9brcbn", "f9c68l7", "f9bpw5f", "f9c6u9g", "f9betko", "f9bxd0e", "f99h2ul",
        "f98gmic", "f98xq0b", "f98e6ki", "f98hgh2", "f9a4mxa", "f98tguo", "f99r9d1",
        "f9brl2u", "f9bzvmy", "f9a9804", "f98khp4", "f9ae79w", "f9975b2", "f99cmy2",
        "f9aspom", "f9a3x1j", "f9crj4v", "f98g9y9", "f9bnjn7", "f9a4wfk", "f9bljcq",
        "f99j5x4", "f98er5l", "f99j8kw", "f9awt06", "f9aa89v", "f9ad17m", "f9ccrnp",
        "f9a5enx", "f98hpop", "f98ofhf", "f98elxe", "f99us86", "f98emdd", "f98xwka",
        "f98ju3b", "f9cci8a", "f9a5juy", "f992sov", "f99gwf3", "f98korp", "f98ig6a",
        "f98ll3y", "f98qs5x", "f98el6a", "f98i2g4", "f98fdqe", "f98due7", "f9979zi",
        "f999zyj", "f98u30m", "f98yr8h", "f98n7b0", "f9916zx", "f98z05e", "f9b7fyc",
        "f98fkf4", "f99uegw", "f9bojzt", "f98j2lo", "f98h4kp", "f98ex25", "f992xqa",
        "f98vvw5", "f98ea2n", "f99ck7e", "f9932qr", "f996l4e", "f98elzq", "f98eqz5",
        "f99sbxk", "f98gm0s", "f9a1xzz", "f98m1ra", "f9a7x50", "f98g2ur", "f98e1ku",
        "f9amjs9", "f98io7f", "f98dj3f", "f98uu7p", "f98ysya", "f99cycb", "f98gqtq",
        "f98cydj", "f98gftt", "f98yp0c", "f98lsgx", "f98obua", "f99w9q2", "f98f8o5",
        "f99n2eq", "f98feti", "f98e2oa", "f98xzha", "f98pqid", "f98h92l", "f98djz6",
        "f9908mr", "f98vqn0", "f98hqvf", "f993cfk", "f98fqot", "f98e7ds", "f9a24y1",
        "f9avalt", "f98f3jg", "f9biur5", "f98tgvj", "f98uxjf", "f98mf0k", "f9a6zyp",
        "f98el10", "f99z9mg", "f98f9lo", "f98f0mk", "f98q1ba", "f99yu1r", "f9bbw39",
        "f9brdtx"]}}], "before": null}}]'
  recorded_at: Sat, 08 Mar 2025 23:06:43 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:43 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=CvJb7eH3GFLAHrD8gu; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 23:06:43 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_e4axxe&children=f9eg9ka,f9efrvr,f9eermi,f9eeedl,f9eegtn,f9e2bqc,f9eekny,f9e9pw0,f9eawlr,f9ecpup,f9e9tzf,f9e95u8,f9cp8mc,f9e1sk0,f9dtlzm,f9e9ua1,f9e4482,f9e4b15,f9dmskw,f9e24jv,f9dunbd,f9e9xm0,f9e7v2y,f9bn9zl,f9e8ys9,f9d6u94,f9cln1y,f9cne42,f9d8gmb,f9dg3fh,f9bjvy2,f9dkh16,f9dyd7m,f9d7t9r,f9dywlq,f9dofwf,f9e30z9,f9e00mx,f9agoy2,f9d3gbd,f9dcddm,f9cju7c,f9db9ap,f9dpg4s,f9cy7al,f9dhs8c,f9dzmu8,f9dxd4j,f99ktoc,f995vox,f9bdi1r,f9dnnwd,f9brgyu,f9arrdj,f9amv7r,f9br9iq,f9cftvh,f9bimpm,f9cyg9v,f9bko7p,f9d2flh,f9bwkd1,f9atyxf,f9am8ik,f9dg9ou,f9c1ee9,f9ccnpo,f9davk5,f9d5p8j,f9d7ohp,f9btcz0,f9bqe57,f9ahnaa,f9dnszy,f9e2a8s,f9dsw8j,f9cv5yb,f9csybv,f98xud8,f99humy,f9ccaxs,f9ciuxd,f9cfhy7,f9buj8b,f9bk1l3,f9bnqbt,f9d3aat,f9cenbt,f9cftjt,f9baof0,f9bt11z,f9cqb6l,f9d2qxa,f9axszk,f9dkpm0,f9dns88,f9czaku,f9cs39t,f993t8l,f99gw7s,f98t10w,f98gtug,f9a38at,f99149g,f9ct724,f9c9axd,f9bgpnf,f9br68q,f98l9rk,f99qstk,f9a8ysf,f99o1zf,f99c5ul,f9abv6n,f9b6wc3,f9b9r1k,f9bbql2,f9934ee,f9b3g1e,f9aazci,f98m85t,f998ti6,f9amkve,f99rbhn,f9912n1,f9bbta9,f9ae4ur,f99tllv,f99uxjy,f99k37o,f9c8pu8,f9d48p8,f9bhurl,f9auk2h,f9b8e5g,f9953fj,f9cegpe,f9d7eoe,f9ajerr,f99qys1,f9d0ixq,f9bvb7k,f998ent,f9b5118,f99vdez,f98jkld,f99e8bl,f98o7px,f9dghsb,f9a8wat,f9910kz,f9brcbn,f9c68l7,f9bpw5f,f9c6u9g,f9betko,f9bxd0e,f99h2ul,f98gmic,f98xq0b,f98e6ki,f98hgh2,f9a4mxa,f98tguo,f99r9d1,f9brl2u,f9bzvmy,f9a9804,f98khp4,f9ae79w,f9975b2,f99cmy2,f9aspom,f9a3x1j,f9crj4v,f98g9y9,f9bnjn7,f9a4wfk,f9bljcq,f99j5x4,f98er5l,f99j8kw,f9awt06,f9aa89v,f9ad17m,f9ccrnp,f9a5enx,f98hpop,f98ofhf,f98elxe,f99us86,f98emdd,f98xwka,f98ju3b,f9cci8a,f9a5juy,f992sov,f99gwf3,f98korp,f98ig6a,f98ll3y,f98qs5x,f98el6a,f98i2g4,f98fdqe,f98due7,f9979zi,f999zyj,f98u30m,f98yr8h,f98n7b0,f9916zx,f98z05e,f9b7fyc,f98fkf4,f99uegw,f9bojzt,f98j2lo,f98h4kp,f98ex25,f992xqa,f98vvw5,f98ea2n,f99ck7e,f9932qr,f996l4e,f98elzq,f98eqz5,f99sbxk,f98gm0s,f9a1xzz,f98m1ra,f9a7x50,f98g2ur,f98e1ku,f9amjs9,f98io7f,f98dj3f,f98uu7p,f98ysya,f99cycb,f98gqtq,f98cydj,f98gftt,f98yp0c,f98lsgx,f98obua,f99w9q2,f98f8o5,f99n2eq,f98feti,f98e2oa,f98xzha,f98pqid,f98h92l,f98djz6,f9908mr,f98vqn0,f98hqvf,f993cfk,f98fqot,f98e7ds,f9a24y1,f9avalt,f98f3jg,f9biur5,f98tgvj,f98uxjf,f98mf0k,f9a6zyp,f98el10,f99z9mg,f98f9lo,f98f0mk,f98q1ba,f99yu1r,f9bbw39,f9brdtx
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '44184'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksigdrq80.2.1741475203462.Z0FBQUFBQm56TTJEZjk4bmRWSVQxVXl4RUlweEVuY1BlY0t2elVla0ZxWDN3Mm5qM1lDc04wVTZhR2c3Yk9adU9Sa2RXQ1lfcF9QMTYxSFJFamJRUTFuTU1GYW5rVS1uS1FnU1NIYWROdGQ5N1ByYk5JbU9uODhCTDN6dlhsNXdKM2NvU3E2SmowR0M;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 23:06:43
        GMT; secure, session_tracker=nkocqlekhchiepiqpd.0.1741475203473.Z0FBQUFBQm56TTJES01BS0JLQjlvTDVUSkM5UFV5SkE5ZzUxQjJKaXgySllucXBwNXNBRjZDN3JSRXNXVTg0SUF2VUZmRkVsNW5tYU5paldMRUNvWldMc25ULTB5TnBidWhxQlItc0pfbGNtQTZBdXRMb1hhZzZIcVl2Vm95NTNNNTZXQXYwd1M0Q28;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 01:06:43
        GMT; secure, edgebucket=keKDeWvctqR13Wkwds; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '30'
      x-ratelimit-remaining:
      - '70.0'
      x-ratelimit-reset:
      - '196'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:43 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575230029.0, "mod_reason_by": null,
        "banned_by": null, "ups": 17, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98due7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Unihedron",
        "can_mod_post": false, "created_utc": 1575177102.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 17, "author_fullname": "t2_h0e6x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I had wrong answer  \n\u200b \u200b \u200b \u200b Forgot to check negative  \n\u200b
        \u200b \u200b \u200b \u200b \u200b \u200b \u200b Please wait 20 secs  \n\u200b
        \u200b \u200b \u200b \u200b \u200b \u200b \u200b \u200b \u200b \u200b \u200b
        \u200b \u200b \u200b \u200b \u200b \u200b \u200b \u200b - \"Wrong answer\",
        a poem by Uni\n\n`ruby 1.rb input` 23/105\n\n    # part 1\n    p $&lt;.map{|x|a=(x.to_i/3)-2}.sum\n    #
        part 2\n    p $&lt;.map{|x|a=(x.to_i/3)-2\n    s=a\n    while a &gt; 0\n    a=a/3-2\n    s+=a
        if a&gt;0 # &lt;- left this out...\n    end\n    s }.sum\n\n---\n\nWith [reception
        for my poem](https://i.imgur.com/BJPi4gP.png) being better than expected (I
        had no expectations) I guess I will write more on the next days :P", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I had wrong answer&lt;br/&gt;\n\u200b \u200b
        \u200b \u200b Forgot to check negative&lt;br/&gt;\n\u200b \u200b \u200b \u200b
        \u200b \u200b \u200b \u200b Please wait 20 secs&lt;br/&gt;\n\u200b \u200b
        \u200b \u200b \u200b \u200b \u200b \u200b \u200b \u200b \u200b \u200b \u200b
        \u200b \u200b \u200b \u200b \u200b \u200b \u200b - &amp;quot;Wrong answer&amp;quot;,
        a poem by Uni&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ruby 1.rb input&lt;/code&gt;
        23/105&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# part 1\np $&amp;lt;.map{|x|a=(x.to_i/3)-2}.sum\n#
        part 2\np $&amp;lt;.map{|x|a=(x.to_i/3)-2\ns=a\nwhile a &amp;gt; 0\na=a/3-2\ns+=a
        if a&amp;gt;0 # &amp;lt;- left this out...\nend\ns }.sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;With
        &lt;a href=\"https://i.imgur.com/BJPi4gP.png\"&gt;reception for my poem&lt;/a&gt;
        being better than expected (I had no expectations) I guess I will write more
        on the next days :P&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98due7/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98due7", "created":
        1575177102.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98uztc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "tslater2006",
        "can_mod_post": false, "created_utc": 1575183262.0, "send_replies": true,
        "parent_id": "t1_f98due7", "score": 5, "author_fullname": "t2_9q53a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Upvoted for the poem :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Upvoted
        for the poem :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98uztc/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98uztc", "created":
        1575183262.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1713954178.0, "mod_reason_by": null,
        "banned_by": null, "ups": 16, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98i2g4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ephemient",
        "can_mod_post": false, "created_utc": 1575178564.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 16, "author_fullname": "t2_3y2dr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This space intentionally left blank.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;This space intentionally left blank.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98i2g4/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98i2g4", "created":
        1575178564.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99i09h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f98i2g4", "score":
        5, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "    return weight // 3 - 2\n\nTIL\n\nDid not know about
        the // operator. Looks like I have some python documentation reading to do!",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_f99i09h",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;return
        weight // 3 - 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;TIL&lt;/p&gt;\n\n&lt;p&gt;Did
        not know about the // operator. Looks like I have some python documentation
        reading to do!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99i09h/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1575191380.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575191380.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9efs67", "id": "f9efs67", "parent_id":
        "t1_f99i09h", "depth": 2, "children": ["f9efs67"]}}, {"kind": "more", "data":
        {"count": 9, "name": "t1_f98w783", "id": "f98w783", "parent_id": "t1_f98i2g4",
        "depth": 1, "children": ["f98w783", "ffy63og", "f99p79l", "f9a858a", "f9az7dx"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1575270773.0,
        "mod_reason_by": null, "banned_by": null, "ups": 15, "num_reports": null,
        "author_flair_type": "text", "total_awards_received": 0, "subreddit": "adventofcode",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "f98djz6", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        false, "author": "DFreiberg", "can_mod_post": false, "created_utc": 1575176997.0,
        "send_replies": true, "parent_id": "t3_e4axxe", "score": 15, "author_fullname":
        "t2_87ozx", "report_reasons": null, "approved_by": null, "all_awardings":
        [], "collapsed": false, "body": "**[Mathematica](https://github.com/HiggstonRainbird/AoC-2019)**\n----\n\n**37/57**\n\nPretty
        easy to make it a one-liner in Mathematica; I lost a minute on Part 2 because
        I forgot that when calculating the fuel from `NestWhileList`, you need to
        drop both the first and last elements of the list.\n\n**Import:**\n\n\tinput
        = Import[FileNameJoin[{NotebookDirectory[], \"Day1Input.txt\"}], \"List\"];\n\n**Part
        1:**\n\n\tTotal[Floor[#/3 - 2] &amp; /@ input]\n\n**Part 2:**\n\n\tTotal[Table[Total@NestWhileList[Floor[#/3
        - 2] &amp;, i, # &gt; 0 &amp;][[2 ;; -2]], {i, input}]]\n\n----\n**[Poem]:
        Achilles, Zeno, Newton, Tsiolkovsky**\n----\n\n\tIn ancient Greece, in olden
        times,\n\tThe gods once held a race:\n\tAchilles, swiftest of all men,\n\tAgainst
        a turtle''s pace.\n\n\tAchilles, turning towards the beast,\n\tsaid \"I''ll
        give you a start.\n\tI''ll stay here at the starting line,\n\t''Til we''re
        two *stades* apart.\"\n\n\tThe turtle, slowly, turned his head.\n\t\"My friend,
        you''ve lost the bet.\n\tThe gods are laughing up on high.\n\tAnd you don''t
        know it yet.\"\n\n\tThe line was drawn, the flag was dropped,\n\tAnd off the
        turtle went.\n\tA day went by, Achilles woke,\n\tAnd raced out from his tent.\n\n\tTwo
        stades he ran, and saw the beast\n\tA mere ten *cubits* yonder.\n\tAnd at
        that speed he crossed the gap,\n\tBefore his mind could wander.\n\n\tHe saw
        the turtle still ahead,\n\tThough now, by just two *\u03c0\u03cc\u03c3\u03b9\u03bd*.\n\t(The
        author, here, regretted Greek,\n\tand wished ''haiku'' he''d chosen.)\n\n\tThis
        race continued, on and on,\n\tthe chasm ever waning.\n\tAchilles couldn''t
        close the gap,\n\tbut ran on, ever straining.\n\n\tThen from on high a voice
        boomed out,\n\tand all around was laughter.\n\tThe great god Zeno entered
        in,\n\tTwo others walking after.\n\n\t\"King Achilles, you have lost.\n\tThe
        turtle is more sprightly.\n\tFor when you get to where he was,\n\tHe''s traveled
        further, slightly!\n\n\tIf all these gaps are added on,\n\tThe terms go on
        forever.\n\tYou race against infinity:\n\tA Sisyphean endeavour.\"\n\n\tBut
        Newton, with him, intervened.\n\t\"These sums are not so motile.\n\tYou can
        add up an endless sum,\n\tAnd get a finite total.\"\n\n\tAchilles, gleeful,
        ran again,\n\tand left the turtle trailing.\n\tIn glee, he jumped and tried
        to fly, \n\tbut each attempt was failing.\n\n\tAnd when the Earth had pulled
        him back,\n\the turned and asked a question.\n\t\"My lords, if men should
        wish to fly,\n\tHave you some good suggestion?\"\n\n\tAnd then Tsiolkovsky
        rose and spoke,\n\tthe last among the Powers.\n\t\"Lord Newton gave you finities,\n\tbut
        mercy won''t be ours!\"\n\n\t\"For logarithms are my crown,\n\tand gravity
        my scepter.\n\tNo ship of yours, dear King, will fly\n\tUnless *my* laws accept
        her.\"\n\n\tAnd to this day, he reigns supreme.\n\tHis cursed equation rankles.\n\tWhene''er
        we reach above, we fly\n\twith logs tied to our ankles.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h2&gt;&lt;strong&gt;&lt;a href=\"https://github.com/HiggstonRainbird/AoC-2019\"&gt;Mathematica&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;37/57&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Pretty
        easy to make it a one-liner in Mathematica; I lost a minute on Part 2 because
        I forgot that when calculating the fuel from &lt;code&gt;NestWhileList&lt;/code&gt;,
        you need to drop both the first and last elements of the list.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Import:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input
        = Import[FileNameJoin[{NotebookDirectory[], &amp;quot;Day1Input.txt&amp;quot;}],
        &amp;quot;List&amp;quot;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        1:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Total[Floor[#/3 - 2]
        &amp;amp; /@ input]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        2:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Total[Table[Total@NestWhileList[Floor[#/3
        - 2] &amp;amp;, i, # &amp;gt; 0 &amp;amp;][[2 ;; -2]], {i, input}]]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;&lt;strong&gt;[Poem]:
        Achilles, Zeno, Newton, Tsiolkovsky&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;In
        ancient Greece, in olden times,\nThe gods once held a race:\nAchilles, swiftest
        of all men,\nAgainst a turtle&amp;#39;s pace.\n\nAchilles, turning towards
        the beast,\nsaid &amp;quot;I&amp;#39;ll give you a start.\nI&amp;#39;ll stay
        here at the starting line,\n&amp;#39;Til we&amp;#39;re two *stades* apart.&amp;quot;\n\nThe
        turtle, slowly, turned his head.\n&amp;quot;My friend, you&amp;#39;ve lost
        the bet.\nThe gods are laughing up on high.\nAnd you don&amp;#39;t know it
        yet.&amp;quot;\n\nThe line was drawn, the flag was dropped,\nAnd off the turtle
        went.\nA day went by, Achilles woke,\nAnd raced out from his tent.\n\nTwo
        stades he ran, and saw the beast\nA mere ten *cubits* yonder.\nAnd at that
        speed he crossed the gap,\nBefore his mind could wander.\n\nHe saw the turtle
        still ahead,\nThough now, by just two *\u03c0\u03cc\u03c3\u03b9\u03bd*.\n(The
        author, here, regretted Greek,\nand wished &amp;#39;haiku&amp;#39; he&amp;#39;d
        chosen.)\n\nThis race continued, on and on,\nthe chasm ever waning.\nAchilles
        couldn&amp;#39;t close the gap,\nbut ran on, ever straining.\n\nThen from
        on high a voice boomed out,\nand all around was laughter.\nThe great god Zeno
        entered in,\nTwo others walking after.\n\n&amp;quot;King Achilles, you have
        lost.\nThe turtle is more sprightly.\nFor when you get to where he was,\nHe&amp;#39;s
        traveled further, slightly!\n\nIf all these gaps are added on,\nThe terms
        go on forever.\nYou race against infinity:\nA Sisyphean endeavour.&amp;quot;\n\nBut
        Newton, with him, intervened.\n&amp;quot;These sums are not so motile.\nYou
        can add up an endless sum,\nAnd get a finite total.&amp;quot;\n\nAchilles,
        gleeful, ran again,\nand left the turtle trailing.\nIn glee, he jumped and
        tried to fly, \nbut each attempt was failing.\n\nAnd when the Earth had pulled
        him back,\nhe turned and asked a question.\n&amp;quot;My lords, if men should
        wish to fly,\nHave you some good suggestion?&amp;quot;\n\nAnd then Tsiolkovsky
        rose and spoke,\nthe last among the Powers.\n&amp;quot;Lord Newton gave you
        finities,\nbut mercy won&amp;#39;t be ours!&amp;quot;\n\n&amp;quot;For logarithms
        are my crown,\nand gravity my scepter.\nNo ship of yours, dear King, will
        fly\nUnless *my* laws accept her.&amp;quot;\n\nAnd to this day, he reigns
        supreme.\nHis cursed equation rankles.\nWhene&amp;#39;er we reach above, we
        fly\nwith logs tied to our ankles.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98djz6/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98djz6", "created":
        1575176997.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_f99uh15", "id": "f99uh15", "parent_id":
        "t1_f98djz6", "depth": 1, "children": ["f99uh15", "f9czgjp", "f9f40db"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 11, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99c5ul", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "voidhawk42",
        "can_mod_post": false, "created_utc": 1575189615.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 11, "author_fullname": "t2_u464p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Dyalog APL:\n\n    p\u2190\u234e\u00a8\u2283\u2395nget''p01.txt''1\n    f\u2190{2-\u2368\u230a\u2375\u00f73}
        \u22c4 +/f p \u235d part 1\n    +/{0\u2265\u2375:0 \u22c4 \u2375+\u2207f\u2375}\u00a8f
        p \u235d part 2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dyalog
        APL:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p\u2190\u234e\u00a8\u2283\u2395nget&amp;#39;p01.txt&amp;#39;1\nf\u2190{2-\u2368\u230a\u2375\u00f73}
        \u22c4 +/f p \u235d part 1\n+/{0\u2265\u2375:0 \u22c4 \u2375+\u2207f\u2375}\u00a8f
        p \u235d part 2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99c5ul/", "subreddit_type":
        "public", "locked": false, "name": "t1_f99c5ul", "created": 1575189615.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_e4axxe", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "f99k33f", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_f99c5ul", "score": 3, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "This looks
        so ugly, I love it :D Apl really looks like some kind of alien language :)
        Or  mojibake :p", "awarders": [], "downs": 0, "author_flair_css_class": null,
        "name": "t1_f99k33f", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;This looks so ugly, I love it :D Apl really
        looks like some kind of alien language :) Or  mojibake :p&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99k33f/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575191990.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575191990.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9bogx1", "id": "f9bogx1", "parent_id":
        "t1_f99c5ul", "depth": 1, "children": ["f9bogx1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9ahnaa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "TheGermanDoctor",
        "can_mod_post": false, "created_utc": 1575202804.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 9, "author_fullname": "t2_bmk46", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**ARMv7-M Assembly**\n\nPart 2\n\n\n    _reset:\n        mov    r0, #100\n        eor    r1,
        r1\n        movs   r4, #3\n        eor    r5, r5 @ Result Register\n        ldr    r2,=masses\n\n    loop:\n        cmp     r1,
        r0\n        bge     _end\n        ldr     r3, [r2]\n        udiv    r3, r3,
        r4\n        sub     r3, #2\n        add     r5, r3\n\n    inner_loop:\n        udiv    r3,
        r3, r4\n        sub     r3, #2\n        cmp     r3, #0\n        ble     end_inner\n        add     r5,
        r3\n        b       inner_loop\n\n    end_inner:\n        add     r1, #1\n        add     r2,
        #4\n        b       loop\n    \n    _end:           @ Halt\n    b _end", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;ARMv7-M Assembly&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;_reset:\n    mov    r0, #100\n    eor    r1,
        r1\n    movs   r4, #3\n    eor    r5, r5 @ Result Register\n    ldr    r2,=masses\n\nloop:\n    cmp     r1,
        r0\n    bge     _end\n    ldr     r3, [r2]\n    udiv    r3, r3, r4\n    sub     r3,
        #2\n    add     r5, r3\n\ninner_loop:\n    udiv    r3, r3, r4\n    sub     r3,
        #2\n    cmp     r3, #0\n    ble     end_inner\n    add     r5, r3\n    b       inner_loop\n\nend_inner:\n    add     r1,
        #1\n    add     r2, #4\n    b       loop\n\n_end:           @ Halt\nb _end\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ahnaa/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ahnaa", "created":
        1575202804.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 10, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98ea2n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "MBR_Awesome",
        "can_mod_post": false, "created_utc": 1575177259.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 10, "author_fullname": "t2_d06ap", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python just off the leaderboard 101/269\n\n    import Common\n    \n\n    def
        calc_fuel(mass):\n        return int(mass / 3) - 2\n    \n    \n    def calc_fuel_recursive(mass):\n        fuel
        = calc_fuel(mass)\n        if fuel &lt;= 0:\n            return 0\n        else:\n            return
        fuel + calc_fuel_recursive(fuel)\n    \n    \n    line_input = Common.inputAsLines()\n    sum
        = 0\n    recursive_sum = 0\n    for line in line_input:\n        mass = int(line)\n        sum
        += calc_fuel(mass)\n        recursive_sum += calc_fuel_recursive(mass)\n    \n    print(sum)\n    print(recursive_sum)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python just off the
        leaderboard 101/269&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import Common\n\n\ndef
        calc_fuel(mass):\n    return int(mass / 3) - 2\n\n\ndef calc_fuel_recursive(mass):\n    fuel
        = calc_fuel(mass)\n    if fuel &amp;lt;= 0:\n        return 0\n    else:\n        return
        fuel + calc_fuel_recursive(fuel)\n\n\nline_input = Common.inputAsLines()\nsum
        = 0\nrecursive_sum = 0\nfor line in line_input:\n    mass = int(line)\n    sum
        += calc_fuel(mass)\n    recursive_sum += calc_fuel_recursive(mass)\n\nprint(sum)\nprint(recursive_sum)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98ea2n/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98ea2n", "created":
        1575177259.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9bg62p", "id": "f9bg62p", "parent_id":
        "t1_f98ea2n", "depth": 1, "children": ["f9bg62p", "f99p8y3"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98dj3f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "udoprog",
        "can_mod_post": false, "created_utc": 1575176988.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 8, "author_fullname": "t2_4eur7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust, no leaderboard.\n\n    fn part1(masses: &amp;[u64]) -&gt; u64 {\n        let
        mut total = 0;\n\n        for m in masses.iter().copied() {\n            let
        fuel = (m / 3) - 2;\n            total += fuel;\n        }\n\n        total\n    }\n\n    fn
        part2(masses: &amp;[u64]) -&gt; u64 {\n        let mut masses = masses.to_vec();\n\n        let
        mut total = 0;\n\n        while let Some(m) = masses.pop() {\n            let
        fuel = m / 3;\n\n            if let Some(input) = fuel.checked_sub(2) {\n                total
        += input;\n                masses.push(input);\n            }\n        }\n\n        total\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust, no leaderboard.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        part1(masses: &amp;amp;[u64]) -&amp;gt; u64 {\n    let mut total = 0;\n\n    for
        m in masses.iter().copied() {\n        let fuel = (m / 3) - 2;\n        total
        += fuel;\n    }\n\n    total\n}\n\nfn part2(masses: &amp;amp;[u64]) -&amp;gt;
        u64 {\n    let mut masses = masses.to_vec();\n\n    let mut total = 0;\n\n    while
        let Some(m) = masses.pop() {\n        let fuel = m / 3;\n\n        if let
        Some(input) = fuel.checked_sub(2) {\n            total += input;\n            masses.push(input);\n        }\n    }\n\n    total\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98dj3f/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98dj3f", "created":
        1575176988.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99795h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "bsullio",
        "can_mod_post": false, "created_utc": 1575187879.0, "send_replies": true,
        "parent_id": "t1_f98dj3f", "score": 7, "author_fullname": "t2_i4rlvgr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Also Rust - I found out about `std::iter::successors` today!\n\n    use aoc_runner_derive::{aoc,
        aoc_generator};\n\n    fn calculate_fuel_part2(mass: usize) -&gt; usize {\n        std::iter::successors(Some(mass),
        |m| (m / 3).checked_sub(2))\n            .skip(1)  // don''t include the initial
        mass\n            .sum()\n    }\n    \n    #[aoc(day1, part2)]\n    fn part2(input:
        &amp;Vec&lt;usize&gt;) -&gt; usize {\n        input.iter().map(|i| calculate_fuel_part2(*i)).sum()\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Also Rust - I found
        out about &lt;code&gt;std::iter::successors&lt;/code&gt; today!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        aoc_runner_derive::{aoc, aoc_generator};\n\nfn calculate_fuel_part2(mass:
        usize) -&amp;gt; usize {\n    std::iter::successors(Some(mass), |m| (m / 3).checked_sub(2))\n        .skip(1)  //
        don&amp;#39;t include the initial mass\n        .sum()\n}\n\n#[aoc(day1, part2)]\nfn
        part2(input: &amp;amp;Vec&amp;lt;usize&amp;gt;) -&amp;gt; usize {\n    input.iter().map(|i|
        calculate_fuel_part2(*i)).sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99795h/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99795h", "created":
        1575187879.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9b4vzm", "id": "f9b4vzm", "parent_id":
        "t1_f99795h", "depth": 2, "children": ["f9b4vzm"]}}, {"kind": "more", "data":
        {"count": 13, "name": "t1_f98nh40", "id": "f98nh40", "parent_id": "t1_f98dj3f",
        "depth": 1, "children": ["f98nh40", "f997eza", "f98ekeo", "f98kqa8", "f9epd9l"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 9, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99z9mg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "pred",
        "can_mod_post": false, "created_utc": 1575196990.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 9, "author_fullname": "t2_3zds9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Perl, as I want to be [just as cool as topaz](https://www.reddit.com/r/adventofcode/comments/dq80pa/what_languages_will_you_use_this_year/f65iivn/).\n\n\nPart
        one: `$\\+=int($_/3)-2}{print`\n\nPart two: `for($\\-=$_;$_&gt;0;$_=int($_/3)-2){$\\+=$_}}{print`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Perl, as I want to be
        &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/dq80pa/what_languages_will_you_use_this_year/f65iivn/\"&gt;just
        as cool as topaz&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Part one: &lt;code&gt;$\\+=int($_/3)-2}{print&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        two: &lt;code&gt;for($\\-=$_;$_&amp;gt;0;$_=int($_/3)-2){$\\+=$_}}{print&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99z9mg/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99z9mg", "created":
        1575196990.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a0wdc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "raevnos",
        "can_mod_post": false, "created_utc": 1575197533.0, "send_replies": true,
        "parent_id": "t1_f99z9mg", "score": 8, "author_fullname": "t2_3995k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Horrible, horrible abuse of `$\\`.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Horrible, horrible abuse of &lt;code&gt;$\\&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a0wdc/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a0wdc", "created":
        1575197533.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a4jyy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "topaz2078",
        "can_mod_post": false, "created_utc": 1575198615.0, "send_replies": true,
        "parent_id": "t1_f9a0wdc", "score": 8, "author_fullname": "t2_3ga32", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "What, your complaint is the use of `$\\`, not the blatant random `}{` to
        escape the implied `-p` or `-n` wrap?", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": "flair-aoccreator", "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;What, your complaint is the use of &lt;code&gt;$\\&lt;/code&gt;,
        not the blatant random &lt;code&gt;}{&lt;/code&gt; to escape the implied &lt;code&gt;-p&lt;/code&gt;
        or &lt;code&gt;-n&lt;/code&gt; wrap?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a4jyy/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9a4jyy", "created": 1575198615.0,
        "author_flair_text": "(AoC creator)", "treatment_tags": [], "link_id": "t3_e4axxe",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9ag4th",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "gerikson",
        "can_mod_post": false, "created_utc": 1575202284.0, "send_replies": true,
        "parent_id": "t1_f9a0wdc", "score": 7, "author_fullname": "t2_3gib3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "There once was a coder named Earl  \nHe created every program with Perl  \nHis
        abuse of $/  \nCaused his program to crash  \nAnd the sight of it made everyone
        hurl.\n\n(apologies to /u/pred  if their name really is Earl...)\n\nHere is
        my code btw:  https://github.com/gustafe/aoc2019/blob/master/d01.pl", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;There once was a coder named Earl&lt;br/&gt;\nHe
        created every program with Perl&lt;br/&gt;\nHis abuse of $/&lt;br/&gt;\nCaused
        his program to crash&lt;br/&gt;\nAnd the sight of it made everyone hurl.&lt;/p&gt;\n\n&lt;p&gt;(apologies
        to &lt;a href=\"/u/pred\"&gt;/u/pred&lt;/a&gt;  if their name really is Earl...)&lt;/p&gt;\n\n&lt;p&gt;Here
        is my code btw:  &lt;a href=\"https://github.com/gustafe/aoc2019/blob/master/d01.pl\"&gt;https://github.com/gustafe/aoc2019/blob/master/d01.pl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ag4th/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ag4th", "created":
        1575202284.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9b7zr5", "id": "f9b7zr5", "parent_id":
        "t1_f99z9mg", "depth": 1, "children": ["f9b7zr5", "f9boggi", "f9bzv7u"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1575177119.0,
        "mod_reason_by": null, "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98cydj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Kanegae",
        "can_mod_post": false, "created_utc": 1575176782.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 6, "author_fullname": "t2_b7i6n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python - 10/16\n\nMy first leaderboard! So stoked hahah. Completed 2018 halfway
        through and never got over rank 250. :D\n\nThere''s the messy code:\n    \n    import
        AOCUtils\n    \n    rin = AOCUtils.loadInput(1)\n    \n    p1 = []\n    p2
        = []\n    for r in rin:\n        nm = ((r//3)-2)\n        p1.append(nm)\n        p2.append(nm)\n        while
        True:\n            nm = ((nm//3)-2)\n            if nm &lt;= 0: break\n            p2.append(nm)\n    \n    print(sum(p1))\n    print(sum(p2))\n\nEDIT:
        I did read /u/mcpower_''s [tips](https://gist.github.com/mcpower/87427528b9ba5cac6f0c679370789661).
        So I hastily set up a py template, downloaded the input file, read the \"divide
        by 3, round down, sub 2\" and just assumed that Part 1 was to just sum all
        of them. Got a little confused by skimming Part 2 text, but still managed
        to get top 20. So happy.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        - 10/16&lt;/p&gt;\n\n&lt;p&gt;My first leaderboard! So stoked hahah. Completed
        2018 halfway through and never got over rank 250. :D&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s
        the messy code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import AOCUtils\n\nrin
        = AOCUtils.loadInput(1)\n\np1 = []\np2 = []\nfor r in rin:\n    nm = ((r//3)-2)\n    p1.append(nm)\n    p2.append(nm)\n    while
        True:\n        nm = ((nm//3)-2)\n        if nm &amp;lt;= 0: break\n        p2.append(nm)\n\nprint(sum(p1))\nprint(sum(p2))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT:
        I did read &lt;a href=\"/u/mcpower_\"&gt;/u/mcpower_&lt;/a&gt;&amp;#39;s &lt;a
        href=\"https://gist.github.com/mcpower/87427528b9ba5cac6f0c679370789661\"&gt;tips&lt;/a&gt;.
        So I hastily set up a py template, downloaded the input file, read the &amp;quot;divide
        by 3, round down, sub 2&amp;quot; and just assumed that Part 1 was to just
        sum all of them. Got a little confused by skimming Part 2 text, but still
        managed to get top 20. So happy.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98cydj/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98cydj", "created": 1575176782.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_f98dxav", "id": "f98dxav", "parent_id": "t1_f98cydj", "depth": 1, "children":
        ["f98dxav", "f98vzso"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1575177788.0, "mod_reason_by": null, "banned_by": null, "ups": 6,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98el6a",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1575177370.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 6, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### PowerShell - rank 632 / 359\n\nFirst answer I read \"round down\" and
        typed \"round()\" instead of \"floor()\", second answer my code doesn''t work,
        +1min delay. Rewrote it as a shell one-liner instead of a tidy script, haven''t
        yet worked out why the answer is slightly different, but this was right:\n\n    #
        Part 1\n    ${c:\\aoc\\1.txt} -as [int64[]] |% { [math]::floor($_/3) - 2 }  |
        measure -sum\n\n    # Part 2\n    $e=0; ${c:\\aoc\\1.txt} -as [int64[]] |%
        {$z=$_; while(($z=[math]::floor($z/3)-2)-gt0){$e+=$z}}; $e\n\n(I also guessed
        ahead that if there was a trick, it would be overflowing int32 so my first
        code was full of [int64]casts around everything and maybe that''s where I''ve
        screwed it up).\n\nExplains:\n\n - `${c:\\aoc\\1.txt}` is a syntax for referencing
        a filename as if it was a variable name, and it reads the file in as lines
        of text\n - `-as [int64[]]` casts an array of strings all in one go, into
        an array of long ints.\n - `|` is a pipeline like bash or cmd prompt\n - `%
        { $_ }` is a loop over pipeline items, more properly called `foreach-object
        -process { $_ }`\n - `measure` is the `measure-object` cmdlet used for counting,
        summing, min/maxing the pipeline input.\n - single letter variable names are
        life.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h3&gt;PowerShell
        - rank 632 / 359&lt;/h3&gt;\n\n&lt;p&gt;First answer I read &amp;quot;round
        down&amp;quot; and typed &amp;quot;round()&amp;quot; instead of &amp;quot;floor()&amp;quot;,
        second answer my code doesn&amp;#39;t work, +1min delay. Rewrote it as a shell
        one-liner instead of a tidy script, haven&amp;#39;t yet worked out why the
        answer is slightly different, but this was right:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Part 1\n${c:\\aoc\\1.txt} -as [int64[]] |% { [math]::floor($_/3) - 2 }  |
        measure -sum\n\n# Part 2\n$e=0; ${c:\\aoc\\1.txt} -as [int64[]] |% {$z=$_;
        while(($z=[math]::floor($z/3)-2)-gt0){$e+=$z}}; $e\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(I
        also guessed ahead that if there was a trick, it would be overflowing int32
        so my first code was full of [int64]casts around everything and maybe that&amp;#39;s
        where I&amp;#39;ve screwed it up).&lt;/p&gt;\n\n&lt;p&gt;Explains:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;${c:\\aoc\\1.txt}&lt;/code&gt;
        is a syntax for referencing a filename as if it was a variable name, and it
        reads the file in as lines of text&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-as [int64[]]&lt;/code&gt;
        casts an array of strings all in one go, into an array of long ints.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;|&lt;/code&gt;
        is a pipeline like bash or cmd prompt&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;%
        { $_ }&lt;/code&gt; is a loop over pipeline items, more properly called &lt;code&gt;foreach-object
        -process { $_ }&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;measure&lt;/code&gt;
        is the &lt;code&gt;measure-object&lt;/code&gt; cmdlet used for counting, summing,
        min/maxing the pipeline input.&lt;/li&gt;\n&lt;li&gt;single letter variable
        names are life.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98el6a/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98el6a", "created": 1575177370.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_f996664", "id": "f996664", "parent_id": "t1_f98el6a", "depth": 1, "children":
        ["f996664", "f98zv1a"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 6, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f99tllv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "raevnos", "can_mod_post": false, "created_utc":
        1575195129.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 6,
        "author_fullname": "t2_3995k", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "SQL:\n\n    -- Part 1\n    SELECT
        sum(mass / 3 - 2) FROM modules;\n    -- Part 2\n    WITH fuels AS\n     (SELECT  mass
        / 3 - 2 as fuel FROM modules\n      UNION ALL\n      SELECT fuel / 3 - 2 FROM
        fuels WHERE fuel / 3 - 2 &gt; 0)\n    SELECT sum(fuel) FROM fuels;", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;SQL:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;--
        Part 1\nSELECT sum(mass / 3 - 2) FROM modules;\n-- Part 2\nWITH fuels AS\n
        (SELECT  mass / 3 - 2 as fuel FROM modules\n  UNION ALL\n  SELECT fuel / 3
        - 2 FROM fuels WHERE fuel / 3 - 2 &amp;gt; 0)\nSELECT sum(fuel) FROM fuels;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99tllv/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99tllv", "created":
        1575195129.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9a6g4g", "id": "f9a6g4g", "parent_id":
        "t1_f99tllv", "depth": 1, "children": ["f9a6g4g", "f9bfvkw"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575207709.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9awt06", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "spin81",
        "can_mod_post": false, "created_utc": 1575207139.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 7, "author_fullname": "t2_dqdec", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My code in Rust](https://topaz.github.io/paste/#XQAAAQAmAwAAAAAAAAA6nMjJFMpQiatRvt7HtLR19WekEGrS3N6mavDBjrtLrDEll2K+XQBshZ6G439KIyU47zrTj/Yt/wbUQKcQph7jGSZF4cG+cqWVlxYsg0+Dv3dcYxVUKNaD4iE14IBWr7EZuGI040hM0P+KbxL4P/PdQPXK2yHEO84rN3r5ahJxeE/yVgrn8LwlU4uHl+EOkpezA+7aFLWRvVKt976dZ72+lZSD7Q7rI64OrxH+WIz3jvvdrEctDA8qvXjCTHrebbt3Fwy3w5LqBaqo2ygdES2hHsSnOQ9HRwa+XEFAUVX5QGS6+GWM+B8mABvlVdZKbBSauIV3h4YoR4zVsdozX9DWB1vI/YIuO6tA6izNirqDeGOF9uFbMr1gr04/RMeqlOU3n9pnJlPvuulfCUT+yd03WUTZ8oIJemhFRqQtch5pp7+M1+RMSxUOE4bi9jOhOXilALzKer/hwSosh+eR02X7xIqqm7bUlQIWYyyyaeOwhddt/6wmGAA=).\n\nThere
        once was an elf name of Lars  \nWho wanted to reach for the stars  \nHe let
        a sigh loose  \nCause he ran out of juice  \nAnd made it no further than Mars",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAmAwAAAAAAAAA6nMjJFMpQiatRvt7HtLR19WekEGrS3N6mavDBjrtLrDEll2K+XQBshZ6G439KIyU47zrTj/Yt/wbUQKcQph7jGSZF4cG+cqWVlxYsg0+Dv3dcYxVUKNaD4iE14IBWr7EZuGI040hM0P+KbxL4P/PdQPXK2yHEO84rN3r5ahJxeE/yVgrn8LwlU4uHl+EOkpezA+7aFLWRvVKt976dZ72+lZSD7Q7rI64OrxH+WIz3jvvdrEctDA8qvXjCTHrebbt3Fwy3w5LqBaqo2ygdES2hHsSnOQ9HRwa+XEFAUVX5QGS6+GWM+B8mABvlVdZKbBSauIV3h4YoR4zVsdozX9DWB1vI/YIuO6tA6izNirqDeGOF9uFbMr1gr04/RMeqlOU3n9pnJlPvuulfCUT+yd03WUTZ8oIJemhFRqQtch5pp7+M1+RMSxUOE4bi9jOhOXilALzKer/hwSosh+eR02X7xIqqm7bUlQIWYyyyaeOwhddt/6wmGAA=\"&gt;My
        code in Rust&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;There once was an elf name of
        Lars&lt;br/&gt;\nWho wanted to reach for the stars&lt;br/&gt;\nHe let a sigh
        loose&lt;br/&gt;\nCause he ran out of juice&lt;br/&gt;\nAnd made it no further
        than Mars&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9awt06/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9awt06", "created":
        1575207139.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9clqjj", "id": "f9clqjj", "parent_id":
        "t1_f9awt06", "depth": 1, "children": ["f9clqjj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9ccrnp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "oblivion12321",
        "can_mod_post": false, "created_utc": 1575222066.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 7, "author_fullname": "t2_9g98y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Common Lisp \n\n    (defun fuel (m)\n      (- (floor (/ m 3)) 2))\n\n    (defun
        fuel-for-fuel (m &amp;optional (total 0))\n      (let ((x (fuel m)))\n        (if
        (&lt;= x 0)\n            total\n            (fuel-for-fuel x (+ total x)))))\n\n    (defconstant
        +answer-1+ (apply #''+ (mapcar #''fuel +data-1+)))\n    (defconstant +answer-1+
        (apply #''+ (mapcar #''fuel-for-fuel +data-1+)))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Common Lisp &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        fuel (m)\n  (- (floor (/ m 3)) 2))\n\n(defun fuel-for-fuel (m &amp;amp;optional
        (total 0))\n  (let ((x (fuel m)))\n    (if (&amp;lt;= x 0)\n        total\n        (fuel-for-fuel
        x (+ total x)))))\n\n(defconstant +answer-1+ (apply #&amp;#39;+ (mapcar #&amp;#39;fuel
        +data-1+)))\n(defconstant +answer-1+ (apply #&amp;#39;+ (mapcar #&amp;#39;fuel-for-fuel
        +data-1+)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ccrnp/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ccrnp", "created":
        1575222066.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98e6ki",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "sophiebits",
        "can_mod_post": false, "created_utc": 1575177223.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_14a4ru", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt;Leaderboard capped in 1 minute 24 seconds (sheesh!)\n\nThat doesn''t
        sound right. (I solved part 2 at 00:01:47 and that put me 3rd place for part
        2\u2026)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Leaderboard
        capped in 1 minute 24 seconds (sheesh!)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That
        doesn&amp;#39;t sound right. (I solved part 2 at 00:01:47 and that put me
        3rd place for part 2\u2026)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98e6ki/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98e6ki", "created":
        1575177223.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98eup8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1575177460.0, "send_replies": true,
        "parent_id": "t1_f98e6ki", "score": 4, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You''re right, I was looking at silver cap, not gold cap.  I think I''ll
        borrow one of /u/topaz2078''s paper bags &gt;_&gt;\n\nNow post your code!  :P",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You&amp;#39;re right,
        I was looking at silver cap, not gold cap.  I think I&amp;#39;ll borrow one
        of &lt;a href=\"/u/topaz2078\"&gt;/u/topaz2078&lt;/a&gt;&amp;#39;s paper bags
        &amp;gt;_&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;Now post your code!  :P&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98eup8/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98eup8", "created":
        1575177460.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 1, "name": "t1_f98g1ft", "id": "f98g1ft",
        "parent_id": "t1_f98eup8", "depth": 2, "children": ["f98g1ft"]}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f98o4vh", "id": "f98o4vh", "parent_id":
        "t1_f98e6ki", "depth": 1, "children": ["f98o4vh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575253603.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98f9lo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "mstksg",
        "can_mod_post": false, "created_utc": 1575177597.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 6, "author_fullname": "t2_5cbmr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell -- 158 /118 :)  Hit the 1 minute delay on part 2 because I freaked
        out and submitted before checking my test cases ... I had accidentally added
        the original number into the sums initially, heh.\n\n&amp;#x200B;\n\n    fuel
        = subtract 2 . (`div` 3)\n    \n    part1 = sum . map fuel\n    part2 = sum
        . map (sum . tail . takeWhile (&gt;= 0) . iterate fuel)\n\nAnd you can parse
        these all with `map read . lines` :)\n\nI''m going to be [posting reflections
        for every day in Haskell](https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-1)
        here, if anyone wants to follow along :D\n\n&amp;#x200B;\n\n\\---------\n\nPoem:\n\n&amp;#x200B;\n\n&gt;I
        have eaten  \n&gt;  \n&gt;the fuel rods  \n&gt;  \n&gt;that were in  \n&gt;  \n&gt;the
        modules  \n&gt;  \n&gt;and which  \n&gt;  \n&gt;you were probably  \n&gt;  \n&gt;saving  \n&gt;  \n&gt;for
        Santa  \n&gt;  \n&gt;Forgive me  \n&gt;  \n&gt;they were delicious  \n&gt;  \n&gt;so
        sweet  \n&gt;  \n&gt;and so recursive\n\nEDIT: Not sure if this breaks the
        \"No plagiarism rule\", as this is based on a viral meme format based on the
        real poem of [William Carlos Williams](https://poets.org/poem/just-say).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell -- 158 /118
        :)  Hit the 1 minute delay on part 2 because I freaked out and submitted before
        checking my test cases ... I had accidentally added the original number into
        the sums initially, heh.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fuel
        = subtract 2 . (`div` 3)\n\npart1 = sum . map fuel\npart2 = sum . map (sum
        . tail . takeWhile (&amp;gt;= 0) . iterate fuel)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And
        you can parse these all with &lt;code&gt;map read . lines&lt;/code&gt; :)&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        going to be &lt;a href=\"https://github.com/mstksg/advent-of-code-2019/blob/master/reflections.md#day-1\"&gt;posting
        reflections for every day in Haskell&lt;/a&gt; here, if anyone wants to follow
        along :D&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;---------&lt;/p&gt;\n\n&lt;p&gt;Poem:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I
        have eaten  &lt;/p&gt;\n\n&lt;p&gt;the fuel rods  &lt;/p&gt;\n\n&lt;p&gt;that
        were in  &lt;/p&gt;\n\n&lt;p&gt;the modules  &lt;/p&gt;\n\n&lt;p&gt;and which  &lt;/p&gt;\n\n&lt;p&gt;you
        were probably  &lt;/p&gt;\n\n&lt;p&gt;saving  &lt;/p&gt;\n\n&lt;p&gt;for Santa  &lt;/p&gt;\n\n&lt;p&gt;Forgive
        me  &lt;/p&gt;\n\n&lt;p&gt;they were delicious  &lt;/p&gt;\n\n&lt;p&gt;so
        sweet  &lt;/p&gt;\n\n&lt;p&gt;and so recursive&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;EDIT:
        Not sure if this breaks the &amp;quot;No plagiarism rule&amp;quot;, as this
        is based on a viral meme format based on the real poem of &lt;a href=\"https://poets.org/poem/just-say\"&gt;William
        Carlos Williams&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98f9lo/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98f9lo", "created":
        1575177597.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98lv20",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jkester1986",
        "can_mod_post": false, "created_utc": 1575179902.0, "send_replies": true,
        "parent_id": "t1_f98f9lo", "score": 4, "author_fullname": "t2_t2j7j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This reminds me a lot of Delilah S. Dawson''s bork book poems and I love
        it :) It''s just missing the borks, but this totally could be a dog eating
        something it shouldn''t be. An example, for reference: [https://twitter.com/DelilahSDawson/status/1191040049896398848](https://twitter.com/DelilahSDawson/status/1191040049896398848)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This reminds me a lot
        of Delilah S. Dawson&amp;#39;s bork book poems and I love it :) It&amp;#39;s
        just missing the borks, but this totally could be a dog eating something it
        shouldn&amp;#39;t be. An example, for reference: &lt;a href=\"https://twitter.com/DelilahSDawson/status/1191040049896398848\"&gt;https://twitter.com/DelilahSDawson/status/1191040049896398848&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98lv20/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98lv20", "created":
        1575179902.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 9, "name": "t1_f9cxdww", "id": "f9cxdww", "parent_id":
        "t1_f98f9lo", "depth": 1, "children": ["f9cxdww", "f98nt3l", "f9isyqv", "f998dbe"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9912n1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rosemaryorchard",
        "can_mod_post": false, "created_utc": 1575185591.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 6, "author_fullname": "t2_14unlm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m aiming for readability with my code, rather than efficiency. And I used
        PHP :)\n\nhttps://github.com/RosemaryOrchard/AdventOfCode2019/blob/master/code/day_01.php\n\nThe
        good news is I also generated the code files and input files for the rest
        of the month so I can hopefully get on with this faster even if I continue
        to wake up late!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        aiming for readability with my code, rather than efficiency. And I used PHP
        :)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/RosemaryOrchard/AdventOfCode2019/blob/master/code/day_01.php\"&gt;https://github.com/RosemaryOrchard/AdventOfCode2019/blob/master/code/day_01.php&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The
        good news is I also generated the code files and input files for the rest
        of the month so I can hopefully get on with this faster even if I continue
        to wake up late!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9912n1/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9912n1", "created":
        1575185591.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9bxvbd", "id": "f9bxvbd", "parent_id":
        "t1_f9912n1", "depth": 1, "children": ["f9bxvbd"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9amv7r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Chibraltar_",
        "can_mod_post": false, "created_utc": 1575204339.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 7, "author_fullname": "t2_51p8q0e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Google Spreadsheet**\n\nI can''t paste code, but there you go : [https://docs.google.com/spreadsheets/d/1oHG-sfmwew-4NuxlGEahnxngIubuZ57A6Vqv\\_OxEsbg/edit?usp=sharing](https://docs.google.com/spreadsheets/d/1oHG-sfmwew-4NuxlGEahnxngIubuZ57A6Vqv_OxEsbg/edit?usp=sharing)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Google
        Spreadsheet&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I can&amp;#39;t paste code,
        but there you go : &lt;a href=\"https://docs.google.com/spreadsheets/d/1oHG-sfmwew-4NuxlGEahnxngIubuZ57A6Vqv_OxEsbg/edit?usp=sharing\"&gt;https://docs.google.com/spreadsheets/d/1oHG-sfmwew-4NuxlGEahnxngIubuZ57A6Vqv_OxEsbg/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9amv7r/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9amv7r", "created":
        1575204339.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98eqz5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ValdasTheUnique",
        "can_mod_post": false, "created_utc": 1575177424.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_wi8es", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n\n\n    public static void Part1()\n    {\n    \tInputInts\n    \t\t.Select(x
        =&gt; x / 3 - 2)\n    \t\t.Sum()\n    \t\t.Print();\n    }\n    \n    public
        static void Part2()\n    {\n    \tInputInts\n    \t\t.Select(x =&gt;\n    \t\t{\n    \t\t\tvar
        result = 0;\n    \t\t\tx = x / 3 - 2;\n    \t\t\twhile (x &gt; 0)\n    \t\t\t{\n    \t\t\t\tresult
        += x;\n    \t\t\t\tx = x / 3 - 2;\n    \t\t\t}\n    \t\t\treturn result;\n    \t\t})\n    \t\t.Sum()\n    \t\t.Print();\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        static void Part1()\n{\n    InputInts\n        .Select(x =&amp;gt; x / 3 -
        2)\n        .Sum()\n        .Print();\n}\n\npublic static void Part2()\n{\n    InputInts\n        .Select(x
        =&amp;gt;\n        {\n            var result = 0;\n            x = x / 3 -
        2;\n            while (x &amp;gt; 0)\n            {\n                result
        += x;\n                x = x / 3 - 2;\n            }\n            return result;\n        })\n        .Sum()\n        .Print();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98eqz5/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98eqz5", "created":
        1575177424.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9bd8vo", "id": "f9bd8vo", "parent_id":
        "t1_f98eqz5", "depth": 1, "children": ["f9bd8vo"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98mf0k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "youaremean_YAM",
        "can_mod_post": false, "created_utc": 1575180101.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_14969o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Newbie here.\n**Javascript :**\n\n    var fs = require(''fs'');\n    var
        read = fs.readFileSync(\"input.txt\");\n    var data = read.toString().split(\"\\n\").map(Number);\n    data.pop();\n\n    function
        calculate(el){\n        return Math.floor(el/3)-2;\n    }\n\n    // PART ONE
        \n    console.log(data.map(el =&gt; calculate(el)).reduce( (a,b) =&gt; a+b));\n\n    //
        PART TWO \n    console.log(data.map(sumItUp).reduce( (a,b) =&gt; a+b))\n\n    function
        sumItUp(el){\n        let toAdd = 0;\n        counting = true;\n        base
        = calculate(el);\n        toAdd += base;\n\n        while(counting){\n            count
        = calculate(base);\n            count &lt; 0 ? counting = false : (toAdd+=count,
        base=count);\n        }\n        return toAdd\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Newbie here.\n&lt;strong&gt;Javascript :&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        fs = require(&amp;#39;fs&amp;#39;);\nvar read = fs.readFileSync(&amp;quot;input.txt&amp;quot;);\nvar
        data = read.toString().split(&amp;quot;\\n&amp;quot;).map(Number);\ndata.pop();\n\nfunction
        calculate(el){\n    return Math.floor(el/3)-2;\n}\n\n// PART ONE \nconsole.log(data.map(el
        =&amp;gt; calculate(el)).reduce( (a,b) =&amp;gt; a+b));\n\n// PART TWO \nconsole.log(data.map(sumItUp).reduce(
        (a,b) =&amp;gt; a+b))\n\nfunction sumItUp(el){\n    let toAdd = 0;\n    counting
        = true;\n    base = calculate(el);\n    toAdd += base;\n\n    while(counting){\n        count
        = calculate(base);\n        count &amp;lt; 0 ? counting = false : (toAdd+=count,
        base=count);\n    }\n    return toAdd\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98mf0k/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98mf0k", "created":
        1575180101.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98o55d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1575180719.0, "send_replies": true,
        "parent_id": "t1_f98mf0k", "score": 4, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; Newbie here.\n\nWelcome!", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Newbie
        here.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Welcome!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98o55d/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98o55d", "created":
        1575180719.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f999zyj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "BubonicPython",
        "can_mod_post": false, "created_utc": 1575188931.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_2k3y9drl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 1 in Piet. Had some extra fun with the first part: [https://imgur.com/a/vJkkLLi](https://imgur.com/a/vJkkLLi)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day 1 in Piet. Had some
        extra fun with the first part: &lt;a href=\"https://imgur.com/a/vJkkLLi\"&gt;https://imgur.com/a/vJkkLLi&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f999zyj/",
        "subreddit_type": "public", "locked": false, "name": "t1_f999zyj", "created":
        1575188931.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_f9cr25f", "id": "f9cr25f", "parent_id":
        "t1_f999zyj", "depth": 1, "children": ["f9cr25f", "f99ld46"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": "legal", "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99vdez", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[ Removed by Reddit ]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f99vdez", "is_submitter": false, "collapsed": false, "editable":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[ Removed by Reddit
        ]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished":
        null, "associated_award": null, "stickied": false, "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99vdez/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1575195849.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575195849.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9bciro", "id": "f9bciro", "parent_id":
        "t1_f99vdez", "depth": 1, "children": ["f9bciro"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9axszk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Pepper_Klubz",
        "can_mod_post": false, "created_utc": 1575207391.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 6, "author_fullname": "t2_9w2rm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Clojure**\nhttps://github.com/armstnp/advent-of-code-2019/blob/master/src/advent_of_code_2019/day1.clj\n\nStep
        2 visualized: each progressive fuel calculation rendered in log scale. http://www.quil.info/sketches/show/8b8fe30ff56dc287fdb3c1ef41980e3e504518f2e2b3a1ce54a667a97136470e",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Clojure&lt;/strong&gt;\n&lt;a
        href=\"https://github.com/armstnp/advent-of-code-2019/blob/master/src/advent_of_code_2019/day1.clj\"&gt;https://github.com/armstnp/advent-of-code-2019/blob/master/src/advent_of_code_2019/day1.clj&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Step
        2 visualized: each progressive fuel calculation rendered in log scale. &lt;a
        href=\"http://www.quil.info/sketches/show/8b8fe30ff56dc287fdb3c1ef41980e3e504518f2e2b3a1ce54a667a97136470e\"&gt;http://www.quil.info/sketches/show/8b8fe30ff56dc287fdb3c1ef41980e3e504518f2e2b3a1ce54a667a97136470e&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9axszk/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9axszk", "created":
        1575207391.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9b7fyc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "divingmonkey",
        "can_mod_post": false, "created_utc": 1575210011.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_42ev4u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "my compact **Nim** solution, which fits inside the mentioned five lines/80
        columns restriction, which admitedly requires [zero function](https://github.com/zero-functional/zero-functional)
        and is a bit messy:\n\n    import zero_functional, strutils\n    echo lines(\"input\")
        --&gt; map((try: parseInt(it) except ValueError: -1)).\n        filter(it
        != -1).map((var sum = 0; var cur = it div 3 - 2;\n            while cur &gt;
        0: (sum += cur; cur = cur div 3 - 2); sum)).\n        sum()\n\nedit: idk why
        the code block has so much empty space", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;my compact &lt;strong&gt;Nim&lt;/strong&gt; solution,
        which fits inside the mentioned five lines/80 columns restriction, which admitedly
        requires &lt;a href=\"https://github.com/zero-functional/zero-functional\"&gt;zero
        function&lt;/a&gt; and is a bit messy:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        zero_functional, strutils\necho lines(&amp;quot;input&amp;quot;) --&amp;gt;
        map((try: parseInt(it) except ValueError: -1)).\n    filter(it != -1).map((var
        sum = 0; var cur = it div 3 - 2;\n        while cur &amp;gt; 0: (sum += cur;
        cur = cur div 3 - 2); sum)).\n    sum()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;edit:
        idk why the code block has so much empty space&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9b7fyc/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9b7fyc", "created": 1575210011.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_f9dawq5", "id": "f9dawq5", "parent_id": "t1_f9b7fyc", "depth": 1, "children":
        ["f9dawq5"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9betko", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "mingjim",
        "can_mod_post": false, "created_utc": 1575212096.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_5fvvl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**F#**\n\n    let calculateFuel mass = mass / 3 - 2\n\n    let rec calculateTotalFuel
        mass =\n        match calculateFuel mass with\n            | m when m &lt;=
        0 -&gt; 0\n            | m -&gt; m + calculateTotalFuel m\n\n    let part1
        fileName = \n        fileName\n        |&gt; readLinesAs int\n        |&gt;
        Seq.sumBy calculateFuel\n\n    let part2 fileName =\n        fileName\n        |&gt;
        readLinesAs int\n        |&gt; Seq.sumBy calculateTotalFuel", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;F#&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        calculateFuel mass = mass / 3 - 2\n\nlet rec calculateTotalFuel mass =\n    match
        calculateFuel mass with\n        | m when m &amp;lt;= 0 -&amp;gt; 0\n        |
        m -&amp;gt; m + calculateTotalFuel m\n\nlet part1 fileName = \n    fileName\n    |&amp;gt;
        readLinesAs int\n    |&amp;gt; Seq.sumBy calculateFuel\n\nlet part2 fileName
        =\n    fileName\n    |&amp;gt; readLinesAs int\n    |&amp;gt; Seq.sumBy calculateTotalFuel\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9betko/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9betko", "created":
        1575212096.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9cixr6", "id": "f9cixr6", "parent_id":
        "t1_f9betko", "depth": 1, "children": ["f9cixr6"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9c68l7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "NeilNjae",
        "can_mod_post": false, "created_utc": 1575219644.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_6836y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Yet another Haskell solution. The guts of it are:\n\n    part1 :: [Int] -&gt;
        Int\n    part1 = sum . map fuelRequired\n    \n    part2 :: [Int] -&gt; Int\n    part2
        = sum . map fuelForFuel\n    \n    fuelRequired :: Int -&gt; Int\n    fuelRequired
        m = (m `div` 3) - 2\n    \n    fuelForFuel :: Int -&gt; Int\n    fuelForFuel
        = sum . takeWhile (&gt; 0) . drop 1 . iterate fuelRequired\n\nThe [full code
        is on Github](https://github.com/NeilNjae/advent-of-code-19/blob/master/advent01/src/advent01.hs)
        and I''ve written a [beginner-friendly explanation](https://work.njae.me.uk/2019/12/01/advent-of-code-2019-day-1/)
        on my blog.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yet
        another Haskell solution. The guts of it are:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part1
        :: [Int] -&amp;gt; Int\npart1 = sum . map fuelRequired\n\npart2 :: [Int] -&amp;gt;
        Int\npart2 = sum . map fuelForFuel\n\nfuelRequired :: Int -&amp;gt; Int\nfuelRequired
        m = (m `div` 3) - 2\n\nfuelForFuel :: Int -&amp;gt; Int\nfuelForFuel = sum
        . takeWhile (&amp;gt; 0) . drop 1 . iterate fuelRequired\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The
        &lt;a href=\"https://github.com/NeilNjae/advent-of-code-19/blob/master/advent01/src/advent01.hs\"&gt;full
        code is on Github&lt;/a&gt; and I&amp;#39;ve written a &lt;a href=\"https://work.njae.me.uk/2019/12/01/advent-of-code-2019-day-1/\"&gt;beginner-friendly
        explanation&lt;/a&gt; on my blog.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9c68l7/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9c68l7", "created": 1575219644.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 6, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9ccnpo", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "erlangguy", "can_mod_post": false, "created_utc":
        1575222004.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 6,
        "author_fullname": "t2_mpah5du", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "## Erlang (yes, I''m that
        predictable)\n\n    fuel(Mass) -&gt;\n        (Mass div 3) - 2.\n    \n    real_fuel(Mass)
        -&gt;\n        real_fuel(0, fuel(Mass)).\n    \n    real_fuel(Total, Next)
        when Next =&lt; 0 -&gt;\n        Total;\n    real_fuel(Total, Next) -&gt;\n        real_fuel(Total+Next,
        fuel(Next)).\n    \n    part2(Filename) -&gt;\n        lists:sum(lists:map(fun
        real_fuel/1, myio:all_integers(Filename))).", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h2&gt;Erlang (yes, I&amp;#39;m that predictable)&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;fuel(Mass)
        -&amp;gt;\n    (Mass div 3) - 2.\n\nreal_fuel(Mass) -&amp;gt;\n    real_fuel(0,
        fuel(Mass)).\n\nreal_fuel(Total, Next) when Next =&amp;lt; 0 -&amp;gt;\n    Total;\nreal_fuel(Total,
        Next) -&amp;gt;\n    real_fuel(Total+Next, fuel(Next)).\n\npart2(Filename)
        -&amp;gt;\n    lists:sum(lists:map(fun real_fuel/1, myio:all_integers(Filename))).\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ccnpo/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ccnpo", "created":
        1575222004.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9cqp9t", "id": "f9cqp9t", "parent_id":
        "t1_f9ccnpo", "depth": 1, "children": ["f9cqp9t"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dpg4s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "baloofy",
        "can_mod_post": false, "created_utc": 1575235657.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_54uyfhg9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Dyalog\n\nI''ve not used Dyalog before -- pretty sure my pt 2 is way worse
        than it needs to be.\n\n    a\u2190\u234e\u00a8\u2283\u2395NGET''01.txt''
        1\n    f\u2190{-\u22182\u230a\u2375\u00f73}\n    +/f a \u235d pt 1\n    +/+/\u00a81\u2193\u2218\u233d\u00a8{(f\u2283\u2375),\u2375}\u2363{\u2283\u237a&lt;9}\u00a8a
        \u235d pt 2\n\n# Haskell\n\n    {-# LANGUAGE NoImplicitPrelude #-}\n    import
        Control.Lens\n    import BasePrelude\n    \n    fuelStep n = n `div` 3 - 2
        :: Int\n    \n    pt1 = alaf Sum foldMap fuelStep\n    \n    pt2 = ala Sum
        foldMap . (unfoldr go =&lt;&lt;) where\n      go n = let nu = fuelStep n in
        guard (nu &gt;= 0) $&gt; (nu, nu)\n\n    main :: IO ()\n    main = do\n      mods
        &lt;- fmap read . lines &lt;$&gt; readFile \"./01.txt\"\n      print $ pt1
        mods\n      print $ pt2 mods", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Dyalog&lt;/h1&gt;\n\n&lt;p&gt;I&amp;#39;ve
        not used Dyalog before -- pretty sure my pt 2 is way worse than it needs to
        be.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a\u2190\u234e\u00a8\u2283\u2395NGET&amp;#39;01.txt&amp;#39;
        1\nf\u2190{-\u22182\u230a\u2375\u00f73}\n+/f a \u235d pt 1\n+/+/\u00a81\u2193\u2218\u233d\u00a8{(f\u2283\u2375),\u2375}\u2363{\u2283\u237a&amp;lt;9}\u00a8a
        \u235d pt 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Haskell&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;{-#
        LANGUAGE NoImplicitPrelude #-}\nimport Control.Lens\nimport BasePrelude\n\nfuelStep
        n = n `div` 3 - 2 :: Int\n\npt1 = alaf Sum foldMap fuelStep\n\npt2 = ala Sum
        foldMap . (unfoldr go =&amp;lt;&amp;lt;) where\n  go n = let nu = fuelStep
        n in guard (nu &amp;gt;= 0) $&amp;gt; (nu, nu)\n\nmain :: IO ()\nmain = do\n  mods
        &amp;lt;- fmap read . lines &amp;lt;$&amp;gt; readFile &amp;quot;./01.txt&amp;quot;\n  print
        $ pt1 mods\n  print $ pt2 mods\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dpg4s/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dpg4s", "created":
        1575235657.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9gbdm0", "id": "f9gbdm0", "parent_id":
        "t1_f9dpg4s", "depth": 1, "children": ["f9gbdm0"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9e4482", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        5, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9e4482", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e4482/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575239509.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575239509.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9tua5k", "id": "f9tua5k", "parent_id":
        "t1_f9e4482", "depth": 1, "children": ["f9tua5k"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575242184.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9e9pw0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        5, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "My solution in C. This is my first original, that is,
        not copied from a textbook, C program. It runs the \"complete\" calculation
        unless you provide the `-n` switch at the start of the program. I''ve had
        quite a lot of fun writing this program and I hope to get better while doing
        AoC. Good luck everyone!\n\n    #include &lt;math.h&gt;\n    #include &lt;stdio.h&gt;\n    #include
        &lt;stdlib.h&gt;\n    #include &lt;unistd.h&gt;\n    #include &lt;stdbool.h&gt;\n    \n    /*\n      Solution
        for Advent of Code Day #1 (https://adventofcode.com/2019/day/1)\n      \n      Reads
        numbers from stdin and returns the \"fuel\" needed to return the\n      spacecraft.
        Supports two fuel calculation methods: the complete and\n      the naive methods.\n    \n      Options:\n      *
        -n use the naive (part 1) fuel calculation formula\n      * -c use the complete
        fuel calculation formula (part 2).\n     */\n    \n    void usage()\n    {\n      printf(\"usage:
        %s [-nc] &lt; STDIN\\n\", getprogname());\n      exit(1);\n    }\n    \n    \n    long
        crunch_module_cost(size_t mass, short method)\n    {\n      long cost = floor(mass
        / 3) - 2;\n      if (method == 1)\n        return cost;\n    \n      if (cost
        &gt; 0)\n        return cost + crunch_module_cost(cost, method);\n      else\n        return
        0;\n    }\n    \n    \n    int main(int argc, char** argv)\n    {\n      size_t
        total_cost = 0;\n      size_t mass;\n      long cost;\n      short method
        = 2;\n      int c;\n    \n      while ((c = getopt(argc, argv, \"n::c::\"))
        != -1) {\n        switch (c) {\n        case ''n'': method = 1;\n          break;\n        case
        ''c'': method = 2;\n          break;\n        default: usage();\n        }\n      }\n    \n      while
        (true) {\n        if (scanf(\"%zu\", &amp;mass) == EOF)\n          break;\n    \n        cost
        = crunch_module_cost(mass, method);\n        total_cost += cost;\n      }\n    \n      printf(\"%zu\\n\",
        total_cost);\n      return 0;\n    }", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9e9pw0", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in C. This is my first original,
        that is, not copied from a textbook, C program. It runs the &amp;quot;complete&amp;quot;
        calculation unless you provide the &lt;code&gt;-n&lt;/code&gt; switch at the
        start of the program. I&amp;#39;ve had quite a lot of fun writing this program
        and I hope to get better while doing AoC. Good luck everyone!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;math.h&amp;gt;\n#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\n#include
        &amp;lt;unistd.h&amp;gt;\n#include &amp;lt;stdbool.h&amp;gt;\n\n/*\n  Solution
        for Advent of Code Day #1 (https://adventofcode.com/2019/day/1)\n\n  Reads
        numbers from stdin and returns the &amp;quot;fuel&amp;quot; needed to return
        the\n  spacecraft. Supports two fuel calculation methods: the complete and\n  the
        naive methods.\n\n  Options:\n  * -n use the naive (part 1) fuel calculation
        formula\n  * -c use the complete fuel calculation formula (part 2).\n */\n\nvoid
        usage()\n{\n  printf(&amp;quot;usage: %s [-nc] &amp;lt; STDIN\\n&amp;quot;,
        getprogname());\n  exit(1);\n}\n\n\nlong crunch_module_cost(size_t mass, short
        method)\n{\n  long cost = floor(mass / 3) - 2;\n  if (method == 1)\n    return
        cost;\n\n  if (cost &amp;gt; 0)\n    return cost + crunch_module_cost(cost,
        method);\n  else\n    return 0;\n}\n\n\nint main(int argc, char** argv)\n{\n  size_t
        total_cost = 0;\n  size_t mass;\n  long cost;\n  short method = 2;\n  int
        c;\n\n  while ((c = getopt(argc, argv, &amp;quot;n::c::&amp;quot;)) != -1)
        {\n    switch (c) {\n    case &amp;#39;n&amp;#39;: method = 1;\n      break;\n    case
        &amp;#39;c&amp;#39;: method = 2;\n      break;\n    default: usage();\n    }\n  }\n\n  while
        (true) {\n    if (scanf(&amp;quot;%zu&amp;quot;, &amp;amp;mass) == EOF)\n      break;\n\n    cost
        = crunch_module_cost(mass, method);\n    total_cost += cost;\n  }\n\n  printf(&amp;quot;%zu\\n&amp;quot;,
        total_cost);\n  return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e9pw0/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575241252.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575241252.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9ejbex", "id": "f9ejbex", "parent_id":
        "t1_f9e9pw0", "depth": 1, "children": ["f9ejbex"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9eekny",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Szczawik_",
        "can_mod_post": false, "created_utc": 1575243083.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_51nem71r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This is my first time participating in Advent of code so I decided to share
        my code written in C.\n\n [https://github.com/nNown/AdventOfCode/blob/Day1/Day1.c](https://github.com/nNown/AdventOfCode/blob/Day1/Day1.c)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is my first time
        participating in Advent of code so I decided to share my code written in C.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/nNown/AdventOfCode/blob/Day1/Day1.c\"&gt;https://github.com/nNown/AdventOfCode/blob/Day1/Day1.c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eekny/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9eekny", "created":
        1575243083.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9eirok", "id": "f9eirok", "parent_id":
        "t1_f9eekny", "depth": 1, "children": ["f9eirok"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575205084.0, "mod_reason_by": null,
        "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9am8ik", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "asinglelineofpython",
        "can_mod_post": false, "created_utc": 1575204117.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 10, "author_fullname": "t2_2brgao6s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "going for total 50 lines this year if possible\n\n\\#part 1.1\n\n`print(sum([int(x)
        // 3 - 2 for x in open(\"input.txt\").readlines()]))`\n\n&amp;#x200B;\n\n\\#part
        1.2\n\n`print(sum([(lambda a: lambda v:a(a,v))(lambda rec,x: 0 if x // 3 -
        2 &lt;= 0 else x // 3 - 2 + rec(rec, x // 3 - 2))(int(x)) for x in open(\"input.txt\").readlines()]))`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;going for total 50 lines
        this year if possible&lt;/p&gt;\n\n&lt;p&gt;#part 1.1&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(sum([int(x)
        // 3 - 2 for x in open(&amp;quot;input.txt&amp;quot;).readlines()]))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;#part
        1.2&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(sum([(lambda a: lambda v:a(a,v))(lambda
        rec,x: 0 if x // 3 - 2 &amp;lt;= 0 else x // 3 - 2 + rec(rec, x // 3 - 2))(int(x))
        for x in open(&amp;quot;input.txt&amp;quot;).readlines()]))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9am8ik/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9am8ik", "created":
        1575204117.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9cknv1", "id": "f9cknv1", "parent_id":
        "t1_f9am8ik", "depth": 1, "children": ["f9cknv1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575177673.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98e7ds", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "BluFoot",
        "can_mod_post": false, "created_utc": 1575177231.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_5edap", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby 24/148\n\n    f=-&gt;m{n=m/3-2;n&lt;0?0:n+f[n]}\n    p $&lt;.sum{|l|f[l.to_i]}",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby 24/148&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f=-&amp;gt;m{n=m/3-2;n&amp;lt;0?0:n+f[n]}\np
        $&amp;lt;.sum{|l|f[l.to_i]}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98e7ds/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98e7ds", "created": 1575177231.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_f98f6fz", "id": "f98f6fz", "parent_id": "t1_f98e7ds", "depth": 1, "children":
        ["f98f6fz"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1575178551.0,
        "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98el10", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Spookiel",
        "can_mod_post": false, "created_utc": 1575177368.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_1fdtypx8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 160/66\n\nMy first leaderboard! I thought I''d share my code, I''m
        still can''t really believe it! Part1 filled up so fast!\n\n\n\n    def run(data):\n        part2
        = 0\n        part1 = 0\n        lines = [int(i) for i in data.splitlines()]\n        for
        i in lines:\n            a = i//3\n            a -= 2\n            part1 +=
        a\n            while i &gt; 0:\n                i = i//3\n                i
        -= 2\n                if i &gt;= 0:\n                    part2 += i\n        print(\"Part1:\",
        part1)\n        print(\"Part2:\", part2)\n    run(data)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python 160/66&lt;/p&gt;\n\n&lt;p&gt;My first
        leaderboard! I thought I&amp;#39;d share my code, I&amp;#39;m still can&amp;#39;t
        really believe it! Part1 filled up so fast!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        run(data):\n    part2 = 0\n    part1 = 0\n    lines = [int(i) for i in data.splitlines()]\n    for
        i in lines:\n        a = i//3\n        a -= 2\n        part1 += a\n        while
        i &amp;gt; 0:\n            i = i//3\n            i -= 2\n            if i
        &amp;gt;= 0:\n                part2 += i\n    print(&amp;quot;Part1:&amp;quot;,
        part1)\n    print(&amp;quot;Part2:&amp;quot;, part2)\nrun(data)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98el10/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98el10", "created":
        1575177368.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98ex25",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "mcpower_",
        "can_mod_post": false, "created_utc": 1575177482.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_5go91", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust (no leaderboard). I haven''t written much Rust but this looks pretty
        idiomatic.\n\n    fn part1(inp: &amp;str) -&gt; String {\n        inp.lines()\n            .map(|s|
        s.parse::&lt;i64&gt;().unwrap())\n            .map(|i| (i/3) - 2)\n            .sum::&lt;i64&gt;()\n            .to_string()\n    }\n    \n    fn
        part2(inp: &amp;str) -&gt; String {\n        inp.lines()\n            .map(|s|
        s.parse::&lt;i64&gt;().unwrap())\n            .map(|i| {\n                let
        mut i = i;\n                let mut out = 0i64;\n                while i !=
        0 {\n                    i = ((i/3) - 2).max(0);\n                    out
        += i;\n                }\n                out\n            })\n            .sum::&lt;i64&gt;()\n            .to_string()\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust (no leaderboard).
        I haven&amp;#39;t written much Rust but this looks pretty idiomatic.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        part1(inp: &amp;amp;str) -&amp;gt; String {\n    inp.lines()\n        .map(|s|
        s.parse::&amp;lt;i64&amp;gt;().unwrap())\n        .map(|i| (i/3) - 2)\n        .sum::&amp;lt;i64&amp;gt;()\n        .to_string()\n}\n\nfn
        part2(inp: &amp;amp;str) -&amp;gt; String {\n    inp.lines()\n        .map(|s|
        s.parse::&amp;lt;i64&amp;gt;().unwrap())\n        .map(|i| {\n            let
        mut i = i;\n            let mut out = 0i64;\n            while i != 0 {\n                i
        = ((i/3) - 2).max(0);\n                out += i;\n            }\n            out\n        })\n        .sum::&amp;lt;i64&amp;gt;()\n        .to_string()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98ex25/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98ex25", "created":
        1575177482.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575180438.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98lmjm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ObliqueMotion",
        "can_mod_post": false, "created_utc": 1575179818.0, "send_replies": true,
        "parent_id": "t1_f98ex25", "score": 6, "author_fullname": "t2_2sm0aaqp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "If you''re new to Rust (though it seems you have a good grasp of iterators),
        you should check out [successors](https://doc.rust-lang.org/std/iter/fn.successors.html).
        \n\nIt''s pretty sweet for generating a sequence that terminates: \n\n    let
        part2 = INPUT\n        .lines()\n        .map(|input| {\n            successors(\n                input.parse::&lt;u64&gt;().ok().and_then(|mass|
        (mass / 3).checked_sub(2)),\n                |&amp;mass| (mass / 3).checked_sub(2),\n            )\n            .sum::&lt;u64&gt;()\n        })\n        .sum::&lt;u64&gt;();",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re new
        to Rust (though it seems you have a good grasp of iterators), you should check
        out &lt;a href=\"https://doc.rust-lang.org/std/iter/fn.successors.html\"&gt;successors&lt;/a&gt;.
        &lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s pretty sweet for generating a sequence
        that terminates: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let part2 = INPUT\n    .lines()\n    .map(|input|
        {\n        successors(\n            input.parse::&amp;lt;u64&amp;gt;().ok().and_then(|mass|
        (mass / 3).checked_sub(2)),\n            |&amp;amp;mass| (mass / 3).checked_sub(2),\n        )\n        .sum::&amp;lt;u64&amp;gt;()\n    })\n    .sum::&amp;lt;u64&amp;gt;();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98lmjm/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98lmjm", "created":
        1575179818.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9b0p6b", "id": "f9b0p6b", "parent_id":
        "t1_f98lmjm", "depth": 2, "children": ["f9b0p6b"]}}, {"kind": "more", "data":
        {"count": 6, "name": "t1_f98gt0n", "id": "f98gt0n", "parent_id": "t1_f98ex25",
        "depth": 1, "children": ["f98gt0n"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1575182717.0, "mod_reason_by": null, "banned_by": null, "ups":
        4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98fdqe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Conceptizual",
        "can_mod_post": false, "created_utc": 1575177636.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_f996y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    ''''''\n    Santa the Space Explorer\n\n    Revising the Naughty and
        Nice list\n    was difficult this year\n    as we decided to branch out\n    to
        include children who weren''t near\n\n    We packed up the things that they
        wanted:\n    Space goo, asteroid candy, moon shoes,\n    Because the children
        of space\n    want the same presents that earth-kids do.\n\n    We raced to
        the edge of the solar system\n    without making sure we''d have a way back,\n    but
        for next Christmas on Uranus (84 years!),\n    we''ll bring enough fuel to
        keep us on track.\n    ''''''\n\nI''ve never done Advent of Code before, I
        was pretty slow because I''ve not really dealt with input/output in Python.
        I got around 600-700s for both. My code was as follows:\n\n    items = (list
        of my inputs, comma separated)\n\n    result = 0\n    for item in items:\n        while
        (item &gt; 0):\n            item = item // 3\n            item = item - 2\n            if
        item &gt; 0:\n                result += item\n\n    print (result)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;&amp;#39;&amp;#39;&amp;#39;\nSanta
        the Space Explorer\n\nRevising the Naughty and Nice list\nwas difficult this
        year\nas we decided to branch out\nto include children who weren&amp;#39;t
        near\n\nWe packed up the things that they wanted:\nSpace goo, asteroid candy,
        moon shoes,\nBecause the children of space\nwant the same presents that earth-kids
        do.\n\nWe raced to the edge of the solar system\nwithout making sure we&amp;#39;d
        have a way back,\nbut for next Christmas on Uranus (84 years!),\nwe&amp;#39;ll
        bring enough fuel to keep us on track.\n&amp;#39;&amp;#39;&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve
        never done Advent of Code before, I was pretty slow because I&amp;#39;ve not
        really dealt with input/output in Python. I got around 600-700s for both.
        My code was as follows:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;items = (list
        of my inputs, comma separated)\n\nresult = 0\nfor item in items:\n    while
        (item &amp;gt; 0):\n        item = item // 3\n        item = item - 2\n        if
        item &amp;gt; 0:\n            result += item\n\nprint (result)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98fdqe/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98fdqe", "created":
        1575177636.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f98jv7n", "id": "f98jv7n", "parent_id":
        "t1_f98fdqe", "depth": 1, "children": ["f98jv7n"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98pqid",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "throwaway_the_fourth",
        "can_mod_post": false, "created_utc": 1575181298.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_h29vs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#[Lox](https://craftinginterpreters.com) with custom extensions\n\n    fun
        round_down(val) {\n        return val - (val % 1);\n    }\n    \n    fun fuel(module_mass)
        {\n        return round_down(module_mass / 3) - 2;\n    }\n    \n    fun solve(calc_fn)
        {\n        var total = 0;\n        var mass;\n        while ((mass = input())
        != nil) {\n            mass = num(mass);\n            total = total + calc_fn(mass);\n        }\n        print
        total;\n    }\n    \n    fun part1() {\n        solve(fuel);\n    }\n    \n    fun
        total_fuel(module_mass) {\n        var new_fuel = fuel(module_mass);\n        var
        total = new_fuel;\n        while ((new_fuel = fuel(new_fuel)) &gt; 0) {\n            total
        = total + new_fuel;\n        }\n        return total;\n    }\n    \n    fun
        part2() {\n        solve(total_fuel);\n    }\n    \n    part1();\n    part2();\n\nLox
        is a simple programming language implemented in the book [Crafting Interpreters](https://craftinginterpreters.com).
        To do this challenge, I had to implement some language extensions to read
        `stdin`, to add a modulus operator, and to convert a string to a number (though
        that would be possible in the language if the language supported accessing
        the individual characters of a string, which it does not (and that seemed
        harder to implement tonight)).\n\nLox doesn''t have data structures like arrays.
        I could make a linked list in Lox, but to implement arrays I''d have to modify
        the language itself (as I did three times already for day 1, so I''m not afraid
        of that). I suspect this will hurt me in the future, until I get around to
        implementing them.\n\nBecause of the difficulty of working with Lox, I did
        not aim to be competitive, and I certainly don''t expect to be competitive
        going forward.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://craftinginterpreters.com\"&gt;Lox&lt;/a&gt; with custom extensions&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;fun
        round_down(val) {\n    return val - (val % 1);\n}\n\nfun fuel(module_mass)
        {\n    return round_down(module_mass / 3) - 2;\n}\n\nfun solve(calc_fn) {\n    var
        total = 0;\n    var mass;\n    while ((mass = input()) != nil) {\n        mass
        = num(mass);\n        total = total + calc_fn(mass);\n    }\n    print total;\n}\n\nfun
        part1() {\n    solve(fuel);\n}\n\nfun total_fuel(module_mass) {\n    var new_fuel
        = fuel(module_mass);\n    var total = new_fuel;\n    while ((new_fuel = fuel(new_fuel))
        &amp;gt; 0) {\n        total = total + new_fuel;\n    }\n    return total;\n}\n\nfun
        part2() {\n    solve(total_fuel);\n}\n\npart1();\npart2();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Lox
        is a simple programming language implemented in the book &lt;a href=\"https://craftinginterpreters.com\"&gt;Crafting
        Interpreters&lt;/a&gt;. To do this challenge, I had to implement some language
        extensions to read &lt;code&gt;stdin&lt;/code&gt;, to add a modulus operator,
        and to convert a string to a number (though that would be possible in the
        language if the language supported accessing the individual characters of
        a string, which it does not (and that seemed harder to implement tonight)).&lt;/p&gt;\n\n&lt;p&gt;Lox
        doesn&amp;#39;t have data structures like arrays. I could make a linked list
        in Lox, but to implement arrays I&amp;#39;d have to modify the language itself
        (as I did three times already for day 1, so I&amp;#39;m not afraid of that).
        I suspect this will hurt me in the future, until I get around to implementing
        them.&lt;/p&gt;\n\n&lt;p&gt;Because of the difficulty of working with Lox,
        I did not aim to be competitive, and I certainly don&amp;#39;t expect to be
        competitive going forward.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98pqid/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98pqid", "created":
        1575181298.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575203377.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98xq0b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1575184310.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### [Dyalog APL (download here)](https://www.dyalog.com/download-zone.htm)\n\nPart
        1:\n\n    nums\u2190\u234e\u00a8\u2283\u2395NGET ''c:\\aoc\\1.txt'' 1\n    part1\u2190+/(\u230anums\u00f73)-2\n    part2\u2190{0&lt;\u2262Z\u2190X/\u23680&lt;X\u2190(2-\u2368\u230a3\u00f7\u2368\u2375):
        (\u2207Z)++/Z \u22c4 0} nums\n\n    \u235d Explanations:  \u235d \u2395NGET
        Loads lines from text file, returns content and some metadata.\n    \u235d
        \u234e\u00a8\u2283 evals each line, strings to numbers, skips the metadata.\n    \u235d
        +/ (plus-reduce, or sum) the \u230a (floor) of the calculation.\n    \n    \u235d
        Part 2; A recursive function which runs very roughly this:\n    \u235d { X
        = reduced numbers; Z=filtered positives from X; sum(Z) + (recursive-call Z)
        }\n    \u235d recursive end condition is when the count of positives remaining
        is down to 0\n    \u235d code left of the colon is calculated, if it''s a
        1 then code after colon executes and is returned, else 0", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h3&gt;&lt;a href=\"https://www.dyalog.com/download-zone.htm\"&gt;Dyalog
        APL (download here)&lt;/a&gt;&lt;/h3&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;nums\u2190\u234e\u00a8\u2283\u2395NGET
        &amp;#39;c:\\aoc\\1.txt&amp;#39; 1\npart1\u2190+/(\u230anums\u00f73)-2\npart2\u2190{0&amp;lt;\u2262Z\u2190X/\u23680&amp;lt;X\u2190(2-\u2368\u230a3\u00f7\u2368\u2375):
        (\u2207Z)++/Z \u22c4 0} nums\n\n\u235d Explanations:  \u235d \u2395NGET Loads
        lines from text file, returns content and some metadata.\n\u235d \u234e\u00a8\u2283
        evals each line, strings to numbers, skips the metadata.\n\u235d +/ (plus-reduce,
        or sum) the \u230a (floor) of the calculation.\n\n\u235d Part 2; A recursive
        function which runs very roughly this:\n\u235d { X = reduced numbers; Z=filtered
        positives from X; sum(Z) + (recursive-call Z) }\n\u235d recursive end condition
        is when the count of positives remaining is down to 0\n\u235d code left of
        the colon is calculated, if it&amp;#39;s a 1 then code after colon executes
        and is returned, else 0\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98xq0b/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98xq0b", "created": 1575184310.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 6, "name":
        "t1_f9ajzrx", "id": "f9ajzrx", "parent_id": "t1_f98xq0b", "depth": 1, "children":
        ["f9ajzrx", "f9jr05u", "f9jqz54"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 5,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98xud8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "PositivelyLinda",
        "can_mod_post": false, "created_utc": 1575184357.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_5pla7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Couldn''t resist a poem challenge, though I haven''t written any in forever:  \n\n\n&gt;Adventure
        awaits!  \n&gt;  \n&gt;Discover the cosmos  \n&gt;  \n&gt;Venture into the
        unknown  \n&gt;  \n&gt;Earn fifty stars to save Christmas!  \n&gt;  \n&gt;No
        one goes alone, however  \n&gt;  \n&gt;There''s friendly folks to help  \n&gt;  \n&gt;  \n&gt;  \n&gt;Overly
        dramatic situations await  \n&gt;  \n&gt;Find Santa and bring him home!  \n&gt;  \n&gt;  \n&gt;  \n&gt;Come
        code with us!  \n&gt;  \n&gt;Outer space is calling  \n&gt;  \n&gt;Don''t
        be afraid  \n&gt;  \n&gt;Elves will guide the way!\n\nAlso, my JavaScript
        solution - [Day1](https://github.com/lindakatcodes/adventOfCode-JavaScript/blob/master/2019%20Solutions/day01.js)
        \\- a bit verbose, but it helps me think better that way. :)\n\n(Also also
        - I love the stories that go along with each year. Can''t wait to see how
        the space travel unwinds!)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Couldn&amp;#39;t
        resist a poem challenge, though I haven&amp;#39;t written any in forever:  &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Adventure
        awaits!  &lt;/p&gt;\n\n&lt;p&gt;Discover the cosmos  &lt;/p&gt;\n\n&lt;p&gt;Venture
        into the unknown  &lt;/p&gt;\n\n&lt;p&gt;Earn fifty stars to save Christmas!  &lt;/p&gt;\n\n&lt;p&gt;No
        one goes alone, however  &lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s friendly folks
        to help  &lt;/p&gt;\n\n&lt;p&gt;Overly dramatic situations await  &lt;/p&gt;\n\n&lt;p&gt;Find
        Santa and bring him home!  &lt;/p&gt;\n\n&lt;p&gt;Come code with us!  &lt;/p&gt;\n\n&lt;p&gt;Outer
        space is calling  &lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t be afraid  &lt;/p&gt;\n\n&lt;p&gt;Elves
        will guide the way!&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Also, my JavaScript
        solution - &lt;a href=\"https://github.com/lindakatcodes/adventOfCode-JavaScript/blob/master/2019%20Solutions/day01.js\"&gt;Day1&lt;/a&gt;
        - a bit verbose, but it helps me think better that way. :)&lt;/p&gt;\n\n&lt;p&gt;(Also
        also - I love the stories that go along with each year. Can&amp;#39;t wait
        to see how the space travel unwinds!)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98xud8/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98xud8", "created": 1575184357.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_f9cudho", "id": "f9cudho", "parent_id": "t1_f98xud8", "depth": 1, "children":
        ["f9cudho"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99ktoc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "blacai",
        "can_mod_post": false, "created_utc": 1575192198.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_gnlzn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Cool to participate again this year. \n\n**F#**\n\n\topen System.IO\n\t\n\tlet
        filepath = __SOURCE_DIRECTORY__ + @\"../../day01_input.txt\"\n\tlet lines
        = File.ReadLines(filepath)\n\t\n\tlet rec getFuel (massInput:int) =\n\t\tmatch
        massInput with\n\t\t| greater when greater &gt; 5 -&gt; (massInput / 3 - 2)
        + getFuel ((massInput / 3 - 2))\n\t\t| _ -&gt; 0\n\t\n\tlet displayValue =\n\t\tlines\n\t\t\t|&gt;
        Seq.map (fun mass -&gt; getFuel(int mass))\n\t\t\t|&gt; Seq.sum", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Cool to participate again this year. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;F#&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;open
        System.IO\n\nlet filepath = __SOURCE_DIRECTORY__ + @&amp;quot;../../day01_input.txt&amp;quot;\nlet
        lines = File.ReadLines(filepath)\n\nlet rec getFuel (massInput:int) =\n    match
        massInput with\n    | greater when greater &amp;gt; 5 -&amp;gt; (massInput
        / 3 - 2) + getFuel ((massInput / 3 - 2))\n    | _ -&amp;gt; 0\n\nlet displayValue
        =\n    lines\n        |&amp;gt; Seq.map (fun mass -&amp;gt; getFuel(int mass))\n        |&amp;gt;
        Seq.sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99ktoc/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99ktoc", "created":
        1575192198.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_f9cpnfr", "id": "f9cpnfr", "parent_id":
        "t1_f99ktoc", "depth": 1, "children": ["f9cpnfr", "f99tr5l"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9aa89v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9aa89v", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9aa89v/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575200359.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575200359.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9dc2g8", "id": "f9dc2g8", "parent_id":
        "t1_f9aa89v", "depth": 1, "children": ["f9dc2g8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9ae79w",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ducdetronquito",
        "can_mod_post": false, "created_utc": 1575201532.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_17a09x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nim is fun :)\n\n    import math\n    import sequtils\n    import sugar\n\n    const
        modules_masses = [110756, 132543, 57911...]\n\n    proc get_fuel_requirement(mass:
        int): int =\n        if mass &lt;= 6:\n            return 0\n\n        let
        fuel_requirement = int(trunc(mass / 3)) - 2\n        return fuel_requirement
        + get_fuel_requirement(fuel_requirement)\n\n\n    const fuel_requirements
        = modules_masses.map(mass =&gt; get_fuel_requirement(mass))\n\n    echo \"Elves,
        the spacecraft requires \", fuel_requirements.sum(), \" units of fuel \ud83d\udd25\"",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nim is fun :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        math\nimport sequtils\nimport sugar\n\nconst modules_masses = [110756, 132543,
        57911...]\n\nproc get_fuel_requirement(mass: int): int =\n    if mass &amp;lt;=
        6:\n        return 0\n\n    let fuel_requirement = int(trunc(mass / 3)) -
        2\n    return fuel_requirement + get_fuel_requirement(fuel_requirement)\n\n\nconst
        fuel_requirements = modules_masses.map(mass =&amp;gt; get_fuel_requirement(mass))\n\necho
        &amp;quot;Elves, the spacecraft requires &amp;quot;, fuel_requirements.sum(),
        &amp;quot; units of fuel \ud83d\udd25&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ae79w/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ae79w", "created":
        1575201532.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9bdusa", "id": "f9bdusa", "parent_id":
        "t1_f9ae79w", "depth": 1, "children": ["f9bdusa"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575219451.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9bbw39", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "vypxl",
        "can_mod_post": false, "created_utc": 1575211156.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_2pbhezcb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Finally, an excuse to use **Haskell** again!\nNo leaderboard and no iterate!\n\n    fuel
        :: Int -&gt; Int\n    fuel = (+ (-2)) . (`div` 3)\n\n    fuelX :: Int -&gt;
        Int\n    fuelX = (\\m -&gt; if m &lt;= 0 then 0 else m + fuelX m) . fuel\n\n    main
        :: IO()\n    main = do\n        f &lt;- readFile(\"1.in\")\n        let input
        = map read $ lines f\n\n        putStrLn \"Solution for part 1:\"\n        print
        $ sum $ map fuel input\n        putStrLn \"Solution for part 2:\"\n        print
        $ sum $ map fuelX input\n\nPoem:\nLearned a Haskell for great good,\n\nput
        it to use for great fun,\n\nread over the last sentence like some,\n\ntried
        to solve it as cool as I could.\n\n\n\nAlso, happy cake day to me!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Finally, an excuse to use &lt;strong&gt;Haskell&lt;/strong&gt;
        again!\nNo leaderboard and no iterate!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fuel
        :: Int -&amp;gt; Int\nfuel = (+ (-2)) . (`div` 3)\n\nfuelX :: Int -&amp;gt;
        Int\nfuelX = (\\m -&amp;gt; if m &amp;lt;= 0 then 0 else m + fuelX m) . fuel\n\nmain
        :: IO()\nmain = do\n    f &amp;lt;- readFile(&amp;quot;1.in&amp;quot;)\n    let
        input = map read $ lines f\n\n    putStrLn &amp;quot;Solution for part 1:&amp;quot;\n    print
        $ sum $ map fuel input\n    putStrLn &amp;quot;Solution for part 2:&amp;quot;\n    print
        $ sum $ map fuelX input\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Poem:\nLearned
        a Haskell for great good,&lt;/p&gt;\n\n&lt;p&gt;put it to use for great fun,&lt;/p&gt;\n\n&lt;p&gt;read
        over the last sentence like some,&lt;/p&gt;\n\n&lt;p&gt;tried to solve it
        as cool as I could.&lt;/p&gt;\n\n&lt;p&gt;Also, happy cake day to me!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bbw39/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bbw39", "created":
        1575211156.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_f9c3pyy", "id": "f9c3pyy", "parent_id":
        "t1_f9bbw39", "depth": 1, "children": ["f9c3pyy"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1599147475.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9bvb7k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jitwit",
        "can_mod_post": false, "created_utc": 1575216644.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_3widzzz1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**J programming language**\n\nIf I''m doing anything stupid or there''s a
        better way to write things, please let me know!\n\n    ({.;+/) +/\"1 }. (0
        &gt;. &lt;.@%&amp;3-2:)^:a: \".;._2 aoc 2019 1\n\nCalculate fuel by `&lt;.@%&amp;3
        - 2:`, floor of division by 3 minus 2. Clamp that with 0. This verb operates
        on the whole row of gases, and we reach fixpoint through `^: a:`", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;J programming language&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If
        I&amp;#39;m doing anything stupid or there&amp;#39;s a better way to write
        things, please let me know!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;({.;+/) +/&amp;quot;1
        }. (0 &amp;gt;. &amp;lt;.@%&amp;amp;3-2:)^:a: &amp;quot;.;._2 aoc 2019 1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Calculate
        fuel by &lt;code&gt;&amp;lt;.@%&amp;amp;3 - 2:&lt;/code&gt;, floor of division
        by 3 minus 2. Clamp that with 0. This verb operates on the whole row of gases,
        and we reach fixpoint through &lt;code&gt;^: a:&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bvb7k/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bvb7k", "created":
        1575216644.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_f9d0xa3", "id": "f9d0xa3", "parent_id":
        "t1_f9bvb7k", "depth": 1, "children": ["f9d0xa3", "f9dgylo", "f9dcnk3"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1575223498.0,
        "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9bwkd1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "donatasp",
        "can_mod_post": false, "created_utc": 1575217001.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_49piy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Common Lisp\n\n    (defparameter *input*\n      (with-input-from-string (in
        (rutils:slurp \"day01.txt\"))\n        (loop :for mass := (read in nil) :while
        mass :collect mass)))\n    \n    (defun fuel-requirement (mass)\n      (-
        (floor (/ mass 3)) 2))\n    \n    ;; What is the sum of the fuel requirements
        for all of the modules on your\n    ;; spacecraft?\n    (loop :for mass :in
        *input* :sum (fuel-requirement mass)) ; =&gt; 3297866 (22 bits, #x32524A)\n    \n    (defun
        fixed-fuel-requirement (mass)\n      (loop :for fuel := (fuel-requirement
        mass) :then (fuel-requirement fuel)\n            :while (plusp fuel)\n            :sum
        fuel))\n    \n    ;; What is the sum of the fuel requirements for all of the
        modules on your\n    ;; spacecraft when also taking into account the mass
        of the added fuel?\n    ;; (Calculate the fuel requirements for each module
        separately, then add them\n    ;; all up at the end.)\n    (loop :for mass
        :in *input* :sum (fixed-fuel-requirement mass)) ; =&gt; 4943923 (23 bits,
        #x4B7033)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Common
        Lisp&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defparameter *input*\n  (with-input-from-string
        (in (rutils:slurp &amp;quot;day01.txt&amp;quot;))\n    (loop :for mass :=
        (read in nil) :while mass :collect mass)))\n\n(defun fuel-requirement (mass)\n  (-
        (floor (/ mass 3)) 2))\n\n;; What is the sum of the fuel requirements for
        all of the modules on your\n;; spacecraft?\n(loop :for mass :in *input* :sum
        (fuel-requirement mass)) ; =&amp;gt; 3297866 (22 bits, #x32524A)\n\n(defun
        fixed-fuel-requirement (mass)\n  (loop :for fuel := (fuel-requirement mass)
        :then (fuel-requirement fuel)\n        :while (plusp fuel)\n        :sum fuel))\n\n;;
        What is the sum of the fuel requirements for all of the modules on your\n;;
        spacecraft when also taking into account the mass of the added fuel?\n;; (Calculate
        the fuel requirements for each module separately, then add them\n;; all up
        at the end.)\n(loop :for mass :in *input* :sum (fixed-fuel-requirement mass))
        ; =&amp;gt; 4943923 (23 bits, #x4B7033)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bwkd1/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bwkd1", "created":
        1575217001.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9c9fyy", "id": "f9c9fyy", "parent_id":
        "t1_f9bwkd1", "depth": 1, "children": ["f9c9fyy"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cci8a",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Dioxy",
        "can_mod_post": false, "created_utc": 1575221934.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_67mfr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**JavaScript**\n\nJS, pretty easy, I like my solution, using map, reduce,
        and recursion\n\n[This is the code](https://imgur.com/nm2Zxwn)\n\nMy repo:  [https://github.com/kufii/Advent-Of-Code-2019-Solutions/blob/master/src/solutions/01/index.js](https://github.com/kufii/Advent-Of-Code-2019-Solutions/blob/master/src/solutions/01/index.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;JS,
        pretty easy, I like my solution, using map, reduce, and recursion&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://imgur.com/nm2Zxwn\"&gt;This is the code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        repo:  &lt;a href=\"https://github.com/kufii/Advent-Of-Code-2019-Solutions/blob/master/src/solutions/01/index.js\"&gt;https://github.com/kufii/Advent-Of-Code-2019-Solutions/blob/master/src/solutions/01/index.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cci8a/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cci8a", "created":
        1575221934.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9d2qxa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bassta",
        "can_mod_post": false, "created_utc": 1575229591.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_nr132", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here is in Google SpreadSheets + GScript\n\n[https://docs.google.com/spreadsheets/d/1xKHlf6ey\\_XgiZ2RS3wEVm-cGq8casFa-xm9K8KaLTGA/edit?usp=sharing](https://docs.google.com/spreadsheets/d/1xKHlf6ey_XgiZ2RS3wEVm-cGq8casFa-xm9K8KaLTGA/edit?usp=sharing)\n\nI
        really don''t know who am I anymore", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Here is in Google SpreadSheets + GScript&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://docs.google.com/spreadsheets/d/1xKHlf6ey_XgiZ2RS3wEVm-cGq8casFa-xm9K8KaLTGA/edit?usp=sharing\"&gt;https://docs.google.com/spreadsheets/d/1xKHlf6ey_XgiZ2RS3wEVm-cGq8casFa-xm9K8KaLTGA/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        really don&amp;#39;t know who am I anymore&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9d2qxa/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9d2qxa", "created": 1575229591.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_f9devqs", "id": "f9devqs", "parent_id": "t1_f9d2qxa", "depth": 1, "children":
        ["f9devqs"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1575240373.0,
        "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9dmskw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "tomflumery",
        "can_mod_post": false, "created_utc": 1575234974.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 5, "author_fullname": "t2_1n1f8ga0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**J language**, not golfed\n\n    #!/usr/local/bin/j\n    d=. \".&amp;&gt;cutLF
        CR-.~fread''input.txt''\n    fuel=: 3 : ''0&gt;._2+&lt;.%&amp;3 y''\n    rec_fuel=:
        3 : ''0:`(]+$:@fuel)@.*fuel y''\n    echo +/fuel d\n    echo +/rec_fuel d\n    exit
        ''''", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;J
        language&lt;/strong&gt;, not golfed&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/local/bin/j\nd=.
        &amp;quot;.&amp;amp;&amp;gt;cutLF CR-.~fread&amp;#39;input.txt&amp;#39;\nfuel=:
        3 : &amp;#39;0&amp;gt;._2+&amp;lt;.%&amp;amp;3 y&amp;#39;\nrec_fuel=: 3 :
        &amp;#39;0:`(]+$:@fuel)@.*fuel y&amp;#39;\necho +/fuel d\necho +/rec_fuel
        d\nexit &amp;#39;&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dmskw/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9dmskw", "created": 1575234974.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_f9ef3f3", "id": "f9ef3f3", "parent_id": "t1_f9dmskw", "depth": 1, "children":
        ["f9ef3f3", "f9h9sw9"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9dtlzm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "iwane", "can_mod_post": false, "created_utc":
        1575236733.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 5,
        "author_fullname": "t2_bn49m", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "LabVIEW 2018. \n\nMight
        be unpopular here, but I''m currently trying to learn it properly :-)\n\n[https://github.com/iwane-pl/aoc\\_2019/blob/master/Day%201/solution\\_snippet.png](https://github.com/iwane-pl/aoc_2019/blob/master/Day%201/solution_snippet.png)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;LabVIEW 2018. &lt;/p&gt;\n\n&lt;p&gt;Might
        be unpopular here, but I&amp;#39;m currently trying to learn it properly :-)&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/iwane-pl/aoc_2019/blob/master/Day%201/solution_snippet.png\"&gt;https://github.com/iwane-pl/aoc_2019/blob/master/Day%201/solution_snippet.png&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dtlzm/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dtlzm", "created":
        1575236733.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dyd7m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thefloatgoat",
        "can_mod_post": false, "created_utc": 1575237996.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_ijb99", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Dyalog APL\n\nAs someone who has never written APL before it was an uphill
        battle, [but I got there in the end.](https://rickdejager.github.io/AdventOfCode2019/1/1.html)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dyalog APL&lt;/p&gt;\n\n&lt;p&gt;As
        someone who has never written APL before it was an uphill battle, &lt;a href=\"https://rickdejager.github.io/AdventOfCode2019/1/1.html\"&gt;but
        I got there in the end.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dyd7m/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9dyd7m", "created": 1575237996.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_f9ezrjd", "id": "f9ezrjd", "parent_id": "t1_f9dyd7m", "depth": 1, "children":
        ["f9ezrjd"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9dzmu8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "NJCoding",
        "can_mod_post": false, "created_utc": 1575238296.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_54mnfn54", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''ve only just started learning JavaScript while following an Udemy course.
        Not as efficient as other answers but proud of at least finishing day 1.\n\n    var
        sum = 0;\n    var requirements = [];\n    \n    function fuelrequirement(mass)
        {\n        var totalfuel = 0;\n        while(mass &gt; 0){\n            mass
        = Math.floor(mass / 3);\n            mass -= 2;\n            if(mass &gt;
        0){\n                totalfuel += mass;\n            }\n        }\n    return
        totalfuel;    \n    }\n    \n    list.forEach(function(number){\n        requirements.push(fuelrequirement(number));\n    })\n    \n    for(i
        = 0; i &lt; requirements.length; i++){\n        sum = sum + requirements[i];\n    }\n    \n    console.log(sum);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve only just
        started learning JavaScript while following an Udemy course. Not as efficient
        as other answers but proud of at least finishing day 1.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        sum = 0;\nvar requirements = [];\n\nfunction fuelrequirement(mass) {\n    var
        totalfuel = 0;\n    while(mass &amp;gt; 0){\n        mass = Math.floor(mass
        / 3);\n        mass -= 2;\n        if(mass &amp;gt; 0){\n            totalfuel
        += mass;\n        }\n    }\nreturn totalfuel;    \n}\n\nlist.forEach(function(number){\n    requirements.push(fuelrequirement(number));\n})\n\nfor(i
        = 0; i &amp;lt; requirements.length; i++){\n    sum = sum + requirements[i];\n}\n\nconsole.log(sum);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dzmu8/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dzmu8", "created":
        1575238296.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9e01nf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1575238441.0, "send_replies": true,
        "parent_id": "t1_f9dzmu8", "score": 5, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; I''ve only just started learning JavaScript while following an Udemy
        course. Not as efficient as other answers but proud of at least finishing
        day 1.\n\nWe welcome all skill levels, and congratulations to you for completing
        Day 1!  We''re a pretty friendly and helpful community, so if you get stuck
        further down the line, don''t hesitate to ask in the subreddit :)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I&amp;#39;ve only just
        started learning JavaScript while following an Udemy course. Not as efficient
        as other answers but proud of at least finishing day 1.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;We
        welcome all skill levels, and congratulations to you for completing Day 1!  We&amp;#39;re
        a pretty friendly and helpful community, so if you get stuck further down
        the line, don&amp;#39;t hesitate to ask in the subreddit :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e01nf/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e01nf", "created":
        1575238441.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 1, "name": "t1_f9exh14", "id": "f9exh14",
        "parent_id": "t1_f9dzmu8", "depth": 1, "children": ["f9exh14"]}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575244035.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9efrvr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "oblivioncntrlsu",
        "can_mod_post": false, "created_utc": 1575243559.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 4, "author_fullname": "t2_q5nm6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3 - \n\n[My code](https://github.com/saltyjohn/advent-2019/blob/master/day_01_answers.py)
        is longer than five lines, so I''ll post a poem instead:\n\n&amp;#x200B;\n\n&gt;He
        rode on a sleigh  \n&gt;  \n&gt;through the vacuum of space,  \n&gt;  \n&gt;Without
        any delay,  \n&gt;  \n&gt;and a grin on his face.  \n&gt;  \n&gt;For recursive
        mathematics  \n&gt;  \n&gt;would be his saving grace,  \n&gt;  \n&gt;He prepared
        to bring Christmas  \n&gt;  \n&gt;to the human race.\n\nedit: formatting",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3 - &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/saltyjohn/advent-2019/blob/master/day_01_answers.py\"&gt;My
        code&lt;/a&gt; is longer than five lines, so I&amp;#39;ll post a poem instead:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;He
        rode on a sleigh  &lt;/p&gt;\n\n&lt;p&gt;through the vacuum of space,  &lt;/p&gt;\n\n&lt;p&gt;Without
        any delay,  &lt;/p&gt;\n\n&lt;p&gt;and a grin on his face.  &lt;/p&gt;\n\n&lt;p&gt;For
        recursive mathematics  &lt;/p&gt;\n\n&lt;p&gt;would be his saving grace,  &lt;/p&gt;\n\n&lt;p&gt;He
        prepared to bring Christmas  &lt;/p&gt;\n\n&lt;p&gt;to the human race.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;edit:
        formatting&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9efrvr/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9efrvr", "created":
        1575243559.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575178181.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98e1ku", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ChrisVittal",
        "can_mod_post": false, "created_utc": 1575177173.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_3morv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust, I am slow ~800ish/~600ish, also still away for thanksgiving, I fly
        home tomorrow, sky willing.\n\nPoem:\n\n    There was a program in Chicago\n    That
        was definitely kinder than Pizarro\n    It worked so hard\n    To save fuel
        for the stars\n    So we all could get home tomorrow\n\nCode: (mods, is this
        too long?)\n\n    fn parse(s: String) -&gt; Vec&lt;u64&gt; {\n        s.lines().map(|l|
        l.parse::&lt;u64&gt;().unwrap()).collect()\n    }\n\n    fn main() -&gt; aoc2019::Result&lt;()&gt;
        {\n        let s = aoc2019::chomp_to_str()?;\n        let i = parse(s);\n\n        let
        x: u64 = i.iter().map(|&amp;x| (x / 3).saturating_sub(2)).sum();\n\n        println!(\"1:
        {}\", x);\n\n        let y: u64 = i.into_iter().map(|mut y| {\n             let
        mut z = 0;\n             while y &gt; 0 {\n                 y = (y / 3).saturating_sub(2);\n                 z
        += if y &gt; 0 { y } else { 0 };\n             }\n             z\n         }).sum();\n\n         println!(\"2:
        {}\", y);\n\n        Ok(())\n     }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rust, I am slow ~800ish/~600ish, also still away
        for thanksgiving, I fly home tomorrow, sky willing.&lt;/p&gt;\n\n&lt;p&gt;Poem:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;There
        was a program in Chicago\nThat was definitely kinder than Pizarro\nIt worked
        so hard\nTo save fuel for the stars\nSo we all could get home tomorrow\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Code:
        (mods, is this too long?)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn parse(s:
        String) -&amp;gt; Vec&amp;lt;u64&amp;gt; {\n    s.lines().map(|l| l.parse::&amp;lt;u64&amp;gt;().unwrap()).collect()\n}\n\nfn
        main() -&amp;gt; aoc2019::Result&amp;lt;()&amp;gt; {\n    let s = aoc2019::chomp_to_str()?;\n    let
        i = parse(s);\n\n    let x: u64 = i.iter().map(|&amp;amp;x| (x / 3).saturating_sub(2)).sum();\n\n    println!(&amp;quot;1:
        {}&amp;quot;, x);\n\n    let y: u64 = i.into_iter().map(|mut y| {\n         let
        mut z = 0;\n         while y &amp;gt; 0 {\n             y = (y / 3).saturating_sub(2);\n             z
        += if y &amp;gt; 0 { y } else { 0 };\n         }\n         z\n     }).sum();\n\n     println!(&amp;quot;2:
        {}&amp;quot;, y);\n\n    Ok(())\n }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98e1ku/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98e1ku", "created":
        1575177173.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_f99un92", "id": "f99un92", "parent_id":
        "t1_f98e1ku", "depth": 1, "children": ["f99un92", "f9cyh4z"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575179401.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98f3jg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**Clojure,**  too slow for the leaderboard :(\n\n    (defn
        fuel-cost [x]\n      (- (quot x 3) 2))\n    \n    (defn fuel-cost-rec [x]\n      (let
        [n (fuel-cost x)]\n        (if (&lt;= n 0) 0 (+ n (fuel-cost-rec n)))))\n    \n    (defn
        solution []\n      (println (format \"Part 1: %d\" (reduce + (map fuel-cost
        input))))\n      (println (format \"Part 1: %d\" (reduce + (map fuel-cost-rec
        input)))))", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_f98f3jg", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Clojure,&lt;/strong&gt;  too slow for
        the leaderboard :(&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn fuel-cost [x]\n  (-
        (quot x 3) 2))\n\n(defn fuel-cost-rec [x]\n  (let [n (fuel-cost x)]\n    (if
        (&amp;lt;= n 0) 0 (+ n (fuel-cost-rec n)))))\n\n(defn solution []\n  (println
        (format &amp;quot;Part 1: %d&amp;quot; (reduce + (map fuel-cost input))))\n  (println
        (format &amp;quot;Part 1: %d&amp;quot; (reduce + (map fuel-cost-rec input)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98f3jg/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575177541.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575177541.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9am7kd", "id": "f9am7kd", "parent_id":
        "t1_f98f3jg", "depth": 1, "children": ["f9am7kd"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98feti", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f98feti", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98feti/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575177647.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575177647.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9cwtwf", "id": "f9cwtwf", "parent_id":
        "t1_f98feti", "depth": 1, "children": ["f9cwtwf"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575181751.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98fkf4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AlexAegis",
        "can_mod_post": false, "created_utc": 1575177701.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_gevlz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[TypeScript](https://github.com/AlexAegis/advent-of-code/blob/master/src/2019/day01/typescript/part_two.ts)\n\nPoem:\n\nRoses
        are red\n\nViolets are blue\n\nBy the time I finished\n\nThe leaderboard was
        full\n\nPart One\n\n    // 0.27ms\n    export const runner = (input: string)
        =&gt;\n    \tinput\n    \t\t.split(/\\r?\\n/)\n    \t\t.map(n =&gt; Math.floor(Number(n)
        / 3) - 2)\n    \t\t.reduce((s, n) =&gt; s + n, 0);\n\nPart Two\n    \n    //
        0.36ms\n    export const runner = (input: string) =&gt;\n    \tinput\n    \t\t.split(/\\r?\\n/)\n    \t\t.map(n
        =&gt; fuel(Number(n)))\n    \t\t.reduce((s, n) =&gt; s + n, 0);\n\n    const
        fuel = (i: number): number =&gt; {\n    \tconst f = Math.max(Math.floor(i
        / 3) - 2, 0);\n    \treturn f + (f &gt; 0 ? fuel(f) : 0);\n    };", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/AlexAegis/advent-of-code/blob/master/src/2019/day01/typescript/part_two.ts\"&gt;TypeScript&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Poem:&lt;/p&gt;\n\n&lt;p&gt;Roses
        are red&lt;/p&gt;\n\n&lt;p&gt;Violets are blue&lt;/p&gt;\n\n&lt;p&gt;By the
        time I finished&lt;/p&gt;\n\n&lt;p&gt;The leaderboard was full&lt;/p&gt;\n\n&lt;p&gt;Part
        One&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// 0.27ms\nexport const runner = (input:
        string) =&amp;gt;\n    input\n        .split(/\\r?\\n/)\n        .map(n =&amp;gt;
        Math.floor(Number(n) / 3) - 2)\n        .reduce((s, n) =&amp;gt; s + n, 0);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        Two&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// 0.36ms\nexport const runner = (input:
        string) =&amp;gt;\n    input\n        .split(/\\r?\\n/)\n        .map(n =&amp;gt;
        fuel(Number(n)))\n        .reduce((s, n) =&amp;gt; s + n, 0);\n\nconst fuel
        = (i: number): number =&amp;gt; {\n    const f = Math.max(Math.floor(i / 3)
        - 2, 0);\n    return f + (f &amp;gt; 0 ? fuel(f) : 0);\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98fkf4/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98fkf4", "created":
        1575177701.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9aqp9t", "id": "f9aqp9t", "parent_id":
        "t1_f98fkf4", "depth": 1, "children": ["f9aqp9t"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98gm0s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rabuf",
        "can_mod_post": false, "created_utc": 1575178059.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_38xc9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Saving myself some time, I''ll post a link to my org file containing my Common
        Lisp solutions: [Day 1](https://github.com/rabuf/advent-of-code/blob/master/2019/2019.01.org).\n\nStraightforward
        with one loop (summing fuel calculations) and one recursive function (for
        recursively computing fuel needs). The critical functions are these:\n\n    (defun
        calc-fuel (mass)\n      (- (floor (/ mass 3)) 2))\n    (defun recursive-fuel
        (mass)\n      (let ((fuel (calc-fuel mass)))\n        (if (&lt;= fuel 0) 0\n            (+
        fuel (recursive-fuel fuel)))))", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Saving myself some time, I&amp;#39;ll post a link
        to my org file containing my Common Lisp solutions: &lt;a href=\"https://github.com/rabuf/advent-of-code/blob/master/2019/2019.01.org\"&gt;Day
        1&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Straightforward with one loop (summing
        fuel calculations) and one recursive function (for recursively computing fuel
        needs). The critical functions are these:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        calc-fuel (mass)\n  (- (floor (/ mass 3)) 2))\n(defun recursive-fuel (mass)\n  (let
        ((fuel (calc-fuel mass)))\n    (if (&amp;lt;= fuel 0) 0\n        (+ fuel (recursive-fuel
        fuel)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98gm0s/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98gm0s", "created":
        1575178059.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9bjo92", "id": "f9bjo92", "parent_id":
        "t1_f98gm0s", "depth": 1, "children": ["f9bjo92"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98io7f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AndrewGreenh",
        "can_mod_post": false, "created_utc": 1575178777.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_i67fc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "So stoked that AOC is back again!\n\nTypeScript 69/51\n\n    const input
        = getInput(1, 2019);\n    const lines = iterable(() =&gt; stringToLines(input));\n    \n    let
        baseCalc = (n: number) =&gt; Math.floor(n / 3) - 2;\n    let recursive = (n:
        number): number =&gt;\n      baseCalc(n) &lt; 0 ? 0 : baseCalc(n) + recursive(baseCalc(n));\n    \n    let
        solve = (calc: typeof baseCalc) =&gt; pipe(lines)(map(Number), map(calc),
        sum);\n    \n    console.log(solve(baseCalc));\n    console.log(solve(recursive));",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So stoked that AOC is
        back again!&lt;/p&gt;\n\n&lt;p&gt;TypeScript 69/51&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        input = getInput(1, 2019);\nconst lines = iterable(() =&amp;gt; stringToLines(input));\n\nlet
        baseCalc = (n: number) =&amp;gt; Math.floor(n / 3) - 2;\nlet recursive = (n:
        number): number =&amp;gt;\n  baseCalc(n) &amp;lt; 0 ? 0 : baseCalc(n) + recursive(baseCalc(n));\n\nlet
        solve = (calc: typeof baseCalc) =&amp;gt; pipe(lines)(map(Number), map(calc),
        sum);\n\nconsole.log(solve(baseCalc));\nconsole.log(solve(recursive));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98io7f/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98io7f", "created":
        1575178777.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9cva3x", "id": "f9cva3x", "parent_id":
        "t1_f98io7f", "depth": 1, "children": ["f9cva3x"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98j2lo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "PendragonDaGreat",
        "can_mod_post": false, "created_utc": 1575178916.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_7nqwk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "PowerShell, both halves, assuming a text file at `$inputPath`:\n\n    $data
        = Get-Content $inputPath\n    \n    $timer = New-Object System.Diagnostics.Stopwatch\n    $timer.Start()\n    \n    $sum
        = 0\n    $sum2 = 0\n    \n    foreach($i in $data)\n    {\n        $i = [int]$i
        #Needs cast for part 2\n    \n        $i = [Math]::Floor($i/3) #Powershell
        is a silly language and actually rounds when doing integer division instead
        of truncating like everyone else. \n        $i -= 2 \n        $sum += $i\n        $sum2
        += $i\n    \n        while($i -ge 9) #Smallest weight that needs more fuel
        is 9\n        {\n            $i = [Math]::Floor($i/3)\n            $i -= 2
        \n            $sum2 += $i\n        }\n    }\n    Write-Host \"Part 1: $sum\"\n    Write-Host
        \"Part 2: $sum2\"\n    \n    $timer.Stop()\n    Write-Host $timer.Elapsed\n\nOutput:\n\n    Part
        1: [REDACTED]\n    Part 2: [REDACTED]\n    00:00:00.0144789\n\n\nTIL PowerShell
        uses Banker''s Rounding by default.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;PowerShell, both halves, assuming a text file at
        &lt;code&gt;$inputPath&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$data
        = Get-Content $inputPath\n\n$timer = New-Object System.Diagnostics.Stopwatch\n$timer.Start()\n\n$sum
        = 0\n$sum2 = 0\n\nforeach($i in $data)\n{\n    $i = [int]$i #Needs cast for
        part 2\n\n    $i = [Math]::Floor($i/3) #Powershell is a silly language and
        actually rounds when doing integer division instead of truncating like everyone
        else. \n    $i -= 2 \n    $sum += $i\n    $sum2 += $i\n\n    while($i -ge
        9) #Smallest weight that needs more fuel is 9\n    {\n        $i = [Math]::Floor($i/3)\n        $i
        -= 2 \n        $sum2 += $i\n    }\n}\nWrite-Host &amp;quot;Part 1: $sum&amp;quot;\nWrite-Host
        &amp;quot;Part 2: $sum2&amp;quot;\n\n$timer.Stop()\nWrite-Host $timer.Elapsed\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Part
        1: [REDACTED]\nPart 2: [REDACTED]\n00:00:00.0144789\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;TIL
        PowerShell uses Banker&amp;#39;s Rounding by default.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98j2lo/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98j2lo", "created":
        1575178916.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9e6mn1", "id": "f9e6mn1", "parent_id":
        "t1_f98j2lo", "depth": 1, "children": ["f9e6mn1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575184432.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98korp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "DiscoViking",
        "can_mod_post": false, "created_utc": 1575179483.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_4ugzi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Elm - no leaderboard\n\nMy solution is up in interactive form here: [https://2019.adventofcode.norris.dev/day1](https://2019.adventofcode.norris.dev/day1)\n\nSource:
        [https://github.com/rynorris/adventofcode/blob/master/2019/src/Day1.elm](https://github.com/rynorris/adventofcode/blob/master/2019/src/Day1.elm)\n\nMy
        code is pretty long due to the fact that I''m implementing each solution as
        a state machine so that I''m able to have longer-running solutions without
        blocking page rendering (obviously not relevant here, but will come up later).  So
        not posting it here.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elm
        - no leaderboard&lt;/p&gt;\n\n&lt;p&gt;My solution is up in interactive form
        here: &lt;a href=\"https://2019.adventofcode.norris.dev/day1\"&gt;https://2019.adventofcode.norris.dev/day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Source:
        &lt;a href=\"https://github.com/rynorris/adventofcode/blob/master/2019/src/Day1.elm\"&gt;https://github.com/rynorris/adventofcode/blob/master/2019/src/Day1.elm&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        code is pretty long due to the fact that I&amp;#39;m implementing each solution
        as a state machine so that I&amp;#39;m able to have longer-running solutions
        without blocking page rendering (obviously not relevant here, but will come
        up later).  So not posting it here.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98korp/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98korp", "created": 1575179483.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1575180125.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98l9rk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "phrodide",
        "can_mod_post": false, "created_utc": 1575179692.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_2r4ooiur", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Answered in excel, on my phone, while being driven home in sketchy cell signal.
        Obviously no solution to post and excel\u2019s likely only day. Ranked like
        1500 on both.\n\n\n=ROUNDDOWN(A1/3,0)-2\n\nFormula in B1 to B100\n\n=SUM(B1:B100)\n\nAnswer
        for part 1\n\nAnswer for part 2 was to copy column B to C thru I and manually
        remove the negative entries.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Answered
        in excel, on my phone, while being driven home in sketchy cell signal. Obviously
        no solution to post and excel\u2019s likely only day. Ranked like 1500 on
        both.&lt;/p&gt;\n\n&lt;p&gt;=ROUNDDOWN(A1/3,0)-2&lt;/p&gt;\n\n&lt;p&gt;Formula
        in B1 to B100&lt;/p&gt;\n\n&lt;p&gt;=SUM(B1:B100)&lt;/p&gt;\n\n&lt;p&gt;Answer
        for part 1&lt;/p&gt;\n\n&lt;p&gt;Answer for part 2 was to copy column B to
        C thru I and manually remove the negative entries.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98l9rk/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98l9rk", "created":
        1575179692.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f999c1m", "id": "f999c1m", "parent_id":
        "t1_f98l9rk", "depth": 1, "children": ["f999c1m", "f98lwty"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98ofhf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "autid",
        "can_mod_post": false, "created_utc": 1575180822.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_g26j3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Fortran** \n\nSlow day. I should probably check things like \"do I have
        a compiler installed?\" before starting.\n\nhttps://pastebin.com/WqE6HVfJ",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Fortran&lt;/strong&gt;
        &lt;/p&gt;\n\n&lt;p&gt;Slow day. I should probably check things like &amp;quot;do
        I have a compiler installed?&amp;quot; before starting.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/WqE6HVfJ\"&gt;https://pastebin.com/WqE6HVfJ&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98ofhf/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98ofhf", "created":
        1575180822.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f98pt7k", "id": "f98pt7k", "parent_id":
        "t1_f98ofhf", "depth": 1, "children": ["f98pt7k"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575185350.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98t10w", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "chunes",
        "can_mod_post": false, "created_utc": 1575182520.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_7ybf8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**[Factor](https://factorcode.org/)**\n\n    : fuel  ( m   -- n ) 3 /i 2
        - 0 max [ f ] when-zero ;\n    : part1 ( seq -- n ) [ fuel ] map-sum ;\n    :
        part2 ( seq -- n ) [ [ fuel ] follow rest sum ] map-sum ;\n\nI never know
        how much input parsing to include. It''s easy enough to just paste the input
        into the listener.\n\nThe only mildly interesting thing happening here is
        the use of `follow`, a word I don''t use often which recursively adds the
        result of its quotation to a sequence until it encounters `f`. You could think
        of it like the `while` to `replicate`''s `times`.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=\"https://factorcode.org/\"&gt;Factor&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;:
        fuel  ( m   -- n ) 3 /i 2 - 0 max [ f ] when-zero ;\n: part1 ( seq -- n )
        [ fuel ] map-sum ;\n: part2 ( seq -- n ) [ [ fuel ] follow rest sum ] map-sum
        ;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I never know how much input parsing
        to include. It&amp;#39;s easy enough to just paste the input into the listener.&lt;/p&gt;\n\n&lt;p&gt;The
        only mildly interesting thing happening here is the use of &lt;code&gt;follow&lt;/code&gt;,
        a word I don&amp;#39;t use often which recursively adds the result of its
        quotation to a sequence until it encounters &lt;code&gt;f&lt;/code&gt;. You
        could think of it like the &lt;code&gt;while&lt;/code&gt; to &lt;code&gt;replicate&lt;/code&gt;&amp;#39;s
        &lt;code&gt;times&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98t10w/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98t10w", "created": 1575182520.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_f99i6zc", "id": "f99i6zc", "parent_id": "t1_f98t10w", "depth": 1, "children":
        ["f99i6zc"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98yp0c", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ruffnite",
        "can_mod_post": false, "created_utc": 1575184685.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_50icw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My rust solution [here](https://topaz.github.io/paste/#XQAAAQDSAQAAAAAAAAA4HUhjF1isREkJ80A7vWzQvCBcVUByUONzIBe9CJRtYQLXYX6XKhuFtzlhOtXQmTOliVbUSQFkIZVqGz/f4T3GVHlqNWDGpTveDoGbVGDKTh+KDcXru6eWMaxZ8FaY1HIeAHe8oYmU7Dmk2HI0RZ/eOGCroksZcXKV6FLIMYG7L1lNfDqLto1IznsZv64+fJW7vINiy9M55wNgK0p9KbPM9dqaSoWlFqoss3e2WMIkC0Sdo52sJAGlveMEnoXsoXPKK/4l4r+A59//33UGkA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My rust solution &lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDSAQAAAAAAAAA4HUhjF1isREkJ80A7vWzQvCBcVUByUONzIBe9CJRtYQLXYX6XKhuFtzlhOtXQmTOliVbUSQFkIZVqGz/f4T3GVHlqNWDGpTveDoGbVGDKTh+KDcXru6eWMaxZ8FaY1HIeAHe8oYmU7Dmk2HI0RZ/eOGCroksZcXKV6FLIMYG7L1lNfDqLto1IznsZv64+fJW7vINiy9M55wNgK0p9KbPM9dqaSoWlFqoss3e2WMIkC0Sdo52sJAGlveMEnoXsoXPKK/4l4r+A59//33UGkA==\"&gt;here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98yp0c/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98yp0c", "created":
        1575184685.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9axyr9", "id": "f9axyr9", "parent_id":
        "t1_f98yp0c", "depth": 1, "children": ["f9axyr9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9910kz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "theRenzix",
        "can_mod_post": false, "created_utc": 1575185569.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_if8y9cd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hi i made a raku (perl 6) 1 liner for each of them  \n\n```perl\nsay \"Part
        1: \" ~ \"../input.txt\".IO.lines().map({ ($_/3).floor - 2 }).sum;\nsay \"Part
        2: \" ~ \"../input.txt\".IO.lines().map( -&gt; $_ is copy {(while (0 &lt;
        ($_/3).floor - 2) { $_ = ($_/3).floor - 2 } ).sum }).sum\n```\nIm not happy
        with the while loop so if anyone that actually knows raku well please tell
        me if there is a better way", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hi
        i made a raku (perl 6) 1 liner for each of them  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;perl\nsay
        &amp;quot;Part 1: &amp;quot; ~ &amp;quot;../input.txt&amp;quot;.IO.lines().map({
        ($_/3).floor - 2 }).sum;\nsay &amp;quot;Part 2: &amp;quot; ~ &amp;quot;../input.txt&amp;quot;.IO.lines().map(
        -&amp;gt; $_ is copy {(while (0 &amp;lt; ($_/3).floor - 2) { $_ = ($_/3).floor
        - 2 } ).sum }).sum\n&lt;/code&gt;\nIm not happy with the while loop so if
        anyone that actually knows raku well please tell me if there is a better way&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9910kz/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9910kz", "created":
        1575185569.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9aaxgn", "id": "f9aaxgn", "parent_id":
        "t1_f9910kz", "depth": 1, "children": ["f9aaxgn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575213830.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9934ee", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "uzilan1",
        "can_mod_post": false, "created_utc": 1575186391.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_170w68", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin with tail recursion:\n\n    object Day1 {\n        fun findFuel(mass:
        Int): Int = mass / 3 - 2\n    \n        tailrec fun findFuelPlusFuelForFuel(mass:
        Int, result: Int = 0): Int {\n            val fuel = findFuel(mass)\n            return
        if (fuel &lt;= 0) result\n            else findFuelPlusFuelForFuel(fuel, result
        + fuel)\n        }\n    }\n\nPoem:\n\nThere once was a man from north pole\n\nGave
        gifts to kids with a pure soul\n\nHis elves were so cruel\n\nSpace polluted
        with fuel\n\nSo all they got for Christmas was coal\n\nEdit: got a bit bored
        so I made a scratch version too: [https://scratch.mit.edu/projects/349695483/](https://scratch.mit.edu/projects/349695483/)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin with tail recursion:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;object
        Day1 {\n    fun findFuel(mass: Int): Int = mass / 3 - 2\n\n    tailrec fun
        findFuelPlusFuelForFuel(mass: Int, result: Int = 0): Int {\n        val fuel
        = findFuel(mass)\n        return if (fuel &amp;lt;= 0) result\n        else
        findFuelPlusFuelForFuel(fuel, result + fuel)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Poem:&lt;/p&gt;\n\n&lt;p&gt;There
        once was a man from north pole&lt;/p&gt;\n\n&lt;p&gt;Gave gifts to kids with
        a pure soul&lt;/p&gt;\n\n&lt;p&gt;His elves were so cruel&lt;/p&gt;\n\n&lt;p&gt;Space
        polluted with fuel&lt;/p&gt;\n\n&lt;p&gt;So all they got for Christmas was
        coal&lt;/p&gt;\n\n&lt;p&gt;Edit: got a bit bored so I made a scratch version
        too: &lt;a href=\"https://scratch.mit.edu/projects/349695483/\"&gt;https://scratch.mit.edu/projects/349695483/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9934ee/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9934ee", "created":
        1575186391.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9csgxh", "id": "f9csgxh", "parent_id":
        "t1_f9934ee", "depth": 1, "children": ["f9csgxh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f993t8l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rutquist",
        "can_mod_post": false, "created_utc": 1575186660.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_2gfpv5k3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Julia**, no leaderboard\n\n    masses = parse.(Int, readlines(\"input1.txt\"))\n    fuel(m)
        = m \u00f7 3 - 2\n    @assert fuel(1969) == 654\n    @show sum(fuel.(masses))\n       \n    totalfuel(m)
        = fuel(m) &lt; 0 ? 0 : fuel(m) + totalfuel(fuel(m))\n    @assert totalfuel(1969)
        == 966\n    @show sum(totalfuel.(masses))\n\nPoem:\n\n    My code was always
        wrong \n    The cool-downs very long \n    In hindsight I can say \n    `@assert`s
        had saved the day \n    If only they''d been in there right away!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Julia&lt;/strong&gt;, no leaderboard&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;masses
        = parse.(Int, readlines(&amp;quot;input1.txt&amp;quot;))\nfuel(m) = m \u00f7
        3 - 2\n@assert fuel(1969) == 654\n@show sum(fuel.(masses))\n\ntotalfuel(m)
        = fuel(m) &amp;lt; 0 ? 0 : fuel(m) + totalfuel(fuel(m))\n@assert totalfuel(1969)
        == 966\n@show sum(totalfuel.(masses))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Poem:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;My
        code was always wrong \nThe cool-downs very long \nIn hindsight I can say
        \n`@assert`s had saved the day \nIf only they&amp;#39;d been in there right
        away!\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f993t8l/",
        "subreddit_type": "public", "locked": false, "name": "t1_f993t8l", "created":
        1575186660.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9953fj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "radulfr2",
        "can_mod_post": false, "created_utc": 1575187179.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_1wqtesyh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Java**, rank 1008 / 950.\n\n    public class Day1 {\n        public static
        void solve() {\n            List&lt;String&gt; input = Utils.getInput(1);\n    \n            int
        fuel = input.stream().mapToInt(Integer::valueOf).map(e -&gt; e / 3 - 2).sum();\n            int
        totalFuel = input.stream().mapToInt(Integer::valueOf).map(Day1::totalFuel).sum();\n    \n            System.out.println(fuel);\n            System.out.println(totalFuel);\n        }\n    \n        private
        static int totalFuel(int mass) {\n            int fuel = 0;\n            do
        {\n                mass = mass / 3 - 2;\n                fuel += mass;\n            }
        while(mass &gt; 8);\n            \n            return fuel;\n        }\n    }\n\nPoem:\n\n&gt;Ok,
        let''s do this code,  \nHe said entering reading mode.  \nSpaceship, fuel,
        that''s interesting,  \nThis will be fun programming.  \nNow he''s prepared
        to calculate  \nBut it is already too late:  \nHundreds had the task solved  \nWhile
        he still the assignment delved.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt;, rank 1008 / 950.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        class Day1 {\n    public static void solve() {\n        List&amp;lt;String&amp;gt;
        input = Utils.getInput(1);\n\n        int fuel = input.stream().mapToInt(Integer::valueOf).map(e
        -&amp;gt; e / 3 - 2).sum();\n        int totalFuel = input.stream().mapToInt(Integer::valueOf).map(Day1::totalFuel).sum();\n\n        System.out.println(fuel);\n        System.out.println(totalFuel);\n    }\n\n    private
        static int totalFuel(int mass) {\n        int fuel = 0;\n        do {\n            mass
        = mass / 3 - 2;\n            fuel += mass;\n        } while(mass &amp;gt;
        8);\n\n        return fuel;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Poem:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Ok,
        let&amp;#39;s do this code,&lt;br/&gt;\nHe said entering reading mode.&lt;br/&gt;\nSpaceship,
        fuel, that&amp;#39;s interesting,&lt;br/&gt;\nThis will be fun programming.&lt;br/&gt;\nNow
        he&amp;#39;s prepared to calculate&lt;br/&gt;\nBut it is already too late:&lt;br/&gt;\nHundreds
        had the task solved&lt;br/&gt;\nWhile he still the assignment delved.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9953fj/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9953fj", "created":
        1575187179.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f99ud2r", "id": "f99ud2r", "parent_id":
        "t1_f9953fj", "depth": 1, "children": ["f99ud2r"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575192674.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f996l4e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "streetster_",
        "can_mod_post": false, "created_utc": 1575187773.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_smf31", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**q/kdb+**\n\n    sum (r:{0|-2+x div 3}\\''[\"J\"$read0`:input/01.txt])[;1]\n    /3291760\n    sum
        sum r[;1+til 10]\n    /4934767\n\nPoem:\n\n    There was a young man from
        East London\n    Who found five AM quite a problem,\n    Even though he''d
        be late,\n    He''d start them at eight\n    AM, And would just have his fun
        then!\n\n**K4 one-liner**\n\n    k)(+/r[;1]),+/+/(r:{0|-2+x div 3}\\''[\"J\"$0:`:input/01.txt])[;1+!9]\n\n\n...
        with thanks to [gyorokpeter](https://www.reddit.com/user/gyorokpeter) for
        the `0|` floor.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;q/kdb+&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sum
        (r:{0|-2+x div 3}\\&amp;#39;[&amp;quot;J&amp;quot;$read0`:input/01.txt])[;1]\n/3291760\nsum
        sum r[;1+til 10]\n/4934767\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Poem:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;There
        was a young man from East London\nWho found five AM quite a problem,\nEven
        though he&amp;#39;d be late,\nHe&amp;#39;d start them at eight\nAM, And would
        just have his fun then!\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;K4
        one-liner&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;k)(+/r[;1]),+/+/(r:{0|-2+x
        div 3}\\&amp;#39;[&amp;quot;J&amp;quot;$0:`:input/01.txt])[;1+!9]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...
        with thanks to &lt;a href=\"https://www.reddit.com/user/gyorokpeter\"&gt;gyorokpeter&lt;/a&gt;
        for the &lt;code&gt;0|&lt;/code&gt; floor.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f996l4e/", "subreddit_type":
        "public", "locked": false, "name": "t1_f996l4e", "created": 1575187773.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_f9crqy8", "id": "f9crqy8", "parent_id": "t1_f996l4e", "depth": 1, "children":
        ["f9crqy8", "f9bfacy"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9975b2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "gyorokpeter", "can_mod_post": false, "created_utc":
        1575187838.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 3,
        "author_fullname": "t2_spppp", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**Q**: properly modularized
        for a change. A good demonstration of the converge behavior of \\, i.e. we
        are using iteration instead of recursion.\n\n    d1a:{0|(x div 3)-2};\n    d1b:{\"J\"$\"\\n\"vs
        x};\n    d1p1:('')[sum;]('')[d1a;d1b];\n    d1p2:{sum raze 1_d1a\\[d1b[x]]};",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;:
        properly modularized for a change. A good demonstration of the converge behavior
        of \\, i.e. we are using iteration instead of recursion.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d1a:{0|(x
        div 3)-2};\nd1b:{&amp;quot;J&amp;quot;$&amp;quot;\\n&amp;quot;vs x};\nd1p1:(&amp;#39;)[sum;](&amp;#39;)[d1a;d1b];\nd1p2:{sum
        raze 1_d1a\\[d1b[x]]};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9975b2/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9975b2", "created": 1575187838.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_f99ctmn", "id": "f99ctmn", "parent_id": "t1_f9975b2", "depth": 1, "children":
        ["f99ctmn"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1575188354.0,
        "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9979zi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "KurokonoTasuke1",
        "can_mod_post": false, "created_utc": 1575187888.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_yq8qr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ok so of course I am too late but happy to share my rather basic code written
        in Python. Trying to write this now in Haskell as I decided I could use these
        puzzles to learn a bit about that language\n\n    with open (\"day01.txt\")
        as file:\n        temp = \\[int(i.rstrip()) for i in file\\]    \n    \n    def
        function(x: int):\n        return x//3-2    \n    \n    def more_fuel(mass:
        int, fuel_needed=0):\n        temp = function(mass)\n        if temp &lt;
        0:\n            return fuel_needed\n        return more_fuel(temp, fuel_needed+temp)\n        \n    print(sum(map(function,
        temp)))    \n    print(sum(map(more\\_fuel, temp)))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Ok so of course I am too late but happy to share
        my rather basic code written in Python. Trying to write this now in Haskell
        as I decided I could use these puzzles to learn a bit about that language&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open (&amp;quot;day01.txt&amp;quot;) as file:\n    temp = \\[int(i.rstrip())
        for i in file\\]    \n\ndef function(x: int):\n    return x//3-2    \n\ndef
        more_fuel(mass: int, fuel_needed=0):\n    temp = function(mass)\n    if temp
        &amp;lt; 0:\n        return fuel_needed\n    return more_fuel(temp, fuel_needed+temp)\n\nprint(sum(map(function,
        temp)))    \nprint(sum(map(more\\_fuel, temp)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9979zi/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9979zi", "created":
        1575187888.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575356909.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99cycb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pokerdan",
        "can_mod_post": false, "created_utc": 1575189925.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_7a8q9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#, no LINQ:\n\n            public void Solve()\n            {\n                var
        inputLines = _input.Split(new char[] { ''\\n'' }, StringSplitOptions.RemoveEmptyEntries);\n                var
        totalFuel = 0;\n                foreach (var inputLine in inputLines)\n                {\n                    totalFuel
        += CalculateFuel(Int32.Parse(inputLine));\n                }\n                Console.WriteLine(\"Total
        Fuel: \" + totalFuel);\n            }\n    \n            private int CalculateFuel(int
        mass)\n            {\n                int fuel = mass / 3 - 2;\n                return
        (fuel &lt;= 0) ? 0 : fuel + CalculateFuel(fuel);\n            }\n\n\\[Poem\\]\n\n&gt;It''s
        3 AM, why am I awake?  \n&gt;  \n&gt;Oh there is a Production outage.  \n&gt;  \n&gt;And
        Advent of Code started 3 hours ago.  \n&gt;  \n&gt;No leaderboard for me.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#, no LINQ:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;        public
        void Solve()\n        {\n            var inputLines = _input.Split(new char[]
        { &amp;#39;\\n&amp;#39; }, StringSplitOptions.RemoveEmptyEntries);\n            var
        totalFuel = 0;\n            foreach (var inputLine in inputLines)\n            {\n                totalFuel
        += CalculateFuel(Int32.Parse(inputLine));\n            }\n            Console.WriteLine(&amp;quot;Total
        Fuel: &amp;quot; + totalFuel);\n        }\n\n        private int CalculateFuel(int
        mass)\n        {\n            int fuel = mass / 3 - 2;\n            return
        (fuel &amp;lt;= 0) ? 0 : fuel + CalculateFuel(fuel);\n        }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;[Poem]&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;It&amp;#39;s
        3 AM, why am I awake?  &lt;/p&gt;\n\n&lt;p&gt;Oh there is a Production outage.  &lt;/p&gt;\n\n&lt;p&gt;And
        Advent of Code started 3 hours ago.  &lt;/p&gt;\n\n&lt;p&gt;No leaderboard
        for me.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99cycb/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99cycb", "created":
        1575189925.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9cqqdq", "id": "f9cqqdq", "parent_id":
        "t1_f99cycb", "depth": 1, "children": ["f9cqqdq"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575192175.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99e8bl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "egze",
        "can_mod_post": false, "created_utc": 1575190303.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_4capg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Elixir\nhttps://github.com/egze/aoc2019/blob/master/day1/lib/day1.ex\n\n    defmodule
        Day1 do\n      def file_stream(path) do\n        path\n        |&gt; File.stream!()\n        |&gt;
        Stream.map(&amp;String.trim(&amp;1))\n        |&gt; Stream.map(&amp;String.to_integer(&amp;1))\n      end\n    \n      def
        part1(file_path) do\n        file_path\n        |&gt; file_stream()\n        |&gt;
        Stream.map(&amp;needed_fuel/1)\n        |&gt; Enum.sum()\n      end\n    \n      def
        part2(file_path) do\n        file_path\n        |&gt; file_stream()\n        |&gt;
        Stream.map(&amp;total_fuel/1)\n        |&gt; Enum.sum()\n      end\n    \n      defp
        total_fuel(mass, total \\\\ 0)\n      defp total_fuel(mass, total) when mass
        &lt;= 0, do: total\n    \n      defp total_fuel(mass, total) do\n        fuel
        = needed_fuel(mass)\n    \n        total_fuel(fuel, total + fuel)\n      end\n    \n      defp
        needed_fuel(mass) do\n        (div(mass, 3) - 2)\n        |&gt; max(0)\n      end\n    end",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/egze/aoc2019/blob/master/day1/lib/day1.ex\"&gt;https://github.com/egze/aoc2019/blob/master/day1/lib/day1.ex&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        Day1 do\n  def file_stream(path) do\n    path\n    |&amp;gt; File.stream!()\n    |&amp;gt;
        Stream.map(&amp;amp;String.trim(&amp;amp;1))\n    |&amp;gt; Stream.map(&amp;amp;String.to_integer(&amp;amp;1))\n  end\n\n  def
        part1(file_path) do\n    file_path\n    |&amp;gt; file_stream()\n    |&amp;gt;
        Stream.map(&amp;amp;needed_fuel/1)\n    |&amp;gt; Enum.sum()\n  end\n\n  def
        part2(file_path) do\n    file_path\n    |&amp;gt; file_stream()\n    |&amp;gt;
        Stream.map(&amp;amp;total_fuel/1)\n    |&amp;gt; Enum.sum()\n  end\n\n  defp
        total_fuel(mass, total \\\\ 0)\n  defp total_fuel(mass, total) when mass &amp;lt;=
        0, do: total\n\n  defp total_fuel(mass, total) do\n    fuel = needed_fuel(mass)\n\n    total_fuel(fuel,
        total + fuel)\n  end\n\n  defp needed_fuel(mass) do\n    (div(mass, 3) - 2)\n    |&amp;gt;
        max(0)\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99e8bl/", "subreddit_type":
        "public", "locked": false, "name": "t1_f99e8bl", "created": 1575190303.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_e4axxe", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "f99gwf3", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_e4axxe", "score": 3, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "This year
        I''m using coconut(python3) and jupyter notebook for learning, let''s see
        how this goes, wish me luck :)\n    \n    inlines = []\n    with open(\"day1.txt\")
        as f:\n        inlines = f.readlines() \\\n        |&gt; map$(-&gt; _.strip())
        \\\n        |&gt; map$(-&gt; int(_)) \\\n        |&gt; list\n    \n    part1
        = inlines \\\n        |&gt; map$(-&gt; _ // 3 - 2) \\\n        |&gt; reduce$((+))\n    \n    print(part1)\n    \n    def
        get_fuel_p(x is int if x &lt; 1) = 0\n    addpattern def get_fuel_p(x is int
        if x &gt;0) = x + get_fuel_p(x // 3 - 2)\n        \n    def get_fuel(x) =
        get_fuel_p(x // 3 - 2)\n    \n    part2 = inlines \\\n        |&gt; map$(-&gt;
        get_fuel(_)) \\\n        |&gt; reduce$((+))\n    \n    print(part2)", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_f99gwf3", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        year I&amp;#39;m using coconut(python3) and jupyter notebook for learning,
        let&amp;#39;s see how this goes, wish me luck :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;inlines
        = []\nwith open(&amp;quot;day1.txt&amp;quot;) as f:\n    inlines = f.readlines()
        \\\n    |&amp;gt; map$(-&amp;gt; _.strip()) \\\n    |&amp;gt; map$(-&amp;gt;
        int(_)) \\\n    |&amp;gt; list\n\npart1 = inlines \\\n    |&amp;gt; map$(-&amp;gt;
        _ // 3 - 2) \\\n    |&amp;gt; reduce$((+))\n\nprint(part1)\n\ndef get_fuel_p(x
        is int if x &amp;lt; 1) = 0\naddpattern def get_fuel_p(x is int if x &amp;gt;0)
        = x + get_fuel_p(x // 3 - 2)\n\ndef get_fuel(x) = get_fuel_p(x // 3 - 2)\n\npart2
        = inlines \\\n    |&amp;gt; map$(-&amp;gt; get_fuel(_)) \\\n    |&amp;gt;
        reduce$((+))\n\nprint(part2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99gwf3/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575191068.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575191068.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_f99rom8", "id": "f99rom8", "parent_id":
        "t1_f99gwf3", "depth": 1, "children": ["f99rom8", "f9baah1"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99humy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MissMormie",
        "can_mod_post": false, "created_utc": 1575191329.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_ilvy2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My code is more verbose, partially because it is java, partially because
        I like it, so let me link to github instead:\n\n [https://github.com/MissMormie/adventOfCode2019/blob/master/src/main/java/Days/Day1Fuel.java](https://github.com/MissMormie/adventOfCode2019/blob/master/src/main/java/Days/Day1Fuel.java)
        \n\nSanta may I ask,  \nset jdk once not twenty times  \nso I can play now\n\n\\-
        jdk hell\n\nOk, so apparently in Intellij there''s a million different ways
        to set the jdk and it took me 45 minutes to get it to build my code and 5
        minutes to write the code. I''m sure all million ways are important. But AARG!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My code is more verbose,
        partially because it is java, partially because I like it, so let me link
        to github instead:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/MissMormie/adventOfCode2019/blob/master/src/main/java/Days/Day1Fuel.java\"&gt;https://github.com/MissMormie/adventOfCode2019/blob/master/src/main/java/Days/Day1Fuel.java&lt;/a&gt;
        &lt;/p&gt;\n\n&lt;p&gt;Santa may I ask,&lt;br/&gt;\nset jdk once not twenty
        times&lt;br/&gt;\nso I can play now&lt;/p&gt;\n\n&lt;p&gt;- jdk hell&lt;/p&gt;\n\n&lt;p&gt;Ok,
        so apparently in Intellij there&amp;#39;s a million different ways to set
        the jdk and it took me 45 minutes to get it to build my code and 5 minutes
        to write the code. I&amp;#39;m sure all million ways are important. But AARG!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99humy/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99humy", "created":
        1575191329.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9chbk8", "id": "f9chbk8", "parent_id":
        "t1_f99humy", "depth": 1, "children": ["f9chbk8"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99k37o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Using python3 like always.\n\nLearned about the // operator,
        which is quite handy as I could just drop the math library from the solution.\n\nInstead
        of trying to go for leaderboards and then eventually burning out at like day
        7 like previous years, this time around I will give each puzzle at least a
        solid try while trying my best to follow good coding standards and practices.\n\nMight
        also try to do some code golf for the solutions after solving them \"properly\"\n\n[Github](https://github.com/JanneJP/Advent-of-Code-2019/blob/master/day%2001/solution.py)
        day 1 solution", "awarders": [], "downs": 0, "author_flair_css_class": null,
        "name": "t1_f99k37o", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Using python3 like always.&lt;/p&gt;\n\n&lt;p&gt;Learned
        about the // operator, which is quite handy as I could just drop the math
        library from the solution.&lt;/p&gt;\n\n&lt;p&gt;Instead of trying to go for
        leaderboards and then eventually burning out at like day 7 like previous years,
        this time around I will give each puzzle at least a solid try while trying
        my best to follow good coding standards and practices.&lt;/p&gt;\n\n&lt;p&gt;Might
        also try to do some code golf for the solutions after solving them &amp;quot;properly&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/JanneJP/Advent-of-Code-2019/blob/master/day%2001/solution.py\"&gt;Github&lt;/a&gt;
        day 1 solution&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99k37o/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1575191991.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575191991.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9cq84m", "id": "f9cq84m", "parent_id":
        "t1_f99k37o", "depth": 1, "children": ["f9cq84m"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99uegw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "didzisk",
        "can_mod_post": false, "created_utc": 1575195457.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_6hqz3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Excel (actually Google Sheets), column A contains data, column B contains
        this:\n\n=IF(QUOTIENT(A1, 3)-2&gt;0, QUOTIENT(A1, 3)-2, 0)\n\ncopy this to
        right until col J, place horisontal SUM in col K, place vertical SUM under
        com B for Part1, another vertical SUM under col K for part 2", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Excel (actually Google Sheets), column A
        contains data, column B contains this:&lt;/p&gt;\n\n&lt;p&gt;=IF(QUOTIENT(A1,
        3)-2&amp;gt;0, QUOTIENT(A1, 3)-2, 0)&lt;/p&gt;\n\n&lt;p&gt;copy this to right
        until col J, place horisontal SUM in col K, place vertical SUM under com B
        for Part1, another vertical SUM under col K for part 2&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99uegw/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99uegw", "created":
        1575195457.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9amch5", "id": "f9amch5", "parent_id":
        "t1_f99uegw", "depth": 1, "children": ["f9amch5"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575199324.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9a5enx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BioGeek",
        "can_mod_post": false, "created_utc": 1575198970.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_1vvp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3 with type hints:\n\nhttps://github.com/BioGeek/adventofcode_2019/blob/master/day01.py\n\n    from
        math import floor\n    from typing import Callable\n    \n    def calculate_fuel(mass:
        int) -&gt; int:\n        \"\"\"\n        To find the fuel required for a module,
        take its mass,\n         divide by three, round down, and subtract 2.\n        \"\"\"\n        return
        floor(mass / 3) - 2\n    \n    def calculate_fuel_better(mass: int) -&gt;
        int:\n        \"\"\"\n        For each module mass, calculate its fuel and
        add it to\n        the total. Then, treat the fuel amount you just calculated
        \n        as the input mass and repeat the process, continuing until \n        a
        fuel requirement is zero or negative.\n        \"\"\"\n        fuel = calculate_fuel(mass)\n        total_fuel
        = 0\n        while fuel &gt; 0:\n            total_fuel += fuel\n            fuel
        = calculate_fuel(fuel)\n        return total_fuel\n    \n    def main(func:
        Callable) -&gt; int:\n        \"\"\"\n        What is the sum of the fuel
        requirements for all of \n        the modules on your spacecraft?\n        \"\"\"\n        with
        open(''data/day01.txt'') as f:\n            masses = map(int, f.read().splitlines())\n    \n        return
        sum(func(mass) for mass in masses)\n    \n    if __name__ == ''__main__'':\n        assert
        calculate_fuel(12) == 2\n        assert calculate_fuel(14) == 2\n        assert
        calculate_fuel(1969) == 654\n        assert calculate_fuel(100756) == 33583\n     \n        print(main(calculate_fuel))\n    \n        assert
        calculate_fuel_better(14) == 2\n        assert calculate_fuel_better(1969)
        == 966\n        assert calculate_fuel_better(100756) == 50346\n    \n        print(main(calculate_fuel_better))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3 with type hints:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/BioGeek/adventofcode_2019/blob/master/day01.py\"&gt;https://github.com/BioGeek/adventofcode_2019/blob/master/day01.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        math import floor\nfrom typing import Callable\n\ndef calculate_fuel(mass:
        int) -&amp;gt; int:\n    &amp;quot;&amp;quot;&amp;quot;\n    To find the fuel
        required for a module, take its mass,\n     divide by three, round down, and
        subtract 2.\n    &amp;quot;&amp;quot;&amp;quot;\n    return floor(mass / 3)
        - 2\n\ndef calculate_fuel_better(mass: int) -&amp;gt; int:\n    &amp;quot;&amp;quot;&amp;quot;\n    For
        each module mass, calculate its fuel and add it to\n    the total. Then, treat
        the fuel amount you just calculated \n    as the input mass and repeat the
        process, continuing until \n    a fuel requirement is zero or negative.\n    &amp;quot;&amp;quot;&amp;quot;\n    fuel
        = calculate_fuel(mass)\n    total_fuel = 0\n    while fuel &amp;gt; 0:\n        total_fuel
        += fuel\n        fuel = calculate_fuel(fuel)\n    return total_fuel\n\ndef
        main(func: Callable) -&amp;gt; int:\n    &amp;quot;&amp;quot;&amp;quot;\n    What
        is the sum of the fuel requirements for all of \n    the modules on your spacecraft?\n    &amp;quot;&amp;quot;&amp;quot;\n    with
        open(&amp;#39;data/day01.txt&amp;#39;) as f:\n        masses = map(int, f.read().splitlines())\n\n    return
        sum(func(mass) for mass in masses)\n\nif __name__ == &amp;#39;__main__&amp;#39;:\n    assert
        calculate_fuel(12) == 2\n    assert calculate_fuel(14) == 2\n    assert calculate_fuel(1969)
        == 654\n    assert calculate_fuel(100756) == 33583\n\n    print(main(calculate_fuel))\n\n    assert
        calculate_fuel_better(14) == 2\n    assert calculate_fuel_better(1969) ==
        966\n    assert calculate_fuel_better(100756) == 50346\n\n    print(main(calculate_fuel_better))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a5enx/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a5enx", "created":
        1575198970.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a6zyp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "DrinkinBird",
        "can_mod_post": false, "created_utc": 1575199405.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_n5j28", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "NIM\n\n&amp;#x200B;\n\n    import rdstdin, sequtils, strutils, re\n    \n    let
        input = stdin.readAll().findAll(re(r\"\\d+\")).map(parseInt)\n    \n    func
        get_fuel(mass: int): int =\n      int(float(mass) / 3.0) - 2\n    \n    func
        get_fuel(masses: seq[int]): int =\n      masses.map(get_fuel).foldl(a + b)\n    \n    func
        get_all_fuel(mass: int): int =\n      let new_fuel = get_fuel(mass)\n    \n      if
        new_fuel &gt; 0:\n        return get_all_fuel(new_fuel) + new_fuel\n      else:\n        return
        0\n    \n    func get_all_fuel(masses: seq[int]): int =\n      masses.map(get_all_fuel).foldl(a
        + b)\n    \n    echo get_fuel(input)\n    echo get_all_fuel(input)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;NIM&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        rdstdin, sequtils, strutils, re\n\nlet input = stdin.readAll().findAll(re(r&amp;quot;\\d+&amp;quot;)).map(parseInt)\n\nfunc
        get_fuel(mass: int): int =\n  int(float(mass) / 3.0) - 2\n\nfunc get_fuel(masses:
        seq[int]): int =\n  masses.map(get_fuel).foldl(a + b)\n\nfunc get_all_fuel(mass:
        int): int =\n  let new_fuel = get_fuel(mass)\n\n  if new_fuel &amp;gt; 0:\n    return
        get_all_fuel(new_fuel) + new_fuel\n  else:\n    return 0\n\nfunc get_all_fuel(masses:
        seq[int]): int =\n  masses.map(get_all_fuel).foldl(a + b)\n\necho get_fuel(input)\necho
        get_all_fuel(input)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a6zyp/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9a6zyp", "created": 1575199405.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_f9be5ax", "id": "f9be5ax", "parent_id": "t1_f9a6zyp", "depth": 1, "children":
        ["f9be5ax"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9atyxf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "L72_Elite_Kraken",
        "can_mod_post": false, "created_utc": 1575206371.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_16r83m", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "OCaml (omitting some scaffolding for parsing and printing):\n\n    open!
        Core\n\n    let fuel_requirement n = (n / 3) - 2\n    let solve_part_1 = List.sum
        (module Int) ~f:fuel_requirement\n\n    let fuel_requirement_accounting_for_extra
        n =\n      let rec aux n total =\n        let required_fuel = fuel_requirement
        n in\n        match required_fuel &lt;= 0 with\n        | true -&gt; total\n        |
        false -&gt; aux required_fuel (total + required_fuel)\n      in\n      aux
        n 0\n    ;;\n\n    let solve_part_2 = List.sum (module Int) ~f:fuel_requirement_accounting_for_extra\n\nFull
        code at https://github.com/leviroth/advent-of-code-2019/blob/master/src/day01.ml",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OCaml (omitting some
        scaffolding for parsing and printing):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;open!
        Core\n\nlet fuel_requirement n = (n / 3) - 2\nlet solve_part_1 = List.sum
        (module Int) ~f:fuel_requirement\n\nlet fuel_requirement_accounting_for_extra
        n =\n  let rec aux n total =\n    let required_fuel = fuel_requirement n in\n    match
        required_fuel &amp;lt;= 0 with\n    | true -&amp;gt; total\n    | false -&amp;gt;
        aux required_fuel (total + required_fuel)\n  in\n  aux n 0\n;;\n\nlet solve_part_2
        = List.sum (module Int) ~f:fuel_requirement_accounting_for_extra\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Full
        code at &lt;a href=\"https://github.com/leviroth/advent-of-code-2019/blob/master/src/day01.ml\"&gt;https://github.com/leviroth/advent-of-code-2019/blob/master/src/day01.ml&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9atyxf/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9atyxf", "created":
        1575206371.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9auk2h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Python 3 \n\n    def get_day_1():\n        \"\"\"\n        First
        we need to manually copy/paste the data in a text file\n        and add it
        to the current directory\n        \"\"\"\n        with open(\"day_1_input.txt\")
        as f:\n            data = f.read().split(\"\\n\")\n        data = [int(i)
        for i in data]\n        return data\n\n    def answer_1():\n        return
        sum(i//3 for i in data) - 2*len(data)\n\n    def answer_2():\n        \"\"\"\n        Adding
        fuel and the remaining fuel weight and limiting \n        at 5 in the while
        loop since 5//3 - 2 &lt; 0\n        \"\"\"\n        total = 0\n        for
        i in data:\n            while i &gt; 5:\n                i = i//3 - 2\n                total
        += i\n        return total", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9auk2h", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3 &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        get_day_1():\n    &amp;quot;&amp;quot;&amp;quot;\n    First we need to manually
        copy/paste the data in a text file\n    and add it to the current directory\n    &amp;quot;&amp;quot;&amp;quot;\n    with
        open(&amp;quot;day_1_input.txt&amp;quot;) as f:\n        data = f.read().split(&amp;quot;\\n&amp;quot;)\n    data
        = [int(i) for i in data]\n    return data\n\ndef answer_1():\n    return sum(i//3
        for i in data) - 2*len(data)\n\ndef answer_2():\n    &amp;quot;&amp;quot;&amp;quot;\n    Adding
        fuel and the remaining fuel weight and limiting \n    at 5 in the while loop
        since 5//3 - 2 &amp;lt; 0\n    &amp;quot;&amp;quot;&amp;quot;\n    total =
        0\n    for i in data:\n        while i &amp;gt; 5:\n            i = i//3 -
        2\n            total += i\n    return total\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9auk2h/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575206563.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575206563.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_f9awowa", "id": "f9awowa", "parent_id":
        "t1_f9auk2h", "depth": 1, "children": ["f9awowa", "f9cv07n"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9baof0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "_LynxTheCat",
        "can_mod_post": false, "created_utc": 1575210840.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_54syi5ke", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Not a particularly elegant solution, however I''m pretty happy with it. Especially
        the fact that I thought to use do ... while. Considering I''ve never discovered
        a practical application for it, and feel that this is one situation in which
        it was actually practical.\n\nMy C# Solution:\n\n    public int calculateFuelFromMass(int
        partMass) {\n        int partFuel = 0;\n        partFuel = (partMass / 3)
        - 2;\n        return partFuel;\n    }\n    \n    public int calculateTotalFuel(int[]
        parts) {\n        int totalFuel = 0;\n        for (int i = 0; i &lt; parts.Length;
        i++) {\n            totalFuel += calculateFuelFromAddedMassOfFuel(parts[i]);\n        }\n        return
        totalFuel;\n    }\n    \n    public int calculateFuelFromAddedMassOfFuel(int
        partFuel) {\n        int extraFuel = calculateFuelFromMass(partFuel);\n        int
        totalExtraFuel = 0;\n        if (extraFuel &lt;= 0) {\n            return
        0;\n        }\n        do {\n            totalExtraFuel += extraFuel;\n            extraFuel
        = calculateFuelFromMass(extraFuel);\n        } while (extraFuel &gt; 0);\n        return
        totalExtraFuel;\n    }\n\nThere was an alternative solution for part 2 I considered.
        Which used recursion, however I decided I wanted to use a do ... while loop
        just cuz I never get to use them. Here is that alternative version of CalculateFuelFromMass()
        and it''s related calculateTotalFuel() however:\n\n    public int calculateFuelFromMass(int
        partMass) {\n        int partFuel = 0;\n        partFuel = (partMass / 3)
        - 2;\n        if (partFuel &gt; 0) {\n            partFuel += calculateFuelFromMass(partFuel);\n        }\n        return
        partFuel;\n    }\n    \n    public int calculateTotalFuel(int[] parts) {\n        int
        totalFuel = 0;\n        for (int i = 0; i &lt; parts.Length; i++) {\n            totalFuel
        += calculateFuelFromMass(parts[i]);\n        }\n        return totalFuel;\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not a particularly elegant
        solution, however I&amp;#39;m pretty happy with it. Especially the fact that
        I thought to use do ... while. Considering I&amp;#39;ve never discovered a
        practical application for it, and feel that this is one situation in which
        it was actually practical.&lt;/p&gt;\n\n&lt;p&gt;My C# Solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        int calculateFuelFromMass(int partMass) {\n    int partFuel = 0;\n    partFuel
        = (partMass / 3) - 2;\n    return partFuel;\n}\n\npublic int calculateTotalFuel(int[]
        parts) {\n    int totalFuel = 0;\n    for (int i = 0; i &amp;lt; parts.Length;
        i++) {\n        totalFuel += calculateFuelFromAddedMassOfFuel(parts[i]);\n    }\n    return
        totalFuel;\n}\n\npublic int calculateFuelFromAddedMassOfFuel(int partFuel)
        {\n    int extraFuel = calculateFuelFromMass(partFuel);\n    int totalExtraFuel
        = 0;\n    if (extraFuel &amp;lt;= 0) {\n        return 0;\n    }\n    do {\n        totalExtraFuel
        += extraFuel;\n        extraFuel = calculateFuelFromMass(extraFuel);\n    }
        while (extraFuel &amp;gt; 0);\n    return totalExtraFuel;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There
        was an alternative solution for part 2 I considered. Which used recursion,
        however I decided I wanted to use a do ... while loop just cuz I never get
        to use them. Here is that alternative version of CalculateFuelFromMass() and
        it&amp;#39;s related calculateTotalFuel() however:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        int calculateFuelFromMass(int partMass) {\n    int partFuel = 0;\n    partFuel
        = (partMass / 3) - 2;\n    if (partFuel &amp;gt; 0) {\n        partFuel +=
        calculateFuelFromMass(partFuel);\n    }\n    return partFuel;\n}\n\npublic
        int calculateTotalFuel(int[] parts) {\n    int totalFuel = 0;\n    for (int
        i = 0; i &amp;lt; parts.Length; i++) {\n        totalFuel += calculateFuelFromMass(parts[i]);\n    }\n    return
        totalFuel;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9baof0/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9baof0", "created": 1575210840.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1575213963.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bbql2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Morphion",
        "can_mod_post": false, "created_utc": 1575211101.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_c3un0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## **Clojure**\n    ; Part 1 calculator\n    (defn fuel_calculator [module_mass]\n      (-
        (int (Math/floor (/ module_mass 3))) 2))\n    \n    ; Part 2 calculator\n    (defn
        recursive_fuel_calculator [initial_module_mass]\n      ((fn [total, mass]\n         (let
        [fuel_requirement (fuel_calculator mass)]\n           (if (&lt;= fuel_requirement
        0 ) total (recur (+ total fuel_requirement) fuel_requirement)))\n         )
        0 initial_module_mass)\n      )\n    \n    (defn convert_seq_of_strings_to_ints
        [ss]\n      (map #(Integer/parseInt %) ss))\n    \n    (defn get_fuel_list_from_module_mass_list
        [fuel_calc_func module_mass_list]\n      (map fuel_calc_func (convert_seq_of_strings_to_ints
        module_mass_list)))\n    \n    (defn get_total_fuel_requirement [fuel_calc_func
        module_mass_list]\n      (reduce + (get_fuel_list_from_module_mass_list fuel_calc_func
        module_mass_list)))\n    \n    (defn -main [&amp; args]\n      ; read from
        stdin to variable\n      (let [module_mass_list (clojure.string/split-lines
        (slurp *in*))]\n        (println \"Part 1 result: \" (get_total_fuel_requirement
        fuel_calculator module_mass_list))\n        (println \"Part 2 result: \" (get_total_fuel_requirement
        recursive_fuel_calculator module_mass_list))\n        )\n      )", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h2&gt;&lt;strong&gt;Clojure&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;;
        Part 1 calculator\n(defn fuel_calculator [module_mass]\n  (- (int (Math/floor
        (/ module_mass 3))) 2))\n\n; Part 2 calculator\n(defn recursive_fuel_calculator
        [initial_module_mass]\n  ((fn [total, mass]\n     (let [fuel_requirement (fuel_calculator
        mass)]\n       (if (&amp;lt;= fuel_requirement 0 ) total (recur (+ total fuel_requirement)
        fuel_requirement)))\n     ) 0 initial_module_mass)\n  )\n\n(defn convert_seq_of_strings_to_ints
        [ss]\n  (map #(Integer/parseInt %) ss))\n\n(defn get_fuel_list_from_module_mass_list
        [fuel_calc_func module_mass_list]\n  (map fuel_calc_func (convert_seq_of_strings_to_ints
        module_mass_list)))\n\n(defn get_total_fuel_requirement [fuel_calc_func module_mass_list]\n  (reduce
        + (get_fuel_list_from_module_mass_list fuel_calc_func module_mass_list)))\n\n(defn
        -main [&amp;amp; args]\n  ; read from stdin to variable\n  (let [module_mass_list
        (clojure.string/split-lines (slurp *in*))]\n    (println &amp;quot;Part 1
        result: &amp;quot; (get_total_fuel_requirement fuel_calculator module_mass_list))\n    (println
        &amp;quot;Part 2 result: &amp;quot; (get_total_fuel_requirement recursive_fuel_calculator
        module_mass_list))\n    )\n  )\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bbql2/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bbql2", "created":
        1575211101.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bljcq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "codesections",
        "can_mod_post": false, "created_utc": 1575213846.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_1qohraix", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Dyalog APL:\n\n    in\u2190\u234e\u00a8\u2283\u2395NGET ''input.txt'' 1\n    f\u2190{\u00af2+\u230a\u2375\u00f73}\n    pt1\u2190+/f\u00a8in\n    pt2\u2190+/{(f\u2375)&lt;0:0
        \u22c4 (\u2207f\u2375)+f\u2375}\u00a8in", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Dyalog APL:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;in\u2190\u234e\u00a8\u2283\u2395NGET
        &amp;#39;input.txt&amp;#39; 1\nf\u2190{\u00af2+\u230a\u2375\u00f73}\npt1\u2190+/f\u00a8in\npt2\u2190+/{(f\u2375)&amp;lt;0:0
        \u22c4 (\u2207f\u2375)+f\u2375}\u00a8in\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bljcq/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bljcq", "created":
        1575213846.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9cms68", "id": "f9cms68", "parent_id":
        "t1_f9bljcq", "depth": 1, "children": ["f9cms68", "f9jq1l8"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9brcbn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MaximusDecMeridius",
        "can_mod_post": false, "created_utc": 1575215505.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_3ulhqbd9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A little late to the game today. Here''s my python solution.\n\n    with
        open(''input'', ''r'') as f:\n        data = f.read().splitlines()\n    \n    def
        fuel_calc(mass):\n        fuel = int(int(mass)/3) - 2\n        return fuel\n    \n    def
        part_one(numbers):\n        fuel = sum([fuel_calc(line) for line in numbers])\n        return
        fuel\n    \n    def part_two(numbers):\n        fuel_requirements = []\n        for
        line in numbers:\n            new_fuel = fuel_calc(line)\n            total_fuel
        = 0\n            while new_fuel &gt; 0:\n                total_fuel += new_fuel\n                new_fuel
        = fuel_calc(new_fuel)\n            fuel_requirements.append(total_fuel)\n        return
        sum(fuel_requirements)\n    \n    \n    print(part_one(data))\n    print(part_two(data))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A little late to the
        game today. Here&amp;#39;s my python solution.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;input&amp;#39;, &amp;#39;r&amp;#39;) as f:\n    data = f.read().splitlines()\n\ndef
        fuel_calc(mass):\n    fuel = int(int(mass)/3) - 2\n    return fuel\n\ndef
        part_one(numbers):\n    fuel = sum([fuel_calc(line) for line in numbers])\n    return
        fuel\n\ndef part_two(numbers):\n    fuel_requirements = []\n    for line in
        numbers:\n        new_fuel = fuel_calc(line)\n        total_fuel = 0\n        while
        new_fuel &amp;gt; 0:\n            total_fuel += new_fuel\n            new_fuel
        = fuel_calc(new_fuel)\n        fuel_requirements.append(total_fuel)\n    return
        sum(fuel_requirements)\n\n\nprint(part_one(data))\nprint(part_two(data))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9brcbn/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9brcbn", "created":
        1575215505.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9c890n", "id": "f9c890n", "parent_id":
        "t1_f9brcbn", "depth": 1, "children": ["f9c890n"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9buj8b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rprtr258",
        "can_mod_post": false, "created_utc": 1575216449.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_13av1p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First time writing D language. Got stuck on second part because i thought
        fuel for fuel should be calculated in the end and not for each module. But
        finally solved.  \n[https://gist.github.com/rprtr258/06155e46e15de5823844f73a18f7bb03](https://gist.github.com/rprtr258/06155e46e15de5823844f73a18f7bb03)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First time writing D
        language. Got stuck on second part because i thought fuel for fuel should
        be calculated in the end and not for each module. But finally solved.&lt;br/&gt;\n&lt;a
        href=\"https://gist.github.com/rprtr258/06155e46e15de5823844f73a18f7bb03\"&gt;https://gist.github.com/rprtr258/06155e46e15de5823844f73a18f7bb03&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9buj8b/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9buj8b", "created":
        1575216449.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 356, "name": "t1_f9bxd0e", "id": "f9bxd0e", "parent_id":
        "t3_e4axxe", "depth": 0, "children": ["f9bxd0e", "f9cftjt", "f9cenbt", "f9cftvh",
        "f9cne42", "f9cp8mc", "f98emdd", "f9dns88", "f9dkh16", "f9cqb6l", "f9eeedl",
        "f9czaku", "f9dkpm0", "f98hgh2", "f98hpop", "f98gtug", "f9dghsb", "f98jkld",
        "f98vvw5", "f98lsgx", "f9crj4v", "f99qys1", "f9a3x1j", "f9bpw5f", "f998ti6",
        "f98uxjf", "f99rbhn", "f9brl2u", "f99gw7s", "f98o7px", "f9dunbd", "f9a7x50",
        "f9b6wc3", "f98obua", "f99n2eq", "f993cfk", "f9d5p8j", "f98xwka", "f99qstk",
        "f9cegpe", "f9bhurl", "f9dnszy", "f9e9tzf", "f9csybv", "f9d6u94", "f99h2ul",
        "f9dcddm", "f9a4wfk", "f99yu1r", "f9e95u8", "f9cv5yb", "f9d3aat", "f9cln1y",
        "f99uxjy", "f98g2ur", "f9aspom", "f98e2oa", "f99o1zf", "f9d7eoe", "f9ciuxd",
        "f98ju3b", "f9bk1l3", "f992xqa", "f9dywlq", "f98tguo", "f98q1ba", "f9ajerr",
        "f9a8ysf", "f98khp4", "f9a24y1", "f9e00mx", "f98hqvf", "f9ae4ur", "f9arrdj",
        "f9eegtn", "f9ad17m", "f99w9q2", "f98h4kp", "f9aazci", "f9b5118", "f998ent",
        "f98ll3y", "f9e9ua1", "f9d3gbd", "f9cs39t", "f9a38at", "f9bdi1r", "f9e1sk0",
        "f9amjs9", "f9dxd4j", "f99149g", "f9e4b15", "f9ccaxs", "f99j8kw", "f9d0ixq",
        "f98f8o5", "f9ecpup", "f9e2bqc", "f9cju7c", "f9br9iq", "f9e9xm0", "f9eg9ka",
        "f9b3g1e", "f98m85t", "f99sbxk", "f9d48p8", "f9d7t9r", "f98h92l", "f9bimpm",
        "f98ysya", "f9br68q", "f98qs5x", "f9908mr", "f9e7v2y", "f9bqe57", "f98elxe",
        "f9bnqbt", "f9c1ee9", "f99ck7e", "f99r9d1", "f98yr8h", "f9amkve", "f9bko7p",
        "f9biur5", "f98vqn0", "f9dsw8j", "f9agoy2", "f98gftt", "f98uu7p", "f98ig6a",
        "f9davk5", "f9cfhy7", "f9b8e5g", "f9bn9zl", "f9eermi", "f98fqot", "f9916zx",
        "f98tgvj", "f99us86", "f9c9axd", "f9b9r1k", "f9cy7al", "f995vox", "f9avalt",
        "f9c6u9g", "f9bjvy2", "f9a4mxa", "f9dofwf", "f98z05e", "f98n7b0", "f9d7ohp",
        "f9a8wat", "f99cmy2", "f992sov", "f9e24jv", "f9eawlr", "f9a9804", "f9bt11z",
        "f98u30m", "f9e2a8s", "f9bojzt", "f9dhs8c", "f9brgyu", "f9db9ap", "f9dg3fh",
        "f98gqtq", "f9e30z9", "f9a1xzz", "f99j5x4", "f9abv6n", "f9dnnwd", "f9bgpnf",
        "f9bbta9", "f9a5juy", "f98f0mk", "f98g9y9", "f9932qr", "f9c8pu8", "f98xzha",
        "f9cyg9v", "f98elzq", "f9bzvmy", "f9btcz0", "f98m1ra", "f9dg9ou", "f9brdtx",
        "f9d2flh", "f9bnjn7", "f9e8ys9", "f9ct724"]}}], true]], [0, 12, "attr", "things"],
        [12, 13, "call", ["t1_f98due7"]], [13, 14, "attr", "focus"], [14, 15, "call",
        []], [0, 16, "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr",
        "filter"], [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"],
        [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 23:06:44 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:44 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=f5MEkF3T4zr4nVa3M4; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 23:06:44 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_e4axxe&children=f9bxd0e,f9cftjt,f9cenbt,f9cftvh,f9cne42,f9cp8mc,f98emdd,f9dns88,f9dkh16,f9cqb6l,f9eeedl,f9czaku,f9dkpm0,f98hgh2,f98hpop,f98gtug,f9dghsb,f98jkld,f98vvw5,f98lsgx,f9crj4v,f99qys1,f9a3x1j,f9bpw5f,f998ti6,f98uxjf,f99rbhn,f9brl2u,f99gw7s,f98o7px,f9dunbd,f9a7x50,f9b6wc3,f98obua,f99n2eq,f993cfk,f9d5p8j,f98xwka,f99qstk,f9cegpe,f9bhurl,f9dnszy,f9e9tzf,f9csybv,f9d6u94,f99h2ul,f9dcddm,f9a4wfk,f99yu1r,f9e95u8,f9cv5yb,f9d3aat,f9cln1y,f99uxjy,f98g2ur,f9aspom,f98e2oa,f99o1zf,f9d7eoe,f9ciuxd,f98ju3b,f9bk1l3,f992xqa,f9dywlq,f98tguo,f98q1ba,f9ajerr,f9a8ysf,f98khp4,f9a24y1,f9e00mx,f98hqvf,f9ae4ur,f9arrdj,f9eegtn,f9ad17m,f99w9q2,f98h4kp,f9aazci,f9b5118,f998ent,f98ll3y,f9e9ua1,f9d3gbd,f9cs39t,f9a38at,f9bdi1r,f9e1sk0,f9amjs9,f9dxd4j,f99149g,f9e4b15,f9ccaxs,f99j8kw,f9d0ixq,f98f8o5,f9ecpup,f9e2bqc,f9cju7c,f9br9iq,f9e9xm0,f9eg9ka,f9b3g1e,f98m85t,f99sbxk,f9d48p8,f9d7t9r,f98h92l,f9bimpm,f98ysya,f9br68q,f98qs5x,f9908mr,f9e7v2y,f9bqe57,f98elxe,f9bnqbt,f9c1ee9,f99ck7e,f99r9d1,f98yr8h,f9amkve,f9bko7p,f9biur5,f98vqn0,f9dsw8j,f9agoy2,f98gftt,f98uu7p,f98ig6a,f9davk5,f9cfhy7,f9b8e5g,f9bn9zl,f9eermi,f98fqot,f9916zx,f98tgvj,f99us86,f9c9axd,f9b9r1k,f9cy7al,f995vox,f9avalt,f9c6u9g,f9bjvy2,f9a4mxa,f9dofwf,f98z05e,f98n7b0,f9d7ohp,f9a8wat,f99cmy2,f992sov,f9e24jv,f9eawlr,f9a9804,f9bt11z,f98u30m,f9e2a8s,f9bojzt,f9dhs8c,f9brgyu,f9db9ap,f9dg3fh,f98gqtq,f9e30z9,f9a1xzz,f99j5x4,f9abv6n,f9dnnwd,f9bgpnf,f9bbta9,f9a5juy,f98f0mk,f98g9y9,f9932qr,f9c8pu8,f98xzha,f9cyg9v,f98elzq,f9bzvmy,f9btcz0,f98m1ra,f9dg9ou,f9brdtx,f9d2flh,f9bnjn7,f9e8ys9,f9ct724
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '41207'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksigdz479.2.1741475204391.Z0FBQUFBQm56TTJFWVBlWkZ0SGpPOG9wVEdOendiT3VsdHFMLU5qTHQ1VXRoeE9fSFlqSnZWMW5aeTU3MmxQZXNvcmJGWmFVYVRPdDNWQS1JUXBvWXd1WEFjdHJVWTVzZ2tmeTFLQk5mWDdYV1c2SjQxdjk1ZzFkMTEzQnFlTW5UeHU4OUZnM0R0a3c;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 23:06:44
        GMT; secure, session_tracker=eohmfligberijelrbo.0.1741475204403.Z0FBQUFBQm56TTJFZ3hGNnU4LTc0bFEwVUNlNHFvZ0pqMUNTVXpUUl9LcFRzLWpZczVSTC1sa18tR01aY2ZibmM3OWFiRl9PX2FRTWViZVhZc2lkY0E4cUJZYjNrbk9EUzkxandRMUpZaVd0VS1OVlJIT1RhVnB0LUt2R0YtTmEteVJkS2pJR0I5SXM;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 01:06:44
        GMT; secure, edgebucket=UKwfZUtvuXwO7EUGBu; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '31'
      x-ratelimit-remaining:
      - '69.0'
      x-ratelimit-reset:
      - '195'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:44 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575217410.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9bxd0e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "djankowski",
        "can_mod_post": false, "created_utc": 1575217200.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_4xuo5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Julia and suggestions welcome!  \n\n    # Part 1\n    fuel(x)::Int = x \u00f7
        3 - 2\n    fuel(x::String)::Int = fuel(parse(Int64, x))\n    \n    [fuel(i)
        for i in readlines(\"dec1-1.txt\")] |&gt; sum\n\n    # Part 2\n    function
        fuel2(x, count = 0)::Int\n        x = fuel(x)\n        x &lt;= 0 ? count :
        fuel2(x, count + x)\n    end\n    \n    [fuel2(i) for i in readlines(\"dec1-2.txt\")]
        |&gt; sum\n\nRecursion is hard  \nwhen you don''t know  \nwhy the result  \nis
        stack overflow", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Julia
        and suggestions welcome!  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Part 1\nfuel(x)::Int
        = x \u00f7 3 - 2\nfuel(x::String)::Int = fuel(parse(Int64, x))\n\n[fuel(i)
        for i in readlines(&amp;quot;dec1-1.txt&amp;quot;)] |&amp;gt; sum\n\n# Part
        2\nfunction fuel2(x, count = 0)::Int\n    x = fuel(x)\n    x &amp;lt;= 0 ?
        count : fuel2(x, count + x)\nend\n\n[fuel2(i) for i in readlines(&amp;quot;dec1-2.txt&amp;quot;)]
        |&amp;gt; sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Recursion is hard&lt;br/&gt;\nwhen
        you don&amp;#39;t know&lt;br/&gt;\nwhy the result&lt;br/&gt;\nis stack overflow&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bxd0e/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bxd0e", "created":
        1575217200.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9bzb5h", "id": "f9bzb5h", "parent_id":
        "t1_f9bxd0e", "depth": 1, "children": ["f9bzb5h"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cenbt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "levital",
        "can_mod_post": false, "created_utc": 1575222826.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_gcawu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A beginner''s solution [in Rust](https://topaz.github.io/paste/#XQAAAQB6AgAAAAAAAAAzG4AF0ZZ46VHA0JHUhPFs0MpH80lYFYmpMantnv4UHARsxBqbHpo9FG8k/qw7wyh+PRpvf1B6D7/OazUQ60FG3429oR73iykPt1X7WHhVVDB5K0fpX6KYJltSTPV41Wly+JzUocyq7ddqAHE6pgpj4rEDNXKn9mAwlzYQSw7L8+qCEmITbUTZm0CzzKAKcuXF0uFJyRV3pmzVttwVnOCi1vJ2zq2f+9pI8tGhLIGE8zzhvDdrEoDSzr1txgJ0CDbwTS5J+H4uH0hTN0SD81uanp+LTxpIE6zKfM90LZolP/9PMqZhSBrBlYbq9n6wS+BvYtW1TYLYKG3QyStZgoc/jycSlIzC2O5QBSm8rFc7RpPoF7Z/b9dvMf+qdh25m1IT7QDRmwv51VxsQ9i39HbzHWONVRaOvRMLsi106eR/v+3/9jijjw==).\n\nDoing
        this the first time this year, not sure whether I''ll actually have the time
        to finish all of the puzzles. Not least because I''m doing this in part to
        learn Rust...", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A
        beginner&amp;#39;s solution &lt;a href=\"https://topaz.github.io/paste/#XQAAAQB6AgAAAAAAAAAzG4AF0ZZ46VHA0JHUhPFs0MpH80lYFYmpMantnv4UHARsxBqbHpo9FG8k/qw7wyh+PRpvf1B6D7/OazUQ60FG3429oR73iykPt1X7WHhVVDB5K0fpX6KYJltSTPV41Wly+JzUocyq7ddqAHE6pgpj4rEDNXKn9mAwlzYQSw7L8+qCEmITbUTZm0CzzKAKcuXF0uFJyRV3pmzVttwVnOCi1vJ2zq2f+9pI8tGhLIGE8zzhvDdrEoDSzr1txgJ0CDbwTS5J+H4uH0hTN0SD81uanp+LTxpIE6zKfM90LZolP/9PMqZhSBrBlYbq9n6wS+BvYtW1TYLYKG3QyStZgoc/jycSlIzC2O5QBSm8rFc7RpPoF7Z/b9dvMf+qdh25m1IT7QDRmwv51VxsQ9i39HbzHWONVRaOvRMLsi106eR/v+3/9jijjw==\"&gt;in
        Rust&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Doing this the first time this year,
        not sure whether I&amp;#39;ll actually have the time to finish all of the
        puzzles. Not least because I&amp;#39;m doing this in part to learn Rust...&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cenbt/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cenbt", "created":
        1575222826.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9dzhe7", "id": "f9dzhe7", "parent_id":
        "t1_f9cenbt", "depth": 1, "children": ["f9dzhe7"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cftjt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "HiPhish",
        "can_mod_post": false, "created_utc": 1575223237.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_16lgo8x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This is my first time participating. I used Awk for the first problem, I
        needed a reason to use my [awk-ward.nvim](https://gitlab.com/HiPhish/awk-ward.nvim)
        plugin (live coding with Awk).\n\n[Part 1](https://gitlab.com/HiPhish/advent-of-code-2019/blob/master/01/part-1.awk)
        (almost not worth posting)\n\n[Part 2](https://gitlab.com/HiPhish/advent-of-code-2019/blob/master/01/part-2.awk)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is my first time
        participating. I used Awk for the first problem, I needed a reason to use
        my &lt;a href=\"https://gitlab.com/HiPhish/awk-ward.nvim\"&gt;awk-ward.nvim&lt;/a&gt;
        plugin (live coding with Awk).&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gitlab.com/HiPhish/advent-of-code-2019/blob/master/01/part-1.awk\"&gt;Part
        1&lt;/a&gt; (almost not worth posting)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gitlab.com/HiPhish/advent-of-code-2019/blob/master/01/part-2.awk\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cftjt/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cftjt", "created":
        1575223237.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_f9d9mpz", "id": "f9d9mpz", "parent_id":
        "t1_f9cftjt", "depth": 1, "children": ["f9d9mpz", "f9dcj1g"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575223646.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9cftvh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "## Python\n\nThis is my first year participating, so
        feel free to leave suggestions.\n\n[Part 1](https://raw.githubusercontent.com/jadenPete/AdventOfCode/master/2019/day1-part1.py)\n\n[Part
        2](https://raw.githubusercontent.com/jadenPete/AdventOfCode/master/2019/day1-part2.py)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_f9cftvh",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Python&lt;/h2&gt;\n\n&lt;p&gt;This
        is my first year participating, so feel free to leave suggestions.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://raw.githubusercontent.com/jadenPete/AdventOfCode/master/2019/day1-part1.py\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://raw.githubusercontent.com/jadenPete/AdventOfCode/master/2019/day1-part2.py\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cftvh/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1575223241.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575223241.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9ckzog",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "JJBby",
        "can_mod_post": false, "created_utc": 1575224871.0, "send_replies": true,
        "parent_id": "t1_f9cftvh", "score": 5, "author_fullname": "t2_299axb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Oh, I like that map() in this.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Oh, I like that map() in this.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ckzog/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ckzog", "created":
        1575224871.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9dckj4", "id": "f9dckj4", "parent_id":
        "t1_f9ckzog", "depth": 2, "children": ["f9dckj4"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cv6rs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Sir_Mr_Bman",
        "can_mod_post": false, "created_utc": 1575227622.0, "send_replies": true,
        "parent_id": "t1_f9cftvh", "score": 2, "author_fullname": "t2_9wyi7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Instead of using floor here, why not just use int() to cast the numbers?
        IE\n\n    with open(\"day1.txt\", \"r\") as f:\n        print(sum(int(mass/3
        - 2) for mass in map(int, file)))\n\nMaybe this is less readable overall,
        in a one-liner approach, but coming from Java this to me looks better for
        some reason.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Instead
        of using floor here, why not just use int() to cast the numbers? IE&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;day1.txt&amp;quot;, &amp;quot;r&amp;quot;) as f:\n    print(sum(int(mass/3
        - 2) for mass in map(int, file)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Maybe
        this is less readable overall, in a one-liner approach, but coming from Java
        this to me looks better for some reason.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cv6rs/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9cv6rs", "created": 1575227622.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_f9dklql", "id": "f9dklql", "parent_id": "t1_f9cv6rs", "depth": 2, "children":
        ["f9dklql"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9dcfm3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1575232191.0, "send_replies": true,
        "parent_id": "t1_f9cftvh", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; This is my first year participating\n\nWelcome!  Hope you''re having
        fun so far!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;This
        is my first year participating&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Welcome!  Hope
        you&amp;#39;re having fun so far!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dcfm3/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9dcfm3", "created": 1575232191.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "more", "data": {"count": 1,
        "name": "t1_f9djmyc", "id": "f9djmyc", "parent_id": "t1_f9dcfm3", "depth":
        2, "children": ["f9djmyc"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1575226974.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cne42",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Rainbow_Doge_64",
        "can_mod_post": false, "created_utc": 1575225505.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_14j9v1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python\n\nThe first part is pretty much a one-liner, if you exclude converting
        the inputs to a python list:\n\n    with open(\"01-1-input.txt\", \"r\") as
        f:\n        inputs = [int(i.split(''\\n'')[0]) for i in f]\n        f.close()\n    \n    print(sum((i//3)-2
        for i in inputs))\n\n(Well, tbh, you could do it in one line, but it looks
        horrid and is less safe: `print(sum((i//3)-2 for i in [int(i.split(''\\n'')[0])
        for i in open(\"01-1-input.txt\", \"r\")]))`)\n\nFor the second part, I used
        a recursive function (It''s the first time I used recursion for anything,
        so thanks AoC!):\n\n    with open(\"01-1-input.txt\", \"r\") as f:\n        inputs
        = [int(i.split(''\\n'')[0]) for i in f]\n        f.close()\n    \n    def
        calculate_fuel_for_mass(mass):\n        fuel_for_mass = mass // 3 - 2\n        if
        fuel_for_mass &gt; 0:\n            return fuel_for_mass + calculate_fuel_for_mass(fuel_for_mass)\n        else:\n            return
        0\n    \n    print(sum(calculate_fuel_for_mass(i) for i in inputs))\n\nHere''s
        my haiku:\n\n# \"How to: Recursion\"\n\n***If you want to read***\n\n***about
        recursion, please read***\n\n***\"How to: Recursion\"***", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;The first
        part is pretty much a one-liner, if you exclude converting the inputs to a
        python list:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;quot;01-1-input.txt&amp;quot;,
        &amp;quot;r&amp;quot;) as f:\n    inputs = [int(i.split(&amp;#39;\\n&amp;#39;)[0])
        for i in f]\n    f.close()\n\nprint(sum((i//3)-2 for i in inputs))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(Well,
        tbh, you could do it in one line, but it looks horrid and is less safe: &lt;code&gt;print(sum((i//3)-2
        for i in [int(i.split(&amp;#39;\\n&amp;#39;)[0]) for i in open(&amp;quot;01-1-input.txt&amp;quot;,
        &amp;quot;r&amp;quot;)]))&lt;/code&gt;)&lt;/p&gt;\n\n&lt;p&gt;For the second
        part, I used a recursive function (It&amp;#39;s the first time I used recursion
        for anything, so thanks AoC!):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;quot;01-1-input.txt&amp;quot;,
        &amp;quot;r&amp;quot;) as f:\n    inputs = [int(i.split(&amp;#39;\\n&amp;#39;)[0])
        for i in f]\n    f.close()\n\ndef calculate_fuel_for_mass(mass):\n    fuel_for_mass
        = mass // 3 - 2\n    if fuel_for_mass &amp;gt; 0:\n        return fuel_for_mass
        + calculate_fuel_for_mass(fuel_for_mass)\n    else:\n        return 0\n\nprint(sum(calculate_fuel_for_mass(i)
        for i in inputs))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&amp;#39;s my
        haiku:&lt;/p&gt;\n\n&lt;h1&gt;&amp;quot;How to: Recursion&amp;quot;&lt;/h1&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;If
        you want to read&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;about
        recursion, please read&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;How
        to: Recursion&amp;quot;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cne42/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cne42", "created":
        1575225505.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9cthw8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9cne42", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "No need to close the `file` object if you use a context
        manager (that is, the `with` block):\n\n    with open(''some_file'', ''r'')
        as f:\n        do_things_with(f)\n    # f is closed here", "awarders": [],
        "downs": 0, "author_flair_css_class": null, "name": "t1_f9cthw8", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No
        need to close the &lt;code&gt;file&lt;/code&gt; object if you use a context
        manager (that is, the &lt;code&gt;with&lt;/code&gt; block):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;some_file&amp;#39;, &amp;#39;r&amp;#39;) as f:\n    do_things_with(f)\n#
        f is closed here\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cthw8/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575227158.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575227158.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9ctww4", "id": "f9ctww4", "parent_id":
        "t1_f9cthw8", "depth": 2, "children": ["f9ctww4"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_f9d1kr2", "id": "f9d1kr2", "parent_id": "t1_f9cne42",
        "depth": 1, "children": ["f9d1kr2"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cp8mc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "HokieGeek",
        "can_mod_post": false, "created_utc": 1575226030.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_vdtx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "So this morning I solved it in go, then later in the day I decided I wanted
        to learn a lisp, so I solved it in Racket. If anybody thinks I should try
        a different lisp, let me know!\n\n# Go\n\n[https://git.sr.ht/\\~hokiegeek/adventofcode/tree/master/2019/01/go/main.go#L11](https://git.sr.ht/~hokiegeek/adventofcode/tree/master/2019/01/go/main.go#L11)\n\n#
        Racket\n\n[https://git.sr.ht/\\~hokiegeek/adventofcode/tree/master/2019/01/racket/day1.rkt](https://git.sr.ht/~hokiegeek/adventofcode/tree/master/2019/01/racket/day1.rkt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So this morning I solved
        it in go, then later in the day I decided I wanted to learn a lisp, so I solved
        it in Racket. If anybody thinks I should try a different lisp, let me know!&lt;/p&gt;\n\n&lt;h1&gt;Go&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://git.sr.ht/%7Ehokiegeek/adventofcode/tree/master/2019/01/go/main.go#L11\"&gt;https://git.sr.ht/~hokiegeek/adventofcode/tree/master/2019/01/go/main.go#L11&lt;/a&gt;&lt;/p&gt;\n\n&lt;h1&gt;Racket&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://git.sr.ht/%7Ehokiegeek/adventofcode/tree/master/2019/01/racket/day1.rkt\"&gt;https://git.sr.ht/~hokiegeek/adventofcode/tree/master/2019/01/racket/day1.rkt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cp8mc/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cp8mc", "created":
        1575226030.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9db3ke",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "OneParanoidDuck",
        "can_mod_post": false, "created_utc": 1575231847.0, "send_replies": true,
        "parent_id": "t1_f9cp8mc", "score": 2, "author_fullname": "t2_13fne2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Is Go your \"main\" language\"? I''m learning it and looking for some feedback.
        I''m mainly developing in Python. Wrote the below Go implementation literally
        jumping back and forth through Tour of Go. Kind of surprising that something
        essential as bufio isn''t covered, had to find out about it from another resource.
        Otherwise seems like a nice and intuitive language, just need to refresh my
        knowledge of pointers for future challenges.. :)\n\n    package main\n    \n    import
        (\n    \t\"bufio\"\n    \t\"fmt\"\n    \t\"os\"\n    \t\"strconv\"\n    )\n    \n    //
        GetLinesAsIntegers opens the given file and returns lines as integers\n    func
        GetLinesAsIntegers(filename string) []int {\n    \tfile, err := os.Open(filename)\n    \tif
        err != nil {\n    \t\tpanic(err)\n    \t}\n    \tdefer file.Close()\n    \n    \tscanner
        := bufio.NewScanner(file)\n    \tscanner.Split(bufio.ScanLines)\n    \n    \tvar
        values []int\n    \tfor scanner.Scan() {\n    \t\tinput, err := strconv.Atoi(scanner.Text())\n    \t\tif
        err != nil {\n    \t\t\tpanic(err)\n    \t\t}\n    \t\tvalues = append(values,
        input)\n    \t}\n    \treturn values\n    }\n    \n    func calculateFuel(mass
        int) int {\n    \treturn (mass / 3) - 2\n    }\n    \n    func part1(modules
        []int) {\n    \ttotalfuel := 0\n    \tfor _, mass := range modules {\n    \t\ttotalfuel
        += calculateFuel(mass)\n    \t}\n    \tfmt.Println(\"[part1] Total fuel:\",
        totalfuel)\n    }\n    \n    func part2(modules []int) {\n    \ttotalfuel
        := 0\n    \tfor _, mass := range modules {\n    \t\tfor fuel := calculateFuel(mass);
        fuel &gt; 0; fuel = calculateFuel(fuel) {\n    \t\t\ttotalfuel += fuel\n    \t\t}\n    \t}\n    \tfmt.Println(\"[part2]
        Total fuel:\", totalfuel)\n    }\n    \n    func main() {\n    \tvalues :=
        GetLinesAsIntegers(\"input/day1.txt\")\n    \tpart1(values)\n    \tpart2(values)\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is Go your &amp;quot;main&amp;quot;
        language&amp;quot;? I&amp;#39;m learning it and looking for some feedback.
        I&amp;#39;m mainly developing in Python. Wrote the below Go implementation
        literally jumping back and forth through Tour of Go. Kind of surprising that
        something essential as bufio isn&amp;#39;t covered, had to find out about
        it from another resource. Otherwise seems like a nice and intuitive language,
        just need to refresh my knowledge of pointers for future challenges.. :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        main\n\nimport (\n    &amp;quot;bufio&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;strconv&amp;quot;\n)\n\n//
        GetLinesAsIntegers opens the given file and returns lines as integers\nfunc
        GetLinesAsIntegers(filename string) []int {\n    file, err := os.Open(filename)\n    if
        err != nil {\n        panic(err)\n    }\n    defer file.Close()\n\n    scanner
        := bufio.NewScanner(file)\n    scanner.Split(bufio.ScanLines)\n\n    var values
        []int\n    for scanner.Scan() {\n        input, err := strconv.Atoi(scanner.Text())\n        if
        err != nil {\n            panic(err)\n        }\n        values = append(values,
        input)\n    }\n    return values\n}\n\nfunc calculateFuel(mass int) int {\n    return
        (mass / 3) - 2\n}\n\nfunc part1(modules []int) {\n    totalfuel := 0\n    for
        _, mass := range modules {\n        totalfuel += calculateFuel(mass)\n    }\n    fmt.Println(&amp;quot;[part1]
        Total fuel:&amp;quot;, totalfuel)\n}\n\nfunc part2(modules []int) {\n    totalfuel
        := 0\n    for _, mass := range modules {\n        for fuel := calculateFuel(mass);
        fuel &amp;gt; 0; fuel = calculateFuel(fuel) {\n            totalfuel += fuel\n        }\n    }\n    fmt.Println(&amp;quot;[part2]
        Total fuel:&amp;quot;, totalfuel)\n}\n\nfunc main() {\n    values := GetLinesAsIntegers(&amp;quot;input/day1.txt&amp;quot;)\n    part1(values)\n    part2(values)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9db3ke/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9db3ke", "created":
        1575231847.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dm6us",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Aneurysm9",
        "can_mod_post": false, "created_utc": 1575234768.0, "send_replies": true,
        "parent_id": "t1_f9db3ke", "score": 3, "author_fullname": "t2_4b465", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''ve been writing Go for 10 years and your implementation looks very much
        like [mine](https://gist.github.com/Aneurysm9/f27f9819bf056e1658e51cc4d8528d25),
        so well done!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve
        been writing Go for 10 years and your implementation looks very much like
        &lt;a href=\"https://gist.github.com/Aneurysm9/f27f9819bf056e1658e51cc4d8528d25\"&gt;mine&lt;/a&gt;,
        so well done!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dm6us/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dm6us", "created":
        1575234768.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_f9e3nb8", "id": "f9e3nb8", "parent_id":
        "t1_f9dm6us", "depth": 3, "children": ["f9e3nb8"]}}, {"kind": "more", "data":
        {"count": 3, "name": "t1_f9ea89z", "id": "f9ea89z", "parent_id": "t1_f9db3ke",
        "depth": 2, "children": ["f9ea89z", "f9ecw6e"]}}, {"kind": "more", "data":
        {"count": 3, "name": "t1_f9ed4xo", "id": "f9ed4xo", "parent_id": "t1_f9cp8mc",
        "depth": 1, "children": ["f9ed4xo"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cqb6l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "joeld",
        "can_mod_post": false, "created_utc": 1575226293.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_4f6hh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Racket\n\n[source here]\n(https://topaz.github.io/paste/#XQAAAQAlAgAAAAAAAAARmwgnELWQ0VQXd9jF8NizzBt5RnGU0b18lSDWYHT6J9eKRUAuBZL9hJp26yeHcxEdDi34nuDcJp3D+UBhACjhJtUqAf4wVvwO8mH2yxJJJZF3fXMF7uv9r8xlFEJX5kDZRQss1SHtBPIGdBdL/xnu2PB2NrU1dfG10SLl8JB16xWOsR+fh0jzmlzadfySqoSWjaqIxW2eiOGRRVNcUCCGZ5Ac4ssO4jPX7+gGkghepw79xynGLXPyIGocMcNcGqukmNYFp9dIu1xceJsXjOpus1RgEYMnT5ZMFGWPooW+7fqOFlVOELP4biV0/9AJ35g=)\n\nCouldn\u2019t
        have asked for a more LISP-friendly day 1 :-)\n\n    &gt; (time (day01-part1))\n    cpu
        time: 0 real time: 0 gc time: 0\n    3317659\n    &gt; (time (day01-part2))\n    cpu
        time: 0 real time: 1 gc time: 0\n    4973616", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Racket&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAlAgAAAAAAAAARmwgnELWQ0VQXd9jF8NizzBt5RnGU0b18lSDWYHT6J9eKRUAuBZL9hJp26yeHcxEdDi34nuDcJp3D+UBhACjhJtUqAf4wVvwO8mH2yxJJJZF3fXMF7uv9r8xlFEJX5kDZRQss1SHtBPIGdBdL/xnu2PB2NrU1dfG10SLl8JB16xWOsR+fh0jzmlzadfySqoSWjaqIxW2eiOGRRVNcUCCGZ5Ac4ssO4jPX7+gGkghepw79xynGLXPyIGocMcNcGqukmNYFp9dIu1xceJsXjOpus1RgEYMnT5ZMFGWPooW+7fqOFlVOELP4biV0/9AJ35g=\"&gt;source
        here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Couldn\u2019t have asked for a more LISP-friendly
        day 1 :-)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;gt; (time (day01-part1))\ncpu
        time: 0 real time: 0 gc time: 0\n3317659\n&amp;gt; (time (day01-part2))\ncpu
        time: 0 real time: 1 gc time: 0\n4973616\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cqb6l/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cqb6l", "created":
        1575226293.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9f5zm3", "id": "f9f5zm3", "parent_id":
        "t1_f9cqb6l", "depth": 1, "children": ["f9f5zm3"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9czaku",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kandiyohi",
        "can_mod_post": false, "created_utc": 1575228633.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_h0bvncc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# T-SQL\n\nFairly long-winded compared to /u/raevnos''s [solution](https://www.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99tllv/),
        but it uses computed columns and functions.  Also I think I found out why
        I''ve seen nobody use user-defined functions in T-SQL; they can''t be debugged
        via SELECTs.\n\n[Day 1 part 1](https://github.com/kandiyohi/aoc2019/blob/master/day1/day1_part1.sql)\n\n[Day
        1 part 2](https://github.com/kandiyohi/aoc2019/blob/master/day1/day1_part2.sql)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;T-SQL&lt;/h1&gt;\n\n&lt;p&gt;Fairly
        long-winded compared to &lt;a href=\"/u/raevnos\"&gt;/u/raevnos&lt;/a&gt;&amp;#39;s
        &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99tllv/\"&gt;solution&lt;/a&gt;,
        but it uses computed columns and functions.  Also I think I found out why
        I&amp;#39;ve seen nobody use user-defined functions in T-SQL; they can&amp;#39;t
        be debugged via SELECTs.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/kandiyohi/aoc2019/blob/master/day1/day1_part1.sql\"&gt;Day
        1 part 1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/kandiyohi/aoc2019/blob/master/day1/day1_part2.sql\"&gt;Day
        1 part 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9czaku/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9czaku", "created":
        1575228633.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dghsb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "StevoTVR",
        "can_mod_post": false, "created_utc": 1575233296.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_380rl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in Go: https://github.com/stevotvr/adventofcode2019/blob/master/day01/day01.go",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in Go: &lt;a
        href=\"https://github.com/stevotvr/adventofcode2019/blob/master/day01/day01.go\"&gt;https://github.com/stevotvr/adventofcode2019/blob/master/day01/day01.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dghsb/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dghsb", "created":
        1575233296.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9dqmss", "id": "f9dqmss", "parent_id":
        "t1_f9dghsb", "depth": 1, "children": ["f9dqmss"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dkh16",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Infonyx",
        "can_mod_post": false, "created_utc": 1575234275.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_13e0wc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A solution in Racket\n\nAlso, this is my first time participating :D\n\n    (define
        (day1 wlist) (max 0 (foldr + 0 (map (\u03bb (x) (- (floor (/ x 3)) 2)) wlist))))\n\n    (define
        (day2 wlist) (foldr + 0 (map (\u03bb (x) (let foo (\\[e x\\]) (if (&lt; 0
        (day1 (list e))) (+ (day1 (list e)) (foo (day1 (list e)))) 0))) wlist)))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A solution in Racket&lt;/p&gt;\n\n&lt;p&gt;Also,
        this is my first time participating :D&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(define
        (day1 wlist) (max 0 (foldr + 0 (map (\u03bb (x) (- (floor (/ x 3)) 2)) wlist))))\n\n(define
        (day2 wlist) (foldr + 0 (map (\u03bb (x) (let foo (\\[e x\\]) (if (&amp;lt;
        0 (day1 (list e))) (+ (day1 (list e)) (foo (day1 (list e)))) 0))) wlist)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dkh16/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dkh16", "created":
        1575234275.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9dq991", "id": "f9dq991", "parent_id":
        "t1_f9dkh16", "depth": 1, "children": ["f9dq991"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dkpm0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rhbvkleef",
        "can_mod_post": false, "created_utc": 1575234361.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_5tx32", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Erlang**\n\nI have not yet seen any Erlang solution even though Erlang
        is such a beautiful language. My code can be found on https://github.com/rhbvkleef/aoc2019.\n\n    -module(aoc2019_1).\n    \n    -export([\n        a/1,\n        b/1\n    ]).\n    \n    sumof(Fn,
        List) -&gt; lists:foldl(fun(X, Sum) -&gt; Fn(X) + Sum end, 0, List).\n    \n    fuel_for(Mass)
        -&gt; floor(Mass / 3) - 2.\n    fuel_for_rocket(Mass) -&gt;\n        N = fuel_for(Mass),\n        if
        \n            N =&lt; 0 -&gt; 0;\n            true -&gt; N + fuel_for_rocket(N)\n        end.\n    \n    a(Lines)
        -&gt; sumof(\n        fun(L) -&gt; fuel_for(list_to_integer(L)) end,\n        Lines\n    ).\n    \n    b(Lines)
        -&gt; sumof(\n        fun(L) -&gt; fuel_for_rocket(list_to_integer(L)) end,\n        Lines\n    ).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Erlang&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        have not yet seen any Erlang solution even though Erlang is such a beautiful
        language. My code can be found on &lt;a href=\"https://github.com/rhbvkleef/aoc2019\"&gt;https://github.com/rhbvkleef/aoc2019&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-module(aoc2019_1).\n\n-export([\n    a/1,\n    b/1\n]).\n\nsumof(Fn,
        List) -&amp;gt; lists:foldl(fun(X, Sum) -&amp;gt; Fn(X) + Sum end, 0, List).\n\nfuel_for(Mass)
        -&amp;gt; floor(Mass / 3) - 2.\nfuel_for_rocket(Mass) -&amp;gt;\n    N = fuel_for(Mass),\n    if
        \n        N =&amp;lt; 0 -&amp;gt; 0;\n        true -&amp;gt; N + fuel_for_rocket(N)\n    end.\n\na(Lines)
        -&amp;gt; sumof(\n    fun(L) -&amp;gt; fuel_for(list_to_integer(L)) end,\n    Lines\n).\n\nb(Lines)
        -&amp;gt; sumof(\n    fun(L) -&amp;gt; fuel_for_rocket(list_to_integer(L))
        end,\n    Lines\n).\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dkpm0/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9dkpm0", "created": 1575234361.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9dns88", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jamie_ca", "can_mod_post": false, "created_utc":
        1575235204.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 3,
        "author_fullname": "t2_4dzxz", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Firstly, a unified solution
        in ruby:\n\n    def fuel(mass, recurse: false)\n      return 0 if mass &lt;
        7\n      f_mass = mass / 3 - 2\n      f_mass += fuel(f_mass, recurse: recurse)
        if recurse\n      f_mass\n    end\n\n    puts input.map { |m| fuel(m) }.sum\n    puts
        input.map { |m| fuel(m, true) }.sum\n\nAnd for bonus points (taking Fuel as
        one syllable):\n\n    First, for the input\n    Parse the lines as integers.\n    Store
        in an array.\n    \n    Define a method\n    Fuel, taking as input mass\n    And
        a recurse flag.\n    \n    For masses less than\n    Seven, return a zero\n    And
        call it a day.\n    \n    Fuel mass is then\n    Two less than one third the
        mass.\n    Make sure to round down.\n    \n    Check the recurse flag.\n    If
        set, call Fuel with fuel mass,\n    Setting still the flag.\n    \n    The
        recursed result\n    Is then added to fuel mass,\n    Which then is returned.\n    \n    Our
        problems'' answers:\n    Sum Fuel for all input, and\n    The same, with recurse.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Firstly, a unified solution
        in ruby:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fuel(mass, recurse: false)\n  return
        0 if mass &amp;lt; 7\n  f_mass = mass / 3 - 2\n  f_mass += fuel(f_mass, recurse:
        recurse) if recurse\n  f_mass\nend\n\nputs input.map { |m| fuel(m) }.sum\nputs
        input.map { |m| fuel(m, true) }.sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And
        for bonus points (taking Fuel as one syllable):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;First,
        for the input\nParse the lines as integers.\nStore in an array.\n\nDefine
        a method\nFuel, taking as input mass\nAnd a recurse flag.\n\nFor masses less
        than\nSeven, return a zero\nAnd call it a day.\n\nFuel mass is then\nTwo less
        than one third the mass.\nMake sure to round down.\n\nCheck the recurse flag.\nIf
        set, call Fuel with fuel mass,\nSetting still the flag.\n\nThe recursed result\nIs
        then added to fuel mass,\nWhich then is returned.\n\nOur problems&amp;#39;
        answers:\nSum Fuel for all input, and\nThe same, with recurse.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dns88/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dns88", "created":
        1575235204.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9dpylu", "id": "f9dpylu", "parent_id":
        "t1_f9dns88", "depth": 1, "children": ["f9dpylu"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9eeedl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "frerich",
        "can_mod_post": false, "created_utc": 1575243018.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 3, "author_fullname": "t2_tagtm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\n[https://github.com/frerich/aoc2019/blob/master/rust/day1/src/main.rs](https://github.com/frerich/aoc2019/blob/master/rust/day1/src/main.rs)\n\nI
        noticed that both parts could be defined in terms of a single function which
        yields the sequence of incremental fuel additions, so I introduced a ''refills''
        helper for that. First time I wrote a function which returns an iterator.\n\nI''m
        quite happy how I get away without any ''if'', pattern matching or loops.
        Also, no turbofishes. :-)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/frerich/aoc2019/blob/master/rust/day1/src/main.rs\"&gt;https://github.com/frerich/aoc2019/blob/master/rust/day1/src/main.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        noticed that both parts could be defined in terms of a single function which
        yields the sequence of incremental fuel additions, so I introduced a &amp;#39;refills&amp;#39;
        helper for that. First time I wrote a function which returns an iterator.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        quite happy how I get away without any &amp;#39;if&amp;#39;, pattern matching
        or loops. Also, no turbofishes. :-)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eeedl/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9eeedl", "created": 1575243018.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1575179786.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98emdd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ollien",
        "can_mod_post": false, "created_utc": 1575177385.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_4u4h1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3, no leaderboard. (164/364)\n\n    def part1():\n        with open(''input.txt'',
        ''r'') as f:\n            print(sum(int(line)//3 - 2 for line in f))\n\n\n    def
        part2():\n        with open(''input.txt'', ''r'') as f:\n            modules
        = [int(line) for line in f]\n\n        total = 0\n        for module in modules:\n            next_cost
        = module//3 - 2\n            while next_cost &gt;= 0:\n                total
        += next_cost\n                next_cost = next_cost // 3 - 2\n\n        print(total)\n\nCan
        probably make the second one a little more compact if I try\n\nEDIT:\nHad
        a bit of fun with this one based on some inspiration in this thread\n\n    #
        Somewhat of a weird solution, but by combining reduce with a recursive solution,
        we can get the correct answer :)\n    def part2_alternate():\n        input_file
        = open(''input.txt'', ''r'')\n\n        def reducer(total, cost):\n            next_cost
        = cost//3 - 2\n            if next_cost &lt;= 0:\n                # If the
        next cost is less than or equal to zero, the current cost we have is the total
        cost\n                return total\n\n            return total + reducer(next_cost,
        next_cost)\n\n        total = functools.reduce(reducer, (int(line) for line
        in input_file), 0)\n\n        print(total)\n        input_file.close()", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python3, no leaderboard. (164/364)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        part1():\n    with open(&amp;#39;input.txt&amp;#39;, &amp;#39;r&amp;#39;)
        as f:\n        print(sum(int(line)//3 - 2 for line in f))\n\n\ndef part2():\n    with
        open(&amp;#39;input.txt&amp;#39;, &amp;#39;r&amp;#39;) as f:\n        modules
        = [int(line) for line in f]\n\n    total = 0\n    for module in modules:\n        next_cost
        = module//3 - 2\n        while next_cost &amp;gt;= 0:\n            total +=
        next_cost\n            next_cost = next_cost // 3 - 2\n\n    print(total)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Can
        probably make the second one a little more compact if I try&lt;/p&gt;\n\n&lt;p&gt;EDIT:\nHad
        a bit of fun with this one based on some inspiration in this thread&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Somewhat of a weird solution, but by combining reduce with a recursive solution,
        we can get the correct answer :)\ndef part2_alternate():\n    input_file =
        open(&amp;#39;input.txt&amp;#39;, &amp;#39;r&amp;#39;)\n\n    def reducer(total,
        cost):\n        next_cost = cost//3 - 2\n        if next_cost &amp;lt;= 0:\n            #
        If the next cost is less than or equal to zero, the current cost we have is
        the total cost\n            return total\n\n        return total + reducer(next_cost,
        next_cost)\n\n    total = functools.reduce(reducer, (int(line) for line in
        input_file), 0)\n\n    print(total)\n    input_file.close()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98emdd/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98emdd", "created":
        1575177385.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_f990xsg", "id": "f990xsg", "parent_id":
        "t1_f98emdd", "depth": 1, "children": ["f990xsg"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575178265.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98g2ur", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Spheniscine",
        "can_mod_post": false, "created_utc": 1575177880.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_6etcy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin - 204/288\n\n    package d1\n    import java.io.File\n    \n    private
        val input by lazy { File(\"src/d1/input/gmail.in\").readText() }\n    \n    fun
        main() {\n        val A = input.lines().map { it.toInt() }\n        val ans1
        = A.sumBy { it / 3 - 2 }\n        println(\"Part 1: $ans1\")\n    \n        val
        ans2 = A.sumBy {\n            var r = 0\n            var k = it\n            while(true)
        {\n                k = k / 3 - 2\n                if(k &lt;= 0) break\n                r
        += k\n            }\n            r\n        }\n        println(\"Part 2: $ans2\")\n    }\n\nPoem
        (haiku):\n\nIt looks like Santa\n\nHas been playing way too much\n\nKerbal
        Space Program", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin
        - 204/288&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package d1\nimport java.io.File\n\nprivate
        val input by lazy { File(&amp;quot;src/d1/input/gmail.in&amp;quot;).readText()
        }\n\nfun main() {\n    val A = input.lines().map { it.toInt() }\n    val ans1
        = A.sumBy { it / 3 - 2 }\n    println(&amp;quot;Part 1: $ans1&amp;quot;)\n\n    val
        ans2 = A.sumBy {\n        var r = 0\n        var k = it\n        while(true)
        {\n            k = k / 3 - 2\n            if(k &amp;lt;= 0) break\n            r
        += k\n        }\n        r\n    }\n    println(&amp;quot;Part 2: $ans2&amp;quot;)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Poem
        (haiku):&lt;/p&gt;\n\n&lt;p&gt;It looks like Santa&lt;/p&gt;\n\n&lt;p&gt;Has
        been playing way too much&lt;/p&gt;\n\n&lt;p&gt;Kerbal Space Program&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98g2ur/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98g2ur", "created":
        1575177880.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98gtug", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Starting to learn Python! Here''s my simple and likely
        inefficient code:\n\n    import math as math\n    \n    input = open(\"input.txt\",
        \"r\").readlines()\n    \n    output = 0\n    fuel_fuel = 0\n    for num in
        input:\n        module_fuel = int(num)//3 - 2\n        i = module_fuel//3
        -2\n        while not(i &lt; 0):\n            fuel_fuel += i\n            i
        = i//3 - 2\n        output += module_fuel + fuel_fuel\n        fuel_fuel =
        0\n    print(output)", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f98gtug", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Starting to learn Python! Here&amp;#39;s
        my simple and likely inefficient code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        math as math\n\ninput = open(&amp;quot;input.txt&amp;quot;, &amp;quot;r&amp;quot;).readlines()\n\noutput
        = 0\nfuel_fuel = 0\nfor num in input:\n    module_fuel = int(num)//3 - 2\n    i
        = module_fuel//3 -2\n    while not(i &amp;lt; 0):\n        fuel_fuel += i\n        i
        = i//3 - 2\n    output += module_fuel + fuel_fuel\n    fuel_fuel = 0\nprint(output)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98gtug/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575178133.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575178133.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_f99ag4t", "id": "f99ag4t", "parent_id":
        "t1_f98gtug", "depth": 1, "children": ["f99ag4t"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575263951.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98hgh2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "zergling_Lester",
        "can_mod_post": false, "created_utc": 1575178353.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_ilqes03", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "*edit:* [POEM]\n\nO cruel fate! Since when  \nFuel requirements must all
        be  \nSummed separately?!  \n\n\n    def req(m):\n        total = 0\n        while
        True:\n            m = m // 3 - 2\n            if m &lt;= 0:\n                break\n            total
        += m\n            if not second:\n                break\n        return total\n\n    return
        sum(req(d) for d in data)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;edit:&lt;/em&gt;
        [POEM]&lt;/p&gt;\n\n&lt;p&gt;O cruel fate! Since when&lt;br/&gt;\nFuel requirements
        must all be&lt;br/&gt;\nSummed separately?!  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        req(m):\n    total = 0\n    while True:\n        m = m // 3 - 2\n        if
        m &amp;lt;= 0:\n            break\n        total += m\n        if not second:\n            break\n    return
        total\n\nreturn sum(req(d) for d in data)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98hgh2/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98hgh2", "created":
        1575178353.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575178756.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98hpop", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SizableShrimp",
        "can_mod_post": false, "created_utc": 1575178441.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_12g4zu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java - 145/306\n\nI had a few mishaps that just wasted me time and couldn''t
        understand Part 2 for about 2 minutes. Regardless, I still think I did pretty
        good for myself. `lines` is just a List&lt;String&gt; that I will leave omitted.\n    \n    public
        class Day01 {\n        public static void main(String[] args) {\n            System.out.println(lines.stream()\n                .mapToInt(Integer::parseInt)\n                .map(i
        -&gt; i / 3 - 2)\n                .sum());\n        System.out.println(lines.stream()\n                .mapToInt(Integer::parseInt)\n                .map(i
        -&gt; getFuel(i, 0))\n                .sum());\n        }\n    \n        int
        getFuel(int i, int total) {\n            int result = i / 3 - 2;\n            if
        (result &lt; 0)\n                return total;\n            return getFuel(result,
        total + result);\n        }\n    }", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Java - 145/306&lt;/p&gt;\n\n&lt;p&gt;I had a few
        mishaps that just wasted me time and couldn&amp;#39;t understand Part 2 for
        about 2 minutes. Regardless, I still think I did pretty good for myself. &lt;code&gt;lines&lt;/code&gt;
        is just a List&amp;lt;String&amp;gt; that I will leave omitted.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        class Day01 {\n    public static void main(String[] args) {\n        System.out.println(lines.stream()\n            .mapToInt(Integer::parseInt)\n            .map(i
        -&amp;gt; i / 3 - 2)\n            .sum());\n    System.out.println(lines.stream()\n            .mapToInt(Integer::parseInt)\n            .map(i
        -&amp;gt; getFuel(i, 0))\n            .sum());\n    }\n\n    int getFuel(int
        i, int total) {\n        int result = i / 3 - 2;\n        if (result &amp;lt;
        0)\n            return total;\n        return getFuel(result, total + result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98hpop/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98hpop", "created":
        1575178441.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98jkld",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "alcatraz_escapee",
        "can_mod_post": false, "created_utc": 1575179090.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_ccw30bf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my [solution](https://topaz.github.io/paste/#XQAAAQACBgAAAAAAAAAEjGpywBmPxMRy8G+CkxfoWi0Ndkhx4m4DCM8YjNHSZWdinYiuZv9tgOa4rzpWClInncmEy5hhalviPagXU4ZiVY0g0nb2ZSaLOuMLyKjRqQ3eNnOnjEltDJFQdU90UmXYrkpx6zndHFuc/XQqMKus7mQPo9Z1ZxmDVfQa149ZP+sABG7sDYW1inrsL4t6uXV4zthbDaLTP6URznuoNuxWZMcgEHta97apUNtH0Jrp6ATkpdd2Jid0I9GhWOTLdEil8JR4Hu0NkJVYrThpjA+vfqA/Z8xpP98PGtcX7VoyMU324ytJm7ErTYak7J00m5t5uqed5kmac1uZoZNHC85vQlMCkWxOPWFcMoM3LYXbB00BVcP0gybXSzfnhgb9tmzwy+36fyebm5i8OIT1yTneR5EQDTLzhZo/tRkoo7Kr6nt8iv+nQD+c9rhWRJ0tZ3rBVQGAwimZikAlNC8d40lJ7CLTueR0BSc8JTryZ8KeNIGLLjuoU4lfKKnnpoIVTLMuI5T5V46tTM77GAHepyGJOTkgmhgCsA2efvoEossQr4Cy6EWTjG7nnuPMhqLjTKmJCuhTfs9ay5lcmKSVSzk2ddAgR5RLwOOdWcJOvhEdI+WhM27939Un1w5TAQcLzbu+17xFIyIwhMvnHvdewSDKg3NE3CHzd7THUzYKOeuqnO1LqoFbN3xtCcLfRV+N/KtAKgelEzJEDjV0f39T9XgiZa7IBRjXtQBc7/8pxSuCrg3lDTpvHwijGJJOTzUNEHw3BP8U97TjahQMnV0n3HK641tBm4TTwYnAQG7TV7Xgls4uqRcq+x+fR6yg7It56l0S2I2+DxgK5ZYtCUfncQu9kgtIdh0S8Q7ZSpLWQvVE1/Dwc8ofpSAB5vvT2gTNNs4IIp5jf9OX5fl21jyq8v4yp9Ho1Dki8cn/6+Ngjg==),
        implemented in Nios-II DE0 Assembly.\n\nI''m mostly doing this as an exercise
        for an exam I have coming up, but I''m interested how long I''ll be able to
        keep this up.\n\nI ran it with [this simulator](https://cpulator.01xz.net/?sys=nios-de0)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my &lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQACBgAAAAAAAAAEjGpywBmPxMRy8G+CkxfoWi0Ndkhx4m4DCM8YjNHSZWdinYiuZv9tgOa4rzpWClInncmEy5hhalviPagXU4ZiVY0g0nb2ZSaLOuMLyKjRqQ3eNnOnjEltDJFQdU90UmXYrkpx6zndHFuc/XQqMKus7mQPo9Z1ZxmDVfQa149ZP+sABG7sDYW1inrsL4t6uXV4zthbDaLTP6URznuoNuxWZMcgEHta97apUNtH0Jrp6ATkpdd2Jid0I9GhWOTLdEil8JR4Hu0NkJVYrThpjA+vfqA/Z8xpP98PGtcX7VoyMU324ytJm7ErTYak7J00m5t5uqed5kmac1uZoZNHC85vQlMCkWxOPWFcMoM3LYXbB00BVcP0gybXSzfnhgb9tmzwy+36fyebm5i8OIT1yTneR5EQDTLzhZo/tRkoo7Kr6nt8iv+nQD+c9rhWRJ0tZ3rBVQGAwimZikAlNC8d40lJ7CLTueR0BSc8JTryZ8KeNIGLLjuoU4lfKKnnpoIVTLMuI5T5V46tTM77GAHepyGJOTkgmhgCsA2efvoEossQr4Cy6EWTjG7nnuPMhqLjTKmJCuhTfs9ay5lcmKSVSzk2ddAgR5RLwOOdWcJOvhEdI+WhM27939Un1w5TAQcLzbu+17xFIyIwhMvnHvdewSDKg3NE3CHzd7THUzYKOeuqnO1LqoFbN3xtCcLfRV+N/KtAKgelEzJEDjV0f39T9XgiZa7IBRjXtQBc7/8pxSuCrg3lDTpvHwijGJJOTzUNEHw3BP8U97TjahQMnV0n3HK641tBm4TTwYnAQG7TV7Xgls4uqRcq+x+fR6yg7It56l0S2I2+DxgK5ZYtCUfncQu9kgtIdh0S8Q7ZSpLWQvVE1/Dwc8ofpSAB5vvT2gTNNs4IIp5jf9OX5fl21jyq8v4yp9Ho1Dki8cn/6+Ngjg==\"&gt;solution&lt;/a&gt;,
        implemented in Nios-II DE0 Assembly.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m mostly
        doing this as an exercise for an exam I have coming up, but I&amp;#39;m interested
        how long I&amp;#39;ll be able to keep this up.&lt;/p&gt;\n\n&lt;p&gt;I ran
        it with &lt;a href=\"https://cpulator.01xz.net/?sys=nios-de0\"&gt;this simulator&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98jkld/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98jkld", "created":
        1575179090.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f98l6kp", "id": "f98l6kp", "parent_id":
        "t1_f98jkld", "depth": 1, "children": ["f98l6kp"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98lsgx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rtbrsp",
        "can_mod_post": false, "created_utc": 1575179876.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_jyw3n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using AWK\n\nPart 1:\n\n    awk ''{f += int($0/3-2)} END{print f}'' input.txt\n\nPart
        2: (probably could have done this without recursion)\n\n    awk ''function
        c(x,y){x = int(x/3-2); return x&gt;0 ? c(x,x+y) : y}{f += c($0,0)} END{print
        f}'' input.txt", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using
        AWK&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;awk
        &amp;#39;{f += int($0/3-2)} END{print f}&amp;#39; input.txt\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2: (probably could have done this without recursion)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;awk
        &amp;#39;function c(x,y){x = int(x/3-2); return x&amp;gt;0 ? c(x,x+y) : y}{f
        += c($0,0)} END{print f}&amp;#39; input.txt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98lsgx/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98lsgx", "created":
        1575179876.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575201936.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9a1392", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "technikfischer",
        "can_mod_post": false, "created_utc": 1575197605.0, "send_replies": true,
        "parent_id": "t1_f98lsgx", "score": 2, "author_fullname": "t2_vvixf2d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution to part 1 is basically the same.\n\nSolution to part 2 without recursion,
        just a while-loop:\n\n    awk ''{m=int($0/3)-2; while(m &gt; 0) {fuel+=m;
        m=int(m/3)-2; }} END {print fuel}'' input.txt", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Solution to part 1 is basically the same.&lt;/p&gt;\n\n&lt;p&gt;Solution
        to part 2 without recursion, just a while-loop:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;awk
        &amp;#39;{m=int($0/3)-2; while(m &amp;gt; 0) {fuel+=m; m=int(m/3)-2; }} END
        {print fuel}&amp;#39; input.txt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a1392/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a1392", "created":
        1575197605.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98m85t",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "itsnotxhad",
        "can_mod_post": false, "created_utc": 1575180032.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_tyj1v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Racket:\n\n    (define (fuel mass)\n      (- (quotient mass 3) 2))\n\n    (define
        (part1 file)\n      (file-position file 0)\n      (for/sum ([line (in-port
        read-line file)])\n        (fuel (string-&gt;number line))))\n\n    (define
        (fuel-recursive mass)\n      (define (iter ans remaining)\n        (define
        new-fuel (fuel remaining))\n        (if (&lt;= new-fuel 0)\n            ans\n            (iter
        (+ ans new-fuel) new-fuel)))\n      (iter 0 mass))\n\n    (define (part2 file)\n      (file-position
        file 0)\n      (for/sum ([line (in-port read-line file)])\n        (fuel-recursive
        (string-&gt;number line))))\n\nPretty straightforward although I spent a mildly
        embarrassing amount of time tearing my hair out wondering why I was getting
        0 on part 2 because I forgot to either rewind the file or only read it once.
        Oops!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Racket:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(define
        (fuel mass)\n  (- (quotient mass 3) 2))\n\n(define (part1 file)\n  (file-position
        file 0)\n  (for/sum ([line (in-port read-line file)])\n    (fuel (string-&amp;gt;number
        line))))\n\n(define (fuel-recursive mass)\n  (define (iter ans remaining)\n    (define
        new-fuel (fuel remaining))\n    (if (&amp;lt;= new-fuel 0)\n        ans\n        (iter
        (+ ans new-fuel) new-fuel)))\n  (iter 0 mass))\n\n(define (part2 file)\n  (file-position
        file 0)\n  (for/sum ([line (in-port read-line file)])\n    (fuel-recursive
        (string-&amp;gt;number line))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Pretty
        straightforward although I spent a mildly embarrassing amount of time tearing
        my hair out wondering why I was getting 0 on part 2 because I forgot to either
        rewind the file or only read it once. Oops!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98m85t/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98m85t", "created": 1575180032.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 6, "name":
        "t1_f99x7m5", "id": "f99x7m5", "parent_id": "t1_f98m85t", "depth": 1, "children":
        ["f99x7m5", "f99jegc", "f9aatqr", "f9abroy"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98o7px",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Shadd518",
        "can_mod_post": false, "created_utc": 1575180745.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_1102yr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Late getting started so leaderboards are out of sight, but first year doing
        this while it''s happening so I''m excited :)\n\nAlso forgot \\`math.floor()\\`
        == \\`//\\` but whatever\n\n    import fileinput\n    import math\n    \n    lines
        = list(int(line) for line in fileinput.input(''1.txt''))\n        \n    def
        part1():\n         return sum((math.floor(line / 3 - 2) for line in lines))\n        \n    def
        part2():\n         total = 0\n         for line in lines:\n            more_fuel
        = True\n            fuel = line\n                while more_fuel:\n                    fuel_needed
        = math.floor(fuel / 3) - 2\n                    if fuel_needed &gt; 0:\n                        total
        += fuel_needed\n                        fuel = fuel_needed\n                    else:\n                        more_fuel
        = False\n         return total\n        \n    print(part1())\n    \n    print(part2())",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Late getting started
        so leaderboards are out of sight, but first year doing this while it&amp;#39;s
        happening so I&amp;#39;m excited :)&lt;/p&gt;\n\n&lt;p&gt;Also forgot `math.floor()`
        == `//` but whatever&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import fileinput\nimport
        math\n\nlines = list(int(line) for line in fileinput.input(&amp;#39;1.txt&amp;#39;))\n\ndef
        part1():\n     return sum((math.floor(line / 3 - 2) for line in lines))\n\ndef
        part2():\n     total = 0\n     for line in lines:\n        more_fuel = True\n        fuel
        = line\n            while more_fuel:\n                fuel_needed = math.floor(fuel
        / 3) - 2\n                if fuel_needed &amp;gt; 0:\n                    total
        += fuel_needed\n                    fuel = fuel_needed\n                else:\n                    more_fuel
        = False\n     return total\n\nprint(part1())\n\nprint(part2())\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98o7px/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98o7px", "created":
        1575180745.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98obua",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "johnboker",
        "can_mod_post": false, "created_utc": 1575180785.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_j9o9b", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My C# Solution](https://topaz.github.io/paste/#XQAAAQDKAwAAAAAAAAA6nMlWi076alCx9N1TtsVNiXecUoGeYT6aP6mR8mlULJpnBWlkXihEzH19W56CjS2i4+J08ijktzRvXoiYD0uBQ1f9T/4++i40DpTA4OeiewIewSKmc2x6JPbK9dsosdbiIBPMnThecn6THCluFznXog/3IQ/v08I4j9fAu5f1WEMN/S7X6DCyEG+mElO7rJb2Q/0Ov2ATjNpmzE8ZH9xQhTaDJ7G3jKzv6W0mEKsPjZ9cze645YXBDEE4ssKnKKNOKP6qb4hG7MaC53E1CXqzueoFnik7KvDoHA1vi+F2bFA70zgJcKE8qjVlDPdhDBuK1GnFtjBH1Sso79SVWeFAds0O0FNjtrUMpV1oPwHXz19KcCKcfY9qQjkB5u+S9+1qDhLR4Et53Fowvyi0tHeUr3ko+9rQ5t/fI4TAdZiCaVxGcnJWNpBfoIPKgR0yVxDQEmhzZ/D4bxuYg2vRilBuHsrEsP2k4Nd9xG8GFHeMFjwYqQOtBf3i1vn1/S6m4Q==)\n\nRecursive
        answer  \nTo a peculiar problem  \nAt a sluggish pace", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDKAwAAAAAAAAA6nMlWi076alCx9N1TtsVNiXecUoGeYT6aP6mR8mlULJpnBWlkXihEzH19W56CjS2i4+J08ijktzRvXoiYD0uBQ1f9T/4++i40DpTA4OeiewIewSKmc2x6JPbK9dsosdbiIBPMnThecn6THCluFznXog/3IQ/v08I4j9fAu5f1WEMN/S7X6DCyEG+mElO7rJb2Q/0Ov2ATjNpmzE8ZH9xQhTaDJ7G3jKzv6W0mEKsPjZ9cze645YXBDEE4ssKnKKNOKP6qb4hG7MaC53E1CXqzueoFnik7KvDoHA1vi+F2bFA70zgJcKE8qjVlDPdhDBuK1GnFtjBH1Sso79SVWeFAds0O0FNjtrUMpV1oPwHXz19KcCKcfY9qQjkB5u+S9+1qDhLR4Et53Fowvyi0tHeUr3ko+9rQ5t/fI4TAdZiCaVxGcnJWNpBfoIPKgR0yVxDQEmhzZ/D4bxuYg2vRilBuHsrEsP2k4Nd9xG8GFHeMFjwYqQOtBf3i1vn1/S6m4Q==\"&gt;My
        C# Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Recursive answer&lt;br/&gt;\nTo
        a peculiar problem&lt;br/&gt;\nAt a sluggish pace&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98obua/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98obua", "created":
        1575180785.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98uxjf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jesperes",
        "can_mod_post": false, "created_utc": 1575183239.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_16fv2n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "In a possibly futile attempt to do the one-language-per-day challenge, here
        is day 1 in awk: [https://github.com/jesperes/adventofcode/blob/master/olpd\\_2019/day01/day01.awk](https://github.com/jesperes/adventofcode/blob/master/olpd_2019/day01/day01.awk).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In a possibly futile
        attempt to do the one-language-per-day challenge, here is day 1 in awk: &lt;a
        href=\"https://github.com/jesperes/adventofcode/blob/master/olpd_2019/day01/day01.awk\"&gt;https://github.com/jesperes/adventofcode/blob/master/olpd_2019/day01/day01.awk&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98uxjf/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98uxjf", "created":
        1575183239.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98vvw5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "coolshaurya",
        "can_mod_post": false, "created_utc": 1575183604.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_1adr7ng6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust \n\n\n    fn part_a(input: Vec&lt;u32&gt;) {\n        let output: u32
        = input.iter().map(|val| (val - (val % 3)) / 3 - 2).sum();\n        println!(\"{:?}\",
        output);\n    }\n    \n    fn part_b(input: Vec&lt;u32&gt;) {\n        let
        output: u32 = input.iter().map(|val| rec_fuel_calc(*val)).sum();\n        println!(\"{:?}\",
        output);\n    }\n    \n    fn rec_fuel_calc(mass: u32) -&gt; u32 {\n        let
        answer = ((mass - (mass % 3)) / 3) - 2;\n        if answer &lt; 9 {\n            return
        answer;\n        } else {\n            return answer + rec_fuel_calc(answer);\n        }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        part_a(input: Vec&amp;lt;u32&amp;gt;) {\n    let output: u32 = input.iter().map(|val|
        (val - (val % 3)) / 3 - 2).sum();\n    println!(&amp;quot;{:?}&amp;quot;,
        output);\n}\n\nfn part_b(input: Vec&amp;lt;u32&amp;gt;) {\n    let output:
        u32 = input.iter().map(|val| rec_fuel_calc(*val)).sum();\n    println!(&amp;quot;{:?}&amp;quot;,
        output);\n}\n\nfn rec_fuel_calc(mass: u32) -&amp;gt; u32 {\n    let answer
        = ((mass - (mass % 3)) / 3) - 2;\n    if answer &amp;lt; 9 {\n        return
        answer;\n    } else {\n        return answer + rec_fuel_calc(answer);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98vvw5/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98vvw5", "created":
        1575183604.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f98xnxs", "id": "f98xnxs", "parent_id":
        "t1_f98vvw5", "depth": 1, "children": ["f98xnxs"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98xwka",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dan_144",
        "can_mod_post": false, "created_utc": 1575184381.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_828dk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python, 66/15: https://github.com/dan144/aoc-2019/blob/master/1.py\n\nAlready
        have more points on the leaderboard than last year, so I''m stoked.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python, 66/15: &lt;a href=\"https://github.com/dan144/aoc-2019/blob/master/1.py\"&gt;https://github.com/dan144/aoc-2019/blob/master/1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Already
        have more points on the leaderboard than last year, so I&amp;#39;m stoked.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98xwka/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98xwka", "created":
        1575184381.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f993cfk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "iamagiantnerd",
        "can_mod_post": false, "created_utc": 1575186474.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_4n6rx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution in Go:\n\n[https://github.com/davidaayers/advent-of-code-2019/blob/master/day01/day01.go](https://github.com/davidaayers/advent-of-code-2019/blob/master/day01/day01.go)
        \n\nForgot to check negative for part 2. Just learning golang as part of this,
        so I may be doing it wrong :)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Solution in Go:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/davidaayers/advent-of-code-2019/blob/master/day01/day01.go\"&gt;https://github.com/davidaayers/advent-of-code-2019/blob/master/day01/day01.go&lt;/a&gt;
        &lt;/p&gt;\n\n&lt;p&gt;Forgot to check negative for part 2. Just learning
        golang as part of this, so I may be doing it wrong :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f993cfk/",
        "subreddit_type": "public", "locked": false, "name": "t1_f993cfk", "created":
        1575186474.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575188666.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f998ti6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "raevnos",
        "can_mod_post": false, "created_utc": 1575188445.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_3995k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using tcl:\n\n    #!/usr/bin/tclsh\n    \n    proc calc_fuel {mass} { return
        [expr {$mass / 3 - 2}] }\n    \n    set total1 0\n    set total2 0\n    \n    while
        {[gets stdin mass] &gt;= 0} {\n        set fuel [calc_fuel $mass]\n        incr
        total1 $fuel\n        for {set totalfuel 0} {$fuel &gt; 0} {set fuel [calc_fuel
        $fuel]} {\n            incr totalfuel $fuel\n        }\n        incr total2
        $totalfuel\n    }\n    \n    puts \"Part 1: $total1\"\n    puts \"Part 2:
        $total2\"", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using
        tcl:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/tclsh\n\nproc calc_fuel
        {mass} { return [expr {$mass / 3 - 2}] }\n\nset total1 0\nset total2 0\n\nwhile
        {[gets stdin mass] &amp;gt;= 0} {\n    set fuel [calc_fuel $mass]\n    incr
        total1 $fuel\n    for {set totalfuel 0} {$fuel &amp;gt; 0} {set fuel [calc_fuel
        $fuel]} {\n        incr totalfuel $fuel\n    }\n    incr total2 $totalfuel\n}\n\nputs
        &amp;quot;Part 1: $total1&amp;quot;\nputs &amp;quot;Part 2: $total2&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f998ti6/",
        "subreddit_type": "public", "locked": false, "name": "t1_f998ti6", "created":
        1575188445.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575192795.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99gw7s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jrspurr",
        "can_mod_post": false, "created_utc": 1575191066.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_3mvj7hk6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### Haskell\n\n    import Data.List\n    \n    main :: IO ()\n    main =
        do\n      contents &lt;- readFile \"day1.txt\"\n      let input = map read
        (lines contents)\n      let part1 = sum (map fuel input)\n      let part2
        = sum (map totalFuel input)\n      print part1\n      print part2\n    \n    fuel
        :: Int -&gt; Int\n    fuel mass = mass `div` 3 - 2\n    \n    totalFuel ::
        Int -&gt; Int\n    totalFuel = sum \n              . tail \n              .
        takeWhile (&gt; 0) \n              . iterate fuel\n\n### Raku\n\n    sub fuel
        ($mass) {\n        $mass div 3 - 2\n    }\n    \n    sub total-fuel ($mass)
        { \n        sum (fuel($mass), &amp;fuel ...^ * \u2264 0)\n    }\n    \n    my
        @masses = slurp(\"day1.txt\").lines\u00bb.Int;\n    say sum @masses.map: &amp;fuel;\n    say
        sum @masses.map: &amp;total-fuel;\n\n### Nim\nI''m very new to nim so I''m
        sure this might be able to be made more elegant\n\n    import strutils\n    \n    proc
        fuel(mass: int): int =\n      return mass div 3 - 2\n    \n    proc totalFuel(mass:
        int): int =\n      var mass = fuel(mass)\n      while mass &gt; 0:    \n        result
        += mass\n        mass = fuel(mass)\n    \n    var \n      part1 = 0\n      part2
        = 0\n    \n    for line in lines(\"day1.txt\"):\n      let mass = parseInt(line)\n      part1
        += fuel(mass)\n      part2 += totalFuel(mass)\n    \n    echo part1\n    echo
        part2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h3&gt;Haskell&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Data.List\n\nmain :: IO ()\nmain = do\n  contents &amp;lt;- readFile &amp;quot;day1.txt&amp;quot;\n  let
        input = map read (lines contents)\n  let part1 = sum (map fuel input)\n  let
        part2 = sum (map totalFuel input)\n  print part1\n  print part2\n\nfuel ::
        Int -&amp;gt; Int\nfuel mass = mass `div` 3 - 2\n\ntotalFuel :: Int -&amp;gt;
        Int\ntotalFuel = sum \n          . tail \n          . takeWhile (&amp;gt;
        0) \n          . iterate fuel\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Raku&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;sub
        fuel ($mass) {\n    $mass div 3 - 2\n}\n\nsub total-fuel ($mass) { \n    sum
        (fuel($mass), &amp;amp;fuel ...^ * \u2264 0)\n}\n\nmy @masses = slurp(&amp;quot;day1.txt&amp;quot;).lines\u00bb.Int;\nsay
        sum @masses.map: &amp;amp;fuel;\nsay sum @masses.map: &amp;amp;total-fuel;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Nim&lt;/h3&gt;\n\n&lt;p&gt;I&amp;#39;m
        very new to nim so I&amp;#39;m sure this might be able to be made more elegant&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        strutils\n\nproc fuel(mass: int): int =\n  return mass div 3 - 2\n\nproc totalFuel(mass:
        int): int =\n  var mass = fuel(mass)\n  while mass &amp;gt; 0:    \n    result
        += mass\n    mass = fuel(mass)\n\nvar \n  part1 = 0\n  part2 = 0\n\nfor line
        in lines(&amp;quot;day1.txt&amp;quot;):\n  let mass = parseInt(line)\n  part1
        += fuel(mass)\n  part2 += totalFuel(mass)\n\necho part1\necho part2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99gw7s/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99gw7s", "created":
        1575191066.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9a7fnr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f99gw7s", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9a7fnr", "collapsed": true, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a7fnr/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575199523.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575199523.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9dq820", "id": "f9dq820", "parent_id":
        "t1_f9a7fnr", "depth": 2, "children": ["f9dq820", "f9dpt7p"]}}, {"kind": "more",
        "data": {"count": 1, "name": "t1_f9ey03k", "id": "f9ey03k", "parent_id": "t1_f99gw7s",
        "depth": 1, "children": ["f9ey03k"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99h2ul",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "musifter",
        "can_mod_post": false, "created_utc": 1575191129.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_cwt0kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I like that this year''s day 1 was also appropriate to do in dc (both parts
        this time), with a little sed manipulation on the command line to turn the
        input into part of the code (ie. % sed -e''s/$/lFx+p/'' input | cat part2.dc
        - | dc).\n\n    0k\n    [\n        [ s. q ] sX\n        0 sf\n        [\n            3/
        2-\n            d 0 !&lt;X\n            d lf+ sf\n            lLx\n        ]
        sL\n        lLx\n        lf\n    ] sF\n    0", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I like that this year&amp;#39;s day 1 was also appropriate
        to do in dc (both parts this time), with a little sed manipulation on the
        command line to turn the input into part of the code (ie. % sed -e&amp;#39;s/$/lFx+p/&amp;#39;
        input | cat part2.dc - | dc).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0k\n[\n    [
        s. q ] sX\n    0 sf\n    [\n        3/ 2-\n        d 0 !&amp;lt;X\n        d
        lf+ sf\n        lLx\n    ] sL\n    lLx\n    lf\n] sF\n0\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99h2ul/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99h2ul", "created":
        1575191129.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_f9fe6ly", "id": "f9fe6ly", "parent_id":
        "t1_f99h2ul", "depth": 1, "children": ["f9fe6ly", "f9fenz8"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99n2eq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "icendoan",
        "can_mod_post": false, "created_utc": 1575193019.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_bnk0w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#k\nno leaderboard (I was asleep)\n\n    fuel: { 0 | (_ x % 3) - 2 }\n    p1:
        +/ fuel'' `i $ 0: `1.input\n    p2: +/ +/'' (1 _ {x &gt; 0} fuel\\ )'' `i
        $ 0: `1.input", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;k&lt;/h1&gt;\n\n&lt;p&gt;no
        leaderboard (I was asleep)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fuel: { 0 |
        (_ x % 3) - 2 }\np1: +/ fuel&amp;#39; `i $ 0: `1.input\np2: +/ +/&amp;#39;
        (1 _ {x &amp;gt; 0} fuel\\ )&amp;#39; `i $ 0: `1.input\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99n2eq/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99n2eq", "created":
        1575193019.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575235581.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99qstk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WrinklyTidbits",
        "can_mod_post": false, "created_utc": 1575194011.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_xs1dx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#J\n\nHaiku:\n&gt;haikus are simple:\n\n&gt;first five then seven then five\n\n&gt;count
        each syllable\n\nCode:\n```\nfuel1=._2+&lt;.&amp;(%&amp;3)\nd1p1=.+/fuel1
        fifty\nfuel2=.1}.((#~(0&amp;&lt;))@:fuel1)^:a:\nd1p2=.+/,fuel2 fifty                        NB.
        d1p2=.+/+/fuel2 fifty\n```\n\nWhat was nice is being able to see the output
        of the second part:\n```\nfuel2 fifty\n\n33235 45620 32367 36083 19167 43238
        46627 30660 18153 43074 19705 32461 19167 23560 24242 45893 41294 17826 23954
        48270 27950 43854 22966 22214 41462 19986 26849 31291 18749 25425 42457 36806
        19969 25429 27294 29660 44179 23472 41337 40705 17741 49345 3626...\n11076
        15204 10787 12025  6387 14410 15540 10218  6049 14356  6566 10818  6387  7851  8078
        15295 13762  5940  7982 16088  9314 14616  7653  7402 13818  6660  8947 10428  6247  8473
        14150 12266  6654  8474  9096  9884 14724  7822 13777 13566  5911 16446 1208...\n
        3690  5066  3593  4006  2127  4801  5178  3404  2014  4783  2186  3604  2127  2615  2690  5096  4585  1978  2658  5360  3102  4870  2549  2465  4604  2218  2980  3474  2080  2822  4714  4086  2216  2822  3030  3292  4906  2605  4590  4520  1968  5480  402...\n
        1228  1686  1195  1333   707  1598  1724  1132   669  1592   726  1199   707   869   894  1696  1526   657   884  1784  1032  1621   847   819  1532   737   991  1156   691   938  1569  1360   736   938  1008  1095  1633   866  1528  1504   654  1824  134...\n  407   560   396   442   233   530   572   375   221   528   240   397   233   287   296   563   506   217   292   592   342   538   280   271   508   243   328   383   228   310   521   451   243   310   334   363   542   286   507   499   216   606   44...\n  133   184   130   145    75   174   188   123    71   174    78   130    75    93    96   185   166    70    95   195   112   177    91    88   167    79   107   125    74   101   171   148    79   101   109   119   178    93   167   164    70   200   14...\n   42    59    41    46    23    56    60    39    21    56    24    41    23    29    30    59    53    21    29    63    35    57    28    27    53    24    33    39    22    31    55    47    24    31    34    37    57    29    53    52    21    64    4...\n   12    17    11    13     5    16    18    11     5    16     6    11     5     7     8    17    15     5     7    19     9    17     7     7    15     6     9    11     5     8    16    13     6     8     9    10    17     7    15    15     5    19    1...\n    2     3     1     2     3     4     1     3     1     3     3     4     1     3     3     1     1     3     2     1     1     3     3     3     4     2     1     3     3     1     1     1     2     4     3     4     2     4     3     2     3     1     ...\n    0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     ...\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;J&lt;/h1&gt;\n\n&lt;p&gt;Haiku:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;haikus
        are simple:&lt;/p&gt;\n\n&lt;p&gt;first five then seven then five&lt;/p&gt;\n\n&lt;p&gt;count
        each syllable&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Code:\n&lt;code&gt;\nfuel1=._2+&amp;lt;.&amp;amp;(%&amp;amp;3)\nd1p1=.+/fuel1
        fifty\nfuel2=.1}.((#~(0&amp;amp;&amp;lt;))@:fuel1)^:a:\nd1p2=.+/,fuel2 fifty                        NB.
        d1p2=.+/+/fuel2 fifty\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;What was nice is
        being able to see the output of the second part:\n```\nfuel2 fifty&lt;/p&gt;\n\n&lt;p&gt;33235
        45620 32367 36083 19167 43238 46627 30660 18153 43074 19705 32461 19167 23560
        24242 45893 41294 17826 23954 48270 27950 43854 22966 22214 41462 19986 26849
        31291 18749 25425 42457 36806 19969 25429 27294 29660 44179 23472 41337 40705
        17741 49345 3626...\n11076 15204 10787 12025  6387 14410 15540 10218  6049
        14356  6566 10818  6387  7851  8078 15295 13762  5940  7982 16088  9314 14616  7653  7402
        13818  6660  8947 10428  6247  8473 14150 12266  6654  8474  9096  9884 14724  7822
        13777 13566  5911 16446 1208...\n 3690  5066  3593  4006  2127  4801  5178  3404  2014  4783  2186  3604  2127  2615  2690  5096  4585  1978  2658  5360  3102  4870  2549  2465  4604  2218  2980  3474  2080  2822  4714  4086  2216  2822  3030  3292  4906  2605  4590  4520  1968  5480  402...\n
        1228  1686  1195  1333   707  1598  1724  1132   669  1592   726  1199   707   869   894  1696  1526   657   884  1784  1032  1621   847   819  1532   737   991  1156   691   938  1569  1360   736   938  1008  1095  1633   866  1528  1504   654  1824  134...\n  407   560   396   442   233   530   572   375   221   528   240   397   233   287   296   563   506   217   292   592   342   538   280   271   508   243   328   383   228   310   521   451   243   310   334   363   542   286   507   499   216   606   44...\n  133   184   130   145    75   174   188   123    71   174    78   130    75    93    96   185   166    70    95   195   112   177    91    88   167    79   107   125    74   101   171   148    79   101   109   119   178    93   167   164    70   200   14...\n   42    59    41    46    23    56    60    39    21    56    24    41    23    29    30    59    53    21    29    63    35    57    28    27    53    24    33    39    22    31    55    47    24    31    34    37    57    29    53    52    21    64    4...\n   12    17    11    13     5    16    18    11     5    16     6    11     5     7     8    17    15     5     7    19     9    17     7     7    15     6     9    11     5     8    16    13     6     8     9    10    17     7    15    15     5    19    1...\n    2     3     1     2     3     4     1     3     1     3     3     4     1     3     3     1     1     3     2     1     1     3     3     3     4     2     1     3     3     1     1     1     2     4     3     4     2     4     3     2     3     1     ...\n    0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     ...\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99qstk/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99qstk", "created":
        1575194011.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9cws0x", "id": "f9cws0x", "parent_id":
        "t1_f99qstk", "depth": 1, "children": ["f9cws0x"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99qys1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f99qys1", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99qys1/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575194069.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575194069.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99r4u2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "swifterrr",
        "can_mod_post": false, "created_utc": 1575194140.0, "send_replies": true,
        "parent_id": "t1_f99qys1", "score": 2, "author_fullname": "t2_i7gc2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Just realised how much quicker some people''s solutions are -- wow! I need
        to learn how to use list comprehensions better..", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Just realised how much quicker some people&amp;#39;s
        solutions are -- wow! I need to learn how to use list comprehensions better..&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99r4u2/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99r4u2", "created":
        1575194140.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9aajrn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "setapoux",
        "can_mod_post": false, "created_utc": 1575200467.0, "send_replies": true,
        "parent_id": "t1_f99r4u2", "score": 2, "author_fullname": "t2_19woxv7j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This is due to massive ammount of floating point operations... use \"integer
        division operator\"  fuel=mass//3-2", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;This is due to massive ammount of floating point
        operations... use &amp;quot;integer division operator&amp;quot;  fuel=mass//3-2&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9aajrn/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9aajrn", "created":
        1575200467.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575195852.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99rbhn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Solesurviv",
        "can_mod_post": false, "created_utc": 1575194217.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_wpg3n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#Python 3 Solution\nfuel.txt is a file containing the inputs, this code turns
        them into a list then works the sum out from there.\n\n*Part 1*\n\n    import
        math , csv , os\n    thisFolder = os.path.dirname(os.path.abspath(__file__))\n    myFile
        = os.path.join(thisFolder, \"fuel.txt\")\n\n    def fuelRequired(mass):\n        return
        mass // 3 - 2\n    \n    def sumOfFuel(masses):\n        total = 0\n        for
        i in masses:\n            newi = fuelRequired(int(i))\n            total =
        total + newi\n        return total\n    \n    def getFuel():\n        fuelMasses
        = []\n        with open(myFile, \"r\") as file:\n            fileList = file.readlines()\n            for
        i in fileList:\n                i = i.strip(\"\\n\")\n                fuelMasses.append(i)\n        return
        fuelMasses\n    \n    print(str(sumOfFuel(getFuel())))\n\n*Part 2*\n\n    def
        sumOfFuelForFuel(mass):\n        fuel = fuelRequired(mass)\n        if fuel
        &lt;= 0:\n            return 0\n        elif fuel &gt; 0:\n            i =
        fuel + sumOfFuelForFuel(fuel)\n            return i\n        else:\n            print(\"Error
        in Sumoffuel2\")\n    \n    def sumOfSum(masses):\n        sum = 0\n        for
        i in masses:\n            sum = sum + sumOfFuelForFuel(int(i))\n        return
        sum\n    \n    print(sumOfSum(getFuel()))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Python 3 Solution&lt;/h1&gt;\n\n&lt;p&gt;fuel.txt
        is a file containing the inputs, this code turns them into a list then works
        the sum out from there.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Part 1&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        math , csv , os\nthisFolder = os.path.dirname(os.path.abspath(__file__))\nmyFile
        = os.path.join(thisFolder, &amp;quot;fuel.txt&amp;quot;)\n\ndef fuelRequired(mass):\n    return
        mass // 3 - 2\n\ndef sumOfFuel(masses):\n    total = 0\n    for i in masses:\n        newi
        = fuelRequired(int(i))\n        total = total + newi\n    return total\n\ndef
        getFuel():\n    fuelMasses = []\n    with open(myFile, &amp;quot;r&amp;quot;)
        as file:\n        fileList = file.readlines()\n        for i in fileList:\n            i
        = i.strip(&amp;quot;\\n&amp;quot;)\n            fuelMasses.append(i)\n    return
        fuelMasses\n\nprint(str(sumOfFuel(getFuel())))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Part
        2&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def sumOfFuelForFuel(mass):\n    fuel
        = fuelRequired(mass)\n    if fuel &amp;lt;= 0:\n        return 0\n    elif
        fuel &amp;gt; 0:\n        i = fuel + sumOfFuelForFuel(fuel)\n        return
        i\n    else:\n        print(&amp;quot;Error in Sumoffuel2&amp;quot;)\n\ndef
        sumOfSum(masses):\n    sum = 0\n    for i in masses:\n        sum = sum +
        sumOfFuelForFuel(int(i))\n    return sum\n\nprint(sumOfSum(getFuel()))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99rbhn/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99rbhn", "created":
        1575194217.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99sbxk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "drakmaniso",
        "can_mod_post": false, "created_utc": 1575194601.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_78thq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my naive solution in Haskell. It''s insanely long compared to the
        other solutions posted, but I''m still discovering the language!\n\nhttps://github.com/drakmaniso/adventofcode/blob/master/2019/day01/main.hs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my naive
        solution in Haskell. It&amp;#39;s insanely long compared to the other solutions
        posted, but I&amp;#39;m still discovering the language!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/drakmaniso/adventofcode/blob/master/2019/day01/main.hs\"&gt;https://github.com/drakmaniso/adventofcode/blob/master/2019/day01/main.hs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99sbxk/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99sbxk", "created":
        1575194601.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575195926.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99uxjy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "if0nz",
        "can_mod_post": false, "created_utc": 1575195683.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_37e9ty7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Santa needs help \n\nI need coffee \n\nHere is some Java\n\nJava solution\n\n    public
        static void part1(List&lt;Long&gt; modules) throws URISyntaxException, IOException
        {\n        var s = modules.parallelStream().mapToLong(m -&gt; ((long)m/3)-2).sum();
        \n        System.out.println(s); \n    }\n    \n    public static void part2(List&lt;Long&gt;
        modules) throws URISyntaxException, IOException { \n        var s = modules.parallelStream().mapToLong(m
        -&gt; recursiveFuel(m)).sum(); \n        System.out.println(s); \n    }\n\n    public
        static long recursiveFuel(long mass) { \n        return mass &lt; 9 ? 0 :
        ((long)mass/3)-2+recursiveFuel(((long)mass/3-2));\n    }", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Santa needs help &lt;/p&gt;\n\n&lt;p&gt;I
        need coffee &lt;/p&gt;\n\n&lt;p&gt;Here is some Java&lt;/p&gt;\n\n&lt;p&gt;Java
        solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public static void part1(List&amp;lt;Long&amp;gt;
        modules) throws URISyntaxException, IOException {\n    var s = modules.parallelStream().mapToLong(m
        -&amp;gt; ((long)m/3)-2).sum(); \n    System.out.println(s); \n}\n\npublic
        static void part2(List&amp;lt;Long&amp;gt; modules) throws URISyntaxException,
        IOException { \n    var s = modules.parallelStream().mapToLong(m -&amp;gt;
        recursiveFuel(m)).sum(); \n    System.out.println(s); \n}\n\npublic static
        long recursiveFuel(long mass) { \n    return mass &amp;lt; 9 ? 0 : ((long)mass/3)-2+recursiveFuel(((long)mass/3-2));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99uxjy/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99uxjy", "created":
        1575195683.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9avsc9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "spin81",
        "can_mod_post": false, "created_utc": 1575206888.0, "send_replies": true,
        "parent_id": "t1_f99uxjy", "score": 2, "author_fullname": "t2_dqdec", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hey, at the risk of sounding like a pedant and missing a joke, the second
        line of a haiku must be seven syllables.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Hey, at the risk of sounding like a pedant and missing
        a joke, the second line of a haiku must be seven syllables.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9avsc9/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9avsc9", "created":
        1575206888.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9cp0b9", "id": "f9cp0b9", "parent_id":
        "t1_f9avsc9", "depth": 2, "children": ["f9cp0b9"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_f9afocr", "id": "f9afocr", "parent_id": "t1_f99uxjy",
        "depth": 1, "children": ["f9afocr"]}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_e4axxe", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "f99w9q2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_e4axxe", "score": 2, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_f99w9q2", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99w9q2/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575196084.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575196084.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9ep75l", "id": "f9ep75l", "parent_id":
        "t1_f99w9q2", "depth": 1, "children": ["f9ep75l"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99yu1r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aarroyoc",
        "can_mod_post": false, "created_utc": 1575196910.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_ye9mf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "(SWI) Prolog:\n\n```\nfile_to_lines(Path, Lines) :-\n    open(Path, read,
        File),\n    read_string(File, _, F),\n    split_string(F, \"\\n\", \"\\n\",
        Lines).\n\nstring_to_number(S,N) :- atom_codes(S, C), number_codes(N, C).\nmap_to_numbers(XS,
        YS) :- maplist(string_to_number, XS, YS).\n\nfuel(In, Out) :-\n    X is div(In,3),\n    Y
        is X-2,\n    Y &gt; 0,\n    Out is Y.\n\nfuel(_In, Out) :-\n    Out is 0.
        \n\nfuel2(In, Out) :-\n    fuel(In, X),\n    X &gt; 0,\n    fuel2(X, Y),\n    Out
        is X + Y.\n\nfuel2(In, Out) :-\n    fuel(In, X),\n    X =&lt; 0,\n    Out
        is X.\n\n\n\nmain :-\n    file_to_lines(\"input\", Lines),\n    map_to_numbers(Lines,
        Numbers),\n    maplist(fuel2, Numbers, Out),\n    sum_list(Out, Sum),\n    write(Sum).\n\n\n:-
        main.\n```\n\nFor part1, change fuel2 to fuel in maplist", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;(SWI) Prolog:&lt;/p&gt;\n\n&lt;p&gt;```\nfile_to_lines(Path,
        Lines) :-\n    open(Path, read, File),\n    read_string(File, _, F),\n    split_string(F,
        &amp;quot;\\n&amp;quot;, &amp;quot;\\n&amp;quot;, Lines).&lt;/p&gt;\n\n&lt;p&gt;string_to_number(S,N)
        :- atom_codes(S, C), number_codes(N, C).\nmap_to_numbers(XS, YS) :- maplist(string_to_number,
        XS, YS).&lt;/p&gt;\n\n&lt;p&gt;fuel(In, Out) :-\n    X is div(In,3),\n    Y
        is X-2,\n    Y &amp;gt; 0,\n    Out is Y.&lt;/p&gt;\n\n&lt;p&gt;fuel(_In,
        Out) :-\n    Out is 0. &lt;/p&gt;\n\n&lt;p&gt;fuel2(In, Out) :-\n    fuel(In,
        X),\n    X &amp;gt; 0,\n    fuel2(X, Y),\n    Out is X + Y.&lt;/p&gt;\n\n&lt;p&gt;fuel2(In,
        Out) :-\n    fuel(In, X),\n    X =&amp;lt; 0,\n    Out is X.&lt;/p&gt;\n\n&lt;p&gt;main
        :-\n    file_to_lines(&amp;quot;input&amp;quot;, Lines),\n    map_to_numbers(Lines,
        Numbers),\n    maplist(fuel2, Numbers, Out),\n    sum_list(Out, Sum),\n    write(Sum).&lt;/p&gt;\n\n&lt;p&gt;:-
        main.\n```&lt;/p&gt;\n\n&lt;p&gt;For part1, change fuel2 to fuel in maplist&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99yu1r/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99yu1r", "created":
        1575196910.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a3x1j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "reini1305",
        "can_mod_post": false, "created_utc": 1575198378.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_i12k8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "As every year, I''ll try to solve AOC in Python3. This year I also want to
        test how long the Numworks calculator can keep up. It uses Micropython 1.11
        and is therefore compatible with Python 3.4. Here is [day one](https://workshop.numworks.com/python/christian-reinbacher/aoc_2019_1).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As every year, I&amp;#39;ll
        try to solve AOC in Python3. This year I also want to test how long the Numworks
        calculator can keep up. It uses Micropython 1.11 and is therefore compatible
        with Python 3.4. Here is &lt;a href=\"https://workshop.numworks.com/python/christian-reinbacher/aoc_2019_1\"&gt;day
        one&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a3x1j/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a3x1j", "created":
        1575198378.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a4wfk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "voiceless_void",
        "can_mod_post": false, "created_utc": 1575198765.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_179x8uqv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++ with range-v3:\n\n    #include \"range/v3/numeric/accumulate.hpp\"\n    #include
        \"range/v3/view/istream.hpp\"\n    #include \"range/v3/view/take_while.hpp\"\n    #include
        \"range/v3/view/transform.hpp\"\n    \n    #include &lt;istream&gt;\n    #include
        &lt;cmath&gt;\n    \n    template &lt;int (*calc)(int)&gt;\n    int solve(
        std::istream&amp; input )\n    {\n      auto fuelPerModule = ranges::istream&lt;int&gt;(
        input ) | ranges::views::transform( calc );\n      return ranges::accumulate(
        fuelPerModule, 0 );\n    }\n    \n    int calcFuel( const int mass )\n    {\n      return
        static_cast&lt;int&gt;( floor( mass / 3 ) - 2 );\n    }\n    \n    int calcFuelRecursive(
        const int mass )\n    {\n      auto fuelSeries = AoC::generate_range( mass,
        &amp;calcFuel ) | ranges::views::take_while( []( const auto&amp; m ) { return
        m &gt; 0; });\n      return ranges::accumulate( fuelSeries, 0 );\n    }\n    \n    int
        solve_1( std::istream&amp; input )\n    {\n      return solve&lt;&amp;calcFuel&gt;(
        input );\n    }\n    \n    int solve_2( std::istream&amp; input )\n    {\n      return
        solve&lt;&amp;calcFuelRecursive&gt;( input );\n    }\n    \n    // https://github.com/voivoid/advent-of-code/blob/master/problems/src/2019/problem_01.cpp",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++ with range-v3:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;quot;range/v3/numeric/accumulate.hpp&amp;quot;\n#include &amp;quot;range/v3/view/istream.hpp&amp;quot;\n#include
        &amp;quot;range/v3/view/take_while.hpp&amp;quot;\n#include &amp;quot;range/v3/view/transform.hpp&amp;quot;\n\n#include
        &amp;lt;istream&amp;gt;\n#include &amp;lt;cmath&amp;gt;\n\ntemplate &amp;lt;int
        (*calc)(int)&amp;gt;\nint solve( std::istream&amp;amp; input )\n{\n  auto
        fuelPerModule = ranges::istream&amp;lt;int&amp;gt;( input ) | ranges::views::transform(
        calc );\n  return ranges::accumulate( fuelPerModule, 0 );\n}\n\nint calcFuel(
        const int mass )\n{\n  return static_cast&amp;lt;int&amp;gt;( floor( mass
        / 3 ) - 2 );\n}\n\nint calcFuelRecursive( const int mass )\n{\n  auto fuelSeries
        = AoC::generate_range( mass, &amp;amp;calcFuel ) | ranges::views::take_while(
        []( const auto&amp;amp; m ) { return m &amp;gt; 0; });\n  return ranges::accumulate(
        fuelSeries, 0 );\n}\n\nint solve_1( std::istream&amp;amp; input )\n{\n  return
        solve&amp;lt;&amp;amp;calcFuel&amp;gt;( input );\n}\n\nint solve_2( std::istream&amp;amp;
        input )\n{\n  return solve&amp;lt;&amp;amp;calcFuelRecursive&amp;gt;( input
        );\n}\n\n// https://github.com/voivoid/advent-of-code/blob/master/problems/src/2019/problem_01.cpp\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a4wfk/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a4wfk", "created":
        1575198765.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a7x50",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jump_Man_Mario",
        "can_mod_post": false, "created_utc": 1575199722.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_3f6vuzv7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First year doing it and I''m going to use python 3\nSo here''s my solution
        (it might [probably will] be a bit long winded):\nhttps://topaz.github.io/paste/#XQAAAQApAwAAAAAAAAARlQkGk8+ekF1KoqBvoqrxh8pFEnF1Lznu2Y7QwG3bVdGYWtITgyS7xAns6seickoo+WfmOPOW/KeWD7WpDzFR2mso5F+czW0OzYuO7CiX7VrCVkGyBHMdbpZ7YkTeL3IUKG8YLmE3RnubEhNsPw5wuD1tTwshOWADv9B5wMbbtnB6muNrODyKr6hgzz0LdKMTWXyOyRajpm/dkYjgF6m8l4Xjc4OOPjwNAFUIPyigFrEeCwok0UbwFZIocxrmQwTUW89+QrjzDTlihRpGBqY+/2Gj816oqmP11UPEKpDxdCkJ2YQqM7er9pbRNIL9p97D4RVKQBaEWBBYst6zS/xWJeDn+pI4gdLxm79rnSE3dXyv4yRqyxlFZjp/qAiRbaPSKVBGQnWO2GowTguZgVaTWzAG7a4SBbYXMoAS16y6NHvmbzfjtW1NVEHuEJfFk8TYfVIu5Ogvnp+NH5AF49i+5kl5prYqXv7xOaQ=",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First year doing it
        and I&amp;#39;m going to use python 3\nSo here&amp;#39;s my solution (it might
        [probably will] be a bit long winded):\n&lt;a href=\"https://topaz.github.io/paste/#XQAAAQApAwAAAAAAAAARlQkGk8+ekF1KoqBvoqrxh8pFEnF1Lznu2Y7QwG3bVdGYWtITgyS7xAns6seickoo+WfmOPOW/KeWD7WpDzFR2mso5F+czW0OzYuO7CiX7VrCVkGyBHMdbpZ7YkTeL3IUKG8YLmE3RnubEhNsPw5wuD1tTwshOWADv9B5wMbbtnB6muNrODyKr6hgzz0LdKMTWXyOyRajpm/dkYjgF6m8l4Xjc4OOPjwNAFUIPyigFrEeCwok0UbwFZIocxrmQwTUW89+QrjzDTlihRpGBqY+/2Gj816oqmP11UPEKpDxdCkJ2YQqM7er9pbRNIL9p97D4RVKQBaEWBBYst6zS/xWJeDn+pI4gdLxm79rnSE3dXyv4yRqyxlFZjp/qAiRbaPSKVBGQnWO2GowTguZgVaTWzAG7a4SBbYXMoAS16y6NHvmbzfjtW1NVEHuEJfFk8TYfVIu5Ogvnp+NH5AF49i+5kl5prYqXv7xOaQ=\"&gt;https://topaz.github.io/paste/#XQAAAQApAwAAAAAAAAARlQkGk8+ekF1KoqBvoqrxh8pFEnF1Lznu2Y7QwG3bVdGYWtITgyS7xAns6seickoo+WfmOPOW/KeWD7WpDzFR2mso5F+czW0OzYuO7CiX7VrCVkGyBHMdbpZ7YkTeL3IUKG8YLmE3RnubEhNsPw5wuD1tTwshOWADv9B5wMbbtnB6muNrODyKr6hgzz0LdKMTWXyOyRajpm/dkYjgF6m8l4Xjc4OOPjwNAFUIPyigFrEeCwok0UbwFZIocxrmQwTUW89+QrjzDTlihRpGBqY+/2Gj816oqmP11UPEKpDxdCkJ2YQqM7er9pbRNIL9p97D4RVKQBaEWBBYst6zS/xWJeDn+pI4gdLxm79rnSE3dXyv4yRqyxlFZjp/qAiRbaPSKVBGQnWO2GowTguZgVaTWzAG7a4SBbYXMoAS16y6NHvmbzfjtW1NVEHuEJfFk8TYfVIu5Ogvnp+NH5AF49i+5kl5prYqXv7xOaQ=&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a7x50/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a7x50", "created":
        1575199722.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9cng8r", "id": "f9cng8r", "parent_id":
        "t1_f9a7x50", "depth": 1, "children": ["f9cng8r"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a8ysf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Scroph",
        "can_mod_post": false, "created_utc": 1575199998.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_6p6h0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++, experimenting with compile time evaluation. I couldn''t get it to print
        out the result of compute_fuel() from within static_assert though.\n\n    #include
        &lt;iostream&gt;\n    \n    using namespace std;\n    \n    constexpr long
        compute_fuel(long mass)\n    {\n        long total = 0;\n        while(true)\n        {\n            long
        fuel = (mass / 3) - 2;\n            if(fuel &lt;= 0)\n            {\n                break;\n            }\n            total
        += fuel;\n            mass = fuel;\n        }\n        return total;\n    }\n    \n    int
        main()\n    {\n        static_assert(compute_fuel(14) == 2, \"Test 1 failed\");\n        static_assert(compute_fuel(1969)
        == 966, \"Test 2 failed\");\n        static_assert(compute_fuel(100756) ==
        50346, \"Test 3 failed\");\n    \n        string line;\n        long total
        = 0;\n    \n        while(getline(cin, line))\n        {\n            long
        module = stol(line);\n            total += compute_fuel(module);\n        }\n    \n        cout
        &lt;&lt; total &lt;&lt; endl;\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C++, experimenting with compile time evaluation.
        I couldn&amp;#39;t get it to print out the result of compute_fuel() from within
        static_assert though.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;\n\nusing
        namespace std;\n\nconstexpr long compute_fuel(long mass)\n{\n    long total
        = 0;\n    while(true)\n    {\n        long fuel = (mass / 3) - 2;\n        if(fuel
        &amp;lt;= 0)\n        {\n            break;\n        }\n        total += fuel;\n        mass
        = fuel;\n    }\n    return total;\n}\n\nint main()\n{\n    static_assert(compute_fuel(14)
        == 2, &amp;quot;Test 1 failed&amp;quot;);\n    static_assert(compute_fuel(1969)
        == 966, &amp;quot;Test 2 failed&amp;quot;);\n    static_assert(compute_fuel(100756)
        == 50346, &amp;quot;Test 3 failed&amp;quot;);\n\n    string line;\n    long
        total = 0;\n\n    while(getline(cin, line))\n    {\n        long module =
        stol(line);\n        total += compute_fuel(module);\n    }\n\n    cout &amp;lt;&amp;lt;
        total &amp;lt;&amp;lt; endl;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a8ysf/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a8ysf", "created":
        1575199998.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9eouow",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BumpitySnook",
        "can_mod_post": false, "created_utc": 1575247727.0, "send_replies": true,
        "parent_id": "t1_f9a8ysf", "score": 2, "author_fullname": "t2_kkoug", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Totally agree, it''s a bit unfortunate that `static_assert` doesn''t have
        formatted printing.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Totally
        agree, it&amp;#39;s a bit unfortunate that &lt;code&gt;static_assert&lt;/code&gt;
        doesn&amp;#39;t have formatted printing.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eouow/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9eouow", "created": 1575247727.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9ad17m", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "emu_fake", "can_mod_post": false, "created_utc":
        1575201192.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_lhzva", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "C# with linq\n\n            public
        int DayOne_PuzzleOne(string[] input)\n            {\n                return
        input.Select(x =&gt; CalculateFuel(int.Parse(x), false)).Sum();\n            }\n    \n            public
        int DayOne_PuzzleTwo(string[] input)\n            {\n                return
        input.Select(x =&gt; CalculateFuel(int.Parse(x), true)).Sum();\n            }\n    \n            public
        int CalculateFuel(int mass, bool calcFuelMass)\n            {\n                var
        fuel = mass / 3 - 2;\n                if (calcFuelMass) return (fuel &lt;=
        0) ? 0 : fuel + CalculateFuel(fuel, calcFuelMass);\n                else return
        (fuel &lt;= 0) ? 0 : fuel;\n            }\n\nAlso made it a bit shiny with
        unit tests and everything:\n\n [https://github.com/emuuu/AdventOfCode](https://github.com/emuuu/AdventOfCode)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C# with linq&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;        public
        int DayOne_PuzzleOne(string[] input)\n        {\n            return input.Select(x
        =&amp;gt; CalculateFuel(int.Parse(x), false)).Sum();\n        }\n\n        public
        int DayOne_PuzzleTwo(string[] input)\n        {\n            return input.Select(x
        =&amp;gt; CalculateFuel(int.Parse(x), true)).Sum();\n        }\n\n        public
        int CalculateFuel(int mass, bool calcFuelMass)\n        {\n            var
        fuel = mass / 3 - 2;\n            if (calcFuelMass) return (fuel &amp;lt;=
        0) ? 0 : fuel + CalculateFuel(fuel, calcFuelMass);\n            else return
        (fuel &amp;lt;= 0) ? 0 : fuel;\n        }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also
        made it a bit shiny with unit tests and everything:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/emuuu/AdventOfCode\"&gt;https://github.com/emuuu/AdventOfCode&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ad17m/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ad17m", "created":
        1575201192.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cmqby",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1575225332.0, "send_replies": true,
        "parent_id": "t1_f9ad17m", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; Also made it a bit shiny\n\n[Shiny](https://media.giphy.com/media/eSjmuv0wMC9r2/giphy.gif)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Also
        made it a bit shiny&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=\"https://media.giphy.com/media/eSjmuv0wMC9r2/giphy.gif\"&gt;Shiny&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cmqby/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cmqby", "created":
        1575225332.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9amkve", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Espinha",
        "can_mod_post": false, "created_utc": 1575204245.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_3d75w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Clojure**\n\n    (defn- fuel-requirements-for-mass\n      [mass]\n      (as-&gt;
        mass n\n        (/ n 3)\n        (Math/floor n)\n        (- n 2)))\n    \n    (defn-
        calculate-total-fuel\n      [total-acc last-fuel]\n      (if (&lt;= last-fuel
        0)\n        total-acc\n        (recur (+ total-acc last-fuel) (fuel-requirements-for-mass
        last-fuel))))\n    \n    (defn run-pt1\n      []\n      (with-open [rdr (clojure.java.io/reader
        \"resources/puzzle1.txt\")]\n        (reduce\n         +\n         0\n         (map\n          #(-&gt;
        %\n               (Double/parseDouble)\n               (fuel-requirements-for-mass))\n          (line-seq
        rdr)))))\n    \n    (defn run-pt2\n      []\n      (with-open [rdr (clojure.java.io/reader
        \"resources/puzzle1.txt\")]\n        (reduce\n         +\n         0\n         (map\n          #(-&gt;&gt;
        %\n                (Double/parseDouble)\n                (fuel-requirements-for-mass)\n                (calculate-total-fuel
        0))\n          (line-seq rdr)))))", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Clojure&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn-
        fuel-requirements-for-mass\n  [mass]\n  (as-&amp;gt; mass n\n    (/ n 3)\n    (Math/floor
        n)\n    (- n 2)))\n\n(defn- calculate-total-fuel\n  [total-acc last-fuel]\n  (if
        (&amp;lt;= last-fuel 0)\n    total-acc\n    (recur (+ total-acc last-fuel)
        (fuel-requirements-for-mass last-fuel))))\n\n(defn run-pt1\n  []\n  (with-open
        [rdr (clojure.java.io/reader &amp;quot;resources/puzzle1.txt&amp;quot;)]\n    (reduce\n     +\n     0\n     (map\n      #(-&amp;gt;
        %\n           (Double/parseDouble)\n           (fuel-requirements-for-mass))\n      (line-seq
        rdr)))))\n\n(defn run-pt2\n  []\n  (with-open [rdr (clojure.java.io/reader
        &amp;quot;resources/puzzle1.txt&amp;quot;)]\n    (reduce\n     +\n     0\n     (map\n      #(-&amp;gt;&amp;gt;
        %\n            (Double/parseDouble)\n            (fuel-requirements-for-mass)\n            (calculate-total-fuel
        0))\n      (line-seq rdr)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9amkve/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9amkve", "created": 1575204245.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9aspom", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jangxx", "can_mod_post": false, "created_utc":
        1575206003.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_7wm1b", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "# Python\n\nPart 1:\n\n    import
        math\n    \n    total = 0\n    \n    with open(\"input.txt\") as file:\n        for
        line in file:\n            total += math.floor(int(line)/3) - 2\n    \n    print(total)\n\nPart
        2:\n\n    import math\n    \n    total = 0\n    \n    with open(\"input.txt\")
        as file:\n        for line in file:\n            next_fuel = int(line)\n            fuel_total
        = 0\n            while True:\n                next_fuel = math.floor(next_fuel/3)
        - 2\n    \n                if next_fuel &gt; 0:\n                    fuel_total
        += next_fuel\n                else:\n                    break\n    \n            total
        += fuel_total\n    \n    print(total)\n\nVery simple and straightforward.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import math\n\ntotal = 0\n\nwith open(&amp;quot;input.txt&amp;quot;)
        as file:\n    for line in file:\n        total += math.floor(int(line)/3)
        - 2\n\nprint(total)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        math\n\ntotal = 0\n\nwith open(&amp;quot;input.txt&amp;quot;) as file:\n    for
        line in file:\n        next_fuel = int(line)\n        fuel_total = 0\n        while
        True:\n            next_fuel = math.floor(next_fuel/3) - 2\n\n            if
        next_fuel &amp;gt; 0:\n                fuel_total += next_fuel\n            else:\n                break\n\n        total
        += fuel_total\n\nprint(total)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Very
        simple and straightforward.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9aspom/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9aspom", "created":
        1575206003.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9awxp8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Rainbow_Doge_64",
        "can_mod_post": false, "created_utc": 1575207187.0, "send_replies": true,
        "parent_id": "t1_f9aspom", "score": 6, "author_fullname": "t2_14j9v1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "There''s a built-in floor division operator in python, `3//2` is the same
        as `math.floor(3/2)`", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s
        a built-in floor division operator in python, &lt;code&gt;3//2&lt;/code&gt;
        is the same as &lt;code&gt;math.floor(3/2)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9awxp8/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9awxp8", "created":
        1575207187.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9bro74", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9awxp8", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9bro74", "collapsed": true, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bro74/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575215638.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575215638.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9clxta", "id": "f9clxta", "parent_id":
        "t1_f9bro74", "depth": 3, "children": ["f9clxta"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_f9btyvu", "id": "f9btyvu", "parent_id": "t1_f9awxp8",
        "depth": 2, "children": ["f9btyvu"]}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_e4axxe", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "f9b6wc3", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_e4axxe", "score": 2, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Crystal, part
        2:\n\n    puts File\n      .open(\"#{__DIR__}/input.txt\")\n      .each_line\n      .map(&amp;.to_i)\n      .map
        { |mass| fuel(mass) }\n      .sum\n\n    def fuel(mass)\n      total = 0\n      while
        mass &gt; 0\n        fuel = mass // 3 - 2\n        total += fuel if fuel &gt;
        0\n        mass = fuel\n      end\n      total\n    end", "awarders": [],
        "downs": 0, "author_flair_css_class": null, "name": "t1_f9b6wc3", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Crystal,
        part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;puts File\n  .open(&amp;quot;#{__DIR__}/input.txt&amp;quot;)\n  .each_line\n  .map(&amp;amp;.to_i)\n  .map
        { |mass| fuel(mass) }\n  .sum\n\ndef fuel(mass)\n  total = 0\n  while mass
        &amp;gt; 0\n    fuel = mass // 3 - 2\n    total += fuel if fuel &amp;gt; 0\n    mass
        = fuel\n  end\n  total\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9b6wc3/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575209833.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575209833.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9enwpt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BumpitySnook",
        "can_mod_post": false, "created_utc": 1575247238.0, "send_replies": true,
        "parent_id": "t1_f9b6wc3", "score": 2, "author_fullname": "t2_kkoug", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "That''s an interesting language I hadn''t heard of before, neat.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s an interesting language I
        hadn&amp;#39;t heard of before, neat.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9enwpt/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9enwpt", "created": 1575247238.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_ffunep5", "id": "ffunep5", "parent_id": "t1_f9enwpt", "depth": 2, "children":
        ["ffunep5"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1575213099.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9bhurl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "KdbAoC",
        "can_mod_post": false, "created_utc": 1575212911.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_54t68o6h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kdb+/Q\nOptimised my p2 to have initial input as p1 x, as opposed to dropping
        thie first result every time after checking gyorokpeter''s solution.\n```\ninp:\"J\"$read0`:Aoc2019/inp1.q;\np1:{sum{div[x;3]-2}''[x]};\np2:{sum{sum
        -1_{div[x;3]-2}\\[{x&gt;0};p1 x]}''[x]};\n@[;inp]''[(p1;p2)]\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Kdb+/Q\nOptimised my p2 to have initial
        input as p1 x, as opposed to dropping thie first result every time after checking
        gyorokpeter&amp;#39;s solution.\n&lt;code&gt;\ninp:&amp;quot;J&amp;quot;$read0`:Aoc2019/inp1.q;\np1:{sum{div[x;3]-2}&amp;#39;[x]};\np2:{sum{sum
        -1_{div[x;3]-2}\\[{x&amp;gt;0};p1 x]}&amp;#39;[x]};\n@[;inp]&amp;#39;[(p1;p2)]\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bhurl/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bhurl", "created":
        1575212911.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575214408.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9bk1l3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nbardiuk",
        "can_mod_post": false, "created_utc": 1575213439.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_1151vdzf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This year I am learning **Rust** [GitHub](https://github.com/nbardiuk/adventofcode/blob/master/2019/src/day01.rs)\n\n    pub
        fn part1(input: &amp;str) -&gt; u32 {\n        numbers(input).map(fuel_simple).sum()\n    }\n\n    pub
        fn part2(input: &amp;str) -&gt; u32 {\n        numbers(input).map(fuel_self_lifting).sum()\n    }\n\n    fn
        numbers&lt;''a&gt;(text: &amp;''a str) -&gt; impl Iterator&lt;Item = u32&gt;
        + ''a {\n        text.lines().filter_map(|line| line.parse::&lt;u32&gt;().ok())\n    }\n\n    fn
        fuel_simple(mass: u32) -&gt; u32 {\n        (mass / 3).saturating_sub(2)\n    }\n\n    fn
        fuel_self_lifting(mass: u32) -&gt; u32 {\n        match fuel_simple(mass)
        {\n            0 =&gt; 0,\n            fuel =&gt; fuel + fuel_self_lifting(fuel),\n        }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This year I am learning
        &lt;strong&gt;Rust&lt;/strong&gt; &lt;a href=\"https://github.com/nbardiuk/adventofcode/blob/master/2019/src/day01.rs\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn part1(input: &amp;amp;str) -&amp;gt; u32 {\n    numbers(input).map(fuel_simple).sum()\n}\n\npub
        fn part2(input: &amp;amp;str) -&amp;gt; u32 {\n    numbers(input).map(fuel_self_lifting).sum()\n}\n\nfn
        numbers&amp;lt;&amp;#39;a&amp;gt;(text: &amp;amp;&amp;#39;a str) -&amp;gt;
        impl Iterator&amp;lt;Item = u32&amp;gt; + &amp;#39;a {\n    text.lines().filter_map(|line|
        line.parse::&amp;lt;u32&amp;gt;().ok())\n}\n\nfn fuel_simple(mass: u32) -&amp;gt;
        u32 {\n    (mass / 3).saturating_sub(2)\n}\n\nfn fuel_self_lifting(mass: u32)
        -&amp;gt; u32 {\n    match fuel_simple(mass) {\n        0 =&amp;gt; 0,\n        fuel
        =&amp;gt; fuel + fuel_self_lifting(fuel),\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bk1l3/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bk1l3", "created":
        1575213439.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bpw5f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Billy_The_Noob",
        "can_mod_post": false, "created_utc": 1575215088.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_16tcvj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C**  \n[I''m just taking this to exercise with linked list because I''ve
        an incoming cs exam](https://github.com/billydotexe/adventofcode-2019)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;br/&gt;\n&lt;a
        href=\"https://github.com/billydotexe/adventofcode-2019\"&gt;I&amp;#39;m just
        taking this to exercise with linked list because I&amp;#39;ve an incoming
        cs exam&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bpw5f/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bpw5f", "created":
        1575215088.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9br9iq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Molitann",
        "can_mod_post": false, "created_utc": 1575215471.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_dtt27", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3\n\n    from numpy import *\n    inputData = loadtxt(\"day1_input.txt\")\n    fuel
        = 0\n    \n    \n    def calculateAllFuel(j):\n        global fuel\n        j
        = (j // 3) - 2\n        if j &gt; 0:\n            fuel = fuel + j\n            return
        calculateAllFuel(j)\n        return j\n    \n    \n    for i in inputData:\n        i
        = (i // 3) - 2\n        fuel = fuel + i\n    print(\"PART 1: Sum of fuel is:
        \" + str(fuel))\n    fuel = 0\n    \n    for i in inputData:\n        i =
        calculateAllFuel(i)\n    print(\"PART 2: Sum of fuel is: \" + str(fuel))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        numpy import *\ninputData = loadtxt(&amp;quot;day1_input.txt&amp;quot;)\nfuel
        = 0\n\n\ndef calculateAllFuel(j):\n    global fuel\n    j = (j // 3) - 2\n    if
        j &amp;gt; 0:\n        fuel = fuel + j\n        return calculateAllFuel(j)\n    return
        j\n\n\nfor i in inputData:\n    i = (i // 3) - 2\n    fuel = fuel + i\nprint(&amp;quot;PART
        1: Sum of fuel is: &amp;quot; + str(fuel))\nfuel = 0\n\nfor i in inputData:\n    i
        = calculateAllFuel(i)\nprint(&amp;quot;PART 2: Sum of fuel is: &amp;quot;
        + str(fuel))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9br9iq/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9br9iq", "created": 1575215471.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1575220337.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9brl2u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ontech7",
        "can_mod_post": false, "created_utc": 1575215606.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_10xdv6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I was trying to replicate the problem using my unfinished (and never will
        be) **event interpreter**, using just one random mass as single input and
        this is what I got:\n\n    declare\n        function additional\n            set
        t modulet\n            set tmp_modulet modulet\n            call additional_loop_subroutine\n            set
        modulef tmp_modulet\n        endfunction\n    \n        function additional_loop_subroutine\n            if
        t &gt; 6\n                div t 3\n                sub t 2\n                add
        tmp_modulet t\n                call additional_loop_subroutine\n                return\n            endif\n        endfunction\n    \n        variable
        mass 53075\n        variable fuel 0\n        variable modulet 0\n        variable
        tmp_modulet 0\n        variable modulef 0\n        variable t 0\n    enddeclare\n    \n    set
        modulet mass\n    div modulet 3\n    sub modulet 2\n    call additional\n    add
        fuel modulef\n    \n    dialog \"Mass: $mass$\"\n    dialog \"Fuel: $modulet$
        ($modulef$)\"\n    dialog \"Total: $fuel$\"\n\nResult:\n\n    event::value
        -&gt; Mass: 53075\n    event::value -&gt; Fuel: 17689 (26507)\n    event::value
        -&gt; Total: 26507\n\nThis interpreter is not meant to be a mathematical calculator,
        lol.\n\nThe interpreter:  [https://github.com/ontech7/event\\_interpreter](https://github.com/ontech7/event_interpreter)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was trying to replicate
        the problem using my unfinished (and never will be) &lt;strong&gt;event interpreter&lt;/strong&gt;,
        using just one random mass as single input and this is what I got:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;declare\n    function
        additional\n        set t modulet\n        set tmp_modulet modulet\n        call
        additional_loop_subroutine\n        set modulef tmp_modulet\n    endfunction\n\n    function
        additional_loop_subroutine\n        if t &amp;gt; 6\n            div t 3\n            sub
        t 2\n            add tmp_modulet t\n            call additional_loop_subroutine\n            return\n        endif\n    endfunction\n\n    variable
        mass 53075\n    variable fuel 0\n    variable modulet 0\n    variable tmp_modulet
        0\n    variable modulef 0\n    variable t 0\nenddeclare\n\nset modulet mass\ndiv
        modulet 3\nsub modulet 2\ncall additional\nadd fuel modulef\n\ndialog &amp;quot;Mass:
        $mass$&amp;quot;\ndialog &amp;quot;Fuel: $modulet$ ($modulef$)&amp;quot;\ndialog
        &amp;quot;Total: $fuel$&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;event::value
        -&amp;gt; Mass: 53075\nevent::value -&amp;gt; Fuel: 17689 (26507)\nevent::value
        -&amp;gt; Total: 26507\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This interpreter
        is not meant to be a mathematical calculator, lol.&lt;/p&gt;\n\n&lt;p&gt;The
        interpreter:  &lt;a href=\"https://github.com/ontech7/event_interpreter\"&gt;https://github.com/ontech7/event_interpreter&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9brl2u/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9brl2u", "created":
        1575215606.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575237498.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9cegpe", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snkenjoi",
        "can_mod_post": false, "created_utc": 1575222755.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_3ev4g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "jsgolf\n\n    // p1\n    eval(input.split(''\\n'').map(d=&gt;(0|d/3)-2).join`+`)\n\n    //
        p2 \n    eval(input.replace(/\\d+\\n/g,f=&gt;''+''+eval(`for(t=0;f=0|f/3,f&gt;2;)t+=f-2`)))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;jsgolf&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        p1\neval(input.split(&amp;#39;\\n&amp;#39;).map(d=&amp;gt;(0|d/3)-2).join`+`)\n\n//
        p2 \neval(input.replace(/\\d+\\n/g,f=&amp;gt;&amp;#39;+&amp;#39;+eval(`for(t=0;f=0|f/3,f&amp;gt;2;)t+=f-2`)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cegpe/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cegpe", "created":
        1575222755.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575224521.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9ciuxd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JJBby",
        "can_mod_post": false, "created_utc": 1575224303.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_299axb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3\n\nComments: \n This is my answer coming back to programming after
        learning for a year and taking a year off. Comments and help much appreciated.\n\nPoem:
        \n Recursion, lets try\n Recursion, recursion, why?\n No recursion here\n
        \nCode:\n\n    def fuel(ships):\n\n\tstorage = []\n\n\tfor ship in ships:\n\t\ttotal
        = []\n\t\tx = lambda mass: (mass // 3) - 2\n\t\ttotal.append(x(ship))\n\n\t\twhile
        total[0]&gt;0:\n\t\t\tc = x(total[0])\n\n\t\t\tif c &gt; 0:\n\t\t\t\ttotal.insert(0,
        c)\n\t\t\telse:\n\t\t\t\ttotal.insert(0,0)\n\t\tstorage.append(sum(total))\n\treturn
        storage\n\n    print(sum(fuel(data)))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python 3&lt;/p&gt;\n\n&lt;p&gt;Comments: \n This
        is my answer coming back to programming after learning for a year and taking
        a year off. Comments and help much appreciated.&lt;/p&gt;\n\n&lt;p&gt;Poem:
        \n Recursion, lets try\n Recursion, recursion, why?\n No recursion here&lt;/p&gt;\n\n&lt;p&gt;Code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        fuel(ships):\n\nstorage = []\n\nfor ship in ships:\n    total = []\n    x
        = lambda mass: (mass // 3) - 2\n    total.append(x(ship))\n\n    while total[0]&amp;gt;0:\n        c
        = x(total[0])\n\n        if c &amp;gt; 0:\n            total.insert(0, c)\n        else:\n            total.insert(0,0)\n    storage.append(sum(total))\nreturn
        storage\n\nprint(sum(fuel(data)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ciuxd/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ciuxd", "created":
        1575224303.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9cmt58", "id": "f9cmt58", "parent_id":
        "t1_f9ciuxd", "depth": 1, "children": ["f9cmt58", "f9cm028"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cju7c",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Soveu",
        "can_mod_post": false, "created_utc": 1575224563.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_nn8fn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution in Rust ;)\n\n    use std::io::{self, Read};\n    \n    fn calc_fuel(mass:
        i64) -&gt; i64 {\n        return (mass / 3) - 2;\n    }\n    \n    fn main()
        {\n        /* Create empty string with some capacity at the beginning, so
        as to make less relocations\n         * during reading the input\n         */\n        let
        mut input = String::with_capacity(4096);\n        io::stdin().read_to_string(&amp;mut
        input).expect(\"Error reading input\");\n        \n        let mut sum: i64
        = 0;\n        for word in input.split_ascii_whitespace() {\n            let
        mass: i64 = word.parse().expect(\"Invalid number\");\n    \n            let
        mut additionalFuel = calc_fuel(mass);\n            sum += additionalFuel;\n    \n            /*
        Doing simple things in a loop is always better than recursion!\n             *
        8 is the highest value that divided by 3 and floored is equal to 2\n             */\n            while
        additionalFuel &gt; 8 {\n                additionalFuel = calc_fuel(additionalFuel);\n                sum
        += additionalFuel;\n            }\n        }\n    \n        println!(\"{}\",
        sum);\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution
        in Rust ;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::io::{self, Read};\n\nfn
        calc_fuel(mass: i64) -&amp;gt; i64 {\n    return (mass / 3) - 2;\n}\n\nfn
        main() {\n    /* Create empty string with some capacity at the beginning,
        so as to make less relocations\n     * during reading the input\n     */\n    let
        mut input = String::with_capacity(4096);\n    io::stdin().read_to_string(&amp;amp;mut
        input).expect(&amp;quot;Error reading input&amp;quot;);\n\n    let mut sum:
        i64 = 0;\n    for word in input.split_ascii_whitespace() {\n        let mass:
        i64 = word.parse().expect(&amp;quot;Invalid number&amp;quot;);\n\n        let
        mut additionalFuel = calc_fuel(mass);\n        sum += additionalFuel;\n\n        /*
        Doing simple things in a loop is always better than recursion!\n         *
        8 is the highest value that divided by 3 and floored is equal to 2\n         */\n        while
        additionalFuel &amp;gt; 8 {\n            additionalFuel = calc_fuel(additionalFuel);\n            sum
        += additionalFuel;\n        }\n    }\n\n    println!(&amp;quot;{}&amp;quot;,
        sum);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cju7c/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cju7c", "created":
        1575224563.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9cln1y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Oneliner in java (jShell):\n\n    Files.readAllLines(Paths.get(\"day1.txt\")).stream().mapToInt(i-&gt;Integer.parseInt(i)/3
        -2 ).sum();", "awarders": [], "downs": 0, "author_flair_css_class": null,
        "name": "t1_f9cln1y", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Oneliner in java (jShell):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Files.readAllLines(Paths.get(&amp;quot;day1.txt&amp;quot;)).stream().mapToInt(i-&amp;gt;Integer.parseInt(i)/3
        -2 ).sum();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cln1y/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1575225034.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575225034.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9crj4v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "saharamijir",
        "can_mod_post": false, "created_utc": 1575226622.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_10wej5fm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My first attempt at writing F#](https://github.com/Saharamijir/AdventOfCode/tree/master/day1/fs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/Saharamijir/AdventOfCode/tree/master/day1/fs\"&gt;My
        first attempt at writing F#&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9crj4v/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9crj4v", "created": 1575226622.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_f9fo2cj", "id": "f9fo2cj", "parent_id": "t1_f9crj4v", "depth": 1, "children":
        ["f9fo2cj"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9csybv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "FutureShocked",
        "can_mod_post": false, "created_utc": 1575227070.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_ahmtj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Kotlin\n\n    fun main() {\n        println(solveWith { getPart1Fuel(it)
        })\n        println(solveWith { getPart2Fuel(it) })\n    }\n    \n    fun
        solveWith(selector: (Int) -&gt; Int) = File(\"Day1Input.txt\").readLines().map
        { it.toInt() }.sumBy(selector)\n    \n    fun getPart1Fuel(input: Int): Int
        {\n        return input / 3 - 2\n    }\n    \n    fun getPart2Fuel(input:
        Int): Int {\n        val requiredFuel = input / 3 - 2\n        if (requiredFuel
        &lt;= 0) return 0\n        return requiredFuel + getPart2Fuel(requiredFuel)\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Kotlin&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;fun
        main() {\n    println(solveWith { getPart1Fuel(it) })\n    println(solveWith
        { getPart2Fuel(it) })\n}\n\nfun solveWith(selector: (Int) -&amp;gt; Int) =
        File(&amp;quot;Day1Input.txt&amp;quot;).readLines().map { it.toInt() }.sumBy(selector)\n\nfun
        getPart1Fuel(input: Int): Int {\n    return input / 3 - 2\n}\n\nfun getPart2Fuel(input:
        Int): Int {\n    val requiredFuel = input / 3 - 2\n    if (requiredFuel &amp;lt;=
        0) return 0\n    return requiredFuel + getPart2Fuel(requiredFuel)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9csybv/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9csybv", "created":
        1575227070.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9ct724",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mjgtwo",
        "can_mod_post": false, "created_utc": 1575227117.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_15marf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Javascript\n\n\n\n    const fuel = mass =&gt; Math.floor(+mass / 3 - 2);\n    \n    const
        noNegative = mass =&gt; Math.max(+mass, 0);\n    \n    const actualFuel =
        mass =&gt;\n      +mass &amp;&amp; actualFuel(noNegative(fuel(mass))) + noNegative(fuel(mass));\n\n    const
        sum = (a,b) =&gt; a+b;\n\n    const p1 = input\n      .split(\"\\n\")\n      .map(fuel)\n      .reduce(sum);\n
        \n    const p2 = input\n        .split(\"\\n\")\n        .map(actualFuel)\n        .reduce(sum);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Javascript&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        fuel = mass =&amp;gt; Math.floor(+mass / 3 - 2);\n\nconst noNegative = mass
        =&amp;gt; Math.max(+mass, 0);\n\nconst actualFuel = mass =&amp;gt;\n  +mass
        &amp;amp;&amp;amp; actualFuel(noNegative(fuel(mass))) + noNegative(fuel(mass));\n\nconst
        sum = (a,b) =&amp;gt; a+b;\n\nconst p1 = input\n  .split(&amp;quot;\\n&amp;quot;)\n  .map(fuel)\n  .reduce(sum);\n\nconst
        p2 = input\n    .split(&amp;quot;\\n&amp;quot;)\n    .map(actualFuel)\n    .reduce(sum);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ct724/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ct724", "created":
        1575227117.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dtfwm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "shadowsofwho",
        "can_mod_post": false, "created_utc": 1575236674.0, "send_replies": true,
        "parent_id": "t1_f9ct724", "score": 2, "author_fullname": "t2_101wwozf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m also using Javascript this year but still extremely new to the language.\n\nCould
        you explain to me what the `&amp;&amp;` is doing in your `actualFuel` calculation?
        I''m assuming you are not returning a boolean but I don''t know how else that
        operator can be used.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        also using Javascript this year but still extremely new to the language.&lt;/p&gt;\n\n&lt;p&gt;Could
        you explain to me what the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is
        doing in your &lt;code&gt;actualFuel&lt;/code&gt; calculation? I&amp;#39;m
        assuming you are not returning a boolean but I don&amp;#39;t know how else
        that operator can be used.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dtfwm/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dtfwm", "created":
        1575236674.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9gxdoc", "id": "f9gxdoc", "parent_id":
        "t1_f9dtfwm", "depth": 2, "children": ["f9gxdoc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cv5yb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sneider",
        "can_mod_post": false, "created_utc": 1575227613.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_58dzr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Blockly\n\n* [part 1](https://app.code-it-studio.de/project/21787?desc=true)\n*
        [part 2](https://app.code-it-studio.de/project/21788?desc=true)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Blockly&lt;/h1&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a
        href=\"https://app.code-it-studio.de/project/21787?desc=true\"&gt;part 1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a
        href=\"https://app.code-it-studio.de/project/21788?desc=true\"&gt;part 2&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cv5yb/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cv5yb", "created":
        1575227613.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9d0ixq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rhysmorgan",
        "can_mod_post": false, "created_utc": 1575228936.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_4gyjt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Swift 5\n\n    import Foundation\n    \n    let input = try String(contentsOfFile:
        \"input.txt\", encoding: .utf8)\n    \t.split { $0.isNewline }\n    \t.compactMap
        { Int($0) }\n    \n    // Part 1\n    let mass: (Int) -&gt; Int = { $0 / 3
        - 2 }\n    \n    let part1Answer = input.map(mass).reduce(0, +)\n    print(part1Answer)\n    \n    //
        Part 2\n    func fuelRequirement(input: Int) -&gt; Int {\n    \tlet requirement
        = mass(input)\n    \tguard requirement &gt;= 0 else {\n    \t\treturn 0\n    \t}\n    \t\n    \treturn
        requirement + fuelRequirement(input: requirement)\n    }\n    \n    let part2Answer
        = input.map(fuelRequirement).reduce(0, +)\n    print(part2Answer)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Swift 5&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Foundation\n\nlet input = try String(contentsOfFile: &amp;quot;input.txt&amp;quot;,
        encoding: .utf8)\n    .split { $0.isNewline }\n    .compactMap { Int($0) }\n\n//
        Part 1\nlet mass: (Int) -&amp;gt; Int = { $0 / 3 - 2 }\n\nlet part1Answer
        = input.map(mass).reduce(0, +)\nprint(part1Answer)\n\n// Part 2\nfunc fuelRequirement(input:
        Int) -&amp;gt; Int {\n    let requirement = mass(input)\n    guard requirement
        &amp;gt;= 0 else {\n        return 0\n    }\n\n    return requirement + fuelRequirement(input:
        requirement)\n}\n\nlet part2Answer = input.map(fuelRequirement).reduce(0,
        +)\nprint(part2Answer)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9d0ixq/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9d0ixq", "created": 1575228936.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1575236739.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9d3aat",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "willkill07",
        "can_mod_post": false, "created_utc": 1575229782.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_7j0ca", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C++20 [Repo Link](https://github.com/willkill07/AdventOfCode2019/blob/master/src/Day01.cpp)\n\n**Poem**\n\n&gt;
        There once was a cool guy named Eric\n\n&gt; who came up with code quite numeric\n\n&gt;
        and so for twenty-five days\n\n&gt; we are left in a haze\n\n&gt; which leaves
        us completely barbaric\n\n*now with ranges*\n\nNot trying any crazy leaderboard
        stuff this year\n\n    #include &lt;range/v3/all.hpp&gt;\n    #include &lt;iostream&gt;\n    int
        fuel_for (int amount) {\n      return amount / 3 - 2;\n    }\n    int total_fuel_for
        (int amount) {\n      int new_amount = fuel_for(amount);\n      return (new_amount
        &lt;= 0) ? 0 : new_amount + total_fuel_for(new_amount);\n    }\n    int main()
        {\n      auto nums = ranges::istream_view&lt;int&gt;(std::cin);\n      auto
        fun = part2 ? total_fuel_for : fuel_for;\n      std::cout &lt;&lt; ranges::accumulate(nums
        | ranges::views::transform(fun), 0) &lt;&lt; ''\\n'';\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;C++20 &lt;a href=\"https://github.com/willkill07/AdventOfCode2019/blob/master/src/Day01.cpp\"&gt;Repo
        Link&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;&lt;strong&gt;Poem&lt;/strong&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;There
        once was a cool guy named Eric&lt;/p&gt;\n\n&lt;p&gt;who came up with code
        quite numeric&lt;/p&gt;\n\n&lt;p&gt;and so for twenty-five days&lt;/p&gt;\n\n&lt;p&gt;we
        are left in a haze&lt;/p&gt;\n\n&lt;p&gt;which leaves us completely barbaric&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;em&gt;now
        with ranges&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Not trying any crazy leaderboard
        stuff this year&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;range/v3/all.hpp&amp;gt;\n#include
        &amp;lt;iostream&amp;gt;\nint fuel_for (int amount) {\n  return amount / 3
        - 2;\n}\nint total_fuel_for (int amount) {\n  int new_amount = fuel_for(amount);\n  return
        (new_amount &amp;lt;= 0) ? 0 : new_amount + total_fuel_for(new_amount);\n}\nint
        main() {\n  auto nums = ranges::istream_view&amp;lt;int&amp;gt;(std::cin);\n  auto
        fun = part2 ? total_fuel_for : fuel_for;\n  std::cout &amp;lt;&amp;lt; ranges::accumulate(nums
        | ranges::views::transform(fun), 0) &amp;lt;&amp;lt; &amp;#39;\\n&amp;#39;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9d3aat/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9d3aat", "created":
        1575229782.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575256651.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9d5p8j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "# Scala\n\nI did horrible things to get this to pretty
        print in one string of functional calls\n\n    println(\n      scala.io.Source.fromFile(\"input1.txt\")\n        .getLines\n        .toList\n        .map(_.toInt)\n        .map(m
        =&gt; List(\n          (m / 3) - 2,\n          Stream.continually(())\n            .scanLeft(m)((t,
        _) =&gt; t / 3 - 2)\n            .drop(1)\n            .takeWhile(_ &gt; 0)\n            .sum\n        ))\n        .transpose\n        .map(_.sum)\n        .zipWithIndex\n        .map(t
        =&gt; s\"Part ${t._2 + 1}: ${t._1}\")\n        .mkString(\"\\n\")\n    )\n\nEdit:
        fixed to not make my soul hurt with `asInstanceOf` use", "awarders": [], "downs":
        0, "author_flair_css_class": null, "name": "t1_f9d5p8j", "collapsed": false,
        "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Scala&lt;/h1&gt;\n\n&lt;p&gt;I
        did horrible things to get this to pretty print in one string of functional
        calls&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;println(\n  scala.io.Source.fromFile(&amp;quot;input1.txt&amp;quot;)\n    .getLines\n    .toList\n    .map(_.toInt)\n    .map(m
        =&amp;gt; List(\n      (m / 3) - 2,\n      Stream.continually(())\n        .scanLeft(m)((t,
        _) =&amp;gt; t / 3 - 2)\n        .drop(1)\n        .takeWhile(_ &amp;gt; 0)\n        .sum\n    ))\n    .transpose\n    .map(_.sum)\n    .zipWithIndex\n    .map(t
        =&amp;gt; s&amp;quot;Part ${t._2 + 1}: ${t._1}&amp;quot;)\n    .mkString(&amp;quot;\\n&amp;quot;)\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit:
        fixed to not make my soul hurt with &lt;code&gt;asInstanceOf&lt;/code&gt;
        use&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished":
        null, "associated_award": null, "stickied": false, "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9d5p8j/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1575230470.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1575230470.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_f9f04ey", "id": "f9f04ey", "parent_id":
        "t1_f9d5p8j", "depth": 1, "children": ["f9f04ey"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575234573.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9d6u94", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "serianx",
        "can_mod_post": false, "created_utc": 1575230771.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_dbjjl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My [Rust](https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1)
        , [Python](https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1)
        , [Julia](https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1),
        [Scala](https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1),
        [Go](https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1),
        [Javascript](https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1)
        solutions for today, planning on keeping it up to dated like last year :)\n\nPD:
        feel free to issue a PR if you have some cool solutions in other languages
        :D", "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My &lt;a href=\"https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1\"&gt;Rust&lt;/a&gt;
        , &lt;a href=\"https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1\"&gt;Python&lt;/a&gt;
        , &lt;a href=\"https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1\"&gt;Julia&lt;/a&gt;,
        &lt;a href=\"https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1\"&gt;Scala&lt;/a&gt;,
        &lt;a href=\"https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1\"&gt;Go&lt;/a&gt;,
        &lt;a href=\"https://github.com/marcosfede/algorithms/tree/master/adventofcode/2019/d1\"&gt;Javascript&lt;/a&gt;
        solutions for today, planning on keeping it up to dated like last year :)&lt;/p&gt;\n\n&lt;p&gt;PD:
        feel free to issue a PR if you have some cool solutions in other languages
        :D&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9d6u94/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9d6u94", "created":
        1575230771.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9ecycf", "id": "f9ecycf", "parent_id":
        "t1_f9d6u94", "depth": 1, "children": ["f9ecycf"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dcddm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mrm4rc1",
        "can_mod_post": false, "created_utc": 1575232170.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_jmkec", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Python 3\\]\n\n    import numpy as np\n    \n    def get_required_fuel_simply(mass):\n        return
        mass // 3 - 2\n    \n    \n    def get_required_fuel_recursively(mass):\n        needed_extra_fuel
        = get_required_fuel_simply(mass)\n        if needed_extra_fuel &lt; 0:\n            return
        0\n        else:\n            return needed_extra_fuel + get_required_fuel_recursively(needed_extra_fuel)\n    \n    \n    def
        solve_01_01():\n        masses = np.loadtxt(''mass_list.txt'')\n        fuel_all
        = np.sum(get_required_fuel_simply(masses))\n        print(f\"Needed fuel for
        all modules: {int(fuel_all)}\")\n    \n    \n    def solve_01_02():\n        masses
        = np.loadtxt(''mass_list.txt'')\n        sum = 0\n        for mass in masses:\n            sum
        += get_required_fuel_recursively(mass)\n        print(f\"Needed fuel for all
        modules: {int(sum)}\")\n    \n    \n    if __name__ == \"__main__\":\n        solve_01_01()\n        solve_01_02()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Python 3]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        numpy as np\n\ndef get_required_fuel_simply(mass):\n    return mass // 3 -
        2\n\n\ndef get_required_fuel_recursively(mass):\n    needed_extra_fuel = get_required_fuel_simply(mass)\n    if
        needed_extra_fuel &amp;lt; 0:\n        return 0\n    else:\n        return
        needed_extra_fuel + get_required_fuel_recursively(needed_extra_fuel)\n\n\ndef
        solve_01_01():\n    masses = np.loadtxt(&amp;#39;mass_list.txt&amp;#39;)\n    fuel_all
        = np.sum(get_required_fuel_simply(masses))\n    print(f&amp;quot;Needed fuel
        for all modules: {int(fuel_all)}&amp;quot;)\n\n\ndef solve_01_02():\n    masses
        = np.loadtxt(&amp;#39;mass_list.txt&amp;#39;)\n    sum = 0\n    for mass in
        masses:\n        sum += get_required_fuel_recursively(mass)\n    print(f&amp;quot;Needed
        fuel for all modules: {int(sum)}&amp;quot;)\n\n\nif __name__ == &amp;quot;__main__&amp;quot;:\n    solve_01_01()\n    solve_01_02()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dcddm/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dcddm", "created":
        1575232170.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dg9ou",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ericluwolf",
        "can_mod_post": false, "created_utc": 1575233218.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_8ahsf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A cute little solution in C++ hosted on [paste](https://topaz.github.io/paste/#XQAAAQCDAgAAAAAAAAAyG8sQqfelFq+Ih6pw7CV8nmnUiGr0iniFYPw7G5JAB+QtMXJSUNZT6bCcclT4H1tbdoWImi+JHd/9+w4YwxSa3DohCQLqMcSFcv08+DOCmJ6T4ut/8C7AyDBlMqlAxGANXVtW9D0JdYtbiDgQicKWLn37XBx30fnHPf08lbNSKNSAov7HHrVGXM6T1Xqw9QgI1RW2uQ7mdZjkasHzS9tYoSbqfX1AcJohjhwnPARN34DngGDOL1BSp+gXMClvnwFGrlBqjCoXqZP3iiI1oPVB+twdYfxMrgt50Q4wDhPUT/ubkFmXtBZxphbUVyzpe4Zo26FD0gWSmkVGx6wWTAHxx3z0VP/klNkp)\n\nEdit:
        Markdown mangled by Reddit :(", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;A cute little solution in C++ hosted on &lt;a href=\"https://topaz.github.io/paste/#XQAAAQCDAgAAAAAAAAAyG8sQqfelFq+Ih6pw7CV8nmnUiGr0iniFYPw7G5JAB+QtMXJSUNZT6bCcclT4H1tbdoWImi+JHd/9+w4YwxSa3DohCQLqMcSFcv08+DOCmJ6T4ut/8C7AyDBlMqlAxGANXVtW9D0JdYtbiDgQicKWLn37XBx30fnHPf08lbNSKNSAov7HHrVGXM6T1Xqw9QgI1RW2uQ7mdZjkasHzS9tYoSbqfX1AcJohjhwnPARN34DngGDOL1BSp+gXMClvnwFGrlBqjCoXqZP3iiI1oPVB+twdYfxMrgt50Q4wDhPUT/ubkFmXtBZxphbUVyzpe4Zo26FD0gWSmkVGx6wWTAHxx3z0VP/klNkp\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        Markdown mangled by Reddit :(&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dg9ou/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9dg9ou", "created": 1575233218.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_f9dqkh1", "id": "f9dqkh1", "parent_id": "t1_f9dg9ou", "depth": 1, "children":
        ["f9dqkh1"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9dnszy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mmihalec",
        "can_mod_post": false, "created_utc": 1575235211.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_2sp033st", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My C++ code : [paste](https://topaz.github.io/paste/#XQAAAQDUAwAAAAAAAAAFG0s0AztiMMa+tDOO4+fIW/i0eFj7re5IDoITGU/phFc3Jg9eCRY6ZFvZ5ZHcEPEK6rA9+SKsDZC+0NWlIKs4ZcZDiJt8W51qLf9MbNihkeJqzJDQXtk8EXn516fjfpB8R/NiO2jBaPGKxoqSe2GLNps5+5lIw2z6We0xN9WbsYa4T2iKKaRCHXNuyyjMJSgzzqR9yq4Y2G0yDJiJQ0WP4ejF0cZcsKI+PlqfNik0du/tkKF13GYFY8bVkNHxFzMKmQ9dCtJbi/6qu8LpmIjmNk/D6SeKgigwM4HgR+14+XiW45rGxBvpMN1phz6VbwhYURQSCrM9jylJGfbIruJew0t0fnDIORHizHOd678ntGmoTMDeyzldfHYFuTEPMo28bxnOWeuhcrzpjsroQGY0LwoSB4zW/+LqTfCkiO4C7el3UNjSg/1i4LkqgTxHDoYuZQliqXAZZeOWDFeCzxL6zgXMHq2+m/k6wrfDW7CmoWMywIz1Rr0fak35kphZvMEyz40D+uiKISdZjgCF+Z1on9V6BNjq/5zXJoQGEx74a9YzgM0d3ppFS9jTwLHhY/0uMjk=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My C++ code : &lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDUAwAAAAAAAAAFG0s0AztiMMa+tDOO4+fIW/i0eFj7re5IDoITGU/phFc3Jg9eCRY6ZFvZ5ZHcEPEK6rA9+SKsDZC+0NWlIKs4ZcZDiJt8W51qLf9MbNihkeJqzJDQXtk8EXn516fjfpB8R/NiO2jBaPGKxoqSe2GLNps5+5lIw2z6We0xN9WbsYa4T2iKKaRCHXNuyyjMJSgzzqR9yq4Y2G0yDJiJQ0WP4ejF0cZcsKI+PlqfNik0du/tkKF13GYFY8bVkNHxFzMKmQ9dCtJbi/6qu8LpmIjmNk/D6SeKgigwM4HgR+14+XiW45rGxBvpMN1phz6VbwhYURQSCrM9jylJGfbIruJew0t0fnDIORHizHOd678ntGmoTMDeyzldfHYFuTEPMo28bxnOWeuhcrzpjsroQGY0LwoSB4zW/+LqTfCkiO4C7el3UNjSg/1i4LkqgTxHDoYuZQliqXAZZeOWDFeCzxL6zgXMHq2+m/k6wrfDW7CmoWMywIz1Rr0fak35kphZvMEyz40D+uiKISdZjgCF+Z1on9V6BNjq/5zXJoQGEx74a9YzgM0d3ppFS9jTwLHhY/0uMjk=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dnszy/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dnszy", "created":
        1575235211.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575237342.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9dunbd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TheMas3212",
        "can_mod_post": false, "created_utc": 1575236988.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_rz5wz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3\n\nLambda''s are fun\n\n    with open(\"input\", \"r\") as f:\n      data
        = [int(x) for x in f.readlines()]\n    print(sum([(lambda f: lambda m: f(f,
        m))(lambda f, m: 0 if m//3-2 &lt; 0 else m//3-2+f(f, m//3-2))(x) for x in
        data], 0))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3&lt;/p&gt;\n\n&lt;p&gt;Lambda&amp;#39;s are fun&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;input&amp;quot;, &amp;quot;r&amp;quot;) as f:\n  data = [int(x)
        for x in f.readlines()]\nprint(sum([(lambda f: lambda m: f(f, m))(lambda f,
        m: 0 if m//3-2 &amp;lt; 0 else m//3-2+f(f, m//3-2))(x) for x in data], 0))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dunbd/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dunbd", "created":
        1575236988.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dxd4j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "spunos",
        "can_mod_post": false, "created_utc": 1575237640.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_5na7d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Elixir\n\n[Well, it''s not great](https://topaz.github.io/paste/#XQAAAQAkAwAAAAAAAAAyGUkFUehZxfOWmzxJycWlFh10kUY/QmEAqfl3ts3IvYJy0EgDciP4B/p1g7PcbLnvmQAnfjEBE55lSGg4ntoaQKY6K4fv7530/2DXNtnIgFZZXDb9e2bwaLqLAkv3/mbuzZdXG28v7vrD93EuLgpdurlYQc4z0blGVLRgZvgzuU7HRLC+YoGHU1n6XFHcOMiyOQ/ZpucBFBvinqkbSEp+lP+rSFxWDPV9+Fw4Qus3ZRz1Tpe0FNA4/Tfn7CBZNFrdMuXK5ok1EZjFGdfmhtBQAbwIPrqpcUcDtDzls4X43Luw3mqUtKUin6i0rNJS8nGVItFnv2slYeLYhb9MHBI+0PSYDcqoTRQjirZW15z8D4YQ)
        but in my defense, 1) I haven''t touched Elixir in like two years, and 2)
        this poem is based on a true story:\n\n&gt; There once was a coder so old  \n&gt;
        She could no longer write code with a cold  \n&gt; Her stuff may not be up
        to snuff  \n&gt; But she still said \"Eh, good enough,  \n&gt; Now please
        give me my two stars of gold\"", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Elixir&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAkAwAAAAAAAAAyGUkFUehZxfOWmzxJycWlFh10kUY/QmEAqfl3ts3IvYJy0EgDciP4B/p1g7PcbLnvmQAnfjEBE55lSGg4ntoaQKY6K4fv7530/2DXNtnIgFZZXDb9e2bwaLqLAkv3/mbuzZdXG28v7vrD93EuLgpdurlYQc4z0blGVLRgZvgzuU7HRLC+YoGHU1n6XFHcOMiyOQ/ZpucBFBvinqkbSEp+lP+rSFxWDPV9+Fw4Qus3ZRz1Tpe0FNA4/Tfn7CBZNFrdMuXK5ok1EZjFGdfmhtBQAbwIPrqpcUcDtDzls4X43Luw3mqUtKUin6i0rNJS8nGVItFnv2slYeLYhb9MHBI+0PSYDcqoTRQjirZW15z8D4YQ\"&gt;Well,
        it&amp;#39;s not great&lt;/a&gt; but in my defense, 1) I haven&amp;#39;t touched
        Elixir in like two years, and 2) this poem is based on a true story:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;There
        once was a coder so old&lt;br/&gt;\nShe could no longer write code with a
        cold&lt;br/&gt;\nHer stuff may not be up to snuff&lt;br/&gt;\nBut she still
        said &amp;quot;Eh, good enough,&lt;br/&gt;\nNow please give me my two stars
        of gold&amp;quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dxd4j/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9dxd4j", "created": 1575237640.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9m60w7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "CraigCottingham", "can_mod_post": false,
        "created_utc": 1575442978.0, "send_replies": true, "parent_id": "t1_f9dxd4j",
        "score": 2, "author_fullname": "t2_suyrv", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Nice use of tail recursion.
        I went a [slightly different route](https://github.com/CraigCottingham/advent-of-code-2019/blob/master/lib/aoc/day_01.ex),
        mapping into a list then reducing it at the end.\n\nI''m toying with the idea
        of revisiting some of these tasks using GenStage/Flow just to see how ridiculous
        it can get.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice
        use of tail recursion. I went a &lt;a href=\"https://github.com/CraigCottingham/advent-of-code-2019/blob/master/lib/aoc/day_01.ex\"&gt;slightly
        different route&lt;/a&gt;, mapping into a list then reducing it at the end.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        toying with the idea of revisiting some of these tasks using GenStage/Flow
        just to see how ridiculous it can get.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9m60w7/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9m60w7", "created": 1575442978.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_f9m8d14", "id": "f9m8d14", "parent_id": "t1_f9m60w7", "depth": 2, "children":
        ["f9m8d14"]}}, {"kind": "more", "data": {"count": 2, "name": "t1_f9e0uf7",
        "id": "f9e0uf7", "parent_id": "t1_f9dxd4j", "depth": 1, "children": ["f9e0uf7"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9dywlq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "h3matite",
        "can_mod_post": false, "created_utc": 1575238140.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_11qu6i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Very readable python3:  [https://gist.github.com/h3matite/107bca58e9f82d7ee475797a7c4f493c](https://gist.github.com/h3matite/107bca58e9f82d7ee475797a7c4f493c)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very readable python3:  &lt;a
        href=\"https://gist.github.com/h3matite/107bca58e9f82d7ee475797a7c4f493c\"&gt;https://gist.github.com/h3matite/107bca58e9f82d7ee475797a7c4f493c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dywlq/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dywlq", "created":
        1575238140.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9jn7nv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ExtremeGardening",
        "can_mod_post": false, "created_utc": 1575380445.0, "send_replies": true,
        "parent_id": "t1_f9dywlq", "score": 2, "author_fullname": "t2_51lgegbo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thanks for posting this one - I''ve been working on writing more \"verbose\"
        code to help explain concepts to some of our non-dev staff and this is really
        clean. Lambdas are great, but people just blank out when they see it.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for posting this one - I&amp;#39;ve
        been working on writing more &amp;quot;verbose&amp;quot; code to help explain
        concepts to some of our non-dev staff and this is really clean. Lambdas are
        great, but people just blank out when they see it.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9jn7nv/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9jn7nv", "created":
        1575380445.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9kjlmy", "id": "f9kjlmy", "parent_id":
        "t1_f9jn7nv", "depth": 2, "children": ["f9kjlmy"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9e00mx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Aidiakapi",
        "can_mod_post": false, "created_utc": 1575238431.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_djp08", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in Rust, part 1 ([full link](https://github.com/Aidiakapi/advent_of_code_2019/blob/master/src/day01.rs)
        including parsing):\n    \n    fn pt1(modules: Vec&lt;i32&gt;) -&gt; i32 {\n        modules.into_iter().map(|mass|
        mass / 3 - 2).sum()\n    }\n\nPart 2:\n\n    fn calc_fuel(mass: i32) -&gt;
        i32 {\n        let fuel = mass / 3 - 2;\n        if fuel &lt;= 0 { 0 }\n        else
        { fuel + calc_fuel(fuel) }\n    }\n    fn pt2(modules: Vec&lt;i32&gt;) -&gt;
        i32 {\n        modules.into_iter().map(calc_fuel).sum()\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in Rust, part 1 (&lt;a href=\"https://github.com/Aidiakapi/advent_of_code_2019/blob/master/src/day01.rs\"&gt;full
        link&lt;/a&gt; including parsing):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        pt1(modules: Vec&amp;lt;i32&amp;gt;) -&amp;gt; i32 {\n    modules.into_iter().map(|mass|
        mass / 3 - 2).sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        calc_fuel(mass: i32) -&amp;gt; i32 {\n    let fuel = mass / 3 - 2;\n    if
        fuel &amp;lt;= 0 { 0 }\n    else { fuel + calc_fuel(fuel) }\n}\nfn pt2(modules:
        Vec&amp;lt;i32&amp;gt;) -&amp;gt; i32 {\n    modules.into_iter().map(calc_fuel).sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e00mx/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e00mx", "created":
        1575238431.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9e1sk0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "m4rzus",
        "can_mod_post": false, "created_utc": 1575238845.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_bq1x1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First time trying advent of code, looks fun so far :D\n\n    def calculate_fuel(current,
        total = 0):\n        new = int(current / 3) - 2\n        if new &lt; 0:\n            return
        total\n        return calculate_fuel(new, total + new)\n    \n    fuel = 0\n    \n    with
        open(\"input.txt\", \"r\") as f:\n        data = f.read().split()\n    \n    for
        number in data:\n        fuel += calculate_fuel(int(number))\n    \n    print(fuel)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First time trying advent
        of code, looks fun so far :D&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def calculate_fuel(current,
        total = 0):\n    new = int(current / 3) - 2\n    if new &amp;lt; 0:\n        return
        total\n    return calculate_fuel(new, total + new)\n\nfuel = 0\n\nwith open(&amp;quot;input.txt&amp;quot;,
        &amp;quot;r&amp;quot;) as f:\n    data = f.read().split()\n\nfor number in
        data:\n    fuel += calculate_fuel(int(number))\n\nprint(fuel)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e1sk0/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e1sk0", "created":
        1575238845.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575242119.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9e2bqc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bananamadafaka",
        "can_mod_post": false, "created_utc": 1575239011.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_dxzog", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I can''t believe i managed to write a recursive solution at first try with
        0 errors, lmfao. I was expecting some stack error.\n\n    def fuel(mass):\n        res
        = mass // 3 - 2\n        if res &lt;= 0:\n            return 0\n        return
        res + fuel(res)\n\nAnd then a loop that iterates over the input data and updates
        the answer with the sum.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        can&amp;#39;t believe i managed to write a recursive solution at first try
        with 0 errors, lmfao. I was expecting some stack error.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        fuel(mass):\n    res = mass // 3 - 2\n    if res &amp;lt;= 0:\n        return
        0\n    return res + fuel(res)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then
        a loop that iterates over the input data and updates the answer with the sum.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e2bqc/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e2bqc", "created":
        1575239011.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575241073.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9e4b15", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "repocin",
        "can_mod_post": false, "created_utc": 1575239576.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_hxqjr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Part 1 in **Python**:\n\n    def fuel(mass: int) -&gt; int:\n        return
        int(mass//3 - 2)\n\n    with open(\"input\") as f:\n        data = f.read().splitlines()\n\n    print(sum([fuel(int(i))
        for i in data]))\n\nI could''ve made it much more compact, but opted for readability
        instead.\n\nAnd for part 2 I decided to make a li''l recursive doodad in **Haskell**:\n\n    main
        :: IO()\n    main = do\n        f &lt;- readFile \"input\"\n        let input
        = map read $ lines f\n        print $ sum $ map fuel input\n    \n    fuel
        :: Integral a =&gt; a -&gt; a\n    fuel mass\n       | fuel'' &lt;= 0 = 0\n       |
        otherwise = fuel'' + fuel fuel''\n       where fuel'' = mass `div` 3 - 2\n\nI
        essentially ~~stole~~ borrowed the main function from [this comment](https://old.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bbw39/)
        by u/vypxl because I have a terrible headache and couldn''t figure out a good
        way to do it on my own at the moment.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Part 1 in &lt;strong&gt;Python&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        fuel(mass: int) -&amp;gt; int:\n    return int(mass//3 - 2)\n\nwith open(&amp;quot;input&amp;quot;)
        as f:\n    data = f.read().splitlines()\n\nprint(sum([fuel(int(i)) for i in
        data]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I could&amp;#39;ve made it
        much more compact, but opted for readability instead.&lt;/p&gt;\n\n&lt;p&gt;And
        for part 2 I decided to make a li&amp;#39;l recursive doodad in &lt;strong&gt;Haskell&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;main
        :: IO()\nmain = do\n    f &amp;lt;- readFile &amp;quot;input&amp;quot;\n    let
        input = map read $ lines f\n    print $ sum $ map fuel input\n\nfuel :: Integral
        a =&amp;gt; a -&amp;gt; a\nfuel mass\n   | fuel&amp;#39; &amp;lt;= 0 = 0\n   |
        otherwise = fuel&amp;#39; + fuel fuel&amp;#39;\n   where fuel&amp;#39; = mass
        `div` 3 - 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I essentially &lt;del&gt;stole&lt;/del&gt;
        borrowed the main function from &lt;a href=\"https://old.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bbw39/\"&gt;this
        comment&lt;/a&gt; by &lt;a href=\"/u/vypxl\"&gt;u/vypxl&lt;/a&gt; because
        I have a terrible headache and couldn&amp;#39;t figure out a good way to do
        it on my own at the moment.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e4b15/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e4b15", "created":
        1575239576.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9e7zkh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vypxl",
        "can_mod_post": false, "created_utc": 1575240642.0, "send_replies": true,
        "parent_id": "t1_f9e4b15", "score": 3, "author_fullname": "t2_2pbhezcb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Glad I could help you out \\^\\^", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Glad I could help you out ^^&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e7zkh/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e7zkh", "created":
        1575240642.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9e95u8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "paileyq",
        "can_mod_post": false, "created_utc": 1575241060.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_2w2c19vm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hand-written WebAssembly: https://github.com/paileyq/adventofcode-2019/tree/master/day01",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hand-written WebAssembly:
        &lt;a href=\"https://github.com/paileyq/adventofcode-2019/tree/master/day01\"&gt;https://github.com/paileyq/adventofcode-2019/tree/master/day01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e95u8/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e95u8", "created":
        1575241060.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9e9tzf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jubo30",
        "can_mod_post": false, "created_utc": 1575241292.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_q2hdi2f", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using C++ and the input via Windows cmd:\n\nPart 1\n\n    #include &lt;iostream&gt;\n    \n    int
        main()\n    {\n        int input , res = 0;\n    \n        while(std::cin
        &gt;&gt; input)\n        {\n            res = res + ((input/3)-2);\n        }\n        std::cout
        &lt;&lt; res;\n    }\n\nPart 2\n\n    #include &lt;iostream&gt;\n    \n    int
        main()\n    {\n        int input , res = 0 , tmp = 0;\n    \n        while(std::cin
        &gt;&gt; input)\n        {\n            tmp = 0;\n            while(input
        &gt; 6)\n            {\n                input = (input/3) - 2;\n                tmp
        = tmp + input;\n            }\n            res = res + tmp;\n        }\n        std::cout
        &lt;&lt; res;\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using
        C++ and the input via Windows cmd:&lt;/p&gt;\n\n&lt;p&gt;Part 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n\nint main()\n{\n    int input , res = 0;\n\n    while(std::cin
        &amp;gt;&amp;gt; input)\n    {\n        res = res + ((input/3)-2);\n    }\n    std::cout
        &amp;lt;&amp;lt; res;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n\nint main()\n{\n    int input , res = 0 , tmp =
        0;\n\n    while(std::cin &amp;gt;&amp;gt; input)\n    {\n        tmp = 0;\n        while(input
        &amp;gt; 6)\n        {\n            input = (input/3) - 2;\n            tmp
        = tmp + input;\n        }\n        res = res + tmp;\n    }\n    std::cout
        &amp;lt;&amp;lt; res;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e9tzf/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9e9tzf", "created": 1575241292.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9e9ua1", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Belaba", "can_mod_post": false, "created_utc":
        1575241295.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_eofm8", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Needlessly recursive, but
        short and tail call optimizable.\n\n    #include &lt;iostream&gt;\n    #include
        &lt;fstream&gt;\n    #include &lt;string&gt;\n    #include &lt;vector&gt;\n    #include
        &lt;numeric&gt;\n    \n    \n    int tco_fuel_req(int mass, int acc) {\n      if
        (mass &lt;= 6) return acc + mass;\n      return tco_fuel_req((mass / 3) -
        2, acc + mass);\n    }\n    \n    int recursive_fuel_req(int mass) {\n      return
        tco_fuel_req(mass, 0);\n    }\n    \n    int main() {\n      std::ifstream
        input(\"day1_input.txt\");\n      std::string line;\n      std::vector&lt;int&gt;
        modules;\n      while (std::getline(input, line)) {\n    \tint mass = std::stoi(line);\n    \tmodules.push_back(recursive_fuel_req(mass)
        - mass);\n      }\n      std::cout &lt;&lt; std::accumulate(modules.begin(),
        modules.end(),0) &lt;&lt; ''\\n'';\n      return 0;\n    }", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Needlessly recursive, but short and tail
        call optimizable.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;\n#include
        &amp;lt;fstream&amp;gt;\n#include &amp;lt;string&amp;gt;\n#include &amp;lt;vector&amp;gt;\n#include
        &amp;lt;numeric&amp;gt;\n\n\nint tco_fuel_req(int mass, int acc) {\n  if (mass
        &amp;lt;= 6) return acc + mass;\n  return tco_fuel_req((mass / 3) - 2, acc
        + mass);\n}\n\nint recursive_fuel_req(int mass) {\n  return tco_fuel_req(mass,
        0);\n}\n\nint main() {\n  std::ifstream input(&amp;quot;day1_input.txt&amp;quot;);\n  std::string
        line;\n  std::vector&amp;lt;int&amp;gt; modules;\n  while (std::getline(input,
        line)) {\n    int mass = std::stoi(line);\n    modules.push_back(recursive_fuel_req(mass)
        - mass);\n  }\n  std::cout &amp;lt;&amp;lt; std::accumulate(modules.begin(),
        modules.end(),0) &amp;lt;&amp;lt; &amp;#39;\\n&amp;#39;;\n  return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e9ua1/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e9ua1", "created":
        1575241295.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9e9xm0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Gaboik",
        "can_mod_post": false, "created_utc": 1575241328.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_130e81", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using C# (Csharp)\n\nGitHub gist [Problem 1](https://gist.github.com/Gaboik/c648c3f68938d7716a8af7c352ab740a#file-program-cs-L33)\n\nGItHub
        gist [Problem 2](https://gist.github.com/Gaboik/c648c3f68938d7716a8af7c352ab740a#file-program-cs-L38)\n\nFeedback
        welcomed", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using
        C# (Csharp)&lt;/p&gt;\n\n&lt;p&gt;GitHub gist &lt;a href=\"https://gist.github.com/Gaboik/c648c3f68938d7716a8af7c352ab740a#file-program-cs-L33\"&gt;Problem
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;GItHub gist &lt;a href=\"https://gist.github.com/Gaboik/c648c3f68938d7716a8af7c352ab740a#file-program-cs-L38\"&gt;Problem
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Feedback welcomed&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e9xm0/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e9xm0", "created":
        1575241328.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9ecpup",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "__-----_-----__",
        "can_mod_post": false, "created_utc": 1575242369.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_4r8a8yk1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 01 in Hy lang.\n\n[https://github.com/falloutphil/aoc\\_2019/blob/master/day\\_01/01.hy](https://github.com/falloutphil/aoc_2019/blob/master/day_01/01.hy)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day 01 in Hy lang.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/falloutphil/aoc_2019/blob/master/day_01/01.hy\"&gt;https://github.com/falloutphil/aoc_2019/blob/master/day_01/01.hy&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ecpup/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ecpup", "created":
        1575242369.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575243641.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9eegtn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "_nprz",
        "can_mod_post": false, "created_utc": 1575243043.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_3uf9yjs9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Already a couple JavaScript answers but here''s another one!\n\n(Also visible
        on [GitHub](https://github.com/nprz/advent-of-code-2019/blob/master/src/dec1/index.js)
        if you''d like some syntax highlighting!)\n\n    import input from \"./input\";\n    \n    function
        calculateFuelForFuel(moduleFuel) {\n      let nextValue = Math.floor(moduleFuel
        / 3) - 2;\n    \n      if (nextValue &gt; 0) {\n        return nextValue +
        calculateFuelForFuel(nextValue);\n      } else {\n        return 0;\n      }\n    }\n    \n    function
        calculateModuleFuel(modules) {\n      let totalFuel = 0;\n    \n      modules.forEach(module
        =&gt; {\n        const fuelWeight = Math.floor(module / 3) - 2;\n        //
        remove `+ calculateFuelForFuel(fuelWeight);` for solution to question 1\n        totalFuel
        += fuelWeight + calculateFuelForFuel(fuelWeight);\n      });\n    \n      return
        totalFuel;\n    }\n    \n    const moduleFuel = calculateModuleFuel(input);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Already a couple JavaScript
        answers but here&amp;#39;s another one!&lt;/p&gt;\n\n&lt;p&gt;(Also visible
        on &lt;a href=\"https://github.com/nprz/advent-of-code-2019/blob/master/src/dec1/index.js\"&gt;GitHub&lt;/a&gt;
        if you&amp;#39;d like some syntax highlighting!)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        input from &amp;quot;./input&amp;quot;;\n\nfunction calculateFuelForFuel(moduleFuel)
        {\n  let nextValue = Math.floor(moduleFuel / 3) - 2;\n\n  if (nextValue &amp;gt;
        0) {\n    return nextValue + calculateFuelForFuel(nextValue);\n  } else {\n    return
        0;\n  }\n}\n\nfunction calculateModuleFuel(modules) {\n  let totalFuel = 0;\n\n  modules.forEach(module
        =&amp;gt; {\n    const fuelWeight = Math.floor(module / 3) - 2;\n    // remove
        `+ calculateFuelForFuel(fuelWeight);` for solution to question 1\n    totalFuel
        += fuelWeight + calculateFuelForFuel(fuelWeight);\n  });\n\n  return totalFuel;\n}\n\nconst
        moduleFuel = calculateModuleFuel(input);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eegtn/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9eegtn", "created":
        1575243043.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9eioz5", "id": "f9eioz5", "parent_id":
        "t1_f9eegtn", "depth": 1, "children": ["f9eioz5"]}}, {"kind": "more", "data":
        {"count": 164, "name": "t1_f98elxe", "id": "f98elxe", "parent_id": "t3_e4axxe",
        "depth": 0, "children": ["f98elxe", "f98e2oa", "f98g9y9", "f98fqot", "f98elzq",
        "f98xzha", "f98qs5x", "f98ju3b", "f98khp4", "f98gqtq", "f98gftt", "f98z05e",
        "f98yr8h", "f98m1ra", "f98f0mk", "f99149g", "f9ae4ur", "f98uu7p", "f98ysya",
        "f98ll3y", "f99j8kw", "f98q1ba", "f98vqn0", "f9908mr", "f98hqvf", "f9916zx",
        "f98h4kp", "f995vox", "f9932qr", "f98n7b0", "f9d3gbd", "f98u30m", "f9bnqbt",
        "f9e30z9", "f9a5juy", "f99j5x4", "f9bgpnf", "f9agoy2", "f9cs39t", "f9c9axd",
        "f9b3g1e", "f9btcz0", "f9e8ys9", "f9amjs9", "f9bimpm", "f992xqa", "f9eermi",
        "f9bdi1r", "f99o1zf", "f98tguo", "f9bko7p", "f9dnnwd", "f9a24y1", "f9cfhy7",
        "f998ent", "f9bn9zl", "f9b8e5g", "f9a4mxa", "f99us86", "f98tgvj", "f9a38at",
        "f9aazci", "f9abv6n", "f9b5118", "f9arrdj", "f9a8wat", "f9brgyu", "f99cmy2",
        "f98ig6a", "f9c1ee9", "f98f8o5", "f9ccaxs", "f9a1xzz", "f9dhs8c", "f9a9804",
        "f9brdtx", "f98h92l", "f9d7t9r", "f9bojzt", "f9c8pu8", "f9d7eoe", "f9bt11z",
        "f9davk5", "f9bnjn7", "f9bqe57", "f99r9d1", "f9d48p8", "f9biur5", "f99ck7e",
        "f9dsw8j", "f9bbta9", "f9d2flh", "f9e7v2y", "f9br68q", "f9bzvmy", "f9cyg9v",
        "f9db9ap", "f9cy7al", "f9b9r1k", "f9avalt", "f9bjvy2", "f9e2a8s", "f9dofwf",
        "f9c6u9g", "f9dg3fh", "f9d7ohp", "f9e24jv", "f9eg9ka", "f9eawlr", "f992sov"]}}],
        true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_f9bxd0e"]], [13,
        14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16,
        17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 23:06:44 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:45 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=dGJYm8FYo5KLOpCJwP; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 23:06:45 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_e4axxe&children=f98elxe,f98e2oa,f98g9y9,f98fqot,f98elzq,f98xzha,f98qs5x,f98ju3b,f98khp4,f98gqtq,f98gftt,f98z05e,f98yr8h,f98m1ra,f98f0mk,f99149g,f9ae4ur,f98uu7p,f98ysya,f98ll3y,f99j8kw,f98q1ba,f98vqn0,f9908mr,f98hqvf,f9916zx,f98h4kp,f995vox,f9932qr,f98n7b0,f9d3gbd,f98u30m,f9bnqbt,f9e30z9,f9a5juy,f99j5x4,f9bgpnf,f9agoy2,f9cs39t,f9c9axd,f9b3g1e,f9btcz0,f9e8ys9,f9amjs9,f9bimpm,f992xqa,f9eermi,f9bdi1r,f99o1zf,f98tguo,f9bko7p,f9dnnwd,f9a24y1,f9cfhy7,f998ent,f9bn9zl,f9b8e5g,f9a4mxa,f99us86,f98tgvj,f9a38at,f9aazci,f9abv6n,f9b5118,f9arrdj,f9a8wat,f9brgyu,f99cmy2,f98ig6a,f9c1ee9,f98f8o5,f9ccaxs,f9a1xzz,f9dhs8c,f9a9804,f9brdtx,f98h92l,f9d7t9r,f9bojzt,f9c8pu8,f9d7eoe,f9bt11z,f9davk5,f9bnjn7,f9bqe57,f99r9d1,f9d48p8,f9biur5,f99ck7e,f9dsw8j,f9bbta9,f9d2flh,f9e7v2y,f9br68q,f9bzvmy,f9cyg9v,f9db9ap,f9cy7al,f9b9r1k,f9avalt,f9bjvy2,f9e2a8s,f9dofwf,f9c6u9g,f9dg3fh,f9d7ohp,f9e24jv,f9eg9ka,f9eawlr,f992sov
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '31145'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksige6gwe.2.1741475205251.Z0FBQUFBQm56TTJGRUJxdGliLUpZQ1ppbkRITGk3OXo2WVk2NG9ocUdqZUVGRzVnUzQ3azdSTHNYZE9vZ1NUMVJqYVItQ3pyN19CdGRVMUc1Mm4zMHhXYkZSQllPU0hSbklsY3djdmJQeVRGNExTcWRpbzZEMWVxeURkWDQ0RmVnakhTWTMzcW5tRzA;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 23:06:45
        GMT; secure, session_tracker=ldmamefqrrfdhjbmnj.0.1741475205262.Z0FBQUFBQm56TTJGcldtQXVUY3MzYWhvWEpjdWFEMXhVaG02VWYzWThIcUp0N19GZ0hGWHE0UnQ1NUlla2wtNXloNmFTUE4tNmpxNWJTN0ZTc0YtUFpEMGFYQWQtUVlXVG9OQkdGUF9aN0s1SWFiMnVFQXVpRHlxd3VDenVZcDY3VzQydVd3b0tubUI;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 01:06:45
        GMT; secure, edgebucket=Vv4aTDLEVvElJpAOSW; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '32'
      x-ratelimit-remaining:
      - '68.0'
      x-ratelimit-reset:
      - '194'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:45 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98elxe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wicked7000",
        "can_mod_post": false, "created_utc": 1575177380.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_6gptq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "No leaderboard, but was happy with that I managed to do it relatively fast.
        Lesson learnt that don''t use a float otherwise it gets auto formatted to
        scientific notation which screwed me for a minute or two.\n```\n#include &lt;iostream&gt;\n#include
        &lt;vector&gt;\n#include \"days.h\"\n#include \"InputIO.h\"\n\nusing namespace
        std;\n\nint part2(vector&lt;string&gt; lines) {\n\tint sum = 0;\n\tfor (int
        i = 0; i &lt; lines.size(); i++) {\n\t\tint number = stoi(lines.at(i));\n\t\tint
        val = floor(number / 3) - 2;\n\t\tsum += val;\n\t\twhile (val &gt;= 0) {\n\t\t\tval
        = floor(val / 3) - 2;\n\t\t\tif (val &gt;= 0) {\n\t\t\t\tsum += val;\n\t\t\t}\n\t\t}\n\t}\n\treturn
        sum;\n}\n\nint part1(vector&lt;string&gt; lines) {\n\tint sum = 0;\n\tfor
        (int i = 0; i &lt; lines.size(); i++) {\n\t\tint number = stoi(lines.at(i));\n\t\tint
        val = floor(number / 3) - 2;\n\t\tsum += val;\n\t}\n\treturn sum;\n}\n\nvoid
        Day1::run() {\n\tvector&lt;string&gt; lines = readLineByLine(1);\n\tcout &lt;&lt;
        \"========== DAY 1 ==========\" &lt;&lt; endl;\n\tcout &lt;&lt; \"Fuel requirement
        sum (Part 1): \" &lt;&lt; part1(lines) &lt;&lt; endl;\n\tcout &lt;&lt; \"Fuel
        requirement sum (Part 2): \" &lt;&lt; part2(lines) &lt;&lt; endl;\n\tcout
        &lt;&lt; \"==========  END  ==========\" &lt;&lt; endl;\n}\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;No leaderboard, but was happy with that
        I managed to do it relatively fast. Lesson learnt that don&amp;#39;t use a
        float otherwise it gets auto formatted to scientific notation which screwed
        me for a minute or two.\n```&lt;/p&gt;\n\n&lt;h1&gt;include &amp;lt;iostream&amp;gt;&lt;/h1&gt;\n\n&lt;h1&gt;include
        &amp;lt;vector&amp;gt;&lt;/h1&gt;\n\n&lt;h1&gt;include &amp;quot;days.h&amp;quot;&lt;/h1&gt;\n\n&lt;h1&gt;include
        &amp;quot;InputIO.h&amp;quot;&lt;/h1&gt;\n\n&lt;p&gt;using namespace std;&lt;/p&gt;\n\n&lt;p&gt;int
        part2(vector&amp;lt;string&amp;gt; lines) {\n    int sum = 0;\n    for (int
        i = 0; i &amp;lt; lines.size(); i++) {\n        int number = stoi(lines.at(i));\n        int
        val = floor(number / 3) - 2;\n        sum += val;\n        while (val &amp;gt;=
        0) {\n            val = floor(val / 3) - 2;\n            if (val &amp;gt;=
        0) {\n                sum += val;\n            }\n        }\n    }\n    return
        sum;\n}&lt;/p&gt;\n\n&lt;p&gt;int part1(vector&amp;lt;string&amp;gt; lines)
        {\n    int sum = 0;\n    for (int i = 0; i &amp;lt; lines.size(); i++) {\n        int
        number = stoi(lines.at(i));\n        int val = floor(number / 3) - 2;\n        sum
        += val;\n    }\n    return sum;\n}&lt;/p&gt;\n\n&lt;p&gt;void Day1::run()
        {\n    vector&amp;lt;string&amp;gt; lines = readLineByLine(1);\n    cout &amp;lt;&amp;lt;
        &amp;quot;========== DAY 1 ==========&amp;quot; &amp;lt;&amp;lt; endl;\n    cout
        &amp;lt;&amp;lt; &amp;quot;Fuel requirement sum (Part 1): &amp;quot; &amp;lt;&amp;lt;
        part1(lines) &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &amp;quot;Fuel
        requirement sum (Part 2): &amp;quot; &amp;lt;&amp;lt; part2(lines) &amp;lt;&amp;lt;
        endl;\n    cout &amp;lt;&amp;lt; &amp;quot;==========  END  ==========&amp;quot;
        &amp;lt;&amp;lt; endl;\n}\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98elxe/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98elxe", "created": 1575177380.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9c1ee9", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "activeXray", "can_mod_post": false, "created_utc":
        1575218390.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 2,
        "author_fullname": "t2_5zhp5", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Julia\n\n```\nfunction fuelRequirement1(mass)\n    mass
        \u00f7 3 - 2\nend\n\n@show sum([fuelRequirement1(parse(Int64,i)) for i in
        readlines(\"input1.txt\")])\n\nfunction fuelRequirement2(mass)::Int64\n    requirement
        = mass \u00f7 3 - 2\n    requirement &lt;= 0 ? 0 : requirement + fuelRequirement(requirement)\nend\n\n@show
        sum([fuelRequirement2(parse(Int64,i)) for i in readlines(\"input1.txt\")])\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Julia&lt;/p&gt;\n\n&lt;p&gt;```\nfunction
        fuelRequirement1(mass)\n    mass \u00f7 3 - 2\nend&lt;/p&gt;\n\n&lt;p&gt;@show
        sum([fuelRequirement1(parse(Int64,i)) for i in readlines(&amp;quot;input1.txt&amp;quot;)])&lt;/p&gt;\n\n&lt;p&gt;function
        fuelRequirement2(mass)::Int64\n    requirement = mass \u00f7 3 - 2\n    requirement
        &amp;lt;= 0 ? 0 : requirement + fuelRequirement(requirement)\nend&lt;/p&gt;\n\n&lt;p&gt;@show
        sum([fuelRequirement2(parse(Int64,i)) for i in readlines(&amp;quot;input1.txt&amp;quot;)])\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9c1ee9/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9c1ee9", "created":
        1575218390.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575764673.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9d3gbd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hrunt",
        "can_mod_post": false, "created_utc": 1575229826.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 2, "author_fullname": "t2_6xomu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 3**\n\n[code](https://topaz.github.io/paste/#XQAAAQCOAgAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx/DqKkM2yi+AormiEHfw2WxwDuYcZCgH/inn8pE64Gtmqkm3hVio98nr4yipP2Nyl9mLI6s9EZXhYjTo5nEZ5F3L9qTWL/pqBiw0zCw8A0P1t5RHzLB78UdFJ9fY/TbS7J5sFJKijfUrZ1vIz1z7BDTzUCfSLANB3YG/9isZAiVaU/unbNq7UkIbZW8q6BDPuxQV5v9Urym/Hf0+4lYKCsKQT6JkInR9Yy+gHBjia6XsZ2/qaxVAqjD7g9yLH8GRddu/oq+nZIbthxHUD0kZ7JZySa7ahgTL1Q31HVxTFv2r28HtRLeGCwkKKCy/xl2ImtJIna1cEayMx9ZlFeDCQVV+Y5bijTeogfI4o5Tga6h0XSdlmYgFEe7VMzsUTmpcMm7lTh8i7Ha6OnczdwtpANWtMmw4KDxp0xEW94Mm71k5gibkUnkCIIDgichIqZOBMHR8xw//6cTF7g==)\n\n**Poem**\n\nSanta
        is down on his luck  \nHis warp drive is broken and stuck  \nTo launch, we
        need fuel  \nNo, recursive, you fool!  \nOr the spaceship will fly like a
        duck", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python
        3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCOAgAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx/DqKkM2yi+AormiEHfw2WxwDuYcZCgH/inn8pE64Gtmqkm3hVio98nr4yipP2Nyl9mLI6s9EZXhYjTo5nEZ5F3L9qTWL/pqBiw0zCw8A0P1t5RHzLB78UdFJ9fY/TbS7J5sFJKijfUrZ1vIz1z7BDTzUCfSLANB3YG/9isZAiVaU/unbNq7UkIbZW8q6BDPuxQV5v9Urym/Hf0+4lYKCsKQT6JkInR9Yy+gHBjia6XsZ2/qaxVAqjD7g9yLH8GRddu/oq+nZIbthxHUD0kZ7JZySa7ahgTL1Q31HVxTFv2r28HtRLeGCwkKKCy/xl2ImtJIna1cEayMx9ZlFeDCQVV+Y5bijTeogfI4o5Tga6h0XSdlmYgFEe7VMzsUTmpcMm7lTh8i7Ha6OnczdwtpANWtMmw4KDxp0xEW94Mm71k5gibkUnkCIIDgichIqZOBMHR8xw//6cTF7g==\"&gt;code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Poem&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Santa
        is down on his luck&lt;br/&gt;\nHis warp drive is broken and stuck&lt;br/&gt;\nTo
        launch, we need fuel&lt;br/&gt;\nNo, recursive, you fool!&lt;br/&gt;\nOr the
        spaceship will fly like a duck&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9d3gbd/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9d3gbd", "created": 1575229826.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f98e2oa", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Gurrewe", "can_mod_post": false, "created_utc":
        1575177184.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_5308z", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Go:\n\n&amp;#x200B;\n\n    func
        solve(in string) {\n    \tvar sum int\n    \tfor _, row := range strings.Split(strings.TrimSpace(in),
        \"\\n\") {\n    \t\ti, _ := strconv.Atoi(row)\n    \t\tpart := (i / 3) - 2\n    \t\tfuel
        := part\n    \t\tfor {\n    \t\t\tfuel = (fuel / 3) - 2\n    \t\t\tif fuel
        &lt; 1 {\n    \t\t\t\tbreak\n    \t\t\t}\n    \t\t\tpart += fuel\n    \t\t}\n    \t\tsum
        += part\n    \t}\n    \n    \tlog.Println(sum)\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Go:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func
        solve(in string) {\n    var sum int\n    for _, row := range strings.Split(strings.TrimSpace(in),
        &amp;quot;\\n&amp;quot;) {\n        i, _ := strconv.Atoi(row)\n        part
        := (i / 3) - 2\n        fuel := part\n        for {\n            fuel = (fuel
        / 3) - 2\n            if fuel &amp;lt; 1 {\n                break\n            }\n            part
        += fuel\n        }\n        sum += part\n    }\n\n    log.Println(sum)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98e2oa/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98e2oa", "created":
        1575177184.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98elzq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kagidab",
        "can_mod_post": false, "created_utc": 1575177380.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_1ynf3by9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java - 4:33/7:36   828 / 407\n\n    public int recurse(int i){\n        if(i/3
        - 2 &lt;= 0) return 0;\n        return i/3 - 2 + recurse(i / 3 - 2);\n    }\n    \n    public
        int partOne(List&lt;Integer&gt; list) {\n        return list.stream().map(z-&gt;
        z / 3 - 2).reduce(Integer::sum).get();\n    }\n\n    public int partTwo(List&lt;Integer&gt;
        list) {\n        return list.stream().map(z-&gt;recurse(z)).reduce(Integer::sum).get();\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java - 4:33/7:36   828
        / 407&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public int recurse(int i){\n    if(i/3
        - 2 &amp;lt;= 0) return 0;\n    return i/3 - 2 + recurse(i / 3 - 2);\n}\n\npublic
        int partOne(List&amp;lt;Integer&amp;gt; list) {\n    return list.stream().map(z-&amp;gt;
        z / 3 - 2).reduce(Integer::sum).get();\n}\n\npublic int partTwo(List&amp;lt;Integer&amp;gt;
        list) {\n    return list.stream().map(z-&amp;gt;recurse(z)).reduce(Integer::sum).get();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98elzq/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98elzq", "created":
        1575177380.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98f0mk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wlandry",
        "can_mod_post": false, "created_utc": 1575177514.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_810ls", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++ 17 - 902/806\n\nQuick and easy.  I am being more relaxed this year, and
        not even trying for the leaderboard.  So I type out all of the `std::` stuff.  So
        sue me ;)\n\n    #include &lt;iostream&gt;\n    #include &lt;fstream&gt;\n    \n    int64_t
        fuel(const int64_t &amp;mass)\n    {\n      return (mass/3)-2;\n    }\n    \n    int
        main()\n    {\n      int64_t sum(0);\n      std::ifstream infile(\"day1.input\");\n      int64_t
        mass;\n      infile &gt;&gt; mass;\n      while(infile)\n        {\n          //
        std::cout &lt;&lt; mass &lt;&lt; \" \" &lt;&lt; fuel(mass) &lt;&lt; \"\\n\";\n          mass=fuel(mass);\n          while(mass&gt;0)\n            {\n              sum+=mass;\n              //
        std::cout &lt;&lt; \"mass: \" &lt;&lt; mass &lt;&lt; \" \" &lt;&lt; fuel(mass)
        &lt;&lt; \" \" &lt;&lt; sum &lt;&lt; \"\\n\";\n              mass=fuel(mass);\n            }\n          infile
        &gt;&gt; mass;\n        }\n      std::cout &lt;&lt; sum &lt;&lt; \"\\n\";\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++ 17 - 902/806&lt;/p&gt;\n\n&lt;p&gt;Quick
        and easy.  I am being more relaxed this year, and not even trying for the
        leaderboard.  So I type out all of the &lt;code&gt;std::&lt;/code&gt; stuff.  So
        sue me ;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;\n#include
        &amp;lt;fstream&amp;gt;\n\nint64_t fuel(const int64_t &amp;amp;mass)\n{\n  return
        (mass/3)-2;\n}\n\nint main()\n{\n  int64_t sum(0);\n  std::ifstream infile(&amp;quot;day1.input&amp;quot;);\n  int64_t
        mass;\n  infile &amp;gt;&amp;gt; mass;\n  while(infile)\n    {\n      // std::cout
        &amp;lt;&amp;lt; mass &amp;lt;&amp;lt; &amp;quot; &amp;quot; &amp;lt;&amp;lt;
        fuel(mass) &amp;lt;&amp;lt; &amp;quot;\\n&amp;quot;;\n      mass=fuel(mass);\n      while(mass&amp;gt;0)\n        {\n          sum+=mass;\n          //
        std::cout &amp;lt;&amp;lt; &amp;quot;mass: &amp;quot; &amp;lt;&amp;lt; mass
        &amp;lt;&amp;lt; &amp;quot; &amp;quot; &amp;lt;&amp;lt; fuel(mass) &amp;lt;&amp;lt;
        &amp;quot; &amp;quot; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; &amp;quot;\\n&amp;quot;;\n          mass=fuel(mass);\n        }\n      infile
        &amp;gt;&amp;gt; mass;\n    }\n  std::cout &amp;lt;&amp;lt; sum &amp;lt;&amp;lt;
        &amp;quot;\\n&amp;quot;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98f0mk/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98f0mk", "created": 1575177514.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f98f8o5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "surrix", "can_mod_post": false, "created_utc":
        1575177589.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_6lu89", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "JavaScript. Rank 200/837.
        Didn''t fully read the criteria for part 2 for probably the first 10 minutes.\n\n    ''use
        strict'';\n    \n    const fs = require(''fs'');\n    var args = process.argv.slice(2);\n    \n    function
        getFuel1(fuel) {\n        return Math.floor(fuel / 3)-2;\n    }\n    \n    function
        getFuel2(fuel) {\n        var total = 0;\n        var some = Math.floor(fuel
        / 3)-2;\n        if (some &gt; 0) { total += some + getFuel2(some); }\n        return
        total;\n    }\n    \n    function day01(filename) {\n        const input =
        fs.readFileSync(filename)\n            .toString()\n            .split(\"\\n\")\n            .filter(s
        =&gt; s.length &gt; 0)\n            .map(line =&gt; Number(line));\n        var
        part1 = input.map(line =&gt; getFuel1(line)).reduce((a,b) =&gt; a+b,0);\n        var
        part2 = input.map(line =&gt; getFuel2(line)).reduce((a,b) =&gt; a+b,0);\n        return
        [part1, part2];\n    }\n    \n    const [part1,part2] = day01(args[0]);\n    console.log(\"Part
        1: \" + part1); // 3563458\n    console.log(\"Part 2: \" + part2); // 5342292",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript. Rank 200/837.
        Didn&amp;#39;t fully read the criteria for part 2 for probably the first 10
        minutes.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;#39;use strict&amp;#39;;\n\nconst
        fs = require(&amp;#39;fs&amp;#39;);\nvar args = process.argv.slice(2);\n\nfunction
        getFuel1(fuel) {\n    return Math.floor(fuel / 3)-2;\n}\n\nfunction getFuel2(fuel)
        {\n    var total = 0;\n    var some = Math.floor(fuel / 3)-2;\n    if (some
        &amp;gt; 0) { total += some + getFuel2(some); }\n    return total;\n}\n\nfunction
        day01(filename) {\n    const input = fs.readFileSync(filename)\n        .toString()\n        .split(&amp;quot;\\n&amp;quot;)\n        .filter(s
        =&amp;gt; s.length &amp;gt; 0)\n        .map(line =&amp;gt; Number(line));\n    var
        part1 = input.map(line =&amp;gt; getFuel1(line)).reduce((a,b) =&amp;gt; a+b,0);\n    var
        part2 = input.map(line =&amp;gt; getFuel2(line)).reduce((a,b) =&amp;gt; a+b,0);\n    return
        [part1, part2];\n}\n\nconst [part1,part2] = day01(args[0]);\nconsole.log(&amp;quot;Part
        1: &amp;quot; + part1); // 3563458\nconsole.log(&amp;quot;Part 2: &amp;quot;
        + part2); // 5342292\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98f8o5/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98f8o5", "created": 1575177589.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f98fqot", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dashed", "can_mod_post": false, "created_utc":
        1575177763.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_3knkn", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Rust: https://github.com/dashed/advent-of-code/blob/master/day-01-2019/src/main.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust: &lt;a href=\"https://github.com/dashed/advent-of-code/blob/master/day-01-2019/src/main.rs\"&gt;https://github.com/dashed/advent-of-code/blob/master/day-01-2019/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98fqot/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98fqot", "created":
        1575177763.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98g9y9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sakisan_be",
        "can_mod_post": false, "created_utc": 1575177948.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_kf762", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Elm\n    \n    part1 : List Int -&gt; Int\n    part1 input =\n        input\n            |&gt;
        List.map f\n            |&gt; List.sum\n    \n    f m =\n        (m // 3)
        - 2\n    \n    part2 : List Int -&gt; Int\n    part2 input =\n        input\n            |&gt;
        List.map g\n            |&gt; List.sum\n    \n    g m =\n        let a = f
        m in\n        if a &gt; 0 then a + g a\n        else 0", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Elm&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part1 : List
        Int -&amp;gt; Int\npart1 input =\n    input\n        |&amp;gt; List.map f\n        |&amp;gt;
        List.sum\n\nf m =\n    (m // 3) - 2\n\npart2 : List Int -&amp;gt; Int\npart2
        input =\n    input\n        |&amp;gt; List.map g\n        |&amp;gt; List.sum\n\ng
        m =\n    let a = f m in\n    if a &amp;gt; 0 then a + g a\n    else 0\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98g9y9/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98g9y9", "created":
        1575177948.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575440109.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98gftt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mariotacke",
        "can_mod_post": false, "created_utc": 1575178002.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_8lk32w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript/Node (all of my solutions here: https://github.com/mariotacke/advent-of-code-2019/tree/master/day-01-the-tyranny-of-the-rocket-equation)\n\nPart
        One:\n\n    module.exports = (input) =&gt; {\n      const modules = input\n        .split(''\\n'')\n        .map((line)
        =&gt; parseInt(line));\n    \n      return modules.reduce((a, b) =&gt; Math.floor(b
        / 3) - 2 + a, 0);\n    };\n\nPart Two\n\n    module.exports = (input) =&gt;
        {\n      const x = input\n        .split(''\\n'')\n        .map((line) =&gt;
        parseInt(line))\n        .map((initialMass) =&gt; {\n          let totalFuel
        = 0;\n          let remainingMass = initialMass;\n    \n          while (remainingMass
        &gt; 0) {\n            const fuel = Math.floor(remainingMass / 3) - 2;\n    \n            if
        (fuel &lt;= 0) {\n              break;\n            }\n    \n            totalFuel
        += fuel;\n            remainingMass = fuel;\n          }\n    \n          return
        totalFuel;\n        });\n    \n      return x.reduce((a, b) =&gt; a + b, 0);\n    };",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript/Node (all
        of my solutions here: &lt;a href=\"https://github.com/mariotacke/advent-of-code-2019/tree/master/day-01-the-tyranny-of-the-rocket-equation\"&gt;https://github.com/mariotacke/advent-of-code-2019/tree/master/day-01-the-tyranny-of-the-rocket-equation&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;Part
        One:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module.exports = (input) =&amp;gt;
        {\n  const modules = input\n    .split(&amp;#39;\\n&amp;#39;)\n    .map((line)
        =&amp;gt; parseInt(line));\n\n  return modules.reduce((a, b) =&amp;gt; Math.floor(b
        / 3) - 2 + a, 0);\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part Two&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module.exports
        = (input) =&amp;gt; {\n  const x = input\n    .split(&amp;#39;\\n&amp;#39;)\n    .map((line)
        =&amp;gt; parseInt(line))\n    .map((initialMass) =&amp;gt; {\n      let totalFuel
        = 0;\n      let remainingMass = initialMass;\n\n      while (remainingMass
        &amp;gt; 0) {\n        const fuel = Math.floor(remainingMass / 3) - 2;\n\n        if
        (fuel &amp;lt;= 0) {\n          break;\n        }\n\n        totalFuel +=
        fuel;\n        remainingMass = fuel;\n      }\n\n      return totalFuel;\n    });\n\n  return
        x.reduce((a, b) =&amp;gt; a + b, 0);\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98gftt/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98gftt", "created":
        1575178002.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9am5j9", "id": "f9am5j9", "parent_id":
        "t1_f98gftt", "depth": 1, "children": ["f9am5j9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575182526.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98h4kp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "OvidiuRo",
        "can_mod_post": false, "created_utc": 1575178238.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_psofd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++  267/ 776\n\npart1\n\n    int main()\n    {\n    \tstd::fstream in(\"input.in\",
        std::fstream::in);\n    \tstd::fstream out(\"output.out\", std::fstream::out);\n    \t\n    \tint
        n = 0;\n    \tlong long sum = 0;\n    \n    \twhile (in &gt;&gt; n)\n    \t{\n    \t\tsum
        = sum + n / 3 - 2;\n    \t}\n    \n    \tout &lt;&lt; sum;\n    \n    \tin.close();\n    \tout.close();\n    }\n\npart2\n\n    int
        main()\n    {\n    \tstd::fstream in(\"input.in\", std::fstream::in);\n    \tstd::fstream
        out(\"output.out\", std::fstream::out);\n    \n    \tint number = 0;\n    \tlong
        long sum = 0;\n    \n    \twhile (in &gt;&gt; number)\n    \t{\n    \t\tnumber
        = number / 3 - 2;\n    \n    \t\twhile (number &gt; 0)\n    \t\t{\n    \t\t\tsum
        = sum + number;\n    \t\t\tnumber = number / 3 - 2;\n    \t\t}\n    \t}\n    \n    \tout
        &lt;&lt; sum;\n    \n    \tin.close();\n    \tout.close();\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;C++  267/ 776&lt;/p&gt;\n\n&lt;p&gt;part1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        main()\n{\n    std::fstream in(&amp;quot;input.in&amp;quot;, std::fstream::in);\n    std::fstream
        out(&amp;quot;output.out&amp;quot;, std::fstream::out);\n\n    int n = 0;\n    long
        long sum = 0;\n\n    while (in &amp;gt;&amp;gt; n)\n    {\n        sum = sum
        + n / 3 - 2;\n    }\n\n    out &amp;lt;&amp;lt; sum;\n\n    in.close();\n    out.close();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        main()\n{\n    std::fstream in(&amp;quot;input.in&amp;quot;, std::fstream::in);\n    std::fstream
        out(&amp;quot;output.out&amp;quot;, std::fstream::out);\n\n    int number
        = 0;\n    long long sum = 0;\n\n    while (in &amp;gt;&amp;gt; number)\n    {\n        number
        = number / 3 - 2;\n\n        while (number &amp;gt; 0)\n        {\n            sum
        = sum + number;\n            number = number / 3 - 2;\n        }\n    }\n\n    out
        &amp;lt;&amp;lt; sum;\n\n    in.close();\n    out.close();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98h4kp/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98h4kp", "created":
        1575178238.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98hqvf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ilanpillemer",
        "can_mod_post": false, "created_utc": 1575178452.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_64f29zm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Pony Solution\n\n\n    use \"debug\"\n\n    actor Main\n      new create(env:
        Env) =&gt;\n        env.out.print(\"2019 in Pony.. Day 1\")\n        env.out.print(\"====================\")\n        env.input(recover
        LineNotify(A) end,512)\n\n    class A \n      var total:I32 = 0\n\n      fun
        ref apply(s: String) =&gt;\n       try\n         var n:I32 = s.i32()?\n         while
        n &gt;= 0 do   \n           let fuel:I32 = (n / 3) - 2\n           if fuel
        &gt; 0 then\n             total = total + fuel\n           end\n           n
        = fuel\n         end\n       end\n  \n      fun dispose() =&gt;\n        Debug.out(\"final:
        \" + total.string())\n\n\nAnd a stdin line function I wrote to notify the
        actor of lines from stdin.\n\n\n    use \"buffered\"\n\n    interface Applyable
        \n      fun ref apply(l: String)\n      fun dispose() =&gt; None\n\n    class
        LineNotify is InputNotify\n      let _rb: Reader\n      let _p: Applyable\n\n      new
        create(p: Applyable) =&gt;\n        _rb = Reader\n        _p = p\n\n      fun
        ref apply(data: Array[U8] iso) =&gt;\n        _rb.append(consume data)\n        while
        true do\n          try\n            let l = _rb.line()?\n           _p(consume
        l)\n          else\n            break\n          end\n        end\n\n      fun
        ref dispose() =&gt;\n        try\n          if _rb.size() &gt; 0 then\n            let
        rest: Array[U8] val = _rb.block(_rb.size())?\n            _p(String.from_array(rest))\n          end\n        end\n       _p.dispose()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pony Solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        &amp;quot;debug&amp;quot;\n\nactor Main\n  new create(env: Env) =&amp;gt;\n    env.out.print(&amp;quot;2019
        in Pony.. Day 1&amp;quot;)\n    env.out.print(&amp;quot;====================&amp;quot;)\n    env.input(recover
        LineNotify(A) end,512)\n\nclass A \n  var total:I32 = 0\n\n  fun ref apply(s:
        String) =&amp;gt;\n   try\n     var n:I32 = s.i32()?\n     while n &amp;gt;=
        0 do   \n       let fuel:I32 = (n / 3) - 2\n       if fuel &amp;gt; 0 then\n         total
        = total + fuel\n       end\n       n = fuel\n     end\n   end\n\n  fun dispose()
        =&amp;gt;\n    Debug.out(&amp;quot;final: &amp;quot; + total.string())\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And
        a stdin line function I wrote to notify the actor of lines from stdin.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        &amp;quot;buffered&amp;quot;\n\ninterface Applyable \n  fun ref apply(l: String)\n  fun
        dispose() =&amp;gt; None\n\nclass LineNotify is InputNotify\n  let _rb: Reader\n  let
        _p: Applyable\n\n  new create(p: Applyable) =&amp;gt;\n    _rb = Reader\n    _p
        = p\n\n  fun ref apply(data: Array[U8] iso) =&amp;gt;\n    _rb.append(consume
        data)\n    while true do\n      try\n        let l = _rb.line()?\n       _p(consume
        l)\n      else\n        break\n      end\n    end\n\n  fun ref dispose() =&amp;gt;\n    try\n      if
        _rb.size() &amp;gt; 0 then\n        let rest: Array[U8] val = _rb.block(_rb.size())?\n        _p(String.from_array(rest))\n      end\n    end\n   _p.dispose()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98hqvf/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98hqvf", "created":
        1575178452.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575179922.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98ig6a", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AlexAegis",
        "can_mod_post": false, "created_utc": 1575178699.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_gevlz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Rust](https://github.com/AlexAegis/advent-of-code/blob/master/src/2019/day01/rust/src/lib.rs)\n\n    use
        std::cmp;\n    \n    pub struct PartOne;\n    pub struct PartTwo;\n    \n    impl
        aoclib::Solvable&lt;&amp;str, i32&gt; for PartOne {\n    \t/// 3399947, ~1.6\u03bcs\n    \tfn
        solve(input: &amp;str) -&gt; aoclib::Solution&lt;i32&gt; {\n    \t\tOk(input\n    \t\t\t.lines()\n    \t\t\t.map(|n|
        (n.parse::&lt;i32&gt;().unwrap_or(0) / 3) - 2)\n    \t\t\t.sum())\n    \t}\n    }\n    \n    impl
        aoclib::Solvable&lt;&amp;str, i32&gt; for PartTwo {\n    \t// 5097039, ~3.6\u03bcs\n    \tfn
        solve(input: &amp;str) -&gt; aoclib::Solution&lt;i32&gt; {\n    \t\tOk(input\n    \t\t\t.lines()\n    \t\t\t.map(|n|
        PartTwo::fuel(n.parse::&lt;i32&gt;().unwrap_or(0)))\n    \t\t\t.sum())\n    \t}\n    }\n    \n    impl
        PartTwo {\n    \tfn fuel(i: i32) -&gt; i32 {\n    \t\tlet f = cmp::max((i
        / 3) - 2, 0);\n    \t\tf + if f &gt; 0 { PartTwo::fuel(f) } else { 0 }\n    \t}\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/AlexAegis/advent-of-code/blob/master/src/2019/day01/rust/src/lib.rs\"&gt;Rust&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        std::cmp;\n\npub struct PartOne;\npub struct PartTwo;\n\nimpl aoclib::Solvable&amp;lt;&amp;amp;str,
        i32&amp;gt; for PartOne {\n    /// 3399947, ~1.6\u03bcs\n    fn solve(input:
        &amp;amp;str) -&amp;gt; aoclib::Solution&amp;lt;i32&amp;gt; {\n        Ok(input\n            .lines()\n            .map(|n|
        (n.parse::&amp;lt;i32&amp;gt;().unwrap_or(0) / 3) - 2)\n            .sum())\n    }\n}\n\nimpl
        aoclib::Solvable&amp;lt;&amp;amp;str, i32&amp;gt; for PartTwo {\n    // 5097039,
        ~3.6\u03bcs\n    fn solve(input: &amp;amp;str) -&amp;gt; aoclib::Solution&amp;lt;i32&amp;gt;
        {\n        Ok(input\n            .lines()\n            .map(|n| PartTwo::fuel(n.parse::&amp;lt;i32&amp;gt;().unwrap_or(0)))\n            .sum())\n    }\n}\n\nimpl
        PartTwo {\n    fn fuel(i: i32) -&amp;gt; i32 {\n        let f = cmp::max((i
        / 3) - 2, 0);\n        f + if f &amp;gt; 0 { PartTwo::fuel(f) } else { 0 }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98ig6a/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98ig6a", "created":
        1575178699.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98ju3b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tslater2006",
        "can_mod_post": false, "created_utc": 1575179185.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_9q53a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[C# with LINQ](https://github.com/tslater2006/AdventOfCode2019/blob/master/Solutions/Year2019/Day01/Solution.cs)\n\nHad
        a hiccup with grabbing the input file, but other than that was a pretty straightforward
        solve. This isn''t the exact code I used but is a prettier version to match
        the [Write-ups](https://github.com/tslater2006/AdventOfCode2019/blob/master/Solutions/Year2019/Day01/writeup.md)
        I''m doing.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/tslater2006/AdventOfCode2019/blob/master/Solutions/Year2019/Day01/Solution.cs\"&gt;C#
        with LINQ&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Had a hiccup with grabbing the input
        file, but other than that was a pretty straightforward solve. This isn&amp;#39;t
        the exact code I used but is a prettier version to match the &lt;a href=\"https://github.com/tslater2006/AdventOfCode2019/blob/master/Solutions/Year2019/Day01/writeup.md\"&gt;Write-ups&lt;/a&gt;
        I&amp;#39;m doing.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98ju3b/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98ju3b", "created":
        1575179185.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98khp4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "McPqndq",
        "can_mod_post": false, "created_utc": 1575179412.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_dn713h4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hey I honestly have no clue why this code is giving me the wrong answer.
        Im guessing its just a typo somewhere? Javascript:\n\n    const fs = require(''fs'');\n    fs.readFile(''day01.input'',(err,data)=&gt;{\n        data
        = String(data).split(''\\n'').map(num=&gt;Number(num));\n        let sum =
        0;\n        let prev = data.reduce((acc,cur)=&gt;acc+cur,0);\n        prev=Math.floor(prev/3)-2;\n        while(prev&gt;0){\n            //console.log(sum);\n            sum+=prev;\n            //console.log(\"+
        \"+prev);\n            prev=Math.floor(prev/3)-2;\n        }\n        console.log(sum);
        //answer\n    });", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey
        I honestly have no clue why this code is giving me the wrong answer. Im guessing
        its just a typo somewhere? Javascript:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        fs = require(&amp;#39;fs&amp;#39;);\nfs.readFile(&amp;#39;day01.input&amp;#39;,(err,data)=&amp;gt;{\n    data
        = String(data).split(&amp;#39;\\n&amp;#39;).map(num=&amp;gt;Number(num));\n    let
        sum = 0;\n    let prev = data.reduce((acc,cur)=&amp;gt;acc+cur,0);\n    prev=Math.floor(prev/3)-2;\n    while(prev&amp;gt;0){\n        //console.log(sum);\n        sum+=prev;\n        //console.log(&amp;quot;+
        &amp;quot;+prev);\n        prev=Math.floor(prev/3)-2;\n    }\n    console.log(sum);
        //answer\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98khp4/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98khp4", "created": 1575179412.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f98ld53", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1575179725.0, "send_replies": true, "parent_id": "t1_f98khp4",
        "score": 2, "author_fullname": "t2_60niu", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "&gt; Top-level posts
        in Solution Megathreads are for *solutions* only. \n\nPlease post your own
        thread and make sure to flair it with `Help`.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Top-level posts in Solution Megathreads
        are for &lt;em&gt;solutions&lt;/em&gt; only. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Please
        post your own thread and make sure to flair it with &lt;code&gt;Help&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98ld53/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98ld53", "created":
        1575179725.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 1, "name": "t1_f98ln6x", "id": "f98ln6x",
        "parent_id": "t1_f98ld53", "depth": 2, "children": ["f98ln6x"]}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99o9l7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1575193304.0, "send_replies": true,
        "parent_id": "t1_f98khp4", "score": 2, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I think you''re doing the wrong calculation; it isn''t (sum all the values
        then repeated (divide/subtract)), it''s (repeated (divide/subtract and filter
        out any which have gone negative, then sum this set)). I guess you''re implicitly
        including the ones which should go negative by doing it this way.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I think you&amp;#39;re doing the wrong calculation;
        it isn&amp;#39;t (sum all the values then repeated (divide/subtract)), it&amp;#39;s
        (repeated (divide/subtract and filter out any which have gone negative, then
        sum this set)). I guess you&amp;#39;re implicitly including the ones which
        should go negative by doing it this way.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99o9l7/", "subreddit_type":
        "public", "locked": false, "name": "t1_f99o9l7", "created": 1575193304.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9bnlrl", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "McPqndq", "can_mod_post": false, "created_utc":
        1575214456.0, "send_replies": true, "parent_id": "t1_f99o9l7", "score": 2,
        "author_fullname": "t2_dn713h4", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "That was my issue.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;That was my issue.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bnlrl/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bnlrl", "created":
        1575214456.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575180021.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f98ll3y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "andy0liang",
        "can_mod_post": false, "created_utc": 1575179804.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_2xpzbh6g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java, 159/67\n\nHere is my haiku:  \nJust started to code  \nLearning what
        recursion is  \nHere is my haiku:   \n\n\nSolution:\nI will omit the input
        handling; arr is an Integer ArrayList with the inputs.\n\n    public static
        void main(String[] args) {\n        ArrayList &lt;Integer&gt; arr = {Puzzle
        Input};\n        int sum = 0;\n        for(int x = 0; x&lt;arr.size();x++)
        {\n            sum += fuel(arr.get(x));\n        }\n        System.out.println(sum);\n    }\n    public
        static int fuel(int n){\n        int num = (n/3)-2;\n        if(num&lt;=0){\n            return
        0;\n        }\n        return num+fuel(num);\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Java, 159/67&lt;/p&gt;\n\n&lt;p&gt;Here is my haiku:&lt;br/&gt;\nJust
        started to code&lt;br/&gt;\nLearning what recursion is&lt;br/&gt;\nHere is
        my haiku:   &lt;/p&gt;\n\n&lt;p&gt;Solution:\nI will omit the input handling;
        arr is an Integer ArrayList with the inputs.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        static void main(String[] args) {\n    ArrayList &amp;lt;Integer&amp;gt; arr
        = {Puzzle Input};\n    int sum = 0;\n    for(int x = 0; x&amp;lt;arr.size();x++)
        {\n        sum += fuel(arr.get(x));\n    }\n    System.out.println(sum);\n}\npublic
        static int fuel(int n){\n    int num = (n/3)-2;\n    if(num&amp;lt;=0){\n        return
        0;\n    }\n    return num+fuel(num);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98ll3y/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98ll3y", "created":
        1575179804.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98nx7i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1575180640.0, "send_replies": true,
        "parent_id": "t1_f98ll3y", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; Here is my haiku:\n\n&gt; Just started to code\n\n&gt; Learning what
        recursion is\n\n&gt; Here is my haiku:\n\n[Here is my reaction to your haiku.](https://i.pinimg.com/originals/0f/33/40/0f33404e614ffad772cb4abbaeadc5ef.png)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Here
        is my haiku:&lt;/p&gt;\n\n&lt;p&gt;Just started to code&lt;/p&gt;\n\n&lt;p&gt;Learning
        what recursion is&lt;/p&gt;\n\n&lt;p&gt;Here is my haiku:&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://i.pinimg.com/originals/0f/33/40/0f33404e614ffad772cb4abbaeadc5ef.png\"&gt;Here
        is my reaction to your haiku.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98nx7i/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98nx7i", "created": 1575180640.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98q1ba",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Aneurysm9",
        "can_mod_post": false, "created_utc": 1575181411.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_4b465", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My go solution](https://topaz.github.io/paste/#XQAAAQCYAgAAAAAAAAA4GEiZzRd1JAgV4q3RXOWud8Jnn/c8p0yHCRUWkbcDKMIIoXkhg68rTEs4/du/9LS4OhM0Ssa/k/3FMEuPAG1SwzmirZLcMyKIj+xUjiwOJxf2rkxMpY/rvuGRmtbNgjhKxBMbf/Rmglrjeln2Bf2jTN7d99yZri3OjcSsvpJ+uQ1kZN+A7uePC/Cc6bT3zPLX5dtUBLYLQW2ecHbIHf3gf5aZb05ROEuB7V5XppvrZ9P8x3muFTwcdyUGAk+JMpaRntU2TxS26sX5i60OTKxELRD7nZYuxLvVLagJfM9Y9Ta+Y3bwxezya8FMrFGBfjcwHvmDP1GmUNE7aW9OflAJXKz4y7kpxFV51eqKlnK5VSkkbCXwcaL+tYMh1xq4ym9LY4MmpzquxtWSBJWmJ9DMtoVQQyb+P//eD3sA)\n\nI''ve
        got a main package that imports each daily package and uses the interface
        `Runner` implements.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCYAgAAAAAAAAA4GEiZzRd1JAgV4q3RXOWud8Jnn/c8p0yHCRUWkbcDKMIIoXkhg68rTEs4/du/9LS4OhM0Ssa/k/3FMEuPAG1SwzmirZLcMyKIj+xUjiwOJxf2rkxMpY/rvuGRmtbNgjhKxBMbf/Rmglrjeln2Bf2jTN7d99yZri3OjcSsvpJ+uQ1kZN+A7uePC/Cc6bT3zPLX5dtUBLYLQW2ecHbIHf3gf5aZb05ROEuB7V5XppvrZ9P8x3muFTwcdyUGAk+JMpaRntU2TxS26sX5i60OTKxELRD7nZYuxLvVLagJfM9Y9Ta+Y3bwxezya8FMrFGBfjcwHvmDP1GmUNE7aW9OflAJXKz4y7kpxFV51eqKlnK5VSkkbCXwcaL+tYMh1xq4ym9LY4MmpzquxtWSBJWmJ9DMtoVQQyb+P//eD3sA\"&gt;My
        go solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve got a main package
        that imports each daily package and uses the interface &lt;code&gt;Runner&lt;/code&gt;
        implements.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98q1ba/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98q1ba", "created":
        1575181411.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98qs5x",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Cyphase",
        "can_mod_post": false, "created_utc": 1575181680.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_5qnlr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python | 72/435 | #99 global**\n\nWas rushed, used REPL;\n\nno time to
        muster my tools.\n\nWill prepare next time.\n\n    s = ...  # Copied the input
        into the REPL\n    d = [int(x) for x in s.split()]\n    \n    # Part 1\n    sum(x//3
        - 2 for x in d)\n    \n    # Part 2\n    def f(x):\n        total = 0\n        while
        x &gt; 0:\n            x = int(x//3 - 2)\n            total += max(x, 0)\n        return
        total\n    \n    sum(f(x) for x in d)\n\n**Poem**\n\nFueling the rocket,\n\nthe
        equation, recursive;\n\nwish the remainder", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python | 72/435 | #99 global&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Was
        rushed, used REPL;&lt;/p&gt;\n\n&lt;p&gt;no time to muster my tools.&lt;/p&gt;\n\n&lt;p&gt;Will
        prepare next time.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;s = ...  # Copied the
        input into the REPL\nd = [int(x) for x in s.split()]\n\n# Part 1\nsum(x//3
        - 2 for x in d)\n\n# Part 2\ndef f(x):\n    total = 0\n    while x &amp;gt;
        0:\n        x = int(x//3 - 2)\n        total += max(x, 0)\n    return total\n\nsum(f(x)
        for x in d)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Poem&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Fueling
        the rocket,&lt;/p&gt;\n\n&lt;p&gt;the equation, recursive;&lt;/p&gt;\n\n&lt;p&gt;wish
        the remainder&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98qs5x/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98qs5x", "created":
        1575181680.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98tguo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "IQubic",
        "can_mod_post": false, "created_utc": 1575182689.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_djbp4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my Haskell Solution:\n\n    {-# OPTIONS_GHC -Wall #-}\n    \n    module
        Day1 where\n    import Util\n    \n    part1 :: String -&gt; String\n    part1
        = show . sum . map mass . modules\n    \n    part2 :: String -&gt; String\n    part2
        = show . sum . map massWithFuel . modules\n\n    -- This parses the input\n    modules
        :: String -&gt; [Int]\n    modules = getParsedLines number\n    \n    mass
        :: Int -&gt; Int\n    mass x = if n &lt; 0 then 0 else n\n      where\n      n
        = (x `div` 3) - 2\n    \n    massWithFuel :: Int -&gt; Int\n    massWithFuel
        = sum . tail . takeWhile (&gt; 0) . iterate mass", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my Haskell Solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{-#
        OPTIONS_GHC -Wall #-}\n\nmodule Day1 where\nimport Util\n\npart1 :: String
        -&amp;gt; String\npart1 = show . sum . map mass . modules\n\npart2 :: String
        -&amp;gt; String\npart2 = show . sum . map massWithFuel . modules\n\n-- This
        parses the input\nmodules :: String -&amp;gt; [Int]\nmodules = getParsedLines
        number\n\nmass :: Int -&amp;gt; Int\nmass x = if n &amp;lt; 0 then 0 else
        n\n  where\n  n = (x `div` 3) - 2\n\nmassWithFuel :: Int -&amp;gt; Int\nmassWithFuel
        = sum . tail . takeWhile (&amp;gt; 0) . iterate mass\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98tguo/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98tguo", "created":
        1575182689.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98tgvj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "A-UNDERSCORE-D",
        "can_mod_post": false, "created_utc": 1575182690.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_16m0x2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Go,  996 / 1594\n\nSpent far longer on part 2 than I''d care to admit because
        I cant count\n\n\n    package main\n    \n    import (\n    \t\"fmt\"\n    \n    \t\"github.com/A-UNDERSCORE-D/adventofcode/util\"\n    )\n    \n    func
        main() {\n    \tinputOne := util.ReadInts(\"2019/01/input.txt\")\n    \tout
        := 0\n    \tfor _, i := range inputOne {\n    \t\tout += getFuelRequired(i)\n    \t}\n    \tfmt.Println(out)\n    \tfmt.Println(\"part
        2\")\n    \tout2 := 0\n    \tfor _, i := range inputOne {\n    \t\tout2 +=
        getTotalFuelRequired(i)\n    \t}\n    \tfmt.Println(out2)\n    }\n    \n    func
        getTotalFuelRequired(mass int) int {\n    \tinMassFuel := getFuelRequired(mass)\n    \tfuelForFuel
        := getFuelRequired(inMassFuel)\n    \tout := inMassFuel + fuelForFuel\n    \tfor
        {\n    \t\tf := getFuelRequired(fuelForFuel)\n    \t\tif f &lt;= 0 {\n    \t\t\tbreak\n    \t\t}\n    \t\tfuelForFuel
        = f\n    \t\tout += f\n    \t}\n    \n    \treturn out\n    }\n    \n    func
        getFuelRequired(mass int) int {\n    \treturn util.RoundDown((float64(mass)
        / 3) -2)\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go,  996
        / 1594&lt;/p&gt;\n\n&lt;p&gt;Spent far longer on part 2 than I&amp;#39;d care
        to admit because I cant count&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        main\n\nimport (\n    &amp;quot;fmt&amp;quot;\n\n    &amp;quot;github.com/A-UNDERSCORE-D/adventofcode/util&amp;quot;\n)\n\nfunc
        main() {\n    inputOne := util.ReadInts(&amp;quot;2019/01/input.txt&amp;quot;)\n    out
        := 0\n    for _, i := range inputOne {\n        out += getFuelRequired(i)\n    }\n    fmt.Println(out)\n    fmt.Println(&amp;quot;part
        2&amp;quot;)\n    out2 := 0\n    for _, i := range inputOne {\n        out2
        += getTotalFuelRequired(i)\n    }\n    fmt.Println(out2)\n}\n\nfunc getTotalFuelRequired(mass
        int) int {\n    inMassFuel := getFuelRequired(mass)\n    fuelForFuel := getFuelRequired(inMassFuel)\n    out
        := inMassFuel + fuelForFuel\n    for {\n        f := getFuelRequired(fuelForFuel)\n        if
        f &amp;lt;= 0 {\n            break\n        }\n        fuelForFuel = f\n        out
        += f\n    }\n\n    return out\n}\n\nfunc getFuelRequired(mass int) int {\n    return
        util.RoundDown((float64(mass) / 3) -2)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98tgvj/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98tgvj", "created":
        1575182690.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98uu7p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aoc-fan",
        "can_mod_post": false, "created_utc": 1575183204.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_13cqpt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "golang\n\n    func calFuel(ms []int) (fn int) {\n    \t    for _, m := range
        ms {\n            \t\tfn = fn + (m / 3) - 2\n    \t    }\n    \t    return\n    }\n    \n    func
        calFuelForFuel(ms []int) (fn int) {\n    \t    for _, m := range ms {\n    \t\t        for
        m &gt; 8 {\n    \t\t\t            m = (m / 3) - 2\n                \t\t\tfn
        = fn + m\n    \t\t        }\n    \t    }\n    \t    return\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;golang&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func
        calFuel(ms []int) (fn int) {\n        for _, m := range ms {\n                fn
        = fn + (m / 3) - 2\n        }\n        return\n}\n\nfunc calFuelForFuel(ms
        []int) (fn int) {\n        for _, m := range ms {\n                for m &amp;gt;
        8 {\n                        m = (m / 3) - 2\n                        fn =
        fn + m\n                }\n        }\n        return\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98uu7p/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98uu7p", "created":
        1575183204.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99u3w4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lega4",
        "can_mod_post": false, "created_utc": 1575195341.0, "send_replies": true,
        "parent_id": "t1_f98uu7p", "score": 3, "author_fullname": "t2_17grdj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m new to Go and trying to get the basic language concepts and style now.
        Looking at your code, I''ve got couple of questions, could you please clarify?\n\n-
        Any special reason not to use `+=` in the third line?\n- What is this magical
        `8` in the second function? I mean, ok, that''s probably the max value you
        don''t need fuel at all, but I find it really like a  magic number and much
        less readable than just `for m &gt; 0`.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I&amp;#39;m new to Go and trying to get the basic
        language concepts and style now. Looking at your code, I&amp;#39;ve got couple
        of questions, could you please clarify?&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Any
        special reason not to use &lt;code&gt;+=&lt;/code&gt; in the third line?&lt;/li&gt;\n&lt;li&gt;What
        is this magical &lt;code&gt;8&lt;/code&gt; in the second function? I mean,
        ok, that&amp;#39;s probably the max value you don&amp;#39;t need fuel at all,
        but I find it really like a  magic number and much less readable than just
        &lt;code&gt;for m &amp;gt; 0&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99u3w4/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99u3w4", "created":
        1575195341.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9c8q0u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aoc-fan",
        "can_mod_post": false, "created_utc": 1575220513.0, "send_replies": true,
        "parent_id": "t1_f99u3w4", "score": 2, "author_fullname": "t2_13cqpt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "- I am also new to go\n- No reason for not using +=\n- The 8 case help to
        reduce extra if, alternate code\n\n        for m &gt; 0 {\n            m =
        (m / 3) - 2\n            if m &gt; 0 {\n                fn = fn + m\n           }\n        }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;ul&gt;\n&lt;li&gt;I am also
        new to go&lt;/li&gt;\n&lt;li&gt;No reason for not using +=&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The
        8 case help to reduce extra if, alternate code&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for
        m &amp;gt; 0 {\n    m = (m / 3) - 2\n    if m &amp;gt; 0 {\n        fn = fn
        + m\n   }\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9c8q0u/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9c8q0u", "created":
        1575220513.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98vqn0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Dementophobia81",
        "can_mod_post": false, "created_utc": 1575183545.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_pvnqu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3.8, no leaderboard\n\nOnly part 2 is interesting, as I was able to
        use the new Python 3.8 feature \"Assignment Expressions\" (PEP 572) to keep
        the loop as clean as possible. [Code in Github](https://github.com/Dementophobia/advent-of-code-2019/blob/master/2019_01_p2.py)
        and the [Assignment Expression highlight on Twitter](https://twitter.com/Dementophobia/status/1201027632349040640).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3.8, no leaderboard&lt;/p&gt;\n\n&lt;p&gt;Only
        part 2 is interesting, as I was able to use the new Python 3.8 feature &amp;quot;Assignment
        Expressions&amp;quot; (PEP 572) to keep the loop as clean as possible. &lt;a
        href=\"https://github.com/Dementophobia/advent-of-code-2019/blob/master/2019_01_p2.py\"&gt;Code
        in Github&lt;/a&gt; and the &lt;a href=\"https://twitter.com/Dementophobia/status/1201027632349040640\"&gt;Assignment
        Expression highlight on Twitter&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98vqn0/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98vqn0", "created": 1575183545.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f98yr8h", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Philboyd_Studge", "can_mod_post": false,
        "created_utc": 1575184708.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 1, "author_fullname": "t2_5xc8m", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Java\n\n    public
        class Day1 extends AdventOfCode {\n    \n        public Day1(List&lt;String&gt;
        input) {\n            super(input);\n            title = \"The Tyranny of
        the Rocket Equation\";\n            part1Description = \"Total Fuel Requirements:
        \";\n            part2Description = \"Total Fuel Requirements to Wishing Really
        Hard Point: \";\n        }\n    \n        static int calculate(int n) {\n            if
        (n &lt;= 0) return 0;\n            n = n / 3 - 2;\n            return Math.max(n,
        0) + calculate(n);\n        }\n    \n        @Override\n        public Object
        part1() {\n            return input.stream()\n                    .mapToInt(Integer::parseInt)\n                    .map(x
        -&gt; x / 3 - 2)\n                    .sum();\n        }\n    \n        @Override\n        public
        Object part2() {   \n            return input.stream()\n                    .mapToInt(Integer::parseInt)\n                    .map(Day1::calculate)\n                    .sum();\n        }   \n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        class Day1 extends AdventOfCode {\n\n    public Day1(List&amp;lt;String&amp;gt;
        input) {\n        super(input);\n        title = &amp;quot;The Tyranny of
        the Rocket Equation&amp;quot;;\n        part1Description = &amp;quot;Total
        Fuel Requirements: &amp;quot;;\n        part2Description = &amp;quot;Total
        Fuel Requirements to Wishing Really Hard Point: &amp;quot;;\n    }\n\n    static
        int calculate(int n) {\n        if (n &amp;lt;= 0) return 0;\n        n =
        n / 3 - 2;\n        return Math.max(n, 0) + calculate(n);\n    }\n\n    @Override\n    public
        Object part1() {\n        return input.stream()\n                .mapToInt(Integer::parseInt)\n                .map(x
        -&amp;gt; x / 3 - 2)\n                .sum();\n    }\n\n    @Override\n    public
        Object part2() {   \n        return input.stream()\n                .mapToInt(Integer::parseInt)\n                .map(Day1::calculate)\n                .sum();\n    }   \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98yr8h/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98yr8h", "created":
        1575184708.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98ysya",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "loarabia",
        "can_mod_post": false, "created_utc": 1575184726.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_3g06p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust: No leaderboard\n\np1:2705, p2:2530\n\n [https://github.com/loarabia/AdventOfCode/blob/master/2019/day1/src/main.rs](https://github.com/loarabia/AdventOfCode/blob/master/2019/day1/src/main.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust: No leaderboard&lt;/p&gt;\n\n&lt;p&gt;p1:2705,
        p2:2530&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/loarabia/AdventOfCode/blob/master/2019/day1/src/main.rs\"&gt;https://github.com/loarabia/AdventOfCode/blob/master/2019/day1/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98ysya/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98ysya", "created":
        1575184726.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98z05e",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lukechampine",
        "can_mod_post": false, "created_utc": 1575184803.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_124j5o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hoon:\n\n    |=  ms=(list @)\n    =&lt;\n    :-  (roll (turn ms fuel) add)\n      (roll
        (turn ms recfuel) add)\n    |%\n    ++  fuel\n      |=  m=@\n      (sub (div
        m 3) 2)\n    ++  recfuel\n      |=  m=@\n      ?:  =(m 0)  0\n      =.  m  (sub
        (max (div m 3) 2) 2)\n      (add m $)\n    --", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Hoon:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;|=  ms=(list
        @)\n=&amp;lt;\n:-  (roll (turn ms fuel) add)\n  (roll (turn ms recfuel) add)\n|%\n++  fuel\n  |=  m=@\n  (sub
        (div m 3) 2)\n++  recfuel\n  |=  m=@\n  ?:  =(m 0)  0\n  =.  m  (sub (max
        (div m 3) 2) 2)\n  (add m $)\n--\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98z05e/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98z05e", "created":
        1575184803.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9908mr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Haskell, no leaderboard.\n\n    main = do\n      ls &lt;-
        readFile \"input_day01.txt\"\n      let massData = map asInt (lines ls)\n          totalFuelNeeded
        = totalFuel (map calculateFuel massData)\n      print totalFuelNeeded\n    \n    asInt
        :: String -&gt; Int\n    asInt x = read x :: Int\n    \n    calculateFuel
        :: Int -&gt; Int\n    calculateFuel mass \n        | fuelNeeded &lt;= 0 =
        0\n        | otherwise = calculateFuel fuelNeeded + fuelNeeded\n      where
        fuelNeeded = div mass 3 - 2\n    \n    totalFuel :: [Int] -&gt; Int\n    totalFuel
        fd = foldr (+) 0 fd", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9908mr", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell, no leaderboard.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;main
        = do\n  ls &amp;lt;- readFile &amp;quot;input_day01.txt&amp;quot;\n  let massData
        = map asInt (lines ls)\n      totalFuelNeeded = totalFuel (map calculateFuel
        massData)\n  print totalFuelNeeded\n\nasInt :: String -&amp;gt; Int\nasInt
        x = read x :: Int\n\ncalculateFuel :: Int -&amp;gt; Int\ncalculateFuel mass
        \n    | fuelNeeded &amp;lt;= 0 = 0\n    | otherwise = calculateFuel fuelNeeded
        + fuelNeeded\n  where fuelNeeded = div mass 3 - 2\n\ntotalFuel :: [Int] -&amp;gt;
        Int\ntotalFuel fd = foldr (+) 0 fd\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9908mr/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575185274.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575185274.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9916zx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Scala solution [here](https://github.com/bbstilson/adventofcode/blob/master/2019/src/main/scala/org/bbstilson/Day1.scala).",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_f9916zx",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Scala
        solution &lt;a href=\"https://github.com/bbstilson/adventofcode/blob/master/2019/src/main/scala/org/bbstilson/Day1.scala\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9916zx/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575185638.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575185638.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575187308.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9932qr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "shawnseann",
        "can_mod_post": false, "created_utc": 1575186374.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_2hsvga3c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Did it in C \n[paste](https://topaz.github.io/paste/#XQAAAQBnBQAAAAAAAAAX4HxGqJ3otv9sTpmqwCvcEl6BHY3zXjh98TtW7wESqNlzMQf0TFvd6wDot1dsEzlLDbjzhKZaz9eO85XFAIs6k2yF5jlhC7ZRgAiKiHrthiYscCH4WAbHunw8wASO9VbCxhonpyhunYMs2isuTFt/tqXec6VNdW3L6Lo8xbtthxaYW8QcuiJAeux+f0S3hY7iRV7VH3eD+grrBUa5UYmFJW3/ZPsXZkSJ0yyl9ra0kL5L/Y0S6cVAuRFePvFgKSnBmUZwa117by1vaJ1LSh6c4sncqmexoZ0LLJvHSGdNp3wlRuTCWSFrg7DR6H2EsU6qeN2NYnPQ8VCrJvb2Z0f+k67Om1WBX+WJ2iEpPmNaTVQwFRN9N4BcrrZ0dMKqdOPohJMGa31ZGU9jwVtphECVD74S2I1WBwKwU/o11JMgkFyhtHDGC3tS00zPmsYNsSLHOYaLNF1yAgTeCNEqgGt9S9+4SkXEb0JM5Cdy4JLFwX8tSjYYoHTw7tQTfUILIC9zhkZaNZD9XkImm7C7gI8ewtCrMcJlmZD2ptIunaEwg28Hj1I2kLcU9fCIPlWAZWxgJ5zUYQwxZg275fz+mwnUTCaZwIi8zrWsWPfQ5C6DobKGk5Q6vFxCvD7RkUwsi0kf3d52gKZfBP7W3eg0dGY1DODKuqKi4+GCfhbRDvheDbn9BJhPdJDgCL/PB1yWO/ma4ArVtV7Rd4RiYeZsXGcd25htS+ivOHfClhIRqItTupHerlZfDodrOvGnuqJ8h5oAhxRT3IxmfvxF3hVlV4hCTM0ZdHASoA1xjetqtNqsFfKz5VKgyiroFGcV8UE7cvffbDCdOXaj0yFWC6EU23uwdru7KX2b4PWg19E+1ZEM7IzMhlttg0ZfWpXL1W1he28Sz2RCaQdSWfc0FaKBx7gIK+P/ndrv9Q==)\n\nFeel
        free to comment on my code :)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Did it in C \n&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBnBQAAAAAAAAAX4HxGqJ3otv9sTpmqwCvcEl6BHY3zXjh98TtW7wESqNlzMQf0TFvd6wDot1dsEzlLDbjzhKZaz9eO85XFAIs6k2yF5jlhC7ZRgAiKiHrthiYscCH4WAbHunw8wASO9VbCxhonpyhunYMs2isuTFt/tqXec6VNdW3L6Lo8xbtthxaYW8QcuiJAeux+f0S3hY7iRV7VH3eD+grrBUa5UYmFJW3/ZPsXZkSJ0yyl9ra0kL5L/Y0S6cVAuRFePvFgKSnBmUZwa117by1vaJ1LSh6c4sncqmexoZ0LLJvHSGdNp3wlRuTCWSFrg7DR6H2EsU6qeN2NYnPQ8VCrJvb2Z0f+k67Om1WBX+WJ2iEpPmNaTVQwFRN9N4BcrrZ0dMKqdOPohJMGa31ZGU9jwVtphECVD74S2I1WBwKwU/o11JMgkFyhtHDGC3tS00zPmsYNsSLHOYaLNF1yAgTeCNEqgGt9S9+4SkXEb0JM5Cdy4JLFwX8tSjYYoHTw7tQTfUILIC9zhkZaNZD9XkImm7C7gI8ewtCrMcJlmZD2ptIunaEwg28Hj1I2kLcU9fCIPlWAZWxgJ5zUYQwxZg275fz+mwnUTCaZwIi8zrWsWPfQ5C6DobKGk5Q6vFxCvD7RkUwsi0kf3d52gKZfBP7W3eg0dGY1DODKuqKi4+GCfhbRDvheDbn9BJhPdJDgCL/PB1yWO/ma4ArVtV7Rd4RiYeZsXGcd25htS+ivOHfClhIRqItTupHerlZfDodrOvGnuqJ8h5oAhxRT3IxmfvxF3hVlV4hCTM0ZdHASoA1xjetqtNqsFfKz5VKgyiroFGcV8UE7cvffbDCdOXaj0yFWC6EU23uwdru7KX2b4PWg19E+1ZEM7IzMhlttg0ZfWpXL1W1he28Sz2RCaQdSWfc0FaKBx7gIK+P/ndrv9Q==\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Feel
        free to comment on my code :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9932qr/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9932qr", "created": 1575186374.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_f9av5eq", "id": "f9av5eq", "parent_id": "t1_f9932qr", "depth": 1, "children":
        ["f9av5eq"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1575201395.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f995vox", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "alexmeli",
        "can_mod_post": false, "created_utc": 1575187491.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_haod2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Elixir\n\nEdit: Changed part 2 to use streams\n\n      def part1(modules)
        do\n        modules |&gt; Enum.map(&amp;(div(&amp;1, 3) - 2)) |&gt; Enum.sum\n      end\n    \n      def
        part2(modules) do\n        modules |&gt; Enum.map(&amp;(fuel(&amp;1))) |&gt;
        Enum.sum\n      end\n    \n    \n      def fuel(mass) do\n        mass\n          |&gt;
        Stream.iterate(&amp;(div(&amp;1, 3) - 2))\n          |&gt; Enum.take_while(&amp;(&amp;1
        &gt; 0))\n          |&gt; Enum.drop(1)\n          |&gt; Enum.sum\n      end",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elixir&lt;/p&gt;\n\n&lt;p&gt;Edit:
        Changed part 2 to use streams&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  def part1(modules)
        do\n    modules |&amp;gt; Enum.map(&amp;amp;(div(&amp;amp;1, 3) - 2)) |&amp;gt;
        Enum.sum\n  end\n\n  def part2(modules) do\n    modules |&amp;gt; Enum.map(&amp;amp;(fuel(&amp;amp;1)))
        |&amp;gt; Enum.sum\n  end\n\n\n  def fuel(mass) do\n    mass\n      |&amp;gt;
        Stream.iterate(&amp;amp;(div(&amp;amp;1, 3) - 2))\n      |&amp;gt; Enum.take_while(&amp;amp;(&amp;amp;1
        &amp;gt; 0))\n      |&amp;gt; Enum.drop(1)\n      |&amp;gt; Enum.sum\n  end\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f995vox/",
        "subreddit_type": "public", "locked": false, "name": "t1_f995vox", "created":
        1575187491.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a1fxo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "egze",
        "can_mod_post": false, "created_utc": 1575197686.0, "send_replies": true,
        "parent_id": "t1_f995vox", "score": 3, "author_fullname": "t2_4capg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You can get rid of floor if you use `div` for division.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;You can get rid of floor if you use &lt;code&gt;div&lt;/code&gt;
        for division.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a1fxo/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a1fxo", "created":
        1575197686.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9ad3rb", "id": "f9ad3rb", "parent_id":
        "t1_f9a1fxo", "depth": 2, "children": ["f9ad3rb"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575225628.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f998ent", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sim642",
        "can_mod_post": false, "created_utc": 1575188342.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_49npq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My **Scala** solutions](https://github.com/sim642/adventofcode/blob/master/src/main/scala/eu/sim642/adventofcode2019/Day1.scala).\n\nNothing
        special, just another non-tail-recursive solution for part 2 because it was
        good enough.\n\nEdit: Added a closed form solution also, as mentioned here:
        https://old.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cf494/.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/sim642/adventofcode/blob/master/src/main/scala/eu/sim642/adventofcode2019/Day1.scala\"&gt;My
        &lt;strong&gt;Scala&lt;/strong&gt; solutions&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Nothing
        special, just another non-tail-recursive solution for part 2 because it was
        good enough.&lt;/p&gt;\n\n&lt;p&gt;Edit: Added a closed form solution also,
        as mentioned here: &lt;a href=\"https://old.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cf494/\"&gt;https://old.reddit.com/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cf494/&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f998ent/",
        "subreddit_type": "public", "locked": false, "name": "t1_f998ent", "created":
        1575188342.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99j5x4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sindrekjr",
        "can_mod_post": false, "created_utc": 1575191743.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_52t2a4e0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n\nPart 1:\n\n    protected override string SolvePartOne() {\n      return
        Input.SplitByNewline()\n        .Select(mass =&gt; int.Parse(mass) / 3 - 2)\n        .ToArray&lt;int&gt;()\n        .Sum().ToString();\n    }\n\nPart
        2:\n\n    protected override string SolvePartTwo() {\n      return Input.SplitByNewline()\n        .Select(mass
        =&gt; FuelFuel(int.Parse(mass)))\n        .ToArray&lt;int&gt;()\n        .Sum().ToString();\n    }\n    \n    int
        FuelFuel(int module) {\n      int fuel = module / 3 - 2; \n      return fuel
        &lt;= 0 ? 0 : fuel + FuelFuel(fuel); \n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;protected
        override string SolvePartOne() {\n  return Input.SplitByNewline()\n    .Select(mass
        =&amp;gt; int.Parse(mass) / 3 - 2)\n    .ToArray&amp;lt;int&amp;gt;()\n    .Sum().ToString();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;protected override string SolvePartTwo()
        {\n  return Input.SplitByNewline()\n    .Select(mass =&amp;gt; FuelFuel(int.Parse(mass)))\n    .ToArray&amp;lt;int&amp;gt;()\n    .Sum().ToString();\n}\n\nint
        FuelFuel(int module) {\n  int fuel = module / 3 - 2; \n  return fuel &amp;lt;=
        0 ? 0 : fuel + FuelFuel(fuel); \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99j5x4/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99j5x4", "created":
        1575191743.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99j8kw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mikal82",
        "can_mod_post": false, "created_utc": 1575191773.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_2q6lea2k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Scala:\n\n    object Day1 {\n      val modules= scala.io.Source.fromFile(\"aoc/19_1.txt\")\n                   .getLines.toArray.map(_.toInt);\n      def
        getFuel(weight:Int, part1:Boolean=false, soFar:Int=0) :Int = {\n        val
        fuel = weight/3-2\n        if (part1 | fuel&lt;6) soFar+fuel else getFuel(fuel,
        part1, soFar+fuel)\n      }\n      def apply(part1:Boolean=true) = modules.map(x=&gt;getFuel(x,part1)).reduce(_+_)\n    }\n    (Day1(true),Day1(false))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Scala:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;object
        Day1 {\n  val modules= scala.io.Source.fromFile(&amp;quot;aoc/19_1.txt&amp;quot;)\n               .getLines.toArray.map(_.toInt);\n  def
        getFuel(weight:Int, part1:Boolean=false, soFar:Int=0) :Int = {\n    val fuel
        = weight/3-2\n    if (part1 | fuel&amp;lt;6) soFar+fuel else getFuel(fuel,
        part1, soFar+fuel)\n  }\n  def apply(part1:Boolean=true) = modules.map(x=&amp;gt;getFuel(x,part1)).reduce(_+_)\n}\n(Day1(true),Day1(false))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99j8kw/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99j8kw", "created":
        1575191773.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575199158.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99o1zf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "chrispsn_ok",
        "can_mod_post": false, "created_utc": 1575193220.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_7tpvnvx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "k7: \n\n    f:0|-2+3/\n    +//''(f'';1_+f\\'')@\\:`i$0:`1.txt", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;k7: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f:0|-2+3/\n+//&amp;#39;(f&amp;#39;;1_+f\\&amp;#39;)@\\:`i$0:`1.txt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99o1zf/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99o1zf", "created":
        1575193220.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a6tqn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "icendoan",
        "can_mod_post": false, "created_utc": 1575199380.0, "send_replies": true,
        "parent_id": "t1_f99o1zf", "score": 2, "author_fullname": "t2_bnk0w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nice! The tacit `f` is nicer than my lambda.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Nice! The tacit &lt;code&gt;f&lt;/code&gt; is nicer
        than my lambda.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a6tqn/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a6tqn", "created":
        1575199380.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_f9ag6zf", "id": "f9ag6zf", "parent_id":
        "t1_f9a6tqn", "depth": 2, "children": ["f9ag6zf", "f9al9p2"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99us86",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lega4",
        "can_mod_post": false, "created_utc": 1575195620.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_17grdj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m from Python world and trying to learn more about Golang, here it is:\n\n\n    func
        getFuelMassPart1(mass int) int {\n        return mass/3 - 2\n    }\n\n    func
        getFuelMassPart2(mass int) int {\n        totalFuelMass := 0\n\n        for
        {\n            mass = mass/3 - 2\n            if mass &lt; 0 {\n                break\n            }\n            totalFuelMass
        += mass\n        }\n\n        return totalFuelMass\n    }", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m from Python world and trying
        to learn more about Golang, here it is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func
        getFuelMassPart1(mass int) int {\n    return mass/3 - 2\n}\n\nfunc getFuelMassPart2(mass
        int) int {\n    totalFuelMass := 0\n\n    for {\n        mass = mass/3 - 2\n        if
        mass &amp;lt; 0 {\n            break\n        }\n        totalFuelMass +=
        mass\n    }\n\n    return totalFuelMass\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99us86/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99us86", "created":
        1575195620.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a38at",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JakDrako",
        "can_mod_post": false, "created_utc": 1575198223.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_477xl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "VB.Net in LINQPad, using [MoreLinq](https://www.nuget.org/packages/morelinq/)
        to generate a sequence for part 2.\n\n    Sub Main          \n\n        Dim
        input As String() = GetDay(1)        \n\n        Dim fuel = Function(mass
        As Integer) mass \\ 3 - 2\n        \n        input.Select(Function(x) fuel(CInt(x))).Sum.Dump(\"Part
        1\")\n        \n        input.Select(Function(x) MoreEnumerable.Generate(CInt(x),
        fuel) _\n                                               .Skip(1) _ \n                                               .TakeWhile(Function(z)
        z &gt; 0) _\n                                               .Sum\n                    ).Sum.Dump(\"Part
        2\")\n    End Sub", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;VB.Net
        in LINQPad, using &lt;a href=\"https://www.nuget.org/packages/morelinq/\"&gt;MoreLinq&lt;/a&gt;
        to generate a sequence for part 2.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Sub
        Main          \n\n    Dim input As String() = GetDay(1)        \n\n    Dim
        fuel = Function(mass As Integer) mass \\ 3 - 2\n\n    input.Select(Function(x)
        fuel(CInt(x))).Sum.Dump(&amp;quot;Part 1&amp;quot;)\n\n    input.Select(Function(x)
        MoreEnumerable.Generate(CInt(x), fuel) _\n                                           .Skip(1)
        _ \n                                           .TakeWhile(Function(z) z &amp;gt;
        0) _\n                                           .Sum\n                ).Sum.Dump(&amp;quot;Part
        2&amp;quot;)\nEnd Sub\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a38at/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9a38at", "created": 1575198223.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9a4mxa", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Xygen8", "can_mod_post": false, "created_utc":
        1575198650.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_h4hyj", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**Python**\n\n    import
        math\n    \n    def main():\n        fuel_req = 0\n    \n        with open(\"day_1_input.txt\",
        \"r\") as file:\n            for mass_entry in file:\n                fuel_to_add
        = math.floor(int(mass_entry.rstrip()) / 3) - 2\n    \n                while
        fuel_to_add &gt; 0:\n                    fuel_req += fuel_to_add\n                    fuel_to_add
        = math.floor(fuel_to_add / 3) - 2\n    \n        print(fuel_req)\n    \n    main()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        math\n\ndef main():\n    fuel_req = 0\n\n    with open(&amp;quot;day_1_input.txt&amp;quot;,
        &amp;quot;r&amp;quot;) as file:\n        for mass_entry in file:\n            fuel_to_add
        = math.floor(int(mass_entry.rstrip()) / 3) - 2\n\n            while fuel_to_add
        &amp;gt; 0:\n                fuel_req += fuel_to_add\n                fuel_to_add
        = math.floor(fuel_to_add / 3) - 2\n\n    print(fuel_req)\n\nmain()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a4mxa/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a4mxa", "created":
        1575198650.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a5juy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "IgneSapien",
        "can_mod_post": false, "created_utc": 1575199023.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_4soo7s5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#, going to see if I can get through more than just a few days this year!\n\n    static
        void Main()\n    {\n    \tint t = 0;\n    \tforeach (string s in File.ReadLines(\"Task1.txt\"))\n    \t{\n    \t\tt
        += ReFuleCost(int.Parse(s));\n    \t}\n    \tConsole.WriteLine(t.ToString());\n    \tConsole.ReadLine();\n    }\n    \n    private
        static int FuleCost(int w)\n    {\n    \treturn(w / 3) - 2;\n    }\n    \n    private
        static int ReFuleCost(int w)\n    {\n    \tif (w &lt;= 8)\n    \t{\n    \t\treturn
        0;\n    \t}\n    \tint r = (w / 3) - 2;\n    \treturn r + ReFuleCost(r);\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#, going to see if
        I can get through more than just a few days this year!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;static
        void Main()\n{\n    int t = 0;\n    foreach (string s in File.ReadLines(&amp;quot;Task1.txt&amp;quot;))\n    {\n        t
        += ReFuleCost(int.Parse(s));\n    }\n    Console.WriteLine(t.ToString());\n    Console.ReadLine();\n}\n\nprivate
        static int FuleCost(int w)\n{\n    return(w / 3) - 2;\n}\n\nprivate static
        int ReFuleCost(int w)\n{\n    if (w &amp;lt;= 8)\n    {\n        return 0;\n    }\n    int
        r = (w / 3) - 2;\n    return r + ReFuleCost(r);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a5juy/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a5juy", "created":
        1575199023.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9a8wat",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pszocik",
        "can_mod_post": false, "created_utc": 1575199973.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_3eakr93o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "python 3 part 2\n\n    summ=0\n    for fuel in fuels:\n      x=fuel\n      while
        x &gt; 0:\n        x=int(x/3)-2\n        if x &gt; 0:\n          summ+=x\n    print(summ)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;python 3 part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;summ=0\nfor
        fuel in fuels:\n  x=fuel\n  while x &amp;gt; 0:\n    x=int(x/3)-2\n    if
        x &amp;gt; 0:\n      summ+=x\nprint(summ)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a8wat/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9a8wat", "created":
        1575199973.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575200892.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9aazci", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "asgardian28",
        "can_mod_post": false, "created_utc": 1575200658.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_8mb6chw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3 part 2\n\n    f=open(''input.txt'')\n    lines = [line.rstrip(''\\n'')
        for line in f]\n    def calc_fuel(x):\n        out = x//3-2\n        if out
        &lt;= 0: return 0\n        else: return out + calc_fuel(out)\n    sum([calc_fuel(int(l))
        for l in lines])", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3 part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f=open(&amp;#39;input.txt&amp;#39;)\nlines
        = [line.rstrip(&amp;#39;\\n&amp;#39;) for line in f]\ndef calc_fuel(x):\n    out
        = x//3-2\n    if out &amp;lt;= 0: return 0\n    else: return out + calc_fuel(out)\nsum([calc_fuel(int(l))
        for l in lines])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9aazci/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9aazci", "created": 1575200658.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9ae4ur", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "nerfipro174", "can_mod_post": false, "created_utc":
        1575201499.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_13w8jg", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**C++**\n\n    #include
        &lt;iostream&gt;\n    #include &lt;fstream&gt;\n    #include &lt;cmath&gt;\n    \n    int
        main()\n    {\n    \tint mass{};\n    \tint fuel{};\n    \tint totalFuel{};\n    \n    \tstd::ifstream
        file;\n    \n    \tfile.open(\"E:\\\\Advent of Code 2019\\\\Day 1.txt\");\n    \n    \tif
        (!file)\n    \t{\n    \t\tstd::cout &lt;&lt; \"Unable to open the file\";\n    \t\treturn
        0;\n    \t}\n    \n    \twhile (file.eof() == false)\n    \t{\n    \t\tfile
        &gt;&gt; mass;\n    \n    \t\tfuel = (floor(mass / static_cast &lt;double&gt;
        (3))) - 2;\n    \n    \t\ttotalFuel += fuel;\n    \n    \t\twhile ((floor(fuel
        / static_cast &lt;double&gt;(3)) - 2) &gt; 0)\n    \t\t{\n    \t\t\tfuel =
        floor(fuel / static_cast &lt;double&gt; (3)) - 2;\n    \t\t\ttotalFuel +=
        fuel;\n    \t\t}\n    \t}\n    \n    \tstd::cout &lt;&lt; \"Sum of the fuel
        requirements for all of the modules is \" &lt;&lt; totalFuel;\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;fstream&amp;gt;\n#include &amp;lt;cmath&amp;gt;\n\nint
        main()\n{\n    int mass{};\n    int fuel{};\n    int totalFuel{};\n\n    std::ifstream
        file;\n\n    file.open(&amp;quot;E:\\\\Advent of Code 2019\\\\Day 1.txt&amp;quot;);\n\n    if
        (!file)\n    {\n        std::cout &amp;lt;&amp;lt; &amp;quot;Unable to open
        the file&amp;quot;;\n        return 0;\n    }\n\n    while (file.eof() ==
        false)\n    {\n        file &amp;gt;&amp;gt; mass;\n\n        fuel = (floor(mass
        / static_cast &amp;lt;double&amp;gt; (3))) - 2;\n\n        totalFuel += fuel;\n\n        while
        ((floor(fuel / static_cast &amp;lt;double&amp;gt;(3)) - 2) &amp;gt; 0)\n        {\n            fuel
        = floor(fuel / static_cast &amp;lt;double&amp;gt; (3)) - 2;\n            totalFuel
        += fuel;\n        }\n    }\n\n    std::cout &amp;lt;&amp;lt; &amp;quot;Sum
        of the fuel requirements for all of the modules is &amp;quot; &amp;lt;&amp;lt;
        totalFuel;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ae4ur/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9ae4ur", "created": 1575201499.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9agoy2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "tjugg", "can_mod_post": false, "created_utc":
        1575202547.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_i22pc", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "js\n\n    const input =
        require(''./input.json'');\n    \n    const partone = input.reduce((acc, current)
        =&gt; {\n    \treturn acc + (Math.floor(current / 3) - 2)\n    }, 0)\n    \n    const
        parttwo = input.reduce((acc, current) =&gt; {\n    \tconst calculateTotal
        = (currentSum, total) =&gt; {\n    \t\tconst sum = (Math.floor(currentSum
        / 3) - 2)\n    \n    \t\tif (sum &lt;= 0) {\n    \t\t\treturn total;\n    \t\t}\n    \n    \t\treturn
        calculateTotal(sum, total + sum)\n    \t}\n    \n    \treturn acc + calculateTotal(current,
        0)\n    }, 0)\n    \n    console.log(''partone'', partone)\n    console.log(''parttwo'',
        parttwo)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;js&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        input = require(&amp;#39;./input.json&amp;#39;);\n\nconst partone = input.reduce((acc,
        current) =&amp;gt; {\n    return acc + (Math.floor(current / 3) - 2)\n}, 0)\n\nconst
        parttwo = input.reduce((acc, current) =&amp;gt; {\n    const calculateTotal
        = (currentSum, total) =&amp;gt; {\n        const sum = (Math.floor(currentSum
        / 3) - 2)\n\n        if (sum &amp;lt;= 0) {\n            return total;\n        }\n\n        return
        calculateTotal(sum, total + sum)\n    }\n\n    return acc + calculateTotal(current,
        0)\n}, 0)\n\nconsole.log(&amp;#39;partone&amp;#39;, partone)\nconsole.log(&amp;#39;parttwo&amp;#39;,
        parttwo)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9agoy2/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9agoy2", "created":
        1575202547.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575205482.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9amjs9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "valtism",
        "can_mod_post": false, "created_utc": 1575204236.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_38u9g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# JavaScript / JS\n\nUsed map/reduce and recursion. I believe this is the
        cleanest way.\n\n    const part2 = input =&gt; {\n      const masses = input.split(\"\\n\").map(Number);\n      const
        fuelMasses = masses.map(calculateMass);\n      const totalFuel = fuelMasses.reduce((acc,
        curr) =&gt; acc + curr);\n      return totalFuel;\n    };\n\n    const fuelMass
        = fuel =&gt; Math.floor(fuel / 3) - 2;\n\n    const calculateMass = fuel =&gt;
        {\n      const mass = fuelMass(fuel);\n      if (mass &lt;= 0) {\n        return
        0;\n      } else {\n        return mass + calculateMass(mass);\n      }\n    };",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;JavaScript / JS&lt;/h1&gt;\n\n&lt;p&gt;Used
        map/reduce and recursion. I believe this is the cleanest way.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        part2 = input =&amp;gt; {\n  const masses = input.split(&amp;quot;\\n&amp;quot;).map(Number);\n  const
        fuelMasses = masses.map(calculateMass);\n  const totalFuel = fuelMasses.reduce((acc,
        curr) =&amp;gt; acc + curr);\n  return totalFuel;\n};\n\nconst fuelMass =
        fuel =&amp;gt; Math.floor(fuel / 3) - 2;\n\nconst calculateMass = fuel =&amp;gt;
        {\n  const mass = fuelMass(fuel);\n  if (mass &amp;lt;= 0) {\n    return 0;\n  }
        else {\n    return mass + calculateMass(mass);\n  }\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9amjs9/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9amjs9", "created":
        1575204236.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9avalt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Java\n\nMain.java\n\n    import java.io.IOException;\n    import
        java.nio.file.Files;\n    import java.nio.file.Paths;\n    \n    public class
        Main {\n    \n        public static void main(String[] args) throws IOException
        {\n            Files.readAllLines(Paths.get(\"src/input\")).forEach(s -&gt;
        new Module(Integer.parseInt(s)));\n            System.out.println(Module.part1());\n            System.out.println(Module.part2());\n        }\n    }\n\nModule.java\n\n    import
        java.util.ArrayList;\n    import java.util.List;\n    \n    public class Module
        {\n    \n        private static List&lt;Module&gt; modules = new ArrayList&lt;&gt;();\n    \n        private
        final int moduleMass;\n        private List&lt;Integer&gt; fuel = new ArrayList&lt;&gt;();\n    \n        public
        Module(int moduleMass) {\n            modules.add(this);\n            this.moduleMass
        = moduleMass;\n            this.fuel.add(calculateRequiredFuel(moduleMass));\n            while
        (calculateRequiredFuel(fuel.get(fuel.size() - 1)) != 0)\n                fuel.add(calculateRequiredFuel(fuel.get(fuel.size()
        - 1)));\n        }\n    \n        private static int calculateRequiredFuel(int
        input) {\n            return Math.max(input / 3 - 2, 0);\n        }\n    \n        public
        static int part1() {\n            return modules.stream().mapToInt(module
        -&gt; module.fuel.get(0)).sum();\n        }\n    \n        public static int
        part2() {\n            return modules.stream().mapToInt(module -&gt; module.fuel.stream().mapToInt(Integer::intValue).sum()).sum();\n        }\n    }",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_f9avalt",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java&lt;/p&gt;\n\n&lt;p&gt;Main.java&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic
        class Main {\n\n    public static void main(String[] args) throws IOException
        {\n        Files.readAllLines(Paths.get(&amp;quot;src/input&amp;quot;)).forEach(s
        -&amp;gt; new Module(Integer.parseInt(s)));\n        System.out.println(Module.part1());\n        System.out.println(Module.part2());\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Module.java&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        java.util.ArrayList;\nimport java.util.List;\n\npublic class Module {\n\n    private
        static List&amp;lt;Module&amp;gt; modules = new ArrayList&amp;lt;&amp;gt;();\n\n    private
        final int moduleMass;\n    private List&amp;lt;Integer&amp;gt; fuel = new
        ArrayList&amp;lt;&amp;gt;();\n\n    public Module(int moduleMass) {\n        modules.add(this);\n        this.moduleMass
        = moduleMass;\n        this.fuel.add(calculateRequiredFuel(moduleMass));\n        while
        (calculateRequiredFuel(fuel.get(fuel.size() - 1)) != 0)\n            fuel.add(calculateRequiredFuel(fuel.get(fuel.size()
        - 1)));\n    }\n\n    private static int calculateRequiredFuel(int input)
        {\n        return Math.max(input / 3 - 2, 0);\n    }\n\n    public static
        int part1() {\n        return modules.stream().mapToInt(module -&amp;gt; module.fuel.get(0)).sum();\n    }\n\n    public
        static int part2() {\n        return modules.stream().mapToInt(module -&amp;gt;
        module.fuel.stream().mapToInt(Integer::intValue).sum()).sum();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9avalt/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575206722.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575206722.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9betvm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vikarjramun",
        "can_mod_post": false, "created_utc": 1575212100.0, "send_replies": true,
        "parent_id": "t1_f9avalt", "score": 3, "author_fullname": "t2_1kv3a72", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "For part 2, why don''t you make use of `flatMap`?", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;For part 2, why don&amp;#39;t you make use of &lt;code&gt;flatMap&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9betvm/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9betvm", "created":
        1575212100.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_f9brjjh", "id": "f9brjjh", "parent_id":
        "t1_f9betvm", "depth": 2, "children": ["f9brjjh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9b3g1e",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fourgbram",
        "can_mod_post": false, "created_utc": 1575208910.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_7gvrn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "For this year''s AOC I decided to do it in Go, Kotlin &amp; C.\n\nKotlin:\n  \n    fun
        calculateFuel(input: Int): Int = (input / 3) - 2\n    \n    fun calculateFuelSum(input:
        List&lt;Int&gt;): Int {\n        var sum = 0\n        input.forEach{ v -&gt;
        sum += calculateFuelPart2(v) }\n        return sum\n    }\n    \n    fun calculateFuelPart2(input:
        Int): Int {\n        val value = (input / 3) - 2\n        return if (value
        &lt;= 0) 0 else value + calculateFuelPart2(value)\n    }\n\n\nGo:\n\n    func
        FuelReqSum(masses []int) int {\n    \tsum := 0\n    \tfor _, m := range masses
        {\n    \t\tsum += FuelReqPart2(m)\n    \t}\n    \treturn sum\n    }\n    \n    func
        FuelReq(mass int) int {\n    \treturn ( mass / 3 ) - 2 \n    }\n    \n    func
        FuelReqPart2(mass int) int {\n    \tvalue := (mass / 3) - 2\n    \tif value
        &lt;= 0 {\n    \t\treturn 0\n    \t} else {\n    \t\treturn value + FuelReqPart2(value)\n    \t}\n    }\n\nC:\n\n    int
        calculateFuelSum(FILE *input) {\n        int sum = 0;\n        char buf[20];\n        while(fgets(buf,
        sizeof buf, input) != NULL) {\n            sum += calculateFuelPart2(atoi(buf));\n        }\n        return
        sum;\n    }\n    \n    int calculateFuel(int input) {\n        return (input
        / 3) - 2;\n    }\n    \n    int calculateFuelPart2(int input){\n        int
        value = (input / 3) - 2;\n        if (value &lt;= 0) {\n            return
        0;\n        } else {\n            return value + calculateFuelPart2(value);\n        }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For this year&amp;#39;s
        AOC I decided to do it in Go, Kotlin &amp;amp; C.&lt;/p&gt;\n\n&lt;p&gt;Kotlin:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun
        calculateFuel(input: Int): Int = (input / 3) - 2\n\nfun calculateFuelSum(input:
        List&amp;lt;Int&amp;gt;): Int {\n    var sum = 0\n    input.forEach{ v -&amp;gt;
        sum += calculateFuelPart2(v) }\n    return sum\n}\n\nfun calculateFuelPart2(input:
        Int): Int {\n    val value = (input / 3) - 2\n    return if (value &amp;lt;=
        0) 0 else value + calculateFuelPart2(value)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Go:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func
        FuelReqSum(masses []int) int {\n    sum := 0\n    for _, m := range masses
        {\n        sum += FuelReqPart2(m)\n    }\n    return sum\n}\n\nfunc FuelReq(mass
        int) int {\n    return ( mass / 3 ) - 2 \n}\n\nfunc FuelReqPart2(mass int)
        int {\n    value := (mass / 3) - 2\n    if value &amp;lt;= 0 {\n        return
        0\n    } else {\n        return value + FuelReqPart2(value)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;C:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        calculateFuelSum(FILE *input) {\n    int sum = 0;\n    char buf[20];\n    while(fgets(buf,
        sizeof buf, input) != NULL) {\n        sum += calculateFuelPart2(atoi(buf));\n    }\n    return
        sum;\n}\n\nint calculateFuel(int input) {\n    return (input / 3) - 2;\n}\n\nint
        calculateFuelPart2(int input){\n    int value = (input / 3) - 2;\n    if (value
        &amp;lt;= 0) {\n        return 0;\n    } else {\n        return value + calculateFuelPart2(value);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9b3g1e/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9b3g1e", "created":
        1575208910.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9b5118", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "# Swift 5\n\n[Link to github gist here](https://gist.github.com/bernasx/be3758e690e32d578e65b229b61131f2)\n\nAny
        feedback is appreciated.", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9b5118", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Swift 5&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/bernasx/be3758e690e32d578e65b229b61131f2\"&gt;Link
        to github gist here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Any feedback is appreciated.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9b5118/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575209338.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575209338.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_f9b98wx", "id": "f9b98wx", "parent_id":
        "t1_f9b5118", "depth": 1, "children": ["f9b98wx"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9b8e5g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "al_joz",
        "can_mod_post": false, "created_utc": 1575210221.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_42swyzlt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python3**\n\n    def get_fuel(n):\n        return n // 3 - 2\n    \n    \n    fuels
        = [get_fuel(a) for a in map(int, lines)]\n    \n    \n    def get_rec_fuel(n):\n        if
        get_fuel(n) &gt;= 0:\n            return get_fuel(n) + get_rec_fuel(get_fuel(n))\n        return
        0\n    \n    \n    rec_fuels = [get_rec_fuel(a) for a in map(int, lines)]\n    #
        1\n    print(sum(fuels))\n    # 2\n    print(sum(rec_fuels))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        get_fuel(n):\n    return n // 3 - 2\n\n\nfuels = [get_fuel(a) for a in map(int,
        lines)]\n\n\ndef get_rec_fuel(n):\n    if get_fuel(n) &amp;gt;= 0:\n        return
        get_fuel(n) + get_rec_fuel(get_fuel(n))\n    return 0\n\n\nrec_fuels = [get_rec_fuel(a)
        for a in map(int, lines)]\n# 1\nprint(sum(fuels))\n# 2\nprint(sum(rec_fuels))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9b8e5g/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9b8e5g", "created":
        1575210221.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9cc68w", "id": "f9cc68w", "parent_id":
        "t1_f9b8e5g", "depth": 1, "children": ["f9cc68w"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bdi1r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "om_henners",
        "can_mod_post": false, "created_utc": 1575211598.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_iygza", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "So my goal this year is to get a bit better at TDD in general, and pytest
        in particular. So with that in mind: another Python 3 solution (for part 2)
        including some a simple pytest unit test [https://pastebin.com/Ek67x7kz](https://pastebin.com/Ek67x7kz)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So my goal this year
        is to get a bit better at TDD in general, and pytest in particular. So with
        that in mind: another Python 3 solution (for part 2) including some a simple
        pytest unit test &lt;a href=\"https://pastebin.com/Ek67x7kz\"&gt;https://pastebin.com/Ek67x7kz&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bdi1r/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bdi1r", "created":
        1575211598.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bgpnf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "knakv",
        "can_mod_post": false, "created_utc": 1575212630.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_rp3yw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python3 recursive function (Part 2)**\n\n    #!/usr/bin/python3\n    import
        math\n\n    def do_math(value):\n        compute = math.floor(value / 3) -
        2\n        if compute &lt;= 0:\n            print(compute)\n            return
        compute-compute\n        else:\n            return (compute)+do_math(compute)\n\n\n    fo
        = open(\"data.txt\", \"r+\")\n    total_fuel = 0\n    for line in fo:\n        fuel
        = math.floor(do_math(int(line)))\n        total_fuel += fuel\n        print(fuel)\n\n    print(\"Total
        fuel: \", total_fuel)\n    fo.close()", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python3 recursive function (Part 2)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/python3\nimport
        math\n\ndef do_math(value):\n    compute = math.floor(value / 3) - 2\n    if
        compute &amp;lt;= 0:\n        print(compute)\n        return compute-compute\n    else:\n        return
        (compute)+do_math(compute)\n\n\nfo = open(&amp;quot;data.txt&amp;quot;, &amp;quot;r+&amp;quot;)\ntotal_fuel
        = 0\nfor line in fo:\n    fuel = math.floor(do_math(int(line)))\n    total_fuel
        += fuel\n    print(fuel)\n\nprint(&amp;quot;Total fuel: &amp;quot;, total_fuel)\nfo.close()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bgpnf/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bgpnf", "created":
        1575212630.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9c5t25",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Korred",
        "can_mod_post": false, "created_utc": 1575219572.0, "send_replies": true,
        "parent_id": "t1_f9bgpnf", "score": 2, "author_fullname": "t2_549v9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Instead of math.floor you can simply use integer-division / floor-division
        ''//'' :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Instead
        of math.floor you can simply use integer-division / floor-division &amp;#39;//&amp;#39;
        :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9c5t25/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9c5t25", "created":
        1575219572.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bimpm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "chicagocode",
        "can_mod_post": false, "created_utc": 1575213068.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_mtcx04l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Day 1 in Kotlin - [[GitHub](https://github.com/tginsberg/advent-2019-kotlin/blob/master/src/main/kotlin/com/ginsberg/advent2019/Day01.kt)]
        [[Blog/Commentary](https://todd.ginsberg.com/post/advent-of-code/2019/day1/)]\n\nI
        used \\`sumBy\\` for both parts and recursion for part 2:\n\n    class Day01(input:
        List&lt;String&gt;) {\n    \n        private val modules: List&lt;Int&gt;
        = input.map { it.toInt() }\n    \n        fun solvePart1(): Int =\n            modules.sumBy
        { it.fuel() }\n    \n        fun solvePart2(): Int =\n            modules.sumBy
        { it.fuelWithFuel() }\n    \n        private fun Int.fuel(): Int = this /
        3 - 2\n    \n        private fun Int.fuelWithFuel(carry: Int = 0): Int =\n            if(this
        &lt; 7)  {\n                carry\n            } else {\n                val
        fuel = this.fuel()\n                fuel.fuelWithFuel(carry + fuel)\n            }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Day 1 in Kotlin - [&lt;a
        href=\"https://github.com/tginsberg/advent-2019-kotlin/blob/master/src/main/kotlin/com/ginsberg/advent2019/Day01.kt\"&gt;GitHub&lt;/a&gt;]
        [&lt;a href=\"https://todd.ginsberg.com/post/advent-of-code/2019/day1/\"&gt;Blog/Commentary&lt;/a&gt;]&lt;/h1&gt;\n\n&lt;p&gt;I
        used `sumBy` for both parts and recursion for part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class
        Day01(input: List&amp;lt;String&amp;gt;) {\n\n    private val modules: List&amp;lt;Int&amp;gt;
        = input.map { it.toInt() }\n\n    fun solvePart1(): Int =\n        modules.sumBy
        { it.fuel() }\n\n    fun solvePart2(): Int =\n        modules.sumBy { it.fuelWithFuel()
        }\n\n    private fun Int.fuel(): Int = this / 3 - 2\n\n    private fun Int.fuelWithFuel(carry:
        Int = 0): Int =\n        if(this &amp;lt; 7)  {\n            carry\n        }
        else {\n            val fuel = this.fuel()\n            fuel.fuelWithFuel(carry
        + fuel)\n        }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bimpm/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9bimpm", "created": 1575213068.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9bjvy2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Chabare", "can_mod_post": false, "created_utc":
        1575213383.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_az0l9", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**RUST**\n\nReading, parsing,
        etc can be found [here](https://github.com/torbencarstens/adventofcode/tree/2019/day01/src).\n\n*Part
        01:*\n\n    pub fn calculate_fuel_for_mass(mass: i64) -&gt; i64 {\n        mass
        / 3 - 2\n    }\n    \n    pub fn run(numbers: Box&lt;dyn Iterator&lt;Item=i64&gt;&gt;)
        -&gt; i64 {\n        numbers\n            .map(calculate_fuel_for_mass)\n            .sum()\n    }\n    \n*Part
        02:*\n\n    use std::cmp::max;\n    use crate::task01::calculate_fuel_for_mass;\n    \n    fn
        calculate_fuel(mass: i64) -&gt; i64 {\n        match calculate_fuel_for_mass(mass)
        {\n            x if x &lt;= 0 =&gt; 0,\n            y =&gt; {\n                max(y
        + calculate_fuel(y), 0)\n            }\n        }\n    }\n    \n    pub fn
        run(numbers: Box&lt;dyn Iterator&lt;Item=i64&gt;&gt;) -&gt; i64 {\n        numbers\n            .map(calculate_fuel)\n            .sum()\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;RUST&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Reading,
        parsing, etc can be found &lt;a href=\"https://github.com/torbencarstens/adventofcode/tree/2019/day01/src\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Part
        01:&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub fn calculate_fuel_for_mass(mass:
        i64) -&amp;gt; i64 {\n    mass / 3 - 2\n}\n\npub fn run(numbers: Box&amp;lt;dyn
        Iterator&amp;lt;Item=i64&amp;gt;&amp;gt;) -&amp;gt; i64 {\n    numbers\n        .map(calculate_fuel_for_mass)\n        .sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Part
        02:&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::cmp::max;\nuse
        crate::task01::calculate_fuel_for_mass;\n\nfn calculate_fuel(mass: i64) -&amp;gt;
        i64 {\n    match calculate_fuel_for_mass(mass) {\n        x if x &amp;lt;=
        0 =&amp;gt; 0,\n        y =&amp;gt; {\n            max(y + calculate_fuel(y),
        0)\n        }\n    }\n}\n\npub fn run(numbers: Box&amp;lt;dyn Iterator&amp;lt;Item=i64&amp;gt;&amp;gt;)
        -&amp;gt; i64 {\n    numbers\n        .map(calculate_fuel)\n        .sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bjvy2/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bjvy2", "created":
        1575213383.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bko7p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kip_13",
        "can_mod_post": false, "created_utc": 1575213655.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_8ex11sj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust\n\n    use std::{\n        fs::File,\n        io::{self, BufRead, BufReader}\n    };\n    \n    fn
        get_input(path: &amp;str) -&gt; io::Result&lt;Vec&lt;String&gt;&gt; {\n        BufReader::new(File::open(path)?).lines().collect()\n    }\n    \n    fn
        calculate_fuel(module: i32) -&gt; i32 {\n        (((f64::from(module) / 3f64).floor()
        as i32) - 2)\n    }\n    \n    fn main() {\n        let modules = get_input(\"./input\").expect(\"Could
        not read the input file\");\n    \n        let mut fuel_modules = 0;\n        let
        mut additional_fuel_modules = 0;\n    \n        for module in modules {\n            let
        fuel = calculate_fuel(i32::from_str_radix(&amp;module, 10).unwrap());\n    \n            fuel_modules
        += fuel;\n    \n            let mut possible_additional_fuel = calculate_fuel(fuel);\n    \n            while
        possible_additional_fuel &gt; 0 {\n                additional_fuel_modules
        += possible_additional_fuel;\n                possible_additional_fuel = calculate_fuel(possible_additional_fuel);\n            }\n        }\n    \n        println!(\"sol
        pt1: {}\", fuel_modules);\n        println!(\"sol pt2: {:?}\", fuel_modules
        + additional_fuel_modules);\n    }", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::{\n    fs::File,\n    io::{self,
        BufRead, BufReader}\n};\n\nfn get_input(path: &amp;amp;str) -&amp;gt; io::Result&amp;lt;Vec&amp;lt;String&amp;gt;&amp;gt;
        {\n    BufReader::new(File::open(path)?).lines().collect()\n}\n\nfn calculate_fuel(module:
        i32) -&amp;gt; i32 {\n    (((f64::from(module) / 3f64).floor() as i32) - 2)\n}\n\nfn
        main() {\n    let modules = get_input(&amp;quot;./input&amp;quot;).expect(&amp;quot;Could
        not read the input file&amp;quot;);\n\n    let mut fuel_modules = 0;\n    let
        mut additional_fuel_modules = 0;\n\n    for module in modules {\n        let
        fuel = calculate_fuel(i32::from_str_radix(&amp;amp;module, 10).unwrap());\n\n        fuel_modules
        += fuel;\n\n        let mut possible_additional_fuel = calculate_fuel(fuel);\n\n        while
        possible_additional_fuel &amp;gt; 0 {\n            additional_fuel_modules
        += possible_additional_fuel;\n            possible_additional_fuel = calculate_fuel(possible_additional_fuel);\n        }\n    }\n\n    println!(&amp;quot;sol
        pt1: {}&amp;quot;, fuel_modules);\n    println!(&amp;quot;sol pt2: {:?}&amp;quot;,
        fuel_modules + additional_fuel_modules);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bko7p/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bko7p", "created":
        1575213655.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bnqbt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Qulaa",
        "can_mod_post": false, "created_utc": 1575214506.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_kzydm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**PowerShell**\n\n    $inputData = Get-Content -Path .\\input\\input.txt\n    \n    #PART_01\n    $totalFuel
        = 0\n    \n    $inputData | % { \n        $totalFuel += [Math]::Floor( $_/3
        ) -2 \n    }\n    \n    Write-Host \"Total fuel: $totalFuel (Part One)\"\n    \n    #PART_02\n    $totalFuelPart2
        = 0\n    \n    $inputData | % { \n        $sum = 0\n        $remaining = $_    \n        while($remaining
        -gt 0){\n            $remaining = [Math]::Floor( $remaining/3 ) -2\n            if($remaining
        -ge 0){\n                $sum += $remaining\n            }        \n        }\n        $totalFuelPart2
        += $sum\n    }\n    \n    Write-Host \"Total fuel: $totalFuelPart2 (Part Two)\"",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PowerShell&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$inputData
        = Get-Content -Path .\\input\\input.txt\n\n#PART_01\n$totalFuel = 0\n\n$inputData
        | % { \n    $totalFuel += [Math]::Floor( $_/3 ) -2 \n}\n\nWrite-Host &amp;quot;Total
        fuel: $totalFuel (Part One)&amp;quot;\n\n#PART_02\n$totalFuelPart2 = 0\n\n$inputData
        | % { \n    $sum = 0\n    $remaining = $_    \n    while($remaining -gt 0){\n        $remaining
        = [Math]::Floor( $remaining/3 ) -2\n        if($remaining -ge 0){\n            $sum
        += $remaining\n        }        \n    }\n    $totalFuelPart2 += $sum\n}\n\nWrite-Host
        &amp;quot;Total fuel: $totalFuelPart2 (Part Two)&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bnqbt/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bnqbt", "created":
        1575214506.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9e53n2", "id": "f9e53n2", "parent_id":
        "t1_f9bnqbt", "depth": 1, "children": ["f9e53n2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9br68q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fintarabg",
        "can_mod_post": false, "created_utc": 1575215439.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_zollc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### Haskell\n\n    sumWith :: (Num a) =&gt; (a -&gt; a) -&gt; [a] -&gt; a\n    sumWith
        = (sum .) . map\n\n    calculateFuel :: Int -&gt; Int\n    calculateFuel =
        subtract 2 . (`div` 3)\n\n    totalFuel :: Int -&gt; Int\n    totalFuel =
        sum . takeWhile (&gt; 0) . drop 1 . iterate calculateFuel\n\n    main :: IO
        ()\n    main = do\n        input &lt;- (map read . words) &lt;$&gt; readFile
        \"inputs/day01.txt\"\n        putStrLn $ show (sumWith calculateFuel input)\n        putStrLn
        $ show (sumWith totalFuel input)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h3&gt;Haskell&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;sumWith
        :: (Num a) =&amp;gt; (a -&amp;gt; a) -&amp;gt; [a] -&amp;gt; a\nsumWith =
        (sum .) . map\n\ncalculateFuel :: Int -&amp;gt; Int\ncalculateFuel = subtract
        2 . (`div` 3)\n\ntotalFuel :: Int -&amp;gt; Int\ntotalFuel = sum . takeWhile
        (&amp;gt; 0) . drop 1 . iterate calculateFuel\n\nmain :: IO ()\nmain = do\n    input
        &amp;lt;- (map read . words) &amp;lt;$&amp;gt; readFile &amp;quot;inputs/day01.txt&amp;quot;\n    putStrLn
        $ show (sumWith calculateFuel input)\n    putStrLn $ show (sumWith totalFuel
        input)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9br68q/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9br68q", "created":
        1575215439.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9brgyu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JacksonDesigns",
        "can_mod_post": false, "created_utc": 1575215562.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_4mf71cso", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C++**\n\nTrying to learn C++, already knew some C\n\nhttps://github.com/wsjackson5/AoC/blob/master/2019/Day1.cpp",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Trying
        to learn C++, already knew some C&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/wsjackson5/AoC/blob/master/2019/Day1.cpp\"&gt;https://github.com/wsjackson5/AoC/blob/master/2019/Day1.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9brgyu/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9brgyu", "created":
        1575215562.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_f9c8lgj", "id": "f9c8lgj", "parent_id":
        "t1_f9brgyu", "depth": 1, "children": ["f9c8lgj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bt11z",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Alex_Mckey",
        "can_mod_post": false, "created_utc": 1575216009.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_bnv6c9p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Scala 3 (Dotty)**\n\n    object Sol_01 extends App with SolInput {\n    \n        val
        fileName = \"Sol01.txt\"\n        \n        val masses = input(fileName).map(_.toInt).toList\n    \n        def
        calcFuel(mass: Int) = \n            mass / 3 - 2\n    \n        val res1 =
        masses.map(calcFuel).sum\n    \n        println(s\"$res1\") //3342351\n    \n        def
        calcAllFuel(mass: Int) = Iterator.iterate(calcFuel(mass))(calcFuel)\n    \n        val
        res2 = masses.map(calcAllFuel(_).takeWhile(_ &gt; 0).sum).sum\n    \n        println(s\"$res2\")
        //5010664\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Scala
        3 (Dotty)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;object Sol_01
        extends App with SolInput {\n\n    val fileName = &amp;quot;Sol01.txt&amp;quot;\n\n    val
        masses = input(fileName).map(_.toInt).toList\n\n    def calcFuel(mass: Int)
        = \n        mass / 3 - 2\n\n    val res1 = masses.map(calcFuel).sum\n\n    println(s&amp;quot;$res1&amp;quot;)
        //3342351\n\n    def calcAllFuel(mass: Int) = Iterator.iterate(calcFuel(mass))(calcFuel)\n\n    val
        res2 = masses.map(calcAllFuel(_).takeWhile(_ &amp;gt; 0).sum).sum\n\n    println(s&amp;quot;$res2&amp;quot;)
        //5010664\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bt11z/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9bt11z", "created": 1575216009.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9btcz0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "SuSeu02", "can_mod_post": false, "created_utc":
        1575216110.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 1,
        "author_fullname": "t2_jzbdqji", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Java\n\n[https://github.com/SuSeu1414/AOC2019/blob/master/src/main/java/pl/suseu/aoc2019/day1/Day1.java](https://github.com/SuSeu1414/AOC2019/blob/master/src/main/java/pl/suseu/aoc2019/day1/Day1.java)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/SuSeu1414/AOC2019/blob/master/src/main/java/pl/suseu/aoc2019/day1/Day1.java\"&gt;https://github.com/SuSeu1414/AOC2019/blob/master/src/main/java/pl/suseu/aoc2019/day1/Day1.java&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9btcz0/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9btcz0", "created":
        1575216110.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_f9cf4ia", "id": "f9cf4ia", "parent_id":
        "t1_f9btcz0", "depth": 1, "children": ["f9cf4ia"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9c6u9g", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**PHP** (OOP)\n\nHere is my solution for Day 1 [https://bitbucket.org/tomve/adventofcode/src/master/day\\_01/](https://bitbucket.org/tomve/adventofcode/src/master/day_01/)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_f9c6u9g",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt;
        (OOP)&lt;/p&gt;\n\n&lt;p&gt;Here is my solution for Day 1 &lt;a href=\"https://bitbucket.org/tomve/adventofcode/src/master/day_01/\"&gt;https://bitbucket.org/tomve/adventofcode/src/master/day_01/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9c6u9g/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575219895.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575219895.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575270108.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9c8pu8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SatanicSaint",
        "can_mod_post": false, "created_utc": 1575220511.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_l0vwf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Python 3 [code](https://gist.github.com/SatanicSaint/5dfefd4b4364c1ead34764f882c87156)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Python 3 &lt;a href=\"https://gist.github.com/SatanicSaint/5dfefd4b4364c1ead34764f882c87156\"&gt;code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9c8pu8/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9c8pu8", "created":
        1575220511.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9c9axd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "0rbita1",
        "can_mod_post": false, "created_utc": 1575220765.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_s92aw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++\n\n    #include &lt;iostream&gt;\n    #include &lt;fstream&gt;\n    using
        namespace std;\n    \n    int main () {\n        \n        string line;\n    \n        ifstream
        file (\"day1.inp\");\n    \n        if (file.is_open()) {\n            int
        fuel = 0;\n    \n            // part 1\n            fuel = 0;\n            while
        ( getline (file,line) ) {\n              fuel += stoi(line) / 3 - 2;\n    \n            }\n    \n            //
        printf(\"Total fuel requirements: %i \\n\", sum);\n            cout &lt;&lt;
        \"Total fuel requirements (1): \" &lt;&lt; fuel &lt;&lt; \"\\n\";\n    \n            //
        return to beginning of file\n            file.clear();\n            file.seekg(0,
        ios::beg);\n    \n            // part 2\n            fuel = 0;\n            int
        fuel_for_fuel = 0;\n            while ( getline (file,line) ) {\n              fuel
        += stoi(line) / 3 - 2;\n              fuel_for_fuel = stoi(line) / 3 - 2;\n    \n              while
        (fuel_for_fuel / 3 - 2 &gt; 0) {\n                fuel += fuel_for_fuel /
        3 - 2;\n                fuel_for_fuel = fuel_for_fuel / 3 - 2;\n              }\n            }\n            cout
        &lt;&lt; \"Total fuel requirements (2): \" &lt;&lt; fuel &lt;&lt; \"\\n\";\n    \n            file.close();\n          }\n    \n        return
        0;\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;fstream&amp;gt;\nusing namespace
        std;\n\nint main () {\n\n    string line;\n\n    ifstream file (&amp;quot;day1.inp&amp;quot;);\n\n    if
        (file.is_open()) {\n        int fuel = 0;\n\n        // part 1\n        fuel
        = 0;\n        while ( getline (file,line) ) {\n          fuel += stoi(line)
        / 3 - 2;\n\n        }\n\n        // printf(&amp;quot;Total fuel requirements:
        %i \\n&amp;quot;, sum);\n        cout &amp;lt;&amp;lt; &amp;quot;Total fuel
        requirements (1): &amp;quot; &amp;lt;&amp;lt; fuel &amp;lt;&amp;lt; &amp;quot;\\n&amp;quot;;\n\n        //
        return to beginning of file\n        file.clear();\n        file.seekg(0,
        ios::beg);\n\n        // part 2\n        fuel = 0;\n        int fuel_for_fuel
        = 0;\n        while ( getline (file,line) ) {\n          fuel += stoi(line)
        / 3 - 2;\n          fuel_for_fuel = stoi(line) / 3 - 2;\n\n          while
        (fuel_for_fuel / 3 - 2 &amp;gt; 0) {\n            fuel += fuel_for_fuel /
        3 - 2;\n            fuel_for_fuel = fuel_for_fuel / 3 - 2;\n          }\n        }\n        cout
        &amp;lt;&amp;lt; &amp;quot;Total fuel requirements (2): &amp;quot; &amp;lt;&amp;lt;
        fuel &amp;lt;&amp;lt; &amp;quot;\\n&amp;quot;;\n\n        file.close();\n      }\n\n    return
        0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9c9axd/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9c9axd", "created":
        1575220765.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575301595.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9ccaxs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vini_2003",
        "can_mod_post": false, "created_utc": 1575221831.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_odiqh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C++**\n\nSince this problem was very simple, so was the solution. I do
        believe I probably don''t need the `floor`ing given integers are \"rounded
        down\" by default on division, though.\n\n[LINK](https://github.com/vini2003/Advent-of-Code-2019/blob/master/Day%20I.cpp)\n\nOur
        Discord did also run a small Code Golf competition, where I attempted to C++
        Golf it.\n\n[LINK](https://gist.github.com/vini2003/b3cd47b1f063f9e32153bca87c9ba048)\n\n**Java**\n\nMy
        first foray into attempting Advent of Code in Java, it''s a cursed solution
        - it works, but it ain''t pretty or honest work.\n\n[LINK](https://github.com/vini2003/Advent-of-Code-2019/blob/master/Day%20I.java)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Since
        this problem was very simple, so was the solution. I do believe I probably
        don&amp;#39;t need the &lt;code&gt;floor&lt;/code&gt;ing given integers are
        &amp;quot;rounded down&amp;quot; by default on division, though.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/vini2003/Advent-of-Code-2019/blob/master/Day%20I.cpp\"&gt;LINK&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Our
        Discord did also run a small Code Golf competition, where I attempted to C++
        Golf it.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/vini2003/b3cd47b1f063f9e32153bca87c9ba048\"&gt;LINK&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        first foray into attempting Advent of Code in Java, it&amp;#39;s a cursed
        solution - it works, but it ain&amp;#39;t pretty or honest work.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/vini2003/Advent-of-Code-2019/blob/master/Day%20I.java\"&gt;LINK&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9ccaxs/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9ccaxs", "created":
        1575221831.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cfhy7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jonathrg",
        "can_mod_post": false, "created_utc": 1575223104.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_4h7v285", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\n```\ndef fuel_needed(mass):\n    added_mass = mass // 3 - 2\n    if
        added_mass &gt;= 0:\n        return added_mass + fuel_needed(added_mass)\n    else:\n        return
        0\n\nwith open(\"input-1.txt\") as infile:\n    lines = infile.readlines()\nmasses
        = [int(line) for line in lines]\n\ntotal_fuel = sum(fuel_needed(mass) for
        mass in masses)\n\nprint(total_fuel)\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;p&gt;```\ndef fuel_needed(mass):\n    added_mass
        = mass // 3 - 2\n    if added_mass &amp;gt;= 0:\n        return added_mass
        + fuel_needed(added_mass)\n    else:\n        return 0&lt;/p&gt;\n\n&lt;p&gt;with
        open(&amp;quot;input-1.txt&amp;quot;) as infile:\n    lines = infile.readlines()\nmasses
        = [int(line) for line in lines]&lt;/p&gt;\n\n&lt;p&gt;total_fuel = sum(fuel_needed(mass)
        for mass in masses)&lt;/p&gt;\n\n&lt;p&gt;print(total_fuel)\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cfhy7/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cfhy7", "created":
        1575223104.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cs39t",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Panikx",
        "can_mod_post": false, "created_utc": 1575226805.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_a4hfu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 3 for puzzle 2**\n    \n    data = {148319, \n    ...}\n\n    def
        RocketEquation(mass):\n\t\tresult = int(mass / 3) - 2 \n\t\tprint(result)\n\t\tif
        result &gt; 0:\n\t\t\toldRes.append(result)\n\t\t\treturn RocketEquation(result)\n\t\telse:\n\t\t\tres
        = 0\n\t\t\tprint(oldRes)\n\t\t\tfor i in oldRes:\n\t\t\t\tres += i\n\t\t\toldRes.clear()\n\t\t\treturn
        res\n\n\n\n\tfor module in data:\n\t\tanswer += RocketEquation(module)\n\tprint(\"Solution\",
        answer)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python
        3 for puzzle 2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data = {148319,
        \n...}\n\ndef RocketEquation(mass):\n    result = int(mass / 3) - 2 \n    print(result)\n    if
        result &amp;gt; 0:\n        oldRes.append(result)\n        return RocketEquation(result)\n    else:\n        res
        = 0\n        print(oldRes)\n        for i in oldRes:\n            res += i\n        oldRes.clear()\n        return
        res\n\n\n\nfor module in data:\n    answer += RocketEquation(module)\nprint(&amp;quot;Solution&amp;quot;,
        answer)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cs39t/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cs39t", "created":
        1575226805.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9cyg9v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "NameIzSecret",
        "can_mod_post": false, "created_utc": 1575228467.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_dbguc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python 3\n\n    fuel_needed = 0\n    \n    \n    def fuel_for_module(mass):\n        fuel_for_mass
        = mass // 3 - 2\n        if fuel_for_mass &gt; 0:\n            fuel_for_mass
        += fuel_for_module(fuel_for_mass)\n            return fuel_for_mass\n        else:\n            return
        0\n    \n    \n    with open(''puzzle_input.txt'') as input_file:\n        instruction_list
        = [input_line.strip() for input_line in input_file]\n        for module_mass
        in instruction_list:\n            fuel_needed += fuel_for_module(int(module_mass))\n    print(fuel_needed)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python 3&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;fuel_needed
        = 0\n\n\ndef fuel_for_module(mass):\n    fuel_for_mass = mass // 3 - 2\n    if
        fuel_for_mass &amp;gt; 0:\n        fuel_for_mass += fuel_for_module(fuel_for_mass)\n        return
        fuel_for_mass\n    else:\n        return 0\n\n\nwith open(&amp;#39;puzzle_input.txt&amp;#39;)
        as input_file:\n    instruction_list = [input_line.strip() for input_line
        in input_file]\n    for module_mass in instruction_list:\n        fuel_needed
        += fuel_for_module(int(module_mass))\nprint(fuel_needed)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9cyg9v/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9cyg9v", "created":
        1575228467.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9d48p8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Amazing_Australian",
        "can_mod_post": false, "created_utc": 1575230048.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_7ng1h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java  \nPart 1:\n\n    public static void main(String[] args) {\n\n        String
        filePath = \"C:\\\\Users\\\\anton\\\\Desktop\\\\Fer\\\\AoC2019\\\\Day1\\\\input.txt\";\n        List&lt;Integer&gt;
        input = new LinkedList&lt;Integer&gt;();\n        int result = 0;\n\n        try
        (Stream&lt;String&gt; stream = Files.lines(Paths.get(filePath))) {\n            input
        = stream\n                    .map(Integer::valueOf)\n                    .collect(Collectors.toList());\n        }
        catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        for
        (int current : input) {\n            result += Math.floorDiv(current, 3) -
        2;\n        }\n\n        System.out.println(result);\n\n    }\n\nPart 2:\n\n    public
        static void main(String[] args) {\n\n        String filePath = \"C:\\\\Users\\\\anton\\\\Desktop\\\\Fer\\\\AoC2019\\\\Day1\\\\input.txt\";\n        List&lt;Integer&gt;
        input = new LinkedList&lt;Integer&gt;();\n        int result = 0;\n\n        try
        (Stream&lt;String&gt; stream = Files.lines(Paths.get(filePath))) {\n            input
        = stream\n                    .map(Integer::valueOf)\n                    .collect(Collectors.toList());\n        }
        catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        for
        (int current : input) {\n            result += calculateFuel(current);\n        }\n\n        System.out.println(result);\n\n    }\n\n    public
        static int calculateFuel(int current) {\n        if (current &lt;= 8) return
        0;\n        else {\n            int result = Math.floorDiv(current, 3) - 2;\n            return
        result + calculateFuel(result);\n        }\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Java&lt;br/&gt;\nPart 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        static void main(String[] args) {\n\n    String filePath = &amp;quot;C:\\\\Users\\\\anton\\\\Desktop\\\\Fer\\\\AoC2019\\\\Day1\\\\input.txt&amp;quot;;\n    List&amp;lt;Integer&amp;gt;
        input = new LinkedList&amp;lt;Integer&amp;gt;();\n    int result = 0;\n\n    try
        (Stream&amp;lt;String&amp;gt; stream = Files.lines(Paths.get(filePath))) {\n        input
        = stream\n                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n    }
        catch (IOException e) {\n        e.printStackTrace();\n    }\n\n    for (int
        current : input) {\n        result += Math.floorDiv(current, 3) - 2;\n    }\n\n    System.out.println(result);\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public static void main(String[] args)
        {\n\n    String filePath = &amp;quot;C:\\\\Users\\\\anton\\\\Desktop\\\\Fer\\\\AoC2019\\\\Day1\\\\input.txt&amp;quot;;\n    List&amp;lt;Integer&amp;gt;
        input = new LinkedList&amp;lt;Integer&amp;gt;();\n    int result = 0;\n\n    try
        (Stream&amp;lt;String&amp;gt; stream = Files.lines(Paths.get(filePath))) {\n        input
        = stream\n                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n    }
        catch (IOException e) {\n        e.printStackTrace();\n    }\n\n    for (int
        current : input) {\n        result += calculateFuel(current);\n    }\n\n    System.out.println(result);\n\n}\n\npublic
        static int calculateFuel(int current) {\n    if (current &amp;lt;= 8) return
        0;\n    else {\n        int result = Math.floorDiv(current, 3) - 2;\n        return
        result + calculateFuel(result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9d48p8/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9d48p8", "created":
        1575230048.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9dl0da", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9d48p8", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9dl0da", "collapsed": true, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dl0da/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575234465.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575234465.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_f9dnmno", "id": "f9dnmno", "parent_id":
        "t1_f9dl0da", "depth": 2, "children": ["f9dnmno"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9d7eoe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "morgon-of-hed",
        "can_mod_post": false, "created_utc": 1575230908.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_3x21c4ib", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**JavaScript ES6**\n\n\n    const fs = require(''fs'');\n    \n    const
        prepareInputModulesMass = fs.readFileSync(''input1-1.txt'', ''UTF-8'').split(''\\n'').map(num
        =&gt; parseInt(num));\n    \n    const fuelForEachModule = arr =&gt; {\n      return
        arr.map(el =&gt; Math.floor(el / 3) - 2);\n    }\n    \n    const fuelForModules
        = () =&gt; {\n      const fuelForEach = fuelForEachModule(prepareInputModulesMass)\n      const
        summedFuelForModules = fuelForEach.reduce((a, b) =&gt; a + b, 0);\n      return
        summedFuelForModules;\n    }\n    \n    console.log(fuelForModules())\n    \n    const
        fuelForModulesWithAdditionalFuel = fuelForModulesOnly =&gt; {\n      const
        fuelForModulesAtTheBeginning = fuelForModulesOnly;\n      let arrayOfAdditionalFuel
        = [fuelForModulesAtTheBeginning];\n      while (fuelForModulesOnly &gt; 0)
        {\n        let fuel = (Math.floor(fuelForModulesOnly / 3)) - 2;\n        arrayOfAdditionalFuel.push(fuel);\n        fuelForModulesOnly
        = fuel;\n      }\n    \n      return arrayOfAdditionalFuel.slice(0, -1).reduce((a,
        b) =&gt; a + b);\n    }\n    \n    console.log(fuelForEachModule(prepareInputModulesMass).map(fuelForModulesWithAdditionalFuel).reduce((a,
        b) =&gt; a + b, 0));", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;JavaScript
        ES6&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const fs = require(&amp;#39;fs&amp;#39;);\n\nconst
        prepareInputModulesMass = fs.readFileSync(&amp;#39;input1-1.txt&amp;#39;,
        &amp;#39;UTF-8&amp;#39;).split(&amp;#39;\\n&amp;#39;).map(num =&amp;gt; parseInt(num));\n\nconst
        fuelForEachModule = arr =&amp;gt; {\n  return arr.map(el =&amp;gt; Math.floor(el
        / 3) - 2);\n}\n\nconst fuelForModules = () =&amp;gt; {\n  const fuelForEach
        = fuelForEachModule(prepareInputModulesMass)\n  const summedFuelForModules
        = fuelForEach.reduce((a, b) =&amp;gt; a + b, 0);\n  return summedFuelForModules;\n}\n\nconsole.log(fuelForModules())\n\nconst
        fuelForModulesWithAdditionalFuel = fuelForModulesOnly =&amp;gt; {\n  const
        fuelForModulesAtTheBeginning = fuelForModulesOnly;\n  let arrayOfAdditionalFuel
        = [fuelForModulesAtTheBeginning];\n  while (fuelForModulesOnly &amp;gt; 0)
        {\n    let fuel = (Math.floor(fuelForModulesOnly / 3)) - 2;\n    arrayOfAdditionalFuel.push(fuel);\n    fuelForModulesOnly
        = fuel;\n  }\n\n  return arrayOfAdditionalFuel.slice(0, -1).reduce((a, b)
        =&amp;gt; a + b);\n}\n\nconsole.log(fuelForEachModule(prepareInputModulesMass).map(fuelForModulesWithAdditionalFuel).reduce((a,
        b) =&amp;gt; a + b, 0));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9d7eoe/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9d7eoe", "created": 1575230908.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1575405214.0, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9d7t9r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "PowerSlaveAlfons",
        "can_mod_post": false, "created_utc": 1575230983.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_ykx91", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C++\n\nYay, recursion. Possibly overkill, but I like things complicated.My
        puzzle one solution basically just removes two lines in the main, so here''s
        puzzle 2 only.\n\n[Day 1 - Puzzle 2](https://github.com/PowerSlaveAlfons/AoC2019/blob/master/Day01/Day%201%20The%20Tyranny%20of%20the%20Rocket%20Equation.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C++&lt;/h1&gt;\n\n&lt;p&gt;Yay,
        recursion. Possibly overkill, but I like things complicated.My puzzle one
        solution basically just removes two lines in the main, so here&amp;#39;s puzzle
        2 only.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/PowerSlaveAlfons/AoC2019/blob/master/Day01/Day%201%20The%20Tyranny%20of%20the%20Rocket%20Equation.cpp\"&gt;Day
        1 - Puzzle 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9d7t9r/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9d7t9r", "created":
        1575230983.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575288038.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9davk5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kamicc",
        "can_mod_post": false, "created_utc": 1575231776.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_6covc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Simple solution in Lua:\n\n    local io = require \"io\"\n    local math
        = require \"math\"\n    \n    function get_fuel(mass)\n    \treturn math.floor(mass
        / 3) - 2\n    end\n    \n    function get_total_fuel(mass)\n    \tlocal fuel_all
        = 0\n    \tlocal initial_fuel = get_fuel(mass)\n    \n    \twhile initial_fuel
        &gt; 0 do\n    \t\tfuel_all = fuel_all + initial_fuel\n    \t\tinitial_fuel
        = get_fuel(initial_fuel)\n    \tend\n    \n    \treturn fuel_all\n    end\n    \n    local
        fuel = 0\n    local total_fuel = 0\n    \n    for line in io.lines(\"input_1.txt\")
        do\n    \tlocal module_mass = tonumber(line)\n    \n    \tfuel = fuel + get_fuel(module_mass)\n    \ttotal_fuel
        = total_fuel + get_total_fuel(module_mass)\n    end\n    \n    print(fuel)\n    print(total_fuel)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Simple solution in Lua:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;local
        io = require &amp;quot;io&amp;quot;\nlocal math = require &amp;quot;math&amp;quot;\n\nfunction
        get_fuel(mass)\n    return math.floor(mass / 3) - 2\nend\n\nfunction get_total_fuel(mass)\n    local
        fuel_all = 0\n    local initial_fuel = get_fuel(mass)\n\n    while initial_fuel
        &amp;gt; 0 do\n        fuel_all = fuel_all + initial_fuel\n        initial_fuel
        = get_fuel(initial_fuel)\n    end\n\n    return fuel_all\nend\n\nlocal fuel
        = 0\nlocal total_fuel = 0\n\nfor line in io.lines(&amp;quot;input_1.txt&amp;quot;)
        do\n    local module_mass = tonumber(line)\n\n    fuel = fuel + get_fuel(module_mass)\n    total_fuel
        = total_fuel + get_total_fuel(module_mass)\nend\n\nprint(fuel)\nprint(total_fuel)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9davk5/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9davk5", "created":
        1575231776.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dhs8c",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jfreax",
        "can_mod_post": false, "created_utc": 1575233617.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_48i65", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Bash\nUntil now nobody posted a bash solution. Here is my quick''n''dirty
        bash solution:\n\n## Part One\n    while read line; do echo \"($line / 3)
        - 2\" | bc; done &lt; input | paste -s -d ''+'' | bc\n\n\n## Part Two\n\n    fuel(){
        f=$(echo \"($1 / 3) - 2\" | bc); if [ $f -gt 0 ]; then echo $f + $(fuel $f)
        | bc; else if [ $f -lt 0 ]; then echo 0; else echo $f ; fi ; fi ; }\n    while
        read line; do fuel $line; done &lt; input | paste -s -d ''+'' | bc", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Bash&lt;/h1&gt;\n\n&lt;p&gt;Until now nobody
        posted a bash solution. Here is my quick&amp;#39;n&amp;#39;dirty bash solution:&lt;/p&gt;\n\n&lt;h2&gt;Part
        One&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;while read line; do echo &amp;quot;($line
        / 3) - 2&amp;quot; | bc; done &amp;lt; input | paste -s -d &amp;#39;+&amp;#39;
        | bc\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Part Two&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;fuel(){
        f=$(echo &amp;quot;($1 / 3) - 2&amp;quot; | bc); if [ $f -gt 0 ]; then echo
        $f + $(fuel $f) | bc; else if [ $f -lt 0 ]; then echo 0; else echo $f ; fi
        ; fi ; }\nwhile read line; do fuel $line; done &amp;lt; input | paste -s -d
        &amp;#39;+&amp;#39; | bc\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dhs8c/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9dhs8c", "created": 1575233617.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_f9dmnuh", "id": "f9dmnuh", "parent_id": "t1_f9dhs8c", "depth": 1, "children":
        ["f9dmnuh"]}}, {"kind": "more", "data": {"count": 34, "name": "t1_f9dnnwd",
        "id": "f9dnnwd", "parent_id": "t3_e4axxe", "depth": 0, "children": ["f9dnnwd",
        "f9e7v2y", "f9dofwf", "f9e2a8s", "f9e8ys9", "f9eg9ka", "f9e24jv", "f9eermi",
        "f9eawlr", "f9dsw8j", "f9e30z9", "f98h92l", "f9bqe57", "f9biur5", "f99r9d1",
        "f9a9804", "f99ck7e", "f9b9r1k", "f9brdtx", "f9bojzt", "f9bbta9"]}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_f98elxe"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 23:06:45 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:45 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=K22isdZgmnTj5LLEfu; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 23:06:45 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_e4axxe&children=f9dnnwd,f9e7v2y,f9dofwf,f9e2a8s,f9e8ys9,f9eg9ka,f9e24jv,f9eermi,f9eawlr,f9dsw8j,f9e30z9,f98h92l,f9bqe57,f9biur5,f99r9d1,f9a9804,f99ck7e,f9b9r1k,f9brdtx,f9bojzt,f9bbta9
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '14221'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksigebtz4.2.1741475205909.Z0FBQUFBQm56TTJHRnVhWlVpdDFaZUpySkRPTk9EdXNlQWVWQmRmQmRWUG5YNnZYMkt5bmtuZjN5b3lqVDdwQW9GSXVZQTlZVzE2dk5uVDhtcDdRLTBwTFlaV0hMMGpqUzIydE5YVEJNa01YZTdaSDMtOGhkQ3JVRUdMOE42VVRyb2o3bHAyQ04tQXM;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 23:06:46
        GMT; secure, session_tracker=jfgonadbdlfjhobfqa.0.1741475205922.Z0FBQUFBQm56TTJHeFBoOXRsSlJPSnphek9acmVuQ201cjFUaVlVWnpVOHlEWl9TemVjTm1XUWs4S2xoYUxUaFBRaVhOMlFRNElnMnA1MGhmaGtCUm94LUM5SnZzNnA1dm5Ib3p6OFlPR09EcmdXR19lT2NZcXc3d0NLaEtYTGVIakRqSklwWWZSaXg;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 01:06:46
        GMT; secure, edgebucket=sHE5MxoSR4r8SbQfpL; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '33'
      x-ratelimit-remaining:
      - '67.0'
      x-ratelimit-reset:
      - '194'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:46 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dnnwd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kylecuber1",
        "can_mod_post": false, "created_utc": 1575235162.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_du7h9ux", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My very inefficient but working solution  [https://github.com/WL8117/advent-of-code-2019/blob/master/aoc2019d1p1.py](https://github.com/WL8117/advent-of-code-2019/blob/master/aoc2019d1p1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My very inefficient
        but working solution  &lt;a href=\"https://github.com/WL8117/advent-of-code-2019/blob/master/aoc2019d1p1.py\"&gt;https://github.com/WL8117/advent-of-code-2019/blob/master/aoc2019d1p1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dnnwd/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dnnwd", "created":
        1575235162.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dofwf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jedenastka",
        "can_mod_post": false, "created_utc": 1575235396.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_14jqimfk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++, very long, but easily readable.\n\n    #include &lt;iostream&gt;\n    #include
        &lt;vector&gt;\n    \n    int calculateFuel(int mass);\n    \n    int fuelSum(std::vector&lt;int&gt;
        mass) {\n        int sum = 0;\n        for (int i: mass) {\n            sum
        += calculateFuel(i);\n        }\n        return sum;\n    }\n    \n    int
        calculateFuel(int mass) {\n        return mass / 3 - 2;\n    }\n    \n    int
        calculateFuelRecursively(int mass);\n    \n    int fuelSumWithFuel(std::vector&lt;int&gt;
        mass) {\n        int sum = 0;\n        for (int i: mass) {\n            sum
        += calculateFuelRecursively(i);\n        }\n        return sum;\n    }\n    \n    int
        calculateFuelRecursively(int mass) {\n        int fuel = calculateFuel(mass);\n        if
        (fuel &gt; 0) {\n            fuel += calculateFuelRecursively(fuel);\n        }
        else if (fuel &lt; 0) {\n            fuel = 0;\n        }\n        return
        fuel;\n    }\n    \n    int main() {\n        std::vector&lt;int&gt; mass;\n        int
        input;\n        while(std::cin &gt;&gt; input) {\n            mass.push_back(input);\n        }\n        std::cout
        &lt;&lt; fuelSum(mass) &lt;&lt; ''\\n'' &lt;&lt; fuelSumWithFuel(mass) &lt;&lt;
        ''\\n'';\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++,
        very long, but easily readable.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;vector&amp;gt;\n\nint calculateFuel(int
        mass);\n\nint fuelSum(std::vector&amp;lt;int&amp;gt; mass) {\n    int sum
        = 0;\n    for (int i: mass) {\n        sum += calculateFuel(i);\n    }\n    return
        sum;\n}\n\nint calculateFuel(int mass) {\n    return mass / 3 - 2;\n}\n\nint
        calculateFuelRecursively(int mass);\n\nint fuelSumWithFuel(std::vector&amp;lt;int&amp;gt;
        mass) {\n    int sum = 0;\n    for (int i: mass) {\n        sum += calculateFuelRecursively(i);\n    }\n    return
        sum;\n}\n\nint calculateFuelRecursively(int mass) {\n    int fuel = calculateFuel(mass);\n    if
        (fuel &amp;gt; 0) {\n        fuel += calculateFuelRecursively(fuel);\n    }
        else if (fuel &amp;lt; 0) {\n        fuel = 0;\n    }\n    return fuel;\n}\n\nint
        main() {\n    std::vector&amp;lt;int&amp;gt; mass;\n    int input;\n    while(std::cin
        &amp;gt;&amp;gt; input) {\n        mass.push_back(input);\n    }\n    std::cout
        &amp;lt;&amp;lt; fuelSum(mass) &amp;lt;&amp;lt; &amp;#39;\\n&amp;#39; &amp;lt;&amp;lt;
        fuelSumWithFuel(mass) &amp;lt;&amp;lt; &amp;#39;\\n&amp;#39;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dofwf/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dofwf", "created":
        1575235396.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dsahf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "abigreenlizard",
        "can_mod_post": false, "created_utc": 1575236388.0, "send_replies": true,
        "parent_id": "t1_f9dofwf", "score": 2, "author_fullname": "t2_16wg4f", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nice! So I attempted this in C, got the wrong answer a couple times, then
        gave up and did it in Python. I think I messed up the file I/O somewhere.
        My question is how did you do the IO here? std::cin requires command line
        input, right? Were you able to do something like \\`./a.out &lt;&lt; input.txt\\`
        and have that fed into cin line by line? Pretty nice that you don''t even
        need explicit type conversion! When you pass \\`mass\\` to fuelSum(), that''s
        implicitly converted to a vector&lt;int&gt; from vector&lt;char\\*&gt;?",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice! So I attempted
        this in C, got the wrong answer a couple times, then gave up and did it in
        Python. I think I messed up the file I/O somewhere. My question is how did
        you do the IO here? std::cin requires command line input, right? Were you
        able to do something like `./a.out &amp;lt;&amp;lt; input.txt` and have that
        fed into cin line by line? Pretty nice that you don&amp;#39;t even need explicit
        type conversion! When you pass `mass` to fuelSum(), that&amp;#39;s implicitly
        converted to a vector&amp;lt;int&amp;gt; from vector&amp;lt;char\\*&amp;gt;?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dsahf/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dsahf", "created":
        1575236388.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dwxkp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jedenastka",
        "can_mod_post": false, "created_utc": 1575237579.0, "send_replies": true,
        "parent_id": "t1_f9dsahf", "score": 1, "author_fullname": "t2_14jqimfk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt;My question is how did you do the IO here? std::cin requires command
        line input, right? Were you able to do something like \\`./a.out &lt;&lt;
        input.txt\\` and have that fed into cin line by line?\n\nIt''s working, because
        UNIX. The thing with ins and outs is very useful all the time for me. You
        can use `&lt;` to output all the file to standard input of your program. KISS
        is always your friend!\n\n&gt;When you pass \\`mass\\` to fuelSum(), that''s
        implicitly converted to a vector&lt;int&gt; from vector&lt;char\\*&gt;?\n\nIt
        is never `vector&lt;char*&gt;` in the first place! This time C++ magic, you
        can use std::cin to get input of any type. It can be int, it can be std::string
        and can be float.\n\nI''m glad that I helped someone learn something. I''m
        actually begginer, so I thought that someone will roast my code in no time
        :D", "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;My
        question is how did you do the IO here? std::cin requires command line input,
        right? Were you able to do something like `./a.out &amp;lt;&amp;lt; input.txt`
        and have that fed into cin line by line?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&amp;#39;s
        working, because UNIX. The thing with ins and outs is very useful all the
        time for me. You can use &lt;code&gt;&amp;lt;&lt;/code&gt; to output all the
        file to standard input of your program. KISS is always your friend!&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;When
        you pass `mass` to fuelSum(), that&amp;#39;s implicitly converted to a vector&amp;lt;int&amp;gt;
        from vector&amp;lt;char\\*&amp;gt;?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It
        is never &lt;code&gt;vector&amp;lt;char*&amp;gt;&lt;/code&gt; in the first
        place! This time C++ magic, you can use std::cin to get input of any type.
        It can be int, it can be std::string and can be float.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        glad that I helped someone learn something. I&amp;#39;m actually begginer,
        so I thought that someone will roast my code in no time :D&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dwxkp/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dwxkp", "created":
        1575237579.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9enzzt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "abigreenlizard",
        "can_mod_post": false, "created_utc": 1575247284.0, "send_replies": true,
        "parent_id": "t1_f9dwxkp", "score": 2, "author_fullname": "t2_16wg4f", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Jeepers, you sure do get a lot for free compared to C! Thanks for the explanations.
        Also, FWIW, I couldn''t tell you''re a beginner from reading your implementation.
        It is structured well, and has generally appropriate abstractions.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Jeepers, you sure do get a lot for free
        compared to C! Thanks for the explanations. Also, FWIW, I couldn&amp;#39;t
        tell you&amp;#39;re a beginner from reading your implementation. It is structured
        well, and has generally appropriate abstractions.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9enzzt/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9enzzt", "created":
        1575247284.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9e24jv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "williewillus",
        "can_mod_post": false, "created_utc": 1575238941.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_9rr54", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "OCaml: \n\nhttps://github.com/williewillus/advent_of_code_2019/blob/master/aoc_2019/day1.ml\n\nPart
        2 is a bit awkward because I wanted to make sure TCO got applied, so the normal
        `x + (compute_fp c)` wouldn''t work.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;OCaml: &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/williewillus/advent_of_code_2019/blob/master/aoc_2019/day1.ml\"&gt;https://github.com/williewillus/advent_of_code_2019/blob/master/aoc_2019/day1.ml&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2 is a bit awkward because I wanted to make sure TCO got applied, so the normal
        &lt;code&gt;x + (compute_fp c)&lt;/code&gt; wouldn&amp;#39;t work.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e24jv/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e24jv", "created":
        1575238941.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9eqs6z",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "RazorSh4rk",
        "can_mod_post": false, "created_utc": 1575249081.0, "send_replies": true,
        "parent_id": "t1_f9e24jv", "score": 1, "author_fullname": "t2_t6m17", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You are the first person ive seen who labels std functions", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;You are the first person ive seen who labels
        std functions&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eqs6z/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9eqs6z", "created":
        1575249081.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9f0skq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "williewillus",
        "can_mod_post": false, "created_utc": 1575256587.0, "send_replies": true,
        "parent_id": "t1_f9eqs6z", "score": 1, "author_fullname": "t2_9rr54", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "That''s because I''m using Jane Street''s `core` library, which replaces
        a bunch of standard library functions. One of the changes they made is to
        enforce labels for various things to make using `|&gt;` easier", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s because I&amp;#39;m using
        Jane Street&amp;#39;s &lt;code&gt;core&lt;/code&gt; library, which replaces
        a bunch of standard library functions. One of the changes they made is to
        enforce labels for various things to make using &lt;code&gt;|&amp;gt;&lt;/code&gt;
        easier&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f0skq/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9f0skq", "created":
        1575256587.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9e2a8s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fotoetienne",
        "can_mod_post": false, "created_utc": 1575238997.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_y92kv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Kotlin**\n\nthe gist:\n\n    val moduleMasses = File(\"input01.txt\").readLines().map
        { it.toInt() }\n    fun moduleFuel(mass: Int) = mass / 3 - 2\n    println(\"1)
        ${moduleMasses.map(::moduleFuel).sum()}\")\n\n    fun fuelFuel(fuelMass: Int):
        Int = if (fuelMass &lt; 0) 0 else fuelMass + fuelFuel(moduleFuel(fuelMass))\n    println(\"2)
        ${moduleMasses.map { fuelFuel(moduleFuel(it)) }.sum()}\")\n\n[full solution,
        kscript executable](https://github.com/fotoetienne/advent/blob/master/2019/01-the-tyranny-of-the-rocket-equation.kts)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;the
        gist:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val moduleMasses = File(&amp;quot;input01.txt&amp;quot;).readLines().map
        { it.toInt() }\nfun moduleFuel(mass: Int) = mass / 3 - 2\nprintln(&amp;quot;1)
        ${moduleMasses.map(::moduleFuel).sum()}&amp;quot;)\n\nfun fuelFuel(fuelMass:
        Int): Int = if (fuelMass &amp;lt; 0) 0 else fuelMass + fuelFuel(moduleFuel(fuelMass))\nprintln(&amp;quot;2)
        ${moduleMasses.map { fuelFuel(moduleFuel(it)) }.sum()}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/fotoetienne/advent/blob/master/2019/01-the-tyranny-of-the-rocket-equation.kts\"&gt;full
        solution, kscript executable&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e2a8s/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9e2a8s", "created": 1575238997.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_e4axxe", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "f9e30z9", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_e4axxe", "score": 1, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "My C++ Solution:\n\n#
        Part 1\n```\n#include &lt;fstream&gt;\n#include &lt;iostream&gt;\n#include
        &lt;cmath&gt;\n\nint main(int argc, char **argv)\n{\n    if (argc &lt; 2)\n    {\n        std::cout
        &lt;&lt; \"Usage: \" &lt;&lt; argv[0] &lt;&lt; \" filename.\" &lt;&lt; std::endl;\n        return
        -1;\n    }\n\n    std::ifstream file;\n    file.open(argv[1], std::ifstream::in);\n\n    uint32_t
        totalFuel{};\n\n    for (std::string line; std::getline(file, line); )\n    {\n        uint32_t
        fuel = stoi(line, nullptr, 10);\n        fuel = std::floor(fuel / 3) - 2;\n        totalFuel
        += fuel;\n    }\n    file.close();\n    std::cout &lt;&lt; \"Fuel required:
        \" &lt;&lt; totalFuel &lt;&lt; std::endl;\n}\n```\n# Part 2\n```\n#include
        &lt;fstream&gt;\n#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nint
        CalculateFuelForModule(int fuel)\n{\n    int newFuel{static_cast&lt;int&gt;(std::floor(fuel
        / 3)) - 2};\n    \n    if (newFuel &gt; 0)\n    {\n        return newFuel
        + CalculateFuelForModule(newFuel);\n    }\n    return 0;\n}\n\nint main(int
        argc, char **argv)\n{\n    if (argc &lt; 2)\n    {\n        std::cout &lt;&lt;
        \"Usage: \" &lt;&lt; argv[0] &lt;&lt; \" filename.\" &lt;&lt; std::endl;\n        return
        -1;\n    }\n\n    std::ifstream file;\n    file.open(argv[1], std::ifstream::in);\n\n    unsigned
        int totalFuel{};\n\n    for (std::string line; std::getline(file, line); )\n    {\n        int
        fuel = stoi(line, nullptr, 10);\n\n        totalFuel += CalculateFuelForModule(fuel);\n        \n    }\n\n    file.close();\n    std::cout
        &lt;&lt; \"Fuel required: \" &lt;&lt; totalFuel &lt;&lt; std::endl;\n}\n```",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_f9e30z9",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        C++ Solution:&lt;/p&gt;\n\n&lt;h1&gt;Part 1&lt;/h1&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;h1&gt;include
        &amp;lt;fstream&amp;gt;&lt;/h1&gt;\n\n&lt;h1&gt;include &amp;lt;iostream&amp;gt;&lt;/h1&gt;\n\n&lt;h1&gt;include
        &amp;lt;cmath&amp;gt;&lt;/h1&gt;\n\n&lt;p&gt;int main(int argc, char **argv)\n{\n    if
        (argc &amp;lt; 2)\n    {\n        std::cout &amp;lt;&amp;lt; &amp;quot;Usage:
        &amp;quot; &amp;lt;&amp;lt; argv[0] &amp;lt;&amp;lt; &amp;quot; filename.&amp;quot;
        &amp;lt;&amp;lt; std::endl;\n        return -1;\n    }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;std::ifstream
        file;\nfile.open(argv[1], std::ifstream::in);\n\nuint32_t totalFuel{};\n\nfor
        (std::string line; std::getline(file, line); )\n{\n    uint32_t fuel = stoi(line,
        nullptr, 10);\n    fuel = std::floor(fuel / 3) - 2;\n    totalFuel += fuel;\n}\nfile.close();\nstd::cout
        &amp;lt;&amp;lt; &amp;quot;Fuel required: &amp;quot; &amp;lt;&amp;lt; totalFuel
        &amp;lt;&amp;lt; std::endl;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n\n&lt;h1&gt;Part
        2&lt;/h1&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;h1&gt;include &amp;lt;fstream&amp;gt;&lt;/h1&gt;\n\n&lt;h1&gt;include
        &amp;lt;iostream&amp;gt;&lt;/h1&gt;\n\n&lt;h1&gt;include &amp;lt;cmath&amp;gt;&lt;/h1&gt;\n\n&lt;p&gt;int
        CalculateFuelForModule(int fuel)\n{\n    int newFuel{static_cast&amp;lt;int&amp;gt;(std::floor(fuel
        / 3)) - 2};&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (newFuel &amp;gt; 0)\n{\n    return
        newFuel + CalculateFuelForModule(newFuel);\n}\nreturn 0;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;int
        main(int argc, char **argv)\n{\n    if (argc &amp;lt; 2)\n    {\n        std::cout
        &amp;lt;&amp;lt; &amp;quot;Usage: &amp;quot; &amp;lt;&amp;lt; argv[0] &amp;lt;&amp;lt;
        &amp;quot; filename.&amp;quot; &amp;lt;&amp;lt; std::endl;\n        return
        -1;\n    }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;std::ifstream file;\nfile.open(argv[1],
        std::ifstream::in);\n\nunsigned int totalFuel{};\n\nfor (std::string line;
        std::getline(file, line); )\n{\n    int fuel = stoi(line, nullptr, 10);\n\n    totalFuel
        += CalculateFuelForModule(fuel);\n\n}\n\nfile.close();\nstd::cout &amp;lt;&amp;lt;
        &amp;quot;Fuel required: &amp;quot; &amp;lt;&amp;lt; totalFuel &amp;lt;&amp;lt;
        std::endl;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e30z9/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575239243.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575239243.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9e7v2y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Aehmlo",
        "can_mod_post": false, "created_utc": 1575240597.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_8tlr8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using **R**, uncertain if this is idiomatic or not (feedback welcome!):\n\n    library(dplyr)\n    library(readr)\n\n    read_file(\"../../inputs/1.txt\")
        %&gt;%\n        strsplit(\"\\n\") %&gt;%\n        unlist %&gt;%\n        as.numeric
        -&gt;\n        input\n\n\n    # Part one\n\n    fuel &lt;- function(mass)
        {\n        floor(mass / 3) - 2\n    }\n\n    total.fuel &lt;- function(mass)
        {\n        sum(fuel(mass))\n    }\n\n    total.fuel(input)\n\n    # Part two\n\n    fuels
        &lt;- function(mass) {\n        f &lt;- fuel(mass)\n        while (all(f &gt;=
        0)) {\n            f &lt;- c(f, fuel(tail(f, 1)))\n        }\n        f[f
        &gt;= 0]\n    }\n\n    total.fuels &lt;- function(mass) {\n        mass %&gt;%\n            lapply(fuels)
        %&gt;%\n            unlist %&gt;%\n            sum\n    }\n\n    total.fuels(input)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using &lt;strong&gt;R&lt;/strong&gt;,
        uncertain if this is idiomatic or not (feedback welcome!):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;library(dplyr)\nlibrary(readr)\n\nread_file(&amp;quot;../../inputs/1.txt&amp;quot;)
        %&amp;gt;%\n    strsplit(&amp;quot;\\n&amp;quot;) %&amp;gt;%\n    unlist %&amp;gt;%\n    as.numeric
        -&amp;gt;\n    input\n\n\n# Part one\n\nfuel &amp;lt;- function(mass) {\n    floor(mass
        / 3) - 2\n}\n\ntotal.fuel &amp;lt;- function(mass) {\n    sum(fuel(mass))\n}\n\ntotal.fuel(input)\n\n#
        Part two\n\nfuels &amp;lt;- function(mass) {\n    f &amp;lt;- fuel(mass)\n    while
        (all(f &amp;gt;= 0)) {\n        f &amp;lt;- c(f, fuel(tail(f, 1)))\n    }\n    f[f
        &amp;gt;= 0]\n}\n\ntotal.fuels &amp;lt;- function(mass) {\n    mass %&amp;gt;%\n        lapply(fuels)
        %&amp;gt;%\n        unlist %&amp;gt;%\n        sum\n}\n\ntotal.fuels(input)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e7v2y/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9e7v2y", "created":
        1575240597.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9e8ys9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_e4axxe", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Julia (requires version &gt;= 1.2)\n\n    function get_day_1()\n        data
        = open(\"day_1_input.txt\") do file\n            readlines(file)\n        end\n        data
        = parse.(Int, data)\n    end\n    data = get_day_1()\n\nPart 1\n\n    function
        answer_1()\n        return sum(div.(data, 3) .- 2)\n    end\n\nPart 2\n\n    function
        get_fuel(x)\n        total = 0\n        while x &gt; 5\n            x = div(x,
        3) - 2\n            total += x\n        end\n        return total\n    end\n    ans_2
        = mapreduce(get_fuel, +, data) #stylish", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_f9e8ys9", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Julia (requires version &amp;gt;= 1.2)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        get_day_1()\n    data = open(&amp;quot;day_1_input.txt&amp;quot;) do file\n        readlines(file)\n    end\n    data
        = parse.(Int, data)\nend\ndata = get_day_1()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function answer_1()\n    return sum(div.(data,
        3) .- 2)\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        get_fuel(x)\n    total = 0\n    while x &amp;gt; 5\n        x = div(x, 3)
        - 2\n        total += x\n    end\n    return total\nend\nans_2 = mapreduce(get_fuel,
        +, data) #stylish\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9e8ys9/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1575240985.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1575240985.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9eawlr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bashaZP",
        "can_mod_post": false, "created_utc": 1575241683.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_2qudaa6y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using Java\n\nGithub repo: [github.com/bashovski/advent-of-code-2019](https://github.com/bashovski/advent-of-code-2019)\n\n```java\n\npackage
        com.bashovski.solutions;\n\nimport com.bashovski.Main;\nimport org.junit.Test;\nimport
        static org.junit.Assert.assertEquals;\n\n/**\n * --- Day 1: The Tyranny of
        the Rocket Equation ---\n */\npublic class Day1 extends Main {\n    /**\n     *
        Part one\n     */\n    private int getFuelRequirements(int moduleMass) {\n        return
        (int)Math.floor(moduleMass/3)-2;\n    }\n\n    @Test\n    public void testFuelRequirements()
        {\n        assertEquals(this.getFuelRequirements(12), 2);\n        assertEquals(this.getFuelRequirements(14),
        2);\n        assertEquals(this.getFuelRequirements(1969), 654);\n        assertEquals(this.getFuelRequirements(100756),
        33583);\n    }\n\n    /**\n     * Part two\n     */\n    private int getTotalFuelByRocketEquation(int
        moduleMass) {\n        int result = this.getFuelRequirements(moduleMass);\n        int
        temporaryFuel = result, currentSubtract = result;\n\n        while(this.getFuelRequirements(currentSubtract)
        &gt; 0) {\n            temporaryFuel = (this.getFuelRequirements(currentSubtract)
        &lt;= 0) ? (0) : (this.getFuelRequirements(currentSubtract));\n            result
        += temporaryFuel;\n            currentSubtract = temporaryFuel;\n        }\n        return
        result;\n    }\n\n    @Test\n    public void testTotalFuel() {\n        assertEquals(this.getTotalFuelByRocketEquation(14),
        2);\n        assertEquals(this.getTotalFuelByRocketEquation(1969), 966);\n        assertEquals(this.getTotalFuelByRocketEquation(100756),
        50346);\n    }\n}\n\n\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using
        Java&lt;/p&gt;\n\n&lt;p&gt;Github repo: &lt;a href=\"https://github.com/bashovski/advent-of-code-2019\"&gt;github.com/bashovski/advent-of-code-2019&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;```java&lt;/p&gt;\n\n&lt;p&gt;package
        com.bashovski.solutions;&lt;/p&gt;\n\n&lt;p&gt;import com.bashovski.Main;\nimport
        org.junit.Test;\nimport static org.junit.Assert.assertEquals;&lt;/p&gt;\n\n&lt;p&gt;/**\n
        * --- Day 1: The Tyranny of the Rocket Equation ---\n &lt;em&gt;/\npublic
        class Day1 extends Main {\n    /&lt;/em&gt;*\n     * Part one\n     */\n    private
        int getFuelRequirements(int moduleMass) {\n        return (int)Math.floor(moduleMass/3)-2;\n    }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@Test\npublic
        void testFuelRequirements() {\n    assertEquals(this.getFuelRequirements(12),
        2);\n    assertEquals(this.getFuelRequirements(14), 2);\n    assertEquals(this.getFuelRequirements(1969),
        654);\n    assertEquals(this.getFuelRequirements(100756), 33583);\n}\n\n/**\n
        * Part two\n */\nprivate int getTotalFuelByRocketEquation(int moduleMass)
        {\n    int result = this.getFuelRequirements(moduleMass);\n    int temporaryFuel
        = result, currentSubtract = result;\n\n    while(this.getFuelRequirements(currentSubtract)
        &amp;gt; 0) {\n        temporaryFuel = (this.getFuelRequirements(currentSubtract)
        &amp;lt;= 0) ? (0) : (this.getFuelRequirements(currentSubtract));\n        result
        += temporaryFuel;\n        currentSubtract = temporaryFuel;\n    }\n    return
        result;\n}\n\n@Test\npublic void testTotalFuel() {\n    assertEquals(this.getTotalFuelByRocketEquation(14),
        2);\n    assertEquals(this.getTotalFuelByRocketEquation(1969), 966);\n    assertEquals(this.getTotalFuelByRocketEquation(100756),
        50346);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eawlr/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9eawlr", "created":
        1575241683.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9eermi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nehayward",
        "can_mod_post": false, "created_utc": 1575243160.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_4newz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[https://imgur.com/a/BNHvsEO](https://imgur.com/a/BNHvsEO)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://imgur.com/a/BNHvsEO\"&gt;https://imgur.com/a/BNHvsEO&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eermi/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9eermi", "created":
        1575243160.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9eileg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1575244719.0, "send_replies": true,
        "parent_id": "t1_f9eermi", "score": 4, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ah yes, PNG, the superior code syntax.  \ud83e\udd23\n\nThis looks like Swift,
        am I correct?", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ah
        yes, PNG, the superior code syntax.  \ud83e\udd23&lt;/p&gt;\n\n&lt;p&gt;This
        looks like Swift, am I correct?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eileg/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9eileg", "created": 1575244719.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9f66kg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nehayward",
        "can_mod_post": false, "created_utc": 1575260624.0, "send_replies": true,
        "parent_id": "t1_f9eileg", "score": 2, "author_fullname": "t2_4newz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Yeah! It is. Yeah I just wanted to try something different. I wish there
        was code syntax on reddit.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah!
        It is. Yeah I just wanted to try something different. I wish there was code
        syntax on reddit.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9f66kg/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9f66kg", "created":
        1575260624.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1587938553.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "fd6h2ki", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_f9f66kg", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_fd6h2ki", "collapsed": true, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fd6h2ki/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1578190908.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1578190908.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "fd6i7wb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nehayward",
        "can_mod_post": false, "created_utc": 1578191427.0, "send_replies": true,
        "parent_id": "t1_fd6h2ki", "score": 1, "author_fullname": "t2_4newz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I believe monospace \n\nGenerated image with this \ud83d\udc47\n\nhttps://github.com/JohnSundell/Splash/",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I believe monospace
        &lt;/p&gt;\n\n&lt;p&gt;Generated image with this \ud83d\udc47&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/JohnSundell/Splash/\"&gt;https://github.com/JohnSundell/Splash/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fd6i7wb/",
        "subreddit_type": "public", "locked": false, "name": "t1_fd6i7wb", "created":
        1578191427.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_e4axxe", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "fd6jf5e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_fd6i7wb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_fd6jf5e", "collapsed": true, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fd6jf5e/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1578191957.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1578191957.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 5, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "fd6jg2s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WikiTextBot",
        "can_mod_post": false, "created_utc": 1578191969.0, "send_replies": true,
        "parent_id": "t1_fd6jf5e", "score": 1, "author_fullname": "t2_32duad4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Menlo (typeface)**\n\nMenlo is a monospaced sans-serif typeface designed
        by Jim Lyles. The face first shipped with Mac OS X Snow Leopard. Menlo is
        based upon the Open Source font Bitstream Vera and the public domain font
        Deja Vu.\n\n***\n\n^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space)
        ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme)
        ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/adventofcode/about/banned)
        ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index)
        ^| [^Source](https://github.com/kittenswolf/WikiTextBot)   ^]\n^Downvote ^to
        ^remove ^| ^v0.28", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Menlo
        (typeface)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Menlo is a monospaced sans-serif
        typeface designed by Jim Lyles. The face first shipped with Mac OS X Snow
        Leopard. Menlo is based upon the Open Source font Bitstream Vera and the public
        domain font Deja Vu.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;sup&gt;[&lt;/sup&gt;
        &lt;a href=\"https://www.reddit.com/message/compose?to=kittens_from_space\"&gt;&lt;sup&gt;PM&lt;/sup&gt;&lt;/a&gt;
        &lt;sup&gt;|&lt;/sup&gt; &lt;a href=\"https://reddit.com/message/compose?to=WikiTextBot&amp;amp;message=Excludeme&amp;amp;subject=Excludeme\"&gt;&lt;sup&gt;Exclude&lt;/sup&gt;
        &lt;sup&gt;me&lt;/sup&gt;&lt;/a&gt; &lt;sup&gt;|&lt;/sup&gt; &lt;a href=\"https://np.reddit.com/r/adventofcode/about/banned\"&gt;&lt;sup&gt;Exclude&lt;/sup&gt;
        &lt;sup&gt;from&lt;/sup&gt; &lt;sup&gt;subreddit&lt;/sup&gt;&lt;/a&gt; &lt;sup&gt;|&lt;/sup&gt;
        &lt;a href=\"https://np.reddit.com/r/WikiTextBot/wiki/index\"&gt;&lt;sup&gt;FAQ&lt;/sup&gt;
        &lt;sup&gt;/&lt;/sup&gt; &lt;sup&gt;Information&lt;/sup&gt;&lt;/a&gt; &lt;sup&gt;|&lt;/sup&gt;
        &lt;a href=\"https://github.com/kittenswolf/WikiTextBot\"&gt;&lt;sup&gt;Source&lt;/sup&gt;&lt;/a&gt;   &lt;sup&gt;]&lt;/sup&gt;\n&lt;sup&gt;Downvote&lt;/sup&gt;
        &lt;sup&gt;to&lt;/sup&gt; &lt;sup&gt;remove&lt;/sup&gt; &lt;sup&gt;|&lt;/sup&gt;
        &lt;sup&gt;v0.28&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/fd6jg2s/",
        "subreddit_type": "public", "locked": false, "name": "t1_fd6jg2s", "created":
        1578191969.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 6, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575243996.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9eg9ka", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pwhyz",
        "can_mod_post": false, "created_utc": 1575243760.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_i5r5l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## JavaScript\n\nThere is little difference between Part 1 and 2. [paste](https://topaz.github.io/paste/#XQAAAQBkAQAAAAAAAAAxm8oZxjYXows3V67OFtTdE1VwEU5RyYkjfXvekOBqPHCwqf6McAy79MWaI/uFdtE4dcG2bF93kVmJMOjViiBz+ZfvRZSRoJbu43qJ5OjJtVV5cqywTKxTA/A8X2vd7HgDN7fWGRNqce/7RNcHLgC1nQ41KhTCJ4ruclFuA1+zVMv2rhEFdOP0f/vwAjHTgbAqaMR1QSth79xPrX++s9wvJ+FU4PWEa+20QUW5awqkoD8WICAWGzb49OoyynYy5m7sOxyNFEz0F1ZnkmItnQYgwcxvjtiaGR2YvlJ1ZYZWVPZ8cUS++7JZPAfq/8iA8Og=)\n\n###
        Part 1:\n\n```js\nconst fs = require(''fs'');\n\nconst requiredFuel = (mass)
        =&gt; Math.floor(mass/3) - 2;\nfs.readFile(''./input'', (_, data) =&gt; {\n  console.log(data.toString().split(''\\n'').reduce((total,
        line) =&gt; total += requiredFuel(parseInt(line)), 0))\n})\n```\n\n### Part
        2:\n\n```js\nconst fs = require(''fs'');\n\nconst requiredFuel = (mass) =&gt;
        Math.floor(mass/3) - 2;\nconst orZero = (num, expr) =&gt; num &gt; 0 ? num
        + expr(num) : 0;\nconst totalFuel = (mass) =&gt; orZero(requiredFuel(mass),
        totalFuel);\nfs.readFile(''./input'', (_, data) =&gt; {\n  console.log(data.toString().split(''\\n'').reduce((total,
        line) =&gt; total += totalFuel(parseInt(line)), 0))\n})\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h2&gt;JavaScript&lt;/h2&gt;\n\n&lt;p&gt;There
        is little difference between Part 1 and 2. &lt;a href=\"https://topaz.github.io/paste/#XQAAAQBkAQAAAAAAAAAxm8oZxjYXows3V67OFtTdE1VwEU5RyYkjfXvekOBqPHCwqf6McAy79MWaI/uFdtE4dcG2bF93kVmJMOjViiBz+ZfvRZSRoJbu43qJ5OjJtVV5cqywTKxTA/A8X2vd7HgDN7fWGRNqce/7RNcHLgC1nQ41KhTCJ4ruclFuA1+zVMv2rhEFdOP0f/vwAjHTgbAqaMR1QSth79xPrX++s9wvJ+FU4PWEa+20QUW5awqkoD8WICAWGzb49OoyynYy5m7sOxyNFEz0F1ZnkmItnQYgwcxvjtiaGR2YvlJ1ZYZWVPZ8cUS++7JZPAfq/8iA8Og=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;h3&gt;Part
        1:&lt;/h3&gt;\n\n&lt;p&gt;```js\nconst fs = require(&amp;#39;fs&amp;#39;);&lt;/p&gt;\n\n&lt;p&gt;const
        requiredFuel = (mass) =&amp;gt; Math.floor(mass/3) - 2;\nfs.readFile(&amp;#39;./input&amp;#39;,
        (_, data) =&amp;gt; {\n  console.log(data.toString().split(&amp;#39;\\n&amp;#39;).reduce((total,
        line) =&amp;gt; total += requiredFuel(parseInt(line)), 0))\n})\n```&lt;/p&gt;\n\n&lt;h3&gt;Part
        2:&lt;/h3&gt;\n\n&lt;p&gt;```js\nconst fs = require(&amp;#39;fs&amp;#39;);&lt;/p&gt;\n\n&lt;p&gt;const
        requiredFuel = (mass) =&amp;gt; Math.floor(mass/3) - 2;\nconst orZero = (num,
        expr) =&amp;gt; num &amp;gt; 0 ? num + expr(num) : 0;\nconst totalFuel = (mass)
        =&amp;gt; orZero(requiredFuel(mass), totalFuel);\nfs.readFile(&amp;#39;./input&amp;#39;,
        (_, data) =&amp;gt; {\n  console.log(data.toString().split(&amp;#39;\\n&amp;#39;).reduce((total,
        line) =&amp;gt; total += totalFuel(parseInt(line)), 0))\n})\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9eg9ka/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9eg9ka", "created":
        1575243760.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98h92l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wheelsmanx",
        "can_mod_post": false, "created_utc": 1575178281.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_ex7hu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&amp;#x200B;\n\n&amp;#x200B;\n\nDid it in C++ --- real dirty not resource
        friendly. Might even be objects not used... :shrug: \n\n    #include &lt;stdio.h&gt;\n    #include
        &lt;iostream&gt; \n    #include &lt;string&gt;\n    #include &lt;fstream&gt;\n    #include
        &lt;vector&gt;\n    #include &lt;map&gt;\n    #include &lt;math.h&gt;       \n    #include
        \"./Header.h\"\n    \n    using namespace std;\n    \n    template &lt;class
        T &gt;\n    class unitReturnObject {\n    public:\n    \tT returnObject;\n    \tbool
        unitTest = 0;\n    \tunitReturnObject(T classInput) {\n    \t\tthis-&gt;returnObject
        = classInput;\n    \t}\n    \tunitReturnObject() {\n    \n    \t}\n    \tint
        setUnit(bool functionInput) {\n    \t\tint returnInt = 0;\n    \t\tthis-&gt;unitTest
        = functionInput;\n    \t\tif (this-&gt;unitTest == functionInput) {\n    \t\t\treturnInt
        = 1;\n    \t\t}\n    \t\treturn returnInt;\n    \t}\n    \tint test() {\n    \t\treturn
        this-&gt;unitTest;\n    \t}\n    };\n    returnObject &lt;vector&lt;string&gt;&gt;
        returnMapFromPuzzle() {\n    \tvector&lt;string&gt; puzzle;\n    \tunitReturnObject
        &lt;vector&lt;string&gt;&gt; returnObject;\n    \n    \tifstream puzzleFile;\n    \tpuzzleFile.open(\"./puzzle.txt\");\n    \tif
        (!puzzleFile) {\n    \t\treturnObject.setUnit(0);\n    \t}\n    \telse {\n    \t\treturnObject.setUnit(1);\n    \t\tstring
        x;\n    \t\twhile (puzzleFile &gt;&gt; x) {\n    \t\t\treturnObject.returnObject.push_back(x);\n    \t\t}\n    \t}\n    \treturn
        returnObject;\n    }\n    unitReturnObject&lt;vector&lt;string&gt;&gt; part1()
        {\n    \tunitReturnObject&lt;vector &lt;string&gt;&gt; returnObject;\n    \treturnObject
        = returnMapFromPuzzle(); \n    \tint fuelRequired = 0; \n    \tfor (auto elem
        : returnObject.returnObject) {\n    \t\tfuelRequired = fuelRequired + (floor(String2IntSingle(elem)
        / 3) - 2); \n    \t}\n    \tcout &lt;&lt; \"Part 1: \" &lt;&lt; fuelRequired
        &lt;&lt; endl;\n    \treturn returnObject;\n    }\n    unitReturnObject&lt;vector&lt;string&gt;&gt;
        part2() {\n    \tunitReturnObject&lt;vector&lt;string&gt;&gt; returnObject;\n    \n    \treturnObject
        = returnMapFromPuzzle();\n    \tint fuelRequired = 0;\n    \tfor (auto elem
        : returnObject.returnObject) {\n    \t\tint temp = String2IntSingle(elem);
        \n    \t\twhile (temp &gt;= 0) {\n    \t\t\ttemp = (floor(temp / 3) - 2);\n    \t\t\tif
        (temp &gt;= 0) {\n    \t\t\t\tfuelRequired = fuelRequired + temp;\n    \t\t\t}\n    \t\t}\n    \t}\n    \tcout
        &lt;&lt; \"Part 2: \" &lt;&lt; fuelRequired &lt;&lt; endl;\n    \treturn returnObject;\n    }\n    int
        main() {\n    \tint returnObject = 0;\n    \tpart1();\n    \tpart2();\n    \tsystem(\"pause\");\n    \treturn
        returnObject = 0;\n    }\n\n [https://github.com/wheelsmanx/cpp\\_adventOfCode2019\\_day1/blob/master/Source.cpp](https://github.com/wheelsmanx/cpp_adventOfCode2019_day1/blob/master/Source.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Did
        it in C++ --- real dirty not resource friendly. Might even be objects not
        used... :shrug: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n#include
        &amp;lt;iostream&amp;gt; \n#include &amp;lt;string&amp;gt;\n#include &amp;lt;fstream&amp;gt;\n#include
        &amp;lt;vector&amp;gt;\n#include &amp;lt;map&amp;gt;\n#include &amp;lt;math.h&amp;gt;       \n#include
        &amp;quot;./Header.h&amp;quot;\n\nusing namespace std;\n\ntemplate &amp;lt;class
        T &amp;gt;\nclass unitReturnObject {\npublic:\n    T returnObject;\n    bool
        unitTest = 0;\n    unitReturnObject(T classInput) {\n        this-&amp;gt;returnObject
        = classInput;\n    }\n    unitReturnObject() {\n\n    }\n    int setUnit(bool
        functionInput) {\n        int returnInt = 0;\n        this-&amp;gt;unitTest
        = functionInput;\n        if (this-&amp;gt;unitTest == functionInput) {\n            returnInt
        = 1;\n        }\n        return returnInt;\n    }\n    int test() {\n        return
        this-&amp;gt;unitTest;\n    }\n};\nreturnObject &amp;lt;vector&amp;lt;string&amp;gt;&amp;gt;
        returnMapFromPuzzle() {\n    vector&amp;lt;string&amp;gt; puzzle;\n    unitReturnObject
        &amp;lt;vector&amp;lt;string&amp;gt;&amp;gt; returnObject;\n\n    ifstream
        puzzleFile;\n    puzzleFile.open(&amp;quot;./puzzle.txt&amp;quot;);\n    if
        (!puzzleFile) {\n        returnObject.setUnit(0);\n    }\n    else {\n        returnObject.setUnit(1);\n        string
        x;\n        while (puzzleFile &amp;gt;&amp;gt; x) {\n            returnObject.returnObject.push_back(x);\n        }\n    }\n    return
        returnObject;\n}\nunitReturnObject&amp;lt;vector&amp;lt;string&amp;gt;&amp;gt;
        part1() {\n    unitReturnObject&amp;lt;vector &amp;lt;string&amp;gt;&amp;gt;
        returnObject;\n    returnObject = returnMapFromPuzzle(); \n    int fuelRequired
        = 0; \n    for (auto elem : returnObject.returnObject) {\n        fuelRequired
        = fuelRequired + (floor(String2IntSingle(elem) / 3) - 2); \n    }\n    cout
        &amp;lt;&amp;lt; &amp;quot;Part 1: &amp;quot; &amp;lt;&amp;lt; fuelRequired
        &amp;lt;&amp;lt; endl;\n    return returnObject;\n}\nunitReturnObject&amp;lt;vector&amp;lt;string&amp;gt;&amp;gt;
        part2() {\n    unitReturnObject&amp;lt;vector&amp;lt;string&amp;gt;&amp;gt;
        returnObject;\n\n    returnObject = returnMapFromPuzzle();\n    int fuelRequired
        = 0;\n    for (auto elem : returnObject.returnObject) {\n        int temp
        = String2IntSingle(elem); \n        while (temp &amp;gt;= 0) {\n            temp
        = (floor(temp / 3) - 2);\n            if (temp &amp;gt;= 0) {\n                fuelRequired
        = fuelRequired + temp;\n            }\n        }\n    }\n    cout &amp;lt;&amp;lt;
        &amp;quot;Part 2: &amp;quot; &amp;lt;&amp;lt; fuelRequired &amp;lt;&amp;lt;
        endl;\n    return returnObject;\n}\nint main() {\n    int returnObject = 0;\n    part1();\n    part2();\n    system(&amp;quot;pause&amp;quot;);\n    return
        returnObject = 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/wheelsmanx/cpp_adventOfCode2019_day1/blob/master/Source.cpp\"&gt;https://github.com/wheelsmanx/cpp_adventOfCode2019_day1/blob/master/Source.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98h92l/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98h92l", "created":
        1575178281.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dsw8j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "throwaway400383",
        "can_mod_post": false, "created_utc": 1575236574.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 1, "author_fullname": "t2_pi9a4ij", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This is my first time and I''m a little bit scared.\n\nPart II - PHP.\n\n    &lt;?php  \n    $fuel_f
        = function($mass) use (&amp;$fuel_f) {\n        if ((floor(($mass / 3)) -
        2) &lt;= 0) return $mass;\n        return $mass += $fuel_f(floor((($mass /
        3)) - 2));\n    };\n    \n    $file_lines = file( \"input.txt\" );\n    \n    $sum
        = 0;\n    foreach( $file_lines as $line ) {\n        $sum += ($fuel_f((int)
        $line) - (int) $line);\n    };\n    \n    echo $sum;", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;This is my first time and I&amp;#39;m a little bit
        scared.&lt;/p&gt;\n\n&lt;p&gt;Part II - PHP.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php  \n$fuel_f
        = function($mass) use (&amp;amp;$fuel_f) {\n    if ((floor(($mass / 3)) -
        2) &amp;lt;= 0) return $mass;\n    return $mass += $fuel_f(floor((($mass /
        3)) - 2));\n};\n\n$file_lines = file( &amp;quot;input.txt&amp;quot; );\n\n$sum
        = 0;\nforeach( $file_lines as $line ) {\n    $sum += ($fuel_f((int) $line)
        - (int) $line);\n};\n\necho $sum;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dsw8j/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dsw8j", "created":
        1575236574.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9duuym",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1575237021.0, "send_replies": true,
        "parent_id": "t1_f9dsw8j", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; This is my first time and I''m a little bit scared.\n\nWelcome, and
        don''t be scared - we''re a pretty helpful community!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;This is my first time and I&amp;#39;m
        a little bit scared.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Welcome, and
        don&amp;#39;t be scared - we&amp;#39;re a pretty helpful community!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9duuym/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9duuym", "created":
        1575237021.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 0, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f99ck7e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wololock",
        "can_mod_post": false, "created_utc": 1575189780.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 0, "author_fullname": "t2_2pp817ta", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Haskell - 4380/4023\n\n```haskell\nmodule Day01 where\n\nimport Commons\n\nparseInput
        :: String -&gt; [Int]\nparseInput = map str2Int . lines\n\nfuelRequirement
        :: Integral a =&gt; a -&gt; a\nfuelRequirement x = x `div` 3 - 2\n\ntotalFuelRequirement
        :: Integral a =&gt; a -&gt; a\ntotalFuelRequirement x | y &lt; 0     = 0\n                       |
        otherwise = y + totalFuelRequirement y\n                       where\n                         y
        = fuelRequirement x\n\nsolution :: IO()\nsolution = do putStr \"Part 01: \"\n              modules
        &lt;- parseInput &lt;$&gt; getInput \"input01.txt\"\n              print $
        sum $ map fuelRequirement modules\n              putStr \"Part 02: \"\n              print
        $ sum $ map totalFuelRequirement modules\n\nmain :: IO()\nmain = solution\n```\n\nhttps://github.com/wololock/AoC2019/blob/master/src/Day01.hs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Haskell - 4380/4023&lt;/h2&gt;\n\n&lt;p&gt;```haskell\nmodule
        Day01 where&lt;/p&gt;\n\n&lt;p&gt;import Commons&lt;/p&gt;\n\n&lt;p&gt;parseInput
        :: String -&amp;gt; [Int]\nparseInput = map str2Int . lines&lt;/p&gt;\n\n&lt;p&gt;fuelRequirement
        :: Integral a =&amp;gt; a -&amp;gt; a\nfuelRequirement x = x &lt;code&gt;div&lt;/code&gt;
        3 - 2&lt;/p&gt;\n\n&lt;p&gt;totalFuelRequirement :: Integral a =&amp;gt; a
        -&amp;gt; a\ntotalFuelRequirement x | y &amp;lt; 0     = 0\n                       |
        otherwise = y + totalFuelRequirement y\n                       where\n                         y
        = fuelRequirement x&lt;/p&gt;\n\n&lt;p&gt;solution :: IO()\nsolution = do
        putStr &amp;quot;Part 01: &amp;quot;\n              modules &amp;lt;- parseInput
        &amp;lt;$&amp;gt; getInput &amp;quot;input01.txt&amp;quot;\n              print
        $ sum $ map fuelRequirement modules\n              putStr &amp;quot;Part 02:
        &amp;quot;\n              print $ sum $ map totalFuelRequirement modules&lt;/p&gt;\n\n&lt;p&gt;main
        :: IO()\nmain = solution\n```&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/wololock/AoC2019/blob/master/src/Day01.hs\"&gt;https://github.com/wololock/AoC2019/blob/master/src/Day01.hs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99ck7e/",
        "subreddit_type": "public", "locked": false, "name": "t1_f99ck7e", "created":
        1575189780.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f99r9d1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "t1nydoto",
        "can_mod_post": false, "created_utc": 1575194191.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 0, "author_fullname": "t2_gy7h0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell -- no leaderboard\n\nAlso, no `iterate` :)\n\n```hs\nmodule Main
        where\n\nparse :: String -&gt; [Int]\nparse = fmap read . lines\n\nformula
        :: Int -&gt; Int\nformula mass\n  | fuel &gt; 0 = fuel\n  | otherwise = 0\n  where\n    fuel
        = (mass `div` 3) - 2\n\ncalculate :: Int -&gt; Int\ncalculate mass = go mass
        0\n  where\n    go :: Int -&gt; Int -&gt; Int\n    go mass acc\n      | mass
        &lt;= 0 = acc\n      | otherwise = go (formula mass) (acc + formula mass)\n\npart1
        :: String -&gt; Int\npart1 = sum . fmap formula . parse\n\npart2 :: String
        -&gt; Int\npart2 = sum . fmap calculate . parse\n\nmain :: IO ()\nmain = do\n  input
        &lt;- readFile \"2019/input/day-01\"\n  putStrLn $ \"Part 1: \" ++ show (part1
        input)\n  putStrLn $ \"Part 2: \" ++ show (part2 input)\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell -- no leaderboard&lt;/p&gt;\n\n&lt;p&gt;Also,
        no &lt;code&gt;iterate&lt;/code&gt; :)&lt;/p&gt;\n\n&lt;p&gt;```hs\nmodule
        Main where&lt;/p&gt;\n\n&lt;p&gt;parse :: String -&amp;gt; [Int]\nparse =
        fmap read . lines&lt;/p&gt;\n\n&lt;p&gt;formula :: Int -&amp;gt; Int\nformula
        mass\n  | fuel &amp;gt; 0 = fuel\n  | otherwise = 0\n  where\n    fuel = (mass
        &lt;code&gt;div&lt;/code&gt; 3) - 2&lt;/p&gt;\n\n&lt;p&gt;calculate :: Int
        -&amp;gt; Int\ncalculate mass = go mass 0\n  where\n    go :: Int -&amp;gt;
        Int -&amp;gt; Int\n    go mass acc\n      | mass &amp;lt;= 0 = acc\n      |
        otherwise = go (formula mass) (acc + formula mass)&lt;/p&gt;\n\n&lt;p&gt;part1
        :: String -&amp;gt; Int\npart1 = sum . fmap formula . parse&lt;/p&gt;\n\n&lt;p&gt;part2
        :: String -&amp;gt; Int\npart2 = sum . fmap calculate . parse&lt;/p&gt;\n\n&lt;p&gt;main
        :: IO ()\nmain = do\n  input &amp;lt;- readFile &amp;quot;2019/input/day-01&amp;quot;\n  putStrLn
        $ &amp;quot;Part 1: &amp;quot; ++ show (part1 input)\n  putStrLn $ &amp;quot;Part
        2: &amp;quot; ++ show (part2 input)\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f99r9d1/", "subreddit_type":
        "public", "locked": false, "name": "t1_f99r9d1", "created": 1575194191.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 0, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9a9804", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dimkarakostas", "can_mod_post": false,
        "created_utc": 1575200096.0, "send_replies": true, "parent_id": "t3_e4axxe",
        "score": 0, "author_fullname": "t2_dt8ye7n", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Python 2.7:\n\n    def
        fuel(m):\n        return (m / 3) - 2\n    \n    def extra_fuel(m):\n        fuels
        = 0\n        while fuel(m) &gt; 0:\n            m = fuel(m)\n            fuels
        += m\n        return fuels\n    \n    masses = [int(l) for l in open(''input1'').readlines()]\n    print
        ''Part 1:'', sum([fuel(m) for m in masses])\n    print ''Part 2:'', sum([extra_fuel(m)
        for m in masses])", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        2.7:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def fuel(m):\n    return (m / 3)
        - 2\n\ndef extra_fuel(m):\n    fuels = 0\n    while fuel(m) &amp;gt; 0:\n        m
        = fuel(m)\n        fuels += m\n    return fuels\n\nmasses = [int(l) for l
        in open(&amp;#39;input1&amp;#39;).readlines()]\nprint &amp;#39;Part 1:&amp;#39;,
        sum([fuel(m) for m in masses])\nprint &amp;#39;Part 2:&amp;#39;, sum([extra_fuel(m)
        for m in masses])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9a9804/", "subreddit_type":
        "public", "locked": false, "name": "t1_f9a9804", "created": 1575200096.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 0, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f9bbta9", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "KoolStar", "can_mod_post": false, "created_utc":
        1575211130.0, "send_replies": true, "parent_id": "t3_e4axxe", "score": 0,
        "author_fullname": "t2_ovwjl", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Swift 5 Solution\nThis was
        done with the input file in the resource directory for the playground (the
        reason for the read file code).\n\n```\nimport Foundation\n\nfunc fuel(_ input:
        Int) -&gt; Int {\n    return (input / 3) - 2;\n}\n\nfunc extraFuel(_ input:
        Int) -&gt; Int {\n    let fuelNeeded = fuel(input)\n    return fuelNeeded
        &lt;= 0 ? 0 : fuelNeeded + extraFuel(fuelNeeded)\n}\n\nfunc readFile(_ named:
        String, fileExtenstion: String) -&gt; [Int] {\n    var input: [String] = []\n    do
        {\n        let path = Bundle.main.url(forResource: named, withExtension: fileExtenstion)\n        let
        file = try String(contentsOf: path!)\n        input = file.components(separatedBy:
        \"\\n\")\n    } catch let error {\n        Swift.print(\"Fatal Error: \\(error.localizedDescription)\")\n    }\n    \n    return
        input.compactMap({ Int($0) })\n}\n\n//Part 1\nlet sum = readFile(\"input\",
        fileExtenstion: \"txt\").compactMap({ fuel($0)}).reduce(0, +)\n\n//Part 2\nlet
        sum2 = readFile(\"input\", fileExtenstion: \"txt\").compactMap({ extraFuel($0)}).reduce(0,
        +)\n\nprint(\"Part 1: \\(sum)\")\nprint(\"Part 2: \\(sum2)\")\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Swift 5 Solution\nThis was done with the
        input file in the resource directory for the playground (the reason for the
        read file code).&lt;/p&gt;\n\n&lt;p&gt;```\nimport Foundation&lt;/p&gt;\n\n&lt;p&gt;func
        fuel(_ input: Int) -&amp;gt; Int {\n    return (input / 3) - 2;\n}&lt;/p&gt;\n\n&lt;p&gt;func
        extraFuel(_ input: Int) -&amp;gt; Int {\n    let fuelNeeded = fuel(input)\n    return
        fuelNeeded &amp;lt;= 0 ? 0 : fuelNeeded + extraFuel(fuelNeeded)\n}&lt;/p&gt;\n\n&lt;p&gt;func
        readFile(_ named: String, fileExtenstion: String) -&amp;gt; [Int] {\n    var
        input: [String] = []\n    do {\n        let path = Bundle.main.url(forResource:
        named, withExtension: fileExtenstion)\n        let file = try String(contentsOf:
        path!)\n        input = file.components(separatedBy: &amp;quot;\\n&amp;quot;)\n    }
        catch let error {\n        Swift.print(&amp;quot;Fatal Error: (error.localizedDescription)&amp;quot;)\n    }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return
        input.compactMap({ Int($0) })\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;//Part
        1\nlet sum = readFile(&amp;quot;input&amp;quot;, fileExtenstion: &amp;quot;txt&amp;quot;).compactMap({
        fuel($0)}).reduce(0, +)&lt;/p&gt;\n\n&lt;p&gt;//Part 2\nlet sum2 = readFile(&amp;quot;input&amp;quot;,
        fileExtenstion: &amp;quot;txt&amp;quot;).compactMap({ extraFuel($0)}).reduce(0,
        +)&lt;/p&gt;\n\n&lt;p&gt;print(&amp;quot;Part 1: (sum)&amp;quot;)\nprint(&amp;quot;Part
        2: (sum2)&amp;quot;)\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bbta9/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bbta9", "created":
        1575211130.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1575213418.0, "mod_reason_by": null,
        "banned_by": null, "ups": 0, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "f9biur5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dgJenkins",
        "can_mod_post": false, "created_utc": 1575213145.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 0, "author_fullname": "t2_exlqy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n\n```\npublic static int ProblemOne(IEnumerable&lt;int&gt; inp)  \n  =&gt;
        inp.Sum(w =&gt; w / 3 - 2);\n\npublic static int ProblemTwo(IEnumerable&lt;int&gt;
        inp)  \n{  \n  int CalcWeight(int w)  \n  {  \n     var requiredFuel = w /
        3 - 2;  \n     if (requiredFuel &lt;= 0) return 0;  \n     return requiredFuel
        + CalcWeight(requiredFuel);  \n  }  \n  return inp.Sum(CalcWeight)\n}\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;p&gt;```\npublic
        static int ProblemOne(IEnumerable&amp;lt;int&amp;gt; inp)&lt;br/&gt;\n  =&amp;gt;
        inp.Sum(w =&amp;gt; w / 3 - 2);&lt;/p&gt;\n\n&lt;p&gt;public static int ProblemTwo(IEnumerable&amp;lt;int&amp;gt;
        inp)&lt;br/&gt;\n{&lt;br/&gt;\n  int CalcWeight(int w)&lt;br/&gt;\n  {&lt;br/&gt;\n     var
        requiredFuel = w / 3 - 2;&lt;br/&gt;\n     if (requiredFuel &amp;lt;= 0) return
        0;&lt;br/&gt;\n     return requiredFuel + CalcWeight(requiredFuel);&lt;br/&gt;\n  }&lt;br/&gt;\n  return
        inp.Sum(CalcWeight)\n}\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9biur5/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9biur5", "created":
        1575213145.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bojzt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "drewolson",
        "can_mod_post": false, "created_utc": 1575214712.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 0, "author_fullname": "t2_enkcm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m attempting this year using PureScript.\n\n```\nmodule Aoc.Day01 where\n\nimport
        Prelude\n\nimport Aoc.Util.File as File\nimport Data.Array (mapMaybe)\nimport
        Data.Foldable (sum)\nimport Data.Int as Int\nimport Effect (Effect)\nimport
        Effect.Aff (launchAff_)\nimport Effect.Class.Console as Console\n\nmetafuel
        :: Int -&gt; Int\nmetafuel mass =\n  case fuel mass of\n    f | f &lt; 0 -&gt;
        0\n    f -&gt; f + metafuel f\n\nfuel :: Int -&gt; Int\nfuel mass = mass `div`
        3 - 2\n\npart1 :: Array String -&gt; Int\npart1 = sum &lt;&lt;&lt; map fuel
        &lt;&lt;&lt; mapMaybe Int.fromString\n\npart2 :: Array String -&gt; Int\npart2
        = sum &lt;&lt;&lt; map metafuel &lt;&lt;&lt; mapMaybe Int.fromString\n\nmain
        :: Effect Unit\nmain = launchAff_ do\n  lines &lt;- File.readLines \"./data/day01.txt\"\n\n  Console.logShow
        $ part1 lines\n  Console.logShow $ part2 lines\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I&amp;#39;m attempting this year using PureScript.&lt;/p&gt;\n\n&lt;p&gt;```\nmodule
        Aoc.Day01 where&lt;/p&gt;\n\n&lt;p&gt;import Prelude&lt;/p&gt;\n\n&lt;p&gt;import
        Aoc.Util.File as File\nimport Data.Array (mapMaybe)\nimport Data.Foldable
        (sum)\nimport Data.Int as Int\nimport Effect (Effect)\nimport Effect.Aff (launchAff_)\nimport
        Effect.Class.Console as Console&lt;/p&gt;\n\n&lt;p&gt;metafuel :: Int -&amp;gt;
        Int\nmetafuel mass =\n  case fuel mass of\n    f | f &amp;lt; 0 -&amp;gt;
        0\n    f -&amp;gt; f + metafuel f&lt;/p&gt;\n\n&lt;p&gt;fuel :: Int -&amp;gt;
        Int\nfuel mass = mass &lt;code&gt;div&lt;/code&gt; 3 - 2&lt;/p&gt;\n\n&lt;p&gt;part1
        :: Array String -&amp;gt; Int\npart1 = sum &amp;lt;&amp;lt;&amp;lt; map fuel
        &amp;lt;&amp;lt;&amp;lt; mapMaybe Int.fromString&lt;/p&gt;\n\n&lt;p&gt;part2
        :: Array String -&amp;gt; Int\npart2 = sum &amp;lt;&amp;lt;&amp;lt; map metafuel
        &amp;lt;&amp;lt;&amp;lt; mapMaybe Int.fromString&lt;/p&gt;\n\n&lt;p&gt;main
        :: Effect Unit\nmain = launchAff_ do\n  lines &amp;lt;- File.readLines &amp;quot;./data/day01.txt&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Console.logShow
        $ part1 lines\n  Console.logShow $ part2 lines\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bojzt/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bojzt", "created":
        1575214712.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9bqe57",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "corp_code_slinger",
        "can_mod_post": false, "created_utc": 1575215281.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 0, "author_fullname": "t2_13970i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 1, Swift(5):\n\n```\nfunc calculateFuel(masses: Array&lt;Double&gt;,
        accountForFuel: Bool = false) -&gt; Int {\n    let massFuels = masses.map
        { calculateFuel(mass: $0, accountForFuel: accountForFuel)}\n    \n    return
        Int((massFuels.reduce ( 0, +)))\n}\n\nfunc calculateFuel(mass: Double, accountForFuel:
        Bool = false) -&gt; Double {\n    let fuel = (mass / 3).rounded(.down) - 2\n    \n    if
        (fuel &lt;= 0) {\n        return 0\n    }\n    \n    if (accountForFuel) {\n        return
        fuel + calculateFuel(mass: fuel, accountForFuel: true)\n    }\n    \n    return
        fuel\n}\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day
        1, Swift(5):&lt;/p&gt;\n\n&lt;p&gt;```\nfunc calculateFuel(masses: Array&amp;lt;Double&amp;gt;,
        accountForFuel: Bool = false) -&amp;gt; Int {\n    let massFuels = masses.map
        { calculateFuel(mass: $0, accountForFuel: accountForFuel)}&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return
        Int((massFuels.reduce ( 0, +)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;func
        calculateFuel(mass: Double, accountForFuel: Bool = false) -&amp;gt; Double
        {\n    let fuel = (mass / 3).rounded(.down) - 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if
        (fuel &amp;lt;= 0) {\n    return 0\n}\n\nif (accountForFuel) {\n    return
        fuel + calculateFuel(mass: fuel, accountForFuel: true)\n}\n\nreturn fuel\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9bqe57/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9bqe57", "created":
        1575215281.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9brdtx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "xSaKage",
        "can_mod_post": false, "created_utc": 1575215523.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": 0, "author_fullname": "t2_250117zc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust\n\nPuzzle #1\n```\nuse std::io::{self, BufRead};\n\nfn main() {\n    let
        stdin = io::stdin();\n    println!(\n        \"{}\",\n        stdin\n            .lock()\n            .lines()\n            .map(|s|
        s.unwrap().parse::&lt;usize&gt;().unwrap() / 3 - 2)\n            .sum::&lt;usize&gt;()\n    );\n}\n```\n\nPuzzle
        #2\n```\nuse std::io::{self, BufRead};\n\nfn calc_fuel(mut mass: usize) -&gt;
        usize {\n    let mut fuel = 0;\n    while let Some(m) = (mass / 3).checked_sub(2)
        {\n        fuel += m;\n        mass = m;\n    }\n    fuel\n}\n\nfn main()
        {\n    let stdin = io::stdin();\n    let fuel = stdin\n        .lock()\n        .lines()\n        .map(|s|
        calc_fuel(s.unwrap().parse().unwrap()))\n        .sum::&lt;usize&gt;();\n\n    println!(\"{}\",
        fuel);\n}\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;p&gt;Puzzle
        #1\n```\nuse std::io::{self, BufRead};&lt;/p&gt;\n\n&lt;p&gt;fn main() {\n    let
        stdin = io::stdin();\n    println!(\n        &amp;quot;{}&amp;quot;,\n        stdin\n            .lock()\n            .lines()\n            .map(|s|
        s.unwrap().parse::&amp;lt;usize&amp;gt;().unwrap() / 3 - 2)\n            .sum::&amp;lt;usize&amp;gt;()\n    );\n}\n```&lt;/p&gt;\n\n&lt;p&gt;Puzzle
        #2\n```\nuse std::io::{self, BufRead};&lt;/p&gt;\n\n&lt;p&gt;fn calc_fuel(mut
        mass: usize) -&amp;gt; usize {\n    let mut fuel = 0;\n    while let Some(m)
        = (mass / 3).checked_sub(2) {\n        fuel += m;\n        mass = m;\n    }\n    fuel\n}&lt;/p&gt;\n\n&lt;p&gt;fn
        main() {\n    let stdin = io::stdin();\n    let fuel = stdin\n        .lock()\n        .lines()\n        .map(|s|
        calc_fuel(s.unwrap().parse().unwrap()))\n        .sum::&amp;lt;usize&amp;gt;();&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;println!(&amp;quot;{}&amp;quot;,
        fuel);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9brdtx/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9brdtx", "created":
        1575215523.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": -2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9b9r1k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ShinobuLove",
        "can_mod_post": false, "created_utc": 1575210561.0, "send_replies": true,
        "parent_id": "t3_e4axxe", "score": -2, "author_fullname": "t2_rewha", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Where are my Ruby-bros at?\n\n```\ninput = File.open(\"input.txt\").map(&amp;:to_i)\n#
        input = File.open(\"bigboyinput\").map(&amp;:to_i)\n\ndef calculate_fuel value\n  value
        / 3 - 2\nend\n\ndef recursive_fuel fuel, sum=0\n  return sum if fuel &lt;=
        0\n  recursive_fuel(calculate_fuel(fuel), sum + fuel)\nend\n\n# Part 1\n#
        Answer 3365459\nlist = input.map do |mass|\n  calculate_fuel mass\nend\nputs
        \"Part 1: #{ list.sum }\"\n\n# Part 2\n# Answer 5045301\nfinal_fuel_sum =
        list.sum do |fuel|\n  recursive_fuel fuel\nend\n\nputs \"Part 2: #{ final_fuel_sum
        }\"\n\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Where
        are my Ruby-bros at?&lt;/p&gt;\n\n&lt;p&gt;```\ninput = File.open(&amp;quot;input.txt&amp;quot;).map(&amp;amp;:to_i)&lt;/p&gt;\n\n&lt;h1&gt;input
        = File.open(&amp;quot;bigboyinput&amp;quot;).map(&amp;amp;:to_i)&lt;/h1&gt;\n\n&lt;p&gt;def
        calculate_fuel value\n  value / 3 - 2\nend&lt;/p&gt;\n\n&lt;p&gt;def recursive_fuel
        fuel, sum=0\n  return sum if fuel &amp;lt;= 0\n  recursive_fuel(calculate_fuel(fuel),
        sum + fuel)\nend&lt;/p&gt;\n\n&lt;h1&gt;Part 1&lt;/h1&gt;\n\n&lt;h1&gt;Answer
        3365459&lt;/h1&gt;\n\n&lt;p&gt;list = input.map do |mass|\n  calculate_fuel
        mass\nend\nputs &amp;quot;Part 1: #{ list.sum }&amp;quot;&lt;/p&gt;\n\n&lt;h1&gt;Part
        2&lt;/h1&gt;\n\n&lt;h1&gt;Answer 5045301&lt;/h1&gt;\n\n&lt;p&gt;final_fuel_sum
        = list.sum do |fuel|\n  recursive_fuel fuel\nend&lt;/p&gt;\n\n&lt;p&gt;puts
        &amp;quot;Part 2: #{ final_fuel_sum }&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9b9r1k/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9b9r1k", "created":
        1575210561.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_f9dnnwd"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 23:06:46 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:46 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=Zk0dW21sUKLM7gSIah; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 23:06:46 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_e4axxe&children=f98f6fz
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1606'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksigegtau.2.1741475206557.Z0FBQUFBQm56TTJHNHhmTGNSbHFlNkgzS3FpejVhUVFJMXRlMVZlZUR3N09Cdlp5dmNHYmVzZmZJSjRtTzFuY095T0EwV1B2T3RzeXJhRThMWU5iemRld2xZZERVYmhRUU1UQXhmTFp3bW1sR01PZ216bWhZVlhIbGZwRXpfWVNNU20xME5vdXNDM1k;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 23:06:46
        GMT; secure, session_tracker=oclbfoarqojionqeak.0.1741475206569.Z0FBQUFBQm56TTJHLW42QkdOd1BEU015VTZrMXNCa25ERzZKN09KSVpEVW9MeXJxQW50QVVBcGxfaWJPZUx1OFRWcDJzLVc0NzNkalNuQXlrSElIUjd3eGNwOGNJemgwY3ltWmRlRGlqdmNGNlVCOUhXY3BvelVXQ3FjUU05dDR5TWkzazJnNmE2cnQ;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 01:06:46
        GMT; secure, edgebucket=D6ACoc6xMg6YXFWMhk; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '34'
      x-ratelimit-remaining:
      - '66.0'
      x-ratelimit-reset:
      - '193'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:46 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98f6fz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Unihedron",
        "can_mod_post": false, "created_utc": 1575177568.0, "send_replies": true,
        "parent_id": "t1_f98e7ds", "score": 3, "author_fullname": "t2_h0e6x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Very compact I approve\n\nIf you''re golfing, I''m p. sure I can beat you
        with `-p`", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very
        compact I approve&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re golfing, I&amp;#39;m
        p. sure I can beat you with &lt;code&gt;-p&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98f6fz/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98f6fz", "created":
        1575177568.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f98gvi5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BluFoot",
        "can_mod_post": false, "created_utc": 1575178149.0, "send_replies": true,
        "parent_id": "t1_f98f6fz", "score": 2, "author_fullname": "t2_5edap", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''ve never used `-p` before, can you show me an example? I can''t figure
        it out..", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve
        never used &lt;code&gt;-p&lt;/code&gt; before, can you show me an example?
        I can&amp;#39;t figure it out..&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98gvi5/", "subreddit_type":
        "public", "locked": false, "name": "t1_f98gvi5", "created": 1575178149.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_e4axxe", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 2, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "f98ke18", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Unihedron", "can_mod_post": false, "created_utc":
        1575179377.0, "send_replies": true, "parent_id": "t1_f98gvi5", "score": 2,
        "author_fullname": "t2_h0e6x", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "[-p demo](https://tio.run/##KypNqvz/XyXeViVeryi1LLWoOPX//4zUnJx8rvL8opwUrsSkZBBO4fqXX1CSmZ9X/F@3AAA
        \"Ruby \u2013 Try It Online\")\n\n`ruby -p input`\n\n    $_=$_.reverse\n\nOn
        second thoughts, I take that back, ultimately you have to print a sum which
        is not per-line, so it probably doesn''t save much", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://tio.run/##KypNqvz/XyXeViVeryi1LLWoOPX//4zUnJx8rvL8opwUrsSkZBBO4fqXX1CSmZ9X/F@3AAA\"
        title=\"Ruby \u2013 Try It Online\"&gt;-p demo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ruby
        -p input&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$_=$_.reverse\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;On
        second thoughts, I take that back, ultimately you have to print a sum which
        is not per-line, so it probably doesn&amp;#39;t save much&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f98ke18/",
        "subreddit_type": "public", "locked": false, "name": "t1_f98ke18", "created":
        1575179377.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_f98f6fz"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 23:06:46 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:46 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=5kPFzw2WjXe4S17qaD; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 23:06:46 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_e4axxe&children=f9dpylu
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1090'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksigeju32.2.1741475206951.Z0FBQUFBQm56TTJIeFJRU09BR2JNeWwzMHdWRVgwV3QtdzE1SUVnQXE2anFUME14SXBrWENveW44aDVIQkhwd1B6MEJaMEt5ZWF4UldkcGwtcUk1a3NXSm1TQ3NlWXAzUUFmbWE4ZjZva3pVLWZ3MVNRMVhuOGJaNFNTdnpjMHZ0QVdGSlFORENQaTA;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 23:06:47
        GMT; secure, session_tracker=erhgmhjapkpidijnhh.0.1741475206963.Z0FBQUFBQm56TTJIam5EQ0kwR1ZmREZ4TzJHVkdobnJxR1JrZ0d6eXZ0dDFyZ3FfOUlFbXlnZHJxMmhHbjgtZGJNbzNnSFp0M3pXRFVpZlI2X0pFSlFJU2w1bU54Y3E0amNib25JVDdaaklPUWZleFZxNVNDUGY5OEwxX3JQdGhhRkptS0NBSTFPQzk;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 01:06:47
        GMT; secure, edgebucket=GKWousIvGih1kykCt5; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '35'
      x-ratelimit-remaining:
      - '65.0'
      x-ratelimit-reset:
      - '193'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 23:06:47 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "f9dpylu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1575235812.0, "send_replies": true,
        "parent_id": "t1_f9dns88", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; taking Fuel as one syllable\n\nI''ll allow it.  &gt;_&gt;\n\nNeat poem,
        and thanks for posting your code!", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;taking
        Fuel as one syllable&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;ll
        allow it.  &amp;gt;_&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;Neat poem, and thanks for
        posting your code!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/e4axxe/2019_day_1_solutions/f9dpylu/",
        "subreddit_type": "public", "locked": false, "name": "t1_f9dpylu", "created":
        1575235812.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_e4axxe", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}}],
        true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_f9dpylu"]], [13,
        14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16,
        17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 23:06:47 GMT
recorded_with: VCR 6.3.1
