---
http_interactions:
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sun, 09 Mar 2025 05:15:30 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=yG95CGRoD2Uqn7fDmq; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sun, 09 Mar 2025 05:15:30 GMT
- request:
    method: get
    uri: https://oauth.reddit.com/r/adventofcode/comments/5fur6q/2016_day_1_solutions.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '85675'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      access-control-allow-origin:
      - "*"
      access-control-expose-headers:
      - X-Moose
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '34'
      x-ratelimit-remaining:
      - '66.0'
      x-ratelimit-reset:
      - '269'
      accept-ranges:
      - bytes
      date:
      - Sun, 09 Mar 2025 05:15:31 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - loid=000000001kt57el9ei.2.1741497330481.Z0FBQUFBQm56U1B6bUQ5SG9YNWxsdUZvZENtLWwwTXBTbnRyUXZJdDZfU2pnYlpDTEhsc1RGS3FQTFV5R0ZLWm5Fb3Q5Q1U2ZlZiX2F4Zy1TeFgzZ1VHTVVnSzNTTzNUUTZHWk44SllHYVR3cjlpTkRTVl9LbVpBQngwQXBiWHV4eGRFYnVmeEtTVkI;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Tue, 09-Mar-2027 05:15:31
        GMT; secure; SameSite=None; Secure, session_tracker=kpobedfklbgfgjnglj.0.1741497330503.Z0FBQUFBQm56U1B6Z1h1WC10YzNmS1ZybzJ6dVFzZjhHSWcxb3VMMVJFZHo5T3ZGSkVuc01sRFRYeGhmNWg5dzVGdVJaM1J3di1RQ1hha3ViMWlaaGx4eWR1WkZld1ctcHZTWkt0R0NWemRXbTZpaXNJcEUySVd2cFdnUDhQZzJmTkMzYmwxNURQU20;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 07:15:31
        GMT; secure; SameSite=None; Secure, csv=2; Max-Age=63072000; Domain=.reddit.com;
        Path=/; Secure; SameSite=None, edgebucket=J4SxOSFegHN4XsuYke; Domain=reddit.com;
        Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '[{"kind": "Listing", "data": {"after": null, "dist": 1, "modhash":
        "", "geo_filter": "", "children": [{"kind": "t3", "data": {"approved_at_utc":
        null, "subreddit": "adventofcode", "selftext": "Welcome to Advent of Code
        2016!  If you participated last year, welcome back, and if you''re new this
        year, we hope you have fun and learn lots!\n\nWe''re going to follow the same
        general format as last year''s AoC megathreads:\n\n1. Each day''s puzzle will
        release at exactly midnight EST (UTC -5).\n1. The daily megathread for each
        day will be posted very soon afterwards and immediately locked.\n * We know
        we can''t control people posting solutions elsewhere and trying to exploit
        the leaderboard, but this way we can try to reduce the leaderboard gaming
        from the official subreddit.\n1. The daily megathread will remain locked until
        there are a significant number of people on the leaderboard with gold stars.\n
        * \"A significant number\" is whatever number we decide is appropriate, but
        the leaderboards usually fill up fast, so no worries.\n1. When the thread
        is unlocked, you may post your solution as a comment or, for longer solutions,
        consider linking to your repo (e.g. GitHub/gists/Pastebin/[blag](https://xkcd.com/148/)/whatever).\n\nAbove
        all, remember, AoC is all about having fun and learning more about the wonderful
        world of programming!\n\n^(MERRINESS IS MANDATORY, CITIZEN!) [\\[?\\]](/r/adventofcode/wiki/2016_is_mandatory
        \"Why is this mandatory?\")\n\n***\n\n#--- Day 1: No Time for a Taxicab ---\n\nPost
        your solution as a comment or, for longer solutions, consider linking to your
        repo (e.g. GitHub/gists/Pastebin/[blag](https://xkcd.com/148/)/whatever).\n\n***\n\n###~~This
        thread will be unlocked when there are a significant number of people on the
        leaderboard with gold stars for today''s puzzle.~~\n\n###*edit:* Leaderboard
        capped, thread unlocked!", "user_reports": [], "saved": false, "mod_reason_title":
        null, "gilded": 0, "clicked": false, "title": "--- 2016 Day 1 Solutions ---",
        "link_flair_richtext": [], "subreddit_name_prefixed": "r/adventofcode", "hidden":
        false, "pwls": 6, "link_flair_css_class": "flair-solutionmegathread", "downs":
        0, "top_awarded_type": null, "hide_score": false, "name": "t3_5fur6q", "quarantine":
        false, "link_flair_text_color": null, "upvote_ratio": 0.94, "author_flair_background_color":
        null, "subreddit_type": "public", "ups": 36, "total_awards_received": 0, "media_embed":
        {}, "author_flair_template_id": null, "is_original_content": false, "author_fullname":
        "t2_60niu", "secure_media": null, "is_reddit_media_domain": false, "is_meta":
        false, "category": null, "secure_media_embed": {}, "link_flair_text": "SOLUTION
        MEGATHREAD", "can_mod_post": false, "score": 36, "approved_by": null, "is_created_from_ads_ui":
        false, "author_premium": false, "thumbnail": "", "edited": 1480670780.0, "author_flair_css_class":
        null, "author_flair_richtext": [], "gildings": {}, "content_categories": null,
        "is_self": true, "mod_note": null, "created": 1480568529.0, "link_flair_type":
        "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type":
        "text", "domain": "self.adventofcode", "allow_live_comments": false, "selftext_html":
        "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Welcome to Advent of
        Code 2016!  If you participated last year, welcome back, and if you&amp;#39;re
        new this year, we hope you have fun and learn lots!&lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;re
        going to follow the same general format as last year&amp;#39;s AoC megathreads:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Each
        day&amp;#39;s puzzle will release at exactly midnight EST (UTC -5).&lt;/li&gt;\n&lt;li&gt;The
        daily megathread for each day will be posted very soon afterwards and immediately
        locked.\n\n&lt;ul&gt;\n&lt;li&gt;We know we can&amp;#39;t control people posting
        solutions elsewhere and trying to exploit the leaderboard, but this way we
        can try to reduce the leaderboard gaming from the official subreddit.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;The
        daily megathread will remain locked until there are a significant number of
        people on the leaderboard with gold stars.\n\n&lt;ul&gt;\n&lt;li&gt;&amp;quot;A
        significant number&amp;quot; is whatever number we decide is appropriate,
        but the leaderboards usually fill up fast, so no worries.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;When
        the thread is unlocked, you may post your solution as a comment or, for longer
        solutions, consider linking to your repo (e.g. GitHub/gists/Pastebin/&lt;a
        href=\"https://xkcd.com/148/\"&gt;blag&lt;/a&gt;/whatever).&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Above
        all, remember, AoC is all about having fun and learning more about the wonderful
        world of programming!&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;MERRINESS IS MANDATORY,
        CITIZEN!&lt;/sup&gt; &lt;a href=\"/r/adventofcode/wiki/2016_is_mandatory\"
        title=\"Why is this mandatory?\"&gt;[?]&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h1&gt;---
        Day 1: No Time for a Taxicab ---&lt;/h1&gt;\n\n&lt;p&gt;Post your solution
        as a comment or, for longer solutions, consider linking to your repo (e.g.
        GitHub/gists/Pastebin/&lt;a href=\"https://xkcd.com/148/\"&gt;blag&lt;/a&gt;/whatever).&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h3&gt;&lt;del&gt;This
        thread will be unlocked when there are a significant number of people on the
        leaderboard with gold stars for today&amp;#39;s puzzle.&lt;/del&gt;&lt;/h3&gt;\n\n&lt;h3&gt;&lt;em&gt;edit:&lt;/em&gt;
        Leaderboard capped, thread unlocked!&lt;/h3&gt;\n&lt;/div&gt;&lt;!-- SC_ON
        --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count":
        null, "archived": true, "no_follow": false, "is_crosspostable": false, "pinned":
        false, "over_18": false, "all_awardings": [], "awarders": [], "media_only":
        false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text":
        null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports":
        null, "distinguished": "moderator", "subreddit_id": "t5_3b3wa", "author_is_blocked":
        false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color":
        null, "id": "5fur6q", "is_robot_indexable": true, "num_duplicates": 0, "report_reasons":
        null, "author": "daggerdragon", "discussion_type": null, "num_comments": 226,
        "send_replies": false, "media": null, "contest_mode": false, "author_patreon_flair":
        false, "author_flair_text_color": null, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/",
        "stickied": false, "url": "https://www.reddit.com/r/adventofcode/comments/5fur6q/2016_day_1_solutions/",
        "subreddit_subscribers": 131310, "created_utc": 1480568529.0, "num_crossposts":
        0, "mod_reports": [], "is_video": false}}], "before": null}}, {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "more",
        "data": {"count": 1, "name": "t1_danbbfx", "id": "danbbfx", "parent_id": "t1_danai3a",
        "depth": 2, "children": ["danbbfx"]}}], "before": null}}, "user_reports":
        [], "saved": false, "id": "danai3a", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        false, "author": "topaz2078", "can_mod_post": false, "created_utc": 1480573935.0,
        "send_replies": true, "parent_id": "t1_dana8jn", "score": 10, "author_fullname":
        "t2_3ga32", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "this is TERRIFIC", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": "flair-aoccreator", "name": "t1_danai3a",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;this is TERRIFIC&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": "dark",
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danai3a/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573935.0, "author_flair_text": "(AoC creator)", "treatment_tags": [],
        "collapsed": false, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 10}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "more", "data": {"count": 1, "name": "t1_danc2dk",
        "id": "danc2dk", "parent_id": "t1_danb82c", "depth": 2, "children": ["danc2dk"]}}],
        "before": null}}, "user_reports": [], "saved": false, "id": "danb82c", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "sowpods", "can_mod_post": false, "created_utc":
        1480575531.0, "send_replies": true, "parent_id": "t1_dana8jn", "score": 2,
        "author_fullname": "t2_6gb6e", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "My slightly messier postgresql\n\n\n    select
        abs(y_pos)+abs(x_pos)\n    from(\n    select sum(dist::int*y_change) over(order
        by row_number) as x_pos\n    \t,sum(dist::int*x_change) over(order by row_number)
        as y_pos\n    \t,*\n    from(\n    select *\n    \t,case when dir = 0 then
        1 when dir = 2 then -1 else 0 end as y_change\n    \t,case when dir = 1 then
        1 when dir = 3 then -1 else 0 end as x_change\n    from (\n    select abs(sum(dir_mod)
        over(order by row_number)) %4 as dir\n    \t,*\n    from(\n    select *, case
        when substr(ins, 1, 1) = ''R'' then 1 else -1 end as dir_mod\n    \t, substr(ins,
        2, 999) as dist\n    \t\n    from( \n    \n    select  trim(regexp_split_to_table(''R4,
        R4, L1, R3, L5, R2, R5, R1, L4, R3, L5, R2, L3, L4, L3, R1, R5, R1, L3, L1,
        R3, L1, R2, R2, L2, R5, L3, L4, R4, R4, R2, L4, L1, R5, L1, L4, R4, L1, R1,
        L2, R5, L2, L3, R2, R1, L194, R2, L4, R49, R1, R3, L5, L4, L1, R4, R2, R1,
        L5, R3, L5, L4, R4, R4, L2, L3, R78, L5, R4, R191, R4, R3, R1, L2, R1, R3,
        L1, R3, R4, R2, L2, R1, R4, L5, R2, L2, L4, L2, R1, R2, L3, R5, R2, L3, L3,
        R3, L1, L1, R5, L4, L4, L2, R5, R1, R4, L3, L5, L4, R5, L4, R5, R4, L3, L2,
        L5, R4, R3, L3, R1, L5, R5, R1, L3, R2, L5, R5, L3, R1, R4, L5, R4, R2, R3,
        L4, L5, R3, R4, L5, L5, R4, L4, L4, R1, R5, R3, L1, L4, L3, L4, R1, L5, L1,
        R2, R2, R4, R4, L5, R4, R1, L1, L1, L3, L5, L2, R4, L3, L5, L4, L1, R3'',
        E'',''))as ins\n    -- \ttrim(regexp_split_to_table(''R5, L5, R5, R3'', E'',''))as
        ins\n    \t,generate_series(1,169) as  row_number\n    )a\n    )b\n    )c\n    )d\n    )e\n    order
        by row_number desc limit 1;\n    \n    \n    \n    \n    \n    \n    \n    drop
        sequence if exists temp_seq;\n     create temp sequence temp_seq;\n    with
        puzzle_input as (select trim(regexp_split_to_table(''R4, R4, L1, R3, L5, R2,
        R5, R1, L4, R3, L5, R2, L3, L4, L3, R1, R5, R1, L3, L1, R3, L1, R2, R2, L2,
        R5, L3, L4, R4, R4, R2, L4, L1, R5, L1, L4, R4, L1, R1, L2, R5, L2, L3, R2,
        R1, L194, R2, L4, R49, R1, R3, L5, L4, L1, R4, R2, R1, L5, R3, L5, L4, R4,
        R4, L2, L3, R78, L5, R4, R191, R4, R3, R1, L2, R1, R3, L1, R3, R4, R2, L2,
        R1, R4, L5, R2, L2, L4, L2, R1, R2, L3, R5, R2, L3, L3, R3, L1, L1, R5, L4,
        L4, L2, R5, R1, R4, L3, L5, L4, R5, L4, R5, R4, L3, L2, L5, R4, R3, L3, R1,
        L5, R5, R1, L3, R2, L5, R5, L3, R1, R4, L5, R4, R2, R3, L4, L5, R3, R4, L5,
        L5, R4, L4, L4, R1, R5, R3, L1, L4, L3, L4, R1, L5, L1, R2, R2, R4, R4, L5,
        R4, R1, L1, L1, L3, L5, L2, R4, L3, L5, L4, L1, R3'', E'',''))as ins)\n    \t,stats
        as (select count(*) as instructions\n    \t\t,max(substr(ins, 2, length(ins))::int)
        as max_walk\n    \t\tfrom puzzle_input)\n    \n    select abs(y_pos)+abs(x_pos)\n    from(\n    select
        y_pos\n    \t, x_pos\n    \t, array_agg(steps) as hit_at\n    \t,count(*)\n    from
        (\n    select * \n    \t,sum(y_change) over (order by row_number, generate_series)
        as y_pos\n    \t,sum(x_change) over (order by row_number, generate_series)
        as x_pos\n    \t,sum(1) over (order by row_number, generate_series) as steps\n    from
        (select *\n    \n    \t,case when dir = 0 then 1 when dir = 2 then -1 else
        0 end as y_change\n    \t,case when dir = 1 then 1 when dir = 3 then -1 else
        0 end as x_change\n    \n    from (\n    select abs(sum(dir_mod) over(order
        by row_number)) %4 as dir\n    \t,*\n    from(\n    select *, case when substr(ins,
        1, 1) = ''R'' then 1 else -1 end as dir_mod\n    \t, substr(ins, 2,  length(ins))
        as dist\n    \t\n    from( \n    \n    select  *\n    \t,nextval(''temp_seq'')as  row_number\n    \tfrom
        puzzle_input\n    )a\n    )b\n    )c)d\n    left join  generate_series(1,(select
        max_walk from stats)) on generate_series &lt;= dist::int\n    order by row_number\n    )e\n    group
        by 1, 2\n    having count(*) &gt; 1\n    )f order by hit_at[2]\n    limit
        1\n\n", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danb82c", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        slightly messier postgresql&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;select abs(y_pos)+abs(x_pos)\nfrom(\nselect
        sum(dist::int*y_change) over(order by row_number) as x_pos\n    ,sum(dist::int*x_change)
        over(order by row_number) as y_pos\n    ,*\nfrom(\nselect *\n    ,case when
        dir = 0 then 1 when dir = 2 then -1 else 0 end as y_change\n    ,case when
        dir = 1 then 1 when dir = 3 then -1 else 0 end as x_change\nfrom (\nselect
        abs(sum(dir_mod) over(order by row_number)) %4 as dir\n    ,*\nfrom(\nselect
        *, case when substr(ins, 1, 1) = &amp;#39;R&amp;#39; then 1 else -1 end as
        dir_mod\n    , substr(ins, 2, 999) as dist\n\nfrom( \n\nselect  trim(regexp_split_to_table(&amp;#39;R4,
        R4, L1, R3, L5, R2, R5, R1, L4, R3, L5, R2, L3, L4, L3, R1, R5, R1, L3, L1,
        R3, L1, R2, R2, L2, R5, L3, L4, R4, R4, R2, L4, L1, R5, L1, L4, R4, L1, R1,
        L2, R5, L2, L3, R2, R1, L194, R2, L4, R49, R1, R3, L5, L4, L1, R4, R2, R1,
        L5, R3, L5, L4, R4, R4, L2, L3, R78, L5, R4, R191, R4, R3, R1, L2, R1, R3,
        L1, R3, R4, R2, L2, R1, R4, L5, R2, L2, L4, L2, R1, R2, L3, R5, R2, L3, L3,
        R3, L1, L1, R5, L4, L4, L2, R5, R1, R4, L3, L5, L4, R5, L4, R5, R4, L3, L2,
        L5, R4, R3, L3, R1, L5, R5, R1, L3, R2, L5, R5, L3, R1, R4, L5, R4, R2, R3,
        L4, L5, R3, R4, L5, L5, R4, L4, L4, R1, R5, R3, L1, L4, L3, L4, R1, L5, L1,
        R2, R2, R4, R4, L5, R4, R1, L1, L1, L3, L5, L2, R4, L3, L5, L4, L1, R3&amp;#39;,
        E&amp;#39;,&amp;#39;))as ins\n--  trim(regexp_split_to_table(&amp;#39;R5,
        L5, R5, R3&amp;#39;, E&amp;#39;,&amp;#39;))as ins\n    ,generate_series(1,169)
        as  row_number\n)a\n)b\n)c\n)d\n)e\norder by row_number desc limit 1;\n\n\n\n\n\n\n\ndrop
        sequence if exists temp_seq;\n create temp sequence temp_seq;\nwith puzzle_input
        as (select trim(regexp_split_to_table(&amp;#39;R4, R4, L1, R3, L5, R2, R5,
        R1, L4, R3, L5, R2, L3, L4, L3, R1, R5, R1, L3, L1, R3, L1, R2, R2, L2, R5,
        L3, L4, R4, R4, R2, L4, L1, R5, L1, L4, R4, L1, R1, L2, R5, L2, L3, R2, R1,
        L194, R2, L4, R49, R1, R3, L5, L4, L1, R4, R2, R1, L5, R3, L5, L4, R4, R4,
        L2, L3, R78, L5, R4, R191, R4, R3, R1, L2, R1, R3, L1, R3, R4, R2, L2, R1,
        R4, L5, R2, L2, L4, L2, R1, R2, L3, R5, R2, L3, L3, R3, L1, L1, R5, L4, L4,
        L2, R5, R1, R4, L3, L5, L4, R5, L4, R5, R4, L3, L2, L5, R4, R3, L3, R1, L5,
        R5, R1, L3, R2, L5, R5, L3, R1, R4, L5, R4, R2, R3, L4, L5, R3, R4, L5, L5,
        R4, L4, L4, R1, R5, R3, L1, L4, L3, L4, R1, L5, L1, R2, R2, R4, R4, L5, R4,
        R1, L1, L1, L3, L5, L2, R4, L3, L5, L4, L1, R3&amp;#39;, E&amp;#39;,&amp;#39;))as
        ins)\n    ,stats as (select count(*) as instructions\n        ,max(substr(ins,
        2, length(ins))::int) as max_walk\n        from puzzle_input)\n\nselect abs(y_pos)+abs(x_pos)\nfrom(\nselect
        y_pos\n    , x_pos\n    , array_agg(steps) as hit_at\n    ,count(*)\nfrom
        (\nselect * \n    ,sum(y_change) over (order by row_number, generate_series)
        as y_pos\n    ,sum(x_change) over (order by row_number, generate_series) as
        x_pos\n    ,sum(1) over (order by row_number, generate_series) as steps\nfrom
        (select *\n\n    ,case when dir = 0 then 1 when dir = 2 then -1 else 0 end
        as y_change\n    ,case when dir = 1 then 1 when dir = 3 then -1 else 0 end
        as x_change\n\nfrom (\nselect abs(sum(dir_mod) over(order by row_number))
        %4 as dir\n    ,*\nfrom(\nselect *, case when substr(ins, 1, 1) = &amp;#39;R&amp;#39;
        then 1 else -1 end as dir_mod\n    , substr(ins, 2,  length(ins)) as dist\n\nfrom(
        \n\nselect  *\n    ,nextval(&amp;#39;temp_seq&amp;#39;)as  row_number\n    from
        puzzle_input\n)a\n)b\n)c)d\nleft join  generate_series(1,(select max_walk
        from stats)) on generate_series &amp;lt;= dist::int\norder by row_number\n)e\ngroup
        by 1, 2\nhaving count(*) &amp;gt; 1\n)f order by hit_at[2]\nlimit 1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danb82c/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480575531.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dana8jn", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "jwstone", "can_mod_post": false, "created_utc":
        1480573384.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 21,
        "author_fullname": "t2_b7u2g", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Ho ho ho postgresql\n\nhttps://github.com/piratejon/toyproblems/blob/master/adventofcode/2016/01/01.sql",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dana8jn", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ho
        ho ho postgresql&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/piratejon/toyproblems/blob/master/adventofcode/2016/01/01.sql\"&gt;https://github.com/piratejon/toyproblems/blob/master/adventofcode/2016/01/01.sql&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dana8jn/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573384.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 21}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danbwdt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "topaz2078",
        "can_mod_post": false, "created_utc": 1480577157.0, "send_replies": true,
        "parent_id": "t1_danbkqp", "score": 9, "author_fullname": "t2_3ga32", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "SKALSKI NO", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        "flair-aoccreator", "name": "t1_danbwdt", "is_submitter": false, "downs":
        0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;SKALSKI NO&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": "dark",
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danbwdt/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480577157.0, "author_flair_text": "(AoC creator)", "treatment_tags": [],
        "collapsed": false, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 9}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danbwxz", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "Aneurysm9", "can_mod_post": false, "created_utc":
        1480577198.0, "send_replies": true, "parent_id": "t1_danbkqp", "score": 3,
        "author_fullname": "t2_4b465", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Skalski, no!", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danbwxz",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Skalski, no!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danbwxz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480577198.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dancf0d", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "segfaultvicta", "can_mod_post": false,
        "created_utc": 1480578494.0, "send_replies": true, "parent_id": "t1_danbkqp",
        "score": 3, "author_fullname": "t2_52257", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Skalski, /yes/!", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_dancf0d",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Skalski, /yes/!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dancf0d/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480578494.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danbkqp", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "askalski", "can_mod_post": false, "created_utc":
        1480576367.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 16,
        "author_fullname": "t2_so7w7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "This is not exactly my solution for Day 1,
        but here is a Shenzhen I/O level I made (and solved, but I won''t spoil you
        with that part) based on the events depicted in today''s Advent of Code.  Names
        changed to protect the innocent, and all that.\n\nhttps://gist.github.com/Voltara/1eff3013229333e3d24431f48d740b65\n\n(I
        would have uploaded it to the Steam Workshop, but that feature is too crashy
        on my Linux machine.)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danbkqp", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        is not exactly my solution for Day 1, but here is a Shenzhen I/O level I made
        (and solved, but I won&amp;#39;t spoil you with that part) based on the events
        depicted in today&amp;#39;s Advent of Code.  Names changed to protect the
        innocent, and all that.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/Voltara/1eff3013229333e3d24431f48d740b65\"&gt;https://gist.github.com/Voltara/1eff3013229333e3d24431f48d740b65&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(I
        would have uploaded it to the Steam Workshop, but that feature is too crashy
        on my Linux machine.)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danbkqp/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480576367.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 16}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 11, "removal_reason": null, "link_id": "t3_5fur6q",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "daoj7cx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TheRealEdwardAbbey",
        "can_mod_post": false, "created_utc": 1480645853.0, "send_replies": true,
        "parent_id": "t1_dangjvv", "score": 1, "author_fullname": "t2_o2s79", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "That''s pretty nifty, I''ll have to remember that one.", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_daoj7cx",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s pretty
        nifty, I&amp;#39;ll have to remember that one.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daoj7cx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480645853.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 2, "removal_reason": null, "link_id": "t3_5fur6q",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "more", "data": {"count": 4, "name": "t1_dapz7a4", "id": "dapz7a4",
        "parent_id": "t1_dapxcfv", "depth": 3, "children": ["dapz7a4"]}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "dapxcfv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "created_utc":
        1480724710.0, "send_replies": true, "parent_id": "t1_dappbpb", "score": 2,
        "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "You''ll need a basic understanding of [complex numbers](https://betterexplained.com/articles/a-visual-intuitive-guide-to-imaginary-numbers/)
        first.\n\n''j'' in Python means the same as ''i'' in maths -- an imaginary
        unit, a square root of -1, if you will. Using that, I can define a complex
        number (in python i use [cmath](https://docs.python.org/3.6/library/cmath.html)
        module from standard library). \n\n\nIn this code I''m using the property
        of rotation -- numbers j, -1, -j, 1 are commonly associated with Up, Left,
        Down, Right directions; multiplying by j rotates the direction by 90 degrees
        counter-clockwise. and multypliing by -j rotates it by 90 degrees clockwise.\n",
        "edited": false, "author_flair_css_class": null, "downs": 0, "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You&amp;#39;ll need
        a basic understanding of &lt;a href=\"https://betterexplained.com/articles/a-visual-intuitive-guide-to-imaginary-numbers/\"&gt;complex
        numbers&lt;/a&gt; first.&lt;/p&gt;\n\n&lt;p&gt;&amp;#39;j&amp;#39; in Python
        means the same as &amp;#39;i&amp;#39; in maths -- an imaginary unit, a square
        root of -1, if you will. Using that, I can define a complex number (in python
        i use &lt;a href=\"https://docs.python.org/3.6/library/cmath.html\"&gt;cmath&lt;/a&gt;
        module from standard library). &lt;/p&gt;\n\n&lt;p&gt;In this code I&amp;#39;m
        using the property of rotation -- numbers j, -1, -j, 1 are commonly associated
        with Up, Left, Down, Right directions; multiplying by j rotates the direction
        by 90 degrees counter-clockwise. and multypliing by -j rotates it by 90 degrees
        clockwise.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "subreddit_type": "public", "can_gild":
        false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dapxcfv/",
        "num_reports": null, "locked": false, "name": "t1_dapxcfv", "created": 1480724710.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "collapsed": false, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "dappbpb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jimanri", "can_mod_post": false, "created_utc":
        1480713626.0, "send_replies": true, "parent_id": "t1_dangjvv", "score": 1,
        "author_fullname": "t2_e6n3s", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Newbie here, why do you have
        a ''j'' after the number? Could you please explain what the code is doing?
        thanks pal!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dappbpb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Newbie
        here, why do you have a &amp;#39;j&amp;#39; after the number? Could you please
        explain what the code is doing? thanks pal!&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dappbpb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480713626.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dangjvv", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": false, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_5fur6q", "score": 11, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": true, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dangjvv/",
        "num_reports": null, "locked": false, "name": "t1_dangjvv", "created": 1480591462.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480591462.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao4k0l", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Tarmen", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_danbhgp", "score": 2, "author_fullname": "t2_7mjdo",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Guess I will finally bite the bullet and
        learn J, started with project euler yesterday and I figure it will come in
        handy.\n\nFirst impression is that the syntax is slightly weird. Partial application
        and function composition seem really verbose when compared to everything else.
        And just putting functions next to each other does the same thing as the  function
        applicative in haskell? I guess that is occasionally useful but it doesn''t
        seem more important than composition?\n\nLots of syntax to remember but I
        can see the appeal.", "edited": 1480628761.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dao4k0l", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Guess
        I will finally bite the bullet and learn J, started with project euler yesterday
        and I figure it will come in handy.&lt;/p&gt;\n\n&lt;p&gt;First impression
        is that the syntax is slightly weird. Partial application and function composition
        seem really verbose when compared to everything else. And just putting functions
        next to each other does the same thing as the  function applicative in haskell?
        I guess that is occasionally useful but it doesn&amp;#39;t seem more important
        than composition?&lt;/p&gt;\n\n&lt;p&gt;Lots of syntax to remember but I can
        see the appeal.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao4k0l/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480625341.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1480625341.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danbhgp", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dirkt", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_danaxi4", "score": 2, "author_fullname": "t2_3jk43",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Have a look at the [K language](https://en.wikipedia.org/wiki/K_%28programming_language%29).
        Another well-known member of [APL family](https://en.wikipedia.org/wiki/APL_%28programming_language%29)
        of languages is [J](https://en.wikipedia.org/wiki/J_%28programming_language%29).\n",
        "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_danbhgp", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Have
        a look at the &lt;a href=\"https://en.wikipedia.org/wiki/K_%28programming_language%29\"&gt;K
        language&lt;/a&gt;. Another well-known member of &lt;a href=\"https://en.wikipedia.org/wiki/APL_%28programming_language%29\"&gt;APL
        family&lt;/a&gt; of languages is &lt;a href=\"https://en.wikipedia.org/wiki/J_%28programming_language%29\"&gt;J&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danbhgp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480576143.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1480576143.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danaxi4", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "BafTac", "can_mod_post": false, "created_utc":
        1480574863.0, "send_replies": true, "parent_id": "t1_dan9bfq", "score": 6,
        "author_fullname": "t2_canjl", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "What kind of wizardry is this??",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danaxi4", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What
        kind of wizardry is this??&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danaxi4/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480574863.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 6}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danafz1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "John_Earnest",
        "can_mod_post": false, "created_utc": 1480573816.0, "send_replies": true,
        "parent_id": "t1_dan9bfq", "score": 3, "author_fullname": "t2_11tw1r", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "alright, screw sleeping- this is already much better:\n\n    l: 0: \"../../Desktop/Advent/01.in\"\n    i:
        {((\"LR\"!-1 1)@x 1;. 2_x)}''\",\"\\\" \",,/l\n    d: +/{%x*x}''\n    d@+/i[;1]*(0
        -1;1 0;0 1;-1 0)4!+\\i[;0]\n\nIn my first solution I tried to track a position
        and heading and evolve it along a series of directional tweaks and movements-
        that big nasty valence-4 function `s`. My new solution is more direct. Cracking
        apart the input is the same:\n\n     l: \"R5, L5, R5, R3\"\n     i: {((\"LR\"!-1
        1)@x 1;. 2_x)}''\",\"\\\" \",,/l\n    (1 5\n     -1 5\n     1 5\n     1 3)\n\nI
        get a list of directional offsets and movement magnitudes. A running sum of
        the first column modulo 4 gives me the actual heading for each step of the
        sequence:\n\n     i[;0]\n    1 -1 1 1\n     4!+\\i[;0]\n    1 0 1 2\n \nUse
        these as the indices into the sequence and I get a list of stepwise offsets:\n\n     (0
        -1;1 0;0 1;-1 0)4!+\\i[;0]\n    (1 0\n     0 -1\n     1 0\n     0 1)\n \nMultiply
        those by the second column of the parse input to scale them by how far we
        walk on each step:\n\n     i[;1]\n    5 5 5 3\n     i[;1]*(0 -1;1 0;0 1;-1
        0)4!+\\i[;0]\n    (5 0\n     0 -5\n     5 0\n     0 3)\n\nThe rest''s a piece
        of cake:\n\n     +/i[;1]*(0 -1;1 0;0 1;-1 0)4!+\\i[;0]\n    10 -2\n", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danafz1",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;alright, screw sleeping-
        this is already much better:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;l: 0: &amp;quot;../../Desktop/Advent/01.in&amp;quot;\ni:
        {((&amp;quot;LR&amp;quot;!-1 1)@x 1;. 2_x)}&amp;#39;&amp;quot;,&amp;quot;\\&amp;quot;
        &amp;quot;,,/l\nd: +/{%x*x}&amp;#39;\nd@+/i[;1]*(0 -1;1 0;0 1;-1 0)4!+\\i[;0]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In
        my first solution I tried to track a position and heading and evolve it along
        a series of directional tweaks and movements- that big nasty valence-4 function
        &lt;code&gt;s&lt;/code&gt;. My new solution is more direct. Cracking apart
        the input is the same:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; l: &amp;quot;R5,
        L5, R5, R3&amp;quot;\n i: {((&amp;quot;LR&amp;quot;!-1 1)@x 1;. 2_x)}&amp;#39;&amp;quot;,&amp;quot;\\&amp;quot;
        &amp;quot;,,/l\n(1 5\n -1 5\n 1 5\n 1 3)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        get a list of directional offsets and movement magnitudes. A running sum of
        the first column modulo 4 gives me the actual heading for each step of the
        sequence:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; i[;0]\n1 -1 1 1\n 4!+\\i[;0]\n1
        0 1 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Use these as the indices into
        the sequence and I get a list of stepwise offsets:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;
        (0 -1;1 0;0 1;-1 0)4!+\\i[;0]\n(1 0\n 0 -1\n 1 0\n 0 1)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Multiply
        those by the second column of the parse input to scale them by how far we
        walk on each step:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; i[;1]\n5 5 5 3\n i[;1]*(0
        -1;1 0;0 1;-1 0)4!+\\i[;0]\n(5 0\n 0 -5\n 5 0\n 0 3)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The
        rest&amp;#39;s a piece of cake:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; +/i[;1]*(0
        -1;1 0;0 1;-1 0)4!+\\i[;0]\n10 -2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danafz1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573816.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danah4r", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "gyorokpeter", "can_mod_post": false, "created_utc":
        1480573883.0, "send_replies": true, "parent_id": "t1_dan9bfq", "score": 2,
        "author_fullname": "t2_spppp", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "My solution is similar but
        in \"plain old\" Q:\n\n    d1p1:{a:\", \"vs x;rl:(\"RL\"!1 -1)a[;0];d:sums[rl]mod
        4;c:sum (\"J\"$1_/:a)*(til[4]!(0 -1;1 0;0 1;-1 0))d;sum abs c}\n    d1p2:{a:\",
        \"vs x;rl:(\"RL\"!1 -1)a[;0];d:sums[rl]mod 4;c:sums enlist[0 0],raze (\"J\"$1_/:a)#''enlist
        each(til[4]!(0 -1;1 0;0 1;-1 0))d;sum abs first where 1&lt;count each group
        c}\n", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danah4r", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution is similar but in &amp;quot;plain old&amp;quot; Q:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d1p1:{a:&amp;quot;,
        &amp;quot;vs x;rl:(&amp;quot;RL&amp;quot;!1 -1)a[;0];d:sums[rl]mod 4;c:sum
        (&amp;quot;J&amp;quot;$1_/:a)*(til[4]!(0 -1;1 0;0 1;-1 0))d;sum abs c}\nd1p2:{a:&amp;quot;,
        &amp;quot;vs x;rl:(&amp;quot;RL&amp;quot;!1 -1)a[;0];d:sums[rl]mod 4;c:sums
        enlist[0 0],raze (&amp;quot;J&amp;quot;$1_/:a)#&amp;#39;enlist each(til[4]!(0
        -1;1 0;0 1;-1 0))d;sum abs first where 1&amp;lt;count each group c}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danah4r/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573883.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dan9bfq", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "John_Earnest", "can_mod_post": false,
        "created_utc": 1480571568.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 10, "author_fullname": "t2_11tw1r", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Pretty sloppy work
        for this first one; I''m gonna sleep on it and see if I can do better:\n\n    l:
        0: \"../../Desktop/Advent/01.in\"\n    i: {((\"LR\"!-1 1)@x 1;. 2_x)}''\",\"\\\"
        \",,/l\n    s: {[d;p;t;m](d;p+m*(0 -1;1 0;0 1;-1 0)d:4!d+t)}\n    d: +/{%x*x}''\n    d@*1_(0;0
        0)(s.,)/i\n\nThis is written against [oK](https://github.com/JohnEarnest/ok),
        if anyone''s curious.\n", "edited": 1480572933.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_dan9bfq", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Pretty sloppy work for this first one; I&amp;#39;m
        gonna sleep on it and see if I can do better:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;l:
        0: &amp;quot;../../Desktop/Advent/01.in&amp;quot;\ni: {((&amp;quot;LR&amp;quot;!-1
        1)@x 1;. 2_x)}&amp;#39;&amp;quot;,&amp;quot;\\&amp;quot; &amp;quot;,,/l\ns:
        {[d;p;t;m](d;p+m*(0 -1;1 0;0 1;-1 0)d:4!d+t)}\nd: +/{%x*x}&amp;#39;\nd@*1_(0;0
        0)(s.,)/i\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is written against &lt;a
        href=\"https://github.com/JohnEarnest/ok\"&gt;oK&lt;/a&gt;, if anyone&amp;#39;s
        curious.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dan9bfq/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480571568.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "more", "data": {"count": 7, "name": "t1_danjd3r",
        "id": "danjd3r", "parent_id": "t1_danbxuy", "depth": 3, "children": ["danjd3r",
        "dancwes"]}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "danbxuy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "askalski",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_dana6ez", "score":
        2, "author_fullname": "t2_so7w7", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "As a C guy and shameless bit
        twiddler, I have to ask... what shenanigans?", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_danbxuy", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a C guy and shameless
        bit twiddler, I have to ask... what shenanigans?&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danbxuy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480577261.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1480577261.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dana6ez", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Aneurysm9", "can_mod_post": false, "created_utc":
        1480573258.0, "send_replies": true, "parent_id": "t1_dan9wzx", "score": 3,
        "author_fullname": "t2_4b465", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I think you may have broken
        /u/topaz2078 with your modulo shenanigans!  He''s making undignified happy
        noises :)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dana6ez", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        think you may have broken &lt;a href=\"/u/topaz2078\"&gt;/u/topaz2078&lt;/a&gt;
        with your modulo shenanigans!  He&amp;#39;s making undignified happy noises
        :)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dana6ez/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573258.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dan9wzx", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "DrFrankenstein90", "can_mod_post": false,
        "created_utc": 1480572731.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 10, "author_fullname": "t2_4zysi", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Good old C with some
        gratuitous bit hacking.\nhttps://github.com/DrFrankenstein/prompts/blob/master/aoc/2016/aoc1.c\n\nOnly
        did the first star for now. Saw I didn''t make the first 100. Will finish
        the rest tomorrow. I see I have to look for duplicate coordinates... in straight
        C, this is going to be interesting.\n\nEDIT: second star done.", "edited":
        1480650046.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_dan9wzx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good
        old C with some gratuitous bit hacking.\n&lt;a href=\"https://github.com/DrFrankenstein/prompts/blob/master/aoc/2016/aoc1.c\"&gt;https://github.com/DrFrankenstein/prompts/blob/master/aoc/2016/aoc1.c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Only
        did the first star for now. Saw I didn&amp;#39;t make the first 100. Will
        finish the rest tomorrow. I see I have to look for duplicate coordinates...
        in straight C, this is going to be interesting.&lt;/p&gt;\n\n&lt;p&gt;EDIT:
        second star done.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dan9wzx/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480572731.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 10}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dan949p", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "Aneurysm9", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_dan90r8", "score": 5, "author_fullname": "t2_4b465",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "oh, that''ll be /u/askalski for sure!", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_dan949p", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;oh, that&amp;#39;ll
        be &lt;a href=\"/u/askalski\"&gt;/u/askalski&lt;/a&gt; for sure!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dan949p/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480571192.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1480571192.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 5}}, {"kind": "more",
        "data": {"count": 5, "name": "t1_danathx", "id": "danathx", "parent_id": "t1_dan90r8",
        "depth": 2, "children": ["danathx"]}}], "before": null}}, "user_reports":
        [], "saved": false, "id": "dan90r8", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        false, "author": "FuriousProgrammer", "can_mod_post": false, "created_utc":
        1480571011.0, "send_replies": true, "parent_id": "t1_dan8xn9", "score": 5,
        "author_fullname": "t2_fv5yf", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I can''t wait to see what
        psycho tries to do this year''s challenges in [Synacor Challenge bytecode...](https://www.reddit.com/r/adventofcode/comments/3vkbzr/solution_day_4_synacor_challenge_vm_bytecode/)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dan90r8", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        can&amp;#39;t wait to see what psycho tries to do this year&amp;#39;s challenges
        in &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/3vkbzr/solution_day_4_synacor_challenge_vm_bytecode/\"&gt;Synacor
        Challenge bytecode...&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dan90r8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480571011.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 5}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danaq7b", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TheNiXXeD", "can_mod_post": false, "created_utc":
        1480574416.0, "send_replies": true, "parent_id": "t1_dan8xn9", "score": 3,
        "author_fullname": "t2_czpwz", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "`$wat++;` indeed", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danaq7b",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;$wat++;&lt;/code&gt;
        indeed&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason": null,
        "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danaq7b/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480574416.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dan8xn9", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "Aneurysm9", "can_mod_post": false, "created_utc":
        1480570854.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 6,
        "author_fullname": "t2_4b465", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Upon showing this to /u/topaz2078 his immediate
        reaction was a horrified \"Ane, no!!!!\" repeated over and over again! #missionaccomplished\n\nhttps://github.com/Aneurysm9/advent/blob/master/2016/day1/day1.pl",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dan8xn9", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Upon
        showing this to &lt;a href=\"/u/topaz2078\"&gt;/u/topaz2078&lt;/a&gt; his
        immediate reaction was a horrified &amp;quot;Ane, no!!!!&amp;quot; repeated
        over and over again! #missionaccomplished&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Aneurysm9/advent/blob/master/2016/day1/day1.pl\"&gt;https://github.com/Aneurysm9/advent/blob/master/2016/day1/day1.pl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dan8xn9/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480570854.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 6}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danacwt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bildzeitung",
        "can_mod_post": false, "created_utc": 1480573638.0, "send_replies": true,
        "parent_id": "t1_dana6zp", "score": 2, "author_fullname": "t2_ae52e", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "I love that there isn''t an x or a y to be found in this at all.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danacwt",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I love that there isn&amp;#39;t
        an x or a y to be found in this at all.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danacwt/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573638.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danao0s", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "taliriktug", "can_mod_post": false, "created_utc":
        1480574286.0, "send_replies": true, "parent_id": "t1_dana6zp", "score": 1,
        "author_fullname": "t2_6nadw", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Nice! I thought about using
        dict to calculate moves, but decided to copy-paste instead. Made a few typos,
        so I was definitely slower. I need to teach myself not to hurry.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danao0s",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice! I thought about
        using dict to calculate moves, but decided to copy-paste instead. Made a few
        typos, so I was definitely slower. I need to teach myself not to hurry.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danao0s/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480574286.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "more", "data": {"count": 1, "name": "t1_dao4c34",
        "id": "dao4c34", "parent_id": "t1_danvlu7", "depth": 2, "children": ["dao4c34"]}}],
        "before": null}}, "user_reports": [], "saved": false, "id": "danvlu7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mod_a", "can_mod_post": false, "created_utc":
        1480615130.0, "send_replies": true, "parent_id": "t1_dana6zp", "score": 1,
        "author_fullname": "t2_1mmyx", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Mine is very similar except
        I stored the lines instead of all the positions,  I then reported on the intersection
        of the newest line with any of the older list.  Had one of the moves been
        R31415926535897932384626433832795028 you would end up with a lot of positions
        to check :P\n\nhttps://github.com/bryfry/advent2016/blob/master/d1p2.py",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danvlu7", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Mine
        is very similar except I stored the lines instead of all the positions,  I
        then reported on the intersection of the newest line with any of the older
        list.  Had one of the moves been R31415926535897932384626433832795028 you
        would end up with a lot of positions to check :P&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/bryfry/advent2016/blob/master/d1p2.py\"&gt;https://github.com/bryfry/advent2016/blob/master/d1p2.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danvlu7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480615130.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dana6zp", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "archimedespi", "can_mod_post": false,
        "created_utc": 1480573291.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 5, "author_fullname": "t2_l9h59", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[quick solution in
        Python](https://gist.github.com/ArchimedesPi/fbd857515ffab75aba62ceccdb840454),
        22sloc\n\ntired me thought that `sum(map(abs, position))` was a hilarious
        way to compute manhattan distance :D\n\nalso i didn''t realize aoc was starting
        until 50 mins after the first problem had opened so i missed the leaderboard",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dana6zp", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://gist.github.com/ArchimedesPi/fbd857515ffab75aba62ceccdb840454\"&gt;quick
        solution in Python&lt;/a&gt;, 22sloc&lt;/p&gt;\n\n&lt;p&gt;tired me thought
        that &lt;code&gt;sum(map(abs, position))&lt;/code&gt; was a hilarious way
        to compute manhattan distance :D&lt;/p&gt;\n\n&lt;p&gt;also i didn&amp;#39;t
        realize aoc was starting until 50 mins after the first problem had opened
        so i missed the leaderboard&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dana6zp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573291.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 5}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "danq62y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "that_lego_guy",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_danpuuo", "score":
        3, "author_fullname": "t2_nxpb5", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "By hand of course! Surprisingly
        only took less than an hour, would have been even shorter if I did not color
        code everything. I finished 5 of last years puzzles completely in Excel as
        well", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_danq62y", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;By
        hand of course! Surprisingly only took less than an hour, would have been
        even shorter if I did not color code everything. I finished 5 of last years
        puzzles completely in Excel as well&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danq62y/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480608692.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1480608692.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danpuuo", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "MoW8192", "can_mod_post": false, "created_utc":
        1480608299.0, "send_replies": true, "parent_id": "t1_danpnsl", "score": 3,
        "author_fullname": "t2_t5mu4", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Awesome!\nIs this somehow
        done automatically by a macro or something?\nOr did you do it by hand?", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danpuuo",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Awesome!\nIs this somehow
        done automatically by a macro or something?\nOr did you do it by hand?&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danpuuo/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480608299.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danpnsl", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "that_lego_guy", "can_mod_post": false,
        "created_utc": 1480608050.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 6, "author_fullname": "t2_nxpb5", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Did someone say...Excel...\nhttps://github.com/thatlegoguy/AoC2016/blob/master/Day%201%20No%20Time%20for%20a%20Taxicab.xlsx",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danpnsl", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Did
        someone say...Excel...\n&lt;a href=\"https://github.com/thatlegoguy/AoC2016/blob/master/Day%201%20No%20Time%20for%20a%20Taxicab.xlsx\"&gt;https://github.com/thatlegoguy/AoC2016/blob/master/Day%201%20No%20Time%20for%20a%20Taxicab.xlsx&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danpnsl/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480608050.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 6}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "more", "data": {"count": 3, "name": "t1_danlt5a", "id": "danlt5a",
        "parent_id": "t1_danga9y", "depth": 2, "children": ["danlt5a"]}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "danga9y", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_dan9gl9", "score": 1, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": false, "author_flair_css_class": null, "collapsed":
        true, "downs": 0, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danga9y/",
        "num_reports": null, "locked": false, "name": "t1_danga9y", "created": 1480590591.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480590591.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "dan9gl9", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "bildzeitung", "can_mod_post": false,
        "created_utc": 1480571840.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 5, "author_fullname": "t2_ae52e", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "It''s a little too
        readable, but here it is in Python: https://github.com/bildzeitung/2016adventofcode/tree/master/01\n\nGood
        times! +1 on being really goddamn merry.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dan9gl9", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s a little too readable,
        but here it is in Python: &lt;a href=\"https://github.com/bildzeitung/2016adventofcode/tree/master/01\"&gt;https://github.com/bildzeitung/2016adventofcode/tree/master/01&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Good
        times! +1 on being really goddamn merry.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dan9gl9/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480571840.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 5}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 5, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danb9my", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "topaz2078", "can_mod_post": false, "created_utc":
        1480575630.0, "send_replies": true, "parent_id": "t1_dana5g2", "score": 3,
        "author_fullname": "t2_3ga32", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I *really* like Lua.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": "flair-aoccreator",
        "name": "t1_danb9my", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        &lt;em&gt;really&lt;/em&gt; like Lua.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": "dark",
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danb9my/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480575630.0, "author_flair_text": "(AoC creator)", "treatment_tags": [],
        "collapsed": false, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danlv6v", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "bildzeitung", "can_mod_post": false, "created_utc":
        1480602919.0, "send_replies": true, "parent_id": "t1_dana5g2", "score": 1,
        "author_fullname": "t2_ae52e", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Lua''s great. Nice.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danlv6v",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Lua&amp;#39;s great.
        Nice.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason": null,
        "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danlv6v/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480602919.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dana5g2", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": false, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_5fur6q", "score": 5, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": 1481490612.0, "downs": 0, "author_flair_css_class":
        null, "collapsed": true, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dana5g2/",
        "num_reports": null, "locked": false, "name": "t1_dana5g2", "created": 1480573203.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480573203.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danq1o6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Tarmen",
        "can_mod_post": false, "created_utc": 1480608540.0, "send_replies": true,
        "parent_id": "t1_danb89y", "score": 3, "author_fullname": "t2_7mjdo", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Here is my haskell solution. Probably would have been more compact without
        the type definitions, or at least with lenses. \n\n    import Data.List.Split
        (splitOn)\n    import Data.List (foldl'')\n    import Control.Monad (mplus,
        msum, mfilter)\n\n    data Direction = North|East|South|West deriving(Show,
        Enum, Eq)\n    data Taxi = Taxi Direction (Int, Int) deriving (Show, Eq)\n\n    splitInput
        = splitOn \", \"\n    start = Taxi East (0, 0)\n\n    solution1 = total .
        foldl'' step start . splitInput\n    solution2 = fmap total . go [start] .
        splitInput\n      where\n        go oldPath (x:xs) = collision `mplus` go
        (newPath ++ oldPath) xs\n          where newPath = step'' (head oldPath) x\n                collision
        = findCollision oldPath newPath\n        go _ []  = Nothing\n\n        findCollision
        old =  msum . map valid\n          where valid = mfilter visited . Just\n                visited
        = (`elem` visitedCoords) . coords\n                visitedCoords = coords
        &lt;$&gt; old\n\n    total = abs . uncurry (+) . coords\n    coords (Taxi
        _ a) = a\n\n    step  (Taxi heading pos) (d:a) = advance amount taxi''\n      where
        taxi'' = Taxi (turn d heading) pos\n            amount = 1+ read a :: Int\n    step''
        (Taxi heading pos) (d:a) = reverse . drop 1 . take amount $ iterate (advance
        1) taxi''\n      where amount = 1+read a :: Int\n            taxi'' = Taxi
        (turn d heading) pos\n\n    advance n (Taxi North (x, y)) = (Taxi North (x,
        y+n))\n    advance n (Taxi East  (x, y)) = (Taxi East (x+n, y))\n    advance
        n (Taxi South (x, y)) = (Taxi South (x, y-n))\n    advance n (Taxi West  (x,
        y)) = (Taxi West (x-n, y))\n    turn ''L'' = left\n    turn ''R'' = right\n    left  North
        = West\n    left  d     = pred d\n    right West  = North\n    right d     =
        succ d\n", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danq1o6", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here
        is my haskell solution. Probably would have been more compact without the
        type definitions, or at least with lenses. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Data.List.Split (splitOn)\nimport Data.List (foldl&amp;#39;)\nimport Control.Monad
        (mplus, msum, mfilter)\n\ndata Direction = North|East|South|West deriving(Show,
        Enum, Eq)\ndata Taxi = Taxi Direction (Int, Int) deriving (Show, Eq)\n\nsplitInput
        = splitOn &amp;quot;, &amp;quot;\nstart = Taxi East (0, 0)\n\nsolution1 =
        total . foldl&amp;#39; step start . splitInput\nsolution2 = fmap total . go
        [start] . splitInput\n  where\n    go oldPath (x:xs) = collision `mplus` go
        (newPath ++ oldPath) xs\n      where newPath = step&amp;#39; (head oldPath)
        x\n            collision = findCollision oldPath newPath\n    go _ []  = Nothing\n\n    findCollision
        old =  msum . map valid\n      where valid = mfilter visited . Just\n            visited
        = (`elem` visitedCoords) . coords\n            visitedCoords = coords &amp;lt;$&amp;gt;
        old\n\ntotal = abs . uncurry (+) . coords\ncoords (Taxi _ a) = a\n\nstep  (Taxi
        heading pos) (d:a) = advance amount taxi&amp;#39;\n  where taxi&amp;#39; =
        Taxi (turn d heading) pos\n        amount = 1+ read a :: Int\nstep&amp;#39;
        (Taxi heading pos) (d:a) = reverse . drop 1 . take amount $ iterate (advance
        1) taxi&amp;#39;\n  where amount = 1+read a :: Int\n        taxi&amp;#39;
        = Taxi (turn d heading) pos\n\nadvance n (Taxi North (x, y)) = (Taxi North
        (x, y+n))\nadvance n (Taxi East  (x, y)) = (Taxi East (x+n, y))\nadvance n
        (Taxi South (x, y)) = (Taxi South (x, y-n))\nadvance n (Taxi West  (x, y))
        = (Taxi West (x-n, y))\nturn &amp;#39;L&amp;#39; = left\nturn &amp;#39;R&amp;#39;
        = right\nleft  North = West\nleft  d     = pred d\nright West  = North\nright
        d     = succ d\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danq1o6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480608540.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danr079", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "winhug", "can_mod_post": false, "created_utc":
        1480609714.0, "send_replies": true, "parent_id": "t1_danb89y", "score": 2,
        "author_fullname": "t2_p7aqb", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I was too lazy to parse my
        input so I just created a datatype for it\n\n    module Day1 where\n    import
        Data.List\n    import Data.Bifunctor\n    data Direction = North | East |
        South | West deriving (Eq, Show, Enum)\n    data TurnInput  = R Int | L Int\n\n    inputToDirection
        t d = replicate (turnDistance t) $ turn t d\n\n    turnDistance (R i) = i\n    turnDistance
        (L i) = i\n\n    type Coord = (Int, Int)\n\n    turn (R _) West = North\n    turn
        (R _) e = succ e\n    turn (L _) North = West\n    turn (L _) e = pred e\n\n    move
        :: Direction -&gt; Coord -&gt; Coord\n    move North = first ((+) 1)\n    move
        East = second ((+) 1)\n    move South = first (\\a -&gt; a - 1)\n    move
        West = second (\\a -&gt; a - 1)\n\n    getDistance (a, b) = abs a + abs b\n\n    firstTwice
        [] = Nothing\n    firstTwice (x:xs)\n        | elem x xs = Just x\n        |
        otherwise = firstTwice xs\n\n    pathInput = [R 3, L 5, R 1, R 2, L 5, R 2,
        R 3, L 2, L 5, R 5, L 4, L 3, R 5, L 1, R 3, R 4, R 1, L 3, R 3, L 2, L 5,
        L 2, R 4, R 5, R 5, L 4, L 3, L 3, R 4, R 4, R 5, L 5, L 3, R 2, R 2, L 3,
        L 4, L 5, R 1, R 3, L 3, R 2, L 3, R 5, L 194, L 2, L 5, R 2, R 1, R 1, L
        1, L 5, L 4, R 4, R 2, R 2, L 4, L 1, R 2, R 53, R 3, L 5, R 72, R 2, L 5,
        R 3, L 4, R 187, L 4, L 5, L 2, R 1, R 3, R 5, L 4, L 4, R 2, R 5, L 5, L
        4, L 3, R 5, L 2, R 1, R 1, R 4, L 1, R 2, L 3, R 5, L 4, R 2, L 3, R 1, L
        4, R 4, L 1, L 2, R 3, L 1, L 1, R 4, R 3, L 4, R 2, R 5, L 2, L 3, L 3, L
        1, R 3, R 5, R 2, R 3, R 1, R 2, L 1, L 4, L 5, L 2, R 4, R 5, L 2, R 4, R
        4, L 3, R 2, R 1, L 4, R 3, L 3, L 4, L 3, L 1, R 3, L 2, R 2, L 4, L 4, L
        5, R 3, R 5, R 3, L 2, R 5, L 2, L 1, L 5, L 1, R 2, R 4, L 5, R 2, L 4, L
        5, L 4, L 5, L 2, L 5, L 4, R 5, R 3, R 2, R 2, L 3, R 3, L 2, L 5]\n\n    path
        = concat $ snd  $ mapAccumL (\\t d -&gt; let xs = inputToDirection d t in
        (head xs, xs)) North pathInput\n\n    computePath = scanl (flip move) (0,0)
        path\n            \n    part1 = getDistance (last computePath)\n\n    part2
        = getDistance &lt;$&gt; firstTwice computePath", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_danr079", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was too lazy to parse my
        input so I just created a datatype for it&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module
        Day1 where\nimport Data.List\nimport Data.Bifunctor\ndata Direction = North
        | East | South | West deriving (Eq, Show, Enum)\ndata TurnInput  = R Int |
        L Int\n\ninputToDirection t d = replicate (turnDistance t) $ turn t d\n\nturnDistance
        (R i) = i\nturnDistance (L i) = i\n\ntype Coord = (Int, Int)\n\nturn (R _)
        West = North\nturn (R _) e = succ e\nturn (L _) North = West\nturn (L _) e
        = pred e\n\nmove :: Direction -&amp;gt; Coord -&amp;gt; Coord\nmove North
        = first ((+) 1)\nmove East = second ((+) 1)\nmove South = first (\\a -&amp;gt;
        a - 1)\nmove West = second (\\a -&amp;gt; a - 1)\n\ngetDistance (a, b) = abs
        a + abs b\n\nfirstTwice [] = Nothing\nfirstTwice (x:xs)\n    | elem x xs =
        Just x\n    | otherwise = firstTwice xs\n\npathInput = [R 3, L 5, R 1, R 2,
        L 5, R 2, R 3, L 2, L 5, R 5, L 4, L 3, R 5, L 1, R 3, R 4, R 1, L 3, R 3,
        L 2, L 5, L 2, R 4, R 5, R 5, L 4, L 3, L 3, R 4, R 4, R 5, L 5, L 3, R 2,
        R 2, L 3, L 4, L 5, R 1, R 3, L 3, R 2, L 3, R 5, L 194, L 2, L 5, R 2, R
        1, R 1, L 1, L 5, L 4, R 4, R 2, R 2, L 4, L 1, R 2, R 53, R 3, L 5, R 72,
        R 2, L 5, R 3, L 4, R 187, L 4, L 5, L 2, R 1, R 3, R 5, L 4, L 4, R 2, R
        5, L 5, L 4, L 3, R 5, L 2, R 1, R 1, R 4, L 1, R 2, L 3, R 5, L 4, R 2, L
        3, R 1, L 4, R 4, L 1, L 2, R 3, L 1, L 1, R 4, R 3, L 4, R 2, R 5, L 2, L
        3, L 3, L 1, R 3, R 5, R 2, R 3, R 1, R 2, L 1, L 4, L 5, L 2, R 4, R 5, L
        2, R 4, R 4, L 3, R 2, R 1, L 4, R 3, L 3, L 4, L 3, L 1, R 3, L 2, R 2, L
        4, L 4, L 5, R 3, R 5, R 3, L 2, R 5, L 2, L 1, L 5, L 1, R 2, R 4, L 5, R
        2, L 4, L 5, L 4, L 5, L 2, L 5, L 4, R 5, R 3, R 2, R 2, L 3, R 3, L 2, L
        5]\n\npath = concat $ snd  $ mapAccumL (\\t d -&amp;gt; let xs = inputToDirection
        d t in (head xs, xs)) North pathInput\n\ncomputePath = scanl (flip move) (0,0)
        path\n\npart1 = getDistance (last computePath)\n\npart2 = getDistance &amp;lt;$&amp;gt;
        firstTwice computePath\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danr079/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480609714.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "more", "data": {"count": 1, "name": "t1_daowok9",
        "id": "daowok9", "parent_id": "t1_dantjn2", "depth": 2, "children": ["daowok9"]}}],
        "before": null}}, "user_reports": [], "saved": false, "id": "dantjn2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Ulyssesp", "can_mod_post": false, "created_utc":
        1480612739.0, "send_replies": true, "parent_id": "t1_danb89y", "score": 2,
        "author_fullname": "t2_qhudf", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Haskell too! I like how concise
        your solution is.\n\n    dirs :: [(Int, Int)]\n    dirs = [(0, 1), (1, 0),
        (0, -1), (-1, 0)]\n    \n    start = ([(0, 0)], 0)\n    \n    parse :: String
        -&gt; (Int, Int)\n    parse = head . parseSaving\n    \n    parseSaving ::
        String -&gt; [(Int, Int)]\n    parseSaving = fst . foldl (flip move) start
        . splitOn \", \"\n    \n    firstRepeated :: Eq a =&gt; [a] -&gt; a\n    firstRepeated
        (x:xs) =\n      case elem x xs of\n        True -&gt; x\n        False -&gt;
        firstRepeated xs\n    \n    move :: String -&gt; ([(Int, Int)], Int) -&gt;
        ([(Int, Int)], Int)\n    move (''R'':(read -&gt; x)) = walk x . turn True\n    move
        (''L'':(read -&gt; x)) = walk x . turn False\n    \n    turn :: Bool -&gt;
        ([(Int, Int)], Int) -&gt; ([(Int, Int)], Int)\n    turn True (pos, d) = (pos,
        (d + 1) `mod` length dirs)\n    turn False (pos, d) = (pos, (d - 1) `mod`
        length dirs)\n    \n    walk :: Int -&gt; ([ (Int, Int )], Int) -&gt; ([(Int,
        Int) ], Int)\n    walk l ((px, py):ps, d)\n      | l &gt; 0 = walk (l - 1)
        ((px + dx, py + dy):(px, py):ps, d)\n      | l &lt;= 0 = ((px, py):ps, d)\n      where\n        (dx,
        dy) = dirs !! d\n    \n    numBlocks :: (Int, Int) -&gt; Int\n    numBlocks
        (x, y) = abs x + abs y\n    \n    run :: IO ()\n    run = print $ numBlocks
        . firstRepeated . reverse $ parseSaving input\n      where parsed = parse
        input\nEdit: code formatting", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_dantjn2", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell too! I like how concise your solution
        is.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dirs :: [(Int, Int)]\ndirs = [(0,
        1), (1, 0), (0, -1), (-1, 0)]\n\nstart = ([(0, 0)], 0)\n\nparse :: String
        -&amp;gt; (Int, Int)\nparse = head . parseSaving\n\nparseSaving :: String
        -&amp;gt; [(Int, Int)]\nparseSaving = fst . foldl (flip move) start . splitOn
        &amp;quot;, &amp;quot;\n\nfirstRepeated :: Eq a =&amp;gt; [a] -&amp;gt; a\nfirstRepeated
        (x:xs) =\n  case elem x xs of\n    True -&amp;gt; x\n    False -&amp;gt; firstRepeated
        xs\n\nmove :: String -&amp;gt; ([(Int, Int)], Int) -&amp;gt; ([(Int, Int)],
        Int)\nmove (&amp;#39;R&amp;#39;:(read -&amp;gt; x)) = walk x . turn True\nmove
        (&amp;#39;L&amp;#39;:(read -&amp;gt; x)) = walk x . turn False\n\nturn ::
        Bool -&amp;gt; ([(Int, Int)], Int) -&amp;gt; ([(Int, Int)], Int)\nturn True
        (pos, d) = (pos, (d + 1) `mod` length dirs)\nturn False (pos, d) = (pos, (d
        - 1) `mod` length dirs)\n\nwalk :: Int -&amp;gt; ([ (Int, Int )], Int) -&amp;gt;
        ([(Int, Int) ], Int)\nwalk l ((px, py):ps, d)\n  | l &amp;gt; 0 = walk (l
        - 1) ((px + dx, py + dy):(px, py):ps, d)\n  | l &amp;lt;= 0 = ((px, py):ps,
        d)\n  where\n    (dx, dy) = dirs !! d\n\nnumBlocks :: (Int, Int) -&amp;gt;
        Int\nnumBlocks (x, y) = abs x + abs y\n\nrun :: IO ()\nrun = print $ numBlocks
        . firstRepeated . reverse $ parseSaving input\n  where parsed = parse input\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit:
        code formatting&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dantjn2/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480612739.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "daqrh9n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "haoformayor",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_daq9sud", "score":
        2, "author_fullname": "t2_r3rja", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "very clean!", "edited": false,
        "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "name":
        "t1_daqrh9n", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;very
        clean!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason": null,
        "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daqrh9n/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480789309.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1480789309.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "daq9sud", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "pyow_pyow", "can_mod_post": false, "created_utc":
        1480746729.0, "send_replies": true, "parent_id": "t1_danb89y", "score": 2,
        "author_fullname": "t2_abq18", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "This was fun: http://lpaste.net/3922089402276249600",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_daq9sud", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        was fun: &lt;a href=\"http://lpaste.net/3922089402276249600\"&gt;http://lpaste.net/3922089402276249600&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daq9sud/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480746729.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "daowpj1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "haoformayor",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_dao87zl", "score":
        2, "author_fullname": "t2_r3rja", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "my hint for the second one
        is to make sure it works for the given example; i believe your code will not
        output the correct answer for that short little input and it''s not so much
        your fault as the way the problem is worded to trick you. also welcome to
        haskell! one of my favorite languages.", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_daowpj1", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;my hint for the second
        one is to make sure it works for the given example; i believe your code will
        not output the correct answer for that short little input and it&amp;#39;s
        not so much your fault as the way the problem is worded to trick you. also
        welcome to haskell! one of my favorite languages.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daowpj1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480668932.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1480668932.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dao87zl", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "splurke", "can_mod_post": false, "created_utc":
        1480629588.0, "send_replies": true, "parent_id": "t1_danb89y", "score": 1,
        "author_fullname": "t2_eviov", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Using this to learn Haskell,
        here''s my solution but it doesn''t work for the second part even though the
        first is correct. What is wrong? :(\n\n    module Day1 where\n    \n    import
        Data.List (uncons)\n    import Data.List.Split (splitOneOf)\n    import Data.Maybe
        (mapMaybe)\n    \n    -- Types\n    data Orientation = N | E | S | W deriving
        (Show, Eq, Ord)\n    data Movement = R Integer | L Integer deriving Show\n    data
        Position = Position { x :: Integer\n                             , y :: Integer\n                             ,
        orientation :: Orientation\n                             } deriving (Show,
        Ord)\n    instance Eq Position where\n      (==) p1 p2 = (x p1) == (x p2)
        &amp;&amp; (y p1) == (y p2)\n    \n    -- Type functions\n    initPos :: Position\n    initPos
        = Position { x = 0 , y = 0 , orientation = N }\n    \n    walkDistance ::
        Movement -&gt; Integer\n    walkDistance (R a) = a\n    walkDistance (L a)
        = a\n    \n    -- Walk\n    spinAround :: Orientation -&gt; Movement -&gt;
        Orientation\n    spinAround current mov = head . tail $ dropWhile (/= current)
        (op orientations)\n      where\n        orientations = [N, E, S, W, N]\n        op
        = case mov of\n          R _ -&gt; id\n          L _ -&gt; reverse\n    \n    turn
        :: Position -&gt; Movement -&gt; Position\n    turn current mov = current
        { orientation = spinAround (orientation current) mov}\n    \n    walk :: Position
        -&gt; Movement -&gt; Position\n    walk current mov = case (orientation current)
        of\n      N -&gt; current { y = (y current) + dist}\n      S -&gt; current
        { y = (y current) - dist}\n      E -&gt; current { x = (x current) + dist}\n      W
        -&gt; current { x = (x current) - dist}\n      where dist = walkDistance mov\n    \n    distance
        :: Position -&gt; Integer\n    distance pos = abs (x pos) + abs (y pos)\n    \n    repeated
        :: [Position] -&gt; [Position]\n    repeated [] = []\n    repeated (x:xs)
        = if x `elem` xs then x:(repeated xs) else (repeated xs)\n    \n    -- Parse\n    moveMaker
        :: (Char, String) -&gt; Movement\n    moveMaker pair = case pair of\n      (''R'',
        xs) -&gt; R (parse xs)\n      (''L'', xs) -&gt; L (parse xs)\n      _ -&gt;
        error \"Invalid input\"\n      where\n        parse x = read x :: Integer\n    \n    --
        Main\n    main :: IO ()\n    main = do\n      c &lt;- readFile \"input/1\"\n      let
        steps = map moveMaker $ mapMaybe uncons $ splitOneOf \", \" c\n      let go
        = (\\pos mov -&gt; walk (turn pos mov) mov)\n      let path = scanl go initPos
        steps\n      let final = last path\n      putStr \"1. \"\n      putStrLn $
        show $ distance final\n      putStr \"2. \"\n      putStrLn $ show $ distance
        $ head $ repeated path\n", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dao87zl", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using
        this to learn Haskell, here&amp;#39;s my solution but it doesn&amp;#39;t work
        for the second part even though the first is correct. What is wrong? :(&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module
        Day1 where\n\nimport Data.List (uncons)\nimport Data.List.Split (splitOneOf)\nimport
        Data.Maybe (mapMaybe)\n\n-- Types\ndata Orientation = N | E | S | W deriving
        (Show, Eq, Ord)\ndata Movement = R Integer | L Integer deriving Show\ndata
        Position = Position { x :: Integer\n                         , y :: Integer\n                         ,
        orientation :: Orientation\n                         } deriving (Show, Ord)\ninstance
        Eq Position where\n  (==) p1 p2 = (x p1) == (x p2) &amp;amp;&amp;amp; (y p1)
        == (y p2)\n\n-- Type functions\ninitPos :: Position\ninitPos = Position {
        x = 0 , y = 0 , orientation = N }\n\nwalkDistance :: Movement -&amp;gt; Integer\nwalkDistance
        (R a) = a\nwalkDistance (L a) = a\n\n-- Walk\nspinAround :: Orientation -&amp;gt;
        Movement -&amp;gt; Orientation\nspinAround current mov = head . tail $ dropWhile
        (/= current) (op orientations)\n  where\n    orientations = [N, E, S, W, N]\n    op
        = case mov of\n      R _ -&amp;gt; id\n      L _ -&amp;gt; reverse\n\nturn
        :: Position -&amp;gt; Movement -&amp;gt; Position\nturn current mov = current
        { orientation = spinAround (orientation current) mov}\n\nwalk :: Position
        -&amp;gt; Movement -&amp;gt; Position\nwalk current mov = case (orientation
        current) of\n  N -&amp;gt; current { y = (y current) + dist}\n  S -&amp;gt;
        current { y = (y current) - dist}\n  E -&amp;gt; current { x = (x current)
        + dist}\n  W -&amp;gt; current { x = (x current) - dist}\n  where dist = walkDistance
        mov\n\ndistance :: Position -&amp;gt; Integer\ndistance pos = abs (x pos)
        + abs (y pos)\n\nrepeated :: [Position] -&amp;gt; [Position]\nrepeated []
        = []\nrepeated (x:xs) = if x `elem` xs then x:(repeated xs) else (repeated
        xs)\n\n-- Parse\nmoveMaker :: (Char, String) -&amp;gt; Movement\nmoveMaker
        pair = case pair of\n  (&amp;#39;R&amp;#39;, xs) -&amp;gt; R (parse xs)\n  (&amp;#39;L&amp;#39;,
        xs) -&amp;gt; L (parse xs)\n  _ -&amp;gt; error &amp;quot;Invalid input&amp;quot;\n  where\n    parse
        x = read x :: Integer\n\n-- Main\nmain :: IO ()\nmain = do\n  c &amp;lt;-
        readFile &amp;quot;input/1&amp;quot;\n  let steps = map moveMaker $ mapMaybe
        uncons $ splitOneOf &amp;quot;, &amp;quot; c\n  let go = (\\pos mov -&amp;gt;
        walk (turn pos mov) mov)\n  let path = scanl go initPos steps\n  let final
        = last path\n  putStr &amp;quot;1. &amp;quot;\n  putStrLn $ show $ distance
        final\n  putStr &amp;quot;2. &amp;quot;\n  putStrLn $ show $ distance $ head
        $ repeated path\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao87zl/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480629588.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danb89y", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "haoformayor", "can_mod_post": false,
        "created_utc": 1480575542.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 4, "author_fullname": "t2_r3rja", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**~*~ haskell ~*~**\n\nAh
        a list fold, our old friend. This represents the compass directions as the
        integers modulo 4. Hacky, but quick. Solution 1 is a scan over the input;
        solution 2 is finding the first duplicate element in the resulting list. I
        made two mistakes: one, assuming that each step could be encoded in one digit;
        two, (as some others have noted) not inferring that \"same location\" in part
        two meant any intermediate location.\n\n    #!/usr/bin/env stack\n    -- stack
        --resolver lts-6.26 --install-ghc runghc --package text --package base-prelude\n    \n    {-#
        LANGUAGE OverloadedStrings #-}\n    {-# LANGUAGE NoImplicitPrelude #-}\n    {-#
        LANGUAGE ViewPatterns      #-}\n    \n    import qualified Data.Text as Text\n    import
        BasePrelude\n    \n    data Direction = R | L\n    input = \"&lt;snip&gt;\"\n    turn
        compass dir = mod (compass + case dir of R -&gt; 1; L -&gt; -1) 4\n    positionOf
        (_, x, y) = (x, y)\n    steps =\n      [case direction of\n         ''R''
        -&gt; (R, read rest :: Int)\n         ''L'' -&gt; (L, read rest :: Int)\n      |
        direction:rest &lt;- map Text.unpack (Text.splitOn \", \" input)]\n    solution1
        =\n      join $\n        scanl (\\before (direction, n) -&gt;\n                 case
        last before of\n                   (compass, x, y) -&gt; case turn compass
        direction of\n                     0 -&gt; [(0, x, y + i) | i &lt;- [0 ..
        n]]\n                     1 -&gt; [(1, x + i, y) | i &lt;- [0 .. n]]\n                     2
        -&gt; [(2, x, y - i) | i &lt;- [0 .. n]]\n                     3 -&gt; [(3,
        x - i, y) | i &lt;- [0 .. n]]\n              ) [(0, 0, 0)] steps\n    solution2
        = duplicates . map positionOf $ solution1\n    duplicates hay =\n      hay
        !! fst (head dups)\n      where\n        dups = [(e, ix) | (e, ix) &lt;- zip
        [0..] ixs, ix /= e, ix + 1 /= e]\n        ixs  = [i | needle &lt;- hay, Just
        i &lt;- [elemIndex needle hay]]\n    main = do\n      print (last solution1)\n      case
        last solution1 of (_, x, y) -&gt; print $ x + y\n      print solution2\n      case
        solution2 of (x, y) -&gt; print $ x + y\n\nThis could have been shorter had
        I been able to think of the library that implements `scanlM` off the top of
        my head. Scanning in the list monad would make the `join`/flatten step superfluous,
        as well as simplifying the pattern match inside solution 1. C''est la vie.
        Yay advent of code!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danb89y", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;~&lt;em&gt;~
        haskell ~&lt;/em&gt;~&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Ah a list fold,
        our old friend. This represents the compass directions as the integers modulo
        4. Hacky, but quick. Solution 1 is a scan over the input; solution 2 is finding
        the first duplicate element in the resulting list. I made two mistakes: one,
        assuming that each step could be encoded in one digit; two, (as some others
        have noted) not inferring that &amp;quot;same location&amp;quot; in part two
        meant any intermediate location.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env
        stack\n-- stack --resolver lts-6.26 --install-ghc runghc --package text --package
        base-prelude\n\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE NoImplicitPrelude
        #-}\n{-# LANGUAGE ViewPatterns      #-}\n\nimport qualified Data.Text as Text\nimport
        BasePrelude\n\ndata Direction = R | L\ninput = &amp;quot;&amp;lt;snip&amp;gt;&amp;quot;\nturn
        compass dir = mod (compass + case dir of R -&amp;gt; 1; L -&amp;gt; -1) 4\npositionOf
        (_, x, y) = (x, y)\nsteps =\n  [case direction of\n     &amp;#39;R&amp;#39;
        -&amp;gt; (R, read rest :: Int)\n     &amp;#39;L&amp;#39; -&amp;gt; (L, read
        rest :: Int)\n  | direction:rest &amp;lt;- map Text.unpack (Text.splitOn &amp;quot;,
        &amp;quot; input)]\nsolution1 =\n  join $\n    scanl (\\before (direction,
        n) -&amp;gt;\n             case last before of\n               (compass, x,
        y) -&amp;gt; case turn compass direction of\n                 0 -&amp;gt;
        [(0, x, y + i) | i &amp;lt;- [0 .. n]]\n                 1 -&amp;gt; [(1,
        x + i, y) | i &amp;lt;- [0 .. n]]\n                 2 -&amp;gt; [(2, x, y
        - i) | i &amp;lt;- [0 .. n]]\n                 3 -&amp;gt; [(3, x - i, y)
        | i &amp;lt;- [0 .. n]]\n          ) [(0, 0, 0)] steps\nsolution2 = duplicates
        . map positionOf $ solution1\nduplicates hay =\n  hay !! fst (head dups)\n  where\n    dups
        = [(e, ix) | (e, ix) &amp;lt;- zip [0..] ixs, ix /= e, ix + 1 /= e]\n    ixs  =
        [i | needle &amp;lt;- hay, Just i &amp;lt;- [elemIndex needle hay]]\nmain
        = do\n  print (last solution1)\n  case last solution1 of (_, x, y) -&amp;gt;
        print $ x + y\n  print solution2\n  case solution2 of (x, y) -&amp;gt; print
        $ x + y\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This could have been shorter
        had I been able to think of the library that implements &lt;code&gt;scanlM&lt;/code&gt;
        off the top of my head. Scanning in the list monad would make the &lt;code&gt;join&lt;/code&gt;/flatten
        step superfluous, as well as simplifying the pattern match inside solution
        1. C&amp;#39;est la vie. Yay advent of code!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danb89y/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480575542.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 4}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dana4zg", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "dirkt", "can_mod_post": false, "created_utc":
        1480573177.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 3,
        "author_fullname": "t2_3jk43", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Tried to do this one early in the morning
        (I''m in EU) for a change, to have a chance at top 100, and found that coding
        without having drunk coffee is *extremely* slow, even for simple problems
        like this.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dana4zg", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Tried
        to do this one early in the morning (I&amp;#39;m in EU) for a change, to have
        a chance at top 100, and found that coding without having drunk coffee is
        &lt;em&gt;extremely&lt;/em&gt; slow, even for simple problems like this.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dana4zg/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573177.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danad79", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "Godspiral", "can_mod_post": false, "created_utc":
        1480573656.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 5,
        "author_fullname": "t2_1pvj", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "in J,\n\n    a =. wdclippaste ''''\n    O
        =: 4 2 $ _1 0 0 1 1 0 0 _1\n    f =: 4 : 0\n     a =. 4 | x ({.@] +  _1 1
        {~ ''R'' = {.@[) {: y\n     y ,   a , (}. {: y) + x (\".@}.@[  * O {~ ]) a\n    )\n    f
        each/ (,: 0 0 0) (, &lt;)~ |. dltb each '','' cut a\n\npart 2 didn''t read,
        thought it was first repeat landing spot.  plotting and seeing the intersection
        though worked\n\n     plot &lt;\"1 |: }.\"1 &gt; f each/ (,: 0 0 0) (, &lt;)~
        |. dltb each '','' cut a", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danad79", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;in
        J,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a =. wdclippaste &amp;#39;&amp;#39;\nO
        =: 4 2 $ _1 0 0 1 1 0 0 _1\nf =: 4 : 0\n a =. 4 | x ({.@] +  _1 1 {~ &amp;#39;R&amp;#39;
        = {.@[) {: y\n y ,   a , (}. {: y) + x (&amp;quot;.@}.@[  * O {~ ]) a\n)\nf
        each/ (,: 0 0 0) (, &amp;lt;)~ |. dltb each &amp;#39;,&amp;#39; cut a\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        2 didn&amp;#39;t read, thought it was first repeat landing spot.  plotting
        and seeing the intersection though worked&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;
        plot &amp;lt;&amp;quot;1 |: }.&amp;quot;1 &amp;gt; f each/ (,: 0 0 0) (, &amp;lt;)~
        |. dltb each &amp;#39;,&amp;#39; cut a\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danad79/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573656.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 5}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daocnfp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "anadhdguy", "can_mod_post": false, "created_utc":
        1480635161.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 4,
        "author_fullname": "t2_wy76e", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My solution for part1...\n\n**Oneliner in
        ruby (114 characters)**:\n\n    cat input | ruby -pe ''_=0,0;d=1;$_.scan(/([LR])(\\d+)/).each{|c,n|\n    d=(d+(c.ord&amp;2)-1)%4;_[d%2]+=n.to_i*((d%3&gt;0)?1:-1)};$_=_[0].abs+_[1].abs''\n\n**Oneliner
        in C (245 characters)**:\n\n    void main(){char c;int n=0,d=1,_[2]={0};while(read(0,&amp;c,1))c&gt;57?\n    d=(d+(c&amp;2)+3)%4:c&gt;47?n=n*10+(c&amp;15):n&gt;0?_[d%2]+=d%3&gt;0?\n    n:-n,n=0:0;for(d=0;d&lt;2;d++)n+=_[d]&lt;0?-_[d]:_[d];d=10000000;\n    while(!(n/d)&amp;&amp;(d/=10));do{c=n/d+48;write(1,&amp;c,1);}while(n%=d,d/=10);}\n",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_daocnfp", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution for part1...&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Oneliner in ruby
        (114 characters)&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;cat input
        | ruby -pe &amp;#39;_=0,0;d=1;$_.scan(/([LR])(\\d+)/).each{|c,n|\nd=(d+(c.ord&amp;amp;2)-1)%4;_[d%2]+=n.to_i*((d%3&amp;gt;0)?1:-1)};$_=_[0].abs+_[1].abs&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Oneliner
        in C (245 characters)&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;void
        main(){char c;int n=0,d=1,_[2]={0};while(read(0,&amp;amp;c,1))c&amp;gt;57?\nd=(d+(c&amp;amp;2)+3)%4:c&amp;gt;47?n=n*10+(c&amp;amp;15):n&amp;gt;0?_[d%2]+=d%3&amp;gt;0?\nn:-n,n=0:0;for(d=0;d&amp;lt;2;d++)n+=_[d]&amp;lt;0?-_[d]:_[d];d=10000000;\nwhile(!(n/d)&amp;amp;&amp;amp;(d/=10));do{c=n/d+48;write(1,&amp;amp;c,1);}while(n%=d,d/=10);}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daocnfp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480635161.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 4}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dan91xd", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "FuriousProgrammer", "can_mod_post": false,
        "created_utc": 1480571070.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 3, "author_fullname": "t2_fv5yf", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Woo! Tied for 35th!!\n\nReally
        excited for this year!!!!!!\n\nToo many exclamation points.\n\nAnyway, here''s
        [my code](https://github.com/AdarkTheCoder/AdventOfCode-2016/blob/master/day01/code.lua)
        which took me too long to write because of a certain `dy` and `dx` error...\n\nEDIT:
        ^(I''M REALLY GODDAMN MERRY RIGHT NOW.)", "edited": 1480571425.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dan91xd", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Woo! Tied for 35th!!&lt;/p&gt;\n\n&lt;p&gt;Really
        excited for this year!!!!!!&lt;/p&gt;\n\n&lt;p&gt;Too many exclamation points.&lt;/p&gt;\n\n&lt;p&gt;Anyway,
        here&amp;#39;s &lt;a href=\"https://github.com/AdarkTheCoder/AdventOfCode-2016/blob/master/day01/code.lua\"&gt;my
        code&lt;/a&gt; which took me too long to write because of a certain &lt;code&gt;dy&lt;/code&gt;
        and &lt;code&gt;dx&lt;/code&gt; error...&lt;/p&gt;\n\n&lt;p&gt;EDIT: &lt;sup&gt;I&amp;#39;M
        REALLY GODDAMN MERRY RIGHT NOW.&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dan91xd/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480571070.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danacav", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "godarderik", "can_mod_post": false, "created_utc":
        1480573603.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 3,
        "author_fullname": "t2_60mtd", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "34th in Python. Got a bit stuck on the second
        part (didn''t realize it meant anywhere along your path). Just for fun, in
        5 lines of Python:\n\n    lst = [0,(0,1),(1,0), (0,-1), (-1,0),(0,0)]\n    for
        x in open(\"input1.txt\").read().strip(\"\\n\").split(\",\"):\n        lst[0]
        = (lst[0] + 1 if lst[0] &lt; 3 else 0) if x[0] == \"R\" else (lst[0] - 1 if
        lst[0] &gt; 0 else 3)\n        [lst.append((lst[-1][0] + lst[1 + lst[0]][0],
        lst[-1][1] + lst[1 + lst[0]][1]))  for x in range(int(x[1:]))]\n    print
        \"part 1:\", abs(lst[-1][0]) + abs(lst[-1][1]),\"\\n\", \"part 2:\", abs([x
        for x in lst if lst[5:].count(x) &gt; 1][0][0]) + abs([x for x in lst if lst[5:].count(x)
        &gt; 1][0][1])", "edited": 1480575231.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danacav", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;34th
        in Python. Got a bit stuck on the second part (didn&amp;#39;t realize it meant
        anywhere along your path). Just for fun, in 5 lines of Python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;lst
        = [0,(0,1),(1,0), (0,-1), (-1,0),(0,0)]\nfor x in open(&amp;quot;input1.txt&amp;quot;).read().strip(&amp;quot;\\n&amp;quot;).split(&amp;quot;,&amp;quot;):\n    lst[0]
        = (lst[0] + 1 if lst[0] &amp;lt; 3 else 0) if x[0] == &amp;quot;R&amp;quot;
        else (lst[0] - 1 if lst[0] &amp;gt; 0 else 3)\n    [lst.append((lst[-1][0]
        + lst[1 + lst[0]][0], lst[-1][1] + lst[1 + lst[0]][1]))  for x in range(int(x[1:]))]\nprint
        &amp;quot;part 1:&amp;quot;, abs(lst[-1][0]) + abs(lst[-1][1]),&amp;quot;\\n&amp;quot;,
        &amp;quot;part 2:&amp;quot;, abs([x for x in lst if lst[5:].count(x) &amp;gt;
        1][0][0]) + abs([x for x in lst if lst[5:].count(x) &amp;gt; 1][0][1])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danacav/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573603.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danccj9", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Philboyd_Studge", "can_mod_post": false,
        "created_utc": 1480578310.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 3, "author_fullname": "t2_5xc8m", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Usual Java Verbosity\n\nhttps://gist.github.com/anonymous/b90e430f19d532c3fb45836d87b51582",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danccj9", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Usual
        Java Verbosity&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/anonymous/b90e430f19d532c3fb45836d87b51582\"&gt;https://gist.github.com/anonymous/b90e430f19d532c3fb45836d87b51582&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danccj9/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480578310.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "db18nym",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nilamo",
        "can_mod_post": false, "created_utc": 1481405187.0, "send_replies": true,
        "parent_id": "t1_dandg55", "score": 1, "author_fullname": "t2_8l947", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "I''m also a beginner in Rust, and here''s what I came up with: https://github.com/nilamo/assorted_pub/blob/master/advent_of_code/day1/src/main.rs  \n\nYou
        used a lot of magic numbers (2 means east), while I tried to wrap my mind
        around rust''s enums and structs while I went.  That''s basically the only
        real difference between what we did.  I stole your .split_at(1), since for
        the life of me I couldn''t figure out how to do that without indexing lol.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_db18nym", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        also a beginner in Rust, and here&amp;#39;s what I came up with: &lt;a href=\"https://github.com/nilamo/assorted_pub/blob/master/advent_of_code/day1/src/main.rs\"&gt;https://github.com/nilamo/assorted_pub/blob/master/advent_of_code/day1/src/main.rs&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;You
        used a lot of magic numbers (2 means east), while I tried to wrap my mind
        around rust&amp;#39;s enums and structs while I went.  That&amp;#39;s basically
        the only real difference between what we did.  I stole your .split_at(1),
        since for the life of me I couldn&amp;#39;t figure out how to do that without
        indexing lol.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/db18nym/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1481405187.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "dandg55", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "llamas-are-bae",
        "can_mod_post": false, "created_utc": 1480581340.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 3, "author_fullname": "t2_12r5ww", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Here''s
        my solution in Rust: https://github.com/awesomeaniruddh/advent_of_code_solutions_2016/blob/master/day1/src/main.rs\n\nI''m
        a beginner, so it''s probably terrible, but it works :P", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_dandg55",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my solution
        in Rust: &lt;a href=\"https://github.com/awesomeaniruddh/advent_of_code_solutions_2016/blob/master/day1/src/main.rs\"&gt;https://github.com/awesomeaniruddh/advent_of_code_solutions_2016/blob/master/day1/src/main.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        a beginner, so it&amp;#39;s probably terrible, but it works :P&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dandg55/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480581340.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "more", "data": {"count":
        5, "name": "t1_dao8hga", "id": "dao8hga", "parent_id": "t1_dao7fqf", "depth":
        2, "children": ["dao8hga"]}}], "before": null}}, "user_reports": [], "saved":
        false, "id": "dao7fqf", "banned_at_utc": null, "mod_reason_title": null, "gilded":
        0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author":
        "askalski", "can_mod_post": false, "created_utc": 1480628667.0, "send_replies":
        true, "parent_id": "t1_dannq7u", "score": 2, "author_fullname": "t2_so7w7",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "You can reduce branching further with some additional bit trickery.\n\nBecause
        the ASCII codes for ''L'' and ''R'' differ by their 2nd bit, the RHS of this
        expression evaluates to 3 for ''L'', and 1 for ''R'':\n\n    // index = (index
        + 4 + ((d == ''R'') ? -1 : 1)) % 4;\n    index += 3 - (d &amp; 2);\n\nThere
        is no need to mask the result, because the rest of the code ignores the high
        bits.\n\nIf you use an array instead of separate x/y variables, you can compute
        the array index directly:\n\n    // int&amp; face = (index &amp; 0b01) ? y
        : x;\n    int&amp; face = coords[index &amp; 1];\n\nAnd finally because the
        masked \"sign\" bit is either 0 or 2, you can subtract instead of branching:\n\n    //
        int sign = (index &amp; 0b10) ? -1 : 1;\n    int sign = 1 - (index &amp; 2);\n\nInterestingly
        as a result of the changes, the decimal literals 1 and 2 end up expressing
        intent better than 0b01 and 0b10.\n", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dao7fqf", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can reduce branching further
        with some additional bit trickery.&lt;/p&gt;\n\n&lt;p&gt;Because the ASCII
        codes for &amp;#39;L&amp;#39; and &amp;#39;R&amp;#39; differ by their 2nd
        bit, the RHS of this expression evaluates to 3 for &amp;#39;L&amp;#39;, and
        1 for &amp;#39;R&amp;#39;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// index =
        (index + 4 + ((d == &amp;#39;R&amp;#39;) ? -1 : 1)) % 4;\nindex += 3 - (d
        &amp;amp; 2);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There is no need to mask
        the result, because the rest of the code ignores the high bits.&lt;/p&gt;\n\n&lt;p&gt;If
        you use an array instead of separate x/y variables, you can compute the array
        index directly:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// int&amp;amp; face =
        (index &amp;amp; 0b01) ? y : x;\nint&amp;amp; face = coords[index &amp;amp;
        1];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And finally because the masked
        &amp;quot;sign&amp;quot; bit is either 0 or 2, you can subtract instead of
        branching:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// int sign = (index &amp;amp;
        0b10) ? -1 : 1;\nint sign = 1 - (index &amp;amp; 2);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Interestingly
        as a result of the changes, the decimal literals 1 and 2 end up expressing
        intent better than 0b01 and 0b10.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao7fqf/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480628667.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dannq7u", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "willkill07", "can_mod_post": false, "created_utc":
        1480605568.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 3,
        "author_fullname": "t2_7j0ca", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "C++11 solution\n\nGoals:\n\n* no explicit
        storage of directions\n* minimize branching\n* simple IO processing\n* relatively
        self-documenting\n* use bit hacks where appropriate\n\nhttps://github.com/willkill07/adventofcode2016/blob/master/src/Day01.cpp",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dannq7u", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++11
        solution&lt;/p&gt;\n\n&lt;p&gt;Goals:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;no
        explicit storage of directions&lt;/li&gt;\n&lt;li&gt;minimize branching&lt;/li&gt;\n&lt;li&gt;simple
        IO processing&lt;/li&gt;\n&lt;li&gt;relatively self-documenting&lt;/li&gt;\n&lt;li&gt;use
        bit hacks where appropriate&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/willkill07/adventofcode2016/blob/master/src/Day01.cpp\"&gt;https://github.com/willkill07/adventofcode2016/blob/master/src/Day01.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dannq7u/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480605568.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao2roh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "forkin27", "can_mod_post": false, "created_utc":
        1480623313.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 3,
        "author_fullname": "t2_138kt9", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "JavaScript!\n\nDay 1 (part 1):\n\n    const
        AoCd1p1 = (directions) =&gt; {\n        \n        const nav = { \n            n:
        { L: ''w'', R: ''e'', plane: ''y'', offset: 1 }, \n            e: { L: ''n'',
        R: ''s'', plane: ''x'', offset: 1 }, \n            s: { L: ''e'', R: ''w'',
        plane: ''y'', offset: -1 }, \n            w: { L: ''s'', R: ''n'', plane:
        ''x'', offset: -1 }\n        }\n\n        return Object.values(\n            directions.reduce((state,
        dir) =&gt; {\n                \n                state.dir = nav[state.dir[dir[0]]]\n                state.pos[state.dir.plane]
        += +dir.slice(1) * state.dir.offset\n\n                return state\n            },
        { dir: nav.n, pos: { x: 0, y: 0 } }).pos\n        ).reduce((sum, val) =&gt;
        sum + Math.abs(val), 0)\n    }\n\nDay 1 (part 2):\n\n    const AoCd1p2 = (directions)
        =&gt; {\n        \n        const nav = { \n            n: { L: ''w'', R: ''e'',
        plane: ''y'', offset: 1 }, \n            e: { L: ''n'', R: ''s'', plane: ''x'',
        offset: 1 }, \n            s: { L: ''e'', R: ''w'', plane: ''y'', offset:
        -1 }, \n            w: { L: ''s'', R: ''n'', plane: ''x'', offset: -1 }\n        },
        mem = { x0y0: true }\n\n        let key\n\n        return Object.values(\n            directions.reduce((state,
        dir) =&gt; {\n                \n                if (state.found) return state\n\n                state.dir
        = nav[state.dir[dir[0]]]\n\n                for (let i = 0, j = +dir.slice(1);
        i &lt; j &amp;&amp; !state.found; i++) {\n                    state.pos[state.dir.plane]
        += state.dir.offset\n                    key = `x${state.pos.x}y${state.pos.y}`\n\n                    if
        (mem[key]) state.found = true\n                    else mem[key] = true\n                }\n\n                return
        state\n            }, { dir: nav.n, pos: { x: 0, y: 0 }, found: false }).pos\n        ).reduce((sum,
        val) =&gt; sum + Math.abs(val), 0)\n    }", "edited": 1480629877.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dao2roh", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript!&lt;/p&gt;\n\n&lt;p&gt;Day
        1 (part 1):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const AoCd1p1 = (directions)
        =&amp;gt; {\n\n    const nav = { \n        n: { L: &amp;#39;w&amp;#39;, R:
        &amp;#39;e&amp;#39;, plane: &amp;#39;y&amp;#39;, offset: 1 }, \n        e:
        { L: &amp;#39;n&amp;#39;, R: &amp;#39;s&amp;#39;, plane: &amp;#39;x&amp;#39;,
        offset: 1 }, \n        s: { L: &amp;#39;e&amp;#39;, R: &amp;#39;w&amp;#39;,
        plane: &amp;#39;y&amp;#39;, offset: -1 }, \n        w: { L: &amp;#39;s&amp;#39;,
        R: &amp;#39;n&amp;#39;, plane: &amp;#39;x&amp;#39;, offset: -1 }\n    }\n\n    return
        Object.values(\n        directions.reduce((state, dir) =&amp;gt; {\n\n            state.dir
        = nav[state.dir[dir[0]]]\n            state.pos[state.dir.plane] += +dir.slice(1)
        * state.dir.offset\n\n            return state\n        }, { dir: nav.n, pos:
        { x: 0, y: 0 } }).pos\n    ).reduce((sum, val) =&amp;gt; sum + Math.abs(val),
        0)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Day 1 (part 2):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        AoCd1p2 = (directions) =&amp;gt; {\n\n    const nav = { \n        n: { L:
        &amp;#39;w&amp;#39;, R: &amp;#39;e&amp;#39;, plane: &amp;#39;y&amp;#39;, offset:
        1 }, \n        e: { L: &amp;#39;n&amp;#39;, R: &amp;#39;s&amp;#39;, plane:
        &amp;#39;x&amp;#39;, offset: 1 }, \n        s: { L: &amp;#39;e&amp;#39;, R:
        &amp;#39;w&amp;#39;, plane: &amp;#39;y&amp;#39;, offset: -1 }, \n        w:
        { L: &amp;#39;s&amp;#39;, R: &amp;#39;n&amp;#39;, plane: &amp;#39;x&amp;#39;,
        offset: -1 }\n    }, mem = { x0y0: true }\n\n    let key\n\n    return Object.values(\n        directions.reduce((state,
        dir) =&amp;gt; {\n\n            if (state.found) return state\n\n            state.dir
        = nav[state.dir[dir[0]]]\n\n            for (let i = 0, j = +dir.slice(1);
        i &amp;lt; j &amp;amp;&amp;amp; !state.found; i++) {\n                state.pos[state.dir.plane]
        += state.dir.offset\n                key = `x${state.pos.x}y${state.pos.y}`\n\n                if
        (mem[key]) state.found = true\n                else mem[key] = true\n            }\n\n            return
        state\n        }, { dir: nav.n, pos: { x: 0, y: 0 }, found: false }).pos\n    ).reduce((sum,
        val) =&amp;gt; sum + Math.abs(val), 0)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao2roh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480623313.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dan9v6k", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "taliriktug", "can_mod_post": false, "created_utc":
        1480572631.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_6nadw", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My ugly Python3 solution: https://bitbucket.org/JIghtuse/adventofcode/src/df2b87894dce3982698ecf85ffa24e643ef72998/2016/day01/solution.py?at=master&amp;fileviewer=file-view-default\n\nWas
        75th on first star, but missed leaderboard on second one (messed up with directions
        a bit).\n\nI''m so glad AoC is back!\n\n\n*EDIT*: reimplemented it, now I
        like it more.", "edited": 1480603317.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dan9v6k", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        ugly Python3 solution: &lt;a href=\"https://bitbucket.org/JIghtuse/adventofcode/src/df2b87894dce3982698ecf85ffa24e643ef72998/2016/day01/solution.py?at=master&amp;amp;fileviewer=file-view-default\"&gt;https://bitbucket.org/JIghtuse/adventofcode/src/df2b87894dce3982698ecf85ffa24e643ef72998/2016/day01/solution.py?at=master&amp;amp;fileviewer=file-view-default&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Was
        75th on first star, but missed leaderboard on second one (messed up with directions
        a bit).&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m so glad AoC is back!&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;EDIT&lt;/em&gt;:
        reimplemented it, now I like it more.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dan9v6k/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480572631.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "more", "data": {"count":
        3, "name": "t1_danc2k3", "id": "danc2k3", "parent_id": "t1_danbgpt", "depth":
        2, "children": ["danc2k3"]}}], "before": null}}, "user_reports": [], "saved":
        false, "id": "danbgpt", "banned_at_utc": null, "mod_reason_title": null, "gilded":
        0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author":
        "haoformayor", "can_mod_post": false, "created_utc": 1480576092.0, "send_replies":
        true, "parent_id": "t1_danbdcq", "score": 2, "author_fullname": "t2_r3rja",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "try `L100, R100` on your program (yep, i ran into the exact same
        problem)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danbgpt", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;try
        &lt;code&gt;L100, R100&lt;/code&gt; on your program (yep, i ran into the exact
        same problem)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danbgpt/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480576092.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "danbdcq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "KaminoConsult",
        "can_mod_post": false, "created_utc": 1480575872.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 2, "author_fullname": "t2_xn7e6", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "First
        attempt in PowerShell. Currently not working and not sure why. All examples
        pass. Any input welcome\nhttps://gist.githubusercontent.com/LabtechConsulting/172beb3055cf5be4b301ef5deba9432c",
        "edited": 1480654245.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danbdcq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First
        attempt in PowerShell. Currently not working and not sure why. All examples
        pass. Any input welcome\n&lt;a href=\"https://gist.githubusercontent.com/LabtechConsulting/172beb3055cf5be4b301ef5deba9432c\"&gt;https://gist.githubusercontent.com/LabtechConsulting/172beb3055cf5be4b301ef5deba9432c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danbdcq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480575872.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "more", "data": {"count":
        5, "name": "t1_dbiatol", "id": "dbiatol", "parent_id": "t1_danguhp", "depth":
        2, "children": ["dbiatol", "danmvud"]}}], "before": null}}, "user_reports":
        [], "saved": false, "id": "danguhp", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        true, "author": "TheThiefMaster", "can_mod_post": false, "created_utc": 1480592397.0,
        "send_replies": true, "parent_id": "t1_danc1yy", "score": 2, "author_fullname":
        "t2_n1div", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "Here are mine:\n\nPart 1: http://ideone.com./MwXwqI  \nPart
        2: http://ideone.com./B7zo9e", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_danguhp", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Here are mine:&lt;/p&gt;\n\n&lt;p&gt;Part
        1: &lt;a href=\"http://ideone.com./MwXwqI\"&gt;http://ideone.com./MwXwqI&lt;/a&gt;&lt;br/&gt;\nPart
        2: &lt;a href=\"http://ideone.com./B7zo9e\"&gt;http://ideone.com./B7zo9e&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danguhp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480592397.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danc1yy", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "BafTac", "can_mod_post": false, "created_utc":
        1480577546.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_canjl", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[My C++ implementations (github)](https://github.com/BafDyce/adventofcode/tree/cpp16/2016/c%2B%2B/day01)
        - quite long and straight forward.\n\nI just started learning C++ so feedback
        is welcome! :)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danc1yy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/BafDyce/adventofcode/tree/cpp16/2016/c%2B%2B/day01\"&gt;My
        C++ implementations (github)&lt;/a&gt; - quite long and straight forward.&lt;/p&gt;\n\n&lt;p&gt;I
        just started learning C++ so feedback is welcome! :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danc1yy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480577546.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "more", "data": {"count":
        1, "name": "t1_danqr5z", "id": "danqr5z", "parent_id": "t1_dannjpc", "depth":
        2, "children": ["danqr5z"]}}], "before": null}}, "user_reports": [], "saved":
        false, "id": "dannjpc", "banned_at_utc": null, "mod_reason_title": null, "gilded":
        0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author":
        "willkill07", "can_mod_post": false, "created_utc": 1480605320.0, "send_replies":
        true, "parent_id": "t1_danej65", "score": 3, "author_fullname": "t2_7j0ca",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "You can clean up your parsing with something like:\n\n\n    char
        direction;\n    int distance;\n    while (std::cin &gt;&gt; direction &gt;&gt;
        distance) {\n      // body\n      std::cin.ignore (1, '',''); // consume up
        to one character until comma seen\n    }\n", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dannjpc", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can clean up your parsing
        with something like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;char direction;\nint
        distance;\nwhile (std::cin &amp;gt;&amp;gt; direction &amp;gt;&amp;gt; distance)
        {\n  // body\n  std::cin.ignore (1, &amp;#39;,&amp;#39;); // consume up to
        one character until comma seen\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dannjpc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480605320.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danej65", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "VideoPrincess", "can_mod_post": false,
        "created_utc": 1480584645.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 2, "author_fullname": "t2_sg4e6", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "My C++ solution [on
        GitHub](https://github.com/pmillerchip/adventofcode2016/blob/master/aoc1.cpp)
        - takes the input as a command line parameter and solves both stars. It uses
        C I/O functions (old habits die hard!) but is otherwise nice C++11.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danej65",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My C++ solution &lt;a
        href=\"https://github.com/pmillerchip/adventofcode2016/blob/master/aoc1.cpp\"&gt;on
        GitHub&lt;/a&gt; - takes the input as a command line parameter and solves
        both stars. It uses C I/O functions (old habits die hard!) but is otherwise
        nice C++11.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danej65/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480584645.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "daninm4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "porphyro",
        "can_mod_post": false, "created_utc": 1480597139.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 2, "author_fullname": "t2_5i7c1", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "#Wolfram
        Language#\n\n    input = Map[\n     ToExpression, {StringTake[#, 1], StringDrop[#,
        1]} &amp; /@      \n     StringSplit[&lt;-input-&gt;], 1];R = -I; L = I;\n\n    process[{z_,
        cDir_}, insList_] := {z +cDir*insList[[1]]*insList[[2]],\n        cDir*insList[[1]]}\n\n    Fold[process,
        {0, I}, input]\n\nPart 2 similar.", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_daninm4", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Wolfram Language&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;input
        = Map[\n ToExpression, {StringTake[#, 1], StringDrop[#, 1]} &amp;amp; /@      \n
        StringSplit[&amp;lt;-input-&amp;gt;], 1];R = -I; L = I;\n\nprocess[{z_, cDir_},
        insList_] := {z +cDir*insList[[1]]*insList[[2]],\n    cDir*insList[[1]]}\n\nFold[process,
        {0, I}, input]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2 similar.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daninm4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480597139.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "daniwhq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Perl, hooray for perl!\n\nhttps://www.dropbox.com/s/f0n45gbuh9dhemz/day01.pl?dl=0",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Perl,
        hooray for perl!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.dropbox.com/s/f0n45gbuh9dhemz/day01.pl?dl=0\"&gt;https://www.dropbox.com/s/f0n45gbuh9dhemz/day01.pl?dl=0&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daniwhq/",
        "num_reports": null, "locked": false, "name": "t1_daniwhq", "created": 1480597688.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480597688.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danj2lo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jweather",
        "can_mod_post": false, "created_utc": 1480598041.0, "send_replies": true,
        "parent_id": "t1_danj10b", "score": 1, "author_fullname": "t2_32i5r", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "My first attempt I forgot the abs() on the distance sum and was very confused
        for 37 seconds.  On reflection I should have stored visited locations as a
        hash map on the string \"x,y\" instead of the linear array search, but this
        worked well enough.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danj2lo", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        first attempt I forgot the abs() on the distance sum and was very confused
        for 37 seconds.  On reflection I should have stored visited locations as a
        hash map on the string &amp;quot;x,y&amp;quot; instead of the linear array
        search, but this worked well enough.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danj2lo/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480598041.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danj10b", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jweather", "can_mod_post": false, "created_utc":
        1480597948.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_32i5r", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Vector multiplication ftw:\n\n\tvar inp =
        require(''fs'').readFileSync(''input.txt'').toString();\n\n\tvar directions
        = [[1,0],[0,1],[-1,0],[0,-1]];\n\tvar dir = 0;\n\n\tvar x=0, y=0;\n\tvar locs
        = [];\n\tvar twice = false;\n\n\tinp.split('', '').forEach(function (c, i)
        {\n\t\tif (c[0] == ''R'') {\n\t\t\tdir = (dir+1)%4;\n\t\t} else {\n\t\t\tdir
        = (dir-1+4)%4;\n\t\t}\n\t\tval = c.substring(1);\n\t\t/* // 1st star version\n\t\t\tx
        += directions[dir][0] * val;\n\t\t\ty += directions[dir][1] * val;\n\t\t*/\n\t\t//
        2nd star\n\t\twhile (val &gt; 0) {\n\t\t\tx += directions[dir][0];\n\t\t\ty
        += directions[dir][1];\n\t\t\tvar loc = [x,y];\n\t\t\tlocs.forEach(function(l)
        {\n\t\t\t\tif (l[0] == x &amp;&amp; l[1] == y &amp;&amp; !twice) {\n\t\t\t\t\tconsole.log(''twice
        at '', x,y,Math.abs(x)+Math.abs(y));\n\t\t\t\t\ttwice = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tlocs.push(loc);\n\t\t\tval--;\n\t\t}\n\t});\n\n\tconsole.log(x,y,Math.abs(x)+Math.abs(y));",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danj10b", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Vector
        multiplication ftw:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var inp = require(&amp;#39;fs&amp;#39;).readFileSync(&amp;#39;input.txt&amp;#39;).toString();\n\nvar
        directions = [[1,0],[0,1],[-1,0],[0,-1]];\nvar dir = 0;\n\nvar x=0, y=0;\nvar
        locs = [];\nvar twice = false;\n\ninp.split(&amp;#39;, &amp;#39;).forEach(function
        (c, i) {\n    if (c[0] == &amp;#39;R&amp;#39;) {\n        dir = (dir+1)%4;\n    }
        else {\n        dir = (dir-1+4)%4;\n    }\n    val = c.substring(1);\n    /*
        // 1st star version\n        x += directions[dir][0] * val;\n        y +=
        directions[dir][1] * val;\n    */\n    // 2nd star\n    while (val &amp;gt;
        0) {\n        x += directions[dir][0];\n        y += directions[dir][1];\n        var
        loc = [x,y];\n        locs.forEach(function(l) {\n            if (l[0] ==
        x &amp;amp;&amp;amp; l[1] == y &amp;amp;&amp;amp; !twice) {\n                console.log(&amp;#39;twice
        at &amp;#39;, x,y,Math.abs(x)+Math.abs(y));\n                twice = true;\n            }\n        });\n        locs.push(loc);\n        val--;\n    }\n});\n\nconsole.log(x,y,Math.abs(x)+Math.abs(y));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danj10b/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480597948.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dank186", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mcpower_", "can_mod_post": false, "created_utc":
        1480599870.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_5go91", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here''s my quick and dirty Python solution.
        It could definitely be improved, but \u00af\\\\\\_(\u30c4)\\_/\u00af\n\n\n    PART2
        = False\n    inp = \"R8, R4, R4, R8\"  # paste your input here\n    inp2 =
        [(s[0], int(s[1:])) for s in inp.split(\", \")]\n    dirs = [0+1j, 1+0j, 0-1j,
        -1+0j]\n    cur_dir = 0\n    cur_pos = 0+0j\n    seen = {cur_pos}\n    for
        direction, num in inp2:\n        cur_dir = (cur_dir + 2*(direction == \"L\")
        - 1) % 4\n        for i in range(num):\n            cur_pos += dirs[cur_dir]\n            if
        PART2 and cur_pos in seen:\n                break\n            seen.add(cur_pos)\n        else:\n            continue\n        break\n    print(abs(cur_pos.imag)
        + abs(cur_pos.real))", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dank186", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        my quick and dirty Python solution. It could definitely be improved, but \u00af\\_(\u30c4)_/\u00af&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;PART2
        = False\ninp = &amp;quot;R8, R4, R4, R8&amp;quot;  # paste your input here\ninp2
        = [(s[0], int(s[1:])) for s in inp.split(&amp;quot;, &amp;quot;)]\ndirs =
        [0+1j, 1+0j, 0-1j, -1+0j]\ncur_dir = 0\ncur_pos = 0+0j\nseen = {cur_pos}\nfor
        direction, num in inp2:\n    cur_dir = (cur_dir + 2*(direction == &amp;quot;L&amp;quot;)
        - 1) % 4\n    for i in range(num):\n        cur_pos += dirs[cur_dir]\n        if
        PART2 and cur_pos in seen:\n            break\n        seen.add(cur_pos)\n    else:\n        continue\n    break\nprint(abs(cur_pos.imag)
        + abs(cur_pos.real))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dank186/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480599870.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dankg3h", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Morego", "can_mod_post": false, "created_utc":
        1480600607.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_al3vl", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My simple, yet more then likely crappy JS
        solution.\nI have enourmous problem with finding solution to solve Part 2.\nIf
        only I have knew about every step being important from the start...\n\n[My
        solution](https://gist.github.com/Demagogue/9f219f5a0cc318cfcdc4443e5957135f)\n\n
        \n", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dankg3h", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        simple, yet more then likely crappy JS solution.\nI have enourmous problem
        with finding solution to solve Part 2.\nIf only I have knew about every step
        being important from the start...&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/Demagogue/9f219f5a0cc318cfcdc4443e5957135f\"&gt;My
        solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dankg3h/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480600607.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danphkp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jaco__",
        "can_mod_post": false, "created_utc": 1480607837.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 2, "author_fullname": "t2_kc37r", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Solution
        in SML because i am preparing for an exam that uses SML.\nThere probably is
        some library functions I have missed, like contains.\n\n\n    exception Excp;\n\n    \n    fun
        split str = \n        case Int.fromString(String.substring(str, 1, String.size(str)
        - 1)) of\n            NONE =&gt; raise Excp\n        |   SOME(x) =&gt; (String.sub(str,0),x);\n    \n    datatype
        point = Point of int * int;\n    \n    fun nextDirIndex #\"R\" i =(i + 1)
        mod 4\n    |   nextDirIndex #\"L\" i =(i - 1) mod 4\n    |   nextDirIndex
        _ _ = raise Excp;\n    \n    \n    fun getDir i = List.nth([(0,1), (1,0),
        (0,~1), (~1,0)], i);\n    \n    \n    fun walk [] _ (Point(x,y)) = [(x,y)]\n    |   walk
        (s::ss) dirIndex (Point(x,y)) =\n        let\n            val (direction,
        nr) = split s\n            val nextDirI = nextDirIndex direction dirIndex\n            val
        (dirX,dirY) = getDir nextDirI\n            val range = List.tabulate(nr, fn
        x =&gt; x)\n            val steps = map (fn n =&gt; (x + dirX*n, y + dirY*n))
        range\n        in\n            steps @ walk ss nextDirI (Point(x + dirX *
        nr,y + dirY * nr))\n        end;\n        \n    (* read line from file *)\n    val
        infile = (TextIO.openIn \"day1.txt\");\n    val ordersStr = case (TextIO.inputLine
        infile) of SOME(x) =&gt; [x] | NONE =&gt; raise Excp;\n    TextIO.closeIn
        infile;\n    \n    (* split on , and remove whitespace *)\n    fun curry2
        f x y = f(x,y);\n    val ordersSplit =  String.fields (fn c =&gt; c = #\",\"
        orelse c = #\" \") (hd ordersStr);\n    val ordersFiltered = List.filter ((curry2
        op&lt;&gt;) \"\") ordersSplit;\n    \n    val tuples = walk ordersFiltered
        0 (Point(0,0)); (* get all blocks/points visited *)\n    \n    \n    val (x,y)
        = List.last tuples;\n    val resultPart1 = abs(x)+abs(y);\n    \n    \n    fun
        contains _ [] = false\n    |   contains (x:int*int) (y::ys) = if x = y then
        true else contains x ys;\n    \n    fun findFirstDupl [] = raise Excp\n    |   findFirstDupl
        (x::xs) = if contains x xs then x else findFirstDupl xs;\n    \n    \n    val
        (x,y) = findFirstDupl tuples;\n    val resultPart2 = abs(x)+abs(y);\n    ",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danphkp", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution
        in SML because i am preparing for an exam that uses SML.\nThere probably is
        some library functions I have missed, like contains.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;exception
        Excp;\n\n\nfun split str = \n    case Int.fromString(String.substring(str,
        1, String.size(str) - 1)) of\n        NONE =&amp;gt; raise Excp\n    |   SOME(x)
        =&amp;gt; (String.sub(str,0),x);\n\ndatatype point = Point of int * int;\n\nfun
        nextDirIndex #&amp;quot;R&amp;quot; i =(i + 1) mod 4\n|   nextDirIndex #&amp;quot;L&amp;quot;
        i =(i - 1) mod 4\n|   nextDirIndex _ _ = raise Excp;\n\n\nfun getDir i = List.nth([(0,1),
        (1,0), (0,~1), (~1,0)], i);\n\n\nfun walk [] _ (Point(x,y)) = [(x,y)]\n|   walk
        (s::ss) dirIndex (Point(x,y)) =\n    let\n        val (direction, nr) = split
        s\n        val nextDirI = nextDirIndex direction dirIndex\n        val (dirX,dirY)
        = getDir nextDirI\n        val range = List.tabulate(nr, fn x =&amp;gt; x)\n        val
        steps = map (fn n =&amp;gt; (x + dirX*n, y + dirY*n)) range\n    in\n        steps
        @ walk ss nextDirI (Point(x + dirX * nr,y + dirY * nr))\n    end;\n\n(* read
        line from file *)\nval infile = (TextIO.openIn &amp;quot;day1.txt&amp;quot;);\nval
        ordersStr = case (TextIO.inputLine infile) of SOME(x) =&amp;gt; [x] | NONE
        =&amp;gt; raise Excp;\nTextIO.closeIn infile;\n\n(* split on , and remove
        whitespace *)\nfun curry2 f x y = f(x,y);\nval ordersSplit =  String.fields
        (fn c =&amp;gt; c = #&amp;quot;,&amp;quot; orelse c = #&amp;quot; &amp;quot;)
        (hd ordersStr);\nval ordersFiltered = List.filter ((curry2 op&amp;lt;&amp;gt;)
        &amp;quot;&amp;quot;) ordersSplit;\n\nval tuples = walk ordersFiltered 0 (Point(0,0));
        (* get all blocks/points visited *)\n\n\nval (x,y) = List.last tuples;\nval
        resultPart1 = abs(x)+abs(y);\n\n\nfun contains _ [] = false\n|   contains
        (x:int*int) (y::ys) = if x = y then true else contains x ys;\n\nfun findFirstDupl
        [] = raise Excp\n|   findFirstDupl (x::xs) = if contains x xs then x else
        findFirstDupl xs;\n\n\nval (x,y) = findFirstDupl tuples;\nval resultPart2
        = abs(x)+abs(y);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danphkp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480607837.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 2, "removal_reason": null, "link_id": "t3_5fur6q",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "dao2f3m", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        true, "author": "[deleted]", "can_mod_post": false, "send_replies": true,
        "parent_id": "t1_danqhnz", "score": 2, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Nice. I see
        we both used the same trick with the identity matrix.", "edited": false, "author_flair_css_class":
        null, "collapsed": false, "downs": 0, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Nice. I see we both used the same trick
        with the identity matrix.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao2f3m/",
        "num_reports": null, "locked": false, "name": "t1_dao2f3m", "created": 1480622917.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480622917.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "danqhnz", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "omnster", "can_mod_post": false, "created_utc":
        1480609087.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_mp2qp", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My ugly solution in Mathematica\n\n\tSetDirectory@NotebookDirectory[];\n\tinput
        = Import[\"./input/input_01.txt\"];\n\n\tClear[ r, l, i];\n\t(steps = input
        // StringSplit[ # , \", \"] &amp; // \n\t\t StringCases[ # , \n\t\t   a_ ~~
        b___ :&gt; \n\t\t\tSequence[ {{a /. { \"R\" -&gt; r , \"L\" -&gt; l }}}~Join~\n\t\t\t  Table[{i},
        ToExpression@b - 1]]] &amp;  // Flatten);\n\tr = { { 0, 1 }, { -1 , 0 } };\n\tl
        = { { 0 , -1 } , { 1 , 0 } };\n\ti = IdentityMatrix@2 ;\n\n\t(*{ {coordinate
        , direction } ,  order} *)\n\tstep = \n\t Function[ { prevstep , change} ,
        {  \n\t   prevstep [[1 ]] +   change .prevstep [[2 ]] ,  \n\t   change .prevstep
        [[2 ]] }]\n\n\tFold[ step , { {0, 0} , {0, 1} } , steps ] // First // Total\n\n\tFoldList[
        step , { {0, 0} , {0, 1} } , steps ]  [[All, 1 ]]  // \n\t\tGather // Select[
        Length@# &gt; 1 &amp; ] // # [[1, 1 ]] &amp; // Total\n\nAnd the path https://i.imgur.com/5WtmXJt.png\n",
        "edited": 1480610722.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danqhnz", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        ugly solution in Mathematica&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;SetDirectory@NotebookDirectory[];\ninput
        = Import[&amp;quot;./input/input_01.txt&amp;quot;];\n\nClear[ r, l, i];\n(steps
        = input // StringSplit[ # , &amp;quot;, &amp;quot;] &amp;amp; // \n     StringCases[
        # , \n       a_ ~~ b___ :&amp;gt; \n        Sequence[ {{a /. { &amp;quot;R&amp;quot;
        -&amp;gt; r , &amp;quot;L&amp;quot; -&amp;gt; l }}}~Join~\n          Table[{i},
        ToExpression@b - 1]]] &amp;amp;  // Flatten);\nr = { { 0, 1 }, { -1 , 0 }
        };\nl = { { 0 , -1 } , { 1 , 0 } };\ni = IdentityMatrix@2 ;\n\n(*{ {coordinate
        , direction } ,  order} *)\nstep = \n Function[ { prevstep , change} , {  \n   prevstep
        [[1 ]] +   change .prevstep [[2 ]] ,  \n   change .prevstep [[2 ]] }]\n\nFold[
        step , { {0, 0} , {0, 1} } , steps ] // First // Total\n\nFoldList[ step ,
        { {0, 0} , {0, 1} } , steps ]  [[All, 1 ]]  // \n    Gather // Select[ Length@#
        &amp;gt; 1 &amp;amp; ] // # [[1, 1 ]] &amp;amp; // Total\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And
        the path &lt;a href=\"https://i.imgur.com/5WtmXJt.png\"&gt;https://i.imgur.com/5WtmXJt.png&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danqhnz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480609087.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danrn8o", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Morris2178", "can_mod_post": false, "created_utc":
        1480610479.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_138f05", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My Java code is not as clean as it could
        be, but it works for part 1, port it for part 2 is your part ;D\n\n    public
        static void main(String[] args) {\n        int degrees = 0;\n        int x
        = 0, y = 0;\n        System.out.println(\"start\");\n        for (String movement
        : input) {\n            degrees += movement.substring(0, 1).equals(\"R\")
        ? (90) : (-90);\n            int steps = Integer.parseInt(movement.substring(1,
        movement.length()));\n            switch (degrees % 360) {\n                case
        0:\n                    y += steps;\n                    break;\n                case
        90:\n                case -270:\n                    x += steps;\n                    break;\n                case
        180:\n                case -180:\n                    y -= steps;\n                    break;\n                case
        270:\n                case -90:\n                    x -= steps;\n                    break;\n            }\n\n        }\n        int
        away = Math.abs(x) + Math.abs(y);\n        System.out.println(\"Your destination
        is \" + away + \" blocks away\");\n    }", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_danrn8o", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Java code is not as clean
        as it could be, but it works for part 1, port it for part 2 is your part ;D&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        static void main(String[] args) {\n    int degrees = 0;\n    int x = 0, y
        = 0;\n    System.out.println(&amp;quot;start&amp;quot;);\n    for (String
        movement : input) {\n        degrees += movement.substring(0, 1).equals(&amp;quot;R&amp;quot;)
        ? (90) : (-90);\n        int steps = Integer.parseInt(movement.substring(1,
        movement.length()));\n        switch (degrees % 360) {\n            case 0:\n                y
        += steps;\n                break;\n            case 90:\n            case
        -270:\n                x += steps;\n                break;\n            case
        180:\n            case -180:\n                y -= steps;\n                break;\n            case
        270:\n            case -90:\n                x -= steps;\n                break;\n        }\n\n    }\n    int
        away = Math.abs(x) + Math.abs(y);\n    System.out.println(&amp;quot;Your destination
        is &amp;quot; + away + &amp;quot; blocks away&amp;quot;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danrn8o/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480610479.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "more", "data": {"count":
        2, "name": "t1_daoz9l2", "id": "daoz9l2", "parent_id": "t1_daotqcn", "depth":
        2, "children": ["daoz9l2"]}}], "before": null}}, "user_reports": [], "saved":
        false, "id": "daotqcn", "banned_at_utc": null, "mod_reason_title": null, "gilded":
        0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author":
        "sinokawori", "can_mod_post": false, "created_utc": 1480661578.0, "send_replies":
        true, "parent_id": "t1_danu36e", "score": 2, "author_fullname": "t2_ptfb3",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "And I thought I was original for using complex numbers haha\n\nMine
        was in c++ though, here it is just for fun\n\n**PART 1**\n\n    int main()
        {\n        std::ifstream file(\"input.txt\");\n        std::string line =
        \"\";\n        std::getline(file, line);\n    \n        std::regex reg(\"([RL])([0-9]+)\");\n        std::sregex_iterator
        match = std::sregex_iterator(line.cbegin(), line.cend(), reg);\n    \n        std::complex&lt;float&gt;
        orientation{0, 1};\n        std::complex&lt;float&gt; position{0, 0};\n    \n        for
        (; match != std::sregex_iterator(); ++match) {\n            if ((*match)[1]
        == ''R'') {\n                orientation *= std::complex&lt;float&gt;{0,-1};\n            }
        else if ((*match)[1] == ''L'') {\n                orientation *= std::complex&lt;float&gt;{0,
        1};\n            }\n            position += orientation * std::stof((*match)[2]);\n        }\n    \n        std::cout
        &lt;&lt; std::abs(position.real()) + std::abs(position.imag()) &lt;&lt; std::endl;\n    \n        return
        0;\n    } \n\n\n**PART 2**\n\n    int main() {\n        std::ifstream file(\"input.txt\");\n        std::string
        line = \"\";\n        std::getline(file, line);\n    \n        std::regex
        reg(\"([RL])([0-9]+)\");\n        std::sregex_iterator match = std::sregex_iterator(line.cbegin(),
        line.cend(), reg);\n    \n        std::complex&lt;float&gt; orientation{0,
        1};\n        std::complex&lt;float&gt; position{0, 0};\n    \n        std::vector&lt;std::complex&lt;float&gt;
        &gt; location_history{position};\n    \n        for (; match != std::sregex_iterator();
        ++match) {\n            if ((*match)[1] == ''R'') {\n                orientation
        *= std::complex&lt;float&gt;{0,-1};\n            } else if ((*match)[1] ==
        ''L'') {\n                orientation *= std::complex&lt;float&gt;{0, 1};\n            }\n    \n            for
        (int i = 0; i &lt; std::stoi((*match)[2]); ++i) {\n                position
        += orientation * 1.f;\n    \n                if (std::find(location_history.begin(),
        location_history.end(), position) != location_history.end()) {\n                    std::cout
        &lt;&lt; std::abs(position.real()) + std::abs(position.imag()) &lt;&lt; std::endl;
        //FOUND IT!!!\n                    goto evil_goto_just_for_fun; //Mwouahaha\n                }\n                location_history.push_back(position);\n            }\n        }\n    \n        evil_goto_just_for_fun:\n    \n        return
        0;\n    }", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_daotqcn", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And
        I thought I was original for using complex numbers haha&lt;/p&gt;\n\n&lt;p&gt;Mine
        was in c++ though, here it is just for fun&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;PART
        1&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int main() {\n    std::ifstream
        file(&amp;quot;input.txt&amp;quot;);\n    std::string line = &amp;quot;&amp;quot;;\n    std::getline(file,
        line);\n\n    std::regex reg(&amp;quot;([RL])([0-9]+)&amp;quot;);\n    std::sregex_iterator
        match = std::sregex_iterator(line.cbegin(), line.cend(), reg);\n\n    std::complex&amp;lt;float&amp;gt;
        orientation{0, 1};\n    std::complex&amp;lt;float&amp;gt; position{0, 0};\n\n    for
        (; match != std::sregex_iterator(); ++match) {\n        if ((*match)[1] ==
        &amp;#39;R&amp;#39;) {\n            orientation *= std::complex&amp;lt;float&amp;gt;{0,-1};\n        }
        else if ((*match)[1] == &amp;#39;L&amp;#39;) {\n            orientation *=
        std::complex&amp;lt;float&amp;gt;{0, 1};\n        }\n        position += orientation
        * std::stof((*match)[2]);\n    }\n\n    std::cout &amp;lt;&amp;lt; std::abs(position.real())
        + std::abs(position.imag()) &amp;lt;&amp;lt; std::endl;\n\n    return 0;\n}
        \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;PART 2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        main() {\n    std::ifstream file(&amp;quot;input.txt&amp;quot;);\n    std::string
        line = &amp;quot;&amp;quot;;\n    std::getline(file, line);\n\n    std::regex
        reg(&amp;quot;([RL])([0-9]+)&amp;quot;);\n    std::sregex_iterator match =
        std::sregex_iterator(line.cbegin(), line.cend(), reg);\n\n    std::complex&amp;lt;float&amp;gt;
        orientation{0, 1};\n    std::complex&amp;lt;float&amp;gt; position{0, 0};\n\n    std::vector&amp;lt;std::complex&amp;lt;float&amp;gt;
        &amp;gt; location_history{position};\n\n    for (; match != std::sregex_iterator();
        ++match) {\n        if ((*match)[1] == &amp;#39;R&amp;#39;) {\n            orientation
        *= std::complex&amp;lt;float&amp;gt;{0,-1};\n        } else if ((*match)[1]
        == &amp;#39;L&amp;#39;) {\n            orientation *= std::complex&amp;lt;float&amp;gt;{0,
        1};\n        }\n\n        for (int i = 0; i &amp;lt; std::stoi((*match)[2]);
        ++i) {\n            position += orientation * 1.f;\n\n            if (std::find(location_history.begin(),
        location_history.end(), position) != location_history.end()) {\n                std::cout
        &amp;lt;&amp;lt; std::abs(position.real()) + std::abs(position.imag()) &amp;lt;&amp;lt;
        std::endl; //FOUND IT!!!\n                goto evil_goto_just_for_fun; //Mwouahaha\n            }\n            location_history.push_back(position);\n        }\n    }\n\n    evil_goto_just_for_fun:\n\n    return
        0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daotqcn/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480661578.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "danu36e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JakDrako",
        "can_mod_post": false, "created_utc": 1480613359.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 2, "author_fullname": "t2_477xl", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "**VB.Net**
        solution (posted in it''s own topic, but this seems a better place for it...)\n\n#Part
        1\n\n\tSub Main\n\t\tDim position = New Complex(0, 0), direction = New Complex(0,
        1) '' Facing North\n\t\tFor Each move In split(input, \", \")\n\t\t\tdirection
        *= If(Move(0) = \"R\", 1, -1) * Complex.ImaginaryOne\n\t\t\tposition += direction
        * Cint(move.Substring(1))\n\t\tNext\n\t\tConsole.WriteLine($\"Easter Bunny
        HQ is {math.Abs(position.Real) + math.Abs(position.Imaginary)} blocks away.\")\n\tEnd
        Sub\n#Part 2\n\n\tSub Main\n\t\tDim position = New Complex(0, 0), direction
        = New Complex(0, 1) '' Facing North\n\t\tDim visited = New HashSet(Of Complex)({position})\n\t\tFor
        Each move In split(input, \", \")\n\t\t\tdirection *= If(Move(0) = \"R\",
        1, -1) * Complex.ImaginaryOne\n\t\t\tFor i = 1 To Cint(move.Substring(1))\n\t\t\t\tposition
        += direction\n\t\t\t\tIf visited.Contains(position) Then Goto Found Else visited.Add(position)\n\t\t\tNext\n\t\tNext\n\tFound:\n\t\tConsole.WriteLine($\"Easter
        Bunny HQ is {math.Abs(position.Real) + math.Abs(position.Imaginary)} blocks
        away.\")\n\tEnd Sub\n", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danu36e", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;VB.Net&lt;/strong&gt;
        solution (posted in it&amp;#39;s own topic, but this seems a better place
        for it...)&lt;/p&gt;\n\n&lt;h1&gt;Part 1&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;Sub
        Main\n    Dim position = New Complex(0, 0), direction = New Complex(0, 1)
        &amp;#39; Facing North\n    For Each move In split(input, &amp;quot;, &amp;quot;)\n        direction
        *= If(Move(0) = &amp;quot;R&amp;quot;, 1, -1) * Complex.ImaginaryOne\n        position
        += direction * Cint(move.Substring(1))\n    Next\n    Console.WriteLine($&amp;quot;Easter
        Bunny HQ is {math.Abs(position.Real) + math.Abs(position.Imaginary)} blocks
        away.&amp;quot;)\nEnd Sub\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Part 2&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;Sub
        Main\n    Dim position = New Complex(0, 0), direction = New Complex(0, 1)
        &amp;#39; Facing North\n    Dim visited = New HashSet(Of Complex)({position})\n    For
        Each move In split(input, &amp;quot;, &amp;quot;)\n        direction *= If(Move(0)
        = &amp;quot;R&amp;quot;, 1, -1) * Complex.ImaginaryOne\n        For i = 1
        To Cint(move.Substring(1))\n            position += direction\n            If
        visited.Contains(position) Then Goto Found Else visited.Add(position)\n        Next\n    Next\nFound:\n    Console.WriteLine($&amp;quot;Easter
        Bunny HQ is {math.Abs(position.Real) + math.Abs(position.Imaginary)} blocks
        away.&amp;quot;)\nEnd Sub\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danu36e/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480613359.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "daocxkc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "askalski",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_dao2d1a", "score":
        3, "author_fullname": "t2_so7w7", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Part 1 in C with shenanigans.\n\n    #include
        &lt;stdio.h&gt;\n    #include &lt;stdlib.h&gt;\n    \n    int main(void)\n    {\n        int
        count, tmp, dir = 0, pos[] = {0,0};\n        do {\n            dir += ~getchar();\n            for
        (count = getchar() &amp; 15;\n                 (tmp = getchar() &amp; 15)
        &lt; 10;\n                 count = tmp + count * 10);\n            pos[dir
        &amp; 1] += (1 &amp; dir &gt;&gt; 1) + (count ^ -(1 &amp; dir &gt;&gt; 1));\n        }
        while (getchar() &gt; 0);\n        printf(\"Position: %d, %d\\n\", pos[1],
        pos[0]);\n        printf(\"Distance: %d\\n\", abs(pos[0]) + abs(pos[1]));\n        return
        0;\n    }\n", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_daocxkc", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part
        1 in C with shenanigans.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n#include
        &amp;lt;stdlib.h&amp;gt;\n\nint main(void)\n{\n    int count, tmp, dir = 0,
        pos[] = {0,0};\n    do {\n        dir += ~getchar();\n        for (count =
        getchar() &amp;amp; 15;\n             (tmp = getchar() &amp;amp; 15) &amp;lt;
        10;\n             count = tmp + count * 10);\n        pos[dir &amp;amp; 1]
        += (1 &amp;amp; dir &amp;gt;&amp;gt; 1) + (count ^ -(1 &amp;amp; dir &amp;gt;&amp;gt;
        1));\n    } while (getchar() &amp;gt; 0);\n    printf(&amp;quot;Position:
        %d, %d\\n&amp;quot;, pos[1], pos[0]);\n    printf(&amp;quot;Distance: %d\\n&amp;quot;,
        abs(pos[0]) + abs(pos[1]));\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daocxkc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480635534.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1480635534.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dao2d1a", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "askalski", "can_mod_post": false, "created_utc":
        1480622851.0, "send_replies": true, "parent_id": "t1_danv909", "score": 2,
        "author_fullname": "t2_so7w7", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Part 1 in UCBLogo with turtle
        graphics.  If there were a way to query the color under the turtle, I would
        have used that to do Part 2 as well.\n\n    #! /usr/bin/ucblogo\n    \n    TO
        STRIPCOMMA :STR\n        OP IFELSE (LAST :STR) = \", [BL :STR] [:STR]\n    END\n    \n    TO
        FOLLOW :LIST\n        IF EMPTYP :LIST [STOP]\n        IFELSE EQUALP (FIRST
        FIRST :LIST) \"L [LT 90] [RT 90]\n        SETPC (2 + 2 * RANDOM 2)\n        FD
        (BF STRIPCOMMA FIRST :LIST)\n        WAIT 2\n        FOLLOW BF :LIST\n    END\n    \n    TO
        ABS :NUM\n        OP IFELSE :NUM &lt; 0 [-NUM] [NUM]\n    END\n    \n    TO
        MANHATTAN :POS\n        OP (ABS FIRST :POS) + (ABS LAST :POS)\n    END\n    \n    MAKE
        \"ERRACT [PR (FIRST BF ERROR) BYE]\n    \n    MAKE \"FILENAME \"input.txt\n    OPENREAD
        :FILENAME\n    SETREAD :FILENAME\n    FOLLOW RL\n    CLOSE :FILENAME\n    \n    (PR
        \"Distance: (MANHATTAN POS))\n    \n    HT WAIT 60 BYE\n", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_dao2d1a",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part 1 in UCBLogo with
        turtle graphics.  If there were a way to query the color under the turtle,
        I would have used that to do Part 2 as well.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!
        /usr/bin/ucblogo\n\nTO STRIPCOMMA :STR\n    OP IFELSE (LAST :STR) = &amp;quot;,
        [BL :STR] [:STR]\nEND\n\nTO FOLLOW :LIST\n    IF EMPTYP :LIST [STOP]\n    IFELSE
        EQUALP (FIRST FIRST :LIST) &amp;quot;L [LT 90] [RT 90]\n    SETPC (2 + 2 *
        RANDOM 2)\n    FD (BF STRIPCOMMA FIRST :LIST)\n    WAIT 2\n    FOLLOW BF :LIST\nEND\n\nTO
        ABS :NUM\n    OP IFELSE :NUM &amp;lt; 0 [-NUM] [NUM]\nEND\n\nTO MANHATTAN
        :POS\n    OP (ABS FIRST :POS) + (ABS LAST :POS)\nEND\n\nMAKE &amp;quot;ERRACT
        [PR (FIRST BF ERROR) BYE]\n\nMAKE &amp;quot;FILENAME &amp;quot;input.txt\nOPENREAD
        :FILENAME\nSETREAD :FILENAME\nFOLLOW RL\nCLOSE :FILENAME\n\n(PR &amp;quot;Distance:
        (MANHATTAN POS))\n\nHT WAIT 60 BYE\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao2d1a/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480622851.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danv909", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "askalski", "can_mod_post": false, "created_utc":
        1480614712.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_so7w7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Part 1 as a Perl regular expression.\n\n    #!
        /usr/bin/env perl\n    \n    use strict;\n    use warnings;\n    \n    local
        $/ = undef;\n    \n    my ($x, $y, $count);\n    \n    (my $input = &lt;&gt;)
        =~ s/\n    \t(?{ $x = $y = $count = 0 })\n    \n    \t^\\s*(?&amp;NORTH)\n    \n    \t(?:
        (.)\n    \t\t(?{ die \"Parse error at ''$^N'' (offset @{[ $+[0] - 1 ]})\\n\"
        })\n    \t)?\n    \n    \t(?(DEFINE)\n    \t\t(?&lt;COUNT&gt; (\\d+) (?{ $count
        = $^N }) [\\s,]* )\n    \t\t(?&lt;NORTH&gt; (?{ $y += $count })\n    \t\t\t(?:
        L(?&amp;COUNT)(?&amp;WEST)  | R(?&amp;COUNT)(?&amp;EAST)  )?\n    \t\t)\n    \t\t(?&lt;EAST&gt;  (?{
        $x += $count })\n    \t\t\t(?: L(?&amp;COUNT)(?&amp;NORTH) | R(?&amp;COUNT)(?&amp;SOUTH)
        )?\n    \t\t)\n    \t\t(?&lt;SOUTH&gt; (?{ $y -= $count })\n    \t\t\t(?:
        L(?&amp;COUNT)(?&amp;EAST)  | R(?&amp;COUNT)(?&amp;WEST)  )?\n    \t\t)\n    \t\t(?&lt;WEST&gt;  (?{
        $x -= $count })\n    \t\t\t(?: L(?&amp;COUNT)(?&amp;SOUTH) | R(?&amp;COUNT)(?&amp;NORTH)
        )?\n    \t\t)\n    \t)\n    /\n    \t\"Ending coordinates: $x, $y\\n\" .\n    \t\"Manhattan
        distance: \" . (abs $x + abs $y) . \"\\n\"\n    /xe;\n    \n    print $input\n",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danv909", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part
        1 as a Perl regular expression.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#! /usr/bin/env
        perl\n\nuse strict;\nuse warnings;\n\nlocal $/ = undef;\n\nmy ($x, $y, $count);\n\n(my
        $input = &amp;lt;&amp;gt;) =~ s/\n    (?{ $x = $y = $count = 0 })\n\n    ^\\s*(?&amp;amp;NORTH)\n\n    (?:
        (.)\n        (?{ die &amp;quot;Parse error at &amp;#39;$^N&amp;#39; (offset
        @{[ $+[0] - 1 ]})\\n&amp;quot; })\n    )?\n\n    (?(DEFINE)\n        (?&amp;lt;COUNT&amp;gt;
        (\\d+) (?{ $count = $^N }) [\\s,]* )\n        (?&amp;lt;NORTH&amp;gt; (?{
        $y += $count })\n            (?: L(?&amp;amp;COUNT)(?&amp;amp;WEST)  | R(?&amp;amp;COUNT)(?&amp;amp;EAST)  )?\n        )\n        (?&amp;lt;EAST&amp;gt;  (?{
        $x += $count })\n            (?: L(?&amp;amp;COUNT)(?&amp;amp;NORTH) | R(?&amp;amp;COUNT)(?&amp;amp;SOUTH)
        )?\n        )\n        (?&amp;lt;SOUTH&amp;gt; (?{ $y -= $count })\n            (?:
        L(?&amp;amp;COUNT)(?&amp;amp;EAST)  | R(?&amp;amp;COUNT)(?&amp;amp;WEST)  )?\n        )\n        (?&amp;lt;WEST&amp;gt;  (?{
        $x -= $count })\n            (?: L(?&amp;amp;COUNT)(?&amp;amp;SOUTH) | R(?&amp;amp;COUNT)(?&amp;amp;NORTH)
        )?\n        )\n    )\n/\n    &amp;quot;Ending coordinates: $x, $y\\n&amp;quot;
        .\n    &amp;quot;Manhattan distance: &amp;quot; . (abs $x + abs $y) . &amp;quot;\\n&amp;quot;\n/xe;\n\nprint
        $input\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danv909/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480614712.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danyme4", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Sigafoos", "can_mod_post": false, "created_utc":
        1480618590.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_4ml1a", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[My python 2.7](https://github.com/Sigafoos/advent/blob/master/2016/python/day1.py)\n\nI
        could do better but I think overall I''m pretty happy with it. I kept almost
        making a function for taking a step but then not doing it. There''s enough
        duplication that I know I could do it more succinctly.\n\nThings that tripped
        me up:\n\n- Assuming that the steps would be one digit (initially had `[1]`
        instead of `[1:]`)\n\n- Misinterpreting the second issue\n\n- Python''s habit
        of shallow copying variables: \"What do you _mean_ the second stop has already
        been visited? Wait, I didn''t add that to the list yet...\"", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danyme4",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/Sigafoos/advent/blob/master/2016/python/day1.py\"&gt;My
        python 2.7&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I could do better but I think overall
        I&amp;#39;m pretty happy with it. I kept almost making a function for taking
        a step but then not doing it. There&amp;#39;s enough duplication that I know
        I could do it more succinctly.&lt;/p&gt;\n\n&lt;p&gt;Things that tripped me
        up:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Assuming that the steps would
        be one digit (initially had &lt;code&gt;[1]&lt;/code&gt; instead of &lt;code&gt;[1:]&lt;/code&gt;)&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Misinterpreting
        the second issue&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Python&amp;#39;s
        habit of shallow copying variables: &amp;quot;What do you &lt;em&gt;mean&lt;/em&gt;
        the second stop has already been visited? Wait, I didn&amp;#39;t add that
        to the list yet...&amp;quot;&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danyme4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480618590.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "dao7ast",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TinSoldier6",
        "can_mod_post": false, "created_utc": 1480628500.0, "send_replies": true,
        "parent_id": "t1_dao3nzq", "score": 1, "author_fullname": "t2_f5tp5", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Very nice! It''s interesting to compare to my own Go solution, I did some
        things similarly.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dao7ast", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very
        nice! It&amp;#39;s interesting to compare to my own Go solution, I did some
        things similarly.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao7ast/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480628500.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "dao3nzq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Gommle",
        "can_mod_post": false, "created_utc": 1480624330.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 2, "author_fullname": "t2_375b5", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "**Golang**\n\nVery
        object oriented...\n\n    package main\n\n    import \"io/ioutil\"\n    import
        \"strings\"\n    import \"fmt\"\n    import \"strconv\"\n\n    type Direction
        struct {\n        East  int\n        North int\n    }\n\n    var Directions
        = []Direction{\n        Direction{0, 1},  // east\n        Direction{1, 0},  //
        north\n        Direction{0, -1}, // west\n        Direction{-1, 0}, // south\n    }\n\n    type
        Position struct {\n        Northing int\n        Easting  int\n    }\n    type
        State struct {\n        Position\n        Facing int\n    }\n\n    func (s
        State) Turn(steps int) State {\n        s.Facing = (s.Facing + steps + len(Directions))
        % len(Directions)\n        return s\n    }\n\n    func (s State) Walk() State
        {\n        s.Northing += Directions[s.Facing].North\n        s.Easting +=
        Directions[s.Facing].East\n        return s\n    }\n\n    func (s State) Distance()
        int {\n        return Abs(s.Northing) + Abs(s.Easting)\n    }\n\n    func
        main() {\n        s := State{}\n        visits := make(map[Position]int)\n        visits[s.Position]
        += 1\n\n        buf, _ := ioutil.ReadFile(\"input1.txt\")\n        for _,
        instruction := range strings.Split(strings.TrimSpace(string(buf)), \", \")
        {\n            rotation := string(instruction[0])\n            blocks, _ :=
        strconv.Atoi(instruction[1:])\n            if rotation == \"L\" {\n                s
        = s.Turn(1)\n            } else if rotation == \"R\" {\n                s
        = s.Turn(-1)\n            }\n            for i := 0; i &lt; blocks; i++ {\n                s
        = s.Walk()\n                visits[s.Position] += 1\n                if visits[s.Position]
        == 2 {\n                    fmt.Printf(\"Visited twice distance: %v\\n\",
        s.Distance())\n                }\n            }\n        }\n        fmt.Printf(\"Final
        distance: %v\\n\", s.Distance())\n    }\n\n    func Abs(n int) int {\n        if
        n &gt;= 0 {\n            return n\n        } else {\n            return -n\n        }\n    }\n",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dao3nzq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Golang&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Very
        object oriented...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport
        &amp;quot;io/ioutil&amp;quot;\nimport &amp;quot;strings&amp;quot;\nimport
        &amp;quot;fmt&amp;quot;\nimport &amp;quot;strconv&amp;quot;\n\ntype Direction
        struct {\n    East  int\n    North int\n}\n\nvar Directions = []Direction{\n    Direction{0,
        1},  // east\n    Direction{1, 0},  // north\n    Direction{0, -1}, // west\n    Direction{-1,
        0}, // south\n}\n\ntype Position struct {\n    Northing int\n    Easting  int\n}\ntype
        State struct {\n    Position\n    Facing int\n}\n\nfunc (s State) Turn(steps
        int) State {\n    s.Facing = (s.Facing + steps + len(Directions)) % len(Directions)\n    return
        s\n}\n\nfunc (s State) Walk() State {\n    s.Northing += Directions[s.Facing].North\n    s.Easting
        += Directions[s.Facing].East\n    return s\n}\n\nfunc (s State) Distance()
        int {\n    return Abs(s.Northing) + Abs(s.Easting)\n}\n\nfunc main() {\n    s
        := State{}\n    visits := make(map[Position]int)\n    visits[s.Position] +=
        1\n\n    buf, _ := ioutil.ReadFile(&amp;quot;input1.txt&amp;quot;)\n    for
        _, instruction := range strings.Split(strings.TrimSpace(string(buf)), &amp;quot;,
        &amp;quot;) {\n        rotation := string(instruction[0])\n        blocks,
        _ := strconv.Atoi(instruction[1:])\n        if rotation == &amp;quot;L&amp;quot;
        {\n            s = s.Turn(1)\n        } else if rotation == &amp;quot;R&amp;quot;
        {\n            s = s.Turn(-1)\n        }\n        for i := 0; i &amp;lt; blocks;
        i++ {\n            s = s.Walk()\n            visits[s.Position] += 1\n            if
        visits[s.Position] == 2 {\n                fmt.Printf(&amp;quot;Visited twice
        distance: %v\\n&amp;quot;, s.Distance())\n            }\n        }\n    }\n    fmt.Printf(&amp;quot;Final
        distance: %v\\n&amp;quot;, s.Distance())\n}\n\nfunc Abs(n int) int {\n    if
        n &amp;gt;= 0 {\n        return n\n    } else {\n        return -n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao3nzq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480624330.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daoj2yy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "gtllama", "can_mod_post": false, "created_utc":
        1480645701.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_3afmw", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**PureScript**\n\nhttps://github.com/gglouser/advent2016/blob/master/src/Advent2016/Day01.purs\n\nI''m
        new to PureScript, so still learning the libraries and how to live without
        partial functions. The solution currently remembers visited locations in an
        array, but I think changing it to use a set would be quite simple.\n", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_daoj2yy",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PureScript&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/gglouser/advent2016/blob/master/src/Advent2016/Day01.purs\"&gt;https://github.com/gglouser/advent2016/blob/master/src/Advent2016/Day01.purs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        new to PureScript, so still learning the libraries and how to live without
        partial functions. The solution currently remembers visited locations in an
        array, but I think changing it to use a set would be quite simple.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daoj2yy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480645701.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daojfnm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kamicc", "can_mod_post": false, "created_utc":
        1480646157.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_6covc", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Bah... A part was nice (at least with Lua):\n\n    local
        content = io.input(\"input.txt\"):read(\"*a\")\n    local coords = {0, 0}\n    local
        direction = {0, 1}\n\n    for turn, steps in content:gmatch(\"(%a)(%d+)\")
        do\n        steps = tonumber(steps)\n        if turn == \"L\" then\n            direction[1],
        direction[2] = -direction[2], direction[1]\n        else\n            direction[1],
        direction[2] = direction[2], -direction[1]\n        end\n    \n        coords[1]
        = coords[1] + direction[1] * steps\n        coords[2] = coords[2] + direction[2]
        * steps\n    end\n\n    print(coords[1], coords[2])\n    print(\"Sum: \",
        math.abs(coords[1]) + math.abs(coords[2]))\n\n\nB part just [screwed all the
        nicenest](https://gist.github.com/kamiccolo/97e7c8a0e0bc47cd207b7739f597ebe2)
        over :(", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_daojfnm", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bah...
        A part was nice (at least with Lua):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;local
        content = io.input(&amp;quot;input.txt&amp;quot;):read(&amp;quot;*a&amp;quot;)\nlocal
        coords = {0, 0}\nlocal direction = {0, 1}\n\nfor turn, steps in content:gmatch(&amp;quot;(%a)(%d+)&amp;quot;)
        do\n    steps = tonumber(steps)\n    if turn == &amp;quot;L&amp;quot; then\n        direction[1],
        direction[2] = -direction[2], direction[1]\n    else\n        direction[1],
        direction[2] = direction[2], -direction[1]\n    end\n\n    coords[1] = coords[1]
        + direction[1] * steps\n    coords[2] = coords[2] + direction[2] * steps\nend\n\nprint(coords[1],
        coords[2])\nprint(&amp;quot;Sum: &amp;quot;, math.abs(coords[1]) + math.abs(coords[2]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;B
        part just &lt;a href=\"https://gist.github.com/kamiccolo/97e7c8a0e0bc47cd207b7739f597ebe2\"&gt;screwed
        all the nicenest&lt;/a&gt; over :(&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daojfnm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480646157.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "daondfb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Here''s mine in Python, making use of trigonometry:\n\n    import
        math;\n    \n    puzzle = //copypaste input here\n    pos = [0.0, 0.0]\n    memory
        = [(0.0, 0.0)]\n    found = 0;\n    direction = math.pi / 2;\n    l = puzzle.split(\",
        \");\n    \n    def ndir(nsew, turn):\n        if(turn == \"R\"):\n            nsew
        += -(math.pi / 2)\n        if(turn == \"L\"):\n            nsew += math.pi
        / 2\n        return nsew;\n    \n    for i in l:\n        direction = ndir(direction,
        i[0])\n        if(found == 0):\n            for j in range(int(i[1:])):\n                \n                if
        ((round(float(pos[0]) + float(j+1) * math.cos(direction)), round(float(pos[1])
        + float(j+1) * math.sin(direction)))) in memory:\n                    print(math.fabs(float(pos[0])
        + float(j+1) * math.cos(direction))+ math.fabs(float(pos[1]) + float(j+1)
        * math.sin(direction)))\n                    found = 1;\n                memory.append((round(float(pos[0])
        + float(j+1) * math.cos(direction)), round(float(pos[1]) + float(j+1) * math.sin(direction))))\n                \n            \n        pos[0]
        += float(i[1:]) * math.cos(direction)\n        pos[1] += float(i[1:]) * math.sin(direction)\n    \n    print(math.fabs(pos[0])
        + math.fabs(pos[1]))\n    ", "edited": 1480705199.0, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        mine in Python, making use of trigonometry:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        math;\n\npuzzle = //copypaste input here\npos = [0.0, 0.0]\nmemory = [(0.0,
        0.0)]\nfound = 0;\ndirection = math.pi / 2;\nl = puzzle.split(&amp;quot;,
        &amp;quot;);\n\ndef ndir(nsew, turn):\n    if(turn == &amp;quot;R&amp;quot;):\n        nsew
        += -(math.pi / 2)\n    if(turn == &amp;quot;L&amp;quot;):\n        nsew +=
        math.pi / 2\n    return nsew;\n\nfor i in l:\n    direction = ndir(direction,
        i[0])\n    if(found == 0):\n        for j in range(int(i[1:])):\n\n            if
        ((round(float(pos[0]) + float(j+1) * math.cos(direction)), round(float(pos[1])
        + float(j+1) * math.sin(direction)))) in memory:\n                print(math.fabs(float(pos[0])
        + float(j+1) * math.cos(direction))+ math.fabs(float(pos[1]) + float(j+1)
        * math.sin(direction)))\n                found = 1;\n            memory.append((round(float(pos[0])
        + float(j+1) * math.cos(direction)), round(float(pos[1]) + float(j+1) * math.sin(direction))))\n\n\n    pos[0]
        += float(i[1:]) * math.cos(direction)\n    pos[1] += float(i[1:]) * math.sin(direction)\n\nprint(math.fabs(pos[0])
        + math.fabs(pos[1]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "subreddit_type": "public", "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daondfb/", "num_reports":
        null, "locked": false, "name": "t1_daondfb", "created": 1480651312.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1480651312.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "daos3gr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "My first year doing this, seems pretty fun so far, here''s
        my [C++ solution](https://github.com/Domos123/AventOfCode/blob/master/day1/solution.cpp)",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        first year doing this, seems pretty fun so far, here&amp;#39;s my &lt;a href=\"https://github.com/Domos123/AventOfCode/blob/master/day1/solution.cpp\"&gt;C++
        solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daos3gr/",
        "num_reports": null, "locked": false, "name": "t1_daos3gr", "created": 1480658453.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480658453.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daotfrh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Ape3000", "can_mod_post": false, "created_utc":
        1480660998.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 2,
        "author_fullname": "t2_a1bfd", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Part 1 with Python 3.\n\nThere is no need
        to store the direction, just rotate the world. :)\n\n    #!/usr/bin/env python3\n    \n    import
        sys\n    \n    steps = sys.stdin.readlines()[0].strip().split(\", \")\n    \n    x
        = 0\n    y = 0\n    \n    for step in steps:\n        if step[0] == \"R\":\n            x,
        y = -y, x\n        else:\n            x, y = y, -x\n    \n        x += int(step[1:])\n    \n    print(abs(x)
        + abs(y))", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_daotfrh", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part
        1 with Python 3.&lt;/p&gt;\n\n&lt;p&gt;There is no need to store the direction,
        just rotate the world. :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env
        python3\n\nimport sys\n\nsteps = sys.stdin.readlines()[0].strip().split(&amp;quot;,
        &amp;quot;)\n\nx = 0\ny = 0\n\nfor step in steps:\n    if step[0] == &amp;quot;R&amp;quot;:\n        x,
        y = -y, x\n    else:\n        x, y = y, -x\n\n    x += int(step[1:])\n\nprint(abs(x)
        + abs(y))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daotfrh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480660998.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "more", "data": {"count":
        1, "name": "t1_daomf1z", "id": "daomf1z", "parent_id": "t1_daneq16", "depth":
        2, "children": ["daomf1z"]}}], "before": null}}, "user_reports": [], "saved":
        false, "id": "daneq16", "banned_at_utc": null, "mod_reason_title": null, "gilded":
        0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author":
        "andars_", "can_mod_post": false, "created_utc": 1480585271.0, "send_replies":
        true, "parent_id": "t1_dana7jm", "score": 3, "author_fullname": "t2_nsjnb",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "FWIW, the 2d vector (a, b) rotated clockwise by 90 degrees is
        just (b, -a). Similarly for counterclockwise.\n\nSo your `new_dir` function
        could be simplified to:\n\n    def new_dir(current, turndir):\n         x,y
        = current\n         return (-y, x) if turndir == \"L\" else (y, -x)", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_daneq16",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FWIW, the 2d vector
        (a, b) rotated clockwise by 90 degrees is just (b, -a). Similarly for counterclockwise.&lt;/p&gt;\n\n&lt;p&gt;So
        your &lt;code&gt;new_dir&lt;/code&gt; function could be simplified to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        new_dir(current, turndir):\n     x,y = current\n     return (-y, x) if turndir
        == &amp;quot;L&amp;quot; else (y, -x)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daneq16/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480585271.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dana7jm", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jamesk727", "can_mod_post": false, "created_utc":
        1480573325.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_11zaye", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Made it to the leaderboard! This was definitely
        harder than last year''s first day. Here''s my python solution (just the relevant
        functions):\n\n    def new_dir( current, turndir ):\n        d = { \"R\":
        { (1, 0): (0, 1), (-1, 0): (0, -1), (0, -1): (1, 0), (0, 1):(-1, 0) },\n            \"L\":  {
        (1, 0): (0, -1), (-1, 0): (0, 1), (0, -1): (-1, 0), (0, 1):(1, 0) } }\n        return
        d[ turndir ][ current ]\n\n    def solve( data ):\n        x, y  = 0, 0\n        current
        = ( 1, 0 )\n        v = set()\n        v.add(str(x)+\",\"+str(y))\n        for
        delta in data:\n            turndir = delta[0]\n            dist = int( delta[1:])\n            current
        = new_dir( current, turndir )\n            for i in range( 1, dist + 1 ):\n                x
        += 1*current[0]\n                y += 1*current[1]\n                xstr =
        str(x)+\",\"+str(y)\n                if xstr in v:\n                    return
        abs(x)+abs(y)\n                else:\n                    v.add(xstr)\n\nThis
        only works for part 2 now since I modified my part 1 code to solve part 2.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dana7jm", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Made
        it to the leaderboard! This was definitely harder than last year&amp;#39;s
        first day. Here&amp;#39;s my python solution (just the relevant functions):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        new_dir( current, turndir ):\n    d = { &amp;quot;R&amp;quot;: { (1, 0): (0,
        1), (-1, 0): (0, -1), (0, -1): (1, 0), (0, 1):(-1, 0) },\n        &amp;quot;L&amp;quot;:  {
        (1, 0): (0, -1), (-1, 0): (0, 1), (0, -1): (-1, 0), (0, 1):(1, 0) } }\n    return
        d[ turndir ][ current ]\n\ndef solve( data ):\n    x, y  = 0, 0\n    current
        = ( 1, 0 )\n    v = set()\n    v.add(str(x)+&amp;quot;,&amp;quot;+str(y))\n    for
        delta in data:\n        turndir = delta[0]\n        dist = int( delta[1:])\n        current
        = new_dir( current, turndir )\n        for i in range( 1, dist + 1 ):\n            x
        += 1*current[0]\n            y += 1*current[1]\n            xstr = str(x)+&amp;quot;,&amp;quot;+str(y)\n            if
        xstr in v:\n                return abs(x)+abs(y)\n            else:\n                v.add(xstr)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This
        only works for part 2 now since I modified my part 1 code to solve part 2.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dana7jm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480573325.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danargy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TheNiXXeD", "can_mod_post": false, "created_utc":
        1480574489.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_czpwz", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My not quite fully golfed JavaScript [solution](https://github.com/NiXXeD/adventofcode/blob/master/2016/day1/part1.js).
        Will be golfing it further later.", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_danargy", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My not quite fully golfed JavaScript &lt;a
        href=\"https://github.com/NiXXeD/adventofcode/blob/master/2016/day1/part1.js\"&gt;solution&lt;/a&gt;.
        Will be golfing it further later.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danargy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480574489.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "more", "data": {"count": 1, "name": "t1_dhbf1r7", "id": "dhbf1r7",
        "parent_id": "t1_dhbeory", "depth": 2, "children": ["dhbf1r7"]}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "dhbeory", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_danbjyn", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "what language
        is that?", "edited": false, "author_flair_css_class": null, "collapsed": false,
        "downs": 0, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;what
        language is that?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dhbeory/",
        "num_reports": null, "locked": false, "name": "t1_dhbeory", "created": 1494304224.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1494304224.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "danbjyn", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "skarlso", "can_mod_post": false, "created_utc":
        1480576317.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_oab1x", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My Gods I overthought this SOOO MUCH!!! :/\n\n        path
        = [[]]\n        file = File.open(\"input.txt\")\n        contents = file.read\n        split
        = contents.split(\", \")\n        split.each do |s| \n          m = s.match(/([L|R])(\\d+)/)\n          l
        = m[1]\n          n = m[2]\n          path &lt;&lt; [l, n.to_i]\n        end\n        x
        = 0 \n        y = 0\n        d = 0\n        path.each do |p|\n          case
        p[0]\n          when ''L''\n            d = (d - 1) % 4\n          when ''R''\n            d
        = (d + 1) % 4\n          end\n          next if p.empty?\n          case d\n          when
        0\n            y += p[1]\n          when 1\n            x += p[1]\n          when
        2\n            y -= p[1]\n          when 3\n            x -= p[1]\n          end\n        end\n\n        p
        x.abs + y.abs\n", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danbjyn", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        Gods I overthought this SOOO MUCH!!! :/&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    path
        = [[]]\n    file = File.open(&amp;quot;input.txt&amp;quot;)\n    contents
        = file.read\n    split = contents.split(&amp;quot;, &amp;quot;)\n    split.each
        do |s| \n      m = s.match(/([L|R])(\\d+)/)\n      l = m[1]\n      n = m[2]\n      path
        &amp;lt;&amp;lt; [l, n.to_i]\n    end\n    x = 0 \n    y = 0\n    d = 0\n    path.each
        do |p|\n      case p[0]\n      when &amp;#39;L&amp;#39;\n        d = (d -
        1) % 4\n      when &amp;#39;R&amp;#39;\n        d = (d + 1) % 4\n      end\n      next
        if p.empty?\n      case d\n      when 0\n        y += p[1]\n      when 1\n        x
        += p[1]\n      when 2\n        y -= p[1]\n      when 3\n        x -= p[1]\n      end\n    end\n\n    p
        x.abs + y.abs\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danbjyn/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480576317.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danbydx", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "_Le1_", "can_mod_post": false, "created_utc":
        1480577297.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_mrf0d", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My C# solution:\n\n     class Program\n     {\n        public
        static int direction = 0; // 0 - N, 1 - E, 2 - S, 3 - W\n        public static
        Point coord = new Point();\n\n        static void Main(string[] args)\n        {\n            string
        input = \"L4, R2, R4, L5, L3, L1, R4, R5, R1, R3, L3, L2, L2, R5, R1, L1,
        L2, R2, R2, L5, R5, R5, L2, R1, R2, L2, L4, L1, R5, R2, R1, R1, L2, L3, R2,
        L5, L186, L5, L3, R3, L5, R4, R2, L5, R1, R4, L1, L3, R3, R1, L1, R4, R2,
        L1, L4, R5, L1, R50, L4, R3, R78, R4, R2, L4, R3, L4, R4, L1, R5, L4, R1,
        L2, R3, L2, R5, R5, L4, L1, L2, R185, L5, R2, R1, L3, R4, L5, R2, R4, L3,
        R4, L2, L5, R1, R2, L2, L1, L2, R2, L2, R1, L5, L3, L4, L3, L4, L2, L5, L5,
        R2, L3, L4, R4, R4, R5, L4, L2, R4, L5, R3, R1, L1, R3, L2, R2, R1, R5, L4,
        R5, L3, R2, R3, R1, R4, L4, R1, R3, L5, L1, L3, R2, R1, R4, L4, R3, L3, R3,
        R2, L3, L3, R4, L2, R4, L3, L4, R5, R1, L1, R5, R3, R1, R3, R4, L1, R4, R3,
        R1, L5, L5, L4, R4, R3, L2, R1, R5, L3, R4, R5, L4, L5, R2\";\n            string[]
        arr = input.Split('','');\n\n            foreach (var val in arr)\n            {\n                string
        v = val.Trim();\n                string d = v.Substring(0, 1);\n                int
        m = Int16.Parse(v.Substring(1, v.Length - 1));\n                move(d, m);\n            }\n\n            Console.WriteLine(\"Part1:
        {0}\", coord.X + coord.Y);\n            Console.Read();\n        }\n\n        static
        void move(string d, int m)\n        {\n            if (direction == 0)\n            {\n                if
        (d == \"L\")\n                {\n                    coord.X -= m; direction
        = 3;\n                }\n                else if (d == \"R\")\n                {\n                    coord.X
        += m; direction = 1;\n                }\n            }\n            else if
        (direction == 1)\n            {\n                if (d == \"L\")\n                {\n                    coord.Y
        += m; direction = 0;\n                }\n                else if (d == \"R\")\n                {\n                    coord.Y
        -= m; direction = 2;\n                }\n            }\n            else if
        (direction == 2)\n            {\n                if (d == \"L\")\n                {\n                    coord.X
        += m; direction = 1;\n                }\n                else if (d == \"R\")\n                {\n                    coord.X
        -= m; direction = 3;\n                }\n            }\n            else if
        (direction == 3)\n            {\n                if (d == \"L\")\n                {\n                    coord.Y
        -= m; direction = 2;\n                }\n                else if (d == \"R\")\n                {\n                    coord.Y
        += m; direction = 0;\n                }\n            }\n        }\n    }",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danbydx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        C# solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; class Program\n {\n    public
        static int direction = 0; // 0 - N, 1 - E, 2 - S, 3 - W\n    public static
        Point coord = new Point();\n\n    static void Main(string[] args)\n    {\n        string
        input = &amp;quot;L4, R2, R4, L5, L3, L1, R4, R5, R1, R3, L3, L2, L2, R5,
        R1, L1, L2, R2, R2, L5, R5, R5, L2, R1, R2, L2, L4, L1, R5, R2, R1, R1, L2,
        L3, R2, L5, L186, L5, L3, R3, L5, R4, R2, L5, R1, R4, L1, L3, R3, R1, L1,
        R4, R2, L1, L4, R5, L1, R50, L4, R3, R78, R4, R2, L4, R3, L4, R4, L1, R5,
        L4, R1, L2, R3, L2, R5, R5, L4, L1, L2, R185, L5, R2, R1, L3, R4, L5, R2,
        R4, L3, R4, L2, L5, R1, R2, L2, L1, L2, R2, L2, R1, L5, L3, L4, L3, L4, L2,
        L5, L5, R2, L3, L4, R4, R4, R5, L4, L2, R4, L5, R3, R1, L1, R3, L2, R2, R1,
        R5, L4, R5, L3, R2, R3, R1, R4, L4, R1, R3, L5, L1, L3, R2, R1, R4, L4, R3,
        L3, R3, R2, L3, L3, R4, L2, R4, L3, L4, R5, R1, L1, R5, R3, R1, R3, R4, L1,
        R4, R3, R1, L5, L5, L4, R4, R3, L2, R1, R5, L3, R4, R5, L4, L5, R2&amp;quot;;\n        string[]
        arr = input.Split(&amp;#39;,&amp;#39;);\n\n        foreach (var val in arr)\n        {\n            string
        v = val.Trim();\n            string d = v.Substring(0, 1);\n            int
        m = Int16.Parse(v.Substring(1, v.Length - 1));\n            move(d, m);\n        }\n\n        Console.WriteLine(&amp;quot;Part1:
        {0}&amp;quot;, coord.X + coord.Y);\n        Console.Read();\n    }\n\n    static
        void move(string d, int m)\n    {\n        if (direction == 0)\n        {\n            if
        (d == &amp;quot;L&amp;quot;)\n            {\n                coord.X -= m;
        direction = 3;\n            }\n            else if (d == &amp;quot;R&amp;quot;)\n            {\n                coord.X
        += m; direction = 1;\n            }\n        }\n        else if (direction
        == 1)\n        {\n            if (d == &amp;quot;L&amp;quot;)\n            {\n                coord.Y
        += m; direction = 0;\n            }\n            else if (d == &amp;quot;R&amp;quot;)\n            {\n                coord.Y
        -= m; direction = 2;\n            }\n        }\n        else if (direction
        == 2)\n        {\n            if (d == &amp;quot;L&amp;quot;)\n            {\n                coord.X
        += m; direction = 1;\n            }\n            else if (d == &amp;quot;R&amp;quot;)\n            {\n                coord.X
        -= m; direction = 3;\n            }\n        }\n        else if (direction
        == 3)\n        {\n            if (d == &amp;quot;L&amp;quot;)\n            {\n                coord.Y
        -= m; direction = 2;\n            }\n            else if (d == &amp;quot;R&amp;quot;)\n            {\n                coord.Y
        += m; direction = 0;\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danbydx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480577297.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dancptt", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "barnybug", "can_mod_post": false, "created_utc":
        1480579305.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_9pufa", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "nim:\n\n    import future, re, sets, strutils\n\n    type
        Coord = tuple[x: int, y: int]\n\n    proc walk(input: string, stopping: (me:
        Coord) -&gt; bool): int =\n      var me: Coord = (x: 0, y: 0)\n      var dx,
        dy, t = 0\n      dy = -1\n\n      for m in findAll(input, re\"[LR]\\d+\"):\n        case
        m[0]\n          of ''L'': t = dx; dx = dy; dy = -t\n          else: t = dx;
        dx = -dy; dy = t\n        for i in 1..parseInt(m[1 .. m.high]):\n          me.x
        += dx\n          me.y += dy\n          if stopping(me):\n            return
        abs me.x + abs me.y\n\n      return abs me.x + abs me.y\n\n    var input =
        readFile \"input.txt\"\n    proc neverStop(me: Coord): bool = false\n    echo
        \"Answer #1: \", walk(input, neverStop)\n\n    var places = initSet[Coord]()\n    proc
        visited(me: Coord): bool =\n      if places.contains(me): return true\n      places.incl(me)\n      return
        false\n    echo \"Answer #2: \", walk(input, visited)\n", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_dancptt",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;nim:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        future, re, sets, strutils\n\ntype Coord = tuple[x: int, y: int]\n\nproc walk(input:
        string, stopping: (me: Coord) -&amp;gt; bool): int =\n  var me: Coord = (x:
        0, y: 0)\n  var dx, dy, t = 0\n  dy = -1\n\n  for m in findAll(input, re&amp;quot;[LR]\\d+&amp;quot;):\n    case
        m[0]\n      of &amp;#39;L&amp;#39;: t = dx; dx = dy; dy = -t\n      else:
        t = dx; dx = -dy; dy = t\n    for i in 1..parseInt(m[1 .. m.high]):\n      me.x
        += dx\n      me.y += dy\n      if stopping(me):\n        return abs me.x +
        abs me.y\n\n  return abs me.x + abs me.y\n\nvar input = readFile &amp;quot;input.txt&amp;quot;\nproc
        neverStop(me: Coord): bool = false\necho &amp;quot;Answer #1: &amp;quot;,
        walk(input, neverStop)\n\nvar places = initSet[Coord]()\nproc visited(me:
        Coord): bool =\n  if places.contains(me): return true\n  places.incl(me)\n  return
        false\necho &amp;quot;Answer #2: &amp;quot;, walk(input, visited)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dancptt/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480579305.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dandewl", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Kullu00", "can_mod_post": false, "created_utc":
        1480581239.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_zsl1n", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "More Dart merriness. I still think I''m one
        of the few people who actually bother to use this language in these challenges,
        but that makes it all the more fun :)\n\nMisunderstood part 2 somewhat but
        it was still relatively simple to figure this one out. Then I made it as usual
        and combined part 1 and part 2 to only need a single iteration through the
        input. Yay!\n\nhttps://github.com/QuiteQuiet/AdventOfCode/blob/master/2016/advent1/bin/advent1.dart",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dandewl", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;More
        Dart merriness. I still think I&amp;#39;m one of the few people who actually
        bother to use this language in these challenges, but that makes it all the
        more fun :)&lt;/p&gt;\n\n&lt;p&gt;Misunderstood part 2 somewhat but it was
        still relatively simple to figure this one out. Then I made it as usual and
        combined part 1 and part 2 to only need a single iteration through the input.
        Yay!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/QuiteQuiet/AdventOfCode/blob/master/2016/advent1/bin/advent1.dart\"&gt;https://github.com/QuiteQuiet/AdventOfCode/blob/master/2016/advent1/bin/advent1.dart&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dandewl/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480581239.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dandk8h", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "xkufix", "can_mod_post": false, "created_utc":
        1480581672.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_d541m", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Overly-readable and version in Scala: https://gist.github.com/kufi/cd9f68ea801879d5341131b57fa16c39",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dandk8h", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Overly-readable
        and version in Scala: &lt;a href=\"https://gist.github.com/kufi/cd9f68ea801879d5341131b57fa16c39\"&gt;https://gist.github.com/kufi/cd9f68ea801879d5341131b57fa16c39&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dandk8h/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480581672.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danycz4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Sigafoos",
        "can_mod_post": false, "created_utc": 1480618292.0, "send_replies": true,
        "parent_id": "t1_dane1gb", "score": 1, "author_fullname": "t2_4ml1a", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "The spirit is whatever you want it to be! I tried to be clever/smart in my
        implementation but then gave up and just went with the if/elif blocks.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danycz4",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The spirit is whatever
        you want it to be! I tried to be clever/smart in my implementation but then
        gave up and just went with the if/elif blocks.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danycz4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480618292.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dane1gb", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "skawid", "can_mod_post": false, "created_utc":
        1480583106.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_s25k4", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python: https://github.com/simonbrahan/adventofcode/blob/master/2016/1/1_1.py\n\nLooking
        at the other python submissions, I may not be getting into the spirit of this...",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dane1gb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python:
        &lt;a href=\"https://github.com/simonbrahan/adventofcode/blob/master/2016/1/1_1.py\"&gt;https://github.com/simonbrahan/adventofcode/blob/master/2016/1/1_1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Looking
        at the other python submissions, I may not be getting into the spirit of this...&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dane1gb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480583106.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dane3zx", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ericdykstra", "can_mod_post": false, "created_utc":
        1480583312.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_6og7d", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here''s my pattern-matching-heavy Elixir
        answer for part 1! \nhttps://gist.github.com/EricDykstra/41b46c9a40bf499f97252a81ef32dd8a\n\nWill
        work on part 2 later, still don''t have a great idea in my head of how to
        do it in a functional style. Might look at some of the other answers around
        here.\n\nI used Ruby to initially to get on the leaderboard and this was my
        answer (slightly cleaned up and refactored). Part 2 answer changes only a
        couple of lines :)\nhttps://gist.github.com/EricDykstra/cbbb9b87209814d93e5bb0d252646d0d",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dane3zx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        my pattern-matching-heavy Elixir answer for part 1! \n&lt;a href=\"https://gist.github.com/EricDykstra/41b46c9a40bf499f97252a81ef32dd8a\"&gt;https://gist.github.com/EricDykstra/41b46c9a40bf499f97252a81ef32dd8a&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Will
        work on part 2 later, still don&amp;#39;t have a great idea in my head of
        how to do it in a functional style. Might look at some of the other answers
        around here.&lt;/p&gt;\n\n&lt;p&gt;I used Ruby to initially to get on the
        leaderboard and this was my answer (slightly cleaned up and refactored). Part
        2 answer changes only a couple of lines :)\n&lt;a href=\"https://gist.github.com/EricDykstra/cbbb9b87209814d93e5bb0d252646d0d\"&gt;https://gist.github.com/EricDykstra/cbbb9b87209814d93e5bb0d252646d0d&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dane3zx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480583312.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "dane77n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "https://gist.github.com/Fireprufe15/c944c636bd8035618c047103e19683eb  My
        Python solution", "edited": false, "downs": 0, "author_flair_css_class": null,
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://gist.github.com/Fireprufe15/c944c636bd8035618c047103e19683eb\"&gt;https://gist.github.com/Fireprufe15/c944c636bd8035618c047103e19683eb&lt;/a&gt;  My
        Python solution&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dane77n/",
        "num_reports": null, "locked": false, "name": "t1_dane77n", "created": 1480583585.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480583585.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danepg7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "AndrewGreenh", "can_mod_post": false,
        "created_utc": 1480585219.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 1, "author_fullname": "t2_i67fc", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "16 SLOC in kinda readable
        JavaScript\nhttps://github.com/andreasgruenh/advent-of-code/blob/master/JavaScript/2016/1.js",
        "edited": 1480614068.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danepg7", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;16
        SLOC in kinda readable JavaScript\n&lt;a href=\"https://github.com/andreasgruenh/advent-of-code/blob/master/JavaScript/2016/1.js\"&gt;https://github.com/andreasgruenh/advent-of-code/blob/master/JavaScript/2016/1.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danepg7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480585219.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daneqps", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "alexjoz", "can_mod_post": false, "created_utc":
        1480585333.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_1386d6", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python https://github.com/AlexJoz/AdventOfCode\noverthought
        and rather long.\n\nSlept only 3 hours and it was really hard to think in
        the morning, but i really wanted to start from the beginning, at least for
        the first day =)) Very exiting! \n ", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_daneqps", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python &lt;a href=\"https://github.com/AlexJoz/AdventOfCode\"&gt;https://github.com/AlexJoz/AdventOfCode&lt;/a&gt;\noverthought
        and rather long.&lt;/p&gt;\n\n&lt;p&gt;Slept only 3 hours and it was really
        hard to think in the morning, but i really wanted to start from the beginning,
        at least for the first day =)) Very exiting! &lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daneqps/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480585333.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danesjj", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "andars_", "can_mod_post": false, "created_utc":
        1480585501.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_nsjnb", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "I''m somewhat surprised to not have a solution
        in a Lisp in this thread already, so I''ll throw my poorly written and hacked
        together Racket solution on the pile.\n\nhttps://github.com/andars/advent-of-code/blob/master/2016/day1/task.rkt",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danesjj", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        somewhat surprised to not have a solution in a Lisp in this thread already,
        so I&amp;#39;ll throw my poorly written and hacked together Racket solution
        on the pile.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/andars/advent-of-code/blob/master/2016/day1/task.rkt\"&gt;https://github.com/andars/advent-of-code/blob/master/2016/day1/task.rkt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danesjj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480585501.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danf679", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Pyrobolser", "can_mod_post": false, "created_utc":
        1480586776.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_et0mc", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here is [my solution in C#](https://github.com/Pyrobolser/AdventOfCode2016/blob/master/AdventOfCode2016/Day1.cs)
        for both stars.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danf679", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here
        is &lt;a href=\"https://github.com/Pyrobolser/AdventOfCode2016/blob/master/AdventOfCode2016/Day1.cs\"&gt;my
        solution in C#&lt;/a&gt; for both stars.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danf679/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480586776.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "more", "data": {"count":
        4, "name": "t1_dao1151", "id": "dao1151", "parent_id": "t1_danup1o", "depth":
        2, "children": ["dao1151"]}}], "before": null}}, "user_reports": [], "saved":
        false, "id": "danup1o", "banned_at_utc": null, "mod_reason_title": null, "gilded":
        0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author":
        "JakDrako", "can_mod_post": false, "created_utc": 1480614059.0, "send_replies":
        true, "parent_id": "t1_danftsx", "score": 1, "author_fullname": "t2_477xl",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Thanks for this, I''m learning JS and this is very educational.
        :)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danup1o", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks
        for this, I&amp;#39;m learning JS and this is very educational. :)&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danup1o/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480614059.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danftsx", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "eragonas5", "can_mod_post": false, "created_utc":
        1480589033.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_sptwb", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Javascript solution with path drawn on html
        canvas.\n\nGit: \nhttps://github.com/Voldemortas/advent_of_code\n\nLive preview:
        \nhttps://cdn.rawgit.com/Voldemortas/advent_of_code/master/day1.html", "edited":
        1480591737.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_danftsx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript
        solution with path drawn on html canvas.&lt;/p&gt;\n\n&lt;p&gt;Git: \n&lt;a
        href=\"https://github.com/Voldemortas/advent_of_code\"&gt;https://github.com/Voldemortas/advent_of_code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Live
        preview: \n&lt;a href=\"https://cdn.rawgit.com/Voldemortas/advent_of_code/master/day1.html\"&gt;https://cdn.rawgit.com/Voldemortas/advent_of_code/master/day1.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danftsx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480589033.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danh3ke", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "miran1", "can_mod_post": false, "created_utc":
        1480593137.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_5nuj7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "## python3\n\nsuggestions and comments are
        welcome....\n\n&amp;nbsp;\n\n    with open(''./01 - No Time for a Taxicab.txt'',
        ''r'') as infile:\n        directions = infile.read().strip().split('', '')\n\n    ROTATION
        = {''L'': -1, ''R'': 1}\n    DELTAS = [\n        (0, 1),     # go north\n        (1,
        0),     # go east\n        (0, -1),    # go south\n        (-1, 0),    # go
        west\n    ]\n\n    location = (0, 0)\n    current_direction = 0\n\n    visited_locations
        = set()\n    passed_twice = False\n\n\n    def find_manhattan(loc):\n        return
        sum(abs(d) for d in loc)\n\n\n    for instruction in directions:\n        rot,
        dist = instruction[0], int(instruction[1:])\n        current_direction = (current_direction
        + ROTATION[rot]) % 4\n        current_delta = DELTAS[current_direction]\n\n        for
        _ in range(dist):\n            location = tuple(location[i] + current_delta[i]
        for i in range(2))\n            if not passed_twice and location in visited_locations:\n                print(\"I''ve
        been here {} before!\".format(location))\n                print(\"Distance
        from the start:\", find_manhattan(location))\n                passed_twice
        = True\n            else:\n                visited_locations.add(location)\n\n    print(\"\\nOk,
        I''ve come to the end of your instructions and I''m at\", location)\n    print(\"That''s
        {} away from the the start\".format(find_manhattan(location)))\n", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danh3ke",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;python3&lt;/h2&gt;\n\n&lt;p&gt;suggestions
        and comments are welcome....&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;./01 - No Time for a Taxicab.txt&amp;#39;, &amp;#39;r&amp;#39;)
        as infile:\n    directions = infile.read().strip().split(&amp;#39;, &amp;#39;)\n\nROTATION
        = {&amp;#39;L&amp;#39;: -1, &amp;#39;R&amp;#39;: 1}\nDELTAS = [\n    (0, 1),     #
        go north\n    (1, 0),     # go east\n    (0, -1),    # go south\n    (-1,
        0),    # go west\n]\n\nlocation = (0, 0)\ncurrent_direction = 0\n\nvisited_locations
        = set()\npassed_twice = False\n\n\ndef find_manhattan(loc):\n    return sum(abs(d)
        for d in loc)\n\n\nfor instruction in directions:\n    rot, dist = instruction[0],
        int(instruction[1:])\n    current_direction = (current_direction + ROTATION[rot])
        % 4\n    current_delta = DELTAS[current_direction]\n\n    for _ in range(dist):\n        location
        = tuple(location[i] + current_delta[i] for i in range(2))\n        if not
        passed_twice and location in visited_locations:\n            print(&amp;quot;I&amp;#39;ve
        been here {} before!&amp;quot;.format(location))\n            print(&amp;quot;Distance
        from the start:&amp;quot;, find_manhattan(location))\n            passed_twice
        = True\n        else:\n            visited_locations.add(location)\n\nprint(&amp;quot;\\nOk,
        I&amp;#39;ve come to the end of your instructions and I&amp;#39;m at&amp;quot;,
        location)\nprint(&amp;quot;That&amp;#39;s {} away from the the start&amp;quot;.format(find_manhattan(location)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danh3ke/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480593137.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danm27b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "schlocke",
        "can_mod_post": false, "created_utc": 1480603212.0, "send_replies": true,
        "parent_id": "t1_danh5dn", "score": 1, "author_fullname": "t2_7t4w7", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "code golfed the heck outta me. good approach! I initially thought of doing
        the 0 1 2 3 \"linked list\" approach for the directions but then just gave
        up. ", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danm27b", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;code
        golfed the heck outta me. good approach! I initially thought of doing the
        0 1 2 3 &amp;quot;linked list&amp;quot; approach for the directions but then
        just gave up. &lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danm27b/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480603212.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "danh5dn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "artesea",
        "can_mod_post": false, "created_utc": 1480593285.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_c2pur", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Solves
        both answers within PHP, problems I had were $h%4 would give an unexpected
        (to me) negative number if $h was negative, and it being too early for me
        to remember the function to remove the sign from an int. Managed to hit the
        leaderboard just under 500.\n\n    &lt;?php\n    $a=file(a)[0];\n    $x=$y=$h=$f=0;\n    preg_match_all(\"#([R|L])(\\d+)#\",$a,$b);\n    for($i=0;$i&lt;sizeof($b[1]);$i++){\n      $h+=($b[1][$i]==\"R\")?1:-1;\n      if($h&gt;3)$h=0;if($h&lt;0)$h=3;\n      for($s=0;$s&lt;$b[2][$i];$s++){\n        if($h==0)$y++;\n        if($h==1)$x++;\n        if($h==2)$y--;\n        if($h==3)$x--;\n        $v[$x][$y]++;\n        if($f===0
        &amp;&amp; $v[$x][$y]==2)$f=\" b:\".(abs($x)+abs($y));\n      }\n    }\n    echo\"a:\".(abs($x)+abs($y)).$f;`",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danh5dn", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solves
        both answers within PHP, problems I had were $h%4 would give an unexpected
        (to me) negative number if $h was negative, and it being too early for me
        to remember the function to remove the sign from an int. Managed to hit the
        leaderboard just under 500.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n$a=file(a)[0];\n$x=$y=$h=$f=0;\npreg_match_all(&amp;quot;#([R|L])(\\d+)#&amp;quot;,$a,$b);\nfor($i=0;$i&amp;lt;sizeof($b[1]);$i++){\n  $h+=($b[1][$i]==&amp;quot;R&amp;quot;)?1:-1;\n  if($h&amp;gt;3)$h=0;if($h&amp;lt;0)$h=3;\n  for($s=0;$s&amp;lt;$b[2][$i];$s++){\n    if($h==0)$y++;\n    if($h==1)$x++;\n    if($h==2)$y--;\n    if($h==3)$x--;\n    $v[$x][$y]++;\n    if($f===0
        &amp;amp;&amp;amp; $v[$x][$y]==2)$f=&amp;quot; b:&amp;quot;.(abs($x)+abs($y));\n  }\n}\necho&amp;quot;a:&amp;quot;.(abs($x)+abs($y)).$f;`\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danh5dn/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480593285.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danjji5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bigbarba",
        "can_mod_post": false, "created_utc": 1480598969.0, "send_replies": true,
        "parent_id": "t1_danhuyq", "score": 1, "author_fullname": "t2_h5v3a", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Nevermind... I misunderstood the problem :)", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_danjji5", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nevermind... I misunderstood
        the problem :)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danjji5/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480598969.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "danhuyq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bigbarba",
        "can_mod_post": false, "created_utc": 1480595213.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_h5v3a", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Is
        the input assured to make possible to solve the second part? Because for may
        input it looks like I never reach a spot two times...\nI tried to edit my
        input sequence and it finds a spot...", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_danhuyq", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is the input assured to make
        possible to solve the second part? Because for may input it looks like I never
        reach a spot two times...\nI tried to edit my input sequence and it finds
        a spot...&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danhuyq/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480595213.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "dani0ou",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "southern-fenrir",
        "can_mod_post": false, "created_utc": 1480595623.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_13895c", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Java
        solution. If anyone wants to copy my gradle script to be able to execute stuff
        multiproject in an easier fashion, go ahread\n\nhttps://github.com/caesar-ralf/advent-code-2016",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dani0ou", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java
        solution. If anyone wants to copy my gradle script to be able to execute stuff
        multiproject in an easier fashion, go ahread&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/caesar-ralf/advent-code-2016\"&gt;https://github.com/caesar-ralf/advent-code-2016&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dani0ou/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480595623.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daniyx0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "beefamaka", "can_mod_post": false, "created_utc":
        1480597829.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_8x89m", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Trying to solve them functionally in F# again
        this year. Not as succinct as I''d like but works\nhttps://github.com/markheath/advent-of-code-2016/blob/master/day%2001/day1.fsx",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_daniyx0", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Trying
        to solve them functionally in F# again this year. Not as succinct as I&amp;#39;d
        like but works\n&lt;a href=\"https://github.com/markheath/advent-of-code-2016/blob/master/day%2001/day1.fsx\"&gt;https://github.com/markheath/advent-of-code-2016/blob/master/day%2001/day1.fsx&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daniyx0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480597829.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danjba4", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "SaplingNXT", "can_mod_post": false, "created_utc":
        1480598522.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_p3wkx", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My Kotlin solution, it''s not pretty, but
        works fine for me\nhttps://github.com/Fuvid/adventofcode2016/tree/master/src/de/fuvid/adventofcode/day1\n",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danjba4", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        Kotlin solution, it&amp;#39;s not pretty, but works fine for me\n&lt;a href=\"https://github.com/Fuvid/adventofcode2016/tree/master/src/de/fuvid/adventofcode/day1\"&gt;https://github.com/Fuvid/adventofcode2016/tree/master/src/de/fuvid/adventofcode/day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danjba4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480598522.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danlqzm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "schlocke", "can_mod_post": false, "created_utc":
        1480602741.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_7t4w7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "PHP (~~unoptimized~~...but works) input was
        saved to a csv in the same directory as the exercise file\t:\n\n    \t&lt;?php\n\n\t$path
        = array_map(''str_getcsv'', file(''day1.csv''));\n\t$path = array_map(''trim'',
        $path[0]);\n\n\t//position x,y\n\t$map = array(0,0);\n\n\t//map log to keep
        track of locations\n\t$maplog = array();\n\n\t//keep track of direction\n\t$compass
        = 0;\n\n\t$answer1 = NULL;\n\t$answer2 = NULL;\n\n\tforeach ($path as $direction
        ) {\n\t\t$turn = substr($direction, 0, 1);\n\t\t$walk = substr($direction,
        1);\n\n\t\t$compass += ($turn === \"L\") ? -1:1;\n\t\tif($compass&lt;0) $compass
        = 3;\n\t\tif($compass&gt;3) $compass = 0;\n\t\t\n\t\tfor($i = 0; $i &lt; $walk;
        $i++) {\n\t\t\tswitch ($compass) {\n\t\t\t\t//N\n\t\t\t\tcase 0: $map[1]++;
        break;\n\t\t\t\t//E\n\t\t\t\tcase 1: $map[0]++; break;\n\t\t\t\t//S\n\t\t\t\tcase
        2: $map[1]--; break;\n\t\t\t\t//W\n\t\t\t\tcase 3: $map[0]--; break;\n\t\t\t}\n\t\t\t\n\t\t\t//have
        i been here before?\n\t\t\tif( in_array($map, $maplog) &amp;&amp; is_null($answer2)
        ) {\n\t\t\t\t$answer2 = $map[0] + $map[1];\n\t\t\t}\n\n\t\t\t//lets keep track
        of where I''ve been;\n\t\t\t$maplog[] = $map;\n\t\t}\n\t\t\n\t\t$answer1 =
        $map[0] + $map[1];\n\t}\n\n\techo \"Answer 1: $answer1 &lt;br&gt; Answer 2:
        $answer2\";\n\nEDIT: now optimized. Thanks for the inspiration u/artesea",
        "edited": 1480604605.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danlqzm", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP
        (&lt;del&gt;unoptimized&lt;/del&gt;...but works) input was saved to a csv
        in the same directory as the exercise file   :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    &amp;lt;?php\n\n$path
        = array_map(&amp;#39;str_getcsv&amp;#39;, file(&amp;#39;day1.csv&amp;#39;));\n$path
        = array_map(&amp;#39;trim&amp;#39;, $path[0]);\n\n//position x,y\n$map = array(0,0);\n\n//map
        log to keep track of locations\n$maplog = array();\n\n//keep track of direction\n$compass
        = 0;\n\n$answer1 = NULL;\n$answer2 = NULL;\n\nforeach ($path as $direction
        ) {\n    $turn = substr($direction, 0, 1);\n    $walk = substr($direction,
        1);\n\n    $compass += ($turn === &amp;quot;L&amp;quot;) ? -1:1;\n    if($compass&amp;lt;0)
        $compass = 3;\n    if($compass&amp;gt;3) $compass = 0;\n\n    for($i = 0;
        $i &amp;lt; $walk; $i++) {\n        switch ($compass) {\n            //N\n            case
        0: $map[1]++; break;\n            //E\n            case 1: $map[0]++; break;\n            //S\n            case
        2: $map[1]--; break;\n            //W\n            case 3: $map[0]--; break;\n        }\n\n        //have
        i been here before?\n        if( in_array($map, $maplog) &amp;amp;&amp;amp;
        is_null($answer2) ) {\n            $answer2 = $map[0] + $map[1];\n        }\n\n        //lets
        keep track of where I&amp;#39;ve been;\n        $maplog[] = $map;\n    }\n\n    $answer1
        = $map[0] + $map[1];\n}\n\necho &amp;quot;Answer 1: $answer1 &amp;lt;br&amp;gt;
        Answer 2: $answer2&amp;quot;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT:
        now optimized. Thanks for the inspiration &lt;a href=\"/u/artesea\"&gt;u/artesea&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danlqzm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480602741.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "dao8b5g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wzkx",
        "can_mod_post": false, "created_utc": 1480629696.0, "send_replies": true,
        "parent_id": "t1_danm91o", "score": 1, "author_fullname": "t2_t1qbo", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "    print(sum(abs(e)for e in __import__(''functools'').reduce(lambda s,e,z=lambda
        x,y:(x[2]+(3,1)[y[0]==''R''])%4:(s[0]+(0,1,0,-1)[z(s,e)]*int(e[1:]),s[1]+(1,0,-1,0)[z(s,e)]*int(e[1:]),z(s,e)),open(\"01.dat\",\"rt\").read().strip().replace('','','''').split(),(0,0,0))[0:2]))\n\n\nPart
        1 only; data is in file 01.dat", "edited": 1480630131.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dao8b5g", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;print(sum(abs(e)for
        e in __import__(&amp;#39;functools&amp;#39;).reduce(lambda s,e,z=lambda x,y:(x[2]+(3,1)[y[0]==&amp;#39;R&amp;#39;])%4:(s[0]+(0,1,0,-1)[z(s,e)]*int(e[1:]),s[1]+(1,0,-1,0)[z(s,e)]*int(e[1:]),z(s,e)),open(&amp;quot;01.dat&amp;quot;,&amp;quot;rt&amp;quot;).read().strip().replace(&amp;#39;,&amp;#39;,&amp;#39;&amp;#39;).split(),(0,0,0))[0:2]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        1 only; data is in file 01.dat&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_5fur6q", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao8b5g/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480629696.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "danm91o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "drakehutner",
        "can_mod_post": false, "created_utc": 1480603494.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_r25pa", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Python3
        golf: a single line of code, containing a lambda that is able to solve both
        parts. 864 bytes (non-minified). Should be mostly pep8-compatible.\n\n    the_way_to_bunny_hq
        = lambda input, twice=False: ((lambda parse, move, rotate, distance: ((lambda
        steps, walk, places=[]: ((lambda path: (distance([s for i, s in enumerate(path)
        if s in path[i + 1:]][0] if twice else path[-1])))(walk(walk, steps, (0, 0),
        (1, 0), places))))(parse(input), lambda f, steps, pos, dir, places: ((lambda
        next_dir: ((lambda next_steps: (f(f, steps[1:], next_steps[-1], next_dir,
        places + next_steps)))(move(pos, next_dir, steps[0][1]))))(rotate(dir, steps[0][0])))
        if len(steps) &gt; 0 else places)))(lambda input: [(e[0], int(e[1:])) for
        e in input.split(\", \")], lambda p, d, l=1: [(p[0] + d[0] * s, p[1] + d[1]
        * s) for s in range(1, l + 1)], lambda d, r: {(1, 0): {\"R\": (0, 1), \"L\":
        (0, -1)}, (0, 1): {\"R\": (-1, 0), \"L\": (1, 0)}, (-1, 0): {\"R\": (0, -1),
        \"L\": (0, 1)}, (0, -1): {\"R\": (1, 0), \"L\": (-1, 0)}}[d][r], lambda p:
        p[0] + p[1]))\n\n", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danm91o", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3
        golf: a single line of code, containing a lambda that is able to solve both
        parts. 864 bytes (non-minified). Should be mostly pep8-compatible.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;the_way_to_bunny_hq
        = lambda input, twice=False: ((lambda parse, move, rotate, distance: ((lambda
        steps, walk, places=[]: ((lambda path: (distance([s for i, s in enumerate(path)
        if s in path[i + 1:]][0] if twice else path[-1])))(walk(walk, steps, (0, 0),
        (1, 0), places))))(parse(input), lambda f, steps, pos, dir, places: ((lambda
        next_dir: ((lambda next_steps: (f(f, steps[1:], next_steps[-1], next_dir,
        places + next_steps)))(move(pos, next_dir, steps[0][1]))))(rotate(dir, steps[0][0])))
        if len(steps) &amp;gt; 0 else places)))(lambda input: [(e[0], int(e[1:]))
        for e in input.split(&amp;quot;, &amp;quot;)], lambda p, d, l=1: [(p[0] +
        d[0] * s, p[1] + d[1] * s) for s in range(1, l + 1)], lambda d, r: {(1, 0):
        {&amp;quot;R&amp;quot;: (0, 1), &amp;quot;L&amp;quot;: (0, -1)}, (0, 1): {&amp;quot;R&amp;quot;:
        (-1, 0), &amp;quot;L&amp;quot;: (1, 0)}, (-1, 0): {&amp;quot;R&amp;quot;:
        (0, -1), &amp;quot;L&amp;quot;: (0, 1)}, (0, -1): {&amp;quot;R&amp;quot;:
        (1, 0), &amp;quot;L&amp;quot;: (-1, 0)}}[d][r], lambda p: p[0] + p[1]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danm91o/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480603494.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danme05", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "NeilNjae", "can_mod_post": false, "created_utc":
        1480603695.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_6836y", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "I''ve decided to use this event as a prompt
        to actually *learn* Haskell.\n\nMy over-long and not-clever solution is at
        https://git.njae.me.uk/?p=advent-of-code-16.git;a=blob;f=advent01.hs \n\n    import
        Data.List (sort)\n    import Data.List.Split (splitOn)\n\n    -- turn direction,
        number of steps\n    data Step = Step Char Int deriving (Show)\n\n    data
        Direction = North | East | South | West \n        deriving (Enum, Show, Bounded,
        Eq)\n\n    -- direction, easting, northing\n    data Position = Position Direction
        Int Int deriving (Show)\n    -- Two positions are the same if they''re in
        the same place, \n    -- regardless of facing\n    instance Eq Position where\n        Position
        _ e n == Position _ e'' n'' = e == e'' &amp;&amp; n == n''\n\n    main ::
        IO ()\n    main = do \n            instructions &lt;- readFile \"advent01.txt\"\n            part1
        instructions\n            part2 instructions\n\n    part1 :: String -&gt;
        IO ()\n    part1 instructions = do\n            let answer = finalDistance
        $ last $ stepsFromStart $ steps instructions\n            print answer\n\n    part2
        :: String -&gt; IO ()\n    part2 instructions = do\n            let visited
        = finalDistance $ firstRepeat $ stepsFromStart $ expandSteps $ steps instructions\n            print
        visited\n\n\n    -- Extract the steps from the input string.\n    steps ::
        String -&gt; [Step]\n    steps s = map readStep $ splitOn \", \" s\n        where
        readStep (d:l) = Step d (read l)\n\n    -- Take steps from the starting position\n    stepsFromStart
        :: [Step] -&gt; [Position]\n    stepsFromStart = takeSteps (Position North
        0 0)\n\n    -- Calculate manhattan distance from start to this state\n    finalDistance
        :: Position -&gt; Int\n    finalDistance (Position _ e n) = (abs e) + (abs
        n)\n\n    -- For part 2: convert one step of many spaces to many steps of
        one space each\n    expandSteps :: [Step] -&gt; [Step]\n    expandSteps =
        \n        concatMap expandStep\n        where expandStep (Step dir d) = (Step
        dir 1) : replicate (d - 1) (Step ''S'' 1)\n\n    -- Execute a series of steps,
        keeping track of the positions after each step\n    takeSteps :: Position
        -&gt; [Step] -&gt; [Position]\n    takeSteps = scanl move\n\n    -- Make one
        move, by updating direction then position\n    move :: Position -&gt; Step
        -&gt; Position\n    move (Position facing easting northing)\n        (Step
        turnInstr distance) = \n        Position facing'' easting'' northing''\n        where
        facing'' = turn turnInstr facing\n              (easting'', northing'') =
        takeStep facing'' distance easting northing\n\n    -- Turn right, left, or
        straight\n    turn :: Char -&gt; Direction -&gt; Direction\n    turn ''R''
        direction = turnCW direction\n    turn ''L'' direction = turnACW direction\n    turn
        ''S'' direction = direction\n\n    -- Move in the current direction\n    takeStep
        :: Direction -&gt; Int -&gt; Int -&gt; Int -&gt; (Int, Int)\n    takeStep
        North d e n = (e, n+d)\n    takeStep South d e n = (e, n-d)\n    takeStep
        West  d e n = (e-d, n)\n    takeStep East  d e n = (e+d, n)\n\n\n    -- |
        a `succ` that wraps \n    turnCW :: (Bounded a, Enum a, Eq a) =&gt; a -&gt;
        a \n    turnCW dir | dir == maxBound = minBound\n             | otherwise
        = succ dir\n\n    -- | a `pred` that wraps\n    turnACW :: (Bounded a, Enum
        a, Eq a) =&gt; a -&gt; a\n    turnACW dir | dir == minBound = maxBound\n                |
        otherwise = pred dir\n\n    -- All the prefixes of a list of items\n    prefixes
        = scanl addTerm []\n        where addTerm ps t = ps ++ [t]\n\n    -- The first
        item that exists in a prefix of the list to that point\n    firstRepeat positions
        = \n        last $ head $ dropWhile (\\p -&gt; (last p) `notElem` (tail $
        reverse p)) \n                                (tail $ prefixes positions)\n\n\nNow
        you can all tell me how rubbish it is...", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_danme05", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve decided to use
        this event as a prompt to actually &lt;em&gt;learn&lt;/em&gt; Haskell.&lt;/p&gt;\n\n&lt;p&gt;My
        over-long and not-clever solution is at &lt;a href=\"https://git.njae.me.uk/?p=advent-of-code-16.git;a=blob;f=advent01.hs\"&gt;https://git.njae.me.uk/?p=advent-of-code-16.git;a=blob;f=advent01.hs&lt;/a&gt;
        &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import Data.List (sort)\nimport Data.List.Split
        (splitOn)\n\n-- turn direction, number of steps\ndata Step = Step Char Int
        deriving (Show)\n\ndata Direction = North | East | South | West \n    deriving
        (Enum, Show, Bounded, Eq)\n\n-- direction, easting, northing\ndata Position
        = Position Direction Int Int deriving (Show)\n-- Two positions are the same
        if they&amp;#39;re in the same place, \n-- regardless of facing\ninstance
        Eq Position where\n    Position _ e n == Position _ e&amp;#39; n&amp;#39;
        = e == e&amp;#39; &amp;amp;&amp;amp; n == n&amp;#39;\n\nmain :: IO ()\nmain
        = do \n        instructions &amp;lt;- readFile &amp;quot;advent01.txt&amp;quot;\n        part1
        instructions\n        part2 instructions\n\npart1 :: String -&amp;gt; IO ()\npart1
        instructions = do\n        let answer = finalDistance $ last $ stepsFromStart
        $ steps instructions\n        print answer\n\npart2 :: String -&amp;gt; IO
        ()\npart2 instructions = do\n        let visited = finalDistance $ firstRepeat
        $ stepsFromStart $ expandSteps $ steps instructions\n        print visited\n\n\n--
        Extract the steps from the input string.\nsteps :: String -&amp;gt; [Step]\nsteps
        s = map readStep $ splitOn &amp;quot;, &amp;quot; s\n    where readStep (d:l)
        = Step d (read l)\n\n-- Take steps from the starting position\nstepsFromStart
        :: [Step] -&amp;gt; [Position]\nstepsFromStart = takeSteps (Position North
        0 0)\n\n-- Calculate manhattan distance from start to this state\nfinalDistance
        :: Position -&amp;gt; Int\nfinalDistance (Position _ e n) = (abs e) + (abs
        n)\n\n-- For part 2: convert one step of many spaces to many steps of one
        space each\nexpandSteps :: [Step] -&amp;gt; [Step]\nexpandSteps = \n    concatMap
        expandStep\n    where expandStep (Step dir d) = (Step dir 1) : replicate (d
        - 1) (Step &amp;#39;S&amp;#39; 1)\n\n-- Execute a series of steps, keeping
        track of the positions after each step\ntakeSteps :: Position -&amp;gt; [Step]
        -&amp;gt; [Position]\ntakeSteps = scanl move\n\n-- Make one move, by updating
        direction then position\nmove :: Position -&amp;gt; Step -&amp;gt; Position\nmove
        (Position facing easting northing)\n    (Step turnInstr distance) = \n    Position
        facing&amp;#39; easting&amp;#39; northing&amp;#39;\n    where facing&amp;#39;
        = turn turnInstr facing\n          (easting&amp;#39;, northing&amp;#39;) =
        takeStep facing&amp;#39; distance easting northing\n\n-- Turn right, left,
        or straight\nturn :: Char -&amp;gt; Direction -&amp;gt; Direction\nturn &amp;#39;R&amp;#39;
        direction = turnCW direction\nturn &amp;#39;L&amp;#39; direction = turnACW
        direction\nturn &amp;#39;S&amp;#39; direction = direction\n\n-- Move in the
        current direction\ntakeStep :: Direction -&amp;gt; Int -&amp;gt; Int -&amp;gt;
        Int -&amp;gt; (Int, Int)\ntakeStep North d e n = (e, n+d)\ntakeStep South
        d e n = (e, n-d)\ntakeStep West  d e n = (e-d, n)\ntakeStep East  d e n =
        (e+d, n)\n\n\n-- | a `succ` that wraps \nturnCW :: (Bounded a, Enum a, Eq
        a) =&amp;gt; a -&amp;gt; a \nturnCW dir | dir == maxBound = minBound\n         |
        otherwise = succ dir\n\n-- | a `pred` that wraps\nturnACW :: (Bounded a, Enum
        a, Eq a) =&amp;gt; a -&amp;gt; a\nturnACW dir | dir == minBound = maxBound\n            |
        otherwise = pred dir\n\n-- All the prefixes of a list of items\nprefixes =
        scanl addTerm []\n    where addTerm ps t = ps ++ [t]\n\n-- The first item
        that exists in a prefix of the list to that point\nfirstRepeat positions =
        \n    last $ head $ dropWhile (\\p -&amp;gt; (last p) `notElem` (tail $ reverse
        p)) \n                            (tail $ prefixes positions)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now
        you can all tell me how rubbish it is...&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danme05/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480603695.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danowem", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "SyDr", "can_mod_post": false, "created_utc":
        1480607097.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_w32cg", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My solution with Lua (and lpeg):\n\nhttps://github.com/SyDr/Advent-Of-Code-2016/blob/master/1.lua",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danowem", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution with Lua (and lpeg):&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/SyDr/Advent-Of-Code-2016/blob/master/1.lua\"&gt;https://github.com/SyDr/Advent-Of-Code-2016/blob/master/1.lua&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danowem/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480607097.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danp37n", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "MoW8192", "can_mod_post": false, "created_utc":
        1480607336.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_t5mu4", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My solution in java.\nIt prints the solution
        for both parts.\nI slightly modified my original solution.\n\n    import java.io.BufferedReader;\n    import
        java.io.File;\n    import java.io.FileReader;\n    import java.io.IOException;\n    import
        java.lang.Math;\n    import java.util.HashSet;\n    \n    public class Day01\n    {\n    \tpublic
        static void main(String[] args) throws IOException\n    \t{\n    \t\t// Read
        in the input, split it into the seperate instructions.\n    \t\tBufferedReader
        reader = new BufferedReader(new FileReader(new File(\"input.txt\")));\n    \t\tString[]
        instructions = reader.readLine().split(\", \");\n    \t\treader.close();\n    \t\t\n    \t\t//
        Keeps track of our position as x and y coordinates.\n    \t\tint[] pos = new
        int[]{0, 0};\n    \t\t// Keeps track of the x and y direction we are currently
        facing.\n    \t\t// Positive x direction is north, positive y direction is
        west.\n    \t\tint[] dir = new int[]{1, 0};\n    \t\t\n    \t\t// Keep track
        of places we have visited for part 2.\n    \t\tHashSet&lt;String&gt; visited
        = new HashSet&lt;String&gt;();\n    \t\t// We start at position (0,0), add
        this to the set of visited instructions.\n    \t\tvisited.add(\"(0,0)\");\n    \t\t\n    \t\t//
        Variable for storing the solution for part 2.\n    \t\t// Initialized at -1
        so we know when we have already found the solution.\n    \t\tint solution2
        = -1;\n    \t\t\n    \t\tfor (String instruction : instructions)\n    \t\t{\n    \t\t\t//
        Rotate left or right.\n    \t\t\tdir = instruction.charAt(0) == ''L''? new
        int[]{-dir[1], dir[0]} : new int[]{dir[1], -dir[0]};\n    \t\t\t// Find the
        length we have to walk.\n    \t\t\tint length = Integer.parseInt(instruction.substring(1));\n    \t\t\tif
        (solution2 == -1)\n    \t\t\t{\n    \t\t\t\tfor (int i=1; i&lt;=length; i++)\n    \t\t\t\t{\n    \t\t\t\t\tint[]
        nextPos = new int[]{pos[0] + i * dir[0], pos[1] + i * dir[1]};\n    \t\t\t\t\t//
        String representation of the position so we can compare it to earlier visited
        locations.\n    \t\t\t\t\tString nextPosString = \"(\" + nextPos[0] + \",\"
        + nextPos[1] + \")\";\n    \t\t\t\t\t// We visited this location before, we
        have found the solution to part2!\n    \t\t\t\t\tif (visited.contains(nextPosString))\n    \t\t\t\t\t{\n    \t\t\t\t\t\tsolution2
        = Math.abs(nextPos[0]) + Math.abs(nextPos[1]);\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\t}\n    \t\t\t\t\tvisited.add(nextPosString);\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t//
        Update are position with the current instruction.\n    \t\t\tpos = new int[]{pos[0]
        + length * dir[0], pos[1] + length * dir[1]};\n    \t\t}\n    \t\t\n    \t\tint
        solution1 = Math.abs(pos[0]) + Math.abs(pos[1]);\n    \t\tSystem.out.println(\"part1:
        \" + solution1);\n    \t\tSystem.out.println(\"part2: \" + solution2);\n    \t}\n    }",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danp37n", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution in java.\nIt prints the solution for both parts.\nI slightly modified
        my original solution.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import java.io.BufferedReader;\nimport
        java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport
        java.lang.Math;\nimport java.util.HashSet;\n\npublic class Day01\n{\n    public
        static void main(String[] args) throws IOException\n    {\n        // Read
        in the input, split it into the seperate instructions.\n        BufferedReader
        reader = new BufferedReader(new FileReader(new File(&amp;quot;input.txt&amp;quot;)));\n        String[]
        instructions = reader.readLine().split(&amp;quot;, &amp;quot;);\n        reader.close();\n\n        //
        Keeps track of our position as x and y coordinates.\n        int[] pos = new
        int[]{0, 0};\n        // Keeps track of the x and y direction we are currently
        facing.\n        // Positive x direction is north, positive y direction is
        west.\n        int[] dir = new int[]{1, 0};\n\n        // Keep track of places
        we have visited for part 2.\n        HashSet&amp;lt;String&amp;gt; visited
        = new HashSet&amp;lt;String&amp;gt;();\n        // We start at position (0,0),
        add this to the set of visited instructions.\n        visited.add(&amp;quot;(0,0)&amp;quot;);\n\n        //
        Variable for storing the solution for part 2.\n        // Initialized at -1
        so we know when we have already found the solution.\n        int solution2
        = -1;\n\n        for (String instruction : instructions)\n        {\n            //
        Rotate left or right.\n            dir = instruction.charAt(0) == &amp;#39;L&amp;#39;?
        new int[]{-dir[1], dir[0]} : new int[]{dir[1], -dir[0]};\n            // Find
        the length we have to walk.\n            int length = Integer.parseInt(instruction.substring(1));\n            if
        (solution2 == -1)\n            {\n                for (int i=1; i&amp;lt;=length;
        i++)\n                {\n                    int[] nextPos = new int[]{pos[0]
        + i * dir[0], pos[1] + i * dir[1]};\n                    // String representation
        of the position so we can compare it to earlier visited locations.\n                    String
        nextPosString = &amp;quot;(&amp;quot; + nextPos[0] + &amp;quot;,&amp;quot;
        + nextPos[1] + &amp;quot;)&amp;quot;;\n                    // We visited this
        location before, we have found the solution to part2!\n                    if
        (visited.contains(nextPosString))\n                    {\n                        solution2
        = Math.abs(nextPos[0]) + Math.abs(nextPos[1]);\n                        break;\n                    }\n                    visited.add(nextPosString);\n                }\n            }\n            //
        Update are position with the current instruction.\n            pos = new int[]{pos[0]
        + length * dir[0], pos[1] + length * dir[1]};\n        }\n\n        int solution1
        = Math.abs(pos[0]) + Math.abs(pos[1]);\n        System.out.println(&amp;quot;part1:
        &amp;quot; + solution1);\n        System.out.println(&amp;quot;part2: &amp;quot;
        + solution2);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danp37n/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480607336.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danpa1s", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "tuxitop", "can_mod_post": false, "created_utc":
        1480607574.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_mzk26", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here''s my solution in JavaScript:\n\nhttps://github.com/tuxitop/adventOfCode2016/blob/master/day1/day1_noTimeForATaxicab.js",
        "edited": 1480864826.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danpa1s", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        my solution in JavaScript:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/tuxitop/adventOfCode2016/blob/master/day1/day1_noTimeForATaxicab.js\"&gt;https://github.com/tuxitop/adventOfCode2016/blob/master/day1/day1_noTimeForATaxicab.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danpa1s/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480607574.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danpvcb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Kwpolska", "can_mod_post": false, "created_utc":
        1480608317.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_5e4jn", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Simple Python solution. [Check out my repo
        for last year\u2019s, and this year\u2019s future tasks.](https://github.com/Kwpolska/adventofcode)\n\n\n    #!/usr/bin/env
        python3\n    directions = []\n    NORTH = 0\n    EAST = 1\n    SOUTH = 2\n    WEST
        = 3\n    loc = [0, 0]\n    seen = set()\n    INDEXES = {NORTH: 1, SOUTH: 1,
        EAST: 0, WEST: 0}\n    DIFFS = {NORTH: 1, SOUTH: -1, EAST: 1, WEST: -1}\n\n    DIR
        = NORTH\n\n    with open(\"input/01.txt\") as fh:\n        directions_t =
        fh.read().split('', '')\n        for t in directions_t:\n            directions.append((t[0],
        int(t[1:].strip())))\n\n    i = 0\n    for direction, distance in directions:\n        if
        direction == ''L'':\n            DIR = (DIR - 1) % 4\n        elif direction
        == ''R'':\n            DIR = (DIR + 1) % 4\n\n        for n in range(0, distance):\n            loc[INDEXES[DIR]]
        += DIFFS[DIR]\n            # Breaks down with lists for some reason.\n            loct
        = tuple(loc)\n            if loct in seen:\n                print(loct)\n                print(abs(loc[0])
        + abs(loc[1]))\n                exit(0)\n            else:\n                seen.add(loct)\n\n",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danpvcb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Simple
        Python solution. &lt;a href=\"https://github.com/Kwpolska/adventofcode\"&gt;Check
        out my repo for last year\u2019s, and this year\u2019s future tasks.&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env
        python3\ndirections = []\nNORTH = 0\nEAST = 1\nSOUTH = 2\nWEST = 3\nloc =
        [0, 0]\nseen = set()\nINDEXES = {NORTH: 1, SOUTH: 1, EAST: 0, WEST: 0}\nDIFFS
        = {NORTH: 1, SOUTH: -1, EAST: 1, WEST: -1}\n\nDIR = NORTH\n\nwith open(&amp;quot;input/01.txt&amp;quot;)
        as fh:\n    directions_t = fh.read().split(&amp;#39;, &amp;#39;)\n    for
        t in directions_t:\n        directions.append((t[0], int(t[1:].strip())))\n\ni
        = 0\nfor direction, distance in directions:\n    if direction == &amp;#39;L&amp;#39;:\n        DIR
        = (DIR - 1) % 4\n    elif direction == &amp;#39;R&amp;#39;:\n        DIR =
        (DIR + 1) % 4\n\n    for n in range(0, distance):\n        loc[INDEXES[DIR]]
        += DIFFS[DIR]\n        # Breaks down with lists for some reason.\n        loct
        = tuple(loc)\n        if loct in seen:\n            print(loct)\n            print(abs(loc[0])
        + abs(loc[1]))\n            exit(0)\n        else:\n            seen.add(loct)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danpvcb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480608317.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danszvx", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "m3nthal", "can_mod_post": false, "created_utc":
        1480612099.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_9gym0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here is my solution in **Clojure** \n\n\n    (require
        ''[clojure.set :refer [union intersection]])\n\n    (def input \"R4, R3, L3,
        L2, L1, R1, L1, R2, R3, L5, L5, R4, L4, R2, R4, L3, R3, L3, R3, R4, R2, L1,
        R2, L3, L2, L1, R3, R5, L1, L4, R2, L4, R3, R1, R2, L5, R2, L189, R5, L5,
        R52, R3, L1, R4, R5, R1, R4, L1, L3, R2, L2, L3, R4, R3, L2, L5, R4, R5, L2,
        R2, L1, L3, R3, L4, R4, R5, L1, L1, R3, L5, L2, R76, R2, R2, L1, L3, R189,
        L3, L4, L1, L3, R5, R4, L1, R1, L1, L1, R2, L4, R2, L5, L5, L5, R2, L4, L5,
        R4, R4, R5, L5, R3, L1, L3, L1, L1, L3, L4, R5, L3, R5, R3, R3, L5, L5, R3,
        R4, L3, R3, R1, R3, R2, R2, L1, R1, L3, L3, L3, L1, R2, L1, R4, R4, L1, L1,
        R3, R3, R4, R1, L5, L2, R2, R3, R2, L3, R4, L5, R1, R4, R5, R4, L4, R1, L3,
        R1, R3, L2, L3, R1, L2, R3, L3, L1, L3, R4, L4, L5, R3, R5, R4, R1, L2, R3,
        R5, L5, L4, L1, L1\")\n\n    (defrecord Instruction [relative-direction distance])\n\n    (defrecord
        Position [dot cardinal-direction])\n\n    (defrecord Dot [x y])\n\n    (def
        start-position (Position. (Dot. 0 0) :N))\n\n    (defn parse-instruction [s]\n    (Instruction.
        (keyword (re-find #\"[R,L]\" s)) (read-string (re-find #\"\\d{1,}\" s))))\n\n    (defn
        parse-instructions [input]\n    (-&gt;&gt; (clojure.string/split input #\",
        \")\n        (map parse-instruction)))\n\n    (defn travel [^Position p ^Instruction
        i]\n    (let [x (-&gt; p :dot :x)\n            y (-&gt; p :dot :y)\n            cardinal-direction
        (:cardinal-direction p)\n            relative-direction (:relative-direction
        i)\n            n (:distance i)]\n        (case cardinal-direction\n        :N
        (case relative-direction\n            :R (Position. (Dot. (+ x n) y) :E)\n            :L
        (Position. (Dot. (- x n) y) :W))\n        :E (case relative-direction\n            :R
        (Position. (Dot. x (- y n)) :S)\n            :L (Position. (Dot. x (+ y n))
        :N))\n        :S (case relative-direction\n            :R (Position. (Dot.
        (- x n) y) :W)\n            :L (Position. (Dot. (+ x n) y) :E))\n        :W
        (case relative-direction\n            :R (Position. (Dot. x (+ y n)) :N)\n            :L
        (Position. (Dot. x (- y n)) :S)))))\n\n    (defn find-hq-p1 [input]\n    (loop
        [position start-position\n            instructions (parse-instructions input)]\n        (if
        (empty? instructions)\n        position\n        (recur (travel position (first
        instructions))\n                (rest instructions)))))\n\n    (defn distance
        [^Dot a ^Dot b]\n    (+ (Math/abs (- (:x b) (:x a))) (Math/abs (- (:y b) (:y
        a)))))\n\n    (def answer-p1\n    (distance (:dot start-position) (:dot (find-hq-p1
        input))))\n\n    (defn range-from [a b]\n    (loop [a a\n            ax []]\n        (cond\n        (=
        a b) (conj ax a)\n        (&gt; a b) (recur (dec a) (conj ax a))\n        (&lt;
        a b) (recur (inc a) (conj ax a)))))\n\n    (defn dots-until [^Dot a ^Dot b]\n    (-&gt;&gt;\n        (cond\n        (=
        (:x a) (:x b)) (for [y (range-from (:y a) (:y b))]\n                            (Dot.
        (:x a) y))\n        (= (:y a) (:y b)) (for [x (range-from (:x a) (:x b))]\n                            (Dot.
        x (:y a))))\n        (remove #(= a %))\n        set))\n\n    (defn find-hq-p2
        [input]\n    (loop [position start-position\n            instructions (parse-instructions
        input)\n            visited-coords #{(:dot start-position)}]\n        (let
        [next-position (travel position (first instructions))\n            next-coords
        (dots-until (:dot position) (:dot next-position))\n            already-visited
        (intersection next-coords visited-coords)]\n        (if (empty? already-visited)\n            (recur
        next-position (rest instructions) (union visited-coords next-coords))\n            (first
        already-visited)))))\n            \n    (def answer-p2\n    (distance (:dot
        start-position) (find-hq-p2 input)))\n\n    (println \"Given input: \" input)\n    (println
        \"Answer to part 1: \" answer-p1)\n    (println \"Answer to part 2: \" answer-p2)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danszvx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here
        is my solution in &lt;strong&gt;Clojure&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(require
        &amp;#39;[clojure.set :refer [union intersection]])\n\n(def input &amp;quot;R4,
        R3, L3, L2, L1, R1, L1, R2, R3, L5, L5, R4, L4, R2, R4, L3, R3, L3, R3, R4,
        R2, L1, R2, L3, L2, L1, R3, R5, L1, L4, R2, L4, R3, R1, R2, L5, R2, L189,
        R5, L5, R52, R3, L1, R4, R5, R1, R4, L1, L3, R2, L2, L3, R4, R3, L2, L5, R4,
        R5, L2, R2, L1, L3, R3, L4, R4, R5, L1, L1, R3, L5, L2, R76, R2, R2, L1, L3,
        R189, L3, L4, L1, L3, R5, R4, L1, R1, L1, L1, R2, L4, R2, L5, L5, L5, R2,
        L4, L5, R4, R4, R5, L5, R3, L1, L3, L1, L1, L3, L4, R5, L3, R5, R3, R3, L5,
        L5, R3, R4, L3, R3, R1, R3, R2, R2, L1, R1, L3, L3, L3, L1, R2, L1, R4, R4,
        L1, L1, R3, R3, R4, R1, L5, L2, R2, R3, R2, L3, R4, L5, R1, R4, R5, R4, L4,
        R1, L3, R1, R3, L2, L3, R1, L2, R3, L3, L1, L3, R4, L4, L5, R3, R5, R4, R1,
        L2, R3, R5, L5, L4, L1, L1&amp;quot;)\n\n(defrecord Instruction [relative-direction
        distance])\n\n(defrecord Position [dot cardinal-direction])\n\n(defrecord
        Dot [x y])\n\n(def start-position (Position. (Dot. 0 0) :N))\n\n(defn parse-instruction
        [s]\n(Instruction. (keyword (re-find #&amp;quot;[R,L]&amp;quot; s)) (read-string
        (re-find #&amp;quot;\\d{1,}&amp;quot; s))))\n\n(defn parse-instructions [input]\n(-&amp;gt;&amp;gt;
        (clojure.string/split input #&amp;quot;, &amp;quot;)\n    (map parse-instruction)))\n\n(defn
        travel [^Position p ^Instruction i]\n(let [x (-&amp;gt; p :dot :x)\n        y
        (-&amp;gt; p :dot :y)\n        cardinal-direction (:cardinal-direction p)\n        relative-direction
        (:relative-direction i)\n        n (:distance i)]\n    (case cardinal-direction\n    :N
        (case relative-direction\n        :R (Position. (Dot. (+ x n) y) :E)\n        :L
        (Position. (Dot. (- x n) y) :W))\n    :E (case relative-direction\n        :R
        (Position. (Dot. x (- y n)) :S)\n        :L (Position. (Dot. x (+ y n)) :N))\n    :S
        (case relative-direction\n        :R (Position. (Dot. (- x n) y) :W)\n        :L
        (Position. (Dot. (+ x n) y) :E))\n    :W (case relative-direction\n        :R
        (Position. (Dot. x (+ y n)) :N)\n        :L (Position. (Dot. x (- y n)) :S)))))\n\n(defn
        find-hq-p1 [input]\n(loop [position start-position\n        instructions (parse-instructions
        input)]\n    (if (empty? instructions)\n    position\n    (recur (travel position
        (first instructions))\n            (rest instructions)))))\n\n(defn distance
        [^Dot a ^Dot b]\n(+ (Math/abs (- (:x b) (:x a))) (Math/abs (- (:y b) (:y a)))))\n\n(def
        answer-p1\n(distance (:dot start-position) (:dot (find-hq-p1 input))))\n\n(defn
        range-from [a b]\n(loop [a a\n        ax []]\n    (cond\n    (= a b) (conj
        ax a)\n    (&amp;gt; a b) (recur (dec a) (conj ax a))\n    (&amp;lt; a b)
        (recur (inc a) (conj ax a)))))\n\n(defn dots-until [^Dot a ^Dot b]\n(-&amp;gt;&amp;gt;\n    (cond\n    (=
        (:x a) (:x b)) (for [y (range-from (:y a) (:y b))]\n                        (Dot.
        (:x a) y))\n    (= (:y a) (:y b)) (for [x (range-from (:x a) (:x b))]\n                        (Dot.
        x (:y a))))\n    (remove #(= a %))\n    set))\n\n(defn find-hq-p2 [input]\n(loop
        [position start-position\n        instructions (parse-instructions input)\n        visited-coords
        #{(:dot start-position)}]\n    (let [next-position (travel position (first
        instructions))\n        next-coords (dots-until (:dot position) (:dot next-position))\n        already-visited
        (intersection next-coords visited-coords)]\n    (if (empty? already-visited)\n        (recur
        next-position (rest instructions) (union visited-coords next-coords))\n        (first
        already-visited)))))\n\n(def answer-p2\n(distance (:dot start-position) (find-hq-p2
        input)))\n\n(println &amp;quot;Given input: &amp;quot; input)\n(println &amp;quot;Answer
        to part 1: &amp;quot; answer-p1)\n(println &amp;quot;Answer to part 2: &amp;quot;
        answer-p2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danszvx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480612099.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danttij", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "efexen", "can_mod_post": false, "created_utc":
        1480613052.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_lizzu", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Some naughty and nice (more naughty) Elixir
        for Part 1 and 2:\nhttps://github.com/efexen/advent_of_code/blob/master/lib/day1.ex",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danttij", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Some
        naughty and nice (more naughty) Elixir for Part 1 and 2:\n&lt;a href=\"https://github.com/efexen/advent_of_code/blob/master/lib/day1.ex\"&gt;https://github.com/efexen/advent_of_code/blob/master/lib/day1.ex&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danttij/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480613052.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danu0a5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "LainIwakura", "can_mod_post": false, "created_utc":
        1480613266.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_4z2qw", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Erlang solutions here:\nhttps://github.com/LainIwakura/AdventOfCode2016/tree/master/Day1\n\nMight
        be a bit messy, I haven''t done much with erlang since last years advent of
        code.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danu0a5", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Erlang
        solutions here:\n&lt;a href=\"https://github.com/LainIwakura/AdventOfCode2016/tree/master/Day1\"&gt;https://github.com/LainIwakura/AdventOfCode2016/tree/master/Day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Might
        be a bit messy, I haven&amp;#39;t done much with erlang since last years advent
        of code.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danu0a5/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480613266.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danvbki",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ShroudedEUW",
        "can_mod_post": false, "created_utc": 1480614796.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_9fdc4", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "**C#**\n\n\nThe
        first part was relatively straightforward, but I made a trainwreck out of
        it for #2.\n\nhttps://github.com/KVooys/AdventOfCode/blob/master/AdventOfCode/Day1.cs",
        "edited": 1480616042.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danvbki", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The
        first part was relatively straightforward, but I made a trainwreck out of
        it for #2.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/KVooys/AdventOfCode/blob/master/AdventOfCode/Day1.cs\"&gt;https://github.com/KVooys/AdventOfCode/blob/master/AdventOfCode/Day1.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danvbki/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480614796.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danwyg1", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "raevnos", "can_mod_post": false, "created_utc":
        1480616699.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_3995k", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Very rusty ocaml:\n\n    open Batteries\n    \n    type
        pair = { x : int; y : int }\n    type direction = North | East | West | South\n    type
        rotate = Left | Right\n    \n    let new_direction d r = \n      match d with\n      |
        North when r = Left -&gt; West\n      | North -&gt; East\n      | East when
        r = Left -&gt; North\n      | East -&gt; South\n      | South when r = Left
        -&gt; East\n      | South -&gt; West\n      | West when r = Left -&gt; South\n      |
        West -&gt; North\n    \n    let to_direction = function\n      | \"L\" -&gt;
        Left\n      | \"R\" -&gt; Right\n      | _ -&gt; raise (Invalid_argument \"Direction
        must be L or R\")\n    \n    let adjust dir dist pos =\n      match dir with\n      |
        North -&gt; { pos with y = pos.y + dist }\n      | East -&gt; { pos with x
        = pos.x + dist }\n      | South -&gt; { pos with y = pos.y - dist }\n      |
        West -&gt; { pos with x = pos.x - dist }\n    \n    let re = Str.regexp \"
        *\\\\([LR]\\\\)\\\\([0-9]+\\\\) *\"\n    \n    let move dir (d, pos) = \n      if
        Str.string_match re dir 0 then begin\n        let r = Str.matched_group 1
        dir \n        and dist = int_of_string (Str.matched_group 2 dir) in\n        let
        newdir = new_direction d (to_direction r) in\n        (newdir, adjust newdir
        dist pos)\n      end else\n        raise (Invalid_argument (\"Invalid direction
        string: \" ^ dir))\n    \n    let taxi orig dest =\n      let a1 = abs (orig.x
        - dest.x)\n      and a2 = abs (orig.y - dest.y) in\n      a1 + a2\n    \n    let
        rec add_points cache orig dest =\n      if orig = dest then\n        (false,
        orig, cache)\n      else begin\n        let newpoint = \n        if orig.x
        &lt; dest.x then\n          { orig with x = orig.x + 1 }\n        else if
        orig.x &gt; dest.x then\n          { orig with x = orig.x - 1 }\n        else
        if orig.y &lt; dest.y then\n          { orig with y = orig.y + 1 }\n        else
        if orig.y &gt; dest.y then\n          { orig with y = orig.y - 1 } \n        else\n          orig
        in\n        if BatSet.mem newpoint cache then\n          (true, newpoint,
        cache)\n        else\n          add_points (BatSet.add newpoint cache) newpoint
        dest\n      end\n    \n    let first_repeat dirs loc =\n      let points =
        BatSet.add (snd loc) BatSet.empty in\n      let rec helper loc cache = function\n        |
        hd :: tl -&gt;\n          let (newdir, newloc) = move hd loc in\n          let
        (found, repeat, cache) = add_points cache (snd loc) newloc in\n          if
        found then\n    \trepeat\n          else\n    \thelper (newdir, newloc) cache
        tl\n        | [] -&gt; raise (Invalid_argument \"No repeated coordinates!\")
        in\n      helper loc points dirs\n    \n    let main () = \n      let startc
        = {x = 0; y = 0 }\n      and currc = ref (North, { x = 0; y = 0 })\n      and
        dirs = BatString.nsplit (input_all Pervasives.stdin) \",\" in\n      List.iter
        (fun d -&gt; currc := move d !currc) dirs;\n      Printf.printf \"Ending coordinates:
        x = %d, y = %d\\n\" (snd !currc).x (snd !currc).y;\n      Printf.printf \"Distance:
        %d\\n\" (taxi startc (snd !currc));\n      let repeat = first_repeat dirs
        (North, { x = 0; y = 0}) in\n      Printf.printf \"First repeated coordinate:
        x = %d, y = %d\\n\" repeat.x repeat.y;\n      Printf.printf \"Distance: %d\\n\"
        (taxi startc repeat)\n    \n    let _ = main ()\n          \n", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_danwyg1",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very rusty ocaml:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;open
        Batteries\n\ntype pair = { x : int; y : int }\ntype direction = North | East
        | West | South\ntype rotate = Left | Right\n\nlet new_direction d r = \n  match
        d with\n  | North when r = Left -&amp;gt; West\n  | North -&amp;gt; East\n  |
        East when r = Left -&amp;gt; North\n  | East -&amp;gt; South\n  | South when
        r = Left -&amp;gt; East\n  | South -&amp;gt; West\n  | West when r = Left
        -&amp;gt; South\n  | West -&amp;gt; North\n\nlet to_direction = function\n  |
        &amp;quot;L&amp;quot; -&amp;gt; Left\n  | &amp;quot;R&amp;quot; -&amp;gt;
        Right\n  | _ -&amp;gt; raise (Invalid_argument &amp;quot;Direction must be
        L or R&amp;quot;)\n\nlet adjust dir dist pos =\n  match dir with\n  | North
        -&amp;gt; { pos with y = pos.y + dist }\n  | East -&amp;gt; { pos with x =
        pos.x + dist }\n  | South -&amp;gt; { pos with y = pos.y - dist }\n  | West
        -&amp;gt; { pos with x = pos.x - dist }\n\nlet re = Str.regexp &amp;quot;
        *\\\\([LR]\\\\)\\\\([0-9]+\\\\) *&amp;quot;\n\nlet move dir (d, pos) = \n  if
        Str.string_match re dir 0 then begin\n    let r = Str.matched_group 1 dir
        \n    and dist = int_of_string (Str.matched_group 2 dir) in\n    let newdir
        = new_direction d (to_direction r) in\n    (newdir, adjust newdir dist pos)\n  end
        else\n    raise (Invalid_argument (&amp;quot;Invalid direction string: &amp;quot;
        ^ dir))\n\nlet taxi orig dest =\n  let a1 = abs (orig.x - dest.x)\n  and a2
        = abs (orig.y - dest.y) in\n  a1 + a2\n\nlet rec add_points cache orig dest
        =\n  if orig = dest then\n    (false, orig, cache)\n  else begin\n    let
        newpoint = \n    if orig.x &amp;lt; dest.x then\n      { orig with x = orig.x
        + 1 }\n    else if orig.x &amp;gt; dest.x then\n      { orig with x = orig.x
        - 1 }\n    else if orig.y &amp;lt; dest.y then\n      { orig with y = orig.y
        + 1 }\n    else if orig.y &amp;gt; dest.y then\n      { orig with y = orig.y
        - 1 } \n    else\n      orig in\n    if BatSet.mem newpoint cache then\n      (true,
        newpoint, cache)\n    else\n      add_points (BatSet.add newpoint cache) newpoint
        dest\n  end\n\nlet first_repeat dirs loc =\n  let points = BatSet.add (snd
        loc) BatSet.empty in\n  let rec helper loc cache = function\n    | hd :: tl
        -&amp;gt;\n      let (newdir, newloc) = move hd loc in\n      let (found,
        repeat, cache) = add_points cache (snd loc) newloc in\n      if found then\n    repeat\n      else\n    helper
        (newdir, newloc) cache tl\n    | [] -&amp;gt; raise (Invalid_argument &amp;quot;No
        repeated coordinates!&amp;quot;) in\n  helper loc points dirs\n\nlet main
        () = \n  let startc = {x = 0; y = 0 }\n  and currc = ref (North, { x = 0;
        y = 0 })\n  and dirs = BatString.nsplit (input_all Pervasives.stdin) &amp;quot;,&amp;quot;
        in\n  List.iter (fun d -&amp;gt; currc := move d !currc) dirs;\n  Printf.printf
        &amp;quot;Ending coordinates: x = %d, y = %d\\n&amp;quot; (snd !currc).x (snd
        !currc).y;\n  Printf.printf &amp;quot;Distance: %d\\n&amp;quot; (taxi startc
        (snd !currc));\n  let repeat = first_repeat dirs (North, { x = 0; y = 0})
        in\n  Printf.printf &amp;quot;First repeated coordinate: x = %d, y = %d\\n&amp;quot;
        repeat.x repeat.y;\n  Printf.printf &amp;quot;Distance: %d\\n&amp;quot; (taxi
        startc repeat)\n\nlet _ = main ()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danwyg1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480616699.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "daqdtcr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WildCardJoker",
        "can_mod_post": false, "created_utc": 1480759268.0, "send_replies": true,
        "parent_id": "t1_danxdpw", "score": 1, "author_fullname": "t2_azeu0", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Too long? That''s quite short :)\n\nI invite you to [review my code](https://github.com/wildcardjoker/AdventOfCode/tree/2016/Projects/2016/Day1_NoTimeForATaxicab).
        I''m not aiming for code golf, and I''ve probably over-engineered it, but
        like you say - it''s not stupid if it works :)\n\nHopefully, it will help
        someone else. There aren''t as many c# solutions as I thought there would
        be.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_daqdtcr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Too
        long? That&amp;#39;s quite short :)&lt;/p&gt;\n\n&lt;p&gt;I invite you to
        &lt;a href=\"https://github.com/wildcardjoker/AdventOfCode/tree/2016/Projects/2016/Day1_NoTimeForATaxicab\"&gt;review
        my code&lt;/a&gt;. I&amp;#39;m not aiming for code golf, and I&amp;#39;ve
        probably over-engineered it, but like you say - it&amp;#39;s not stupid if
        it works :)&lt;/p&gt;\n\n&lt;p&gt;Hopefully, it will help someone else. There
        aren&amp;#39;t as many c# solutions as I thought there would be.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daqdtcr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480759268.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "danxdpw", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Tokebluff", "can_mod_post": false, "created_utc":
        1480617181.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_j0b4g", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My solution in C#. A little too long, but
        hey, it is not stupid if it works.\n\nhttps://github.com/Tokebluff/AdventOfCode2016/blob/master/Advent%20of%20code%202016/Advent%20of%20code%202016/Day1.cs",
        "edited": 1480621384.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danxdpw", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution in C#. A little too long, but hey, it is not stupid if it works.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Tokebluff/AdventOfCode2016/blob/master/Advent%20of%20code%202016/Advent%20of%20code%202016/Day1.cs\"&gt;https://github.com/Tokebluff/AdventOfCode2016/blob/master/Advent%20of%20code%202016/Advent%20of%20code%202016/Day1.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danxdpw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480617181.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "danyabs", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "alchzh", "can_mod_post": false, "created_utc":
        1480618207.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_d8ahd", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "https://github.com/acz13/advent-of-code-2016/blob/master/day1/day1.py\n\nHo
        Ho Ho! I''m in eastern time and wasn''t up at midnight so I did it as soon
        as I woke up (7 AM ish) in 8 minutes...\n\nquality is pretty low", "edited":
        1480618491.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_danyabs", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/acz13/advent-of-code-2016/blob/master/day1/day1.py\"&gt;https://github.com/acz13/advent-of-code-2016/blob/master/day1/day1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Ho
        Ho Ho! I&amp;#39;m in eastern time and wasn&amp;#39;t up at midnight so I
        did it as soon as I woke up (7 AM ish) in 8 minutes...&lt;/p&gt;\n\n&lt;p&gt;quality
        is pretty low&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danyabs/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480618207.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danyj22",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Rosydoodles",
        "can_mod_post": false, "created_utc": 1480618485.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_5yd3q", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "I''m
        only a beginning CS Student, so this is probably far from the best solution.
        (I just threw the provided data into TextWrangler and formatted it as a String
        array using find and replace.) Java:\n\n    \tpublic class Day1 {\n    \n        private
        static int ndistance = 0, sdistance = 0, edistance = 0, wdistance = 0;\n        private
        static char direction = ''n'';\n    \n    \n        public static void main(String[]
        args) {\n            String[] instructions = new String[] {};\n            for
        (String instruction : instructions) {\n                char instructionDirection
        = instruction.charAt(0);\n                String temp = instruction.replaceAll(\"[^0-9]\",
        \"\");\n                int instructionDistance =  Integer.parseInt(temp);\n                changeDirection(instructionDirection,
        instructionDistance);\n            }\n            int horizontal = edistance
        - wdistance;\n            if (horizontal &lt; 0) {\n                horizontal
        = -horizontal;\n            }\n            int vertical = ndistance - sdistance;\n            if
        (vertical &lt; 0) {\n                vertical = -vertical;\n            }\n            int
        totalDistance = vertical + horizontal;\n            System.out.println(\"The
        Easter Bunny is \" + totalDistance + \" blocks away\");\n        }\n    \n        private
        static void changeDirection(char turn, int distance) {\n            if (turn
        == ''L'') {\n                switch (direction) {\n                    case
        ''n'': direction = ''w'';\n                        wdistance += distance;\n                        break;\n                    case
        ''w'': direction = ''s'';\n                        sdistance += distance;\n                        break;\n                    case
        ''s'': direction = ''e'';\n                        edistance += distance;\n                        break;\n                    case
        ''e'': direction = ''n'';\n                        ndistance += distance;\n                        break;\n                }\n            }
        else if (turn == ''R'') {\n                switch (direction) {\n                    case
        ''n'': direction = ''e'';\n                        edistance += distance;\n                        break;\n                    case
        ''w'': direction = ''n'';\n                        ndistance += distance;\n                        break;\n                    case
        ''s'': direction = ''w'';\n                        wdistance += distance;\n                        break;\n                    case
        ''e'': direction = ''s'';\n                        sdistance += distance;\n                        break;\n                }\n            }\n        }\n    }\n
        \nDon''t slaughter me :P", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_danyj22", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        only a beginning CS Student, so this is probably far from the best solution.
        (I just threw the provided data into TextWrangler and formatted it as a String
        array using find and replace.) Java:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    public
        class Day1 {\n\n    private static int ndistance = 0, sdistance = 0, edistance
        = 0, wdistance = 0;\n    private static char direction = &amp;#39;n&amp;#39;;\n\n\n    public
        static void main(String[] args) {\n        String[] instructions = new String[]
        {};\n        for (String instruction : instructions) {\n            char instructionDirection
        = instruction.charAt(0);\n            String temp = instruction.replaceAll(&amp;quot;[^0-9]&amp;quot;,
        &amp;quot;&amp;quot;);\n            int instructionDistance =  Integer.parseInt(temp);\n            changeDirection(instructionDirection,
        instructionDistance);\n        }\n        int horizontal = edistance - wdistance;\n        if
        (horizontal &amp;lt; 0) {\n            horizontal = -horizontal;\n        }\n        int
        vertical = ndistance - sdistance;\n        if (vertical &amp;lt; 0) {\n            vertical
        = -vertical;\n        }\n        int totalDistance = vertical + horizontal;\n        System.out.println(&amp;quot;The
        Easter Bunny is &amp;quot; + totalDistance + &amp;quot; blocks away&amp;quot;);\n    }\n\n    private
        static void changeDirection(char turn, int distance) {\n        if (turn ==
        &amp;#39;L&amp;#39;) {\n            switch (direction) {\n                case
        &amp;#39;n&amp;#39;: direction = &amp;#39;w&amp;#39;;\n                    wdistance
        += distance;\n                    break;\n                case &amp;#39;w&amp;#39;:
        direction = &amp;#39;s&amp;#39;;\n                    sdistance += distance;\n                    break;\n                case
        &amp;#39;s&amp;#39;: direction = &amp;#39;e&amp;#39;;\n                    edistance
        += distance;\n                    break;\n                case &amp;#39;e&amp;#39;:
        direction = &amp;#39;n&amp;#39;;\n                    ndistance += distance;\n                    break;\n            }\n        }
        else if (turn == &amp;#39;R&amp;#39;) {\n            switch (direction) {\n                case
        &amp;#39;n&amp;#39;: direction = &amp;#39;e&amp;#39;;\n                    edistance
        += distance;\n                    break;\n                case &amp;#39;w&amp;#39;:
        direction = &amp;#39;n&amp;#39;;\n                    ndistance += distance;\n                    break;\n                case
        &amp;#39;s&amp;#39;: direction = &amp;#39;w&amp;#39;;\n                    wdistance
        += distance;\n                    break;\n                case &amp;#39;e&amp;#39;:
        direction = &amp;#39;s&amp;#39;;\n                    sdistance += distance;\n                    break;\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Don&amp;#39;t
        slaughter me :P&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danyj22/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480618485.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "danzmp3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MrAckerman",
        "can_mod_post": false, "created_utc": 1480619762.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_d1a33", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Python
        3 Solution based on dictionary lookups.\n\n\n[Pastebin with code.](http://pastebin.com/nkUdtuPj)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_danzmp3", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3 Solution based on dictionary lookups.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://pastebin.com/nkUdtuPj\"&gt;Pastebin
        with code.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/danzmp3/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480619762.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "dao0xo0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mdhall50",
        "can_mod_post": false, "created_utc": 1480621246.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_p1z9l", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "JavaScript
        (specifically part 2, but part 1 commented out):\nhttps://gist.github.com/HallM/8c675edbded6b1fc4a93cdcc19a6539d\n\nUses
        line segments and calculates the intersection. Optimizes a bit by knowing
        that a line segment can only intersect with one perpendicular, that lines
        alternate orientation, and that the previous line always is an intersection
        but should never be counted.", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_dao0xo0", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript (specifically part 2, but part
        1 commented out):\n&lt;a href=\"https://gist.github.com/HallM/8c675edbded6b1fc4a93cdcc19a6539d\"&gt;https://gist.github.com/HallM/8c675edbded6b1fc4a93cdcc19a6539d&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Uses
        line segments and calculates the intersection. Optimizes a bit by knowing
        that a line segment can only intersect with one perpendicular, that lines
        alternate orientation, and that the previous line always is an intersection
        but should never be counted.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao0xo0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480621246.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao1fto", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TinSoldier6", "can_mod_post": false, "created_utc":
        1480621809.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_f5tp5", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Go implementation:\nhttps://github.com/TinSoldier6/Advent2016/tree/master/01Dec",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dao1fto", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go
        implementation:\n&lt;a href=\"https://github.com/TinSoldier6/Advent2016/tree/master/01Dec\"&gt;https://github.com/TinSoldier6/Advent2016/tree/master/01Dec&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao1fto/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480621809.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "dao2bgt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Mathematica.\n\n    rotL = RotationMatrix[Pi/2];\n    rotR
        = RotationMatrix[-Pi/2];\n    iden = IdentityMatrix[2];\n\n    input = Import[NotebookDirectory[]
        &lt;&gt; \"day1.txt\"];\n    moves = Join @@ First /@ StringCases[StringSplit[input,
        \",\"],\n\t rot_ ~~ w : NumberString :&gt;\n\t  Prepend[Table[iden, ToExpression[w]
        - 1],\n\t   If[rot == \"L\", rotL, rotR]]];\n    positions = Rest@FoldList[#2.#1
        &amp;, {0, 1}, moves];\n\n    Total@Abs[Total@positions]\n\n    Total@Abs@FirstCase[Tally[Accumulate[positions]],
        {p_, 2} :&gt; p]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Mathematica.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;rotL
        = RotationMatrix[Pi/2];\nrotR = RotationMatrix[-Pi/2];\niden = IdentityMatrix[2];\n\ninput
        = Import[NotebookDirectory[] &amp;lt;&amp;gt; &amp;quot;day1.txt&amp;quot;];\nmoves
        = Join @@ First /@ StringCases[StringSplit[input, &amp;quot;,&amp;quot;],\n
        rot_ ~~ w : NumberString :&amp;gt;\n  Prepend[Table[iden, ToExpression[w]
        - 1],\n   If[rot == &amp;quot;L&amp;quot;, rotL, rotR]]];\npositions = Rest@FoldList[#2.#1
        &amp;amp;, {0, 1}, moves];\n\nTotal@Abs[Total@positions]\n\nTotal@Abs@FirstCase[Tally[Accumulate[positions]],
        {p_, 2} :&amp;gt; p]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "subreddit_type": "public", "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao2bgt/", "num_reports":
        null, "locked": false, "name": "t1_dao2bgt", "created": 1480622801.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1480622801.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "more", "data": {"count": 1, "name": "t1_daz8flw", "id": "daz8flw",
        "parent_id": "t1_dayqdv5", "depth": 2, "children": ["daz8flw"]}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "dayqdv5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_dao2hs7", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "You seem to
        be writing \"Java\" in Haskell syntax.\nWas this done intentionally as a learning
        exercise?", "edited": false, "author_flair_css_class": null, "collapsed":
        false, "downs": 0, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You
        seem to be writing &amp;quot;Java&amp;quot; in Haskell syntax.\nWas this done
        intentionally as a learning exercise?&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "subreddit_type": "public", "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dayqdv5/", "num_reports":
        null, "locked": false, "name": "t1_dayqdv5", "created": 1481244711.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1481244711.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "dao2hs7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dasdull", "can_mod_post": false, "created_utc":
        1480623000.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_m4scr", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My (quite verbose) solution in Haskell:   https://github.com/vanHavel/AdventOfCode2016\nI
        will try to use this challenge to learn more about Haskell monads. This was
        my first time using a monad transformer.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dao2hs7", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My (quite verbose) solution
        in Haskell:   &lt;a href=\"https://github.com/vanHavel/AdventOfCode2016\"&gt;https://github.com/vanHavel/AdventOfCode2016&lt;/a&gt;\nI
        will try to use this challenge to learn more about Haskell monads. This was
        my first time using a monad transformer.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao2hs7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480623000.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "dao4d13", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "** Clojure **\n\n    (ns aoc2016.day01\n      (:require
        [clojure.string :as str]\n                [clojure.set :as set]))\n    \n    (defn
        parse-instr [entry]\n      {:dir (subs entry 0 1) :amount (Integer. (subs
        entry 1))})\n    \n    (def input (map parse-instr (str/split (str/trim (slurp
        \"./data/day01.txt\")) #\", \")))\n    \n    (defn count-distance [state]\n      (+
        (Math/abs (:x state)) (Math/abs (:y state))))\n    \n    (defn next-coord
        [state instr]\n      \"Takes a state map (direction and coordinates) and an
        instruction map, returns a new state.\"\n      (let [turn (str/join [(:dir
        state) (:dir instr)])\n            x (:x state)\n            y (:y state)\n            amount
        (:amount instr)]\n        (case turn\n          (\"NR\" \"SL\") {:dir \"E\"
        :x (+ x amount) :y y}\n          (\"ER\" \"WL\") {:dir \"S\" :x x :y (- y
        amount)}\n          (\"SR\" \"NL\") {:dir \"W\" :x (- x amount) :y y}\n          (\"WR\"
        \"EL\") {:dir \"N\" :x x :y (+ y amount)})))\n    \n    (defn part-1 []\n      (loop
        [state {:dir \"N\" :x 0 :y 0}\n             moves input]\n        (if (empty?
        moves)\n          (count-distance state)\n          (recur\n           (next-coord
        state (first moves))\n           (rest moves)))))\n    \n    (defn inter-states
        [state1 state2]\n      \"This monstrosity returns a sequence of intermediate
        states between two coords.\"\n      (let [x1 (:x state1)\n            y1 (:y
        state1)\n            x2 (:x state2)\n            y2 (:y state2)]\n        (if
        (= x1 x2)\n          (map #(assoc {:x x1} :y %) (flatten (conj (range (inc
        y2) y1) (range (dec y2) y1 -1))))\n          (map #(assoc {:y y1} :x %) (flatten
        (conj (range (inc x2) x1) (range (dec x2) x1 -1)))))))\n    \n    (defn already-visited?
        [states state]\n      (filter #(and (= (:x state) (:x %))\n                    (=
        (:y state) (:y %))) states))\n    \n    (defn part-2 []\n      (loop [state
        {:dir \"N\" :x 0 :y 0}\n             moves input\n             visited []]\n        (let
        [next (next-coord state (first moves))\n              inters (inter-states
        state next)\n              same (set/intersection (set visited) (set inters))]\n          (if-not
        (empty? same)\n            (count-distance (first same))\n            (recur
        (next-coord state (first moves))\n                   (rest moves)\n                   (conj
        (concat visited inters) state))))))", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;**
        Clojure **&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns aoc2016.day01\n  (:require
        [clojure.string :as str]\n            [clojure.set :as set]))\n\n(defn parse-instr
        [entry]\n  {:dir (subs entry 0 1) :amount (Integer. (subs entry 1))})\n\n(def
        input (map parse-instr (str/split (str/trim (slurp &amp;quot;./data/day01.txt&amp;quot;))
        #&amp;quot;, &amp;quot;)))\n\n(defn count-distance [state]\n  (+ (Math/abs
        (:x state)) (Math/abs (:y state))))\n\n(defn next-coord [state instr]\n  &amp;quot;Takes
        a state map (direction and coordinates) and an instruction map, returns a
        new state.&amp;quot;\n  (let [turn (str/join [(:dir state) (:dir instr)])\n        x
        (:x state)\n        y (:y state)\n        amount (:amount instr)]\n    (case
        turn\n      (&amp;quot;NR&amp;quot; &amp;quot;SL&amp;quot;) {:dir &amp;quot;E&amp;quot;
        :x (+ x amount) :y y}\n      (&amp;quot;ER&amp;quot; &amp;quot;WL&amp;quot;)
        {:dir &amp;quot;S&amp;quot; :x x :y (- y amount)}\n      (&amp;quot;SR&amp;quot;
        &amp;quot;NL&amp;quot;) {:dir &amp;quot;W&amp;quot; :x (- x amount) :y y}\n      (&amp;quot;WR&amp;quot;
        &amp;quot;EL&amp;quot;) {:dir &amp;quot;N&amp;quot; :x x :y (+ y amount)})))\n\n(defn
        part-1 []\n  (loop [state {:dir &amp;quot;N&amp;quot; :x 0 :y 0}\n         moves
        input]\n    (if (empty? moves)\n      (count-distance state)\n      (recur\n       (next-coord
        state (first moves))\n       (rest moves)))))\n\n(defn inter-states [state1
        state2]\n  &amp;quot;This monstrosity returns a sequence of intermediate states
        between two coords.&amp;quot;\n  (let [x1 (:x state1)\n        y1 (:y state1)\n        x2
        (:x state2)\n        y2 (:y state2)]\n    (if (= x1 x2)\n      (map #(assoc
        {:x x1} :y %) (flatten (conj (range (inc y2) y1) (range (dec y2) y1 -1))))\n      (map
        #(assoc {:y y1} :x %) (flatten (conj (range (inc x2) x1) (range (dec x2) x1
        -1)))))))\n\n(defn already-visited? [states state]\n  (filter #(and (= (:x
        state) (:x %))\n                (= (:y state) (:y %))) states))\n\n(defn part-2
        []\n  (loop [state {:dir &amp;quot;N&amp;quot; :x 0 :y 0}\n         moves
        input\n         visited []]\n    (let [next (next-coord state (first moves))\n          inters
        (inter-states state next)\n          same (set/intersection (set visited)
        (set inters))]\n      (if-not (empty? same)\n        (count-distance (first
        same))\n        (recur (next-coord state (first moves))\n               (rest
        moves)\n               (conj (concat visited inters) state))))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao4d13/",
        "num_reports": null, "locked": false, "name": "t1_dao4d13", "created": 1480625121.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480625121.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao50l6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Deckard666", "can_mod_post": false, "created_utc":
        1480625854.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_e924e", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "In Rust:\n\n    fn turn(direction: &amp;mut
        [i32; 2], side: &amp;str) {\n        if side == \"R\" {\n            *direction
        = [direction[1], -direction[0]];\n        } else if side == \"L\" {\n            *direction
        = [-direction[1], direction[0]];\n        }\n    }\n\n    fn main() {\n        use
        std::collections::HashSet;\n        let path = include_str!(\"../path.txt\");\n        let
        steps = path.split('','').map(|x| x.trim());\n\n        let mut pos = [0,
        0];\n        let mut direction = [0, 1];\n        let mut set = HashSet::new();\n        set.insert(pos);\n        let
        mut solved2 = false;\n\n        for step in steps {\n            let (side,
        n) = step.split_at(1);\n            turn(&amp;mut direction, side);\n            let
        mut n = n.parse::&lt;i32&gt;().unwrap();\n            while n &gt; 0 {\n                pos[0]
        += direction[0];\n                pos[1] += direction[1];\n                n
        -= 1;\n                if !solved2 {\n                    if set.contains(&amp;pos)
        {\n                        println!(\"Part 2: {}\", pos[0].abs() + pos[1].abs());\n                        solved2
        = true;\n                    } else {\n                        set.insert(pos);\n                    }\n                }\n            }\n        }\n        println!(\"Part
        1: {}\", pos[0].abs() + pos[1].abs());\n    }\n", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dao50l6", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In Rust:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        turn(direction: &amp;amp;mut [i32; 2], side: &amp;amp;str) {\n    if side
        == &amp;quot;R&amp;quot; {\n        *direction = [direction[1], -direction[0]];\n    }
        else if side == &amp;quot;L&amp;quot; {\n        *direction = [-direction[1],
        direction[0]];\n    }\n}\n\nfn main() {\n    use std::collections::HashSet;\n    let
        path = include_str!(&amp;quot;../path.txt&amp;quot;);\n    let steps = path.split(&amp;#39;,&amp;#39;).map(|x|
        x.trim());\n\n    let mut pos = [0, 0];\n    let mut direction = [0, 1];\n    let
        mut set = HashSet::new();\n    set.insert(pos);\n    let mut solved2 = false;\n\n    for
        step in steps {\n        let (side, n) = step.split_at(1);\n        turn(&amp;amp;mut
        direction, side);\n        let mut n = n.parse::&amp;lt;i32&amp;gt;().unwrap();\n        while
        n &amp;gt; 0 {\n            pos[0] += direction[0];\n            pos[1] +=
        direction[1];\n            n -= 1;\n            if !solved2 {\n                if
        set.contains(&amp;amp;pos) {\n                    println!(&amp;quot;Part
        2: {}&amp;quot;, pos[0].abs() + pos[1].abs());\n                    solved2
        = true;\n                } else {\n                    set.insert(pos);\n                }\n            }\n        }\n    }\n    println!(&amp;quot;Part
        1: {}&amp;quot;, pos[0].abs() + pos[1].abs());\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao50l6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480625854.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao62ab", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Pr1m-e", "can_mod_post": false, "created_utc":
        1480627072.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_ihfev", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "trying out go:\n\n        package main\n\n        import
        (\n            \"fmt\"\n            \"io/ioutil\"\n            \"math\"\n            \"regexp\"\n            \"strconv\"\n            \"strings\"\n        )\n\n        type
        visitedLocation struct {\n            x, y int\n        }\n\n        func
        main() {\n\n            currentDirection := 0\n            subLocation :=
        visitedLocation{0, 0}\n            visitedLocations := []visitedLocation{}\n            var
        doubledLocation visitedLocation\n            doubleLocationFound := false\n\n            plainCommands
        := parseCommands()\n\n            for _, plainCmd := range plainCommands {\n                direction,
        steps := parsePlainCommand(plainCmd)\n\n                currentDirection =
        getNewDirection(currentDirection, direction)\n\n                for index
        := 0; index &lt; steps; index++ {\n                    switch currentDirection
        {\n                    case 0:\n                        subLocation.y++\n                    case
        1:\n                        subLocation.x++\n                    case 2:\n                        subLocation.y--\n                    case
        3:\n                        subLocation.x--\n                    }\n\n                    if
        doubleLocationFound != true {\n                        for _, vl := range
        visitedLocations {\n                            if vl.x == subLocation.x &amp;&amp;
        vl.y == subLocation.y {\n                                doubledLocation =
        vl\n                                doubleLocationFound = true\n                            }\n                        }\n                    }\n\n                    visitedLocations
        = append(visitedLocations, subLocation)\n                }\n            }\n\n            calcAndOutput(visitedLocations,
        doubledLocation)\n        }\n\n        func parseCommands() []string {\n            input,
        _ := ioutil.ReadFile(\"input.dat\")\n            stringInput := string(input)\n\n            return
        strings.Split(stringInput, \",\")\n        }\n\n        func parsePlainCommand(cmd
        string) (string, int) {\n            re, _ := regexp.Compile(`(.)(\\d+)`)\n            res
        := re.FindAllStringSubmatch(cmd, -1)\n\n            direction := res[0][1]\n            steps,
        _ := strconv.Atoi(res[0][2])\n\n            return direction, steps\n        }\n\n        func
        getNewDirection(currentDirection int, direction string) int {\n            newDirection
        := currentDirection\n            switch direction {\n            case \"R\":\n                if
        currentDirection == 3 {\n                    newDirection = 0\n                    break\n                }\n                newDirection++\n            case
        \"L\":\n                if currentDirection == 0 {\n                    newDirection
        = 3\n                    break\n                }\n                newDirection--\n            }\n            return
        newDirection\n        }\n\n        func calcAndOutput(visitedLocations []visitedLocation,
        doubledLocation visitedLocation) {\n            //d(a,b)=|a_{1}-b_{1}|+|a_{2}-b_{2}|=|6|+|6|=12\n\n            var
        x1 float64 = 0\n            var x2 float64 = 0\n\n            firstHeadLocation
        := visitedLocations[len(visitedLocations)-1]\n\n            distanceFirstHead
        := math.Abs(x1-float64(firstHeadLocation.x)) + math.Abs(x2-float64(firstHeadLocation.y))\n\n            fmt.Printf(\"Distance
        to head: %v Blocks\\n\", distanceFirstHead)\n\n            distanceDoubleLocation
        := math.Abs(x1-float64(doubledLocation.x)) + math.Abs(x2-float64(doubledLocation.y))\n\n            fmt.Printf(\"Distance
        to first doubled location: %v Blocks\\n\", distanceDoubleLocation)\n        }\n",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dao62ab", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;trying
        out go:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    package main\n\n    import
        (\n        &amp;quot;fmt&amp;quot;\n        &amp;quot;io/ioutil&amp;quot;\n        &amp;quot;math&amp;quot;\n        &amp;quot;regexp&amp;quot;\n        &amp;quot;strconv&amp;quot;\n        &amp;quot;strings&amp;quot;\n    )\n\n    type
        visitedLocation struct {\n        x, y int\n    }\n\n    func main() {\n\n        currentDirection
        := 0\n        subLocation := visitedLocation{0, 0}\n        visitedLocations
        := []visitedLocation{}\n        var doubledLocation visitedLocation\n        doubleLocationFound
        := false\n\n        plainCommands := parseCommands()\n\n        for _, plainCmd
        := range plainCommands {\n            direction, steps := parsePlainCommand(plainCmd)\n\n            currentDirection
        = getNewDirection(currentDirection, direction)\n\n            for index :=
        0; index &amp;lt; steps; index++ {\n                switch currentDirection
        {\n                case 0:\n                    subLocation.y++\n                case
        1:\n                    subLocation.x++\n                case 2:\n                    subLocation.y--\n                case
        3:\n                    subLocation.x--\n                }\n\n                if
        doubleLocationFound != true {\n                    for _, vl := range visitedLocations
        {\n                        if vl.x == subLocation.x &amp;amp;&amp;amp; vl.y
        == subLocation.y {\n                            doubledLocation = vl\n                            doubleLocationFound
        = true\n                        }\n                    }\n                }\n\n                visitedLocations
        = append(visitedLocations, subLocation)\n            }\n        }\n\n        calcAndOutput(visitedLocations,
        doubledLocation)\n    }\n\n    func parseCommands() []string {\n        input,
        _ := ioutil.ReadFile(&amp;quot;input.dat&amp;quot;)\n        stringInput :=
        string(input)\n\n        return strings.Split(stringInput, &amp;quot;,&amp;quot;)\n    }\n\n    func
        parsePlainCommand(cmd string) (string, int) {\n        re, _ := regexp.Compile(`(.)(\\d+)`)\n        res
        := re.FindAllStringSubmatch(cmd, -1)\n\n        direction := res[0][1]\n        steps,
        _ := strconv.Atoi(res[0][2])\n\n        return direction, steps\n    }\n\n    func
        getNewDirection(currentDirection int, direction string) int {\n        newDirection
        := currentDirection\n        switch direction {\n        case &amp;quot;R&amp;quot;:\n            if
        currentDirection == 3 {\n                newDirection = 0\n                break\n            }\n            newDirection++\n        case
        &amp;quot;L&amp;quot;:\n            if currentDirection == 0 {\n                newDirection
        = 3\n                break\n            }\n            newDirection--\n        }\n        return
        newDirection\n    }\n\n    func calcAndOutput(visitedLocations []visitedLocation,
        doubledLocation visitedLocation) {\n        //d(a,b)=|a_{1}-b_{1}|+|a_{2}-b_{2}|=|6|+|6|=12\n\n        var
        x1 float64 = 0\n        var x2 float64 = 0\n\n        firstHeadLocation :=
        visitedLocations[len(visitedLocations)-1]\n\n        distanceFirstHead :=
        math.Abs(x1-float64(firstHeadLocation.x)) + math.Abs(x2-float64(firstHeadLocation.y))\n\n        fmt.Printf(&amp;quot;Distance
        to head: %v Blocks\\n&amp;quot;, distanceFirstHead)\n\n        distanceDoubleLocation
        := math.Abs(x1-float64(doubledLocation.x)) + math.Abs(x2-float64(doubledLocation.y))\n\n        fmt.Printf(&amp;quot;Distance
        to first doubled location: %v Blocks\\n&amp;quot;, distanceDoubleLocation)\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao62ab/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480627072.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao6s2r", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "asperellis", "can_mod_post": false, "created_utc":
        1480627897.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_8w24d", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "https://github.com/asperellis/adventofcode2016/blob/master/day1.js\n\njs
        noob trying to get better. was proud of figuring it out until I saw the simplicity
        of others :/ \ngoing back and trying to improve especially in part 2. \nlearned
        about Sets seeing others though!", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_dao6s2r", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/asperellis/adventofcode2016/blob/master/day1.js\"&gt;https://github.com/asperellis/adventofcode2016/blob/master/day1.js&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;js
        noob trying to get better. was proud of figuring it out until I saw the simplicity
        of others :/ \ngoing back and trying to improve especially in part 2. \nlearned
        about Sets seeing others though!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao6s2r/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480627897.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao6wfx", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "bigboehmboy", "can_mod_post": false, "created_utc":
        1480628038.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_31y4a", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here''s my minimal Python solution for Part
        1. I posted this as a separate text post, but now that I realize there''s
        a megathread, I''ll use it going forward:\n\n    #Minimal solution returning
        int (136 chars)\n    def g(d,c=0,r=0j):\n     for s in d.split(\", \"):\n      c+=(ord(s[0])-79)/3;r+=int(s[1:])*[1j,1,-1j,-1][c%4]\n     return
        int(abs(r.real)+abs(r.imag))\n\n131 chars if I''m allowed to return a float
        instead of an int.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dao6wfx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        my minimal Python solution for Part 1. I posted this as a separate text post,
        but now that I realize there&amp;#39;s a megathread, I&amp;#39;ll use it going
        forward:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#Minimal solution returning int
        (136 chars)\ndef g(d,c=0,r=0j):\n for s in d.split(&amp;quot;, &amp;quot;):\n  c+=(ord(s[0])-79)/3;r+=int(s[1:])*[1j,1,-1j,-1][c%4]\n
        return int(abs(r.real)+abs(r.imag))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;131
        chars if I&amp;#39;m allowed to return a float instead of an int.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao6wfx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480628038.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao7zku", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Frolb", "can_mod_post": false, "created_utc":
        1480629313.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_5o1j7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Quick and dirty non-robust Swift.  All the
        path self-intersections printed to the console, and the final location is
        in the playground sidebar.\n\n    import Foundation\n\n    struct Location:
        CustomStringConvertible, Hashable, Equatable {\n        // 0, 0 is center.\n        //
        negative row is south, positive is north\n        // negative column is west,
        positive is east\n        var row: Int = 0\n        var column: Int = 0\n        \n        mutating
        func update(distance: Int, heading: Heading) {\n            switch heading
        {\n            case .north:\n                row += distance\n            case
        .south:\n                row -= distance\n            case .east:\n                column
        += distance\n            case .west:\n                column -= distance\n            }\n        }\n        \n        var
        description: String {\n            return \"Location (north: \\(row) by east:
        \\(column)) distance \\(distance())\"\n        }\n        \n        func distance()
        -&gt; Int {\n            return abs(row) + abs(column)\n        }\n        \n        //
        Hashable\n        var hashValue: Int {\n            return row &lt;&lt; 16
        + column\n        }\n        \n        // Equatable\n        static func ==
        (thing1: Location, thing2: Location) -&gt; Bool {\n            return thing1.row
        == thing2.row &amp;&amp; thing1.column == thing2.column\n        }\n    }\n\n    enum
        Heading {\n        case north, south, east, west\n        \n        mutating
        func turn(_ turn: String) {\n            switch self {\n            case .north:\n                if
        turn == \"L\" {\n                    self = .west\n                } else
        {\n                    self = .east\n                }\n            case .south:\n                if
        turn == \"L\" {\n                    self = .east\n                } else
        {\n                    self = .west\n                }\n            case .east:\n                if
        turn == \"L\" {\n                    self = .north\n                } else
        {\n                    self = .south\n                }\n            case
        .west:\n                if turn == \"L\" {\n                    self = .south\n                }
        else {\n                    self = .north\n                }\n            }\n        }\n    }\n\n\n    var
        location = Location()\n    location\n    var heading: Heading = .north\n\n    //
        let sequence = [\"R2\", \"L3\"]\n    // let sequence = [\"R2\", \"R2\", \"R2\"]\n    //
        let sequence = [\"R5\", \"L5\", \"R5\", \"R3\"]\n    let sequence = [\"R2\",
        \"L5\", \"L4\", \"L5\", \"R4\", \"R1\", \"L4\", \"R5\", \"R3\", \"R1\", \"L1\",\n                    \"L1\",
        \"R4\", \"L4\", \"L1\", \"R4\", \"L4\", \"R4\", \"L3\", \"R5\", \"R4\", \"R1\",\n                    \"R3\",
        \"L1\", \"L1\", \"R1\", \"L2\", \"R5\", \"L4\", \"L3\", \"R1\", \"L2\", \"L2\",\n                    \"R192\",
        \"L3\", \"R5\", \"R48\", \"R5\", \"L2\", \"R76\", \"R4\", \"R2\", \"R1\",
        \"L1\",\n                    \"L5\", \"L1\", \"R185\", \"L5\", \"L1\", \"R5\",
        \"L4\", \"R1\", \"R3\", \"L4\", \"L3\",\n                    \"R1\", \"L5\",
        \"R4\", \"L4\", \"R4\", \"R5\", \"L3\", \"L1\", \"L2\", \"L4\", \"L3\",\n                    \"L4\",
        \"R2\", \"R2\", \"L3\", \"L5\", \"R2\", \"R5\", \"L1\", \"R1\", \"L3\", \"L5\",\n                    \"L3\",
        \"R4\", \"L4\", \"R3\", \"L1\", \"R5\", \"L3\", \"R2\", \"R4\", \"R2\", \"L1\",\n                    \"R3\",
        \"L1\", \"L3\", \"L5\", \"R4\", \"R5\", \"R2\", \"R2\", \"L5\", \"L3\", \"L1\",\n                    \"L1\",
        \"L5\", \"L2\", \"L3\", \"R3\", \"R3\", \"L3\", \"L4\", \"L5\", \"R2\", \"L1\",\n                    \"R1\",
        \"R3\", \"R4\", \"L2\", \"R1\", \"L1\", \"R3\", \"R3\", \"L4\", \"L2\", \"R5\",\n                    \"R5\",
        \"L1\", \"R4\", \"L5\", \"L5\", \"R1\", \"L5\", \"R4\", \"R2\", \"L1\", \"L4\",\n                    \"R1\",
        \"L1\", \"L1\", \"L5\", \"R3\", \"R4\", \"L2\", \"R1\", \"R2\", \"R1\", \"R1\",\n                    \"R3\",
        \"L5\", \"R1\", \"R4\"]\n    // let sequence = [\"R8\", \"R4\", \"R4\", \"R8\"]\n\n    var
        visitedSites = Set&lt;Location&gt;()\n\n    for var move in sequence {\n        let
        turn = String(move.characters.prefix(1))  // \"R\" or \"L\" - assumes input
        is well-formed\n        move.remove(at: move.startIndex) // lop off the turn\n        guard
        let distance = Int(move) else { continue }\n        \n        heading.turn(turn)\n        \n        for
        i in 0 ..&lt; distance {\n            location.update(distance: 1, heading:
        heading)\n            \n            if visitedSites.contains(location) {\n                print(\"AH
        HA! - \\(location)\")\n            }\n            visitedSites.insert(location)\n        }\n    }\n\n    heading\n    location\n",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dao7zku", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Quick
        and dirty non-robust Swift.  All the path self-intersections printed to the
        console, and the final location is in the playground sidebar.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Foundation\n\nstruct Location: CustomStringConvertible, Hashable, Equatable
        {\n    // 0, 0 is center.\n    // negative row is south, positive is north\n    //
        negative column is west, positive is east\n    var row: Int = 0\n    var column:
        Int = 0\n\n    mutating func update(distance: Int, heading: Heading) {\n        switch
        heading {\n        case .north:\n            row += distance\n        case
        .south:\n            row -= distance\n        case .east:\n            column
        += distance\n        case .west:\n            column -= distance\n        }\n    }\n\n    var
        description: String {\n        return &amp;quot;Location (north: \\(row) by
        east: \\(column)) distance \\(distance())&amp;quot;\n    }\n\n    func distance()
        -&amp;gt; Int {\n        return abs(row) + abs(column)\n    }\n\n    // Hashable\n    var
        hashValue: Int {\n        return row &amp;lt;&amp;lt; 16 + column\n    }\n\n    //
        Equatable\n    static func == (thing1: Location, thing2: Location) -&amp;gt;
        Bool {\n        return thing1.row == thing2.row &amp;amp;&amp;amp; thing1.column
        == thing2.column\n    }\n}\n\nenum Heading {\n    case north, south, east,
        west\n\n    mutating func turn(_ turn: String) {\n        switch self {\n        case
        .north:\n            if turn == &amp;quot;L&amp;quot; {\n                self
        = .west\n            } else {\n                self = .east\n            }\n        case
        .south:\n            if turn == &amp;quot;L&amp;quot; {\n                self
        = .east\n            } else {\n                self = .west\n            }\n        case
        .east:\n            if turn == &amp;quot;L&amp;quot; {\n                self
        = .north\n            } else {\n                self = .south\n            }\n        case
        .west:\n            if turn == &amp;quot;L&amp;quot; {\n                self
        = .south\n            } else {\n                self = .north\n            }\n        }\n    }\n}\n\n\nvar
        location = Location()\nlocation\nvar heading: Heading = .north\n\n// let sequence
        = [&amp;quot;R2&amp;quot;, &amp;quot;L3&amp;quot;]\n// let sequence = [&amp;quot;R2&amp;quot;,
        &amp;quot;R2&amp;quot;, &amp;quot;R2&amp;quot;]\n// let sequence = [&amp;quot;R5&amp;quot;,
        &amp;quot;L5&amp;quot;, &amp;quot;R5&amp;quot;, &amp;quot;R3&amp;quot;]\nlet
        sequence = [&amp;quot;R2&amp;quot;, &amp;quot;L5&amp;quot;, &amp;quot;L4&amp;quot;,
        &amp;quot;L5&amp;quot;, &amp;quot;R4&amp;quot;, &amp;quot;R1&amp;quot;, &amp;quot;L4&amp;quot;,
        &amp;quot;R5&amp;quot;, &amp;quot;R3&amp;quot;, &amp;quot;R1&amp;quot;, &amp;quot;L1&amp;quot;,\n                &amp;quot;L1&amp;quot;,
        &amp;quot;R4&amp;quot;, &amp;quot;L4&amp;quot;, &amp;quot;L1&amp;quot;, &amp;quot;R4&amp;quot;,
        &amp;quot;L4&amp;quot;, &amp;quot;R4&amp;quot;, &amp;quot;L3&amp;quot;, &amp;quot;R5&amp;quot;,
        &amp;quot;R4&amp;quot;, &amp;quot;R1&amp;quot;,\n                &amp;quot;R3&amp;quot;,
        &amp;quot;L1&amp;quot;, &amp;quot;L1&amp;quot;, &amp;quot;R1&amp;quot;, &amp;quot;L2&amp;quot;,
        &amp;quot;R5&amp;quot;, &amp;quot;L4&amp;quot;, &amp;quot;L3&amp;quot;, &amp;quot;R1&amp;quot;,
        &amp;quot;L2&amp;quot;, &amp;quot;L2&amp;quot;,\n                &amp;quot;R192&amp;quot;,
        &amp;quot;L3&amp;quot;, &amp;quot;R5&amp;quot;, &amp;quot;R48&amp;quot;, &amp;quot;R5&amp;quot;,
        &amp;quot;L2&amp;quot;, &amp;quot;R76&amp;quot;, &amp;quot;R4&amp;quot;, &amp;quot;R2&amp;quot;,
        &amp;quot;R1&amp;quot;, &amp;quot;L1&amp;quot;,\n                &amp;quot;L5&amp;quot;,
        &amp;quot;L1&amp;quot;, &amp;quot;R185&amp;quot;, &amp;quot;L5&amp;quot;,
        &amp;quot;L1&amp;quot;, &amp;quot;R5&amp;quot;, &amp;quot;L4&amp;quot;, &amp;quot;R1&amp;quot;,
        &amp;quot;R3&amp;quot;, &amp;quot;L4&amp;quot;, &amp;quot;L3&amp;quot;,\n                &amp;quot;R1&amp;quot;,
        &amp;quot;L5&amp;quot;, &amp;quot;R4&amp;quot;, &amp;quot;L4&amp;quot;, &amp;quot;R4&amp;quot;,
        &amp;quot;R5&amp;quot;, &amp;quot;L3&amp;quot;, &amp;quot;L1&amp;quot;, &amp;quot;L2&amp;quot;,
        &amp;quot;L4&amp;quot;, &amp;quot;L3&amp;quot;,\n                &amp;quot;L4&amp;quot;,
        &amp;quot;R2&amp;quot;, &amp;quot;R2&amp;quot;, &amp;quot;L3&amp;quot;, &amp;quot;L5&amp;quot;,
        &amp;quot;R2&amp;quot;, &amp;quot;R5&amp;quot;, &amp;quot;L1&amp;quot;, &amp;quot;R1&amp;quot;,
        &amp;quot;L3&amp;quot;, &amp;quot;L5&amp;quot;,\n                &amp;quot;L3&amp;quot;,
        &amp;quot;R4&amp;quot;, &amp;quot;L4&amp;quot;, &amp;quot;R3&amp;quot;, &amp;quot;L1&amp;quot;,
        &amp;quot;R5&amp;quot;, &amp;quot;L3&amp;quot;, &amp;quot;R2&amp;quot;, &amp;quot;R4&amp;quot;,
        &amp;quot;R2&amp;quot;, &amp;quot;L1&amp;quot;,\n                &amp;quot;R3&amp;quot;,
        &amp;quot;L1&amp;quot;, &amp;quot;L3&amp;quot;, &amp;quot;L5&amp;quot;, &amp;quot;R4&amp;quot;,
        &amp;quot;R5&amp;quot;, &amp;quot;R2&amp;quot;, &amp;quot;R2&amp;quot;, &amp;quot;L5&amp;quot;,
        &amp;quot;L3&amp;quot;, &amp;quot;L1&amp;quot;,\n                &amp;quot;L1&amp;quot;,
        &amp;quot;L5&amp;quot;, &amp;quot;L2&amp;quot;, &amp;quot;L3&amp;quot;, &amp;quot;R3&amp;quot;,
        &amp;quot;R3&amp;quot;, &amp;quot;L3&amp;quot;, &amp;quot;L4&amp;quot;, &amp;quot;L5&amp;quot;,
        &amp;quot;R2&amp;quot;, &amp;quot;L1&amp;quot;,\n                &amp;quot;R1&amp;quot;,
        &amp;quot;R3&amp;quot;, &amp;quot;R4&amp;quot;, &amp;quot;L2&amp;quot;, &amp;quot;R1&amp;quot;,
        &amp;quot;L1&amp;quot;, &amp;quot;R3&amp;quot;, &amp;quot;R3&amp;quot;, &amp;quot;L4&amp;quot;,
        &amp;quot;L2&amp;quot;, &amp;quot;R5&amp;quot;,\n                &amp;quot;R5&amp;quot;,
        &amp;quot;L1&amp;quot;, &amp;quot;R4&amp;quot;, &amp;quot;L5&amp;quot;, &amp;quot;L5&amp;quot;,
        &amp;quot;R1&amp;quot;, &amp;quot;L5&amp;quot;, &amp;quot;R4&amp;quot;, &amp;quot;R2&amp;quot;,
        &amp;quot;L1&amp;quot;, &amp;quot;L4&amp;quot;,\n                &amp;quot;R1&amp;quot;,
        &amp;quot;L1&amp;quot;, &amp;quot;L1&amp;quot;, &amp;quot;L5&amp;quot;, &amp;quot;R3&amp;quot;,
        &amp;quot;R4&amp;quot;, &amp;quot;L2&amp;quot;, &amp;quot;R1&amp;quot;, &amp;quot;R2&amp;quot;,
        &amp;quot;R1&amp;quot;, &amp;quot;R1&amp;quot;,\n                &amp;quot;R3&amp;quot;,
        &amp;quot;L5&amp;quot;, &amp;quot;R1&amp;quot;, &amp;quot;R4&amp;quot;]\n//
        let sequence = [&amp;quot;R8&amp;quot;, &amp;quot;R4&amp;quot;, &amp;quot;R4&amp;quot;,
        &amp;quot;R8&amp;quot;]\n\nvar visitedSites = Set&amp;lt;Location&amp;gt;()\n\nfor
        var move in sequence {\n    let turn = String(move.characters.prefix(1))  //
        &amp;quot;R&amp;quot; or &amp;quot;L&amp;quot; - assumes input is well-formed\n    move.remove(at:
        move.startIndex) // lop off the turn\n    guard let distance = Int(move) else
        { continue }\n\n    heading.turn(turn)\n\n    for i in 0 ..&amp;lt; distance
        {\n        location.update(distance: 1, heading: heading)\n\n        if visitedSites.contains(location)
        {\n            print(&amp;quot;AH HA! - \\(location)&amp;quot;)\n        }\n        visitedSites.insert(location)\n    }\n}\n\nheading\nlocation\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao7zku/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480629313.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao8uwi", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Kattoor", "can_mod_post": false, "created_utc":
        1480630369.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_gml79", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My js solution of part 1 and 2 respectively:\nhttps://gist.github.com/Kattoor/bf5677fa2a60ab07cd1e7e9e92679b49\nhttps://gist.github.com/Kattoor/9ababedd4debcee28a2c7e77b378255a",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dao8uwi", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        js solution of part 1 and 2 respectively:\n&lt;a href=\"https://gist.github.com/Kattoor/bf5677fa2a60ab07cd1e7e9e92679b49\"&gt;https://gist.github.com/Kattoor/bf5677fa2a60ab07cd1e7e9e92679b49&lt;/a&gt;\n&lt;a
        href=\"https://gist.github.com/Kattoor/9ababedd4debcee28a2c7e77b378255a\"&gt;https://gist.github.com/Kattoor/9ababedd4debcee28a2c7e77b378255a&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao8uwi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480630369.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao8xtw", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "qwertyuiop924", "can_mod_post": false,
        "created_utc": 1480630469.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 1, "author_fullname": "t2_ldiql", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Here''s my (awful)
        scheme code (for CHICKEN, but I don''t think it depends on too much that''s
        implementation specific):  http://pastebin.com/XtXxxHvq\n\nI solved the puzzles
        at the prompt, while this is all the code, the actual set of function calls
        required to find the output aren''t in here. They''re not hard to figure out.\n\nAll
        in all, it''s 76 lines of code, counting the first 25, which are just my input
        data (last year, I wrote input data parsers into my solutions, and Never Again).
        So not terrible on the linecount front. (remember, Scheme is a little light
        on the builtins: I had to implement my own range operator!)", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_dao8xtw",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my (awful)
        scheme code (for CHICKEN, but I don&amp;#39;t think it depends on too much
        that&amp;#39;s implementation specific):  &lt;a href=\"http://pastebin.com/XtXxxHvq\"&gt;http://pastebin.com/XtXxxHvq&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        solved the puzzles at the prompt, while this is all the code, the actual set
        of function calls required to find the output aren&amp;#39;t in here. They&amp;#39;re
        not hard to figure out.&lt;/p&gt;\n\n&lt;p&gt;All in all, it&amp;#39;s 76
        lines of code, counting the first 25, which are just my input data (last year,
        I wrote input data parsers into my solutions, and Never Again). So not terrible
        on the linecount front. (remember, Scheme is a little light on the builtins:
        I had to implement my own range operator!)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao8xtw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480630469.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dao9fok", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "davidbates", "can_mod_post": false, "created_utc":
        1480631077.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_3lgk7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Using Sketchup to visualize the solution...
        you can comment out the z-index and get the answer to part 2 visually as well
        :) \nhttps://github.com/DavidBates/adventofcode1-1", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dao9fok", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using Sketchup to visualize
        the solution... you can comment out the z-index and get the answer to part
        2 visually as well :) \n&lt;a href=\"https://github.com/DavidBates/adventofcode1-1\"&gt;https://github.com/DavidBates/adventofcode1-1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao9fok/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480631077.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "more", "data": {"count":
        1, "name": "t1_dapk0gn", "id": "dapk0gn", "parent_id": "t1_daoadlq", "depth":
        2, "children": ["dapk0gn"]}}], "before": null}}, "user_reports": [], "saved":
        false, "id": "daoadlq", "banned_at_utc": null, "mod_reason_title": null, "gilded":
        0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author":
        "Tokebluff", "can_mod_post": false, "created_utc": 1480632255.0, "send_replies":
        true, "parent_id": "t1_dao9r3j", "score": 1, "author_fullname": "t2_j0b4g",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "I didn''t code in java for a long time, but it seems when you
        get the number of blocks you use **charAt** which doesn''t work for **R79**\n\nTry
        to use **str.substring(1)**", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_daoadlq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        didn&amp;#39;t code in java for a long time, but it seems when you get the
        number of blocks you use &lt;strong&gt;charAt&lt;/strong&gt; which doesn&amp;#39;t
        work for &lt;strong&gt;R79&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Try to use
        &lt;strong&gt;str.substring(1)&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daoadlq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480632255.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "dao9r3j", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ThatAstronautGuy", "can_mod_post": false,
        "created_utc": 1480631469.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 1, "author_fullname": "t2_j4pc1", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "I''m having troubles
        with my solution, and I don''t know why. Can someone take a look at it please?
        [Here](https://github.com/ThatAstronautGuy/adventOfCode2016/blob/master/Day%20One/dayOne.java)
        is a link to my github for it. It works for all of the test input, but not
        the actual input that I''ve been given. When I run it, I get the answer 31,
        but according to someone else''s solution that I ran, the actual answer is
        130.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dao9r3j", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        having troubles with my solution, and I don&amp;#39;t know why. Can someone
        take a look at it please? &lt;a href=\"https://github.com/ThatAstronautGuy/adventOfCode2016/blob/master/Day%20One/dayOne.java\"&gt;Here&lt;/a&gt;
        is a link to my github for it. It works for all of the test input, but not
        the actual input that I&amp;#39;ve been given. When I run it, I get the answer
        31, but according to someone else&amp;#39;s solution that I ran, the actual
        answer is 130.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dao9r3j/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480631469.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "daoa4g2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mrPoopieButt",
        "can_mod_post": false, "created_utc": 1480631934.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_x8ykt", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Powershell
        in the house!\nhttps://github.com/collintheestump/AdventofCode2016/tree/master/Day1\n\n[SO
        PUMPED FOR THIS SEASON''S AOC!]\n#stopTheBunny\n", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_daoa4g2", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Powershell in the house!\n&lt;a
        href=\"https://github.com/collintheestump/AdventofCode2016/tree/master/Day1\"&gt;https://github.com/collintheestump/AdventofCode2016/tree/master/Day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;[SO
        PUMPED FOR THIS SEASON&amp;#39;S AOC!]&lt;/p&gt;\n\n&lt;h1&gt;stopTheBunny&lt;/h1&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daoa4g2/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480631934.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daocnq0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "code_mc", "can_mod_post": false, "created_utc":
        1480635172.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_8gj7t", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Yet another python solution (really should
        use a more challenging language, almost feels like cheating using python)\n\n\tdata
        = data.split(\", \")\n\tangle = 0\n\tpos = [0, 0]\n\tvisited = []\n\targs
        = ((1, 1),(0, 1),(1, -1),(0, -1))\n\n\tdef appendPos(dist, index, incr):\n\t\tfor
        _ in range(dist):\n\t\t\tpos[index] += incr\n\t\t\tif tuple(pos) in visited:\n\t\t\t\tprint
        sum(abs(p) for p in pos)\n\t\t\t\texit()\n\t\t\tvisited.append(tuple(pos))\n\n\tfor
        d in data:\n\t\tdirec = d[0]\n\t\tdist  = int(d[1:])\n\t\t\n\t\tangle += 1
        if direc == \"R\" else -1\n\t\tangle %= 4\n\n\t\tappendPos(dist, *args[angle])",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_daocnq0", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yet
        another python solution (really should use a more challenging language, almost
        feels like cheating using python)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data
        = data.split(&amp;quot;, &amp;quot;)\nangle = 0\npos = [0, 0]\nvisited = []\nargs
        = ((1, 1),(0, 1),(1, -1),(0, -1))\n\ndef appendPos(dist, index, incr):\n    for
        _ in range(dist):\n        pos[index] += incr\n        if tuple(pos) in visited:\n            print
        sum(abs(p) for p in pos)\n            exit()\n        visited.append(tuple(pos))\n\nfor
        d in data:\n    direc = d[0]\n    dist  = int(d[1:])\n\n    angle += 1 if
        direc == &amp;quot;R&amp;quot; else -1\n    angle %= 4\n\n    appendPos(dist,
        *args[angle])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daocnq0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480635172.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daodqid", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "batdreams", "can_mod_post": false, "created_utc":
        1480637449.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_138qm7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Ok well here''s my PHP attempt...\n\n    class
        Day01\n    {\n        /**\n         * @var array\n         */\n        private
        $compass = [''N'', ''E'', ''S'', ''W''];\n    \n        /**\n         * @param
        string $input\n         * @return array\n         */\n        public function
        sissyThatWalk($input)\n        {\n            $x = 0;\n            $y = 0;\n            $steps
        = explode('', '', $input);\n            $coordinates = [];\n    \n            foreach
        ($steps as $step) {\n                $distance = substr($step, 1);\n    \n                if
        ($step[0] == ''L'') {\n                    $direction = (current($this-&gt;compass)
        == ''N'' ? end($this-&gt;compass) : prev($this-&gt;compass));\n                }
        else {\n                    $direction = (current($this-&gt;compass) == ''W''
        ? reset($this-&gt;compass) : next($this-&gt;compass));\n                }\n    \n                for
        ($i = 1; $i &lt;= $distance; $i++) {\n                    if ($direction ===
        ''N'') $y++;\n                    if ($direction === ''E'') $x++;\n                    if
        ($direction === ''S'') $y--;\n                    if ($direction === ''W'')
        $x--;\n                    $coordinates[] = [''x'' =&gt; $x, ''y'' =&gt; $y];\n                }\n            }\n    \n            return
        [\n                ''destinationDistance'' =&gt; abs($x) + abs($y),\n                ''dejaVuDistance''
        =&gt; $this-&gt;getFirstDuplicateDistance($coordinates),\n            ];\n        }\n    \n        /**\n         *
        @param array $coordinates\n         * @return integer|null\n         */\n        private
        function getFirstDuplicateDistance($coordinates)\n        {\n            $duplicates
        = [];\n            $arrayHashes = [];\n    \n            foreach ($coordinates
        as $key =&gt; $coordinate) {\n                $hash = md5(serialize($coordinate));\n                (!isset($arrayHashes[$hash])
        ?: $duplicates[] = $coordinate);\n                $arrayHashes[$hash] = $hash;\n            }\n    \n            return
        (!empty($duplicates) ? abs($duplicates[0][''x'']) + abs($duplicates[0][''y''])
        : null);\n        }\n    }\n", "edited": 1480638019.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_daodqid", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ok well here&amp;#39;s my PHP
        attempt...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Day01\n{\n    /**\n     *
        @var array\n     */\n    private $compass = [&amp;#39;N&amp;#39;, &amp;#39;E&amp;#39;,
        &amp;#39;S&amp;#39;, &amp;#39;W&amp;#39;];\n\n    /**\n     * @param string
        $input\n     * @return array\n     */\n    public function sissyThatWalk($input)\n    {\n        $x
        = 0;\n        $y = 0;\n        $steps = explode(&amp;#39;, &amp;#39;, $input);\n        $coordinates
        = [];\n\n        foreach ($steps as $step) {\n            $distance = substr($step,
        1);\n\n            if ($step[0] == &amp;#39;L&amp;#39;) {\n                $direction
        = (current($this-&amp;gt;compass) == &amp;#39;N&amp;#39; ? end($this-&amp;gt;compass)
        : prev($this-&amp;gt;compass));\n            } else {\n                $direction
        = (current($this-&amp;gt;compass) == &amp;#39;W&amp;#39; ? reset($this-&amp;gt;compass)
        : next($this-&amp;gt;compass));\n            }\n\n            for ($i = 1;
        $i &amp;lt;= $distance; $i++) {\n                if ($direction === &amp;#39;N&amp;#39;)
        $y++;\n                if ($direction === &amp;#39;E&amp;#39;) $x++;\n                if
        ($direction === &amp;#39;S&amp;#39;) $y--;\n                if ($direction
        === &amp;#39;W&amp;#39;) $x--;\n                $coordinates[] = [&amp;#39;x&amp;#39;
        =&amp;gt; $x, &amp;#39;y&amp;#39; =&amp;gt; $y];\n            }\n        }\n\n        return
        [\n            &amp;#39;destinationDistance&amp;#39; =&amp;gt; abs($x) + abs($y),\n            &amp;#39;dejaVuDistance&amp;#39;
        =&amp;gt; $this-&amp;gt;getFirstDuplicateDistance($coordinates),\n        ];\n    }\n\n    /**\n     *
        @param array $coordinates\n     * @return integer|null\n     */\n    private
        function getFirstDuplicateDistance($coordinates)\n    {\n        $duplicates
        = [];\n        $arrayHashes = [];\n\n        foreach ($coordinates as $key
        =&amp;gt; $coordinate) {\n            $hash = md5(serialize($coordinate));\n            (!isset($arrayHashes[$hash])
        ?: $duplicates[] = $coordinate);\n            $arrayHashes[$hash] = $hash;\n        }\n\n        return
        (!empty($duplicates) ? abs($duplicates[0][&amp;#39;x&amp;#39;]) + abs($duplicates[0][&amp;#39;y&amp;#39;])
        : null);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daodqid/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480637449.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daoh6em", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Quick_Question404", "can_mod_post": false,
        "created_utc": 1480643238.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 1, "author_fullname": "t2_w0z6l", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Haven''t really seen
        a whole lot of solutions in C yet, so here''s my take on it. What do you think?
        This is my first year doing AoC, so it seems like fun so far.\n\nhttps://github.com/HighTide1/adventofcode2016",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_daoh6em", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haven&amp;#39;t
        really seen a whole lot of solutions in C yet, so here&amp;#39;s my take on
        it. What do you think? This is my first year doing AoC, so it seems like fun
        so far.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/HighTide1/adventofcode2016\"&gt;https://github.com/HighTide1/adventofcode2016&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daoh6em/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480643238.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daoibv3", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Wyrd-One", "can_mod_post": false, "created_utc":
        1480644719.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_axs5g", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "I have not coded in Pascal in over 10 years,
        so I am going to use this to refresh my Pascal skills a bit.  https://github.com/WyrdOne/AdventofCode2016",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_daoibv3", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        have not coded in Pascal in over 10 years, so I am going to use this to refresh
        my Pascal skills a bit.  &lt;a href=\"https://github.com/WyrdOne/AdventofCode2016\"&gt;https://github.com/WyrdOne/AdventofCode2016&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daoibv3/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480644719.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daoizdb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mlruth", "can_mod_post": false, "created_utc":
        1480645573.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_kntdg", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Here''s](https://github.com/MRuth/AdventOfCode2016/blob/master/src/main/scala/Day1.scala)
        my solution in Scala.  I actually recalled my Trigonometry class and the Unit
        circle to solve this one (I used cosine and sine calculations for the directions).",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_daoizdb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/MRuth/AdventOfCode2016/blob/master/src/main/scala/Day1.scala\"&gt;Here&amp;#39;s&lt;/a&gt;
        my solution in Scala.  I actually recalled my Trigonometry class and the Unit
        circle to solve this one (I used cosine and sine calculations for the directions).&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daoizdb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480645573.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daojfah", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "whatswrongwithgoats", "can_mod_post":
        false, "created_utc": 1480646143.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 1, "author_fullname": "t2_d462r", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "PHP solution for part
        1.\n\n    &lt;?php\n    /* Solution for Advent Of Code - Challenge #1\n\tNo
        Time For A Taxi Cab\n    */\n\n    $data = \"L3, R2, L5, R1, L1, L2, L2, R1,
        R5, R1, L1, L2, R2, R4, L4, L3, L3, R5, L1, R3, L5, L2, R4, L5, R4, R2, L2,
        L1, \"\n\t\t\t.\"R1, L3, L3, R2, R1, L4, L1, L1, R4, R5, R1, L2, L1, R188,
        R4, L3, R54, L4, R4, R74, R2, L4, R185, R1, R3, \"\n\t\t\t.\"R5, L2, L3, R1,
        L1, L3, R3, R2, L3, L4, R1, L3, L5, L2, R2, L1, R2, R1, L4, R5, R4, L5, L5,
        L4, R5, R4, L5, \"\n\t\t\t.\"L3, R4, R1, L5, L4, L3, R5, L5, L2, L4, R4, R4,
        R2, L1, L3, L2, R5, R4, L5, R1, R2, R5, L2, R4, R5, L2, L3, \"\n\t\t\t.\"R3,
        L4, R3, L2, R1, R4, L5, R1, L5, L3, R4, L2, L2, L5, L5, R5, R2, L5, R1, L3,
        L2, L2, R3, L3, L4, R2, R3, L1, \"\n\t\t\t.\"R2, L5, L3, R4, L4, R4, R3, L3,
        R1, L3, R5, L5, R1, R5, R3, L1\";\n\n    # Removing spaces from string and
        add to an array that we can iterate through\t\t\t\n    $routeDirections =
        explode(\",\",str_replace('' '','''',$data));\n\n    class Protagonist {\n\t#
        This class is designed to follow route instructions and determine the taxicab
        style distance from the starting position (x=0,y=0)\n\t\n\tpublic $location
        = array(0,0);\n\tpublic $facingDirection = \"N\";\n\t\n\tfunction turn($direction){\n\t\t#Turns
        the protagonist to face the new direction\n\t\tswitch ($this-&gt;facingDirection){\n\t\t\tcase
        \"N\":\n\t\t\t\tif($direction == \"R\"){\n\t\t\t\t\t$this-&gt;facingDirection
        = \"E\";\n\t\t\t\t}else{\n\t\t\t\t\t$this-&gt;facingDirection = \"W\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase
        \"E\":\n\t\t\t\tif($direction == \"R\"){\n\t\t\t\t\t$this-&gt;facingDirection
        = \"S\";\n\t\t\t\t}else{\n\t\t\t\t\t$this-&gt;facingDirection = \"N\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase
        \"S\":\n\t\t\t\tif($direction == \"R\"){\n\t\t\t\t\t$this-&gt;facingDirection
        = \"W\";\n\t\t\t\t}else{\n\t\t\t\t\t$this-&gt;facingDirection = \"E\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase
        \"W\":\n\t\t\t\tif($direction == \"R\"){\n\t\t\t\t\t$this-&gt;facingDirection
        = \"N\";\n\t\t\t\t}else{\n\t\t\t\t\t$this-&gt;facingDirection = \"S\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfunction
        move($distance){\n\t\t#Moves the protagonist\n\t\tswitch ($this-&gt;facingDirection){\n\t\t\tcase
        (\"N\"):\n\t\t\t\t$this-&gt;location[0] += $distance;\n\t\t\t\tbreak;\n\t\t\tcase
        (\"E\"):\n\t\t\t\t$this-&gt;location[1] += $distance;\n\t\t\t\tbreak;\n\t\t\tcase
        (\"S\"):\n\t\t\t\t$this-&gt;location[0] -= $distance;\n\t\t\t\tbreak;\n\t\t\tcase
        (\"W\"):\n\t\t\t\t$this-&gt;location[1] -= $distance;\n\t\t\t\tbreak;\n\t\t    }\n\t    }\n    }\n\n    $me
        = new Protagonist;\n    $myLocation = array();\n\n    for ($i = 0, $size =
        count($routeDirections); $i &lt; $size; $i++){\n    \t$me-&gt;turn(substr($routeDirections[$i],0,1));\n    \t$me-&gt;move(substr($routeDirections[$i],1,strlen($routeDirections[$i])-1));\n    }\n\n    $taxiDistance
        = abs($me-&gt;location[0])+abs($me-&gt;location[1]);\n    echo \"You have
        moved: \".$taxiDistance;\n\n    }\n    ?&gt;", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_daojfah", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP solution for part 1.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n/*
        Solution for Advent Of Code - Challenge #1\nNo Time For A Taxi Cab\n*/\n\n$data
        = &amp;quot;L3, R2, L5, R1, L1, L2, L2, R1, R5, R1, L1, L2, R2, R4, L4, L3,
        L3, R5, L1, R3, L5, L2, R4, L5, R4, R2, L2, L1, &amp;quot;\n        .&amp;quot;R1,
        L3, L3, R2, R1, L4, L1, L1, R4, R5, R1, L2, L1, R188, R4, L3, R54, L4, R4,
        R74, R2, L4, R185, R1, R3, &amp;quot;\n        .&amp;quot;R5, L2, L3, R1,
        L1, L3, R3, R2, L3, L4, R1, L3, L5, L2, R2, L1, R2, R1, L4, R5, R4, L5, L5,
        L4, R5, R4, L5, &amp;quot;\n        .&amp;quot;L3, R4, R1, L5, L4, L3, R5,
        L5, L2, L4, R4, R4, R2, L1, L3, L2, R5, R4, L5, R1, R2, R5, L2, R4, R5, L2,
        L3, &amp;quot;\n        .&amp;quot;R3, L4, R3, L2, R1, R4, L5, R1, L5, L3,
        R4, L2, L2, L5, L5, R5, R2, L5, R1, L3, L2, L2, R3, L3, L4, R2, R3, L1, &amp;quot;\n        .&amp;quot;R2,
        L5, L3, R4, L4, R4, R3, L3, R1, L3, R5, L5, R1, R5, R3, L1&amp;quot;;\n\n#
        Removing spaces from string and add to an array that we can iterate through           \n$routeDirections
        = explode(&amp;quot;,&amp;quot;,str_replace(&amp;#39; &amp;#39;,&amp;#39;&amp;#39;,$data));\n\nclass
        Protagonist {\n# This class is designed to follow route instructions and determine
        the taxicab style distance from the starting position (x=0,y=0)\n\npublic
        $location = array(0,0);\npublic $facingDirection = &amp;quot;N&amp;quot;;\n\nfunction
        turn($direction){\n    #Turns the protagonist to face the new direction\n    switch
        ($this-&amp;gt;facingDirection){\n        case &amp;quot;N&amp;quot;:\n            if($direction
        == &amp;quot;R&amp;quot;){\n                $this-&amp;gt;facingDirection
        = &amp;quot;E&amp;quot;;\n            }else{\n                $this-&amp;gt;facingDirection
        = &amp;quot;W&amp;quot;;\n            }\n            break;\n        case
        &amp;quot;E&amp;quot;:\n            if($direction == &amp;quot;R&amp;quot;){\n                $this-&amp;gt;facingDirection
        = &amp;quot;S&amp;quot;;\n            }else{\n                $this-&amp;gt;facingDirection
        = &amp;quot;N&amp;quot;;\n            }\n            break;\n        case
        &amp;quot;S&amp;quot;:\n            if($direction == &amp;quot;R&amp;quot;){\n                $this-&amp;gt;facingDirection
        = &amp;quot;W&amp;quot;;\n            }else{\n                $this-&amp;gt;facingDirection
        = &amp;quot;E&amp;quot;;\n            }\n            break;\n        case
        &amp;quot;W&amp;quot;:\n            if($direction == &amp;quot;R&amp;quot;){\n                $this-&amp;gt;facingDirection
        = &amp;quot;N&amp;quot;;\n            }else{\n                $this-&amp;gt;facingDirection
        = &amp;quot;S&amp;quot;;\n            }\n            break;\n    }\n}\n\nfunction
        move($distance){\n    #Moves the protagonist\n    switch ($this-&amp;gt;facingDirection){\n        case
        (&amp;quot;N&amp;quot;):\n            $this-&amp;gt;location[0] += $distance;\n            break;\n        case
        (&amp;quot;E&amp;quot;):\n            $this-&amp;gt;location[1] += $distance;\n            break;\n        case
        (&amp;quot;S&amp;quot;):\n            $this-&amp;gt;location[0] -= $distance;\n            break;\n        case
        (&amp;quot;W&amp;quot;):\n            $this-&amp;gt;location[1] -= $distance;\n            break;\n        }\n    }\n}\n\n$me
        = new Protagonist;\n$myLocation = array();\n\nfor ($i = 0, $size = count($routeDirections);
        $i &amp;lt; $size; $i++){\n    $me-&amp;gt;turn(substr($routeDirections[$i],0,1));\n    $me-&amp;gt;move(substr($routeDirections[$i],1,strlen($routeDirections[$i])-1));\n}\n\n$taxiDistance
        = abs($me-&amp;gt;location[0])+abs($me-&amp;gt;location[1]);\necho &amp;quot;You
        have moved: &amp;quot;.$taxiDistance;\n\n}\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daojfah/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480646143.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daokc9t", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "tg-9000", "can_mod_post": false, "created_utc":
        1480647349.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_138knl", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My solution is [in Kotlin](https://github.com/tginsberg/advent-2016-kotlin/blob/master/src/main/kotlin/com/ginsberg/advent2016/Day01.kt).
        I used Spek and AssertJ for testing.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_daokc9t", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution is &lt;a href=\"https://github.com/tginsberg/advent-2016-kotlin/blob/master/src/main/kotlin/com/ginsberg/advent2016/Day01.kt\"&gt;in
        Kotlin&lt;/a&gt;. I used Spek and AssertJ for testing.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daokc9t/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480647349.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daol1r0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "_jonah", "can_mod_post": false, "created_utc":
        1480648296.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_sqnqz", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "part 1 using ramda.js:\n\n    const [turns,
        steps] = ap([map(head), map(pipe(tail, add(0)))], [input]);\n    const arrAdd
        = pipe(zip, map(sum));\n    const answer = pipe(\n      map(x =&gt; x == ''L''
        ? -1 : 1),                  // L becomes -1, R becomes 1\n      scan(add,
        0),                                 // each cell now sum of all previous cells\n      tail,                                         //
        remove superfluous 0 scan puts at the start\n      map(mathMod(__, 4)),                          //
        change each sum to an integer: 0 = N, 1 = E, 2 = S, 3 = W\n      map(nth(__,
        [[0,1], [1,0], [0,-1], [-1,0]])), // change each direction integer to a step
        delta\n      zip(steps),                                   // combine step
        delta with step size: [5, [0,1]]\n      map(([c, arr]) =&gt; map(multiply(c),
        arr)),     // multiply it out: [0, 5]\n      reduce(arrAdd, [0,0]),                        //
        sum them all element-wise\n      map(Math.abs),                                //
        take absolute values of x and y coords\n      sum                                           //
        sum those, you''re done\n    )(turns);\n", "edited": 1480652647.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_daol1r0", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;part 1 using ramda.js:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        [turns, steps] = ap([map(head), map(pipe(tail, add(0)))], [input]);\nconst
        arrAdd = pipe(zip, map(sum));\nconst answer = pipe(\n  map(x =&amp;gt; x ==
        &amp;#39;L&amp;#39; ? -1 : 1),                  // L becomes -1, R becomes
        1\n  scan(add, 0),                                 // each cell now sum of
        all previous cells\n  tail,                                         // remove
        superfluous 0 scan puts at the start\n  map(mathMod(__, 4)),                          //
        change each sum to an integer: 0 = N, 1 = E, 2 = S, 3 = W\n  map(nth(__, [[0,1],
        [1,0], [0,-1], [-1,0]])), // change each direction integer to a step delta\n  zip(steps),                                   //
        combine step delta with step size: [5, [0,1]]\n  map(([c, arr]) =&amp;gt;
        map(multiply(c), arr)),     // multiply it out: [0, 5]\n  reduce(arrAdd, [0,0]),                        //
        sum them all element-wise\n  map(Math.abs),                                //
        take absolute values of x and y coords\n  sum                                           //
        sum those, you&amp;#39;re done\n)(turns);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daol1r0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480648296.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "daom3wz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Day One Part I (Python)\nhttps://github.com/hawzie197/advent_of_code_day_one\n",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day
        One Part I (Python)\n&lt;a href=\"https://github.com/hawzie197/advent_of_code_day_one\"&gt;https://github.com/hawzie197/advent_of_code_day_one&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daom3wz/",
        "num_reports": null, "locked": false, "name": "t1_daom3wz", "created": 1480649714.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480649714.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daomzke", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "demreddit", "can_mod_post": false, "created_utc":
        1480650829.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_vehbc", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Newbie coder. Nothing fancy, but it was fun
        working out the grid thing without any helper libraries. (Python 3)\n\nLevel
        1-1:\n\n    def taxiCabDistance(s):\n        ''''''\n        s: a comma separated
        string.\n        returns: distance from origin to final destination, utilizing
        directions given in s.\n        ''''''\n        sList = s.split('', '')\n        x
        = 0\n        y = 0\n        orientation = 0\n    \n        for i in sList:\n            if
        i[0] == ''R'':\n                orientation += 1\n                if orientation
        == 5:\n                    orientation = 1\n            elif i[0] == ''L'':\n                orientation
        -= 1\n                if orientation &lt;= 0:\n                    orientation
        = 4\n            if orientation == 1:\n                x += int(i[1:])\n            elif
        orientation == 2:\n                y -= int(i[1:])\n            elif orientation
        == 3:\n                x -= int(i[1:])\n            elif orientation == 4:\n                y
        += int(i[1:])\n    \n        dist = abs(x) + abs(y)\n        return dist\n\nAnd,
        level 1-2:\n    \n    def taxiCabDistanceToo(s):\n        ''''''\n        s:
        a comma separated string.\n        returns: distance from origin to first
        destination visited twice, utilizing directions given in s.\n        ''''''\n        sList
        = s.split('', '')\n        x = 0\n        y = 0\n        orientation = 0\n        xyProg
        = [[x,y]]\n    \n        for i in sList:\n            if i[0] == ''R'':\n                orientation
        += 1\n                if orientation == 5:\n                    orientation
        = 1\n            elif i[0] == ''L'':\n                orientation -= 1\n                if
        orientation &lt;= 0:\n                    orientation = 4\n            if
        orientation == 1:\n                for n in range(int(i[1:])):\n                    x
        += 1\n                    currentXY = [x, y]\n                    if currentXY
        in xyProg:\n                        dist = abs(x) + abs(y)\n                        return
        dist\n                    xyProg.append(currentXY)\n            elif orientation
        == 2:\n                for n in range(int(i[1:])):\n                    y
        -= 1\n                    currentXY = [x, y]\n                    if currentXY
        in xyProg:\n                        dist = abs(x) + abs(y)\n                        return
        dist\n                    xyProg.append(currentXY)\n            elif orientation
        == 3:\n                for n in range(int(i[1:])):\n                    x
        -= 1\n                    currentXY = [x, y]\n                    if currentXY
        in xyProg:\n                        dist = abs(x) + abs(y)\n                        return
        dist\n                    xyProg.append(currentXY)\n            elif orientation
        == 4:\n                for n in range(int(i[1:])):\n                    y
        += 1\n                    currentXY = [x, y]\n                    if currentXY
        in xyProg:\n                        dist = abs(x) + abs(y)\n                        return
        dist\n                    xyProg.append(currentXY)\n    \n        dist = abs(x)
        + abs(y)\n        return dist", "edited": 1480652302.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_daomzke", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Newbie coder. Nothing fancy,
        but it was fun working out the grid thing without any helper libraries. (Python
        3)&lt;/p&gt;\n\n&lt;p&gt;Level 1-1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        taxiCabDistance(s):\n    &amp;#39;&amp;#39;&amp;#39;\n    s: a comma separated
        string.\n    returns: distance from origin to final destination, utilizing
        directions given in s.\n    &amp;#39;&amp;#39;&amp;#39;\n    sList = s.split(&amp;#39;,
        &amp;#39;)\n    x = 0\n    y = 0\n    orientation = 0\n\n    for i in sList:\n        if
        i[0] == &amp;#39;R&amp;#39;:\n            orientation += 1\n            if
        orientation == 5:\n                orientation = 1\n        elif i[0] == &amp;#39;L&amp;#39;:\n            orientation
        -= 1\n            if orientation &amp;lt;= 0:\n                orientation
        = 4\n        if orientation == 1:\n            x += int(i[1:])\n        elif
        orientation == 2:\n            y -= int(i[1:])\n        elif orientation ==
        3:\n            x -= int(i[1:])\n        elif orientation == 4:\n            y
        += int(i[1:])\n\n    dist = abs(x) + abs(y)\n    return dist\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And,
        level 1-2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def taxiCabDistanceToo(s):\n    &amp;#39;&amp;#39;&amp;#39;\n    s:
        a comma separated string.\n    returns: distance from origin to first destination
        visited twice, utilizing directions given in s.\n    &amp;#39;&amp;#39;&amp;#39;\n    sList
        = s.split(&amp;#39;, &amp;#39;)\n    x = 0\n    y = 0\n    orientation = 0\n    xyProg
        = [[x,y]]\n\n    for i in sList:\n        if i[0] == &amp;#39;R&amp;#39;:\n            orientation
        += 1\n            if orientation == 5:\n                orientation = 1\n        elif
        i[0] == &amp;#39;L&amp;#39;:\n            orientation -= 1\n            if
        orientation &amp;lt;= 0:\n                orientation = 4\n        if orientation
        == 1:\n            for n in range(int(i[1:])):\n                x += 1\n                currentXY
        = [x, y]\n                if currentXY in xyProg:\n                    dist
        = abs(x) + abs(y)\n                    return dist\n                xyProg.append(currentXY)\n        elif
        orientation == 2:\n            for n in range(int(i[1:])):\n                y
        -= 1\n                currentXY = [x, y]\n                if currentXY in
        xyProg:\n                    dist = abs(x) + abs(y)\n                    return
        dist\n                xyProg.append(currentXY)\n        elif orientation ==
        3:\n            for n in range(int(i[1:])):\n                x -= 1\n                currentXY
        = [x, y]\n                if currentXY in xyProg:\n                    dist
        = abs(x) + abs(y)\n                    return dist\n                xyProg.append(currentXY)\n        elif
        orientation == 4:\n            for n in range(int(i[1:])):\n                y
        += 1\n                currentXY = [x, y]\n                if currentXY in
        xyProg:\n                    dist = abs(x) + abs(y)\n                    return
        dist\n                xyProg.append(currentXY)\n\n    dist = abs(x) + abs(y)\n    return
        dist\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daomzke/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480650829.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "daoxjm1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fkaaaa",
        "can_mod_post": false, "created_utc": 1480671493.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_npjzn", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "C,
        seems like most part 2 solutions simply insert all positions on a line instead
        of treating the points as line segments: https://gist.github.com/fkaa/68e671d7862d943d86deac3a3cb97ba9",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_daoxjm1", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C,
        seems like most part 2 solutions simply insert all positions on a line instead
        of treating the points as line segments: &lt;a href=\"https://gist.github.com/fkaa/68e671d7862d943d86deac3a3cb97ba9\"&gt;https://gist.github.com/fkaa/68e671d7862d943d86deac3a3cb97ba9&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daoxjm1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480671493.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daoxknf", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "_AceLewis", "can_mod_post": false, "created_utc":
        1480671579.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_r87sx", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My Python solutions to day 1;\n\nThe solutions
        are basically `position[facing%2] += [1, -1][facing&lt;2]` that stops you
        having `if`, `elif`, `elif`, `elif`.\n\nDay 1 part 1 (7 lines of code): https://repl.it/EeAs/2\n\n    facing,
        position = 0, [0, 0]\n    movements = input(\"Enter the movements: \").strip()\n    \n    for
        movement in movements.split('', ''):\n      rotation, distance = movement[0],
        int(movement[1:])\n      facing = (facing + 1 if rotation == ''R'' else facing
        - 1)%4\n      position[facing%2] += [1, -1][facing&lt;2]*distance\n    \n    print(''Distance
        away is {} blocks''.format(sum(map(abs, position))))\n\nthis could be minified
        to 123 characters:\n\n    f,*p=[0]*3\n    for m in input(\"Input:\").split('',
        ''):f+=[1,-1][m[0]&gt;''L''];p[f%2]+=[1,-1][f%4&lt;2]*int(m[1:])\n    print(sum(map(abs,p)))\n\nDay
        1 part 2 (14 lines of code): https://repl.it/EeAs/1\n\n    movements = input(\"Enter
        the movements: \").strip()\n    \n    facing = 0\n    position = [0, 0]\n    positions_visited
        = []\n    movements = movements.split('', '')\n    \n    for movement in movements:\n      rotation,
        distance = movement[0], int(movement[1:])\n      facing = (facing + 1 if rotation
        == ''R'' else facing - 1)%4\n      \n      for _ in range(distance):\n        if
        position in positions_visited: break\n        positions_visited.append(position[:])\n        position[facing%2]
        += [1, -1][facing&lt;2]\n    \n    distance_away = sum(map(abs, position))\n    print(''Distance
        away is {} blocks''.format(distance_away))\n", "edited": 1481296535.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_daoxknf", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Python solutions to day
        1;&lt;/p&gt;\n\n&lt;p&gt;The solutions are basically &lt;code&gt;position[facing%2]
        += [1, -1][facing&amp;lt;2]&lt;/code&gt; that stops you having &lt;code&gt;if&lt;/code&gt;,
        &lt;code&gt;elif&lt;/code&gt;, &lt;code&gt;elif&lt;/code&gt;, &lt;code&gt;elif&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Day
        1 part 1 (7 lines of code): &lt;a href=\"https://repl.it/EeAs/2\"&gt;https://repl.it/EeAs/2&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;facing,
        position = 0, [0, 0]\nmovements = input(&amp;quot;Enter the movements: &amp;quot;).strip()\n\nfor
        movement in movements.split(&amp;#39;, &amp;#39;):\n  rotation, distance =
        movement[0], int(movement[1:])\n  facing = (facing + 1 if rotation == &amp;#39;R&amp;#39;
        else facing - 1)%4\n  position[facing%2] += [1, -1][facing&amp;lt;2]*distance\n\nprint(&amp;#39;Distance
        away is {} blocks&amp;#39;.format(sum(map(abs, position))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;this
        could be minified to 123 characters:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f,*p=[0]*3\nfor
        m in input(&amp;quot;Input:&amp;quot;).split(&amp;#39;, &amp;#39;):f+=[1,-1][m[0]&amp;gt;&amp;#39;L&amp;#39;];p[f%2]+=[1,-1][f%4&amp;lt;2]*int(m[1:])\nprint(sum(map(abs,p)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Day
        1 part 2 (14 lines of code): &lt;a href=\"https://repl.it/EeAs/1\"&gt;https://repl.it/EeAs/1&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;movements
        = input(&amp;quot;Enter the movements: &amp;quot;).strip()\n\nfacing = 0\nposition
        = [0, 0]\npositions_visited = []\nmovements = movements.split(&amp;#39;, &amp;#39;)\n\nfor
        movement in movements:\n  rotation, distance = movement[0], int(movement[1:])\n  facing
        = (facing + 1 if rotation == &amp;#39;R&amp;#39; else facing - 1)%4\n\n  for
        _ in range(distance):\n    if position in positions_visited: break\n    positions_visited.append(position[:])\n    position[facing%2]
        += [1, -1][facing&amp;lt;2]\n\ndistance_away = sum(map(abs, position))\nprint(&amp;#39;Distance
        away is {} blocks&amp;#39;.format(distance_away))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daoxknf/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480671579.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daozx2t", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "trikiw", "can_mod_post": false, "created_utc":
        1480679095.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_6cn0b", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "AEV (language still in development)\n\n    #
        &lt;- comment\n    #AOC16, day 01\n    static\n        #local vars start with
        forward slash, object members with period, else constants\n        #strings
        start with backtick or enclosed in single or double quotes\n        #backslash
        at end of line &lt;- continue line\n        #array delineated with single
        angle quot marks\n        /z \u2190 \u2039`R1, `L4, `L5, `L5, `R2, `R2, `L1,
        `L1, `R2, `L3, `R4, `R3, `R2, `L4, `L2, `R5, `L1, \\\n        `R5, `L5, `L2,
        `L3, `L1, `R1, `R4, `R5, `L3, `R2, `L4, `L5, `R1, `R2, `L3, `R3, `L3, `L1,
        \\\n        `L2, `R5, `R4, `R5, `L5, `R1, `L190, `L3, `L3, `R3, `R4, `R47,
        `L3, `R5, `R79, `R5, `R3, `R1, \\\n        `L4, `L3, `L2, `R194, `L2, `R1,
        `L2, `L2, `R4, `L5, `L5, `R1, `R1, `L1, `L3, `L2, `R5, `L3, \\\n        `L3,
        `R4, `R1, `R5, `L4, `R3, `R1, `L1, `L2, `R4, `R1, `L2, `R4, `R4, `L5, `R3,
        `L5, `L3, `R1, \\\n        `R1, `L3, `L1, `L1, `L3, `L4, `L1, `L2, `R1, `L5,
        `L3, `R2, `L5, `L3, `R5, `R3, `L4, `L2, `R2, \\\n        `R4, `R4, `L4, `R5,
        `L1, `L3, `R3, `R4, `R4, `L5, `R4, `R2, `L3, `R4, `R2, `R1, `R2, `L4, `L2,
        \\\n        `R2, `L5, `L5, `L3, `R5, `L5, `L1, `R4, `L1, `R1, `L1, `R4, `L5,
        `L3, `R4, `R1, `L3, `R4, `R1, \\\n        `L3, `L1, `R1, `R2, `L4, `L2, `R1,
        `L5, `L4, `L5\u203a\n        /set \u2190 \u00ab''0,0'':1\u00bb #map\n        /x
        \u2190 0\n        /y \u2190 0\n        /dx \u2190 0\n        /dy \u2190 1\n        loop
        /i: /z\n            if charAt(/i,0) = `R\n                /t \u2190 /dx\n                /dx
        \u2190 /dy\n                /dy \u2190 -/t\n            else\n                /t
        \u2190 /dx\n                /dx \u2190 -/dy\n                /dy \u2190 /t\n            loop
        0\u2026num(endstr(/i,1))\n                /x +\u2190 /dx\n                /y
        +\u2190 /dy\n                /s \u2190 /x * '','' * /y #asterisk &lt;- string
        concat\n                if /p2=null    #vars initially set to null\n                    if
        /set[/s]\n                        /p2 \u2190 abs(/x)+abs(/y)\n                    else\n                        /set[/s]
        \u2190 1\n        prln(\"day 01, part a: \",abs(/x)+abs(/y))\n        prln(\"day
        01, part b: \",/p2)\n", "edited": 1480680178.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_daozx2t", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;AEV (language still in development)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        &amp;lt;- comment\n#AOC16, day 01\nstatic\n    #local vars start with forward
        slash, object members with period, else constants\n    #strings start with
        backtick or enclosed in single or double quotes\n    #backslash at end of
        line &amp;lt;- continue line\n    #array delineated with single angle quot
        marks\n    /z \u2190 \u2039`R1, `L4, `L5, `L5, `R2, `R2, `L1, `L1, `R2, `L3,
        `R4, `R3, `R2, `L4, `L2, `R5, `L1, \\\n    `R5, `L5, `L2, `L3, `L1, `R1, `R4,
        `R5, `L3, `R2, `L4, `L5, `R1, `R2, `L3, `R3, `L3, `L1, \\\n    `L2, `R5, `R4,
        `R5, `L5, `R1, `L190, `L3, `L3, `R3, `R4, `R47, `L3, `R5, `R79, `R5, `R3,
        `R1, \\\n    `L4, `L3, `L2, `R194, `L2, `R1, `L2, `L2, `R4, `L5, `L5, `R1,
        `R1, `L1, `L3, `L2, `R5, `L3, \\\n    `L3, `R4, `R1, `R5, `L4, `R3, `R1, `L1,
        `L2, `R4, `R1, `L2, `R4, `R4, `L5, `R3, `L5, `L3, `R1, \\\n    `R1, `L3, `L1,
        `L1, `L3, `L4, `L1, `L2, `R1, `L5, `L3, `R2, `L5, `L3, `R5, `R3, `L4, `L2,
        `R2, \\\n    `R4, `R4, `L4, `R5, `L1, `L3, `R3, `R4, `R4, `L5, `R4, `R2, `L3,
        `R4, `R2, `R1, `R2, `L4, `L2, \\\n    `R2, `L5, `L5, `L3, `R5, `L5, `L1, `R4,
        `L1, `R1, `L1, `R4, `L5, `L3, `R4, `R1, `L3, `R4, `R1, \\\n    `L3, `L1, `R1,
        `R2, `L4, `L2, `R1, `L5, `L4, `L5\u203a\n    /set \u2190 \u00ab&amp;#39;0,0&amp;#39;:1\u00bb
        #map\n    /x \u2190 0\n    /y \u2190 0\n    /dx \u2190 0\n    /dy \u2190 1\n    loop
        /i: /z\n        if charAt(/i,0) = `R\n            /t \u2190 /dx\n            /dx
        \u2190 /dy\n            /dy \u2190 -/t\n        else\n            /t \u2190
        /dx\n            /dx \u2190 -/dy\n            /dy \u2190 /t\n        loop
        0\u2026num(endstr(/i,1))\n            /x +\u2190 /dx\n            /y +\u2190
        /dy\n            /s \u2190 /x * &amp;#39;,&amp;#39; * /y #asterisk &amp;lt;-
        string concat\n            if /p2=null    #vars initially set to null\n                if
        /set[/s]\n                    /p2 \u2190 abs(/x)+abs(/y)\n                else\n                    /set[/s]
        \u2190 1\n    prln(&amp;quot;day 01, part a: &amp;quot;,abs(/x)+abs(/y))\n    prln(&amp;quot;day
        01, part b: &amp;quot;,/p2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daozx2t/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480679095.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "dapa7g5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[`js`]\n\n    dx=[0,1,0,-1],dy=[1,0,-1,0];x=0,y=0,xyi=0;seen=[];document.body.innerText.split(\",
        \").forEach(a=&gt;{if(a[0]===\"L\"){xyi=(xyi-1+dx.length)%dx.length}else if(a[0]===\"R\"){xyi=(xyi+1+dx.length)%dx.length}n=parseInt(a.slice(1));while(n--
        &gt;0){seen.push(`${ x }:${ y }`),x+=dx[xyi],y+=dy[xyi]}});console.log(\"part1:\",Math.abs(x)+Math.abs(y));p2=false;seen.forEach((s,i)=&gt;{if(!p2){if(seen.indexOf(s)&lt;i){p2=true;console.log(\"part2:\",s.split(\":\").map(n=&gt;parseInt(n)).reduce((a,b)=&gt;Math.abs(a)+Math.abs(b),0))}}});",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[&lt;code&gt;js&lt;/code&gt;]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dx=[0,1,0,-1],dy=[1,0,-1,0];x=0,y=0,xyi=0;seen=[];document.body.innerText.split(&amp;quot;,
        &amp;quot;).forEach(a=&amp;gt;{if(a[0]===&amp;quot;L&amp;quot;){xyi=(xyi-1+dx.length)%dx.length}else
        if(a[0]===&amp;quot;R&amp;quot;){xyi=(xyi+1+dx.length)%dx.length}n=parseInt(a.slice(1));while(n--
        &amp;gt;0){seen.push(`${ x }:${ y }`),x+=dx[xyi],y+=dy[xyi]}});console.log(&amp;quot;part1:&amp;quot;,Math.abs(x)+Math.abs(y));p2=false;seen.forEach((s,i)=&amp;gt;{if(!p2){if(seen.indexOf(s)&amp;lt;i){p2=true;console.log(&amp;quot;part2:&amp;quot;,s.split(&amp;quot;:&amp;quot;).map(n=&amp;gt;parseInt(n)).reduce((a,b)=&amp;gt;Math.abs(a)+Math.abs(b),0))}}});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dapa7g5/",
        "num_reports": null, "locked": false, "name": "t1_dapa7g5", "created": 1480695885.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480695885.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dapdwtc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Hawkuro", "can_mod_post": false, "created_utc":
        1480700165.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_5fvm9", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "F#\n\nhttps://github.com/Hawkuro/AdventOfCode2016/tree/master/AdventOfCode2016/Day%201",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dapdwtc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;F#&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Hawkuro/AdventOfCode2016/tree/master/AdventOfCode2016/Day%201\"&gt;https://github.com/Hawkuro/AdventOfCode2016/tree/master/AdventOfCode2016/Day%201&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dapdwtc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480700165.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dapf4qb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "iM0nk3y46", "can_mod_post": false, "created_utc":
        1480701549.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_wnfu1", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Solution in C# using TDD (test driven development):
        https://github.com/Isylwin/Advent/tree/master\n\nWanted to use complex numbers
        but opted out of it just to simplify it, as I''m new to TDD.", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_dapf4qb",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution in C# using
        TDD (test driven development): &lt;a href=\"https://github.com/Isylwin/Advent/tree/master\"&gt;https://github.com/Isylwin/Advent/tree/master&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Wanted
        to use complex numbers but opted out of it just to simplify it, as I&amp;#39;m
        new to TDD.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dapf4qb/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480701549.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "dapmiw7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gerikson",
        "can_mod_post": false, "created_utc": 1480710209.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_3gib3", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "My
        [perl solutions](http://gerikson.com/blog/comp/Advent-of-Code-2016.html#d01).
        Part 1 was straightforward but I''m not proud of part 2.", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_dapmiw7",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My &lt;a href=\"http://gerikson.com/blog/comp/Advent-of-Code-2016.html#d01\"&gt;perl
        solutions&lt;/a&gt;. Part 1 was straightforward but I&amp;#39;m not proud
        of part 2.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dapmiw7/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1480710209.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_5fur6q", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "dapo04x",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "d3adbeef123",
        "can_mod_post": false, "created_utc": 1480711993.0, "send_replies": true,
        "parent_id": "t3_5fur6q", "score": 1, "author_fullname": "t2_gyfmd", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Clojure!\n\n    (ns
        advent-of-code-2016.day1\n      (:require [clojure.java.io :as io]\n                [clojure.string
        :as str]))\n\n    (def compass {:north 0 :east 1 :south 2 :west 3})\n    (def
        turn {\\R 1 \\L -1})\n\n    (defn new-pos [[dir [x y]] step]\n      (let [delta
        (-&gt;&gt; (rest step) (apply str) (read-string))\n            newdir (mod
        (+ (compass dir) (turn (first step))) 4)]\n        (cond\n          (= newdir
        0) [:north [x (+ delta y)]]\n          (= newdir 1) [:east  [(+ x delta) y]]\n          (=
        newdir 2) [:south [x (- y delta)]]\n          (= newdir 3) [:west  [(- x delta)
        y]])))\n\n    (defn get-steps [filename]\n      (let [input (slurp (io/resource
        filename))]\n        (-&gt;&gt; (str/split input #\",\") (map str/trim))))\n\n    (defn
        part-1 [steps]\n      (let [[_ [x y]] (reduce new-pos [:north [0 0]] steps)]\n        (+
        (Math/abs x)\n           (Math/abs y))))\n\n    (defn get-visited-points [[a
        b] [c d] dir]\n      (if (or (= dir :north) (= dir :south))\n        (if (&gt;
        a c)\n          (map (fn [x] [x b]) (range a c -1))\n          (map (fn [x]
        [x b]) (range a c)))\n        (if (&gt; b d)\n          (map (fn [x] [a x])
        (range b d -1))\n          (map (fn [x] [a x]) (range b d)))))\n\n    (defn
        new-visited [points visited]\n      (if (empty? points) visited\n        (let
        [point (first points)]\n          (if (contains? visited point) point\n            (recur
        (rest points) (conj visited point))))))\n\n    (defn part-2 [input]\n      (loop
        [steps input pos [0 0] dir :north visited #{}]\n        (if (empty? steps)
        false ; not found\n          (let [[ndir npos] (new-pos [dir pos] (first steps))\n                points
        (get-visited-points pos npos dir)\n                nvisited (new-visited points
        visited)]\n            (if (not (set? nvisited))\n              (reduce +
        (map #(Math/abs %) nvisited)) ;found the ans\n              (recur (rest steps)
        npos ndir nvisited))))))\n\n    (def steps (get-steps \"day1-input.txt\"))\n\n    (println
        (part-1 steps))\n    (println (part-2 steps))", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dapo04x", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Clojure!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns
        advent-of-code-2016.day1\n  (:require [clojure.java.io :as io]\n            [clojure.string
        :as str]))\n\n(def compass {:north 0 :east 1 :south 2 :west 3})\n(def turn
        {\\R 1 \\L -1})\n\n(defn new-pos [[dir [x y]] step]\n  (let [delta (-&amp;gt;&amp;gt;
        (rest step) (apply str) (read-string))\n        newdir (mod (+ (compass dir)
        (turn (first step))) 4)]\n    (cond\n      (= newdir 0) [:north [x (+ delta
        y)]]\n      (= newdir 1) [:east  [(+ x delta) y]]\n      (= newdir 2) [:south
        [x (- y delta)]]\n      (= newdir 3) [:west  [(- x delta) y]])))\n\n(defn
        get-steps [filename]\n  (let [input (slurp (io/resource filename))]\n    (-&amp;gt;&amp;gt;
        (str/split input #&amp;quot;,&amp;quot;) (map str/trim))))\n\n(defn part-1
        [steps]\n  (let [[_ [x y]] (reduce new-pos [:north [0 0]] steps)]\n    (+
        (Math/abs x)\n       (Math/abs y))))\n\n(defn get-visited-points [[a b] [c
        d] dir]\n  (if (or (= dir :north) (= dir :south))\n    (if (&amp;gt; a c)\n      (map
        (fn [x] [x b]) (range a c -1))\n      (map (fn [x] [x b]) (range a c)))\n    (if
        (&amp;gt; b d)\n      (map (fn [x] [a x]) (range b d -1))\n      (map (fn
        [x] [a x]) (range b d)))))\n\n(defn new-visited [points visited]\n  (if (empty?
        points) visited\n    (let [point (first points)]\n      (if (contains? visited
        point) point\n        (recur (rest points) (conj visited point))))))\n\n(defn
        part-2 [input]\n  (loop [steps input pos [0 0] dir :north visited #{}]\n    (if
        (empty? steps) false ; not found\n      (let [[ndir npos] (new-pos [dir pos]
        (first steps))\n            points (get-visited-points pos npos dir)\n            nvisited
        (new-visited points visited)]\n        (if (not (set? nvisited))\n          (reduce
        + (map #(Math/abs %) nvisited)) ;found the ans\n          (recur (rest steps)
        npos ndir nvisited))))))\n\n(def steps (get-steps &amp;quot;day1-input.txt&amp;quot;))\n\n(println
        (part-1 steps))\n(println (part-2 steps))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dapo04x/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480711993.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dapr9tf", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "AoC--", "can_mod_post": false, "created_utc":
        1480716086.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_138abd", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "I decided to whip up a notebook in Mathematica
        so that I could make a [merry animation of the path taken](http://i.imgur.com/SmhLX2D.gif)!
        Probably could be made smaller / faster, but it''s fast and small enough to
        be merry. :)\n\n    directions = {\n        If[StringTake[#, 1] == \"R\",
        -I, I],\n        FromDigits@StringDrop[#, 1]\n    } &amp; /@ StringSplit[Import[\"input.txt\"],
        \", \"];\n    \n    places = Module[{facing = I, position = 0}, (\n        facing
        *= #[[1]];\n        Table[\n            position += facing,\n            {i,
        1, #[[2]]}\n        ]\n    ) &amp; /@ directions // Flatten];\n    \n    padded
        = Transpose@{Min /@ Transpose@ReIm[places], Max /@ Transpose@ReIm[places]}\n             +
        {{-1, 1}, {-1, 1}}*2;\n    \n    ListAnimate[Module[{line},\n        Table[\n            line
        = Line[ReIm[places[[;; width]]]];\n            Graphics[{Green, line, Red,
        Dashing[Medium], line}, PlotRange -&gt; padded],\n            {width, 0, Length[places]}\n        ]\n    ]]",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dapr9tf", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        decided to whip up a notebook in Mathematica so that I could make a &lt;a
        href=\"http://i.imgur.com/SmhLX2D.gif\"&gt;merry animation of the path taken&lt;/a&gt;!
        Probably could be made smaller / faster, but it&amp;#39;s fast and small enough
        to be merry. :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;directions = {\n    If[StringTake[#,
        1] == &amp;quot;R&amp;quot;, -I, I],\n    FromDigits@StringDrop[#, 1]\n} &amp;amp;
        /@ StringSplit[Import[&amp;quot;input.txt&amp;quot;], &amp;quot;, &amp;quot;];\n\nplaces
        = Module[{facing = I, position = 0}, (\n    facing *= #[[1]];\n    Table[\n        position
        += facing,\n        {i, 1, #[[2]]}\n    ]\n) &amp;amp; /@ directions // Flatten];\n\npadded
        = Transpose@{Min /@ Transpose@ReIm[places], Max /@ Transpose@ReIm[places]}\n         +
        {{-1, 1}, {-1, 1}}*2;\n\nListAnimate[Module[{line},\n    Table[\n        line
        = Line[ReIm[places[[;; width]]]];\n        Graphics[{Green, line, Red, Dashing[Medium],
        line}, PlotRange -&amp;gt; padded],\n        {width, 0, Length[places]}\n    ]\n]]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dapr9tf/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480716086.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dapt27i", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "grayrest", "can_mod_post": false, "created_utc":
        1480718457.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_32m6", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Another Clojure solution, a day late. Uses
        `core.match`:\n\n    (ns advent.day1\n      (:require [clojure.java.io :as
        io]\n                [clojure.string :as str]\n                [clojure.core.match
        :refer [match]]))\n\n    (def challenge-input (-&gt; \"day1\" io/resource
        io/file slurp str/trim))\n\n    (defn tap [x]\n      (println (pr-str x))\n      x)\n\n    (defn
        parse-step [step]\n      [(keyword (subs step 0 1)) (Integer/parseInt (subs
        step 1))])\n\n    (defn step-to-move [[dir _] [turn amt]]\n      (match [dir
        turn]\n        [:N :L] [:W amt]\n        [:N :R] [:E amt]\n        [:S :L]
        [:E amt]\n        [:S :R] [:W amt]\n        [:E :L] [:N amt]\n        [:E
        :R] [:S amt]\n        [:W :L] [:S amt]\n        [:W :R] [:N amt]\n        :else
        \"error\"))\n\n    (defn moves [input]\n      (-&gt;&gt; (str/split input
        #\", \")\n           (map parse-step)\n           ; tap\n           (reductions
        step-to-move [:N 0])\n           (drop 1)))\n\n    (defn move-to-grid [[x
        y] [dir amt]]\n      (case dir\n        :N [x (- y amt)]\n        :S [x (+
        y amt)]\n        :E [(- x amt) y]\n        :W [(+ x amt) y]))\n\n    (defn
        destination [input]\n      (-&gt;&gt; (moves input)\n           (reduce move-to-grid
        [0 0])))\n\n    (defn distance [[^Integer x ^Integer y]]\n      (+ (Math/abs
        x) (Math/abs y)))\n\n    (println \"d1: ans1\" (-&gt; challenge-input destination
        distance))\n\n    (defn move-to-steps [[dir amt]]\n      (map (constantly
        [dir 1]) (range amt)))\n\n    (defn visited [input]\n      (-&gt;&gt; (moves
        input)\n           (mapcat move-to-steps)\n           ; tap\n           (reductions
        move-to-grid [0 0])))\n\n    (defn first-repeat [xsi]\n      (loop [seen #{}\n             xs
        xsi]\n        (when-let [cur (first xs)]\n          (if (contains? seen cur)\n            cur\n            (recur
        (conj seen cur)\n                   (rest xs))))))\n\n    (println \"d1: ans2\"
        (-&gt; challenge-input visited first-repeat distance))\n\n", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_dapt27i",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Another Clojure solution,
        a day late. Uses &lt;code&gt;core.match&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns
        advent.day1\n  (:require [clojure.java.io :as io]\n            [clojure.string
        :as str]\n            [clojure.core.match :refer [match]]))\n\n(def challenge-input
        (-&amp;gt; &amp;quot;day1&amp;quot; io/resource io/file slurp str/trim))\n\n(defn
        tap [x]\n  (println (pr-str x))\n  x)\n\n(defn parse-step [step]\n  [(keyword
        (subs step 0 1)) (Integer/parseInt (subs step 1))])\n\n(defn step-to-move
        [[dir _] [turn amt]]\n  (match [dir turn]\n    [:N :L] [:W amt]\n    [:N :R]
        [:E amt]\n    [:S :L] [:E amt]\n    [:S :R] [:W amt]\n    [:E :L] [:N amt]\n    [:E
        :R] [:S amt]\n    [:W :L] [:S amt]\n    [:W :R] [:N amt]\n    :else &amp;quot;error&amp;quot;))\n\n(defn
        moves [input]\n  (-&amp;gt;&amp;gt; (str/split input #&amp;quot;, &amp;quot;)\n       (map
        parse-step)\n       ; tap\n       (reductions step-to-move [:N 0])\n       (drop
        1)))\n\n(defn move-to-grid [[x y] [dir amt]]\n  (case dir\n    :N [x (- y
        amt)]\n    :S [x (+ y amt)]\n    :E [(- x amt) y]\n    :W [(+ x amt) y]))\n\n(defn
        destination [input]\n  (-&amp;gt;&amp;gt; (moves input)\n       (reduce move-to-grid
        [0 0])))\n\n(defn distance [[^Integer x ^Integer y]]\n  (+ (Math/abs x) (Math/abs
        y)))\n\n(println &amp;quot;d1: ans1&amp;quot; (-&amp;gt; challenge-input destination
        distance))\n\n(defn move-to-steps [[dir amt]]\n  (map (constantly [dir 1])
        (range amt)))\n\n(defn visited [input]\n  (-&amp;gt;&amp;gt; (moves input)\n       (mapcat
        move-to-steps)\n       ; tap\n       (reductions move-to-grid [0 0])))\n\n(defn
        first-repeat [xsi]\n  (loop [seen #{}\n         xs xsi]\n    (when-let [cur
        (first xs)]\n      (if (contains? seen cur)\n        cur\n        (recur (conj
        seen cur)\n               (rest xs))))))\n\n(println &amp;quot;d1: ans2&amp;quot;
        (-&amp;gt; challenge-input visited first-repeat distance))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dapt27i/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480718457.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dapu6ff", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Zepur", "can_mod_post": false, "created_utc":
        1480719993.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_n0o6n", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "OK I am late to the party, but I thought
        I''d add my java solution. It might not be the prettiest, but it is working.
        And it is short-ish..\n\nhttps://github.com/Zepur/AdventOfCode/blob/master/src/Day1.java",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_dapu6ff", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OK
        I am late to the party, but I thought I&amp;#39;d add my java solution. It
        might not be the prettiest, but it is working. And it is short-ish..&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Zepur/AdventOfCode/blob/master/src/Day1.java\"&gt;https://github.com/Zepur/AdventOfCode/blob/master/src/Day1.java&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dapu6ff/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480719993.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "daqq9c0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dontfup",
        "can_mod_post": false, "created_utc": 1480787525.0, "send_replies": true,
        "parent_id": "t1_daq39t1", "score": 1, "author_fullname": "t2_61uo0", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Okay, I''ve adapted the same code to solve part 2\n\n    # Read the input\n    input
        = File.read(File.dirname(__FILE__) + \"/input\").rstrip.split(\", \")\n    \n    #
        Declare starting position\n    position = [0,0]\n    \n    # Imagine a compass\n    orientations
        = %w{ N E S W }\n    \n    # Wake up our navigator\n    navigator          =
        Hash.new(0)\n    previous_positions = Array.new\n    \n    # Teach navigator
        some orienteering\n    def hit_the_road(route, previous_positions)\n      route.detect
        { |point| previous_positions.include?(point) }\n    end\n    \n    def path(a,b)\n      path
        = a.send(a &lt; b ? :upto : :downto, b).to_a[1..-1]\n    end\n    \n    #
        Translate instructions\n    instructions = input.map do |instruction|\n      case
        instruction[0]\n      when \"L\"\n        orientations.rotate! -1\n      when
        \"R\"\n        orientations.rotate!\n      else\n        raise \"flibbedy
        flook\"\n      end\n    \n      # Identify destination\n      navigator[ orientations[0]
        ] += instruction[1..-1].to_i\n    \n      # Move toward destination\n      exit_condition
        = case orientations[0]\n      when \"N\"\n        p     = path(position[-1],
        position[-1] + instruction[1..-1].to_i)\n        z     = Array.new(p.length,
        position[0])\n        route = z.zip(p)\n        hit_the_road(route, previous_positions)\n      when
        \"E\"\n        p     = path(position[0], position[0] + instruction[1..-1].to_i)\n        z     =
        Array.new(p.length, position[-1])\n        route = p.zip(z)\n        hit_the_road(route,
        previous_positions)\n      when \"S\"\n        p     = path(position[-1],
        position[-1] - instruction[1..-1].to_i)\n        z     = Array.new(p.length,
        position[0])\n        route = z.zip(p)\n        hit_the_road(route, previous_positions)\n      when
        \"W\"\n        p     = path(position[0], position[0] - instruction[1..-1].to_i)\n        z     =
        Array.new(p.length, position[-1])\n        route = p.zip(z)\n        hit_the_road(route,
        previous_positions)\n      end\n    \n      if exit_condition\n        position
        = exit_condition\n        break\n      else\n        previous_positions =
        previous_positions | route\n        position = [navigator[\"E\"] - navigator[\"W\"],
        navigator[\"N\"] - navigator[\"S\"]]\n      end\n    end\n    \n    puts position[0].abs
        + position[1].abs", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_daqq9c0", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Okay,
        I&amp;#39;ve adapted the same code to solve part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Read the input\ninput = File.read(File.dirname(__FILE__) + &amp;quot;/input&amp;quot;).rstrip.split(&amp;quot;,
        &amp;quot;)\n\n# Declare starting position\nposition = [0,0]\n\n# Imagine
        a compass\norientations = %w{ N E S W }\n\n# Wake up our navigator\nnavigator          =
        Hash.new(0)\nprevious_positions = Array.new\n\n# Teach navigator some orienteering\ndef
        hit_the_road(route, previous_positions)\n  route.detect { |point| previous_positions.include?(point)
        }\nend\n\ndef path(a,b)\n  path = a.send(a &amp;lt; b ? :upto : :downto, b).to_a[1..-1]\nend\n\n#
        Translate instructions\ninstructions = input.map do |instruction|\n  case
        instruction[0]\n  when &amp;quot;L&amp;quot;\n    orientations.rotate! -1\n  when
        &amp;quot;R&amp;quot;\n    orientations.rotate!\n  else\n    raise &amp;quot;flibbedy
        flook&amp;quot;\n  end\n\n  # Identify destination\n  navigator[ orientations[0]
        ] += instruction[1..-1].to_i\n\n  # Move toward destination\n  exit_condition
        = case orientations[0]\n  when &amp;quot;N&amp;quot;\n    p     = path(position[-1],
        position[-1] + instruction[1..-1].to_i)\n    z     = Array.new(p.length, position[0])\n    route
        = z.zip(p)\n    hit_the_road(route, previous_positions)\n  when &amp;quot;E&amp;quot;\n    p     =
        path(position[0], position[0] + instruction[1..-1].to_i)\n    z     = Array.new(p.length,
        position[-1])\n    route = p.zip(z)\n    hit_the_road(route, previous_positions)\n  when
        &amp;quot;S&amp;quot;\n    p     = path(position[-1], position[-1] - instruction[1..-1].to_i)\n    z     =
        Array.new(p.length, position[0])\n    route = z.zip(p)\n    hit_the_road(route,
        previous_positions)\n  when &amp;quot;W&amp;quot;\n    p     = path(position[0],
        position[0] - instruction[1..-1].to_i)\n    z     = Array.new(p.length, position[-1])\n    route
        = p.zip(z)\n    hit_the_road(route, previous_positions)\n  end\n\n  if exit_condition\n    position
        = exit_condition\n    break\n  else\n    previous_positions = previous_positions
        | route\n    position = [navigator[&amp;quot;E&amp;quot;] - navigator[&amp;quot;W&amp;quot;],
        navigator[&amp;quot;N&amp;quot;] - navigator[&amp;quot;S&amp;quot;]]\n  end\nend\n\nputs
        position[0].abs + position[1].abs\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_5fur6q", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daqq9c0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480787525.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "daq39t1", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dontfup", "can_mod_post": false, "created_utc":
        1480734427.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_61uo0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Clever enough go at part 1 in ruby, but this
        won''t do well for part 2:\n\n    # Read the input\n    input = File.read(File.dirname(__FILE__)
        + \"/input\").rstrip.split(\", \")\n    \n    # Imagine a compass\n    orientations
        = %w{ N E S W }\n    \n    # Wake up our navigator\n    navigator = Hash.new(0)\n    \n    #
        Translate instructions\n    instructions = input.map do |instruction|\n      case
        instruction[0]\n      when \"L\"\n        orientations.rotate! -1\n      when
        \"R\"\n        orientations.rotate!\n      else\n        raise \"flibbedy
        flook\"\n      end\n    \n      navigator[ orientations[0] ] += instruction[1..-1].to_i\n    end\n    \n    #
        Ask our navigator about a shortcut\n    puts navigator[\"E\"] - navigator[\"W\"]
        + navigator[\"N\"] - navigator[\"S\"]", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_daq39t1", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Clever enough go at part 1
        in ruby, but this won&amp;#39;t do well for part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Read the input\ninput = File.read(File.dirname(__FILE__) + &amp;quot;/input&amp;quot;).rstrip.split(&amp;quot;,
        &amp;quot;)\n\n# Imagine a compass\norientations = %w{ N E S W }\n\n# Wake
        up our navigator\nnavigator = Hash.new(0)\n\n# Translate instructions\ninstructions
        = input.map do |instruction|\n  case instruction[0]\n  when &amp;quot;L&amp;quot;\n    orientations.rotate!
        -1\n  when &amp;quot;R&amp;quot;\n    orientations.rotate!\n  else\n    raise
        &amp;quot;flibbedy flook&amp;quot;\n  end\n\n  navigator[ orientations[0]
        ] += instruction[1..-1].to_i\nend\n\n# Ask our navigator about a shortcut\nputs
        navigator[&amp;quot;E&amp;quot;] - navigator[&amp;quot;W&amp;quot;] + navigator[&amp;quot;N&amp;quot;]
        - navigator[&amp;quot;S&amp;quot;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daq39t1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480734427.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "daqprfo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Powershell: https://github.com/charlieschmidt/AdventOfCode2016/blob/master/day1.ps1",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Powershell:
        &lt;a href=\"https://github.com/charlieschmidt/AdventOfCode2016/blob/master/day1.ps1\"&gt;https://github.com/charlieschmidt/AdventOfCode2016/blob/master/day1.ps1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daqprfo/",
        "num_reports": null, "locked": false, "name": "t1_daqprfo", "created": 1480786794.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480786794.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "das153d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "both parts\n\n    dx=[0,1,0,-1],dy=[1,0,-1,0];x=0,y=0,xyi=0;seen=[];document.body.innerText.split(\",
        \").forEach(a=&gt;{if(a[0]===\"L\"){xyi=(xyi-1+dx.length)%dx.length}else if(a[0]===\"R\"){xyi=(xyi+1+dx.length)%dx.length}n=parseInt(a.slice(1));while(n--
        &gt;0){seen.push(`${ x }:${ y }`),x+=dx[xyi],y+=dy[xyi]}});console.log(\"part1:\",Math.abs(x)+Math.abs(y));p2=false;seen.forEach((s,i)=&gt;{if(!p2){if(seen.indexOf(s)&lt;i){p2=true;console.log(\"part2:\",s.split(\":\").map(n=&gt;parseInt(n)).reduce((a,b)=&gt;Math.abs(a)+Math.abs(b),0))}}});",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;both
        parts&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dx=[0,1,0,-1],dy=[1,0,-1,0];x=0,y=0,xyi=0;seen=[];document.body.innerText.split(&amp;quot;,
        &amp;quot;).forEach(a=&amp;gt;{if(a[0]===&amp;quot;L&amp;quot;){xyi=(xyi-1+dx.length)%dx.length}else
        if(a[0]===&amp;quot;R&amp;quot;){xyi=(xyi+1+dx.length)%dx.length}n=parseInt(a.slice(1));while(n--
        &amp;gt;0){seen.push(`${ x }:${ y }`),x+=dx[xyi],y+=dy[xyi]}});console.log(&amp;quot;part1:&amp;quot;,Math.abs(x)+Math.abs(y));p2=false;seen.forEach((s,i)=&amp;gt;{if(!p2){if(seen.indexOf(s)&amp;lt;i){p2=true;console.log(&amp;quot;part2:&amp;quot;,s.split(&amp;quot;:&amp;quot;).map(n=&amp;gt;parseInt(n)).reduce((a,b)=&amp;gt;Math.abs(a)+Math.abs(b),0))}}});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/das153d/",
        "num_reports": null, "locked": false, "name": "t1_das153d", "created": 1480873870.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1480873870.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dass6y8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kenhowardpdx", "can_mod_post": false,
        "created_utc": 1480908468.0, "send_replies": true, "parent_id": "t3_5fur6q",
        "score": 1, "author_fullname": "t2_6vrnm", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Here''s my TypeScript
        solution http://codepen.io/kenhowardpdx/pen/mOXvdv?editors=0012", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_dass6y8",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my TypeScript
        solution &lt;a href=\"http://codepen.io/kenhowardpdx/pen/mOXvdv?editors=0012\"&gt;http://codepen.io/kenhowardpdx/pen/mOXvdv?editors=0012&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dass6y8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480908468.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dasybix", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Hwestaa", "can_mod_post": false, "created_utc":
        1480918112.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_x93j5", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "I did this day-of, but am only getting around
        to posting a solution now.  Cleaned-up solution in python 3.  https://github.com/Hwesta/advent-of-code/blob/master/aoc2016/day1.py\n\n    import
        os\n\n    def solve(data, dupe=False):\n        steps = data.split('', '')\n        x,
        y = 0, 0  # x = n/s, y = w/e\n        facing = 0  # N, E, S, W\n        visited
        = set()\n        visited.add((0, 0))\n        for step in steps:\n            turn
        = step[0]\n            amount = int(step[1:])\n            if turn == ''R'':\n                facing
        = (facing + 1) % 4\n            elif turn == ''L'':\n                facing
        = (facing - 1) % 4\n\n            for _ in range(amount):\n                if
        facing == 0:  # N\n                        x += 1\n                elif facing
        == 2:  # S\n                        x -= 1\n                elif facing ==
        1:  # E\n                        y -= 1\n                elif facing == 3:  #
        W\n                        y += 1\n\n                if (x, y) in visited
        and dupe:\n                    return abs(x) + abs(y)\n                else:\n                    visited.add((x,
        y))\n\n        return abs(x) + abs(y)\n\n\n    if __name__ == ''__main__'':\n        this_dir
        = os.path.dirname(__file__)\n        with open(os.path.join(this_dir, ''day1.input''))
        as f:\n            data = f.read()\n        print(''Easter Bunny HQ is'',
        solve(data), ''blocks away.'')\n        print(''Easter Bunny HQ is actually'',
        solve(data, dupe=True), ''blocks away.'')", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dasybix", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I did this day-of, but am only
        getting around to posting a solution now.  Cleaned-up solution in python 3.  &lt;a
        href=\"https://github.com/Hwesta/advent-of-code/blob/master/aoc2016/day1.py\"&gt;https://github.com/Hwesta/advent-of-code/blob/master/aoc2016/day1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        os\n\ndef solve(data, dupe=False):\n    steps = data.split(&amp;#39;, &amp;#39;)\n    x,
        y = 0, 0  # x = n/s, y = w/e\n    facing = 0  # N, E, S, W\n    visited =
        set()\n    visited.add((0, 0))\n    for step in steps:\n        turn = step[0]\n        amount
        = int(step[1:])\n        if turn == &amp;#39;R&amp;#39;:\n            facing
        = (facing + 1) % 4\n        elif turn == &amp;#39;L&amp;#39;:\n            facing
        = (facing - 1) % 4\n\n        for _ in range(amount):\n            if facing
        == 0:  # N\n                    x += 1\n            elif facing == 2:  # S\n                    x
        -= 1\n            elif facing == 1:  # E\n                    y -= 1\n            elif
        facing == 3:  # W\n                    y += 1\n\n            if (x, y) in
        visited and dupe:\n                return abs(x) + abs(y)\n            else:\n                visited.add((x,
        y))\n\n    return abs(x) + abs(y)\n\n\nif __name__ == &amp;#39;__main__&amp;#39;:\n    this_dir
        = os.path.dirname(__file__)\n    with open(os.path.join(this_dir, &amp;#39;day1.input&amp;#39;))
        as f:\n        data = f.read()\n    print(&amp;#39;Easter Bunny HQ is&amp;#39;,
        solve(data), &amp;#39;blocks away.&amp;#39;)\n    print(&amp;#39;Easter Bunny
        HQ is actually&amp;#39;, solve(data, dupe=True), &amp;#39;blocks away.&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dasybix/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480918112.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dat2545", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "tehjimmeh", "can_mod_post": false, "created_utc":
        1480927476.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_49ft0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "PowerShell:\n\n    function turnLeft{ param($currState)
        $currState = ($currState -1)%4; if($currState -lt 0){ $currState = 4 + $currState
        } $currState }\n    function turnRight{ param($currState) ($currState + 1)%4
        }\n\n    $processedInput = $puzzin -split \", \" | \n        %{ [pscustomobject]@{Direction=$_[0];Distance=[int]$_.Substring(1);State=0;Axis=\"\"}}
        | \n        %{ $currState = 0 } { $currState = switch($_.Direction){\"R\"{turnRight
        $currState}\"L\"{turnLeft $currState}} $_.State=$currState; $_ } -pv o | \n        %{
        switch($_.State){0{$o.Axis=\"y\"}1{$o.Axis=\"x\"}2{$o.Axis=\"y\";$o.Distance
        *= -1}3{$o.Axis=\"x\";$o.Distance *= -1}} $o}\n\n    $xBlocks = $processedInput
        | ?{$_.Axis -eq \"x\"}|measure Distance -sum | % Sum | %{[math]::Abs($_)}\n    $yBlocks
        = $processedInput | ?{$_.Axis -eq \"y\"}|measure Distance -sum | % Sum | %{[math]::Abs($_)}\n    \"Part
        1: $($xBlocks+$yBlocks)\"\n\n    $allLocations = echo $processedInput -pv
        o | %{ $currX=0; $currY=0 } { \n            $incOrDec = if($o.Distance -gt
        0) { {param($n) $n + 1} } else { {param($n) $n - 1} }\n            $curr =
        switch($_.Axis){\"x\"{ [ref]$currX } \"y\"{ [ref]$currY } }\n            for($i
        = 0;$i -lt ([math]::Abs($o.Distance));$i++) {\n                $curr.Value
        = &amp; $incOrDec $curr.Value\n                [pscustomobject]@{X=$currX;Y=$currY}\n            }\n        }\n\n    $part2Answer
        = $allLocations|%{[string[]]$temp=@()} { if($temp -contains \"$($_.X),$($_.Y)\"){
        $_ } $temp += \"$($_.X),$($_.Y)\";  } | select -first 1\n    \"Part 2: $(([math]::Abs($part2Answer.X))
        + ([math]::Abs($part2Answer.Y)))\"\n", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_dat2545", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PowerShell:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        turnLeft{ param($currState) $currState = ($currState -1)%4; if($currState
        -lt 0){ $currState = 4 + $currState } $currState }\nfunction turnRight{ param($currState)
        ($currState + 1)%4 }\n\n$processedInput = $puzzin -split &amp;quot;, &amp;quot;
        | \n    %{ [pscustomobject]@{Direction=$_[0];Distance=[int]$_.Substring(1);State=0;Axis=&amp;quot;&amp;quot;}}
        | \n    %{ $currState = 0 } { $currState = switch($_.Direction){&amp;quot;R&amp;quot;{turnRight
        $currState}&amp;quot;L&amp;quot;{turnLeft $currState}} $_.State=$currState;
        $_ } -pv o | \n    %{ switch($_.State){0{$o.Axis=&amp;quot;y&amp;quot;}1{$o.Axis=&amp;quot;x&amp;quot;}2{$o.Axis=&amp;quot;y&amp;quot;;$o.Distance
        *= -1}3{$o.Axis=&amp;quot;x&amp;quot;;$o.Distance *= -1}} $o}\n\n$xBlocks
        = $processedInput | ?{$_.Axis -eq &amp;quot;x&amp;quot;}|measure Distance
        -sum | % Sum | %{[math]::Abs($_)}\n$yBlocks = $processedInput | ?{$_.Axis
        -eq &amp;quot;y&amp;quot;}|measure Distance -sum | % Sum | %{[math]::Abs($_)}\n&amp;quot;Part
        1: $($xBlocks+$yBlocks)&amp;quot;\n\n$allLocations = echo $processedInput
        -pv o | %{ $currX=0; $currY=0 } { \n        $incOrDec = if($o.Distance -gt
        0) { {param($n) $n + 1} } else { {param($n) $n - 1} }\n        $curr = switch($_.Axis){&amp;quot;x&amp;quot;{
        [ref]$currX } &amp;quot;y&amp;quot;{ [ref]$currY } }\n        for($i = 0;$i
        -lt ([math]::Abs($o.Distance));$i++) {\n            $curr.Value = &amp;amp;
        $incOrDec $curr.Value\n            [pscustomobject]@{X=$currX;Y=$currY}\n        }\n    }\n\n$part2Answer
        = $allLocations|%{[string[]]$temp=@()} { if($temp -contains &amp;quot;$($_.X),$($_.Y)&amp;quot;){
        $_ } $temp += &amp;quot;$($_.X),$($_.Y)&amp;quot;;  } | select -first 1\n&amp;quot;Part
        2: $(([math]::Abs($part2Answer.X)) + ([math]::Abs($part2Answer.Y)))&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dat2545/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480927476.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dat66fi", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Gummoz", "can_mod_post": false, "created_utc":
        1480940466.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_l5lb7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Powershell:\n\nWith animation: https://github.com/gummozz/Advent-of-Code-2016/blob/master/1_With_Animation.ps1\n\n\n    [string]$in
        = \"\"\n    $currentOrientation = \"North\"\n    $x = 0\n    $y = 0\n    [array]$b
        = $null\n    \n    \n    $1 = $in.Split(\", \")\n    \n    \n    foreach ($stuff
        in $1) {\n        #$currentOrientation\n        if (!($stuff -match \"\\d\"))
        {\n            continue\n        }\n    \n        if($stuff -match \"\\d+\"){\n            [int]$stepsToMove
        = $Matches[0]\n        }\n    \n        else {}\n    \n        if ($stuff
        -match \"R\") {\n    \n    \n        \n        switch ($currentOrientation)
        {\n    \n            North {$currentOrientation = \"East\"}\n            East
        {$currentOrientation = \"South\"}\n            South {$currentOrientation
        = \"West\"}\n            West {$currentOrientation = \"North\"}\n    \n        }\n    \n    \n    \n        }\n    \n        elseif
        ($stuff -match \"L\"){\n    \n    \n        switch ($currentOrientation) {\n    \n            North
        {$currentOrientation = \"West\"}\n            East {$currentOrientation =
        \"North\"}\n            South {$currentOrientation = \"East\"}\n            West
        {$currentOrientation = \"South\"}\n    \n        }\n    \n    \n        }\n    \n        switch
        ($currentOrientation) {\n    \n            North {\n            \n    \n                #$y
        += $stepsToMove\n    \n                for ($stepsToMove -gt 0; $stepsToMove--)
        {\n                    $y += 1\n                    [array]$b += [string]$x
        +\",\"+[string]$y\n    \n                }\n    \n    \n            \n            }\n    \n            East
        {\n            \n    \n                #$x += $stepsToMove\n    \n                for
        ($stepsToMove -gt 0; $stepsToMove--) {\n                    $x += 1\n                    [array]$b
        += [string]$x +\",\"+[string]$y\n                }\n    \n            }\n    \n            South
        {\n            \n            \n                #$y -= $stepsToMove\n    \n                for
        ($stepsToMove -gt 0; $stepsToMove--) {\n                    $y -= 1\n                    [array]$b
        += [string]$x +\",\"+[string]$y\n                }\n    \n            }\n    \n            West
        {\n    \n            \n                #$x -= $stepsToMove\n    \n                for
        ($stepsToMove -gt 0; $stepsToMove--) {\n                    $x -= 1\n                    [array]$b
        += [string]$x +\",\"+[string]$y\n                }\n    \n            }\n    \n        }\n        \n    \n    \n    }\n    \n    \n        if
        ($x -lt 0) {\n            $x = ($x * (-1))\n    \n        }\n        if ($y
        -lt 0) {\n            $y = ($y * (-1))\n    \n        }\n    \n        \"First
        answer: \" + ($x + $y)\n    \n    $a = $null\n    \n    \n    :outer foreach
        ($c in $b) {\n        foreach ($d in $a) {\n            if($c -eq $d) {\n    \n            [int]$x
        = [int]$c.Split(\",\")[0]\n            [int]$y = [int]$c.Split(\",\")[1]\n    \n    \n            if
        ($x -lt 0) {\n            $x = ($x * (-1))\n    \n            }\n            if
        ($y -lt 0) {\n                $y = ($y * (-1))\n    \n            }\n                \"Second
        answer: \" + ($x + $y)\n                break outer\n                }\n        }\n        $a
        += $c\n    }", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_dat66fi", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Powershell:&lt;/p&gt;\n\n&lt;p&gt;With
        animation: &lt;a href=\"https://github.com/gummozz/Advent-of-Code-2016/blob/master/1_With_Animation.ps1\"&gt;https://github.com/gummozz/Advent-of-Code-2016/blob/master/1_With_Animation.ps1&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[string]$in
        = &amp;quot;&amp;quot;\n$currentOrientation = &amp;quot;North&amp;quot;\n$x
        = 0\n$y = 0\n[array]$b = $null\n\n\n$1 = $in.Split(&amp;quot;, &amp;quot;)\n\n\nforeach
        ($stuff in $1) {\n    #$currentOrientation\n    if (!($stuff -match &amp;quot;\\d&amp;quot;))
        {\n        continue\n    }\n\n    if($stuff -match &amp;quot;\\d+&amp;quot;){\n        [int]$stepsToMove
        = $Matches[0]\n    }\n\n    else {}\n\n    if ($stuff -match &amp;quot;R&amp;quot;)
        {\n\n\n\n    switch ($currentOrientation) {\n\n        North {$currentOrientation
        = &amp;quot;East&amp;quot;}\n        East {$currentOrientation = &amp;quot;South&amp;quot;}\n        South
        {$currentOrientation = &amp;quot;West&amp;quot;}\n        West {$currentOrientation
        = &amp;quot;North&amp;quot;}\n\n    }\n\n\n\n    }\n\n    elseif ($stuff -match
        &amp;quot;L&amp;quot;){\n\n\n    switch ($currentOrientation) {\n\n        North
        {$currentOrientation = &amp;quot;West&amp;quot;}\n        East {$currentOrientation
        = &amp;quot;North&amp;quot;}\n        South {$currentOrientation = &amp;quot;East&amp;quot;}\n        West
        {$currentOrientation = &amp;quot;South&amp;quot;}\n\n    }\n\n\n    }\n\n    switch
        ($currentOrientation) {\n\n        North {\n\n\n            #$y += $stepsToMove\n\n            for
        ($stepsToMove -gt 0; $stepsToMove--) {\n                $y += 1\n                [array]$b
        += [string]$x +&amp;quot;,&amp;quot;+[string]$y\n\n            }\n\n\n\n        }\n\n        East
        {\n\n\n            #$x += $stepsToMove\n\n            for ($stepsToMove -gt
        0; $stepsToMove--) {\n                $x += 1\n                [array]$b +=
        [string]$x +&amp;quot;,&amp;quot;+[string]$y\n            }\n\n        }\n\n        South
        {\n\n\n            #$y -= $stepsToMove\n\n            for ($stepsToMove -gt
        0; $stepsToMove--) {\n                $y -= 1\n                [array]$b +=
        [string]$x +&amp;quot;,&amp;quot;+[string]$y\n            }\n\n        }\n\n        West
        {\n\n\n            #$x -= $stepsToMove\n\n            for ($stepsToMove -gt
        0; $stepsToMove--) {\n                $x -= 1\n                [array]$b +=
        [string]$x +&amp;quot;,&amp;quot;+[string]$y\n            }\n\n        }\n\n    }\n\n\n\n}\n\n\n    if
        ($x -lt 0) {\n        $x = ($x * (-1))\n\n    }\n    if ($y -lt 0) {\n        $y
        = ($y * (-1))\n\n    }\n\n    &amp;quot;First answer: &amp;quot; + ($x + $y)\n\n$a
        = $null\n\n\n:outer foreach ($c in $b) {\n    foreach ($d in $a) {\n        if($c
        -eq $d) {\n\n        [int]$x = [int]$c.Split(&amp;quot;,&amp;quot;)[0]\n        [int]$y
        = [int]$c.Split(&amp;quot;,&amp;quot;)[1]\n\n\n        if ($x -lt 0) {\n        $x
        = ($x * (-1))\n\n        }\n        if ($y -lt 0) {\n            $y = ($y
        * (-1))\n\n        }\n            &amp;quot;Second answer: &amp;quot; + ($x
        + $y)\n            break outer\n            }\n    }\n    $a += $c\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dat66fi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480940466.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "datsnc6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "volatilebit", "can_mod_post": false, "created_utc":
        1480971058.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_44keq", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Lazy Perl 6 solution\n\n    enum Direction
        &lt;North East South West&gt;;\n\n    my @instructions = ''input''.IO.slurp.split('',
        '');\n    my ($x, $y) = (0, 0);\n    my $direction = North;\n    my $location_visits
        = (\"0,0\").BagHash;\n    my $first_location_visited_twice;\n\n    for @instructions
        -&gt; $instruction {\n        my ($turn_direction, $steps) = $instruction.comb(/(R|L)|(\\d+)/);\n\n        #
        Determine direction to face\n        if $turn_direction eq ''R'' { $direction
        = Direction($direction == West ?? North !! $direction + 1) }\n        if $turn_direction
        eq ''L'' { $direction = Direction($direction == North ?? West !! $direction
        - 1) }\n\n        # Adjust coordinates based on movement\n        for 1..$steps.Int
        {\n            $y -= 1 if $direction == North;\n            $x += 1 if $direction
        == East;\n            $y += 1 if $direction == South;\n            $x -= 1
        if $direction == West;\n            $location_visits{\"$x,$y\"}++;\n            if
        $location_visits{\"$x,$y\"} &gt; 1 and not $first_location_visited_twice.defined
        {\n                $first_location_visited_twice = [$x, $y];\n            }\n        }\n    }\n\n    say
        $x.abs + $y.abs;\n    say $first_location_visited_twice[0].abs + $first_location_visited_twice[1].abs;\n",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_datsnc6", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Lazy
        Perl 6 solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;enum Direction &amp;lt;North
        East South West&amp;gt;;\n\nmy @instructions = &amp;#39;input&amp;#39;.IO.slurp.split(&amp;#39;,
        &amp;#39;);\nmy ($x, $y) = (0, 0);\nmy $direction = North;\nmy $location_visits
        = (&amp;quot;0,0&amp;quot;).BagHash;\nmy $first_location_visited_twice;\n\nfor
        @instructions -&amp;gt; $instruction {\n    my ($turn_direction, $steps) =
        $instruction.comb(/(R|L)|(\\d+)/);\n\n    # Determine direction to face\n    if
        $turn_direction eq &amp;#39;R&amp;#39; { $direction = Direction($direction
        == West ?? North !! $direction + 1) }\n    if $turn_direction eq &amp;#39;L&amp;#39;
        { $direction = Direction($direction == North ?? West !! $direction - 1) }\n\n    #
        Adjust coordinates based on movement\n    for 1..$steps.Int {\n        $y
        -= 1 if $direction == North;\n        $x += 1 if $direction == East;\n        $y
        += 1 if $direction == South;\n        $x -= 1 if $direction == West;\n        $location_visits{&amp;quot;$x,$y&amp;quot;}++;\n        if
        $location_visits{&amp;quot;$x,$y&amp;quot;} &amp;gt; 1 and not $first_location_visited_twice.defined
        {\n            $first_location_visited_twice = [$x, $y];\n        }\n    }\n}\n\nsay
        $x.abs + $y.abs;\nsay $first_location_visited_twice[0].abs + $first_location_visited_twice[1].abs;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/datsnc6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480971058.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "dau2kcf", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jchook", "can_mod_post": false, "created_utc":
        1480983164.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_6hh1v", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Sorry I''m late to the party!\n\nI like this
        solution because you can easily expand to any number of dimensions just by
        updating the configuration at the top.\n\n**Ruby**\n\n    d = 0\n    l = [0,0]\n    m
        = [[0,1],[1,0],[0,-1],[-1,0]]\n    t = {''R'' =&gt; 1, ''L'' =&gt; -1}\n    \n    ARGF.first.split('',
        '').each do |c|\n      d = (d + t[c[0]]) % m.length\n      a = c[1..-1].to_i\n      l
        = l.zip(m[d].map{|i| i*a}).map{|i| i.reduce(&amp;:+)}\n    end\n    \n    p
        l.map(&amp;:abs).reduce(&amp;:+)", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_dau2kcf", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Sorry I&amp;#39;m late to the party!&lt;/p&gt;\n\n&lt;p&gt;I
        like this solution because you can easily expand to any number of dimensions
        just by updating the configuration at the top.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d
        = 0\nl = [0,0]\nm = [[0,1],[1,0],[0,-1],[-1,0]]\nt = {&amp;#39;R&amp;#39;
        =&amp;gt; 1, &amp;#39;L&amp;#39; =&amp;gt; -1}\n\nARGF.first.split(&amp;#39;,
        &amp;#39;).each do |c|\n  d = (d + t[c[0]]) % m.length\n  a = c[1..-1].to_i\n  l
        = l.zip(m[d].map{|i| i*a}).map{|i| i.reduce(&amp;amp;:+)}\nend\n\np l.map(&amp;amp;:abs).reduce(&amp;amp;:+)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dau2kcf/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1480983164.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "davdu9j", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mathleet", "can_mod_post": false, "created_utc":
        1481059353.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_3r47b", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Wrote an object-oriented Python3 solution.\n\n    #!/usr/bin/env
        python3\n    # -*- coding: utf-8 -*-\n\n    class Coordinate:\n        _RIGHT_MOVES
        = {''N'': ''E'', ''E'': ''S'', ''S'': ''W'', ''W'': ''N''}\n        _LEFT_MOVES
        = {''N'': ''W'', ''W'': ''S'', ''S'': ''E'', ''E'': ''N''}\n        _DIR_COORD
        = {''N'': (1, 0), ''E'': (0, 1), ''S'': (-1, 0), ''W'': (0, -1)}\n\n        def
        __init__(self, coordinate=[0, 0], direction=''N''):\n            self.coordinate
        = coordinate\n            self.direction = direction\n\n        def __repr__(self):\n            return
        str(self.coordinate)\n\n        def right(self, steps):\n            self.direction
        = self._RIGHT_MOVES[self.direction]\n            self.coordinate[0] = self.coordinate[0]
        + self._DIR_COORD[self.direction][0] * steps\n            self.coordinate[1]
        = self.coordinate[1] + self._DIR_COORD[self.direction][1] * steps\n\n        def
        left(self, steps):\n            self.direction = self._LEFT_MOVES[self.direction]\n            self.coordinate[0]
        = self.coordinate[0] + self._DIR_COORD[self.direction][0] * steps\n            self.coordinate[1]
        = self.coordinate[1] + self._DIR_COORD[self.direction][1] * steps\n\n        def
        distance_from_root(self):\n            return abs(self.coordinate[0]) + abs(self.coordinate[1])\n\n    if
        __name__ == ''__main__'':\n        coord = Coordinate()\n        instructions
        = ''R2, L1, R2, R1, R1, L3, R3, L5, L5, L2, L1, R4, R1, R3, L5, L5, R3, L4,
        L4, R5, R4, R3, L1, L2, R5, R4, L2, R1, R4, R4, L2, L1, L1, R190, R3, L4,
        R52, R5, R3, L5, R3, R2, R1, L5, L5, L4, R2, L3, R3, L1, L3, R5, L3, L4, R3,
        R77, R3, L2, R189, R4, R2, L2, R2, L1, R5, R4, R4, R2, L2, L2, L5, L1, R1,
        R2, L3, L4, L5, R1, L1, L2, L2, R2, L3, R3, L4, L1, L5, L4, L4, R3, R5, L2,
        R4, R5, R3, L2, L2, L4, L2, R2, L5, L4, R3, R1, L2, R2, R4, L1, L4, L4, L2,
        R2, L4, L1, L1, R4, L1, L3, L2, L2, L5, R5, R2, R5, L1, L5, R2, R4, R4, L2,
        R5, L5, R5, R5, L4, R2, R1, R1, R3, L3, L3, L4, L3, L2, L2, L2, R2, L1, L3,
        R2, R5, R5, L4, R3, L3, L4, R2, L5, R5''.split('', '')\n        for instruction
        in instructions:\n            direction = instruction[0]\n            steps
        = int(instruction[1:])\n            if direction == ''R'':\n                coord.right(steps)\n            else:\n                coord.left(steps)\n        else:\n            print(coord.distance_from_root())\n\n",
        "edited": 1481059808.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_davdu9j", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wrote
        an object-oriented Python3 solution.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env
        python3\n# -*- coding: utf-8 -*-\n\nclass Coordinate:\n    _RIGHT_MOVES =
        {&amp;#39;N&amp;#39;: &amp;#39;E&amp;#39;, &amp;#39;E&amp;#39;: &amp;#39;S&amp;#39;,
        &amp;#39;S&amp;#39;: &amp;#39;W&amp;#39;, &amp;#39;W&amp;#39;: &amp;#39;N&amp;#39;}\n    _LEFT_MOVES
        = {&amp;#39;N&amp;#39;: &amp;#39;W&amp;#39;, &amp;#39;W&amp;#39;: &amp;#39;S&amp;#39;,
        &amp;#39;S&amp;#39;: &amp;#39;E&amp;#39;, &amp;#39;E&amp;#39;: &amp;#39;N&amp;#39;}\n    _DIR_COORD
        = {&amp;#39;N&amp;#39;: (1, 0), &amp;#39;E&amp;#39;: (0, 1), &amp;#39;S&amp;#39;:
        (-1, 0), &amp;#39;W&amp;#39;: (0, -1)}\n\n    def __init__(self, coordinate=[0,
        0], direction=&amp;#39;N&amp;#39;):\n        self.coordinate = coordinate\n        self.direction
        = direction\n\n    def __repr__(self):\n        return str(self.coordinate)\n\n    def
        right(self, steps):\n        self.direction = self._RIGHT_MOVES[self.direction]\n        self.coordinate[0]
        = self.coordinate[0] + self._DIR_COORD[self.direction][0] * steps\n        self.coordinate[1]
        = self.coordinate[1] + self._DIR_COORD[self.direction][1] * steps\n\n    def
        left(self, steps):\n        self.direction = self._LEFT_MOVES[self.direction]\n        self.coordinate[0]
        = self.coordinate[0] + self._DIR_COORD[self.direction][0] * steps\n        self.coordinate[1]
        = self.coordinate[1] + self._DIR_COORD[self.direction][1] * steps\n\n    def
        distance_from_root(self):\n        return abs(self.coordinate[0]) + abs(self.coordinate[1])\n\nif
        __name__ == &amp;#39;__main__&amp;#39;:\n    coord = Coordinate()\n    instructions
        = &amp;#39;R2, L1, R2, R1, R1, L3, R3, L5, L5, L2, L1, R4, R1, R3, L5, L5,
        R3, L4, L4, R5, R4, R3, L1, L2, R5, R4, L2, R1, R4, R4, L2, L1, L1, R190,
        R3, L4, R52, R5, R3, L5, R3, R2, R1, L5, L5, L4, R2, L3, R3, L1, L3, R5, L3,
        L4, R3, R77, R3, L2, R189, R4, R2, L2, R2, L1, R5, R4, R4, R2, L2, L2, L5,
        L1, R1, R2, L3, L4, L5, R1, L1, L2, L2, R2, L3, R3, L4, L1, L5, L4, L4, R3,
        R5, L2, R4, R5, R3, L2, L2, L4, L2, R2, L5, L4, R3, R1, L2, R2, R4, L1, L4,
        L4, L2, R2, L4, L1, L1, R4, L1, L3, L2, L2, L5, R5, R2, R5, L1, L5, R2, R4,
        R4, L2, R5, L5, R5, R5, L4, R2, R1, R1, R3, L3, L3, L4, L3, L2, L2, L2, R2,
        L1, L3, R2, R5, R5, L4, R3, L3, L4, R2, L5, R5&amp;#39;.split(&amp;#39;, &amp;#39;)\n    for
        instruction in instructions:\n        direction = instruction[0]\n        steps
        = int(instruction[1:])\n        if direction == &amp;#39;R&amp;#39;:\n            coord.right(steps)\n        else:\n            coord.left(steps)\n    else:\n        print(coord.distance_from_root())\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/davdu9j/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1481059353.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "daxtbhs", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "banProsper", "can_mod_post": false, "created_utc":
        1481203252.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_khai5", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "C#\n\n            string input = File.ReadAllText(Program.InputDir(\"Day01.txt\"));\n            string[]
        subInput = Regex.Split(input, @\", \");\n            int[] coordinates = new
        int[] { 0, 0 };\n            int steps = 4;\n            int orientation =
        4;\n            bool alreadyVisited = false;\n            List&lt;Tuple&lt;int,
        int&gt;&gt; locations = new List&lt;Tuple&lt;int, int&gt;&gt;();\n            foreach
        (var s in subInput)\n            {\n                if (s.StartsWith(\"R\"))\n                    orientation++;\n                else\n                    orientation--;\n                orientation
        %= 4;\n                steps = int.Parse(new string(s.Skip(1).ToArray()));\n                int
        side = (orientation + 2) % 2 == 0 ? 1 : 0;\n                int pos = orientation
        &gt; 1 ? -1 : 1;\n                for (int i = 1; i &lt;= steps; i++)\n                {\n                    coordinates[side]
        += pos;\n                    //if (locations.Any(t =&gt; t.Item1 == coordinates[0]
        &amp;&amp; t.Item2 == coordinates[1]))\n                    //{\n                    //    alreadyVisited
        = true;\n                    //    break;\n                    //}\n                    //else\n                    //    locations.Add(Tuple.Create(coordinates[0],
        coordinates[1]));\n                }\n                if (alreadyVisited)\n                    break;\n                orientation
        += 4;\n            }\n            Console.WriteLine(Math.Abs(coordinates[0])
        + Math.Abs(coordinates[1]));", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_daxtbhs", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;        string
        input = File.ReadAllText(Program.InputDir(&amp;quot;Day01.txt&amp;quot;));\n        string[]
        subInput = Regex.Split(input, @&amp;quot;, &amp;quot;);\n        int[] coordinates
        = new int[] { 0, 0 };\n        int steps = 4;\n        int orientation = 4;\n        bool
        alreadyVisited = false;\n        List&amp;lt;Tuple&amp;lt;int, int&amp;gt;&amp;gt;
        locations = new List&amp;lt;Tuple&amp;lt;int, int&amp;gt;&amp;gt;();\n        foreach
        (var s in subInput)\n        {\n            if (s.StartsWith(&amp;quot;R&amp;quot;))\n                orientation++;\n            else\n                orientation--;\n            orientation
        %= 4;\n            steps = int.Parse(new string(s.Skip(1).ToArray()));\n            int
        side = (orientation + 2) % 2 == 0 ? 1 : 0;\n            int pos = orientation
        &amp;gt; 1 ? -1 : 1;\n            for (int i = 1; i &amp;lt;= steps; i++)\n            {\n                coordinates[side]
        += pos;\n                //if (locations.Any(t =&amp;gt; t.Item1 == coordinates[0]
        &amp;amp;&amp;amp; t.Item2 == coordinates[1]))\n                //{\n                //    alreadyVisited
        = true;\n                //    break;\n                //}\n                //else\n                //    locations.Add(Tuple.Create(coordinates[0],
        coordinates[1]));\n            }\n            if (alreadyVisited)\n                break;\n            orientation
        += 4;\n        }\n        Console.WriteLine(Math.Abs(coordinates[0]) + Math.Abs(coordinates[1]));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/daxtbhs/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1481203252.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_5fur6q", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "dazcocv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_5fur6q", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "I am a week late, so much fun ahead of me!\n\n[Python](http://pastebin.com/e9izHZg7)",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        am a week late, so much fun ahead of me!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://pastebin.com/e9izHZg7\"&gt;Python&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/dazcocv/",
        "num_reports": null, "locked": false, "name": "t1_dazcocv", "created": 1481289488.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1481289488.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "db0cegi", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jwnewman12", "can_mod_post": false, "created_utc":
        1481337835.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_13g8sz", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Java, unit circle approach ... I''m not happy
        about that one ternary still in there.\n\n\tpublic class Day1 {\n\t\tstatic
        int x = 0, y = 0;\n\t\tstatic double heading = 0;\n\t\n\t\tpublic static void
        main(String[] args) {\n\t\t\tfor (String move : args[0].split(\", \")) {\n\t\t\t\theading
        += Math.PI / 2 * (move.charAt(0) == ''L'' ? 1 : -1);\n\t\t\t\tint steps =
        Integer.parseInt(move.substring(1));\n\t\t\t\tx += handleFPError(Math.cos(heading))
        * steps;\n\t\t\t\ty += handleFPError(Math.sin(heading)) * steps;\n\t\t\t}\n\t\t\tSystem.out.println(Math.abs(x)
        + Math.abs(y));\n\t\t}\n\t\n\t\tstatic double handleFPError(double floatError)
        {\n\t\t\treturn Math.round(floatError * 10E6) / 10E6;\n\t\t}\n\t}", "edited":
        1481338316.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_db0cegi", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java,
        unit circle approach ... I&amp;#39;m not happy about that one ternary still
        in there.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public class Day1 {\n    static
        int x = 0, y = 0;\n    static double heading = 0;\n\n    public static void
        main(String[] args) {\n        for (String move : args[0].split(&amp;quot;,
        &amp;quot;)) {\n            heading += Math.PI / 2 * (move.charAt(0) == &amp;#39;L&amp;#39;
        ? 1 : -1);\n            int steps = Integer.parseInt(move.substring(1));\n            x
        += handleFPError(Math.cos(heading)) * steps;\n            y += handleFPError(Math.sin(heading))
        * steps;\n        }\n        System.out.println(Math.abs(x) + Math.abs(y));\n    }\n\n    static
        double handleFPError(double floatError) {\n        return Math.round(floatError
        * 10E6) / 10E6;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/db0cegi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1481337835.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "db0y8r3", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "lcedp", "can_mod_post": false, "created_utc":
        1481389863.0, "send_replies": true, "parent_id": "t3_5fur6q", "score": 1,
        "author_fullname": "t2_9vtrl", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Any tips to simplify? (Clojure)\n\n    (ns
        advent-of-code.day-1)\n    \n    (def data\n      (let [xf (map (fn [x] [(if
        (= (first x) \\R) 1 -1)\n                             (Integer/parseInt (apply
        str (rest x)))]))]\n        (as-&gt; (slurp \"resources/aoc-d1-input\") $\n              (clojure.string/split
        $ #\"[, \\n]+\")\n              (into [] xf $))))\n    \n    (def locations
        (atom #{}))\n    (def first-return (atom nil))\n    \n    (defn to-xy\n      [{:keys
        [n e w s]}]\n      [(- n s) (- e w)])\n    \n    (defn manhattan-dist\n      [[x
        y]]\n      (+ (Math/abs x)\n         (Math/abs y)))\n    \n    (defn check-loc\n      [new-loc]\n      (if
        (nil? @first-return)\n        (if (@locations new-loc)\n          (reset!
        first-return new-loc)\n          (swap! locations conj new-loc))))\n    \n    (defn
        upd-dirs\n      [{:keys [stats dirs current] :as all} [d amount]]\n      (let
        [delta (cond (pos? amount) 1\n                        (neg? amount) -1\n                        :else
        0)\n            step-fn (fn [x] (+ x delta))\n            next-i (mod (+ current
        d) 4)\n            next-key (get dirs next-i)\n            stats (reduce (fn
        [acc _]\n                              (let [acc (update-in acc [next-key]
        step-fn)]\n                                (check-loc (to-xy acc))\n                                acc))\n                          stats\n                          (range
        amount))]\n    \n        (assoc all :current next-i :stats stats)))\n    \n    (defn
        -main\n      []\n      (let [acc {:stats {:n 0 :e 0 :s 0 :w 0}\n                 :dirs
        [:n :e :s :w]\n                 :current 0}]\n        (as-&gt; data $\n              (reduce
        (fn [acc input] (upd-dirs acc input))\n                      acc\n                      $)\n              (:stats
        $)\n              (println \"Total distance:\" (manhattan-dist (to-xy $)))\n              (println
        \"Distance to first return point:\"\n                       (manhattan-dist
        @first-return)))))\n", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_db0y8r3", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Any
        tips to simplify? (Clojure)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns advent-of-code.day-1)\n\n(def
        data\n  (let [xf (map (fn [x] [(if (= (first x) \\R) 1 -1)\n                         (Integer/parseInt
        (apply str (rest x)))]))]\n    (as-&amp;gt; (slurp &amp;quot;resources/aoc-d1-input&amp;quot;)
        $\n          (clojure.string/split $ #&amp;quot;[, \\n]+&amp;quot;)\n          (into
        [] xf $))))\n\n(def locations (atom #{}))\n(def first-return (atom nil))\n\n(defn
        to-xy\n  [{:keys [n e w s]}]\n  [(- n s) (- e w)])\n\n(defn manhattan-dist\n  [[x
        y]]\n  (+ (Math/abs x)\n     (Math/abs y)))\n\n(defn check-loc\n  [new-loc]\n  (if
        (nil? @first-return)\n    (if (@locations new-loc)\n      (reset! first-return
        new-loc)\n      (swap! locations conj new-loc))))\n\n(defn upd-dirs\n  [{:keys
        [stats dirs current] :as all} [d amount]]\n  (let [delta (cond (pos? amount)
        1\n                    (neg? amount) -1\n                    :else 0)\n        step-fn
        (fn [x] (+ x delta))\n        next-i (mod (+ current d) 4)\n        next-key
        (get dirs next-i)\n        stats (reduce (fn [acc _]\n                          (let
        [acc (update-in acc [next-key] step-fn)]\n                            (check-loc
        (to-xy acc))\n                            acc))\n                      stats\n                      (range
        amount))]\n\n    (assoc all :current next-i :stats stats)))\n\n(defn -main\n  []\n  (let
        [acc {:stats {:n 0 :e 0 :s 0 :w 0}\n             :dirs [:n :e :s :w]\n             :current
        0}]\n    (as-&amp;gt; data $\n          (reduce (fn [acc input] (upd-dirs
        acc input))\n                  acc\n                  $)\n          (:stats
        $)\n          (println &amp;quot;Total distance:&amp;quot; (manhattan-dist
        (to-xy $)))\n          (println &amp;quot;Distance to first return point:&amp;quot;\n                   (manhattan-dist
        @first-return)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/5fur6q/2016_day_1_solutions/db0y8r3/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1481389863.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_5fur6q", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}}]'
  recorded_at: Sun, 09 Mar 2025 05:15:31 GMT
recorded_with: VCR 6.3.1
