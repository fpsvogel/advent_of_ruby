---
http_interactions:
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:33 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=NaVI0UPVvzjRYAfBdg; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:33 GMT
- request:
    method: get
    uri: https://oauth.reddit.com/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '62687'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      access-control-allow-origin:
      - "*"
      access-control-expose-headers:
      - X-Moose
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '3'
      x-ratelimit-remaining:
      - '97.0'
      x-ratelimit-reset:
      - '326'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:34 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - loid=000000001ksemnt8ud.2.1741471473986.Z0FBQUFBQm56TDd5WmF4aGlGV1lCUEdCUzl3SzVLQVZqXzlhdUFlQ21NVm9pYlRIWEZlSzZ0ZjJDdFVrOUc1cndoajBjVklreVZmZkQ3QmdIb3VnWjdMdy1LamVLbDlPQ3l3MEF1bHl4d05odUl1cDJmNmVPeGFHZlp3YXEyS0Vab2dsN0NzUUY3Znk;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:34
        GMT; secure; SameSite=None; Secure, session_tracker=imoagaroeohhdqqccn.0.1741471474003.Z0FBQUFBQm56TDd5M2J4VV85S0pWWEo0Rjk1YVVvTjFtLUxORmRQcmNBOWtTcS1lT2RxRm5ITjZKQ0MzajlvZDhLNHZPSFd3WWNBZUNyXzF0cFpsOHlVX0lWU1lrVkYyWFY5VlRvWkI0S2wtWWpNdi1GRkRFdU9YQUdqa0hiRFVaUDU3WEhxTUk0WFg;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:34
        GMT; secure; SameSite=None; Secure, csv=2; Max-Age=63072000; Domain=.reddit.com;
        Path=/; Secure; SameSite=None, edgebucket=0FVLkBc8vZrQu9TIHL; Domain=reddit.com;
        Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '[{"kind": "Listing", "data": {"after": null, "dist": 1, "modhash":
        "", "geo_filter": "", "children": [{"kind": "t3", "data": {"approved_at_utc":
        null, "subreddit": "adventofcode", "selftext": "It''s that time of year again
        for ~~tearing your hair out over your code~~ holiday programming joy and ~~aberrant
        sleep for an entire month~~ helping Santa and his elves!  If you participated
        in a previous year, welcome back, and if you''re new this year, we hope you
        have fun and learn lots!\n\nAs always, we''re following the same general format
        as previous years'' megathreads, so make sure to read the full posting rules
        in our community wiki before you post!\n\n# [RULES FOR POSTING IN SOLUTION
        MEGATHREADS](https://reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines)\n\nIf
        you have any questions, please create your own post in /r/adventofcode with
        the `Help/Question` flair and ask!\n\nAbove all, remember, AoC is all about
        learning more about the wonderful world of programming while hopefully having
        fun!\n\n***\n\n## REMINDERS FOR THIS YEAR\n\n* Top-level `Solution Megathread`
        posts must begin with the *case-sensitive* string literal `[LANGUAGE: xyz]`\n
        * Obviously, `xyz` is the programming language your solution employs\n * Use
        the full name of the language *e.g.* `JavaScript` not just `JS`\n* The [List
        of Streamers](https://old.reddit.com/r/adventofcode/wiki/streamers) has a
        new megathread for this year''s streamers, so if you''re interested, add yourself
        to [\ud83d\udcfa AoC 2024 List of Streamers \ud83d\udcfa](https://old.reddit.com/r/adventofcode/comments/1h3rddk/aoc_2024_list_of_streamers/)\n\n***\n\n##
        COMMUNITY NEWS\n\n* Veloxx will continue to [drop some sick beats](https://old.reddit.com/r/adventofcode/comments/1h3hz26/psa_live_housetechnotrance_dj_veloxx_will_be_on/)
        for 1.5 hours after today''s unlock!\n* /u/jeroenheijmans is back again this
        year with their [Unofficial AoC 2024 Participant Survey!](https://old.reddit.com/r/adventofcode/comments/1h3q33o/unofficial_aoc_2024_participant_survey/)!\n*
        **Advent of Code Community Fun 2024:** The [Golden Snowglobe Awards](https://old.reddit.com/r/adventofcode/comments/1h3vtg3/advent_of_code_2024_the_golden_snowglobe_awards/)\n
        * I will be your host for this year''s community fun event: The ***Golden
        Snowglobe Awards!***\n * Full details, rules, timeline, templates, etc. are
        in the Submissions Megathread here:\n - [-\u2744\ufe0f- Advent of Code 2024:
        The Golden Snowglobe Awards -\u2744\ufe0f- Submissions Megathread -\u2744\ufe0f-](https://old.reddit.com/r/adventofcode/comments/1h3vtg3/advent_of_code_2024_the_golden_snowglobe_awards/)\n\n***\n\n##
        AoC Community Fun 2024: The Golden Snowglobe Awards\n\nAnd now, our feature
        presentation for today:\n\n## [Credit Cookie](https://en.wikipedia.org/wiki/Post-credits_scene)\n\nYour
        gorgeous masterpiece is printed, lovingly wound up on a film reel, and shipped
        off to the movie houses. But wait, there''s more!  Here''s some ideas for
        your inspiration:\n\n+ Show and/or tell us a [post-credits scene](https://www.youtube.com/watch?v=8RLF3SQhBVY)
        or a [blooper reel](https://www.youtube.com/watch?v=_pvtV5lOIsg)!\n+ Use actual
        [web cookies](https://en.wikipedia.org/wiki/HTTP_cookie) to solve today''s
        puzzle\n+ Hide an Easter Egg in your code, hide your code in a [mooncake](https://en.wikipedia.org/wiki/Mooncake),
        hide a mooncake in your Easter Egg, wait what?\n\nAnd\u2026 ***ACTION!***\n\n*Request
        from the mods: When you include an entry alongside your solution, please label
        it with `[GSGA]` so we can find it easily!*\n\n***\n\n#--- Day 1: Historian
        Hysteria ---\n\n***\n\n## Post your code solution in this megathread.\n\n*
        Read the [full posting rules](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines)
        in our community wiki before you post!\n * State which [language(s) your solution
        uses](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29)
        with `[LANGUAGE: xyz]`\n * Format code blocks using the [four-spaces Markdown
        syntax](https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks)!\n*
        Quick link to [Topaz''s `paste`](https://topaz.github.io/paste/) if you need
        it for longer code blocks.  [What is Topaz''s `paste` tool?](/r/adventofcode/w/faqs/topaz_paste)\n\n\n###~~This
        thread will be unlocked when there are a significant number of people on the
        global leaderboard with gold stars for today''s puzzle.~~\n\n###*EDIT:* Global
        leaderboard gold cap reached at 00:02:31, megathread unlocked!", "user_reports":
        [], "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false,
        "title": "-\u2744\ufe0f- 2024 Day 1 Solutions -\u2744\ufe0f-", "link_flair_richtext":
        [], "subreddit_name_prefixed": "r/adventofcode", "hidden": false, "pwls":
        6, "link_flair_css_class": "flair-solutionmegathread", "downs": 0, "top_awarded_type":
        null, "hide_score": false, "name": "t3_1h3vp6n", "quarantine": false, "link_flair_text_color":
        "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type":
        "public", "ups": 125, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id":
        null, "is_original_content": false, "author_fullname": "t2_60niu", "secure_media":
        null, "is_reddit_media_domain": false, "is_meta": false, "category": null,
        "secure_media_embed": {}, "link_flair_text": "SOLUTION MEGATHREAD", "can_mod_post":
        false, "score": 125, "approved_by": null, "is_created_from_ads_ui": false,
        "author_premium": false, "thumbnail": "", "edited": 1733120178.0, "author_flair_css_class":
        null, "author_flair_richtext": [], "gildings": {}, "content_categories": null,
        "is_self": true, "mod_note": null, "created": 1733029217.0, "link_flair_type":
        "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type":
        "text", "domain": "self.adventofcode", "allow_live_comments": false, "selftext_html":
        "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s that time
        of year again for &lt;del&gt;tearing your hair out over your code&lt;/del&gt;
        holiday programming joy and &lt;del&gt;aberrant sleep for an entire month&lt;/del&gt;
        helping Santa and his elves!  If you participated in a previous year, welcome
        back, and if you&amp;#39;re new this year, we hope you have fun and learn
        lots!&lt;/p&gt;\n\n&lt;p&gt;As always, we&amp;#39;re following the same general
        format as previous years&amp;#39; megathreads, so make sure to read the full
        posting rules in our community wiki before you post!&lt;/p&gt;\n\n&lt;h1&gt;&lt;a
        href=\"https://reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines\"&gt;RULES
        FOR POSTING IN SOLUTION MEGATHREADS&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;If you
        have any questions, please create your own post in &lt;a href=\"/r/adventofcode\"&gt;/r/adventofcode&lt;/a&gt;
        with the &lt;code&gt;Help/Question&lt;/code&gt; flair and ask!&lt;/p&gt;\n\n&lt;p&gt;Above
        all, remember, AoC is all about learning more about the wonderful world of
        programming while hopefully having fun!&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;REMINDERS
        FOR THIS YEAR&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Top-level &lt;code&gt;Solution
        Megathread&lt;/code&gt; posts must begin with the &lt;em&gt;case-sensitive&lt;/em&gt;
        string literal &lt;code&gt;[LANGUAGE: xyz]&lt;/code&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Obviously,
        &lt;code&gt;xyz&lt;/code&gt; is the programming language your solution employs&lt;/li&gt;\n&lt;li&gt;Use
        the full name of the language &lt;em&gt;e.g.&lt;/em&gt; &lt;code&gt;JavaScript&lt;/code&gt;
        not just &lt;code&gt;JS&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;The
        &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/streamers\"&gt;List
        of Streamers&lt;/a&gt; has a new megathread for this year&amp;#39;s streamers,
        so if you&amp;#39;re interested, add yourself to &lt;a href=\"https://old.reddit.com/r/adventofcode/comments/1h3rddk/aoc_2024_list_of_streamers/\"&gt;\ud83d\udcfa
        AoC 2024 List of Streamers \ud83d\udcfa&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;COMMUNITY
        NEWS&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Veloxx will continue to &lt;a href=\"https://old.reddit.com/r/adventofcode/comments/1h3hz26/psa_live_housetechnotrance_dj_veloxx_will_be_on/\"&gt;drop
        some sick beats&lt;/a&gt; for 1.5 hours after today&amp;#39;s unlock!&lt;/li&gt;\n&lt;li&gt;&lt;a
        href=\"/u/jeroenheijmans\"&gt;/u/jeroenheijmans&lt;/a&gt; is back again this
        year with their &lt;a href=\"https://old.reddit.com/r/adventofcode/comments/1h3q33o/unofficial_aoc_2024_participant_survey/\"&gt;Unofficial
        AoC 2024 Participant Survey!&lt;/a&gt;!&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Advent
        of Code Community Fun 2024:&lt;/strong&gt; The &lt;a href=\"https://old.reddit.com/r/adventofcode/comments/1h3vtg3/advent_of_code_2024_the_golden_snowglobe_awards/\"&gt;Golden
        Snowglobe Awards&lt;/a&gt;\n\n&lt;ul&gt;\n&lt;li&gt;I will be your host for
        this year&amp;#39;s community fun event: The &lt;strong&gt;&lt;em&gt;Golden
        Snowglobe Awards!&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;Full details,
        rules, timeline, templates, etc. are in the Submissions Megathread here:&lt;/li&gt;\n&lt;li&gt;&lt;a
        href=\"https://old.reddit.com/r/adventofcode/comments/1h3vtg3/advent_of_code_2024_the_golden_snowglobe_awards/\"&gt;-\u2744\ufe0f-
        Advent of Code 2024: The Golden Snowglobe Awards -\u2744\ufe0f- Submissions
        Megathread -\u2744\ufe0f-&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;AoC
        Community Fun 2024: The Golden Snowglobe Awards&lt;/h2&gt;\n\n&lt;p&gt;And
        now, our feature presentation for today:&lt;/p&gt;\n\n&lt;h2&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Post-credits_scene\"&gt;Credit
        Cookie&lt;/a&gt;&lt;/h2&gt;\n\n&lt;p&gt;Your gorgeous masterpiece is printed,
        lovingly wound up on a film reel, and shipped off to the movie houses. But
        wait, there&amp;#39;s more!  Here&amp;#39;s some ideas for your inspiration:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Show
        and/or tell us a &lt;a href=\"https://www.youtube.com/watch?v=8RLF3SQhBVY\"&gt;post-credits
        scene&lt;/a&gt; or a &lt;a href=\"https://www.youtube.com/watch?v=_pvtV5lOIsg\"&gt;blooper
        reel&lt;/a&gt;!&lt;/li&gt;\n&lt;li&gt;Use actual &lt;a href=\"https://en.wikipedia.org/wiki/HTTP_cookie\"&gt;web
        cookies&lt;/a&gt; to solve today&amp;#39;s puzzle&lt;/li&gt;\n&lt;li&gt;Hide
        an Easter Egg in your code, hide your code in a &lt;a href=\"https://en.wikipedia.org/wiki/Mooncake\"&gt;mooncake&lt;/a&gt;,
        hide a mooncake in your Easter Egg, wait what?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;And\u2026
        &lt;strong&gt;&lt;em&gt;ACTION!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Request
        from the mods: When you include an entry alongside your solution, please label
        it with &lt;code&gt;[GSGA]&lt;/code&gt; so we can find it easily!&lt;/em&gt;&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h1&gt;---
        Day 1: Historian Hysteria ---&lt;/h1&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;Post
        your code solution in this megathread.&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Read
        the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines\"&gt;full
        posting rules&lt;/a&gt; in our community wiki before you post!\n\n&lt;ul&gt;\n&lt;li&gt;State
        which &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;language(s)
        your solution uses&lt;/a&gt; with &lt;code&gt;[LANGUAGE: xyz]&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Format
        code blocks using the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt;!&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Quick
        link to &lt;a href=\"https://topaz.github.io/paste/\"&gt;Topaz&amp;#39;s &lt;code&gt;paste&lt;/code&gt;&lt;/a&gt;
        if you need it for longer code blocks.  &lt;a href=\"/r/adventofcode/w/faqs/topaz_paste\"&gt;What
        is Topaz&amp;#39;s &lt;code&gt;paste&lt;/code&gt; tool?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3&gt;&lt;del&gt;This
        thread will be unlocked when there are a significant number of people on the
        global leaderboard with gold stars for today&amp;#39;s puzzle.&lt;/del&gt;&lt;/h3&gt;\n\n&lt;h3&gt;&lt;em&gt;EDIT:&lt;/em&gt;
        Global leaderboard gold cap reached at 00:02:31, megathread unlocked!&lt;/h3&gt;\n&lt;/div&gt;&lt;!--
        SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null,
        "view_count": null, "archived": false, "no_follow": false, "is_crosspostable":
        false, "pinned": false, "over_18": false, "all_awardings": [], "awarders":
        [], "media_only": false, "link_flair_template_id": "caf5e484-9c70-11e5-aa5d-0e1abaa211ff",
        "can_gild": false, "spoiler": false, "locked": false, "author_flair_text":
        null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports":
        null, "distinguished": "moderator", "subreddit_id": "t5_3b3wa", "author_is_blocked":
        false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color":
        "#000000", "id": "1h3vp6n", "is_robot_indexable": true, "num_duplicates":
        0, "report_reasons": null, "author": "daggerdragon", "discussion_type": null,
        "num_comments": 1409, "send_replies": false, "media": null, "contest_mode":
        false, "author_patreon_flair": false, "author_flair_text_color": null, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/", "stickied": false,
        "url": "https://www.reddit.com/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/",
        "subreddit_subscribers": 131311, "created_utc": 1733029217.0, "num_crossposts":
        0, "mod_reports": [], "is_video": false}}], "before": null}}, {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "mdk8m8l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "STODracula",
        "can_mod_post": false, "created_utc": 1739939632.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_hyl59", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE:
        COBOL\\]\n\nTask 1-&gt;[Advent2401a.cob](https://github.com/luisitoortiz/AoC2024/blob/main/Advent2401a.cob)\n\nTask
        2-&gt;[Advent2401b.cob](https://github.com/luisitoortiz/AoC2024/blob/main/Advent2401b.cob)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_mdk8m8l", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        COBOL]&lt;/p&gt;\n\n&lt;p&gt;Task 1-&amp;gt;&lt;a href=\"https://github.com/luisitoortiz/AoC2024/blob/main/Advent2401a.cob\"&gt;Advent2401a.cob&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Task
        2-&amp;gt;&lt;a href=\"https://github.com/luisitoortiz/AoC2024/blob/main/Advent2401b.cob\"&gt;Advent2401b.cob&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/mdk8m8l/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1739939632.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "mcvbcdm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1739604883.0, "send_replies": false,
        "parent_id": "t1_mcvbccz", "score": 1, "author_fullname": "t2_6l4z3", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "AutoModerator has detected [fenced code block](https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/fenced_code_blocks)
        (&amp;#96;&amp;#96;&amp;#96;) syntax which only works on new.reddit.\n\nPlease
        review our wiki article on [code formatting](https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting)
        then edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks)
        instead.\n\n***\n\n\n*I am a bot, and this action was performed automatically.
        Please [contact the moderators of this subreddit](/message/compose/?to=/r/adventofcode)
        if you have any questions or concerns.*", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_mcvbcdm", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;AutoModerator has detected
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/fenced_code_blocks\"&gt;fenced
        code block&lt;/a&gt; (&amp;#96;&amp;#96;&amp;#96;) syntax which only works
        on new.reddit.&lt;/p&gt;\n\n&lt;p&gt;Please review our wiki article on &lt;a
        href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting\"&gt;code
        formatting&lt;/a&gt; then edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; instead.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/mcvbcdm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1739604883.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "mcvbccz", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "joshuafi-a", "can_mod_post": false, "created_utc":
        1739604882.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_8y5l0hjf", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: Java\\]\n\nMy first day working
        with Java, any sugestions are welcome :-) \n\n# Part 1\n\n````\npublic class
        Part1 {\n    public static int solution() throws IOException {\n        List&lt;String&gt;
        inputLines = Challenge.readChallengeInput(\"/day1/input.txt\");\n\n        int[]
        leftArray = new int[inputLines.size()];\n        int[] rightArray = new int[inputLines.size()];\n\n        int
        lineNumber = 0;\n        for (String line : inputLines) {\n            String[]
        numbers = line.split(\"\\\\s+\");\n            leftArray[lineNumber] = Integer.parseInt(numbers[0]);\n            rightArray[lineNumber]
        = Integer.parseInt(numbers[1]);\n            lineNumber++;\n        }\n\n        Arrays.sort(leftArray);\n        Arrays.sort(rightArray);\n\n        int
        result = 0;\n\n        for (int i = 0; i &lt; leftArray.length; i++) {\n            result
        += Math.abs(leftArray[i] - rightArray[i]);\n        }\n\n        return result;\n    }\n}\n````\n#
        Part 2\n\n````\npublic class Part2 {\n    public static int solution() throws
        IOException {\n        List&lt;String&gt; inputLines = Challenge.readChallengeInput(\"/day1/input.txt\");\n\n        HashMap&lt;Integer,
        Integer&gt; rightFrequencies = new HashMap&lt;&gt;();\n        HashMap&lt;Integer,
        Integer&gt; leftFrequencies = new HashMap&lt;&gt;();\n\n        for (String
        line : inputLines) {\n            String[] numbers = line.split(\"\\\\s+\");\n            int
        leftNumber = Integer.parseInt(numbers[0]);\n            int rightNumber =
        Integer.parseInt(numbers[1]);\n\n            rightFrequencies.putIfAbsent(rightNumber,
        0);\n            rightFrequencies.computeIfPresent(rightNumber, (key, value)
        -&gt; value + 1);\n\n            leftFrequencies.putIfAbsent(leftNumber, 0);\n            leftFrequencies.computeIfPresent(leftNumber,
        (key, value) -&gt; value + 1);\n        }\n\n        int result = 0;\n\n        for
        (Map.Entry&lt;Integer, Integer&gt; entry : leftFrequencies.entrySet()) {\n            int
        key = entry.getKey();\n            int value = entry.getValue();\n\n            if
        (rightFrequencies.containsKey(key)) {\n                result += value * key
        * rightFrequencies.get(key);\n            }\n        }\n\n        return result;\n    }\n}\n````",
        "edited": 1739606221.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_mcvbccz", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Java]&lt;/p&gt;\n\n&lt;p&gt;My first day working with Java, any sugestions
        are welcome :-) &lt;/p&gt;\n\n&lt;h1&gt;Part 1&lt;/h1&gt;\n\n&lt;p&gt;````\npublic
        class Part1 {\n    public static int solution() throws IOException {\n        List&amp;lt;String&amp;gt;
        inputLines = Challenge.readChallengeInput(&amp;quot;/day1/input.txt&amp;quot;);&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    int[]
        leftArray = new int[inputLines.size()];\n    int[] rightArray = new int[inputLines.size()];\n\n    int
        lineNumber = 0;\n    for (String line : inputLines) {\n        String[] numbers
        = line.split(&amp;quot;\\\\s+&amp;quot;);\n        leftArray[lineNumber] =
        Integer.parseInt(numbers[0]);\n        rightArray[lineNumber] = Integer.parseInt(numbers[1]);\n        lineNumber++;\n    }\n\n    Arrays.sort(leftArray);\n    Arrays.sort(rightArray);\n\n    int
        result = 0;\n\n    for (int i = 0; i &amp;lt; leftArray.length; i++) {\n        result
        += Math.abs(leftArray[i] - rightArray[i]);\n    }\n\n    return result;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n````&lt;/p&gt;\n\n&lt;h1&gt;Part
        2&lt;/h1&gt;\n\n&lt;p&gt;````\npublic class Part2 {\n    public static int
        solution() throws IOException {\n        List&amp;lt;String&amp;gt; inputLines
        = Challenge.readChallengeInput(&amp;quot;/day1/input.txt&amp;quot;);&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    HashMap&amp;lt;Integer,
        Integer&amp;gt; rightFrequencies = new HashMap&amp;lt;&amp;gt;();\n    HashMap&amp;lt;Integer,
        Integer&amp;gt; leftFrequencies = new HashMap&amp;lt;&amp;gt;();\n\n    for
        (String line : inputLines) {\n        String[] numbers = line.split(&amp;quot;\\\\s+&amp;quot;);\n        int
        leftNumber = Integer.parseInt(numbers[0]);\n        int rightNumber = Integer.parseInt(numbers[1]);\n\n        rightFrequencies.putIfAbsent(rightNumber,
        0);\n        rightFrequencies.computeIfPresent(rightNumber, (key, value) -&amp;gt;
        value + 1);\n\n        leftFrequencies.putIfAbsent(leftNumber, 0);\n        leftFrequencies.computeIfPresent(leftNumber,
        (key, value) -&amp;gt; value + 1);\n    }\n\n    int result = 0;\n\n    for
        (Map.Entry&amp;lt;Integer, Integer&amp;gt; entry : leftFrequencies.entrySet())
        {\n        int key = entry.getKey();\n        int value = entry.getValue();\n\n        if
        (rightFrequencies.containsKey(key)) {\n            result += value * key *
        rightFrequencies.get(key);\n        }\n    }\n\n    return result;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n````&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/mcvbccz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1739604882.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m4xifih", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Efficient-Regret-806", "can_mod_post":
        false, "created_utc": 1735776411.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_1euqp2jb37", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE: Bash
        Shell Script\\]\n\nFor Task 1, as a single command line assuming you have
        the puzzle input data in a file named puzzle\\_input.txt :\n\n    cat puzzle_input.txt
        | cut -f 1 -d '' '' | sort | while read LHS &amp;&amp; read RHS &lt;&amp;3
        ; do DIFF=$((LHS-RHS)) ; DIFF=${DIFF#-} ; SUM=$((SUM+DIFF)) ; echo \"$SUM\"
        ; done 3&lt; &lt;(cat puzzle_input.txt | cut -f 4 -d '' '' | sort) | tail
        -n 1", "edited": 1735776592.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m4xifih", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Bash Shell Script]&lt;/p&gt;\n\n&lt;p&gt;For Task 1, as a single command line
        assuming you have the puzzle input data in a file named puzzle_input.txt :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;cat
        puzzle_input.txt | cut -f 1 -d &amp;#39; &amp;#39; | sort | while read LHS
        &amp;amp;&amp;amp; read RHS &amp;lt;&amp;amp;3 ; do DIFF=$((LHS-RHS)) ; DIFF=${DIFF#-}
        ; SUM=$((SUM+DIFF)) ; echo &amp;quot;$SUM&amp;quot; ; done 3&amp;lt; &amp;lt;(cat
        puzzle_input.txt | cut -f 4 -d &amp;#39; &amp;#39; | sort) | tail -n 1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m4xifih/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1735776411.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "m3u5vqm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1735190844.0, "send_replies": false,
        "parent_id": "t1_m3u5vpy", "score": 1, "author_fullname": "t2_6l4z3", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m3u5vqm", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required
        &lt;code&gt;[LANGUAGE: xyz]&lt;/code&gt; string literal at the beginning of
        your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please edit your comment to
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m3u5vqm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1735190844.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m3u5vpy", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "adimcohen", "can_mod_post": false, "created_utc":
        1735190844.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_k81uksw6", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: SQL Server T-SQL\\]\n\n[https://github.com/adimcohen/Advent\\_of\\_Code/blob/main/2024/Day\\_01/Day01.sql](https://github.com/adimcohen/Advent_of_Code/blob/main/2024/Day_01/Day01.sql)",
        "edited": 1735191140.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m3u5vpy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        SQL Server T-SQL]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/adimcohen/Advent_of_Code/blob/main/2024/Day_01/Day01.sql\"&gt;https://github.com/adimcohen/Advent_of_Code/blob/main/2024/Day_01/Day01.sql&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m3u5vpy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1735190844.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m3f8tqd", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "OutrageousMarzipan57", "can_mod_post":
        false, "created_utc": 1734953262.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_3aaic6hw", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE: Rust\\]\n\nI''m
        new to Rust, if you have any suggestions on how to optimize it I welcome them.\n\n    use
        std::fs::File;\n    use std::io::BufRead;\n    use std::io::BufReader;\n    \n    fn
        main() {\n    \n        let input_file = BufReader::new(File::open(\"./src/input.txt\")\n            .expect(\"Fail
        to read file\"));\n    \n        let mut a: Vec&lt;u32&gt; = Vec::new();\n        let
        mut b: Vec&lt;u32&gt; = Vec::new();\n    \n        for line in input_file.lines()
        {\n            for (i, word) in line.unwrap().split_whitespace().enumerate()
        {\n                match i {\n                    0 =&gt; a.push(word.parse().unwrap()),\n                    1
        =&gt; b.push(word.parse().unwrap()),\n                    _ =&gt; continue,\n                }\n            }\n        }\n    \n        a.sort();\n        b.sort();\n    \n        let
        mut sum1: u32 = 0;\n        let mut sum2: u32 = 0;\n        let mut i = 0;\n        for
        a_number in a {\n            sum1 += (a_number as f32 - b[i] as f32).abs()
        as u32;\n            sum2 += a_number * b.clone().into_iter().filter(|x| *x
        == a_number).count() as u32;\n            i += 1;\n        }\n    \n        println!(\"Part
        1 result: {sum1}\");\n        println!(\"Part 2 result: {sum2}\");\n    \n    }",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m3f8tqd", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m new to Rust, if you have any suggestions
        on how to optimize it I welcome them.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        std::fs::File;\nuse std::io::BufRead;\nuse std::io::BufReader;\n\nfn main()
        {\n\n    let input_file = BufReader::new(File::open(&amp;quot;./src/input.txt&amp;quot;)\n        .expect(&amp;quot;Fail
        to read file&amp;quot;));\n\n    let mut a: Vec&amp;lt;u32&amp;gt; = Vec::new();\n    let
        mut b: Vec&amp;lt;u32&amp;gt; = Vec::new();\n\n    for line in input_file.lines()
        {\n        for (i, word) in line.unwrap().split_whitespace().enumerate() {\n            match
        i {\n                0 =&amp;gt; a.push(word.parse().unwrap()),\n                1
        =&amp;gt; b.push(word.parse().unwrap()),\n                _ =&amp;gt; continue,\n            }\n        }\n    }\n\n    a.sort();\n    b.sort();\n\n    let
        mut sum1: u32 = 0;\n    let mut sum2: u32 = 0;\n    let mut i = 0;\n    for
        a_number in a {\n        sum1 += (a_number as f32 - b[i] as f32).abs() as
        u32;\n        sum2 += a_number * b.clone().into_iter().filter(|x| *x == a_number).count()
        as u32;\n        i += 1;\n    }\n\n    println!(&amp;quot;Part 1 result: {sum1}&amp;quot;);\n    println!(&amp;quot;Part
        2 result: {sum2}&amp;quot;);\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m3f8tqd/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1734953262.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m2wbpnt", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "CDawn99", "can_mod_post": false, "created_utc":
        1734649139.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_1bw0qhg1fu", "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "[LANGUAGE: C]\n\nWent for
        a simple solution.\n\n[Part 1 &amp; 2](https://github.com/Cdawn99/AoC2024/tree/master/Day01)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m2wbpnt", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C]&lt;/p&gt;\n\n&lt;p&gt;Went for a simple solution.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Cdawn99/AoC2024/tree/master/Day01\"&gt;Part 1 &amp;amp;
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m2wbpnt/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1734649139.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m2pj7gh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "TheSkwie", "can_mod_post": false, "created_utc":
        1734551758.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_3yxqz9", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: PowerShell]  \n\nEvery year I''m
        trying to solve all puzzles with the help of PowerShell.  \nHere are my solutions
        for day 1:  \n\n[Part 1](https://github.com/Skwie/AdventOfCode2024/blob/main/Day1Part1.ps1)\n\n[Part
        2](https://github.com/Skwie/AdventOfCode2024/blob/main/Day1Part2.ps1)", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m2pj7gh",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: PowerShell]  &lt;/p&gt;\n\n&lt;p&gt;Every
        year I&amp;#39;m trying to solve all puzzles with the help of PowerShell.&lt;br/&gt;\nHere
        are my solutions for day 1:  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Skwie/AdventOfCode2024/blob/main/Day1Part1.ps1\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Skwie/AdventOfCode2024/blob/main/Day1Part2.ps1\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m2pj7gh/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1734551758.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m2dxgpy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Singing-In-The-Storm", "can_mod_post":
        false, "created_utc": 1734381812.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_8xwpke8h", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE: JavaScript\\]\n\nPart
        1 (2ms)\n\nPart 2 (1ms)\n\n[Clear and BLAZINGLY FAST AOC solutions in JS (no
        libraries)](https://github.com/JoanaBLate/advent-of-code-js/tree/main/2024)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m2dxgpy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        JavaScript]&lt;/p&gt;\n\n&lt;p&gt;Part 1 (2ms)&lt;/p&gt;\n\n&lt;p&gt;Part
        2 (1ms)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/JoanaBLate/advent-of-code-js/tree/main/2024\"&gt;Clear
        and BLAZINGLY FAST AOC solutions in JS (no libraries)&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m2dxgpy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1734381812.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m2c76h0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Independent-Tax3836", "can_mod_post":
        false, "send_replies": true, "parent_id": "t1_m2bza3r", "score": 1, "author_fullname":
        "t2_ydlc51ljj", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "Yes, my bad. I was trying
        to input code into the submission box hahaha", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m2c76h0", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, my bad. I was trying to
        input code into the submission box hahaha&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m2c76h0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1734362107.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1734362107.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m2bza3r", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "southsidemcslish", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_m2bmchm", "score": 1, "author_fullname":
        "t2_kl6inpa", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "I''m not sure what you mean. You usually put
        a number in the submission box on the site", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_m2bza3r", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not sure
        what you mean. You usually put a number in the submission box on the site&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m2bza3r/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1734359248.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1734359248.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m2bmchm", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Independent-Tax3836", "can_mod_post":
        false, "created_utc": 1734353902.0, "send_replies": true, "parent_id": "t1_m299xq9",
        "score": 1, "author_fullname": "t2_ydlc51ljj", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "I tried inputting it:\n\n  \n''That''s
        not the right answer''.\n\nAm I supposed to be inputting code into that tiny
        box?", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m2bmchm", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        tried inputting it:&lt;/p&gt;\n\n&lt;p&gt;&amp;#39;That&amp;#39;s not the
        right answer&amp;#39;.&lt;/p&gt;\n\n&lt;p&gt;Am I supposed to be inputting
        code into that tiny box?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m2bmchm/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1734353902.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "m299xq9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "southsidemcslish",
        "can_mod_post": false, "created_utc": 1734310381.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_kl6inpa", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "\\[Language:
        J\\]\n\nJ isn''t unknown to this community, but I try to show it off whenever
        possible to help garner attention.\n\n[2024/01/1.ijs](https://github.com/4hg/aoc/blob/main/2024/01/1.ijs)\n\n    I
        =. |: \".&amp;&gt; ''b'' freads ''input.txt''\n    S =. +/ |@-/ sort\"1 I\n    G
        =. +/ ({. * 1 #. =//) I\n    echo S , G\n    exit 0", "edited": 1734310587.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m299xq9",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: J]&lt;/p&gt;\n\n&lt;p&gt;J
        isn&amp;#39;t unknown to this community, but I try to show it off whenever
        possible to help garner attention.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/4hg/aoc/blob/main/2024/01/1.ijs\"&gt;2024/01/1.ijs&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;I
        =. |: &amp;quot;.&amp;amp;&amp;gt; &amp;#39;b&amp;#39; freads &amp;#39;input.txt&amp;#39;\nS
        =. +/ |@-/ sort&amp;quot;1 I\nG =. +/ ({. * 1 #. =//) I\necho S , G\nexit
        0\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m299xq9/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1734310381.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m230lqg", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "fish-n-chips-uk", "can_mod_post": false,
        "created_utc": 1734216034.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_56110w9t", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: TypeScript\\]\n\n*
        Solver: [https://github.com/cz-fish/advent-of-code/blob/master/2024/ts/01.ts](https://github.com/cz-fish/advent-of-code/blob/master/2024/ts/01.ts)\n*
        \\[GSGA\\] visualization: [https://cz-fish.github.io/advent-of-code/2024/day/01.html](https://cz-fish.github.io/advent-of-code/2024/day/01.html)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m230lqg", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        TypeScript]&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Solver: &lt;a href=\"https://github.com/cz-fish/advent-of-code/blob/master/2024/ts/01.ts\"&gt;https://github.com/cz-fish/advent-of-code/blob/master/2024/ts/01.ts&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;[GSGA]
        visualization: &lt;a href=\"https://cz-fish.github.io/advent-of-code/2024/day/01.html\"&gt;https://cz-fish.github.io/advent-of-code/2024/day/01.html&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m230lqg/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1734216034.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m202yfo", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "ThierryMartinez", "can_mod_post": false,
        "created_utc": 1734175193.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_pvqpe3fpn", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE: Coq/Rocq\\]\n\n[https://github.com/thierry-martinez/advent-of-code/blob/main/2024/day01/day01.v](https://github.com/thierry-martinez/advent-of-code/blob/main/2024/day01/day01.v)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m202yfo", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Coq/Rocq]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/thierry-martinez/advent-of-code/blob/main/2024/day01/day01.v\"&gt;https://github.com/thierry-martinez/advent-of-code/blob/main/2024/day01/day01.v&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m202yfo/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1734175193.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m1l51ot", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "AYM123", "can_mod_post": false, "created_utc":
        1733950909.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_1qu28g9a", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: Rust\\]\n\n[github](https://github.com/AhmedYassineMaalej/AoC-2024/blob/master/src/problems/day1.rs)  \nPart
        1: \\~90\u00b5s  \nPart 2: \\~120\u00b5s", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m1l51ot", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AhmedYassineMaalej/AoC-2024/blob/master/src/problems/day1.rs\"&gt;github&lt;/a&gt;&lt;br/&gt;\nPart
        1: ~90\u00b5s&lt;br/&gt;\nPart 2: ~120\u00b5s&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m1l51ot/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733950909.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m1htkvr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "AccomplishedFish7206", "can_mod_post":
        false, "created_utc": 1733903843.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_o2nljqukr", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE: Joy\\]
        \n\nJoy is Forth''s functional cousin. Run with  [https://github.com/Wodan58/Joy](https://github.com/Wodan58/Joy)\n\n
        [https://gist.github.com/HVukman/c57998a54c7bf26bb71b513cd2053a9d](https://gist.github.com/HVukman/c57998a54c7bf26bb71b513cd2053a9d)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m1htkvr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Joy] &lt;/p&gt;\n\n&lt;p&gt;Joy is Forth&amp;#39;s functional cousin. Run
        with  &lt;a href=\"https://github.com/Wodan58/Joy\"&gt;https://github.com/Wodan58/Joy&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gist.github.com/HVukman/c57998a54c7bf26bb71b513cd2053a9d\"&gt;https://gist.github.com/HVukman/c57998a54c7bf26bb71b513cd2053a9d&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m1htkvr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733903843.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m2j67k6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "doct_doct", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_m2j4z2n", "score": 1, "author_fullname": "t2_1d8swhp68l",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Gotcha. Thanks!", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m2j67k6", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Gotcha. Thanks!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m2j67k6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1734460302.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1734460302.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m2j4z2n", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "cruel_cruel_world", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_m2j2hhc", "score": 1, "author_fullname":
        "t2_dgnaivolp", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "Yeah I copy it into a local file one level up
        from my code but don''t commit it to the repo", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_m2j4z2n", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah I copy it into
        a local file one level up from my code but don&amp;#39;t commit it to the
        repo&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "link_id": "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m2j4z2n/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1734459913.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1734459913.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m2j2hhc", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "doct_doct", "can_mod_post": false, "created_utc":
        1734459132.0, "send_replies": true, "parent_id": "t1_m1dfmmd", "score": 1,
        "author_fullname": "t2_1d8swhp68l", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "I am a beginner with
        a very simple question.\nHave you downloaded the input into the input.txt
        file here?", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m2j2hhc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        am a beginner with a very simple question.\nHave you downloaded the input
        into the input.txt file here?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m2j2hhc/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1734459132.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "m1dfmmd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "cruel_cruel_world",
        "can_mod_post": false, "created_utc": 1733845599.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_dgnaivolp",
        "approved_by": null, "mod_note": null, "all_awardings": [], "collapsed": false,
        "body": "[LANGUAGE: Python]\n\n[Part 1](https://github.com/justinwall/advent-of-code/blob/main/2024%2FDay%2001%2FPython%2Fpart1.py)\n\n[Part
        2](https://github.com/justinwall/advent-of-code/blob/main/2024%2FDay%2001%2FPython%2Fpart2.py)",
        "edited": 1734716244.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m1dfmmd", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/justinwall/advent-of-code/blob/main/2024%2FDay%2001%2FPython%2Fpart1.py\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/justinwall/advent-of-code/blob/main/2024%2FDay%2001%2FPython%2Fpart2.py\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m1dfmmd/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733845599.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m1ch2kj", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "AccomplishedFish7206", "can_mod_post":
        false, "created_utc": 1733831674.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_o2nljqukr", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE: Ngn/K\\]\n\nAfter
        knowing how to do map each left, part 2 was easy\n\n[https://gist.github.com/HVukman/79a197300802caeda848b8524dba016d](https://gist.github.com/HVukman/79a197300802caeda848b8524dba016d)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m1ch2kj", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Ngn/K]&lt;/p&gt;\n\n&lt;p&gt;After knowing how to do map each left, part 2
        was easy&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/HVukman/79a197300802caeda848b8524dba016d\"&gt;https://gist.github.com/HVukman/79a197300802caeda848b8524dba016d&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m1ch2kj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733831674.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m1a8wzq", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Dszaba", "can_mod_post": false, "created_utc":
        1733791206.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_221jn7u5", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: Python\\]\n\nVery bad, very
        noob, but mine:  \n[https://github.com/00Dabide/Advent\\_of\\_Code\\_2024/tree/main/Day1](https://github.com/00Dabide/Advent_of_Code_2024/tree/main/Day1)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m1a8wzq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;p&gt;Very bad, very noob, but mine:&lt;br/&gt;\n&lt;a
        href=\"https://github.com/00Dabide/Advent_of_Code_2024/tree/main/Day1\"&gt;https://github.com/00Dabide/Advent_of_Code_2024/tree/main/Day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m1a8wzq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733791206.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m1a8l5j", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "AutoModerator", "can_mod_post": false,
        "created_utc": 1733791086.0, "send_replies": false, "parent_id": "t1_m1a8l4t",
        "score": 1, "author_fullname": "t2_6l4z3", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "AutoModerator did not
        detect the required `[LANGUAGE: xyz]` string literal at the beginning of your
        solution submission.\n\nPlease edit your comment to [state your programming
        language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m1a8l5j", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required
        &lt;code&gt;[LANGUAGE: xyz]&lt;/code&gt; string literal at the beginning of
        your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please edit your comment to
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m1a8l5j/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733791086.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m1a8l4t", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m1a8l4t/",
        "num_reports": null, "locked": false, "name": "t1_m1a8l4t", "created": 1733791086.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1733791086.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m194ds8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "wow_nice_hat", "can_mod_post": false,
        "created_utc": 1733777583.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_trif83el", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[LANGUAGE: JavaScript]
        \n\n[Part 1](https://github.com/meier-andersen/AoC/blob/main/src/code/2024/1/code/1.js)\n\n[Part
        2](https://github.com/meier-andersen/AoC/blob/main/src/code/2024/1/code/2.js)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m194ds8", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        JavaScript] &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/meier-andersen/AoC/blob/main/src/code/2024/1/code/1.js\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/meier-andersen/AoC/blob/main/src/code/2024/1/code/2.js\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m194ds8/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733777583.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m18nj2y", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "olimc", "can_mod_post": false, "created_utc":
        1733772364.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_t0qyt", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Go\\]\n\n[https://github.com/omcmanus1/aoc-24-go/blob/main/day1.go](https://github.com/omcmanus1/aoc-24-go/blob/main/day1.go)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m18nj2y", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/omcmanus1/aoc-24-go/blob/main/day1.go\"&gt;https://github.com/omcmanus1/aoc-24-go/blob/main/day1.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m18nj2y/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733772364.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m16u0nv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "bigmagnus", "can_mod_post": false, "created_utc":
        1733750633.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_3nszy", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Language: Go]\n\nhttps://github.com/ironllama/adventofcode2024/blob/main/day01/01.go",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m16u0nv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ironllama/adventofcode2024/blob/main/day01/01.go\"&gt;https://github.com/ironllama/adventofcode2024/blob/main/day01/01.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m16u0nv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733750633.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m1660g2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "DamZ1000", "can_mod_post": false, "created_utc":
        1733736789.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_1jtqbwzp", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Language: DRAIN]\n\nMy toy Lang.\n\n    read_file(\"puzzle_input.txt\")\n        -&gt;
        split(\"\\n\")\n        -&gt; [str::str -&gt; /\\d+/g -&gt; list_to_ints]\n        -&gt;
        transpose\n        -&gt; [list::list -&gt; sort]\n        -&gt; transpose\n        -&gt;
        [a, b:: (a - b) -&gt; abs]\n        -&gt; sum\n        -&gt; label(\"Answer:
        \")", "edited": 1734140118.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m1660g2", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        DRAIN]&lt;/p&gt;\n\n&lt;p&gt;My toy Lang.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;read_file(&amp;quot;puzzle_input.txt&amp;quot;)\n    -&amp;gt;
        split(&amp;quot;\\n&amp;quot;)\n    -&amp;gt; [str::str -&amp;gt; /\\d+/g
        -&amp;gt; list_to_ints]\n    -&amp;gt; transpose\n    -&amp;gt; [list::list
        -&amp;gt; sort]\n    -&amp;gt; transpose\n    -&amp;gt; [a, b:: (a - b) -&amp;gt;
        abs]\n    -&amp;gt; sum\n    -&amp;gt; label(&amp;quot;Answer: &amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m1660g2/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733736789.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m13f1ei", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "TeachUPython", "can_mod_post": false,
        "created_utc": 1733693595.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_ra4mqj70s", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Python\\]\n\nThis
        is my first year doing advent of code. My goal was to make the code as verbose
        as possible to make the intent of the code clear. Let me know your thoughts!\n\n[https://github.com/RD-Dev-29/advent\\_of\\_code\\_24/blob/main/code\\_files/day1.py](https://github.com/RD-Dev-29/advent_of_code_24/blob/main/code_files/day1.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m13f1ei", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;p&gt;This is my first year doing advent of code.
        My goal was to make the code as verbose as possible to make the intent of
        the code clear. Let me know your thoughts!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/RD-Dev-29/advent_of_code_24/blob/main/code_files/day1.py\"&gt;https://github.com/RD-Dev-29/advent_of_code_24/blob/main/code_files/day1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m13f1ei/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733693595.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m12zqps", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Waste-Structure-1367", "can_mod_post":
        false, "created_utc": 1733688760.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_cd9amlz9", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Python\\]
        day 1 task2\n\nmy first ever advent and i didnt know how to take input lol\n\n[https://pastebin.pl/view/89841a05](https://pastebin.pl/view/89841a05)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m12zqps", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python] day 1 task2&lt;/p&gt;\n\n&lt;p&gt;my first ever advent and i didnt
        know how to take input lol&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.pl/view/89841a05\"&gt;https://pastebin.pl/view/89841a05&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m12zqps/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733688760.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0z7b51", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "KodlaK1593", "can_mod_post": false, "created_utc":
        1733628572.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_yta5m", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Ocaml\\]\n\n  \n[https://github.com/Kodlak15/aoc2024/blob/master/day01/bin/main.ml](https://github.com/Kodlak15/aoc2024/blob/master/day01/bin/main.ml)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0z7b51", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Ocaml]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Kodlak15/aoc2024/blob/master/day01/bin/main.ml\"&gt;https://github.com/Kodlak15/aoc2024/blob/master/day01/bin/main.ml&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0z7b51/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733628572.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0yf65g", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "euporphium", "can_mod_post": false, "created_utc":
        1733617626.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_hf59s", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: C#\\]\n\n[https://github.com/euporphium/advent-of-code-2024/blob/main/src/AdventOfCode.Cli/Solvers/Day1Solver.cs](https://github.com/euporphium/advent-of-code-2024/blob/main/src/AdventOfCode.Cli/Solvers/Day1Solver.cs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0yf65g", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        C#]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/euporphium/advent-of-code-2024/blob/main/src/AdventOfCode.Cli/Solvers/Day1Solver.cs\"&gt;https://github.com/euporphium/advent-of-code-2024/blob/main/src/AdventOfCode.Cli/Solvers/Day1Solver.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0yf65g/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733617626.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0udj1z", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "egel-lang", "can_mod_post": false, "created_utc":
        1733561856.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_fz865g70", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Language: Egel]\n\n    # Advent of Code
        (AoC) - day 1, task 2\n    \n    import \"prelude.eg\"\n    using System,
        OS, List\n    \n    def input =\n        let L = read_line stdin in if eof
        stdin then {} else {L | input}\n    \n    def parse = \n        do Regex::matches
        (Regex::compile \"[0-9]+\") |&gt; map to_int\n    \n    def tally =\n        do
        map Dict::count |&gt; reduce Dict::inner_join |&gt; Dict::to_list\n    \n    def
        main =\n        input |&gt; map parse |&gt; transpose |&gt; tally |&gt; map
        [(X,(Y,Z)) -&gt; X*Y*Z] |&gt; sum", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m0udj1z", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Egel]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Advent of Code (AoC) - day 1, task 2\n\nimport &amp;quot;prelude.eg&amp;quot;\nusing
        System, OS, List\n\ndef input =\n    let L = read_line stdin in if eof stdin
        then {} else {L | input}\n\ndef parse = \n    do Regex::matches (Regex::compile
        &amp;quot;[0-9]+&amp;quot;) |&amp;gt; map to_int\n\ndef tally =\n    do map
        Dict::count |&amp;gt; reduce Dict::inner_join |&amp;gt; Dict::to_list\n\ndef
        main =\n    input |&amp;gt; map parse |&amp;gt; transpose |&amp;gt; tally
        |&amp;gt; map [(X,(Y,Z)) -&amp;gt; X*Y*Z] |&amp;gt; sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0udj1z/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733561856.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0sb2gk", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "CoralKashri", "can_mod_post": false, "created_utc":
        1733526976.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_w6uqhezc", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: C++\\]  \nYou might mistake
        part 1 solution to be a python one :P\n\nC++23 - Ranges\n\n    std::cout &lt;&lt;
        std::ranges::fold_left(std::views::zip_transform([](auto n1, auto n2) { return
        std::abs(n1 - n2); }, left, right), 0ull, std::plus&lt;&gt;{}) &lt;&lt; std::endl;\n\n[Solution](https://github.com/coralkashri/AOC/blob/master/src/2024/day_1.hpp)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0sb2gk", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        C++]&lt;br/&gt;\nYou might mistake part 1 solution to be a python one :P&lt;/p&gt;\n\n&lt;p&gt;C++23
        - Ranges&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;std::cout &amp;lt;&amp;lt; std::ranges::fold_left(std::views::zip_transform([](auto
        n1, auto n2) { return std::abs(n1 - n2); }, left, right), 0ull, std::plus&amp;lt;&amp;gt;{})
        &amp;lt;&amp;lt; std::endl;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/coralkashri/AOC/blob/master/src/2024/day_1.hpp\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0sb2gk/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733526976.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0r3pig", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Korka13", "can_mod_post": false, "created_utc":
        1733512521.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_2bzo6ff3", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: JavaScript\\]\n\n[Topaz paste](https://topaz.github.io/paste/#XQAAAQCGBAAAAAAAAAAxm8oZxjYXows3V67OFtTdE1VwEU5RyYkjfXvt55CvpXTIbmsZIygM9SIwswrgIa5BFefiuTfVmMEjp7RMMBn5wyo96ovtfve+rxQk+H2yxoprvMh+psgKEF1NiD6gyHCbFjUzmnHc5j48GBiwTMMgwfnmNTatQefpRQMOHv8Z2korK17gpCJuCbmm+67MRqz8xn2vYyHX2i5XfeET5vX/R01LLkbLWIxd5dpg/Z6e5fgtugEhcFgVtXQ3dIYEl2yIIIwPpyaYHfEXJR+DF9pPvomE0KbZF9Tp1QLBkhl7b1ZxbyyBaR9jmlHIFhjbhpaybMVn3YA5QBjd7+IBq7u8mryJrocsrip8fu3skEfqht7xTrmRUvPwvy2rPPzfj3980ubGGsRfdeQq3y7bL7uSguaioNhraHRRPEXvn0p4iZDyCzcVH2hhI8cQmNh9UTII52+dv/DO64Sz6ckgluhFV3QfA91Ni74daxbbP6RljcKvEVYQdgJ0h2AKA8o0YQ6LBs7B/ZFhhB3LwhNpaESNvWxUEq1OwNmMl0NI1jCjfcKkBbkSRwaaLGnfoC3xFcT/5o3AwA==)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0r3pig", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        JavaScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCGBAAAAAAAAAAxm8oZxjYXows3V67OFtTdE1VwEU5RyYkjfXvt55CvpXTIbmsZIygM9SIwswrgIa5BFefiuTfVmMEjp7RMMBn5wyo96ovtfve+rxQk+H2yxoprvMh+psgKEF1NiD6gyHCbFjUzmnHc5j48GBiwTMMgwfnmNTatQefpRQMOHv8Z2korK17gpCJuCbmm+67MRqz8xn2vYyHX2i5XfeET5vX/R01LLkbLWIxd5dpg/Z6e5fgtugEhcFgVtXQ3dIYEl2yIIIwPpyaYHfEXJR+DF9pPvomE0KbZF9Tp1QLBkhl7b1ZxbyyBaR9jmlHIFhjbhpaybMVn3YA5QBjd7+IBq7u8mryJrocsrip8fu3skEfqht7xTrmRUvPwvy2rPPzfj3980ubGGsRfdeQq3y7bL7uSguaioNhraHRRPEXvn0p4iZDyCzcVH2hhI8cQmNh9UTII52+dv/DO64Sz6ckgluhFV3QfA91Ni74daxbbP6RljcKvEVYQdgJ0h2AKA8o0YQ6LBs7B/ZFhhB3LwhNpaESNvWxUEq1OwNmMl0NI1jCjfcKkBbkSRwaaLGnfoC3xFcT/5o3AwA==\"&gt;Topaz
        paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0r3pig/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733512521.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0qda4v", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Betadam", "can_mod_post": false, "created_utc":
        1733504242.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_3fy1gkth", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Python\\]\n\nMy first time to
        challenge Advent of Code. \n\nSince I am a beginner, just can try to use some
        basic coding and concept to solve those puzzles. I put my code in my website
        to share with some explanation, please take a look and provide me your inputs.
        Thanks!! \n\n[https://bversion.com/WordPress/2024/12/06/aoc-2024/#day-1](https://bversion.com/WordPress/2024/12/06/aoc-2024/#day-1)",
        "edited": 1733505572.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m0qda4v", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;p&gt;My first time to challenge Advent of Code. &lt;/p&gt;\n\n&lt;p&gt;Since
        I am a beginner, just can try to use some basic coding and concept to solve
        those puzzles. I put my code in my website to share with some explanation,
        please take a look and provide me your inputs. Thanks!! &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://bversion.com/WordPress/2024/12/06/aoc-2024/#day-1\"&gt;https://bversion.com/WordPress/2024/12/06/aoc-2024/#day-1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0qda4v/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733504242.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0q3j7n", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Jomy10", "can_mod_post": false, "created_utc":
        1733501173.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_msu23", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: C\\]\n\n[https://github.com/Jomy10/Advent-Of-Code-2024/blob/master/day01/main.c](https://github.com/Jomy10/Advent-Of-Code-2024/blob/master/day01/main.c)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0q3j7n", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Jomy10/Advent-Of-Code-2024/blob/master/day01/main.c\"&gt;https://github.com/Jomy10/Advent-Of-Code-2024/blob/master/day01/main.c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0q3j7n/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733501173.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0oiaki", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "grantrules", "can_mod_post": false, "created_utc":
        1733474352.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_36rgm", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Language: Python]\n\nWent back and cleaned
        up my day1 a little\n\n    from fileinput import input\n    from collections
        import Counter\n\n    a,b = zip(*[[int(n) for n in line.split()] for line
        in input()])\n    cnt = Counter(b)\n\n    print(\"part1\", sum(abs(x - y)
        for x,y in zip(sorted(a),sorted(b))))\n    print(\"part2\", sum([cnt[x] *
        x for x in a if cnt[x]]))", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m0oiaki", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;p&gt;Went back and cleaned up my day1 a little&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        fileinput import input\nfrom collections import Counter\n\na,b = zip(*[[int(n)
        for n in line.split()] for line in input()])\ncnt = Counter(b)\n\nprint(&amp;quot;part1&amp;quot;,
        sum(abs(x - y) for x,y in zip(sorted(a),sorted(b))))\nprint(&amp;quot;part2&amp;quot;,
        sum([cnt[x] * x for x in a if cnt[x]]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0oiaki/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733474352.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0l6wl6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "ilyablue", "can_mod_post": false, "created_utc":
        1733427578.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_4j8qaens", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Excel\\]\n\nA few years ago
        I started trying to solve these using only Excel (because I was too lazy to
        learn any coding languages and was already comfortable in Excel)  \nThis year
        I want to try to see how far I can get, so let''s see\n\n[https://github.com/robin-bakker/advent-of-code/blob/main/2024/2024-01.xlsx](https://github.com/robin-bakker/advent-of-code/blob/main/2024/2024-01.xlsx)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0l6wl6", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Excel]&lt;/p&gt;\n\n&lt;p&gt;A few years ago I started trying to solve these
        using only Excel (because I was too lazy to learn any coding languages and
        was already comfortable in Excel)&lt;br/&gt;\nThis year I want to try to see
        how far I can get, so let&amp;#39;s see&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/robin-bakker/advent-of-code/blob/main/2024/2024-01.xlsx\"&gt;https://github.com/robin-bakker/advent-of-code/blob/main/2024/2024-01.xlsx&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0l6wl6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733427578.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0l1ed7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "hint918919", "can_mod_post": false, "created_utc":
        1733425884.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_m7nvwr8", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: C++\\]\n\n    #include &lt;set&gt;\n    #include
        &lt;cstdio&gt;\n    #include &lt;cmath&gt;\n    \n    using namespace std;\n    \n    void
        load(multiset&lt;int&gt; &amp; left, multiset&lt;int&gt; &amp; right) {\n        int
        l, r;\n    \n        while(2 == scanf(\"%d %d\", &amp;l, &amp;r)) {\n            left.emplace(l);\n            right.emplace(r);\n        }\n    }\n    \n    int
        main() {\n        multiset&lt;int&gt; left;\n        multiset&lt;int&gt; right;\n    \n        load(left,
        right);\n    \n        int sum = 0;\n    \n        auto r = right.begin();\n        auto
        l = left.begin();\n        for(; l != left.end(); ++l, ++r) {\n            //
        part 1\n            // sum += std::abs(*l - *r);\n            // part 2\n            sum
        += *l * right.count(*l);\n        }\n    \n        printf(\"%d\\n\", sum);\n    }",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0l1ed7", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C++]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;set&amp;gt;\n#include
        &amp;lt;cstdio&amp;gt;\n#include &amp;lt;cmath&amp;gt;\n\nusing namespace
        std;\n\nvoid load(multiset&amp;lt;int&amp;gt; &amp;amp; left, multiset&amp;lt;int&amp;gt;
        &amp;amp; right) {\n    int l, r;\n\n    while(2 == scanf(&amp;quot;%d %d&amp;quot;,
        &amp;amp;l, &amp;amp;r)) {\n        left.emplace(l);\n        right.emplace(r);\n    }\n}\n\nint
        main() {\n    multiset&amp;lt;int&amp;gt; left;\n    multiset&amp;lt;int&amp;gt;
        right;\n\n    load(left, right);\n\n    int sum = 0;\n\n    auto r = right.begin();\n    auto
        l = left.begin();\n    for(; l != left.end(); ++l, ++r) {\n        // part
        1\n        // sum += std::abs(*l - *r);\n        // part 2\n        sum +=
        *l * right.count(*l);\n    }\n\n    printf(&amp;quot;%d\\n&amp;quot;, sum);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0l1ed7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733425884.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0kqwnl", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "mgtezak", "can_mod_post": false, "created_utc":
        1733422677.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_pre118iff", "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "[LANGUAGE: Python]\n\n[Solution
        part 1](https://github.com/mgtezak/Advent_of_Code/blob/master/2024/01/p1.py)\n\n[Solution
        part 2](https://github.com/mgtezak/Advent_of_Code/blob/master/2024/01/p2.py)\n\n[Detailed
        walkthrough](https://github.com/mgtezak/Advent_of_Code/blob/master/2024/01/walkthrough.md)\n\n[Fun
        little AoC fanpage](https://aoc-puzzle-solver.streamlit.app/)", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m0kqwnl",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mgtezak/Advent_of_Code/blob/master/2024/01/p1.py\"&gt;Solution
        part 1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/mgtezak/Advent_of_Code/blob/master/2024/01/p2.py\"&gt;Solution
        part 2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/mgtezak/Advent_of_Code/blob/master/2024/01/walkthrough.md\"&gt;Detailed
        walkthrough&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://aoc-puzzle-solver.streamlit.app/\"&gt;Fun
        little AoC fanpage&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0kqwnl/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733422677.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "m0my9h5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "greyhoundmolly",
        "can_mod_post": false, "created_utc": 1733448717.0, "send_replies": true,
        "parent_id": "t1_m0irhkq", "score": 1, "author_fullname": "t2_7vukd4f3", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "    I am afraid the below style is not Pythonic...\n    \n    iter = 0\n    \n    for
        _ in range(0 , len(list1)):\n        distance.append(abs(list1[iter] - list2[iter]))\n        iter
        += 1", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m0my9h5", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;I
        am afraid the below style is not Pythonic...\n\niter = 0\n\nfor _ in range(0
        , len(list1)):\n    distance.append(abs(list1[iter] - list2[iter]))\n    iter
        += 1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0my9h5/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733448717.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "m0irhkq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "BriefEducational4535",
        "can_mod_post": false, "created_utc": 1733396061.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_92rko7cr5",
        "approved_by": null, "mod_note": null, "all_awardings": [], "collapsed": false,
        "body": "\\[Language: Python\\]\n\n[Advent-of-code-2024/day1/day1.ipynb at
        main \u00b7 KIKI1712/Advent-of-code-2024](https://github.com/KIKI1712/Advent-of-code-2024/blob/main/day1/day1.ipynb)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0irhkq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/KIKI1712/Advent-of-code-2024/blob/main/day1/day1.ipynb\"&gt;Advent-of-code-2024/day1/day1.ipynb
        at main \u00b7 KIKI1712/Advent-of-code-2024&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0irhkq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733396061.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0iopjf", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "hiimjustin000", "can_mod_post": false,
        "created_utc": 1733394264.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_3luhvhgf", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: JavaScript\\]\n\nGuess
        who''s back, guess who''s back, guess who''s back, guess who''s back\n\n[https://github.com/hiimjustin000/advent-of-code/blob/master/2024/day1/part1.js](https://github.com/hiimjustin000/advent-of-code/blob/master/2024/day1/part1.js)\n\n[https://github.com/hiimjustin000/advent-of-code/blob/master/2024/day1/part2.js](https://github.com/hiimjustin000/advent-of-code/blob/master/2024/day1/part2.js)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0iopjf", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        JavaScript]&lt;/p&gt;\n\n&lt;p&gt;Guess who&amp;#39;s back, guess who&amp;#39;s
        back, guess who&amp;#39;s back, guess who&amp;#39;s back&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/hiimjustin000/advent-of-code/blob/master/2024/day1/part1.js\"&gt;https://github.com/hiimjustin000/advent-of-code/blob/master/2024/day1/part1.js&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/hiimjustin000/advent-of-code/blob/master/2024/day1/part2.js\"&gt;https://github.com/hiimjustin000/advent-of-code/blob/master/2024/day1/part2.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0iopjf/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733394264.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0ijhxy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "tonivade", "can_mod_post": false, "created_utc":
        1733390756.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_rnbpn", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: MAL]\n\nI implemented it using
        my own implementation in java of Make a Lisp aka [MAL](https://github.com/kanaka/mal).\n\nhttps://github.com/tonivade/adventofcode-2024/blob/main/mal/day1.mal",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0ijhxy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        MAL]&lt;/p&gt;\n\n&lt;p&gt;I implemented it using my own implementation in
        java of Make a Lisp aka &lt;a href=\"https://github.com/kanaka/mal\"&gt;MAL&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/tonivade/adventofcode-2024/blob/main/mal/day1.mal\"&gt;https://github.com/tonivade/adventofcode-2024/blob/main/mal/day1.mal&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0ijhxy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733390756.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0hvsfv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Opposite-Block6690", "can_mod_post": false,
        "created_utc": 1733376473.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_cyf637gw1", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Go\\]\n\n[https://github.com/MiguelBad/aoc/blob/main/2024/01/main.go](https://github.com/MiguelBad/aoc/blob/main/2024/01/main.go)\n\npicked
        up go just recently. also practiced my dsa", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m0hvsfv", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/MiguelBad/aoc/blob/main/2024/01/main.go\"&gt;https://github.com/MiguelBad/aoc/blob/main/2024/01/main.go&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;picked
        up go just recently. also practiced my dsa&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0hvsfv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733376473.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0ho8cd", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Micromantic", "can_mod_post": false, "created_utc":
        1733373001.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_jp5j2", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: R\\]\n\n[github](https://github.com/Micromantic/Advent_Of_Code_2024)\n\n        library(tidyverse)\n        library(readr)\n        library(here)\n        \n        coords_raw
        &lt;- read_table(here(\"data/coords.csv\"),\n                                  col_names
        = FALSE)\n        \n        coords &lt;- coords_raw %&gt;%\n          rename(list_1
        = X1,\n                 list_2 = X2)\n        \n        coords &lt;- coords
        %&gt;%\n          mutate(list_1 = sort(list_1),\n                 list_2 =
        sort(list_2))\n        \n        coords_dist &lt;- coords %&gt;%\n          mutate(distance
        = abs(list_1 - list_2))\n        \n        total_distance &lt;- sum(coords_dist$distance)\n        \n        total_distance\n        \n        coords_simi
        &lt;- coords_dist %&gt;%\n          mutate(\n            \"similarity_mult\"
        = map_int(.x = list_1, .f = ~ sum(.x == list_2)),\n            \"similarity_score\"
        = list_1 * similarity_mult)\n        \n        total_similarity &lt;- sum(coords_simi$similarity_score)\n        \n        total_similarity",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0ho8cd", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        R]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Micromantic/Advent_Of_Code_2024\"&gt;github&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    library(tidyverse)\n    library(readr)\n    library(here)\n\n    coords_raw
        &amp;lt;- read_table(here(&amp;quot;data/coords.csv&amp;quot;),\n                              col_names
        = FALSE)\n\n    coords &amp;lt;- coords_raw %&amp;gt;%\n      rename(list_1
        = X1,\n             list_2 = X2)\n\n    coords &amp;lt;- coords %&amp;gt;%\n      mutate(list_1
        = sort(list_1),\n             list_2 = sort(list_2))\n\n    coords_dist &amp;lt;-
        coords %&amp;gt;%\n      mutate(distance = abs(list_1 - list_2))\n\n    total_distance
        &amp;lt;- sum(coords_dist$distance)\n\n    total_distance\n\n    coords_simi
        &amp;lt;- coords_dist %&amp;gt;%\n      mutate(\n        &amp;quot;similarity_mult&amp;quot;
        = map_int(.x = list_1, .f = ~ sum(.x == list_2)),\n        &amp;quot;similarity_score&amp;quot;
        = list_1 * similarity_mult)\n\n    total_similarity &amp;lt;- sum(coords_simi$similarity_score)\n\n    total_similarity\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0ho8cd/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733373001.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0hj6jh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "AutoModerator", "can_mod_post": false,
        "created_utc": 1733370862.0, "send_replies": false, "parent_id": "t1_m0hj6iy",
        "score": 1, "author_fullname": "t2_6l4z3", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "AutoModerator did not
        detect the required `[LANGUAGE: xyz]` string literal at the beginning of your
        solution submission.\n\nPlease edit your comment to [state your programming
        language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m0hj6jh", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required
        &lt;code&gt;[LANGUAGE: xyz]&lt;/code&gt; string literal at the beginning of
        your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please edit your comment to
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0hj6jh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733370862.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m0hj6iy", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0hj6iy/",
        "num_reports": null, "locked": false, "name": "t1_m0hj6iy", "created": 1733370861.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1733370861.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0h11f5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "heyitsmattwade", "can_mod_post": false,
        "created_utc": 1733364008.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_985du", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[Language: Typescript]\n\n[code
        paste](https://romellem.github.io/paste/#XQAAAQAqBQAAAAAAAAA9iImGVD/UQZfk+oJTfwg34DhGbCsOjYjOf/opdMjSGhE5gL9FFYaO52q1GoiWygO3zD4thYncbe3vo6Tzb0fpWtmoBaT+oqcTT0ur06NxySsh3NdMxSwrV0LrEL5MiB6hBu75qT0PDaWs52XIdjZB+R5AeD2MYyq1DAafKdMUU8CITVls8OpQSNsdkFJFma3I94gD/gMU+tKJ3EWYksbRQi6HGAy5webDAVld0pHXy0pIwcDpMzR7of2t9P5jbIpAmWH0KCpor2Rz8d52GcoEnPZYTwZHx8zHw91uCtrWSlCoLwvTdCV6cFEQpx227ja6jOXECXt5u4IccCLRNkuaiexdVUIu3DuLX9ByrHI4C4+X815OKDDRJk8Vkskw1VoRvCLTqTIZ2yxmxNBjvq2z0Bo6x66oeyycN1SqoQ4IPP5lTEZTNjWGmxXWzcWl2J2JM1/icr84jCWxn+/tt6jmYkOnyqF9COCJiTkZuCR0mhp8PSiMm8cBi9TeBKBVnB/qwAuk+eZpFpLh8bw5k2vWOByLNWZrEhJZroOVkRDbjOzjzXN1aLjfRPmvGjR5wKaZL/chQXYAx+SqCUagDl6Mi56M+A3RkTRtzpZkWrEqfvw5fUwJ91Q8GnAdy1ZiNgWeGvtsCoR/by/j+eK+p0Beu6BKMn1a1HhoFEIAPakL3aNAlkFtl185wtpiXNVl7YzjWqXd4ZJW16+sXZKQZYRUErXEoVND9/q62cmPCAr9VrvkNNxyLdHoNcbW1T5Ia8wFH7DigiXxy4j0SLF0RZHWYmJt9t+x8pRf5ZqdlgT63dYVlgIAP+5o//jmeME=)\n\n\ud83c\udf84
        A nice fun one to kick things off! I haven''t been able to do anything of
        these right at midnight, but maybe this is the first year I take it easy and
        don''t try to go for the leaderboard (not like I''ve ever made it before).\n\nThis
        is also the first year I''m going to try and write my solutions in _Typescript_!
        I''ve avoided this because of the fuss that goes into actually _running_ typescript,
        but now [bun](https://bun.sh/) makes running these files so easy, I don''t
        really have an excuse anymore.\n\nOtherwise for this puzzle I just\n\n1. Parsed
        the input as an array of `[number, number]` tuples\n2. In part one, created
        two arrays of the `left` and `right` numbers and sorted them.\n3. Zipped them
        back together, then took the absolute value of the difference between them,
        and summed that up\n4. For part two, still create `left` and `right` but don''t
        sort them.\n5. Count the occurrences of each number from `right` into an object.\n6.
        Loop back through `left` to sum up the occurrence count times the value (making
        sure to take care that \"no occurrence\" was counted as `0`).", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m0h11f5",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Typescript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://romellem.github.io/paste/#XQAAAQAqBQAAAAAAAAA9iImGVD/UQZfk+oJTfwg34DhGbCsOjYjOf/opdMjSGhE5gL9FFYaO52q1GoiWygO3zD4thYncbe3vo6Tzb0fpWtmoBaT+oqcTT0ur06NxySsh3NdMxSwrV0LrEL5MiB6hBu75qT0PDaWs52XIdjZB+R5AeD2MYyq1DAafKdMUU8CITVls8OpQSNsdkFJFma3I94gD/gMU+tKJ3EWYksbRQi6HGAy5webDAVld0pHXy0pIwcDpMzR7of2t9P5jbIpAmWH0KCpor2Rz8d52GcoEnPZYTwZHx8zHw91uCtrWSlCoLwvTdCV6cFEQpx227ja6jOXECXt5u4IccCLRNkuaiexdVUIu3DuLX9ByrHI4C4+X815OKDDRJk8Vkskw1VoRvCLTqTIZ2yxmxNBjvq2z0Bo6x66oeyycN1SqoQ4IPP5lTEZTNjWGmxXWzcWl2J2JM1/icr84jCWxn+/tt6jmYkOnyqF9COCJiTkZuCR0mhp8PSiMm8cBi9TeBKBVnB/qwAuk+eZpFpLh8bw5k2vWOByLNWZrEhJZroOVkRDbjOzjzXN1aLjfRPmvGjR5wKaZL/chQXYAx+SqCUagDl6Mi56M+A3RkTRtzpZkWrEqfvw5fUwJ91Q8GnAdy1ZiNgWeGvtsCoR/by/j+eK+p0Beu6BKMn1a1HhoFEIAPakL3aNAlkFtl185wtpiXNVl7YzjWqXd4ZJW16+sXZKQZYRUErXEoVND9/q62cmPCAr9VrvkNNxyLdHoNcbW1T5Ia8wFH7DigiXxy4j0SLF0RZHWYmJt9t+x8pRf5ZqdlgT63dYVlgIAP+5o//jmeME=\"&gt;code
        paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;\ud83c\udf84 A nice fun one to kick
        things off! I haven&amp;#39;t been able to do anything of these right at midnight,
        but maybe this is the first year I take it easy and don&amp;#39;t try to go
        for the leaderboard (not like I&amp;#39;ve ever made it before).&lt;/p&gt;\n\n&lt;p&gt;This
        is also the first year I&amp;#39;m going to try and write my solutions in
        &lt;em&gt;Typescript&lt;/em&gt;! I&amp;#39;ve avoided this because of the
        fuss that goes into actually &lt;em&gt;running&lt;/em&gt; typescript, but
        now &lt;a href=\"https://bun.sh/\"&gt;bun&lt;/a&gt; makes running these files
        so easy, I don&amp;#39;t really have an excuse anymore.&lt;/p&gt;\n\n&lt;p&gt;Otherwise
        for this puzzle I just&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Parsed the input
        as an array of &lt;code&gt;[number, number]&lt;/code&gt; tuples&lt;/li&gt;\n&lt;li&gt;In
        part one, created two arrays of the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt;
        numbers and sorted them.&lt;/li&gt;\n&lt;li&gt;Zipped them back together,
        then took the absolute value of the difference between them, and summed that
        up&lt;/li&gt;\n&lt;li&gt;For part two, still create &lt;code&gt;left&lt;/code&gt;
        and &lt;code&gt;right&lt;/code&gt; but don&amp;#39;t sort them.&lt;/li&gt;\n&lt;li&gt;Count
        the occurrences of each number from &lt;code&gt;right&lt;/code&gt; into an
        object.&lt;/li&gt;\n&lt;li&gt;Loop back through &lt;code&gt;left&lt;/code&gt;
        to sum up the occurrence count times the value (making sure to take care that
        &amp;quot;no occurrence&amp;quot; was counted as &lt;code&gt;0&lt;/code&gt;).&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0h11f5/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733364008.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0g1jll", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "ujocdod", "can_mod_post": false, "created_utc":
        1733351589.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_8krzg5zrf", "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "[Language: Python]\n\n[Solution](https://codeberg.org/ujocdod/AoC2024/src/branch/master/1.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0g1jll", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://codeberg.org/ujocdod/AoC2024/src/branch/master/1.py\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0g1jll/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733351589.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0fl3fu", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "LiveOnTheSun", "can_mod_post": false,
        "created_utc": 1733346645.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 3, "author_fullname": "t2_5y3jg", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[LANGUAGE: J]\n\nTrying
        to (re-)learn J. I''m sure this could be done much more elegantly, but I''m
        still proud I got it working. \n\n    input =: |:&gt;\".each cutLF fread''01.txt''\n\n    NB.
        Part 1\n    +/| (&gt;@{.-&gt;@{:) &lt;\"1 sort\"1 input\n\n    NB. Part 2\n    L
        =: {. input\n    R =: {: input\n    M =: +/@:(R E.~ ])\n    sum =: +/@:((M
        every ]) * ])\n    sum L", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m0fl3fu", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        J]&lt;/p&gt;\n\n&lt;p&gt;Trying to (re-)learn J. I&amp;#39;m sure this could
        be done much more elegantly, but I&amp;#39;m still proud I got it working.
        &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input =: |:&amp;gt;&amp;quot;.each cutLF
        fread&amp;#39;01.txt&amp;#39;\n\nNB. Part 1\n+/| (&amp;gt;@{.-&amp;gt;@{:)
        &amp;lt;&amp;quot;1 sort&amp;quot;1 input\n\nNB. Part 2\nL =: {. input\nR
        =: {: input\nM =: +/@:(R E.~ ])\nsum =: +/@:((M every ]) * ])\nsum L\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0fl3fu/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733346645.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0f39hw", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Tavran", "can_mod_post": false, "created_utc":
        1733341339.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_tpr88d", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: Dyalog APL\\]\n\nFrom the department
        of obscure definitions of ''fun''. This was a new language for me:\n\n    data\u2190\u2193\u2349\u2191{\u234e\u2375}\u00a8\u2283\u2395NGET
        inputfilepath 1\n    +/\u2283|-/{\u2375[\u234b\u2375]}\u00a8data \u235d Solution
        to Part 1\n    (\u2283data) +.\u00d7 +/\u2283\u2218.\u2377/data \u235d Solution
        to Part 2", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m0f39hw", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Dyalog APL]&lt;/p&gt;\n\n&lt;p&gt;From the department of obscure definitions
        of &amp;#39;fun&amp;#39;. This was a new language for me:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data\u2190\u2193\u2349\u2191{\u234e\u2375}\u00a8\u2283\u2395NGET
        inputfilepath 1\n+/\u2283|-/{\u2375[\u234b\u2375]}\u00a8data \u235d Solution
        to Part 1\n(\u2283data) +.\u00d7 +/\u2283\u2218.\u2377/data \u235d Solution
        to Part 2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0f39hw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733341339.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0efxwa", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "chad3814", "can_mod_post": false, "created_utc":
        1733334358.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_dqkig", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: TypeScript\\]\n\nThe first day
        is always easy, right? Part 1 was just constructing arrays, sorting them,
        and then summing the absolute value of their differences. [Day 1 parts 1 &amp;
        2](https://github.com/chad3814/AoC2024/blob/answers/aoc2401.ts).\n\nMake the
        two arrays using a RegEx of course...\n\n    let total = 0;\n    const listA:
        number[] = [];\n    const listB: number[] = [];\n    for (const line of input)
        {\n        const [a, b] = line.split(/\\s+/);\n        listA.push(parseInt(a));\n        listB.push(parseInt(b));\n    }\n\nSort
        them in ascending order:\n\n    listA.sort(\n        (x, y) =&gt; x-y\n    );\n    listB.sort(\n        (x,
        y) =&gt; x - y\n    );\n\nSum the `Math.abs()` of their differences:\n\n    for
        (let i = 0; i &lt; listA.length; i++) {\n        total +=Math.abs(listA[i]
        - listB[i]);\n    }\n\nFor part 2 we needed to count the occurances of a value
        from `listA` in `listB`. Ahhh I love the smell of brute force in the morning!\n\n    for
        (let i = 0; i &lt; listA.length; i++) {\n        const same = listB.filter(\n            b
        =&gt; b===listA[i]\n        );\n        total += listA[i] * same.length;\n    }\n\nCould
        I looped through `listB` and made a `Map()` of the value to the count of that
        value? Yes. Did I? Noooooooo, let''s jsut re-count them every.single.time.
        It works, but only because the lists were not insanely long. No problems today.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0efxwa", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        TypeScript]&lt;/p&gt;\n\n&lt;p&gt;The first day is always easy, right? Part
        1 was just constructing arrays, sorting them, and then summing the absolute
        value of their differences. &lt;a href=\"https://github.com/chad3814/AoC2024/blob/answers/aoc2401.ts\"&gt;Day
        1 parts 1 &amp;amp; 2&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Make the two arrays
        using a RegEx of course...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let total =
        0;\nconst listA: number[] = [];\nconst listB: number[] = [];\nfor (const line
        of input) {\n    const [a, b] = line.split(/\\s+/);\n    listA.push(parseInt(a));\n    listB.push(parseInt(b));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Sort
        them in ascending order:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;listA.sort(\n    (x,
        y) =&amp;gt; x-y\n);\nlistB.sort(\n    (x, y) =&amp;gt; x - y\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Sum
        the &lt;code&gt;Math.abs()&lt;/code&gt; of their differences:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for
        (let i = 0; i &amp;lt; listA.length; i++) {\n    total +=Math.abs(listA[i]
        - listB[i]);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For part 2 we needed
        to count the occurances of a value from &lt;code&gt;listA&lt;/code&gt; in
        &lt;code&gt;listB&lt;/code&gt;. Ahhh I love the smell of brute force in the
        morning!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (let i = 0; i &amp;lt; listA.length;
        i++) {\n    const same = listB.filter(\n        b =&amp;gt; b===listA[i]\n    );\n    total
        += listA[i] * same.length;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Could
        I looped through &lt;code&gt;listB&lt;/code&gt; and made a &lt;code&gt;Map()&lt;/code&gt;
        of the value to the count of that value? Yes. Did I? Noooooooo, let&amp;#39;s
        jsut re-count them every.single.time. It works, but only because the lists
        were not insanely long. No problems today.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0efxwa/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733334358.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "m0vdsyz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "josuf107",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_m0oja4u", "score":
        1, "author_fullname": "t2_5pbkk", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Thanks I forgot about findWithDefault!",
        "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_m0vdsyz", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks
        I forgot about findWithDefault!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0vdsyz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733581226.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733581226.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m0oja4u", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "cptwunderlich", "can_mod_post": false,
        "created_utc": 1733475019.0, "send_replies": true, "parent_id": "t1_m0e9xgm",
        "score": 1, "author_fullname": "t2_d2jrb", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Idk. if you want unsolicited
        feedback, but here it is ^^\n\nPutting all of your stuff into the do-block
        of main, a bite like an imperative program, isn''t really Haskell style. You
        can factor out top level functions, or use let/where bindings to give local
        functions names ([LYAH chapter](https://learnyouahaskell.github.io/syntax-in-functions.html#where)
        ).\n\nUsing `!!` is almost never what you want. You can use pattern matching,
        e.g.:\n`map (\\(x:xs) -&gt; read x) numbers` and `map (\\(_:y:_) -&gt; read
        y) numbers`.\nOr even better, use [transpose](https://hackage.haskell.org/package/base-4.20.0.1/docs/Data-List.html#v:transpose)
        to turn a list of rows into a list of columns.\n\nAlso, Map has a [findWithDefault](https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#v:findWithDefault)
        function, so you don''t need `fromMaybe`.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m0oja4u", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Idk. if you want unsolicited
        feedback, but here it is &lt;sup&gt;^&lt;/sup&gt;&lt;/p&gt;\n\n&lt;p&gt;Putting
        all of your stuff into the do-block of main, a bite like an imperative program,
        isn&amp;#39;t really Haskell style. You can factor out top level functions,
        or use let/where bindings to give local functions names (&lt;a href=\"https://learnyouahaskell.github.io/syntax-in-functions.html#where\"&gt;LYAH
        chapter&lt;/a&gt; ).&lt;/p&gt;\n\n&lt;p&gt;Using &lt;code&gt;!!&lt;/code&gt;
        is almost never what you want. You can use pattern matching, e.g.:\n&lt;code&gt;map
        (\\(x:xs) -&amp;gt; read x) numbers&lt;/code&gt; and &lt;code&gt;map (\\(_:y:_)
        -&amp;gt; read y) numbers&lt;/code&gt;.\nOr even better, use &lt;a href=\"https://hackage.haskell.org/package/base-4.20.0.1/docs/Data-List.html#v:transpose\"&gt;transpose&lt;/a&gt;
        to turn a list of rows into a list of columns.&lt;/p&gt;\n\n&lt;p&gt;Also,
        Map has a &lt;a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#v:findWithDefault\"&gt;findWithDefault&lt;/a&gt;
        function, so you don&amp;#39;t need &lt;code&gt;fromMaybe&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0oja4u/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733475019.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m0e9xgm", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "josuf107", "can_mod_post": false, "created_utc":
        1733332546.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_5pbkk", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: Haskell\\]\n\n    import Data.List
        (sort)\n    import Data.Maybe (fromMaybe)\n    import qualified Data.Map.Strict
        as Map\n \n    main = do\n        numbers &lt;- fmap words . lines &lt;$&gt;
        readFile \"input1.txt\"\n        let list1 = fmap (read . head) numbers\n        let
        list2 = fmap (read . (!!1)) numbers\n        let answer1 = sum $ zipWith (\\a
        b -&gt; abs $ subtract a b) (sort list1) (sort list2)\n        print answer1\n        let
        counts = Map.fromListWith (+) (zip list2 (repeat 1))\n        let answer2
        = sum $ fmap (\\x -&gt; x * (fromMaybe 0 (Map.lookup x counts))) list1\n        print
        answer2", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m0e9xgm", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Haskell]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import Data.List (sort)\nimport
        Data.Maybe (fromMaybe)\nimport qualified Data.Map.Strict as Map\n\nmain =
        do\n    numbers &amp;lt;- fmap words . lines &amp;lt;$&amp;gt; readFile &amp;quot;input1.txt&amp;quot;\n    let
        list1 = fmap (read . head) numbers\n    let list2 = fmap (read . (!!1)) numbers\n    let
        answer1 = sum $ zipWith (\\a b -&amp;gt; abs $ subtract a b) (sort list1)
        (sort list2)\n    print answer1\n    let counts = Map.fromListWith (+) (zip
        list2 (repeat 1))\n    let answer2 = sum $ fmap (\\x -&amp;gt; x * (fromMaybe
        0 (Map.lookup x counts))) list1\n    print answer2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0e9xgm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733332546.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0d2vhy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Sycix", "can_mod_post": false, "created_utc":
        1733317997.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_twgd5ss4", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: C++\\]\n\nI''m doing a challenge
        where I have an RPG system and allocating memory costs energy.  \nYou can
        also rest or use a special item between puzzles but it ages you and your goal
        is to stay as young as possible.\n\n[https://github.com/Sycix-HK/Advent-of-Code-2024-RPG/blob/main/Dungeon/Room1/Room1.cpp](https://github.com/Sycix-HK/Advent-of-Code-2024-RPG/blob/main/Dungeon/Room1/Room1.cpp)",
        "edited": 1733318338.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m0d2vhy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        C++]&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m doing a challenge where I have an RPG
        system and allocating memory costs energy.&lt;br/&gt;\nYou can also rest or
        use a special item between puzzles but it ages you and your goal is to stay
        as young as possible.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Sycix-HK/Advent-of-Code-2024-RPG/blob/main/Dungeon/Room1/Room1.cpp\"&gt;https://github.com/Sycix-HK/Advent-of-Code-2024-RPG/blob/main/Dungeon/Room1/Room1.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0d2vhy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733317997.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0cx819", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "AgMenos47", "can_mod_post": false, "created_utc":
        1733315489.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_8l92emwz", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: x86\\_64 assembly\\]\n\n[github](https://github.com/AgMenos47/aoc2024asm/blob/master/day1.asm)\n\nlate
        and this somehow become complicated lol", "edited": 1733315675.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m0cx819", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: x86_64 assembly]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AgMenos47/aoc2024asm/blob/master/day1.asm\"&gt;github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;late
        and this somehow become complicated lol&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0cx819/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733315489.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0c0fmv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "HAEC_EST_SPARTA", "can_mod_post": false,
        "created_utc": 1733295124.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_eoa9y", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[Language: Ruby]\n\n[Solution
        on sourcehut](https://git.sr.ht/~awsmith/advent-of-code/tree/2024-ruby/item/lib/day01.rb)\n\nUsing
        Ruby for this problem almost felt like cheating: between `Array#transpose`
        and `Enumerable#tally`, I barely had to write any code of my own :)  My Ruby
        is definitely a bit rusty, so this was a nice opportunity to review those
        classes'' interfaces in preparation for future days.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m0c0fmv", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Ruby]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://git.sr.ht/%7Eawsmith/advent-of-code/tree/2024-ruby/item/lib/day01.rb\"&gt;Solution
        on sourcehut&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Using Ruby for this problem almost
        felt like cheating: between &lt;code&gt;Array#transpose&lt;/code&gt; and &lt;code&gt;Enumerable#tally&lt;/code&gt;,
        I barely had to write any code of my own :)  My Ruby is definitely a bit rusty,
        so this was a nice opportunity to review those classes&amp;#39; interfaces
        in preparation for future days.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0c0fmv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733295124.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0byom3", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "yieldtoben", "can_mod_post": false, "created_utc":
        1733294111.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_3ukxaqb7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: PHP\\]\n\nPHP 8.4.1 [paste](https://topaz.github.io/paste/#XQAAAQB4AgAAAAAAAAAeD8qHAhQB8nz+EazN00NCsmTxjvFDXkt5PAJ7pf6ocRA37OMUY7b9R0iDZmfWyvOspxWvdgYSAE0hGjEx81hZm7L1TSf8FOxdriwtMNRvJM+oQrJq9mPWuHtHyk17uHfntnuDpEGWFflZJUn0eqFCiGkRFuwSqUvfR1OWbwrZKQjBCrW4nznvOM+wOoEYYyOhK9evkg5+pilf8ov7d29upPSaduKd6qtrVT9e5HBVzlPNIrs0vT+Jy1cSJ7sVff8xLR9Mr7o2yIR0C698MtHkjpjsC0rj4qZvUJG2zZQ6Hiw0TFmMiIdxwdr/yR1wAQtXA3H1aLafhWW0BmWjeCyBW5z5Rr5PNqG1u/SEdRgHz/TTJFKhW/eaxOHc+qeEz3gT0G1Smwj6ip3jgblcTzf19AehgN05atRx64BkxyWqeyTA47SLrHvpuqen2glkp7TV2+J2MDO4XRABdx1rDHOUEAXl5p+4b1vHCGDTw5sKlV/oOzcZtJ9cg5vb/445M/c7Ccbe6yiQSi+8/6v6nGA=)\n\nExecution
        time: 0.0004 seconds  \nPeak memory: 0.4442 MiB\n\nMacBook Pro (16-inch, 2023)  \nM2
        Pro / 16GB unified memory", "edited": 1733295222.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m0byom3", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: PHP]&lt;/p&gt;\n\n&lt;p&gt;PHP
        8.4.1 &lt;a href=\"https://topaz.github.io/paste/#XQAAAQB4AgAAAAAAAAAeD8qHAhQB8nz+EazN00NCsmTxjvFDXkt5PAJ7pf6ocRA37OMUY7b9R0iDZmfWyvOspxWvdgYSAE0hGjEx81hZm7L1TSf8FOxdriwtMNRvJM+oQrJq9mPWuHtHyk17uHfntnuDpEGWFflZJUn0eqFCiGkRFuwSqUvfR1OWbwrZKQjBCrW4nznvOM+wOoEYYyOhK9evkg5+pilf8ov7d29upPSaduKd6qtrVT9e5HBVzlPNIrs0vT+Jy1cSJ7sVff8xLR9Mr7o2yIR0C698MtHkjpjsC0rj4qZvUJG2zZQ6Hiw0TFmMiIdxwdr/yR1wAQtXA3H1aLafhWW0BmWjeCyBW5z5Rr5PNqG1u/SEdRgHz/TTJFKhW/eaxOHc+qeEz3gT0G1Smwj6ip3jgblcTzf19AehgN05atRx64BkxyWqeyTA47SLrHvpuqen2glkp7TV2+J2MDO4XRABdx1rDHOUEAXl5p+4b1vHCGDTw5sKlV/oOzcZtJ9cg5vb/445M/c7Ccbe6yiQSi+8/6v6nGA=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Execution
        time: 0.0004 seconds&lt;br/&gt;\nPeak memory: 0.4442 MiB&lt;/p&gt;\n\n&lt;p&gt;MacBook
        Pro (16-inch, 2023)&lt;br/&gt;\nM2 Pro / 16GB unified memory&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0byom3/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733294111.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0az2kc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "WilliamAz", "can_mod_post": false, "created_utc":
        1733278627.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_7myrw76u", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: Python\\]\n\n    ''''''DATA
        PROCESSING''''''\n    \n    set1 = []\n    set2 = []\n    \n    with open(''Day
        1/input.txt'', ''r'') as file:\n        for _ in range(1000):\n            data
        = file.readline()\n            set1.append(int(data[0:5]))\n            set2.append(int(data[8:13]))\n    set1
        = sorted(set1)\n    set2 = sorted(set2)\n    \n    ''''''PART ONE''''''\n    \n    set3
        = []\n    \n    for i in range(1000):\n        set3.append(abs(set2[i]-set1[i]))\n    \n    print(sum(set3))\n    \n    \n    ''''''PART
        TWO''''''\n    \n    set3 = []\n    \n    for i in set1:\n        set3.append(len([thing
        for thing, x in enumerate(set2) if x == i])*i)\n    \n    print(sum(set3))",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0az2kc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;#39;&amp;#39;&amp;#39;DATA
        PROCESSING&amp;#39;&amp;#39;&amp;#39;\n\nset1 = []\nset2 = []\n\nwith open(&amp;#39;Day
        1/input.txt&amp;#39;, &amp;#39;r&amp;#39;) as file:\n    for _ in range(1000):\n        data
        = file.readline()\n        set1.append(int(data[0:5]))\n        set2.append(int(data[8:13]))\nset1
        = sorted(set1)\nset2 = sorted(set2)\n\n&amp;#39;&amp;#39;&amp;#39;PART ONE&amp;#39;&amp;#39;&amp;#39;\n\nset3
        = []\n\nfor i in range(1000):\n    set3.append(abs(set2[i]-set1[i]))\n\nprint(sum(set3))\n\n\n&amp;#39;&amp;#39;&amp;#39;PART
        TWO&amp;#39;&amp;#39;&amp;#39;\n\nset3 = []\n\nfor i in set1:\n    set3.append(len([thing
        for thing, x in enumerate(set2) if x == i])*i)\n\nprint(sum(set3))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0az2kc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733278627.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0aegrb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Traditional_Sir6275", "can_mod_post":
        false, "created_utc": 1733271275.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_k6tnwnia4", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[LANGUAGE: Typescript
        ]\n[Day01](https://github.com/yassinedownpourz/advent-of-code/blob/master/aoc_2024/day01/day01.ts)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0aegrb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Typescript ]\n&lt;a href=\"https://github.com/yassinedownpourz/advent-of-code/blob/master/aoc_2024/day01/day01.ts\"&gt;Day01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0aegrb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733271275.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m09jfoi", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "00abjr", "can_mod_post": false, "created_utc":
        1733260968.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_vkr30v9r", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: awk\\]\n\nIs it bad form to
        use temporary files?\n\n    # PART 1\n    awk ''{ print $1 }'' input.txt |
        sort &gt; 1\n    awk ''{ print $2 }'' input.txt | sort &gt; 2\n    paste 1
        2 | awk ''{ a=$1-$2; if(a&lt;0){a*=-1}; sum+=a } END { print sum }''\n    \n    #
        PART 2\n    paste 1 2 | awk ''{ n[i++]=$1; c[$2]++ } END { for(i in n){v=n[i];
        s+=v*c[v] }; print s}''", "edited": 1733262186.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m09jfoi", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: awk]&lt;/p&gt;\n\n&lt;p&gt;Is
        it bad form to use temporary files?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        PART 1\nawk &amp;#39;{ print $1 }&amp;#39; input.txt | sort &amp;gt; 1\nawk
        &amp;#39;{ print $2 }&amp;#39; input.txt | sort &amp;gt; 2\npaste 1 2 | awk
        &amp;#39;{ a=$1-$2; if(a&amp;lt;0){a*=-1}; sum+=a } END { print sum }&amp;#39;\n\n#
        PART 2\npaste 1 2 | awk &amp;#39;{ n[i++]=$1; c[$2]++ } END { for(i in n){v=n[i];
        s+=v*c[v] }; print s}&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m09jfoi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733260968.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m09ileg", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "helenzhang0804", "can_mod_post": false,
        "created_utc": 1733260711.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_4jgn8ywt", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: C++\\]  \n[Part
        1 Solution](https://github.com/helenzhangyc/aoc2024/blob/main/Day%201%20Historian%20Hysteria/d1p1.cpp)\n\n[Part
        2 Solution](https://github.com/helenzhangyc/aoc2024/blob/main/Day%201%20Historian%20Hysteria/d1p2.cpp)\n\nFor
        part 2, use a hashmap to store the frequencies", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m09ileg", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: C++]&lt;br/&gt;\n&lt;a
        href=\"https://github.com/helenzhangyc/aoc2024/blob/main/Day%201%20Historian%20Hysteria/d1p1.cpp\"&gt;Part
        1 Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/helenzhangyc/aoc2024/blob/main/Day%201%20Historian%20Hysteria/d1p2.cpp\"&gt;Part
        2 Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;For part 2, use a hashmap to store
        the frequencies&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m09ileg/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733260711.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m09a9iq", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Federal-Dark-6703", "can_mod_post": false,
        "created_utc": 1733258139.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_cq3qw0mz", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Rust\\]  \n\\[Tutorial:
        [Day 1 blog post](https://www.reddit.com/r/adventofcode/comments/1h5teio/2024_day_1_rust_tutorial_the_rusty_way_to/)\\]\n\n[Github
        link](https://github.com/KyraZzz/AoC24/blob/main/day1/src/main.rs)", "edited":
        1733259392.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_m09a9iq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Rust]&lt;br/&gt;\n[Tutorial: &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/1h5teio/2024_day_1_rust_tutorial_the_rusty_way_to/\"&gt;Day
        1 blog post&lt;/a&gt;]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/KyraZzz/AoC24/blob/main/day1/src/main.rs\"&gt;Github
        link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m09a9iq/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733258139.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "m099p9r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733257964.0, "send_replies": false,
        "parent_id": "t1_m099p8v", "score": 1, "author_fullname": "t2_6l4z3", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m099p9r", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required
        &lt;code&gt;[LANGUAGE: xyz]&lt;/code&gt; string literal at the beginning of
        your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please edit your comment to
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m099p9r/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733257964.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m099p8v", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "_oblivious_djs", "can_mod_post": false,
        "created_utc": 1733257963.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_7cw7s87m", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "`[LANGUAGE: C]`\n\n[solution](https://topaz.github.io/paste/#XQAAAQDeBQAAAAAAAAARmknGRw8TogB3OyPPwW5K8Q8ohQu9da0p1x6tKM8e9Cc6+j/HM3IjZVdj+N+Ljbjt5gcrYx0nMfw+u6mdKEA80i4h2b6IJbnyZItoUuJ2uePaNLWDPb+zHhWQ89nZ99LhWjjtC9olys3ScEH7ycuwECdAWWUr04a/2SDSGD9o5rVlOyyxvM2jLIGyPxLntpqj4AU0e5iHZ/Rg7o2HEMIutnaSpV0UTMK2Ih+1C0z+9FZZF97UaEP0+Ooq1LxAt1jlTTi709jD9fLpNqq9AFy1WVWwuTSSdhG2mebUMHp4fgpFY1jNKABHWhy+avK8kgpM4Mm2xUSg6O2L1GR3WS+wNnL6hVueaQrwHWsDuNIAa400F71isGbiEbj+GEnsYs361TKC5/gw4amOm9kU+pc+/JN57C2XEulTkmDwoJ+PFScrEe0+eht8LA/JhU4P22MBY/PWkB1hfok/aGBVX/FRJNVV00rmQn5bj9+aEuypSvvBAxgjGu0+NRYGpK6FJn3OUbfA4IrrMPmaA4hMZnwnbLyQV42rN1j3fz1Mb7+YDNeenIIli5g7JcZ/2nmcbM3LDNKA9JYkvnFF0WIRfsOIMZzby7vaepkhu4c2t+brUdsl1OqRJniCAC/mmqn2emSV6NtUh0BL84w8QPojKMoGFMP5yAhJHvhwHOv0rfc4xdKP55necYXqr77c+rWEpV+oOMN4RNAU5yilTmRa6L/Rl1LeVs4OQUini7JRH7gdTXf74g3/7ayZkcsRNOG2fkU+lpZcPMH0FJCW6W+o4hl1yWqEkBErMtEsoR/3b+VuPzvAFRhXRpfFYr209Z3b/VvWD18HmOWppx9ufcoYE//N6aZC)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m099p8v", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;[LANGUAGE:
        C]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDeBQAAAAAAAAARmknGRw8TogB3OyPPwW5K8Q8ohQu9da0p1x6tKM8e9Cc6+j/HM3IjZVdj+N+Ljbjt5gcrYx0nMfw+u6mdKEA80i4h2b6IJbnyZItoUuJ2uePaNLWDPb+zHhWQ89nZ99LhWjjtC9olys3ScEH7ycuwECdAWWUr04a/2SDSGD9o5rVlOyyxvM2jLIGyPxLntpqj4AU0e5iHZ/Rg7o2HEMIutnaSpV0UTMK2Ih+1C0z+9FZZF97UaEP0+Ooq1LxAt1jlTTi709jD9fLpNqq9AFy1WVWwuTSSdhG2mebUMHp4fgpFY1jNKABHWhy+avK8kgpM4Mm2xUSg6O2L1GR3WS+wNnL6hVueaQrwHWsDuNIAa400F71isGbiEbj+GEnsYs361TKC5/gw4amOm9kU+pc+/JN57C2XEulTkmDwoJ+PFScrEe0+eht8LA/JhU4P22MBY/PWkB1hfok/aGBVX/FRJNVV00rmQn5bj9+aEuypSvvBAxgjGu0+NRYGpK6FJn3OUbfA4IrrMPmaA4hMZnwnbLyQV42rN1j3fz1Mb7+YDNeenIIli5g7JcZ/2nmcbM3LDNKA9JYkvnFF0WIRfsOIMZzby7vaepkhu4c2t+brUdsl1OqRJniCAC/mmqn2emSV6NtUh0BL84w8QPojKMoGFMP5yAhJHvhwHOv0rfc4xdKP55necYXqr77c+rWEpV+oOMN4RNAU5yilTmRa6L/Rl1LeVs4OQUini7JRH7gdTXf74g3/7ayZkcsRNOG2fkU+lpZcPMH0FJCW6W+o4hl1yWqEkBErMtEsoR/3b+VuPzvAFRhXRpfFYr209Z3b/VvWD18HmOWppx9ufcoYE//N6aZC\"&gt;solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m099p8v/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733257963.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m08p9dg", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "therealsponege", "can_mod_post": false,
        "created_utc": 1733251665.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_1cvgpd17g7", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[Language: Scratch]\n\n[Solution](https://scratch.mit.edu/projects/1105459996/)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m08p9dg", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Scratch]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://scratch.mit.edu/projects/1105459996/\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m08p9dg/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733251665.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m08eme5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "jayo60013", "can_mod_post": false, "created_utc":
        1733248388.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_113gev", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Rust\\]\n\n[Solution](https://github.com/jayo60013/aoc_2024/blob/main/day01/src/main.rs)\n\nCool
        to use zip", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m08eme5", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/jayo60013/aoc_2024/blob/main/day01/src/main.rs\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Cool
        to use zip&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m08eme5/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733248388.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "m082gkw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733244585.0, "send_replies": false,
        "parent_id": "t1_m082gjv", "score": 1, "author_fullname": "t2_6l4z3", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m082gkw", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required
        &lt;code&gt;[LANGUAGE: xyz]&lt;/code&gt; string literal at the beginning of
        your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please edit your comment to
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m082gkw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733244585.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m082gjv", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "dperalta", "can_mod_post": false, "created_utc":
        1733244584.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_546fk", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "`[LANGUAGE: TypeScript]`\n\n[https://git.new/xezHnah](https://git.new/xezHnah)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m082gjv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;[LANGUAGE:
        TypeScript]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://git.new/xezHnah\"&gt;https://git.new/xezHnah&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m082gjv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733244584.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m07lh1k", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "TimeCannotErase", "can_mod_post": false,
        "created_utc": 1733239165.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_6e7db", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[Language: R]\n\n[repo](https://github.com/DavidMcMorris/Advent-of-Code-2024/blob/main/Day%201/Day1.R)\n\nOriginally
        did this in Google Sheets but decided today to go back and do it with R.\n\n    input_filename
        &lt;- \"input.txt\"\n    input &lt;- read.table(input_filename)\n\n    input
        &lt;- apply(input, 2, sort)\n\n    distances &lt;- sum(apply(input, 1, function(x)
        {abs(x[1] - x[2])}))\n\n    left_values &lt;- unique(input[, 1])\n    counts
        &lt;- matrix(nrow = length(left_values), ncol = 2)\n\n    for (i in seq_along(left_values))
        {\n      counts[i, 1] &lt;- sum(input[, 1] == left_values[i])\n      counts[i,
        2] &lt;- sum(input[, 2] == left_values[i])\n    }\n\n    similarity &lt;-
        sum(left_values * counts[, 1] *  counts[, 2])\n\n    print(distances)\n    print(similarity)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m07lh1k", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        R]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/DavidMcMorris/Advent-of-Code-2024/blob/main/Day%201/Day1.R\"&gt;repo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Originally
        did this in Google Sheets but decided today to go back and do it with R.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input_filename
        &amp;lt;- &amp;quot;input.txt&amp;quot;\ninput &amp;lt;- read.table(input_filename)\n\ninput
        &amp;lt;- apply(input, 2, sort)\n\ndistances &amp;lt;- sum(apply(input, 1,
        function(x) {abs(x[1] - x[2])}))\n\nleft_values &amp;lt;- unique(input[, 1])\ncounts
        &amp;lt;- matrix(nrow = length(left_values), ncol = 2)\n\nfor (i in seq_along(left_values))
        {\n  counts[i, 1] &amp;lt;- sum(input[, 1] == left_values[i])\n  counts[i,
        2] &amp;lt;- sum(input[, 2] == left_values[i])\n}\n\nsimilarity &amp;lt;-
        sum(left_values * counts[, 1] *  counts[, 2])\n\nprint(distances)\nprint(similarity)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m07lh1k/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733239165.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m07h4qs", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "sk1talets", "can_mod_post": false, "created_utc":
        1733237684.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_47isrk1b", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: JavaScript\\]\n\nGitHub: [https://github.com/sk1talets/advent-of-code/tree/main/2024/1](https://github.com/sk1talets/advent-of-code/tree/main/2024/1)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m07h4qs", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        JavaScript]&lt;/p&gt;\n\n&lt;p&gt;GitHub: &lt;a href=\"https://github.com/sk1talets/advent-of-code/tree/main/2024/1\"&gt;https://github.com/sk1talets/advent-of-code/tree/main/2024/1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m07h4qs/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733237684.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m07c6sn", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "capito27", "can_mod_post": false, "created_utc":
        1733235911.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_ildgc", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: Rust]\n\nTrying to solve each
        day with as much idiomatic rust data processing pipelines as possible. [Github
        repository](https://github.com/capito27/RustyAdventOfCode2024) containing
        all my solutions.\n\nToday, I''m quite happy with it, as I discovered the
        existance of BinaryHeap in rust\n\n[Part 1](https://topaz.github.io/paste/#XQAAAQAVAwAAAAAAAAA6nMjJFMpQiatRZcHeSa9QCfq2XKCi8ihuIHXVqnTbBm/H53s2ilZwioBo59FCVM2AgXlgRQowhqsgHsapAPZ4IWwxF3F0ATZFYiOa9sJps1KYR6ZYciF6ag3iRYstgg1qzRIf2bBk1Auy2oIznaisEFIeQkayfeiah+skBoxrQaMckQ4wdOZWlnvRD9btQkNWkrj+VP8Zh6ujAnTXh7fXiQeq4bHGfasvh9WzWCCAJwcQFmhJAtYKJgfnc79MvANf7l6D6qEB+RqVGWwFuVrbiy0JAQKaaoqqBg9tzx3YquZC/wtx2LtItaJzwm6oBsPANB7fi5kB+p84I5DFTWz8Ga1rCdSSIKxz5FCKyPzS/ZqmX1a6j58AY5um5rHgfWIf4IfY3o2UCSa7xdPsyCchT8ud535bdmPZSWfC0gUz6JI/lgF1PeaOFxt2Fe9Mk/qUvTq33ie6AFCD9CQ3lpq4/S3motkBBu8bUKjOEukIz/QlTwyKav8Ye9kA):\n\n    use
        std::collections::BinaryHeap;\n    use std::fs::read_to_string;\n    use std::path::Path;\n    \n    pub
        fn solve&lt;P&gt;(input_file: P) -&gt; u32\n    where\n        P: AsRef&lt;Path&gt;,\n    {\n        let
        input = read_to_string(input_file).unwrap();\n    \n        let (left_heap,
        right_heap) = input\n            .lines()\n            .map(|line| line.split_once(\"   \").unwrap())\n            .map(|(l,
        r)| (l.parse::&lt;u32&gt;().unwrap(), r.parse::&lt;u32&gt;().unwrap()))\n            .fold(\n                (BinaryHeap::new(),
        BinaryHeap::new()),\n                |(mut acc_l, mut acc_r), (l, r)| {\n                    acc_l.push(l);\n                    acc_r.push(r);\n                    (acc_l,
        acc_r)\n                },\n            );\n    \n        left_heap\n            .into_sorted_vec()\n            .iter()\n            .zip(right_heap.into_sorted_vec().iter())\n            .map(|(l,
        r)| l.abs_diff(*r))\n            .sum()\n    }\n\n[Part 2](https://topaz.github.io/paste/#XQAAAQDYAgAAAAAAAAA6nMjJFMpQiatRZcHeSa9QCfq2XKCi+rQgSSMMZBjAYcAczSXo8vf6PRraKhBUb+7vke5Neg2u+YRSdiC2wJEsjqZuiierjFS1+sHT0lm5bu2dWBAZvFzbHu3EVV112mzbBfKcjo4bMXypN96auhohqhoA7jPUoxRboE1TauuXLCe5qyONV5lVxaeOpUwp5nu0WjLLZTsqZvLu8mimcBxcOUByz1MHVjZIzvRjC77YTWaO6abBORgiNY39u3xfYt3WTGpo8/LUKIB4I3RDFvcK7Ua+4JdIRl3LO/HeTuHUBVDGENwaTmEsDFI7oz1KcSiQGfIjMd8BMhPA5jRCVAB+Idl6cn/TfAMsSTtin/s5khadiZmIYUjXy4lCMdzTgfFLlo53uuqeTDPZilkunbJFzXbTsO6saQmxCDfDQaXpWgmRf8HBKDwbMtw95bG22woGazkl0Yh9i0sW2HMnusrBVhlXZjYZvXkU+4NiRvWXcPyLMyx1XbbdkoFnvK2XB//piEte):\n\n    use
        std::collections::HashMap;\n    use std::fs::read_to_string;\n    use std::ops::Mul;\n    use
        std::path::Path;\n    \n    pub fn solve&lt;P&gt;(input_file: P) -&gt; u32\n    where\n        P:
        AsRef&lt;Path&gt;,\n    {\n        let input = read_to_string(input_file).unwrap();\n        let
        (left, right) = input\n            .lines()\n            .map(|line| line.split_once(\"   \").unwrap())\n            .map(|(l,
        r)| (l.parse::&lt;u32&gt;().unwrap(), r.parse::&lt;u32&gt;().unwrap()))\n            .fold(\n                (Vec::new(),
        HashMap::new()),\n                |(mut vec, mut hashmap), (l, r)| {\n                    vec.push(l);\n                    hashmap.insert(r,
        hashmap.get(&amp;r).unwrap_or(&amp;0u32) + 1);\n                    (vec,
        hashmap)\n                },\n            );\n        left.iter().map(|l|
        l.mul(right.get(l).unwrap_or(&amp;0))).sum()\n    }", "edited": 1733238236.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m07c6sn",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Trying
        to solve each day with as much idiomatic rust data processing pipelines as
        possible. &lt;a href=\"https://github.com/capito27/RustyAdventOfCode2024\"&gt;Github
        repository&lt;/a&gt; containing all my solutions.&lt;/p&gt;\n\n&lt;p&gt;Today,
        I&amp;#39;m quite happy with it, as I discovered the existance of BinaryHeap
        in rust&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAVAwAAAAAAAAA6nMjJFMpQiatRZcHeSa9QCfq2XKCi8ihuIHXVqnTbBm/H53s2ilZwioBo59FCVM2AgXlgRQowhqsgHsapAPZ4IWwxF3F0ATZFYiOa9sJps1KYR6ZYciF6ag3iRYstgg1qzRIf2bBk1Auy2oIznaisEFIeQkayfeiah+skBoxrQaMckQ4wdOZWlnvRD9btQkNWkrj+VP8Zh6ujAnTXh7fXiQeq4bHGfasvh9WzWCCAJwcQFmhJAtYKJgfnc79MvANf7l6D6qEB+RqVGWwFuVrbiy0JAQKaaoqqBg9tzx3YquZC/wtx2LtItaJzwm6oBsPANB7fi5kB+p84I5DFTWz8Ga1rCdSSIKxz5FCKyPzS/ZqmX1a6j58AY5um5rHgfWIf4IfY3o2UCSa7xdPsyCchT8ud535bdmPZSWfC0gUz6JI/lgF1PeaOFxt2Fe9Mk/qUvTq33ie6AFCD9CQ3lpq4/S3motkBBu8bUKjOEukIz/QlTwyKav8Ye9kA\"&gt;Part
        1&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::collections::BinaryHeap;\nuse
        std::fs::read_to_string;\nuse std::path::Path;\n\npub fn solve&amp;lt;P&amp;gt;(input_file:
        P) -&amp;gt; u32\nwhere\n    P: AsRef&amp;lt;Path&amp;gt;,\n{\n    let input
        = read_to_string(input_file).unwrap();\n\n    let (left_heap, right_heap)
        = input\n        .lines()\n        .map(|line| line.split_once(&amp;quot;   &amp;quot;).unwrap())\n        .map(|(l,
        r)| (l.parse::&amp;lt;u32&amp;gt;().unwrap(), r.parse::&amp;lt;u32&amp;gt;().unwrap()))\n        .fold(\n            (BinaryHeap::new(),
        BinaryHeap::new()),\n            |(mut acc_l, mut acc_r), (l, r)| {\n                acc_l.push(l);\n                acc_r.push(r);\n                (acc_l,
        acc_r)\n            },\n        );\n\n    left_heap\n        .into_sorted_vec()\n        .iter()\n        .zip(right_heap.into_sorted_vec().iter())\n        .map(|(l,
        r)| l.abs_diff(*r))\n        .sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDYAgAAAAAAAAA6nMjJFMpQiatRZcHeSa9QCfq2XKCi+rQgSSMMZBjAYcAczSXo8vf6PRraKhBUb+7vke5Neg2u+YRSdiC2wJEsjqZuiierjFS1+sHT0lm5bu2dWBAZvFzbHu3EVV112mzbBfKcjo4bMXypN96auhohqhoA7jPUoxRboE1TauuXLCe5qyONV5lVxaeOpUwp5nu0WjLLZTsqZvLu8mimcBxcOUByz1MHVjZIzvRjC77YTWaO6abBORgiNY39u3xfYt3WTGpo8/LUKIB4I3RDFvcK7Ua+4JdIRl3LO/HeTuHUBVDGENwaTmEsDFI7oz1KcSiQGfIjMd8BMhPA5jRCVAB+Idl6cn/TfAMsSTtin/s5khadiZmIYUjXy4lCMdzTgfFLlo53uuqeTDPZilkunbJFzXbTsO6saQmxCDfDQaXpWgmRf8HBKDwbMtw95bG22woGazkl0Yh9i0sW2HMnusrBVhlXZjYZvXkU+4NiRvWXcPyLMyx1XbbdkoFnvK2XB//piEte\"&gt;Part
        2&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::collections::HashMap;\nuse
        std::fs::read_to_string;\nuse std::ops::Mul;\nuse std::path::Path;\n\npub
        fn solve&amp;lt;P&amp;gt;(input_file: P) -&amp;gt; u32\nwhere\n    P: AsRef&amp;lt;Path&amp;gt;,\n{\n    let
        input = read_to_string(input_file).unwrap();\n    let (left, right) = input\n        .lines()\n        .map(|line|
        line.split_once(&amp;quot;   &amp;quot;).unwrap())\n        .map(|(l, r)|
        (l.parse::&amp;lt;u32&amp;gt;().unwrap(), r.parse::&amp;lt;u32&amp;gt;().unwrap()))\n        .fold(\n            (Vec::new(),
        HashMap::new()),\n            |(mut vec, mut hashmap), (l, r)| {\n                vec.push(l);\n                hashmap.insert(r,
        hashmap.get(&amp;amp;r).unwrap_or(&amp;amp;0u32) + 1);\n                (vec,
        hashmap)\n            },\n        );\n    left.iter().map(|l| l.mul(right.get(l).unwrap_or(&amp;amp;0))).sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m07c6sn/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733235911.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m077w24", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Porges", "can_mod_post": false, "created_utc":
        1733234290.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_297v6", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: Awk]\n\nDoing each day in a different
        language, Awk is easy enough to start with except that it lacks `abs` built-in.\n\nPart
        1:\n\n    {\n        L[NR] = $1\n        R[NR] = $2\n    }\n\n    function
        abs(x) { return x &lt; 0 ? -x : x }\n\n    END {\n        asort(L)\n        asort(R)\n        for
        (ix in L) {\n            SUM += abs(L[ix] - R[ix])\n        }\n        print
        SUM\n    }\n\n\nPart 2:\n\n    {\n        L[$1] += 1\n        R[$2] += 1\n    }\n\n    END
        {\n        for (n in L) {\n            RESULT += n * L[n] * R[n]\n        }\n\n        print
        RESULT\n    }", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m077w24", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Awk]&lt;/p&gt;\n\n&lt;p&gt;Doing each day in a different language, Awk is
        easy enough to start with except that it lacks &lt;code&gt;abs&lt;/code&gt;
        built-in.&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n    L[NR]
        = $1\n    R[NR] = $2\n}\n\nfunction abs(x) { return x &amp;lt; 0 ? -x : x
        }\n\nEND {\n    asort(L)\n    asort(R)\n    for (ix in L) {\n        SUM +=
        abs(L[ix] - R[ix])\n    }\n    print SUM\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n    L[$1] += 1\n    R[$2] += 1\n}\n\nEND
        {\n    for (n in L) {\n        RESULT += n * L[n] * R[n]\n    }\n\n    print
        RESULT\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m077w24/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733234290.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m06ruwy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "kungkrona100000", "can_mod_post": false,
        "created_utc": 1733227114.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_5rqtt2kn", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Java\\]\n\n    static
        int calculateDiffirence() throws FileNotFoundException {\n        int total
        = 0;\n        int[] firstList = new int[1000];\n        int[] secondList =
        new int[1000];\n        File file = new File(\"adventOfCode2024dec1.txt\");\n        Scanner
        s = new Scanner(file);\n        for (int i = 0; i &lt; 1000; i++){\n            firstList[i]
        = s.nextInt();\n            secondList[i] = s.nextInt();\n        }\n        Arrays.\n    sort\n    (firstList);\n        Arrays.\n    sort\n    (secondList);\n        for
        (int i = 0; i &lt; 1000; i++){\n            if (firstList[i] &gt; secondList[i])
        {\n                total = total + (firstList[i] - secondList[i]);\n            }
        else if (firstList[i] &lt; secondList[i]){\n                total = total
        + (secondList[i] - firstList[i]);\n            }\n        }\n        return
        total;\n    }", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m06ruwy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Java]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;static int calculateDiffirence()
        throws FileNotFoundException {\n    int total = 0;\n    int[] firstList =
        new int[1000];\n    int[] secondList = new int[1000];\n    File file = new
        File(&amp;quot;adventOfCode2024dec1.txt&amp;quot;);\n    Scanner s = new Scanner(file);\n    for
        (int i = 0; i &amp;lt; 1000; i++){\n        firstList[i] = s.nextInt();\n        secondList[i]
        = s.nextInt();\n    }\n    Arrays.\nsort\n(firstList);\n    Arrays.\nsort\n(secondList);\n    for
        (int i = 0; i &amp;lt; 1000; i++){\n        if (firstList[i] &amp;gt; secondList[i])
        {\n            total = total + (firstList[i] - secondList[i]);\n        }
        else if (firstList[i] &amp;lt; secondList[i]){\n            total = total
        + (secondList[i] - firstList[i]);\n        }\n    }\n    return total;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m06ruwy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733227114.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "m06mlel",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733224054.0, "send_replies": false,
        "parent_id": "t1_m06mlec", "score": 1, "author_fullname": "t2_6l4z3", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m06mlel", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required
        &lt;code&gt;[LANGUAGE: xyz]&lt;/code&gt; string literal at the beginning of
        your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please edit your comment to
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m06mlel/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733224054.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m06mlec", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Pitiful-Oven-3570", "can_mod_post": false,
        "created_utc": 1733224054.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_mqdouf2h6", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE: Rust\\]\n\n[github](https://github.com/hasanghorbel/aoc-2024/tree/master/day01)\n\n  \npart1
        : 152.00\u00b5s  \npart2 : 258.50\u00b5s", "edited": 1734184422.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m06mlec", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/hasanghorbel/aoc-2024/tree/master/day01\"&gt;github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;part1
        : 152.00\u00b5s&lt;br/&gt;\npart2 : 258.50\u00b5s&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m06mlec/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733224054.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "m06kkxw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733222787.0, "send_replies": false,
        "parent_id": "t1_m06kixr", "score": 1, "author_fullname": "t2_6l4z3", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "AutoModerator has detected [fenced code block](https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/fenced_code_blocks)
        (&amp;#96;&amp;#96;&amp;#96;) syntax which only works on new.reddit.\n\nPlease
        review our wiki article on [code formatting](https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting)
        then edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks)
        instead.\n\n***\n\n\n*I am a bot, and this action was performed automatically.
        Please [contact the moderators of this subreddit](/message/compose/?to=/r/adventofcode)
        if you have any questions or concerns.*", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m06kkxw", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;AutoModerator has detected
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/fenced_code_blocks\"&gt;fenced
        code block&lt;/a&gt; (&amp;#96;&amp;#96;&amp;#96;) syntax which only works
        on new.reddit.&lt;/p&gt;\n\n&lt;p&gt;Please review our wiki article on &lt;a
        href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting\"&gt;code
        formatting&lt;/a&gt; then edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; instead.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m06kkxw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733222787.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m06kixr", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Pay08", "can_mod_post": false, "created_utc":
        1733222752.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_t7eo5yz", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Common Lisp\\]\n\nHere''s one
        in CL (without external libraries or uiop), since I haven''t seen any yet:  \n[https://gist.github.com/gagero/ab2383f15ef62f59d14533a791671be2](https://gist.github.com/gagero/ab2383f15ef62f59d14533a791671be2)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m06kixr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Common Lisp]&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s one in CL (without external
        libraries or uiop), since I haven&amp;#39;t seen any yet:&lt;br/&gt;\n&lt;a
        href=\"https://gist.github.com/gagero/ab2383f15ef62f59d14533a791671be2\"&gt;https://gist.github.com/gagero/ab2383f15ef62f59d14533a791671be2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m06kixr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733222752.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m06j58i", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "aexl", "can_mod_post": false, "created_utc":
        1733221846.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_6d4oe", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: Julia]\n\nSolution on GitHub:
        https://github.com/goggle/AdventOfCode2024.jl/blob/main/src/day01.jl\n\nRepository:
        https://github.com/goggle/AdventOfCode2024.jl", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m06j58i", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Julia]&lt;/p&gt;\n\n&lt;p&gt;Solution
        on GitHub: &lt;a href=\"https://github.com/goggle/AdventOfCode2024.jl/blob/main/src/day01.jl\"&gt;https://github.com/goggle/AdventOfCode2024.jl/blob/main/src/day01.jl&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Repository:
        &lt;a href=\"https://github.com/goggle/AdventOfCode2024.jl\"&gt;https://github.com/goggle/AdventOfCode2024.jl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m06j58i/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733221846.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m06iy84", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "rooneyyyy", "can_mod_post": false, "created_utc":
        1733221715.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_l3q3e", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Shell utilities\\]\n\n    #
        Part-1\n    paste &lt;(pbpaste | sort) &lt;(pbpaste | sort -k2) | awk ''{print
        $1-$4}'' | tr -d ''-'' | paste -sd + - | bc\n    \n    # Part-2\n    join
        -1 1 -2 2 &lt;(pbpaste | sort -k1 | awk ''{print $1}'') &lt;(pbpaste | sort
        -k2 | awk ''{print $2}'' | uniq -c) | awk ''{print $1\"*\"$2}'' | paste -sd
        + - | bc", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m06iy84", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Shell utilities]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Part-1\npaste &amp;lt;(pbpaste
        | sort) &amp;lt;(pbpaste | sort -k2) | awk &amp;#39;{print $1-$4}&amp;#39;
        | tr -d &amp;#39;-&amp;#39; | paste -sd + - | bc\n\n# Part-2\njoin -1 1 -2
        2 &amp;lt;(pbpaste | sort -k1 | awk &amp;#39;{print $1}&amp;#39;) &amp;lt;(pbpaste
        | sort -k2 | awk &amp;#39;{print $2}&amp;#39; | uniq -c) | awk &amp;#39;{print
        $1&amp;quot;*&amp;quot;$2}&amp;#39; | paste -sd + - | bc\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m06iy84/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733221715.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m06fbo2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "hextree", "can_mod_post": false, "created_utc":
        1733219249.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_6nr81", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Language: Python]\n\nCode: https://gist.github.com/HexTree/f5848c14f03160b9724441a5d6827f9e\n\nVideo:
        https://youtu.be/l13k6i9C03A\n\nFun with Python generators and Counter class.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m06fbo2", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;p&gt;Code: &lt;a href=\"https://gist.github.com/HexTree/f5848c14f03160b9724441a5d6827f9e\"&gt;https://gist.github.com/HexTree/f5848c14f03160b9724441a5d6827f9e&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Video:
        &lt;a href=\"https://youtu.be/l13k6i9C03A\"&gt;https://youtu.be/l13k6i9C03A&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Fun
        with Python generators and Counter class.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m06fbo2/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733219249.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m06c6h8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Anthro_Fascist", "can_mod_post": false,
        "created_utc": 1733217043.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_mlzpq", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[LANGUAGE: Rust]\n\n[Github](https://github.com/bdngo/aoc-2024/blob/main/src/day01.rs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m06c6h8", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/bdngo/aoc-2024/blob/main/src/day01.rs\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m06c6h8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733217043.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m06926g", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "mdwhatcott", "can_mod_post": false, "created_utc":
        1733214891.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_dizdj", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Language: Clojure]\n\n[github](https://github.com/mdw-aoc/advent-of-code/blob/main/clj-bb/2024/01.clj)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m06926g", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Clojure]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/mdw-aoc/advent-of-code/blob/main/clj-bb/2024/01.clj\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m06926g/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733214891.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m065wse", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "AccomplishedFish7206", "can_mod_post":
        false, "created_utc": 1733212758.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 1, "author_fullname": "t2_o2nljqukr", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Ivy\\]\n\nLike
        Go? Intrigued by Array languages? Dislike funni APL symbols? Why not try Ivy?\n\nThe
        downside is you have to parse the input, so it looks like\n\nsample = 1 2
        3 ...\n\nand save it as an ivy program. Let''s assume that and solve the test
        problem. First install Ivy with go and then start ivy from the console with
        the file as an argument:\n\n    go install robpike.io/ivy@latest\n    ivy
        -f inputday1test.ivy\n    row1=(transp sample)[1]\n    row2=(transp sample)[2]
        # transpose the rows\n    sorted1 = row1[up row1]\n    sorted2 = row2[up row2]
        # sort the rows\n    +/ abs sorted1-sorted2 # take difference and sum them
        up, to get the soultion for part 1\n    \n    intersection = ((sorted1 intersect
        sorted2) o.== sorted2) # intersect the sorted rows and #then take the product
        of the comparison with the inner product o.== this gives us a matrix\n    \n    res
        = +/_\n    # save the sum of the rows\n    res * (sorted1 intersect sorted2)\n    #
        multiply with the intersection of the rows to get the similarity\n    +/ res
        * (sorted1 intersect sorted2)\n    # sum them up to get 31\n\n[https://gist.github.com/HVukman/1d895942bf0cc791a8bb2205cb26ef52](https://gist.github.com/HVukman/1d895942bf0cc791a8bb2205cb26ef52)\n\nI
        used this as a reference: [https://www.youtube.com/watch?v=ek1yjc9sSag](https://www.youtube.com/watch?v=ek1yjc9sSag)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m065wse", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Ivy]&lt;/p&gt;\n\n&lt;p&gt;Like Go? Intrigued by Array languages? Dislike
        funni APL symbols? Why not try Ivy?&lt;/p&gt;\n\n&lt;p&gt;The downside is
        you have to parse the input, so it looks like&lt;/p&gt;\n\n&lt;p&gt;sample
        = 1 2 3 ...&lt;/p&gt;\n\n&lt;p&gt;and save it as an ivy program. Let&amp;#39;s
        assume that and solve the test problem. First install Ivy with go and then
        start ivy from the console with the file as an argument:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;go
        install robpike.io/ivy@latest\nivy -f inputday1test.ivy\nrow1=(transp sample)[1]\nrow2=(transp
        sample)[2] # transpose the rows\nsorted1 = row1[up row1]\nsorted2 = row2[up
        row2] # sort the rows\n+/ abs sorted1-sorted2 # take difference and sum them
        up, to get the soultion for part 1\n\nintersection = ((sorted1 intersect sorted2)
        o.== sorted2) # intersect the sorted rows and #then take the product of the
        comparison with the inner product o.== this gives us a matrix\n\nres = +/_\n#
        save the sum of the rows\nres * (sorted1 intersect sorted2)\n# multiply with
        the intersection of the rows to get the similarity\n+/ res * (sorted1 intersect
        sorted2)\n# sum them up to get 31\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gist.github.com/HVukman/1d895942bf0cc791a8bb2205cb26ef52\"&gt;https://gist.github.com/HVukman/1d895942bf0cc791a8bb2205cb26ef52&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        used this as a reference: &lt;a href=\"https://www.youtube.com/watch?v=ek1yjc9sSag\"&gt;https://www.youtube.com/watch?v=ek1yjc9sSag&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m065wse/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733212758.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m061rkm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Kevincav", "can_mod_post": false, "created_utc":
        1733210127.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_bv1fs", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Language: Scala]\n\n    def solution1(list:
        List[String]): Int = {\n      val rows = Parser.parseInts(list)\n      rows.map(_.head).sorted.zip(rows.map(_.last).sorted).map((x,
        y) =&gt; scala.math.abs(x - y)).sum\n    }\n    \n    def solution2(list:
        List[String]): Int = {\n      val rows = Parser.parseInts(list)\n      val
        counts = rows.groupMapReduce(_.last)(_ =&gt; 1)(_ + _)\n      rows.map(x =&gt;
        x.head * counts.getOrElse(x.head, 0)).sum\n    }", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m061rkm", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Scala]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        solution1(list: List[String]): Int = {\n  val rows = Parser.parseInts(list)\n  rows.map(_.head).sorted.zip(rows.map(_.last).sorted).map((x,
        y) =&amp;gt; scala.math.abs(x - y)).sum\n}\n\ndef solution2(list: List[String]):
        Int = {\n  val rows = Parser.parseInts(list)\n  val counts = rows.groupMapReduce(_.last)(_
        =&amp;gt; 1)(_ + _)\n  rows.map(x =&amp;gt; x.head * counts.getOrElse(x.head,
        0)).sum\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m061rkm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733210127.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m05rop3", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "c4td0gm4n", "can_mod_post": false, "created_utc":
        1733204357.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_119ejhlvm2", "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "[LANGUAGE: Typescript]\n\n[gist](https://gist.github.com/danneu/11cd3aaecd84959159cc7330c599472a)\n\nOfc
        part 2 can be done in a single pass with two pointers after sorting.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m05rop3",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Typescript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gist.github.com/danneu/11cd3aaecd84959159cc7330c599472a\"&gt;gist&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Ofc
        part 2 can be done in a single pass with two pointers after sorting.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m05rop3/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733204357.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "m05daj1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "HeadHunter_4621",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_m05d222", "score":
        2, "author_fullname": "t2_17htvneotp", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Sorry about that, it
        should be fixed now", "edited": false, "top_awarded_type": null, "downs":
        0, "author_flair_css_class": null, "name": "t1_m05daj1", "is_submitter": false,
        "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sorry about that, it should
        be fixed now&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m05daj1/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733197645.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1733197645.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m05d222", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1733197550.0, "send_replies": true, "parent_id": "t1_m05ci79",
        "score": 2, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "~~Your GitHub is probably
        set to private because we can''t see it.~~ edit: there we go", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m05d222",
        "is_submitter": true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your GitHub
        is probably set to private because we can&amp;#39;t see it.&lt;/del&gt; edit:
        there we go&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m05d222/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733197550.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m05ci79", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "HeadHunter_4621", "can_mod_post": false,
        "created_utc": 1733197331.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_17htvneotp", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Kotlin\\]\n\nThis
        was very difficult, I finished today because I was so confused at first\n\n    import
        java.io.File  \n    import kotlin.math.abs  \n      \n    val data = File(\"src/input.txt\").readText()  \n      \n    var
        splittingIncriment = 0  \n    var addingIncriment = 0  \n    var pairDifference
        = 0  \n    var totalDifference = 0  \n    var leftList = mutableListOf&lt;Int&gt;()  \n    var
        rightList = mutableListOf&lt;Int&gt;()  \n      \n    var sortedLeftList:List&lt;Int&gt;
        = mutableListOf&lt;Int&gt;()  \n    var sortedRightList:List&lt;Int&gt; =
        mutableListOf&lt;Int&gt;()  \n      \n    var leftNumber = 0  \n    var rightNumber
        = 0  \n    fun main () {  \n      \n      val line: List&lt;String&gt; = data.split(\"\\\\n\")  \n      for
        (elements in line) {  \n        val numbers = line\\[splittingIncriment\\].split(\"   \")  \n      \n        leftNumber
        = numbers\\[0\\].toInt()  \n        rightNumber = numbers\\[1\\].toInt()  \n      \n        leftList.add(leftNumber)  \n        rightList.add(rightNumber)  \n      \n        leftList.sort()  \n        rightList.sort()  \n      \n        splittingIncriment
        += 1  \n      }  \n      \n      for (element in leftList) {  \n        pairDifference
        = abs(leftList\\[addingIncriment\\] - rightList\\[addingIncriment\\])  \n        totalDifference
        += pairDifference  \n        addingIncriment += 1  \n      }  \n    \n    println(leftList)  \n    println(rightList)  \n    println(totalDifference)  \n    }\n\n[GitHub](https://github.com/HeadHunter4621/AoC-2024/blob/day-1/src/main/kotlin/Main.kt)\n\nEdit:
        fixed some indenting", "edited": 1733271269.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m05ci79", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Kotlin]&lt;/p&gt;\n\n&lt;p&gt;This was very difficult, I finished today because
        I was so confused at first&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import java.io.File  \nimport
        kotlin.math.abs  \n\nval data = File(&amp;quot;src/input.txt&amp;quot;).readText()  \n\nvar
        splittingIncriment = 0  \nvar addingIncriment = 0  \nvar pairDifference =
        0  \nvar totalDifference = 0  \nvar leftList = mutableListOf&amp;lt;Int&amp;gt;()  \nvar
        rightList = mutableListOf&amp;lt;Int&amp;gt;()  \n\nvar sortedLeftList:List&amp;lt;Int&amp;gt;
        = mutableListOf&amp;lt;Int&amp;gt;()  \nvar sortedRightList:List&amp;lt;Int&amp;gt;
        = mutableListOf&amp;lt;Int&amp;gt;()  \n\nvar leftNumber = 0  \nvar rightNumber
        = 0  \nfun main () {  \n\n  val line: List&amp;lt;String&amp;gt; = data.split(&amp;quot;\\\\n&amp;quot;)  \n  for
        (elements in line) {  \n    val numbers = line\\[splittingIncriment\\].split(&amp;quot;   &amp;quot;)  \n\n    leftNumber
        = numbers\\[0\\].toInt()  \n    rightNumber = numbers\\[1\\].toInt()  \n\n    leftList.add(leftNumber)  \n    rightList.add(rightNumber)  \n\n    leftList.sort()  \n    rightList.sort()  \n\n    splittingIncriment
        += 1  \n  }  \n\n  for (element in leftList) {  \n    pairDifference = abs(leftList\\[addingIncriment\\]
        - rightList\\[addingIncriment\\])  \n    totalDifference += pairDifference  \n    addingIncriment
        += 1  \n  }  \n\nprintln(leftList)  \nprintln(rightList)  \nprintln(totalDifference)  \n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/HeadHunter4621/AoC-2024/blob/day-1/src/main/kotlin/Main.kt\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        fixed some indenting&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m05ci79/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733197331.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "m074gg6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "B1aZ23",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_m052u8y", "score":
        2, "author_fullname": "t2_1dw21kr0tg", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "done", "edited": false,
        "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "name":
        "t1_m074gg6", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;done&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m074gg6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733232929.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733232929.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m052u8y", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1733193638.0, "send_replies": true, "parent_id": "t1_m051twi",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "~~Your code is not formatted
        at all.  Please edit your comment to use the [four-spaces Markdown syntax](https://old.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks)
        for a code block so your code displays correctly and fully inside a scrollable
        box that preserves whitespace and indentation.~~  edit: \ud83d\udc4d", "edited":
        1733253646.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_m052u8y", "is_submitter": true, "downs": 0, "author_flair_richtext": [],
        "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is not formatted at all.  Please edit your comment to use the &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code displays correctly
        and fully inside a scrollable box that preserves whitespace and indentation.&lt;/del&gt;  edit:
        \ud83d\udc4d&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m052u8y/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733193638.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m051zur", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "B1aZ23", "can_mod_post": false, "created_utc":
        1733193325.0, "send_replies": true, "parent_id": "t1_m051twi", "score": 1,
        "author_fullname": "t2_1dw21kr0tg", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "definately not even
        close to a elegant solution as everytime i access compare numbers the program
        recreates the array from the text and then re-sorts it", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m051zur",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;definately not even
        close to a elegant solution as everytime i access compare numbers the program
        recreates the array from the text and then re-sorts it&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m051zur/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733193325.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m051twi", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "B1aZ23", "can_mod_post": false, "created_utc":
        1733193263.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_1dw21kr0tg", "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "\\[Language: Python\\]\n\nI
        Finished a 1 line solution, assuming the file is \"day1.txt\"\n\n    print(sum([abs(sorted([int(i.split(\"  \")[0])
        for i in open(\"day1.txt\",\"r\").read().split(\"\\n\")])[j] - sorted([int(i.split(\"  \")[1])
        for i in open(\"day1.txt\",\"r\").read().split(\"\\n\")])[j]) for j in range
        (len(open(\"day1.txt\",\"r\").read().split(\"\\n\")))]),sum([[int(i.split(\"  \")[1])
        for i in open(\"day1.txt\",\"r\").read().split(\"\\n\")].count(j)*j for j
        in [int(i.split(\"  \")[0]) for i in open(\"day1.txt\",\"r\").read().split(\"\\n\")]]))",
        "edited": 1733232883.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m051twi", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;p&gt;I Finished a 1 line solution, assuming the file
        is &amp;quot;day1.txt&amp;quot;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(sum([abs(sorted([int(i.split(&amp;quot;  &amp;quot;)[0])
        for i in open(&amp;quot;day1.txt&amp;quot;,&amp;quot;r&amp;quot;).read().split(&amp;quot;\\n&amp;quot;)])[j]
        - sorted([int(i.split(&amp;quot;  &amp;quot;)[1]) for i in open(&amp;quot;day1.txt&amp;quot;,&amp;quot;r&amp;quot;).read().split(&amp;quot;\\n&amp;quot;)])[j])
        for j in range (len(open(&amp;quot;day1.txt&amp;quot;,&amp;quot;r&amp;quot;).read().split(&amp;quot;\\n&amp;quot;)))]),sum([[int(i.split(&amp;quot;  &amp;quot;)[1])
        for i in open(&amp;quot;day1.txt&amp;quot;,&amp;quot;r&amp;quot;).read().split(&amp;quot;\\n&amp;quot;)].count(j)*j
        for j in [int(i.split(&amp;quot;  &amp;quot;)[0]) for i in open(&amp;quot;day1.txt&amp;quot;,&amp;quot;r&amp;quot;).read().split(&amp;quot;\\n&amp;quot;)]]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m051twi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733193263.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "m05b37y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Fear_The_Liquid",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_m052xow", "score":
        2, "author_fullname": "t2_21zv935k", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "This has been purged",
        "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_m05b37y", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        has been purged&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m05b37y/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733196773.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1733196773.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m052xow", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1733193673.0, "send_replies": true, "parent_id": "t1_m04y3hr",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "~~[Do not share your
        puzzle input](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        which also means [do not commit puzzle inputs to your repo](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        without a `.gitignore` or the like.  [Do not share the puzzle text](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts)
        either.~~\n\n~~Please remove (or .gitignore) all puzzle text and puzzle input
        files from your repo and scrub them from your commit history.~~ edit: thank
        you!", "edited": 1733196829.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m052xow", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;&lt;a
        href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;Do
        not share your puzzle input&lt;/a&gt; which also means &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not commit puzzle inputs to your repo&lt;/a&gt; without a &lt;code&gt;.gitignore&lt;/code&gt;
        or the like.  &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts\"&gt;Do
        not share the puzzle text&lt;/a&gt; either.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;Please
        remove (or .gitignore) all puzzle text and puzzle input files from your repo
        and scrub them from your commit history.&lt;/del&gt; edit: thank you!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m052xow/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733193673.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m04y3hr", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Fear_The_Liquid", "can_mod_post": false,
        "created_utc": 1733191889.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_21zv935k", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Rust\\]\n\n  \nUsing
        AOC to learn rust outside of work. Some naiive solutions I came up with first
        time around. Its pretty bad, and could be optimized further, but overall a
        good start, considering I didn''t know a lick of rust before this:  \n[https://github.com/liquidph34r/Advent-Of-Code/blob/main/AdventOfCode/crates/aoc1/src/main.rs](https://github.com/liquidph34r/Advent-Of-Code/blob/main/AdventOfCode/crates/aoc1/src/main.rs)\n\n  \nWould
        love tips and trips", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m04y3hr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;Using AOC to learn rust outside of work. Some
        naiive solutions I came up with first time around. Its pretty bad, and could
        be optimized further, but overall a good start, considering I didn&amp;#39;t
        know a lick of rust before this:&lt;br/&gt;\n&lt;a href=\"https://github.com/liquidph34r/Advent-Of-Code/blob/main/AdventOfCode/crates/aoc1/src/main.rs\"&gt;https://github.com/liquidph34r/Advent-Of-Code/blob/main/AdventOfCode/crates/aoc1/src/main.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Would
        love tips and trips&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m04y3hr/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733191889.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "m054vpg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Munchi1011",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_m053zl4", "score":
        2, "author_fullname": "t2_41gzvf01", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "I 100% agree!! That\u2019s
        why I don\u2019t rely on AI to code for me because it goofs up so easily and
        it\u2019s very obvious when it does. I think I followed the rules since I
        didn\u2019t just use ai to automate the entire thing???? But regardless it
        won\u2019t happen again!\n\nIn the future, I\u2019ll stick closer to asking
        real humans for help rather than AI!\n\nThanks for the kind reply!!!", "edited":
        false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null,
        "name": "t1_m054vpg", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        100% agree!! That\u2019s why I don\u2019t rely on AI to code for me because
        it goofs up so easily and it\u2019s very obvious when it does. I think I followed
        the rules since I didn\u2019t just use ai to automate the entire thing????
        But regardless it won\u2019t happen again!&lt;/p&gt;\n\n&lt;p&gt;In the future,
        I\u2019ll stick closer to asking real humans for help rather than AI!&lt;/p&gt;\n\n&lt;p&gt;Thanks
        for the kind reply!!!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m054vpg/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733194393.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1733194393.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m053zl4", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1733194064.0, "send_replies": true, "parent_id": "t1_m04vlmz",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Welcome to Advent of
        Code!  I hope you have fun and learn lots!\n\nIf you ever get stuck, feel
        free to create your own `Help/Question` post (and make sure to follow [our
        posting rules](https://old.reddit.com/r/adventofcode/wiki/posts)!)\n\n&gt;
        I am aware that it is frowned upon to use AI for this event, and I respect
        that.\n\nEric has specifically requested that folks [do not use AI to get
        on the global leaderboard](https://adventofcode.com/2024/about#faq_ai_leaderboard).  Aside
        from that, AI is a tool just like any other which requires human skill to
        use effectively.  Plus, AI is not foolproof, and you still need to fall back
        on your *own* skills to recognize when AI is goofing up!", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m053zl4",
        "is_submitter": true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Welcome to Advent of
        Code!  I hope you have fun and learn lots!&lt;/p&gt;\n\n&lt;p&gt;If you ever
        get stuck, feel free to create your own &lt;code&gt;Help/Question&lt;/code&gt;
        post (and make sure to follow &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/posts\"&gt;our
        posting rules&lt;/a&gt;!)&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I am aware
        that it is frowned upon to use AI for this event, and I respect that.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Eric
        has specifically requested that folks &lt;a href=\"https://adventofcode.com/2024/about#faq_ai_leaderboard\"&gt;do
        not use AI to get on the global leaderboard&lt;/a&gt;.  Aside from that, AI
        is a tool just like any other which requires human skill to use effectively.  Plus,
        AI is not foolproof, and you still need to fall back on your &lt;em&gt;own&lt;/em&gt;
        skills to recognize when AI is goofing up!&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m053zl4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733194064.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m04vlmz", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Munchi1011", "can_mod_post": false, "created_utc":
        1733190978.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 5,
        "author_fullname": "t2_41gzvf01", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: C++\\]\n\nHi! I''m currently
        a sophomore CS student in college, and this is my first year doing AoC!  \nBefore
        I link my repo, I want to be honest. I wrote the code myself, but I used AI
        to help me debug when I couldn''t find certain problem on my own, or with
        the help of google. I am aware that it is frowned upon to use AI for this
        event, and I respect that. If you want to downvote this comment, I fully understand
        and hold no anger towards those who choose to do so.\n\nAnyways, here is the
        repo so far:\n\n[https://github.com/TimmyMcPickles/AOC/tree/main/Day-1](https://github.com/TimmyMcPickles/AOC/tree/main/Day-1)\n\nMy
        solutions kinda suck. They use two separate vector arrays containing data
        from each column. Part 1 first sorts these lists, and then compares them to
        find the distance between each element.\n\nPart 2 is basically wearing part
        1 like a skin suit, so it is the same as part 1 until we reach line 25. At
        this point, I started a for loop, following the example I linked in the comments
        of the code. thanks to u/ednl for providing a good example of the solution
        btw. Part 2 is also where I used AI for debugging. The example lists sim score
        kept outputting 13 instead of 31 as intended. It turns out I was incrementing
        both lists by i instead of list1\\[i\\] and list2\\[j\\]. And finally I fixed
        my assignment of sim to add the product of  list1\\[i\\] multiplied by its
        duplicate count, which fixed the issue!!!\n\nThis code isn''t the most efficient,
        and is very \"naive\" but it compiles quickly!!\n\nI also saw multiple people
        talking about using hash maps for part 2, but I still haven''t figured out
        how to use them yet. I''m taking DSA next semester, so hopefully I may learn
        more about them there. Until then, I will continue trying to research them
        so I may be able to use them at least once during this Advent!!!\n\nHappy
        coding everyone!!!", "edited": 1733191329.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m04vlmz", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        C++]&lt;/p&gt;\n\n&lt;p&gt;Hi! I&amp;#39;m currently a sophomore CS student
        in college, and this is my first year doing AoC!&lt;br/&gt;\nBefore I link
        my repo, I want to be honest. I wrote the code myself, but I used AI to help
        me debug when I couldn&amp;#39;t find certain problem on my own, or with the
        help of google. I am aware that it is frowned upon to use AI for this event,
        and I respect that. If you want to downvote this comment, I fully understand
        and hold no anger towards those who choose to do so.&lt;/p&gt;\n\n&lt;p&gt;Anyways,
        here is the repo so far:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/TimmyMcPickles/AOC/tree/main/Day-1\"&gt;https://github.com/TimmyMcPickles/AOC/tree/main/Day-1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        solutions kinda suck. They use two separate vector arrays containing data
        from each column. Part 1 first sorts these lists, and then compares them to
        find the distance between each element.&lt;/p&gt;\n\n&lt;p&gt;Part 2 is basically
        wearing part 1 like a skin suit, so it is the same as part 1 until we reach
        line 25. At this point, I started a for loop, following the example I linked
        in the comments of the code. thanks to &lt;a href=\"/u/ednl\"&gt;u/ednl&lt;/a&gt;
        for providing a good example of the solution btw. Part 2 is also where I used
        AI for debugging. The example lists sim score kept outputting 13 instead of
        31 as intended. It turns out I was incrementing both lists by i instead of
        list1[i] and list2[j]. And finally I fixed my assignment of sim to add the
        product of  list1[i] multiplied by its duplicate count, which fixed the issue!!!&lt;/p&gt;\n\n&lt;p&gt;This
        code isn&amp;#39;t the most efficient, and is very &amp;quot;naive&amp;quot;
        but it compiles quickly!!&lt;/p&gt;\n\n&lt;p&gt;I also saw multiple people
        talking about using hash maps for part 2, but I still haven&amp;#39;t figured
        out how to use them yet. I&amp;#39;m taking DSA next semester, so hopefully
        I may learn more about them there. Until then, I will continue trying to research
        them so I may be able to use them at least once during this Advent!!!&lt;/p&gt;\n\n&lt;p&gt;Happy
        coding everyone!!!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m04vlmz/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733190978.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 5}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m04r42d", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Macitron3000", "can_mod_post": false,
        "created_utc": 1733189367.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_ec39f", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Bash\\]
        Part 1 could probably be done with a single awk script rather than awk -&gt;
        sed -&gt; awk, but I don''t know enough about awk to do it. Part 2 feels super
        elegant, though! Also Rust in the same folder if you wanna check that out,
        it''s much more normal.\n\n[https://github.com/Macitron/AoC-2024/blob/main/1/sln.sh](https://github.com/Macitron/AoC-2024/blob/main/day01/sln.sh)\n\n    #!/usr/bin/env
        bash\n    \n    # nth column: cat input | awk ''{print $n}''\n    # sorted
        columns side-by-side: paste &lt;(cat input | awk ''{print $1}'' | sort) &lt;(cat
        input | awk ''{print $2}'' | sort)\n    \n    echo -n \"Distance: \"\n    paste
        &lt;(awk ''{ print $1 }'' input | sort) &lt;(awk ''{ print $2 }'' input |
        sort) \\\n        | awk ''{print ($2 - $1)}''   \\\n        | sed -E ''s/^-//g''          \\\n        |
        awk ''{s+=$1} END {print s}''\n    \n    echo -n \"Similarity Score: \"\n    join
        &lt;(awk ''{print $1}'' input | sort) &lt;(awk ''{print $2}'' input | sort)
        \\\n        | uniq -c   \\\n        | awk ''{s+=($1 * $2)} END {print s}''",
        "edited": 1733207970.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m04r42d", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Bash] Part 1 could probably be done with a single awk script rather than awk
        -&amp;gt; sed -&amp;gt; awk, but I don&amp;#39;t know enough about awk to
        do it. Part 2 feels super elegant, though! Also Rust in the same folder if
        you wanna check that out, it&amp;#39;s much more normal.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Macitron/AoC-2024/blob/main/day01/sln.sh\"&gt;https://github.com/Macitron/AoC-2024/blob/main/1/sln.sh&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env
        bash\n\n# nth column: cat input | awk &amp;#39;{print $n}&amp;#39;\n# sorted
        columns side-by-side: paste &amp;lt;(cat input | awk &amp;#39;{print $1}&amp;#39;
        | sort) &amp;lt;(cat input | awk &amp;#39;{print $2}&amp;#39; | sort)\n\necho
        -n &amp;quot;Distance: &amp;quot;\npaste &amp;lt;(awk &amp;#39;{ print $1
        }&amp;#39; input | sort) &amp;lt;(awk &amp;#39;{ print $2 }&amp;#39; input
        | sort) \\\n    | awk &amp;#39;{print ($2 - $1)}&amp;#39;   \\\n    | sed
        -E &amp;#39;s/^-//g&amp;#39;          \\\n    | awk &amp;#39;{s+=$1} END {print
        s}&amp;#39;\n\necho -n &amp;quot;Similarity Score: &amp;quot;\njoin &amp;lt;(awk
        &amp;#39;{print $1}&amp;#39; input | sort) &amp;lt;(awk &amp;#39;{print $2}&amp;#39;
        input | sort) \\\n    | uniq -c   \\\n    | awk &amp;#39;{s+=($1 * $2)} END
        {print s}&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m04r42d/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733189367.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m04fcdv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": false, "author": "Adereth", "can_mod_post": false, "created_utc":
        1733185124.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_4rie7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Mathematica\\]\n\n    lists
        = Transpose@Partition[FromDigits /@ StringSplit[AdventProblem@1], 2];\n    Total@Abs[Subtract
        @@@ Transpose[Sort /@ lists]] (*Part 1*)\n    Total[Count[lists[[2]], #]*#
        &amp; /@ lists[[1]]] (*Part 2*)", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m04fcdv", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Mathematica]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;lists
        = Transpose@Partition[FromDigits /@ StringSplit[AdventProblem@1], 2];\nTotal@Abs[Subtract
        @@@ Transpose[Sort /@ lists]] (*Part 1*)\nTotal[Count[lists[[2]], #]*# &amp;amp;
        /@ lists[[1]]] (*Part 2*)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m04fcdv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733185124.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m04ag0i", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "finalbroadcast", "can_mod_post": false,
        "created_utc": 1733183368.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 3, "author_fullname": "t2_38q19", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "`[LANGUAGE: Powershell]`The
        last few years I have been trying to do this in Python to get more adept at
        that language. I broke down this year and am doing everything in Powershell
        because I use it every day. Don''t judge me for the language, judge me for
        my poor solutions.\n\n[https://github.com/finalbroadcast/AdventOfCode2024/blob/main/Day1.ps1](https://github.com/finalbroadcast/AdventOfCode2024/blob/main/Day1.ps1)\n\nand\n\n[https://github.com/finalbroadcast/AdventOfCode2024/blob/main/Day1Pt2.ps1](https://github.com/finalbroadcast/AdventOfCode2024/blob/main/Day1Pt2.ps1)",
        "edited": 1733183896.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m04ag0i", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;[LANGUAGE:
        Powershell]&lt;/code&gt;The last few years I have been trying to do this in
        Python to get more adept at that language. I broke down this year and am doing
        everything in Powershell because I use it every day. Don&amp;#39;t judge me
        for the language, judge me for my poor solutions.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/finalbroadcast/AdventOfCode2024/blob/main/Day1.ps1\"&gt;https://github.com/finalbroadcast/AdventOfCode2024/blob/main/Day1.ps1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;and&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/finalbroadcast/AdventOfCode2024/blob/main/Day1Pt2.ps1\"&gt;https://github.com/finalbroadcast/AdventOfCode2024/blob/main/Day1Pt2.ps1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m04ag0i/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733183368.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m043wl5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Popplywop", "can_mod_post": false, "created_utc":
        1733180996.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_170o6l", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Lua\\]\n\n[https://github.com/Popplywop/AdventOfCode2024/blob/main/src/day1.lua](https://github.com/Popplywop/AdventOfCode2024/blob/main/src/day1.lua)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m043wl5", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Lua]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Popplywop/AdventOfCode2024/blob/main/src/day1.lua\"&gt;https://github.com/Popplywop/AdventOfCode2024/blob/main/src/day1.lua&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m043wl5/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733180996.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03yguc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "susonicth", "can_mod_post": false, "created_utc":
        1733179117.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_16h72x", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: zig\\]\n\n[https://github.com/SuSonicTH/aoc2024zig/blob/main/src/2024/day1.zig](https://github.com/SuSonicTH/aoc2024zig/blob/main/src/2024/day1.zig)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m03yguc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        zig]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/SuSonicTH/aoc2024zig/blob/main/src/2024/day1.zig\"&gt;https://github.com/SuSonicTH/aoc2024zig/blob/main/src/2024/day1.zig&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03yguc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733179117.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "m03zfoj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733179443.0, "send_replies": true,
        "parent_id": "t1_m03wvwy", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Please edit your comment to format the language tag correctly as AutoModerator
        has requested.", "edited": 1733194178.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m03zfoj", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please
        edit your comment to format the language tag correctly as AutoModerator has
        requested.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": "moderator", "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03zfoj/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733179443.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "m03wvxx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733178584.0, "send_replies": false,
        "parent_id": "t1_m03wvwy", "score": 1, "author_fullname": "t2_6l4z3", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m03wvxx", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required
        &lt;code&gt;[LANGUAGE: xyz]&lt;/code&gt; string literal at the beginning of
        your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please edit your comment to
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": true, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03wvxx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733178584.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m03wvwy", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "iskypitts", "can_mod_post": false, "created_utc":
        1733178584.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1,
        "author_fullname": "t2_13hx11", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Rust](https://github.com/iskyd/aoc-rs/blob/main/src/bin/01.rs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m03wvwy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/iskyd/aoc-rs/blob/main/src/bin/01.rs\"&gt;Rust&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03wvwy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733178584.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03uueb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "BergSteiger05", "can_mod_post": false,
        "created_utc": 1733177908.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_84kxqfuwb", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE: C++\\]\n\n    #include
        &lt;iostream&gt;\n    #include &lt;string&gt;\n    #include &lt;vector&gt;\n    #include
        &lt;algorithm&gt;\n    #include &lt;fstream&gt;\n    #include &lt;sstream&gt;\n    \n    \n    using
        std::cout;\n    using std::string;\n    using std::cin;\n    using std::vector;\n    \n    \n    void
        readAndSplit(string&amp; filename, vector&lt;int&gt;&amp; a, vector&lt;int&gt;&amp;
        b) {\n    \n    \u00a0 \u00a0 std::ifstream file(filename);\n    \n    \u00a0
        \u00a0 if(!file.is_open()) {\n    \u00a0 \u00a0 \u00a0 \u00a0 std::cerr &lt;&lt;
        \"Konnte nicht ge\u00f6ffnet werden\";\n    \u00a0 \u00a0 \u00a0 \u00a0 return;\n    \u00a0
        \u00a0 }\n    \n    \u00a0 \u00a0 string zeile;\n    \u00a0 \u00a0 while(std::getline(file,
        zeile)) {\n    \u00a0 \u00a0 \u00a0 \u00a0 std::stringstream ss(zeile);\n    \u00a0
        \u00a0 \u00a0 \u00a0 int val_1, val_2;\n    \n    \u00a0 \u00a0 \u00a0 \u00a0
        if(ss &gt;&gt; val_1 &gt;&gt; val_2) {\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 a.push_back(val_1);\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        b.push_back(val_2);\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //std::cout
        &lt;&lt; \"Added to vector1: \" &lt;&lt; val_1 &lt;&lt; \", vector2: \" &lt;&lt;
        val_2 &lt;&lt; std::endl;\n    \u00a0 \u00a0 \u00a0 \u00a0 } else {\n    \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 std::cerr &lt;&lt; \"Fehler\" &lt;&lt;
        std::endl;\n    \u00a0 \u00a0 \u00a0 \u00a0 }\n    \u00a0 \u00a0 }\n    \u00a0
        \u00a0 file.close();\n    }\n    \n    int findDistance(vector&lt;int&gt;
        a, vector&lt;int&gt; b) {\n    \n    std::sort(a.begin(),a.end());\n    std::sort(b.begin(),b.end());\n    \n    long
        long dist = 0;\n    \n    for(int i = 0; i &lt; a.size(); i++) {\n    \u00a0
        \u00a0 dist += abs(a[i] - b[i]);\n    }\n    \n    return dist;\n    }\n    \n    int
        similarityScore(vector&lt;int&gt; a, vector&lt;int&gt; b) {\n    \n    \u00a0
        \u00a0 int sum = 0;\n    \u00a0 \u00a0 int temp = 0;\n    \n    \u00a0 \u00a0
        for(int i = 0; i &lt; a.size(); i++) {\n    \u00a0 \u00a0 \u00a0 \u00a0 int
        check = a[i];\n    \u00a0 \u00a0 \u00a0 \u00a0 for(int j = 0; j &lt; b.size();
        j++) {\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if(check == b[j]) {\n    \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 temp++;\n    \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 }\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        \n    \u00a0 \u00a0 \u00a0 \u00a0 }\n    \u00a0 \u00a0 \u00a0 \u00a0 sum +=
        check * temp; \u00a0\n    \u00a0 \u00a0 \u00a0 \u00a0 temp = 0;\n    \u00a0
        \u00a0 }\n    return sum;\n    }\n    \n    int main() {\n    \n    string
        filename = \"input.txt\";\n    \n    vector&lt;int&gt; list1;\n    vector&lt;int&gt;
        list2;\n    \n    vector&lt;int&gt; list3;\n    vector&lt;int&gt; list4;\n    \n    \n    readAndSplit(filename,
        list1, list2);\n    int test = similarityScore(list1, list2);\n    long long
        erg = findDistance(list1, list2);\n    \n    cout &lt;&lt; \"Task 1: \" &lt;&lt;
        erg &lt;&lt; ''\\n'';\n    cout &lt;&lt; \"Task 2: \" &lt;&lt; test &lt;&lt;
        ''\\n'';\n    }", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m03uueb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C++]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;\n#include
        &amp;lt;string&amp;gt;\n#include &amp;lt;vector&amp;gt;\n#include &amp;lt;algorithm&amp;gt;\n#include
        &amp;lt;fstream&amp;gt;\n#include &amp;lt;sstream&amp;gt;\n\n\nusing std::cout;\nusing
        std::string;\nusing std::cin;\nusing std::vector;\n\n\nvoid readAndSplit(string&amp;amp;
        filename, vector&amp;lt;int&amp;gt;&amp;amp; a, vector&amp;lt;int&amp;gt;&amp;amp;
        b) {\n\n\u00a0 \u00a0 std::ifstream file(filename);\n\n\u00a0 \u00a0 if(!file.is_open())
        {\n\u00a0 \u00a0 \u00a0 \u00a0 std::cerr &amp;lt;&amp;lt; &amp;quot;Konnte
        nicht ge\u00f6ffnet werden&amp;quot;;\n\u00a0 \u00a0 \u00a0 \u00a0 return;\n\u00a0
        \u00a0 }\n\n\u00a0 \u00a0 string zeile;\n\u00a0 \u00a0 while(std::getline(file,
        zeile)) {\n\u00a0 \u00a0 \u00a0 \u00a0 std::stringstream ss(zeile);\n\u00a0
        \u00a0 \u00a0 \u00a0 int val_1, val_2;\n\n\u00a0 \u00a0 \u00a0 \u00a0 if(ss
        &amp;gt;&amp;gt; val_1 &amp;gt;&amp;gt; val_2) {\n\u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 a.push_back(val_1);\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        b.push_back(val_2);\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //std::cout
        &amp;lt;&amp;lt; &amp;quot;Added to vector1: &amp;quot; &amp;lt;&amp;lt; val_1
        &amp;lt;&amp;lt; &amp;quot;, vector2: &amp;quot; &amp;lt;&amp;lt; val_2 &amp;lt;&amp;lt;
        std::endl;\n\u00a0 \u00a0 \u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 std::cerr &amp;lt;&amp;lt; &amp;quot;Fehler&amp;quot; &amp;lt;&amp;lt;
        std::endl;\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 }\n\u00a0 \u00a0
        file.close();\n}\n\nint findDistance(vector&amp;lt;int&amp;gt; a, vector&amp;lt;int&amp;gt;
        b) {\n\nstd::sort(a.begin(),a.end());\nstd::sort(b.begin(),b.end());\n\nlong
        long dist = 0;\n\nfor(int i = 0; i &amp;lt; a.size(); i++) {\n\u00a0 \u00a0
        dist += abs(a[i] - b[i]);\n}\n\nreturn dist;\n}\n\nint similarityScore(vector&amp;lt;int&amp;gt;
        a, vector&amp;lt;int&amp;gt; b) {\n\n\u00a0 \u00a0 int sum = 0;\n\u00a0 \u00a0
        int temp = 0;\n\n\u00a0 \u00a0 for(int i = 0; i &amp;lt; a.size(); i++) {\n\u00a0
        \u00a0 \u00a0 \u00a0 int check = a[i];\n\u00a0 \u00a0 \u00a0 \u00a0 for(int
        j = 0; j &amp;lt; b.size(); j++) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        if(check == b[j]) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        temp++;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 \n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0
        \u00a0 sum += check * temp; \u00a0\n\u00a0 \u00a0 \u00a0 \u00a0 temp = 0;\n\u00a0
        \u00a0 }\nreturn sum;\n}\n\nint main() {\n\nstring filename = &amp;quot;input.txt&amp;quot;;\n\nvector&amp;lt;int&amp;gt;
        list1;\nvector&amp;lt;int&amp;gt; list2;\n\nvector&amp;lt;int&amp;gt; list3;\nvector&amp;lt;int&amp;gt;
        list4;\n\n\nreadAndSplit(filename, list1, list2);\nint test = similarityScore(list1,
        list2);\nlong long erg = findDistance(list1, list2);\n\ncout &amp;lt;&amp;lt;
        &amp;quot;Task 1: &amp;quot; &amp;lt;&amp;lt; erg &amp;lt;&amp;lt; &amp;#39;\\n&amp;#39;;\ncout
        &amp;lt;&amp;lt; &amp;quot;Task 2: &amp;quot; &amp;lt;&amp;lt; test &amp;lt;&amp;lt;
        &amp;#39;\\n&amp;#39;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03uueb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733177908.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03pec3", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "g_equals_pi_squared", "can_mod_post":
        false, "created_utc": 1733176154.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_ius1d7kq", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Go\\]\n\n[https://github.com/gequalspisquared/aoc/blob/main/2024/go/day01/day01.go](https://github.com/gequalspisquared/aoc/blob/main/2024/go/day01/day01.go)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m03pec3", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gequalspisquared/aoc/blob/main/2024/go/day01/day01.go\"&gt;https://github.com/gequalspisquared/aoc/blob/main/2024/go/day01/day01.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03pec3/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733176154.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03m9m1", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "OptimusSupernova", "can_mod_post": false,
        "created_utc": 1733175169.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_nhcdqc", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: C#\\]\n\n[https://github.com/ldorval/AdventOfCode2024/blob/main/Day01/Day01.cs](https://github.com/ldorval/AdventOfCode2024/blob/main/Day01/Day01.cs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m03m9m1", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        C#]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ldorval/AdventOfCode2024/blob/main/Day01/Day01.cs\"&gt;https://github.com/ldorval/AdventOfCode2024/blob/main/Day01/Day01.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03m9m1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733175169.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03m7sy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Loonis", "can_mod_post": false, "created_utc":
        1733175153.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_8vkeb", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: C\\]\n\n[paste](https://topaz.github.io/paste/#XQAAAQBvBQAAAAAAAAARmknGRw8TogB3OyPPwW5K8Q8ohQvj8m6aN9M7UhX9MUhDlfw113/lIaZVnv8vybiD3R8kiviFNeHfNjzXHEu/cHI5AfGApCK7rTx+Pv4feUxO09cuzwAzsnO9WkIkUIpVWlkfcFjbocmkyeR3EZsb7fedQYPIcOr/XGHA8FifbsOoV1V7bzLVE1DOCoiHHuP2H6RUiLpd/xVR0VvqsPMCTtuGqK40dEhmo9WhA2fXBI8qQ4ufXPOvIpiYsRRyHwFTn4P3rXLnPpRErGOOo0jbOM5v90xMZnxxTL0G1dvV9y4Ozdpf4e4uURI5yJKQGltGmgJH7kWApwdpG+QNRQPSKuXDX2EUzXdMqn1qDgwJojYr7Qi8OlK04Tqmzsl+IYQw0LZDM6aGLsEdoz+q/YjvCQiLL/awik/TuqJXOyaYGctffOZyyX3Z5LNXUXW83sRnmURGfVFsDyerBZshMiiL6AlJ1vnc8kOHG/HoE9ZRH0yraVQE8uHCE5nhvBQCEpvH7EYNY1b1KPkz56UKlPPh6SLusf99sO1jLgFGyhJIRtf1ClpFaSVIaZYx3kFPgzbZEvBmyXM/brFLL4orhsdKNu8NU0zFwJFpqrHfleHx8A109yoihR20QWtTz/2g5pgZwZYaaOd4JXEYQbNy4tjl+tkYb3BUuG4pD2kdKZAsOMR79cuifnphbGgbdbHQ/j9PQsd590n/9SgdIA==)\n\nSpent
        way too long fighting with input and off-by-one errors :).\n\nEventually used
        the sorted arrays to avoid needing a hashmap to look things up:\n\n    while
        (l &lt; list_size) {\n        num = left[l++], lcount = 1, rcount = 0;\n        while
        (l &lt; list_size &amp;&amp;  left[l] == num) lcount++, l++;\n        while
        (r &lt; list_size &amp;&amp; right[r]  &lt; num) r++;\n        while (r &lt;
        list_size &amp;&amp; right[r] == num) rcount++, r++;\n        sum2 += num
        * lcount * rcount;\n    }", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m03m7sy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBvBQAAAAAAAAARmknGRw8TogB3OyPPwW5K8Q8ohQvj8m6aN9M7UhX9MUhDlfw113/lIaZVnv8vybiD3R8kiviFNeHfNjzXHEu/cHI5AfGApCK7rTx+Pv4feUxO09cuzwAzsnO9WkIkUIpVWlkfcFjbocmkyeR3EZsb7fedQYPIcOr/XGHA8FifbsOoV1V7bzLVE1DOCoiHHuP2H6RUiLpd/xVR0VvqsPMCTtuGqK40dEhmo9WhA2fXBI8qQ4ufXPOvIpiYsRRyHwFTn4P3rXLnPpRErGOOo0jbOM5v90xMZnxxTL0G1dvV9y4Ozdpf4e4uURI5yJKQGltGmgJH7kWApwdpG+QNRQPSKuXDX2EUzXdMqn1qDgwJojYr7Qi8OlK04Tqmzsl+IYQw0LZDM6aGLsEdoz+q/YjvCQiLL/awik/TuqJXOyaYGctffOZyyX3Z5LNXUXW83sRnmURGfVFsDyerBZshMiiL6AlJ1vnc8kOHG/HoE9ZRH0yraVQE8uHCE5nhvBQCEpvH7EYNY1b1KPkz56UKlPPh6SLusf99sO1jLgFGyhJIRtf1ClpFaSVIaZYx3kFPgzbZEvBmyXM/brFLL4orhsdKNu8NU0zFwJFpqrHfleHx8A109yoihR20QWtTz/2g5pgZwZYaaOd4JXEYQbNy4tjl+tkYb3BUuG4pD2kdKZAsOMR79cuifnphbGgbdbHQ/j9PQsd590n/9SgdIA==\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Spent
        way too long fighting with input and off-by-one errors :).&lt;/p&gt;\n\n&lt;p&gt;Eventually
        used the sorted arrays to avoid needing a hashmap to look things up:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;while
        (l &amp;lt; list_size) {\n    num = left[l++], lcount = 1, rcount = 0;\n    while
        (l &amp;lt; list_size &amp;amp;&amp;amp;  left[l] == num) lcount++, l++;\n    while
        (r &amp;lt; list_size &amp;amp;&amp;amp; right[r]  &amp;lt; num) r++;\n    while
        (r &amp;lt; list_size &amp;amp;&amp;amp; right[r] == num) rcount++, r++;\n    sum2
        += num * lcount * rcount;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03m7sy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733175153.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03kv08", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "phaiax", "can_mod_post": false, "created_utc":
        1733174732.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_my8eh", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Typst\\]\n\n[https://typst.app/project/r3ne4AWbZsyup8PHgDwuVn](https://typst.app/project/r3ne4AWbZsyup8PHgDwuVn)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m03kv08", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Typst]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://typst.app/project/r3ne4AWbZsyup8PHgDwuVn\"&gt;https://typst.app/project/r3ne4AWbZsyup8PHgDwuVn&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03kv08/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733174732.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03gwpv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Saintpagey", "can_mod_post": false, "created_utc":
        1733173487.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_cmzz7km2", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: NodeJs/JavaScript\\]\n\n[https://github.com/ajm-gov/adventofcode/blob/master/2024/day1/index.js](https://github.com/ajm-gov/adventofcode/blob/master/2024/day1/index.js)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m03gwpv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        NodeJs/JavaScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ajm-gov/adventofcode/blob/master/2024/day1/index.js\"&gt;https://github.com/ajm-gov/adventofcode/blob/master/2024/day1/index.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03gwpv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733173487.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03g976", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "GoldPanther", "can_mod_post": false, "created_utc":
        1733173283.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_c6fpc", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Rust\\]\n\nRelatively straightforward
        solution using `map`and `filter`.\n\n[Code](https://github.com/johnhringiv/advent-of-code-2024/blob/main/src/days/day01.rs)",
        "edited": 1733286347.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m03g976", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;Relatively straightforward solution using &lt;code&gt;map&lt;/code&gt;and
        &lt;code&gt;filter&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/johnhringiv/advent-of-code-2024/blob/main/src/days/day01.rs\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03g976/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733173283.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0366za", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "mariushm", "can_mod_post": false, "created_utc":
        1733170108.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_51esq", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: PHP]\n\nhttps://github.com/mariush-github/adventofcode2024/blob/main/01.php\n\nKeeping
        it as basic as possible.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m0366za", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        PHP]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/mariush-github/adventofcode2024/blob/main/01.php\"&gt;https://github.com/mariush-github/adventofcode2024/blob/main/01.php&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Keeping
        it as basic as possible.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0366za/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733170108.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m02n74v", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "ThatsFrankie", "can_mod_post": false,
        "created_utc": 1733164194.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_2b2xg0c1", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Python\\]  \n[https://github.com/francescopeluso/AOC24/blob/main/day1/main.py](https://github.com/francescopeluso/AOC24/blob/main/day1/main.py)\n\ni''m
        just going to solve these problem as fast as i can, lol", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m02n74v",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python]&lt;br/&gt;\n&lt;a
        href=\"https://github.com/francescopeluso/AOC24/blob/main/day1/main.py\"&gt;https://github.com/francescopeluso/AOC24/blob/main/day1/main.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;i&amp;#39;m
        just going to solve these problem as fast as i can, lol&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m02n74v/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733164194.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "m02mob6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": true, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m02mob6/",
        "num_reports": null, "locked": false, "name": "t1_m02mob6", "created": 1733164033.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1733164033.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m02m4ez", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "alpha1729", "can_mod_post": false, "created_utc":
        1733163862.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_dc0okuj", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: c++\\]\n\n\n\n    #include&lt;bits/stdc++.h&gt;\n    using
        namespace std;\n    \n    \n    int main() {\n    \u00a0 \u00a0 #ifndef ONLINE_JUDGE\n    \u00a0
        \u00a0 \u00a0 //for getting input from input.txt\n    \u00a0 \u00a0 \u00a0
        freopen(\"input.txt\",\"r\", stdin);\n    \u00a0 \u00a0 \u00a0 //for writing
        output to output.txt\n    \u00a0 \u00a0 \u00a0 // freopen(\"output.txt\",\"w\",
        stdout);\n    \u00a0 \u00a0 #endif\n    \u00a0 vector&lt;int&gt; a, b;\n    \u00a0
        int t1, t2;\n    \u00a0 while(cin&gt;&gt; t1 &gt;&gt; t2) {\n    \u00a0 \u00a0
        a.push_back(t1);\n    \u00a0 \u00a0 b.push_back(t2);\n    \u00a0 }\n    \u00a0
        sort(a.begin(), a.end());\n    \u00a0 sort(b.begin(), b.end());\n    \u00a0
        long long total = 0;\n    \u00a0 for(int i=0;i&lt;a.size();i++) {\n    \u00a0
        \u00a0 total += abs(a[i] - b[i]);\n    \u00a0 }\n    \u00a0 cout &lt;&lt;
        total &lt;&lt; endl;\n    \u00a0 return 0;\n    }\n    \n    \n    #include&lt;bits/stdc++.h&gt;\n    using
        namespace std;\n    \n    \n    int main() {\n    \u00a0 \u00a0 #ifndef ONLINE_JUDGE\n    \u00a0
        \u00a0 \u00a0 //for getting input from input.txt\n    \u00a0 \u00a0 \u00a0
        freopen(\"input.txt\",\"r\", stdin);\n    \u00a0 \u00a0 \u00a0 //for writing
        output to output.txt\n    \u00a0 \u00a0 \u00a0 // freopen(\"output.txt\",\"w\",
        stdout);\n    \u00a0 \u00a0 #endif\n    \u00a0 vector&lt;int&gt; a, b;\n    \u00a0
        int t1, t2;\n    \u00a0 while(cin&gt;&gt; t1 &gt;&gt; t2) {\n    \u00a0 \u00a0
        a.push_back(t1);\n    \u00a0 \u00a0 b.push_back(t2);\n    \u00a0 }\n    \u00a0
        sort(a.begin(), a.end());\n    \u00a0 sort(b.begin(), b.end());\n    \u00a0
        long long total = 0;\n    \u00a0 for(int i=0;i&lt;a.size();i++) {\n    \u00a0
        \u00a0 int first_occurence = lower_bound(b.begin(), b.end(), a[i]) - b.begin();\n    \u00a0
        \u00a0 int last_occurence = lower_bound(b.begin(), b.end(), a[i]+1) - b.begin();\n    \u00a0
        \u00a0 total += a[i]*1ll* (last_occurence - first_occurence);\n    \u00a0
        \u00a0 // cout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; a[i] &lt;&lt; \" \" &lt;&lt;
        max(last_occurence - first_occurence, 0) &lt;&lt; endl;\n    \u00a0 }\n    \u00a0
        cout &lt;&lt; total &lt;&lt; endl;\n    \u00a0 return 0;\n    }\n\n\\[Language:
        c++\\]", "edited": 1733164190.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m02m4ez", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        c++]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include&amp;lt;bits/stdc++.h&amp;gt;\nusing
        namespace std;\n\n\nint main() {\n\u00a0 \u00a0 #ifndef ONLINE_JUDGE\n\u00a0
        \u00a0 \u00a0 //for getting input from input.txt\n\u00a0 \u00a0 \u00a0 freopen(&amp;quot;input.txt&amp;quot;,&amp;quot;r&amp;quot;,
        stdin);\n\u00a0 \u00a0 \u00a0 //for writing output to output.txt\n\u00a0 \u00a0
        \u00a0 // freopen(&amp;quot;output.txt&amp;quot;,&amp;quot;w&amp;quot;, stdout);\n\u00a0
        \u00a0 #endif\n\u00a0 vector&amp;lt;int&amp;gt; a, b;\n\u00a0 int t1, t2;\n\u00a0
        while(cin&amp;gt;&amp;gt; t1 &amp;gt;&amp;gt; t2) {\n\u00a0 \u00a0 a.push_back(t1);\n\u00a0
        \u00a0 b.push_back(t2);\n\u00a0 }\n\u00a0 sort(a.begin(), a.end());\n\u00a0
        sort(b.begin(), b.end());\n\u00a0 long long total = 0;\n\u00a0 for(int i=0;i&amp;lt;a.size();i++)
        {\n\u00a0 \u00a0 total += abs(a[i] - b[i]);\n\u00a0 }\n\u00a0 cout &amp;lt;&amp;lt;
        total &amp;lt;&amp;lt; endl;\n\u00a0 return 0;\n}\n\n\n#include&amp;lt;bits/stdc++.h&amp;gt;\nusing
        namespace std;\n\n\nint main() {\n\u00a0 \u00a0 #ifndef ONLINE_JUDGE\n\u00a0
        \u00a0 \u00a0 //for getting input from input.txt\n\u00a0 \u00a0 \u00a0 freopen(&amp;quot;input.txt&amp;quot;,&amp;quot;r&amp;quot;,
        stdin);\n\u00a0 \u00a0 \u00a0 //for writing output to output.txt\n\u00a0 \u00a0
        \u00a0 // freopen(&amp;quot;output.txt&amp;quot;,&amp;quot;w&amp;quot;, stdout);\n\u00a0
        \u00a0 #endif\n\u00a0 vector&amp;lt;int&amp;gt; a, b;\n\u00a0 int t1, t2;\n\u00a0
        while(cin&amp;gt;&amp;gt; t1 &amp;gt;&amp;gt; t2) {\n\u00a0 \u00a0 a.push_back(t1);\n\u00a0
        \u00a0 b.push_back(t2);\n\u00a0 }\n\u00a0 sort(a.begin(), a.end());\n\u00a0
        sort(b.begin(), b.end());\n\u00a0 long long total = 0;\n\u00a0 for(int i=0;i&amp;lt;a.size();i++)
        {\n\u00a0 \u00a0 int first_occurence = lower_bound(b.begin(), b.end(), a[i])
        - b.begin();\n\u00a0 \u00a0 int last_occurence = lower_bound(b.begin(), b.end(),
        a[i]+1) - b.begin();\n\u00a0 \u00a0 total += a[i]*1ll* (last_occurence - first_occurence);\n\u00a0
        \u00a0 // cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;quot; &amp;quot; &amp;lt;&amp;lt;
        a[i] &amp;lt;&amp;lt; &amp;quot; &amp;quot; &amp;lt;&amp;lt; max(last_occurence
        - first_occurence, 0) &amp;lt;&amp;lt; endl;\n\u00a0 }\n\u00a0 cout &amp;lt;&amp;lt;
        total &amp;lt;&amp;lt; endl;\n\u00a0 return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;[Language:
        c++]&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m02m4ez/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733163862.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m02fr49", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "lluque8", "can_mod_post": false, "created_utc":
        1733161885.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_13fu8r", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Scala\\]  \n[https://github.com/lupari/aoc2024/blob/main/src/main/scala/assignments/Day01.scala](https://github.com/lupari/aoc2024/blob/main/src/main/scala/assignments/Day01.scala)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m02fr49", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Scala]&lt;br/&gt;\n&lt;a href=\"https://github.com/lupari/aoc2024/blob/main/src/main/scala/assignments/Day01.scala\"&gt;https://github.com/lupari/aoc2024/blob/main/src/main/scala/assignments/Day01.scala&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m02fr49/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733161885.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "m027jgx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": true, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m027jgx/",
        "num_reports": null, "locked": false, "name": "t1_m027jgx", "created": 1733159308.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1733159308.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m027e24", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "pehbehbeh", "can_mod_post": false, "created_utc":
        1733159261.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_awatf", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: Elixir\\]\n\n[https://github.com/pehbehbeh/adventofcode/blob/main/2024/01.livemd](https://github.com/pehbehbeh/adventofcode/blob/main/2024/01.livemd)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m027e24", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Elixir]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/pehbehbeh/adventofcode/blob/main/2024/01.livemd\"&gt;https://github.com/pehbehbeh/adventofcode/blob/main/2024/01.livemd&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m027e24/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733159261.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m02525k", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "tedstery", "can_mod_post": false, "created_utc":
        1733158525.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_7c4yz", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Golang\\] [See solution](https://github.com/rapritchard/adventOfCode2024/blob/main/day1/main.go)\n\nI''m
        a golang noob, so I''m not going for an elegant solution but one that works
        and allows me to explore the language.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m02525k", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Golang] &lt;a href=\"https://github.com/rapritchard/adventOfCode2024/blob/main/day1/main.go\"&gt;See
        solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m a golang noob, so I&amp;#39;m
        not going for an elegant solution but one that works and allows me to explore
        the language.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m02525k/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733158525.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m024g9y", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "stonebr00k", "can_mod_post": false, "created_utc":
        1733158333.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_5zblkw1s", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: T-SQL\\]\n\n[https://github.com/stonebr00k/aoc/blob/main/2024/01.sql](https://github.com/stonebr00k/aoc/blob/main/2024/01.sql)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m024g9y", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        T-SQL]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/stonebr00k/aoc/blob/main/2024/01.sql\"&gt;https://github.com/stonebr00k/aoc/blob/main/2024/01.sql&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m024g9y/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733158333.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0232eb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "siddfinch", "can_mod_post": false, "created_utc":
        1733157896.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_4az8f", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: C\\]\n\nBecause of the past
        few projects I have been working on, I decided to go with a C/yacc solution.
        Why not (and I must remember to use a linked list in C)? [C/Yacc Solution](https://github.com/mek/adventofcode2024/blob/trunk/src/day01.y)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0232eb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        C]&lt;/p&gt;\n\n&lt;p&gt;Because of the past few projects I have been working
        on, I decided to go with a C/yacc solution. Why not (and I must remember to
        use a linked list in C)? &lt;a href=\"https://github.com/mek/adventofcode2024/blob/trunk/src/day01.y\"&gt;C/Yacc
        Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0232eb/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733157896.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m02284o", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Aromatic-Piccolo4321", "can_mod_post":
        false, "created_utc": 1733157630.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_826olxe2", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Rust\\]
        [See solution](https://maebli.github.io/rust/2024/12/01/100rust-81.html)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m02284o", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Rust] &lt;a href=\"https://maebli.github.io/rust/2024/12/01/100rust-81.html\"&gt;See
        solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m02284o/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733157630.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "m03dhco",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733172415.0, "send_replies": true,
        "parent_id": "t1_m01vpq3", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "~~Your code is not formatted at all and as a result is triggering Markdown
        on various symbols which means they''re being visually deleted.~~\n\n~~Please
        edit your comment to use the [four-spaces Markdown syntax](https://old.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks)
        for a code block so your code displays correctly and fully inside a scrollable
        box that preserves whitespace and indentation.~~ edit: \ud83d\udc4d", "edited":
        1733194196.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_m03dhco", "is_submitter": true, "downs": 0, "author_flair_richtext": [],
        "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is not formatted at all and as a result is triggering Markdown on various
        symbols which means they&amp;#39;re being visually deleted.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;Please
        edit your comment to use the &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code displays correctly
        and fully inside a scrollable box that preserves whitespace and indentation.&lt;/del&gt;
        edit: \ud83d\udc4d&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03dhco/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733172415.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m01vpq3", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Ethoxyethaan", "can_mod_post": false,
        "created_utc": 1733155544.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 3, "author_fullname": "t2_54fk0", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[language: Javascript\\]\n\n    (x=$(\"*\").innerText.split(/\\D+/)).pop(),l=(g=e=&gt;x.filter((d,p)=&gt;p%2==e).map(Number).sort())(1),r=g(0),s=0,t=0;l.map((d,p)=&gt;s+=Math.abs(d-r[p])),r.map(p=&gt;t+=l.filter(d=&gt;d==p).length*p),[s,t]\n\n189
        bytes both solutions", "edited": 1733183157.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m01vpq3", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[language:
        Javascript]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(x=$(&amp;quot;*&amp;quot;).innerText.split(/\\D+/)).pop(),l=(g=e=&amp;gt;x.filter((d,p)=&amp;gt;p%2==e).map(Number).sort())(1),r=g(0),s=0,t=0;l.map((d,p)=&amp;gt;s+=Math.abs(d-r[p])),r.map(p=&amp;gt;t+=l.filter(d=&amp;gt;d==p).length*p),[s,t]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;189
        bytes both solutions&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m01vpq3/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733155544.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m01kpum", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "dzaima", "can_mod_post": false, "created_utc":
        1733151830.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_r4fsc", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: BQN]\n[simple, short version](https://github.com/dzaima/aoc/blob/master/2024/BQN/1.bqn):\n\n    #
        assumes a &amp; b are the two columns\n    Count \u21d0 \u2290\u02dc\u2218\u22a3\u228f
        \u2260\u2218\u22a3\u2191 /\u207c\u2218\u2290 # https://mlochbaum.github.io/bqncrate/?q=count%20matches#\n    \u2022Show
        +\u00b4 |-\u00b4 \u2227\u00a8 a\u203fb     # part 1\n    \u2022Show +\u00b4
        a\u00d7 a Count b   # part 2\n\n[fast version](https://github.com/dzaima/aoc/blob/master/2024/BQN/1_fast.bqn):
        25.5\u03bcs for both parts on i3-4160, including input parsing (but not I/O),
        parsing being the majority of the code (though only 4.5\u03bcs)", "edited":
        1733154384.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_m01kpum", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        BQN]\n&lt;a href=\"https://github.com/dzaima/aoc/blob/master/2024/BQN/1.bqn\"&gt;simple,
        short version&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# assumes a &amp;amp;
        b are the two columns\nCount \u21d0 \u2290\u02dc\u2218\u22a3\u228f \u2260\u2218\u22a3\u2191
        /\u207c\u2218\u2290 # https://mlochbaum.github.io/bqncrate/?q=count%20matches#\n\u2022Show
        +\u00b4 |-\u00b4 \u2227\u00a8 a\u203fb     # part 1\n\u2022Show +\u00b4 a\u00d7
        a Count b   # part 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/dzaima/aoc/blob/master/2024/BQN/1_fast.bqn\"&gt;fast
        version&lt;/a&gt;: 25.5\u03bcs for both parts on i3-4160, including input
        parsing (but not I/O), parsing being the majority of the code (though only
        4.5\u03bcs)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m01kpum/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733151830.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m01ko6s", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "crzaynuts", "can_mod_post": false, "created_utc":
        1733151812.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_o93a4", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: Gnu Awk]\nhttps://gist.github.com/netmonk/4f85a8bafd1d0325d0275c4e3475c37b",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m01ko6s", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Gnu Awk]\n&lt;a href=\"https://gist.github.com/netmonk/4f85a8bafd1d0325d0275c4e3475c37b\"&gt;https://gist.github.com/netmonk/4f85a8bafd1d0325d0275c4e3475c37b&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m01ko6s/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733151812.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m01fddn", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "ranainteris", "can_mod_post": false, "created_utc":
        1733149873.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_nbkeha819", "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE: C++\\]\n\n[part1](https://github.com/ranareinsit/advent-of-code/blob/main/2024/src/lib/day_01/src/part_01.cpp)\n\n[part2](https://github.com/ranareinsit/advent-of-code/blob/main/2024/src/lib/day_01/src/part_02.cpp)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m01fddn", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ranareinsit/advent-of-code/blob/main/2024/src/lib/day_01/src/part_01.cpp\"&gt;part1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ranareinsit/advent-of-code/blob/main/2024/src/lib/day_01/src/part_02.cpp\"&gt;part2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m01fddn/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733149873.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m01b77m", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Totherex", "can_mod_post": false, "created_utc":
        1733148263.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_r04h3", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: C#\\]\n\nPart 1 is straightforward.
        For Part 2, use a frequency map.\n\n[https://github.com/rtrinh3/AdventOfCode/blob/fbef43d1f21f47a6e1dd213a86b3969e6b99e186/Aoc2024/Day01.cs](https://github.com/rtrinh3/AdventOfCode/blob/fbef43d1f21f47a6e1dd213a86b3969e6b99e186/Aoc2024/Day01.cs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m01b77m", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C#]&lt;/p&gt;\n\n&lt;p&gt;Part 1 is straightforward. For Part 2, use a frequency
        map.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/rtrinh3/AdventOfCode/blob/fbef43d1f21f47a6e1dd213a86b3969e6b99e186/Aoc2024/Day01.cs\"&gt;https://github.com/rtrinh3/AdventOfCode/blob/fbef43d1f21f47a6e1dd213a86b3969e6b99e186/Aoc2024/Day01.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m01b77m/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733148263.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m01a4xl", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "ToThePetercopter", "can_mod_post": false,
        "created_utc": 1733147839.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_2bs32ag1", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[LANGUAGE: Rust\\]\n\n[https://github.com/domw95/aoc2024/blob/master/src/day1.rs](https://github.com/domw95/aoc2024/blob/master/src/day1.rs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m01a4xl", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/domw95/aoc2024/blob/master/src/day1.rs\"&gt;https://github.com/domw95/aoc2024/blob/master/src/day1.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m01a4xl/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733147839.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0150mr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": false, "author": "__Abigail__", "can_mod_post": false,
        "created_utc": 1733145722.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 6, "author_fullname": "t2_13exmr", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[LANGUAGE: Perl]\n\n    my
        @input  = map {[split]} &lt;&gt;;\n    my @first  = sort {$a &lt;=&gt; $b}
        map {$$_ [0]} @input;\n    my @second = sort {$a &lt;=&gt; $b} map {$$_ [1]}
        @input;\n    my %count;\n       $count {$_} ++ for @second;\n\n    foreach
        my $i (keys @first) {\n        $solution_1 += abs ($first [$i] - $second [$i]);\n        $solution_2
        +=      $first [$i] * ($count {$first [$i]} || 0);\n    }", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m0150mr",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Perl]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;my
        @input  = map {[split]} &amp;lt;&amp;gt;;\nmy @first  = sort {$a &amp;lt;=&amp;gt;
        $b} map {$$_ [0]} @input;\nmy @second = sort {$a &amp;lt;=&amp;gt; $b} map
        {$$_ [1]} @input;\nmy %count;\n   $count {$_} ++ for @second;\n\nforeach my
        $i (keys @first) {\n    $solution_1 += abs ($first [$i] - $second [$i]);\n    $solution_2
        +=      $first [$i] * ($count {$first [$i]} || 0);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0150mr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733145722.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 6}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0121wa", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "4nnn4ru", "can_mod_post": false, "created_utc":
        1733144411.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_cgl3znpx", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: Java\\]\n\nmy humble contribution:  \n[https://github.com/4n4ru/advent\\_of\\_code/blob/main/src/main/java/dev/runje/ana/year2024/day01/Day01.java](https://github.com/4n4ru/advent_of_code/blob/main/src/main/java/dev/runje/ana/year2024/day01/Day01.java)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m0121wa", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Java]&lt;/p&gt;\n\n&lt;p&gt;my humble contribution:&lt;br/&gt;\n&lt;a href=\"https://github.com/4n4ru/advent_of_code/blob/main/src/main/java/dev/runje/ana/year2024/day01/Day01.java\"&gt;https://github.com/4n4ru/advent_of_code/blob/main/src/main/java/dev/runje/ana/year2024/day01/Day01.java&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0121wa/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733144411.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m010qps", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Exact-Climate-9519", "can_mod_post": false,
        "created_utc": 1733143806.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_1e6l2adt23", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[LANGUAGE: python]\n\nDay
        1, parts 1 and 2:\n\n    import numpy as np\n\n    data = np.loadtxt(''/Users/d/Desktop/input'',
        dtype=int)\n    column1 = data[:, 0].tolist()\n    column2 = data[:, 1].tolist()\n\n    print(\"Day
        1, Part 1 \", np.sum(np.abs(np.array(sorted(column1)) - np.array(sorted(column2)))))\n    print(\"Day
        1, Part 2 \", sum([column1.count(key) * column2.count(key) * key for key in
        set(column1)]))", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m010qps", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        python]&lt;/p&gt;\n\n&lt;p&gt;Day 1, parts 1 and 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        numpy as np\n\ndata = np.loadtxt(&amp;#39;/Users/d/Desktop/input&amp;#39;,
        dtype=int)\ncolumn1 = data[:, 0].tolist()\ncolumn2 = data[:, 1].tolist()\n\nprint(&amp;quot;Day
        1, Part 1 &amp;quot;, np.sum(np.abs(np.array(sorted(column1)) - np.array(sorted(column2)))))\nprint(&amp;quot;Day
        1, Part 2 &amp;quot;, sum([column1.count(key) * column2.count(key) * key for
        key in set(column1)]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m010qps/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733143806.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03o2jr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1733175738.0, "send_replies": true, "parent_id": "t1_m00qe6w",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "[Do not share your puzzle
        input](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs) which
        also means [do not commit puzzle inputs to your repo](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        without a `.gitignore` or the like.  [Do not share the puzzle text](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts)
        either.\n\nPlease remove (or .gitignore) all puzzle text and puzzle input
        files from your repo and scrub them from your commit history.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m03o2jr",
        "is_submitter": true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;Do
        not share your puzzle input&lt;/a&gt; which also means &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not commit puzzle inputs to your repo&lt;/a&gt; without a &lt;code&gt;.gitignore&lt;/code&gt;
        or the like.  &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts\"&gt;Do
        not share the puzzle text&lt;/a&gt; either.&lt;/p&gt;\n\n&lt;p&gt;Please remove
        (or .gitignore) all puzzle text and puzzle input files from your repo and
        scrub them from your commit history.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03o2jr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733175738.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m00qe6w", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_1h3vp6n", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "[LANGUAGE:
        R]\n\n    data1 &lt;- read.table(\"/cloud/project/data1.csv\", quote=\"\\\"\",
        comment.char=\"\")\n    \n    data1$dist &lt;- abs(data1$V1 - data1$V2)\n    \n    sorted_V1
        &lt;- sort(data1$V1)\n    \n    sorted_V2 &lt;- sort(data1$V2)\n    \n    distSort
        &lt;- abs(sorted_V1 - sorted_V2)\n    \n    pairs_and_distances &lt;- data.frame(Pair
        = 1:length(distSort), V1 = sorted_V1, V2 = sorted_V2, Distance = distSort)\n    \n    total_distance
        &lt;- sum(distSort)\n\nEasily replicable and you\u00b4ll only need an updated
        textfile for any input variable.", "edited": 1733221341.0, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        R]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data1 &amp;lt;- read.table(&amp;quot;/cloud/project/data1.csv&amp;quot;,
        quote=&amp;quot;\\&amp;quot;&amp;quot;, comment.char=&amp;quot;&amp;quot;)\n\ndata1$dist
        &amp;lt;- abs(data1$V1 - data1$V2)\n\nsorted_V1 &amp;lt;- sort(data1$V1)\n\nsorted_V2
        &amp;lt;- sort(data1$V2)\n\ndistSort &amp;lt;- abs(sorted_V1 - sorted_V2)\n\npairs_and_distances
        &amp;lt;- data.frame(Pair = 1:length(distSort), V1 = sorted_V1, V2 = sorted_V2,
        Distance = distSort)\n\ntotal_distance &amp;lt;- sum(distSort)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Easily
        replicable and you\u00b4ll only need an updated textfile for any input variable.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m00qe6w/",
        "num_reports": null, "locked": false, "name": "t1_m00qe6w", "created": 1733138268.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1733138268.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03nulq", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_m03ni62", "score": 1, "author_fullname":
        "t2_60niu", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "I screwed up and copypasta''d
        at the wrong person (was supposed to be for the poster above you).  Apologies,
        sorry!  Copypasta retracted.", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_m03nulq", "is_submitter": true,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I screwed up and copypasta&amp;#39;d at
        the wrong person (was supposed to be for the poster above you).  Apologies,
        sorry!  Copypasta retracted.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03nulq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733175670.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733175670.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m03ni62", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "clarissa_au", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_m03dpo9", "score": 2, "author_fullname": "t2_4rbbxw99",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Sorry, can you point out the offending files? I\u2019m pretty
        sure I cut all puzzle input. Is it due to the varname on day 2?", "edited":
        false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null,
        "name": "t1_m03ni62", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sorry,
        can you point out the offending files? I\u2019m pretty sure I cut all puzzle
        input. Is it due to the varname on day 2?&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03ni62/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733175560.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733175560.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m03dpo9", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1733172487.0, "send_replies": true, "parent_id": "t1_m00n8pi",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "~~[Do not share your
        puzzle input](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        which also means [do not commit puzzle inputs to your repo](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        without a `.gitignore` or the like.  [Do not share the puzzle text](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts)
        either.~~\n\n~~Please remove (or .gitignore) all puzzle text and puzzle input
        files from your repo and scrub them from your commit history.~~ edit: wrong
        person, sorry!!!", "edited": 1733175696.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m03dpo9", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;&lt;a
        href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;Do
        not share your puzzle input&lt;/a&gt; which also means &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not commit puzzle inputs to your repo&lt;/a&gt; without a &lt;code&gt;.gitignore&lt;/code&gt;
        or the like.  &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts\"&gt;Do
        not share the puzzle text&lt;/a&gt; either.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;Please
        remove (or .gitignore) all puzzle text and puzzle input files from your repo
        and scrub them from your commit history.&lt;/del&gt; edit: wrong person, sorry!!!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03dpo9/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733172487.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m02biqk", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "ShrimpHeavenNow", "can_mod_post": false,
        "created_utc": 1733160567.0, "send_replies": true, "parent_id": "t1_m00n8pi",
        "score": 1, "author_fullname": "t2_amopd2q", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Haha, wow you did EXACTLY
        what I did, that''s wild!\n\nI did realize after I submitted that instead
        of making a dictionary, you can just use .count().\n\n    total =0\n    for
        x in a:\n        total += x * b.count(x)\n    print(\"Similarity Total: \",
        total)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m02biqk", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haha,
        wow you did EXACTLY what I did, that&amp;#39;s wild!&lt;/p&gt;\n\n&lt;p&gt;I
        did realize after I submitted that instead of making a dictionary, you can
        just use .count().&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;total =0\nfor x in
        a:\n    total += x * b.count(x)\nprint(&amp;quot;Similarity Total: &amp;quot;,
        total)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m02biqk/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733160567.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "m00n8pi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "clarissa_au",
        "can_mod_post": false, "created_utc": 1733136270.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_4rbbxw99", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "`[LANGUAGE:
        Python]`\n\n[`https://github.com/clarissa-au/programmatica/blob/main/advent_of_code/2024/day1.py`](https://github.com/clarissa-au/programmatica/blob/main/advent_of_code/2024/day1.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m00n8pi", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;[LANGUAGE:
        Python]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/clarissa-au/programmatica/blob/main/advent_of_code/2024/day1.py\"&gt;&lt;code&gt;https://github.com/clarissa-au/programmatica/blob/main/advent_of_code/2024/day1.py&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m00n8pi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733136270.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m00l442", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Suitable_Let2488", "can_mod_post": false,
        "created_utc": 1733134859.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 3, "author_fullname": "t2_a2ncw9rh", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "`[LANGUAGE: Python]`  \nAny
        feedback on this approach would be greatly appreciated:\n\n    import pandas
        as pd\n    df = pd.read_csv(\"./data/day1.csv\", sep=\"   \", header=None,
        engine=\"python\")\n    df[\"diff\"] = df[1].sort_values(ignore_index=True)
        - df[0].sort_values(ignore_index=True)\n    print(f\"Part 1: {df[''diff''].abs().sum()}\")\n    df[\"count\"]
        = df[1].map(df[0].value_counts()).fillna(0)\n    df[\"sim\"] = df[1] * df[\"count\"]\n    print(f\"Part
        2: {df[''sim''].sum().astype(int)}\")", "edited": 1733136339.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_m00l442", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;[LANGUAGE: Python]&lt;/code&gt;&lt;br/&gt;\nAny
        feedback on this approach would be greatly appreciated:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        pandas as pd\ndf = pd.read_csv(&amp;quot;./data/day1.csv&amp;quot;, sep=&amp;quot;   &amp;quot;,
        header=None, engine=&amp;quot;python&amp;quot;)\ndf[&amp;quot;diff&amp;quot;]
        = df[1].sort_values(ignore_index=True) - df[0].sort_values(ignore_index=True)\nprint(f&amp;quot;Part
        1: {df[&amp;#39;diff&amp;#39;].abs().sum()}&amp;quot;)\ndf[&amp;quot;count&amp;quot;]
        = df[1].map(df[0].value_counts()).fillna(0)\ndf[&amp;quot;sim&amp;quot;] =
        df[1] * df[&amp;quot;count&amp;quot;]\nprint(f&amp;quot;Part 2: {df[&amp;#39;sim&amp;#39;].sum().astype(int)}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m00l442/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733134859.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m03dtj9", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1733172520.0, "send_replies": true, "parent_id": "t1_m00irpp",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "[Do not share your puzzle
        input](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs) which
        also means [do not commit puzzle inputs to your repo](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        without a `.gitignore` or the like.  [Do not share the puzzle text](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts)
        either.\n\nPlease remove (or .gitignore) all puzzle text and puzzle input
        files from your repo and scrub them from your commit history.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m03dtj9",
        "is_submitter": true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;Do
        not share your puzzle input&lt;/a&gt; which also means &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not commit puzzle inputs to your repo&lt;/a&gt; without a &lt;code&gt;.gitignore&lt;/code&gt;
        or the like.  &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts\"&gt;Do
        not share the puzzle text&lt;/a&gt; either.&lt;/p&gt;\n\n&lt;p&gt;Please remove
        (or .gitignore) all puzzle text and puzzle input files from your repo and
        scrub them from your commit history.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m03dtj9/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733172520.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m00irpp", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 1, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m00irpp/",
        "num_reports": null, "locked": false, "name": "t1_m00irpp", "created": 1733133274.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1733133274.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m00hspc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "BlackCat280", "can_mod_post": false, "created_utc":
        1733132612.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_x78u1ss", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: DataWeave\\]\n\n[https://github.com/EduardaSRBastos/advent-of-code-2024/tree/main/day1](https://github.com/EduardaSRBastos/advent-of-code-2024/tree/main/day1)\n\nPart
        1:\n\n    %dw 2.0\n    input payload application/csv separator=\" \", header=false\n    output
        application/json\n    \n    var leftOrdered = payload.column_0 orderBy ((item)
        -&gt; item)\n    var rightOrdered = payload.column_3 orderBy ((item) -&gt;
        item)\n    var distances = leftOrdered map ((item, index) -&gt; \n                            abs(item
        - rightOrdered[index]))\n    ---\n    \"Total Distance: \": sum(distances
        default [])%dw 2.0\n    input payload application/csv separator=\" \", header=false\n    output
        application/json\n    \n    var leftOrdered = payload.column_0 orderBy ((item)
        -&gt; item)\n    var rightOrdered = payload.column_3 orderBy ((item) -&gt;
        item)\n    var distances = leftOrdered map ((item, index) -&gt; \n                            abs(item
        - rightOrdered[index]))\n    ---\n    \"Total Distance\": sum(distances default
        [])\n\nPart 2:\n\n    %dw 2.0\n    input payload application/csv separator=\"
        \", header=false\n    import * from dw::core::Arrays\n    output application/json\n    \n    var
        left = payload.column_0\n    var right = payload.column_3\n    \n    var similarity
        = left map ((item) -&gt; \n                        (right countBy ($ ~= item)
        default 0) * item)\n    ---\n    \"Similarity Score\": sum(similarity default
        [])%dw 2.0\n    input payload application/csv separator=\" \", header=false\n    import
        * from dw::core::Arrays\n    output application/json\n    \n    var left =
        payload.column_0\n    var right = payload.column_3\n    \n    var similarity
        = left map ((item) -&gt; \n                        (right countBy ($ ~= item)
        default 0) * item)\n    ---\n    \"Similarity Score\": sum(similarity default
        [])", "edited": 1733132897.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m00hspc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        DataWeave]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/EduardaSRBastos/advent-of-code-2024/tree/main/day1\"&gt;https://github.com/EduardaSRBastos/advent-of-code-2024/tree/main/day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;%dw 2.0\ninput payload application/csv
        separator=&amp;quot; &amp;quot;, header=false\noutput application/json\n\nvar
        leftOrdered = payload.column_0 orderBy ((item) -&amp;gt; item)\nvar rightOrdered
        = payload.column_3 orderBy ((item) -&amp;gt; item)\nvar distances = leftOrdered
        map ((item, index) -&amp;gt; \n                        abs(item - rightOrdered[index]))\n---\n&amp;quot;Total
        Distance: &amp;quot;: sum(distances default [])%dw 2.0\ninput payload application/csv
        separator=&amp;quot; &amp;quot;, header=false\noutput application/json\n\nvar
        leftOrdered = payload.column_0 orderBy ((item) -&amp;gt; item)\nvar rightOrdered
        = payload.column_3 orderBy ((item) -&amp;gt; item)\nvar distances = leftOrdered
        map ((item, index) -&amp;gt; \n                        abs(item - rightOrdered[index]))\n---\n&amp;quot;Total
        Distance&amp;quot;: sum(distances default [])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;%dw 2.0\ninput payload application/csv
        separator=&amp;quot; &amp;quot;, header=false\nimport * from dw::core::Arrays\noutput
        application/json\n\nvar left = payload.column_0\nvar right = payload.column_3\n\nvar
        similarity = left map ((item) -&amp;gt; \n                    (right countBy
        ($ ~= item) default 0) * item)\n---\n&amp;quot;Similarity Score&amp;quot;:
        sum(similarity default [])%dw 2.0\ninput payload application/csv separator=&amp;quot;
        &amp;quot;, header=false\nimport * from dw::core::Arrays\noutput application/json\n\nvar
        left = payload.column_0\nvar right = payload.column_3\n\nvar similarity =
        left map ((item) -&amp;gt; \n                    (right countBy ($ ~= item)
        default 0) * item)\n---\n&amp;quot;Similarity Score&amp;quot;: sum(similarity
        default [])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m00hspc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733132612.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m00fm90", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "dieRoteruebe", "can_mod_post": false,
        "created_utc": 1733131077.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_g4hgrgup", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[LANGUAGE: Python,
        C, Assembly]\n\nhttps://github.com/DieRoteRuebe/AdventofCode2024", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_m00fm90",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python, C,
        Assembly]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/DieRoteRuebe/AdventofCode2024\"&gt;https://github.com/DieRoteRuebe/AdventofCode2024&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m00fm90/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733131077.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m00cawr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "jrhwood", "can_mod_post": false, "created_utc":
        1733128793.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_r5xyy62g", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: Haskell\\]\n\nPart 1:\n\n    import
        Data.List\n    \n    -- Convert a space-separated string into an integer pair\n    readPair
        :: String -&gt; (Int, Int)\n    readPair = tuple . map read . words\n      where
        tuple [a,b] = (a,b)\n    \n    -- Calculate total distance between sorted
        lists\n    computeDistance :: ([Int], [Int]) -&gt; Int\n    computeDistance
        = sum . uncurry (zipWith ((abs .) . (-))) . both sort\n      where both f
        (x,y) = (f x, f y)\n    \n    main :: IO ()\n    main = interact $ show .
        computeDistance . unzip . map readPair . lines\n\nPart 2:\n\n    -- Convert
        a space-separated string into an integer pair\n    readPair :: String -&gt;
        (Int, Int)\n    readPair = tuple . map read . words\n      where tuple [a,b]
        = (a,b)\n    \n    -- Calculate similarity score for a pair of lists\n    similarityScore
        :: ([Int], [Int]) -&gt; Int\n    similarityScore (xs, ys) = sum [x * count
        x ys | x &lt;- xs]\n      where count x = length . filter (==x)\n    \n    main
        :: IO ()\n    main = interact $ show . similarityScore . unzip . map readPair
        . lines", "edited": 1733129812.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m00cawr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Haskell]&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Data.List\n\n-- Convert a space-separated string into an integer pair\nreadPair
        :: String -&amp;gt; (Int, Int)\nreadPair = tuple . map read . words\n  where
        tuple [a,b] = (a,b)\n\n-- Calculate total distance between sorted lists\ncomputeDistance
        :: ([Int], [Int]) -&amp;gt; Int\ncomputeDistance = sum . uncurry (zipWith
        ((abs .) . (-))) . both sort\n  where both f (x,y) = (f x, f y)\n\nmain ::
        IO ()\nmain = interact $ show . computeDistance . unzip . map readPair . lines\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-- Convert a space-separated string
        into an integer pair\nreadPair :: String -&amp;gt; (Int, Int)\nreadPair =
        tuple . map read . words\n  where tuple [a,b] = (a,b)\n\n-- Calculate similarity
        score for a pair of lists\nsimilarityScore :: ([Int], [Int]) -&amp;gt; Int\nsimilarityScore
        (xs, ys) = sum [x * count x ys | x &amp;lt;- xs]\n  where count x = length
        . filter (==x)\n\nmain :: IO ()\nmain = interact $ show . similarityScore
        . unzip . map readPair . lines\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m00cawr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733128793.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0070wh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "lbreede", "can_mod_post": false, "created_utc":
        1733125294.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_4jl9zkr4", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: Uiua]\n\nPart 1 only:\n\n    EXAMPLE
        \u2190 [[3 4] [4 3] [2 5] [1 3] [3 9] [3 3]]\n    PartOne \u2190 /+\u2335\u2261/-\u2349\u2261\u2346\u2349\n    \u2364.
        =PartOne EXAMPLE 11", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m0070wh", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Uiua]&lt;/p&gt;\n\n&lt;p&gt;Part 1 only:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;EXAMPLE
        \u2190 [[3 4] [4 3] [2 5] [1 3] [3 9] [3 3]]\nPartOne \u2190 /+\u2335\u2261/-\u2349\u2261\u2346\u2349\n\u2364.
        =PartOne EXAMPLE 11\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0070wh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733125294.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m005axm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "yaniszaf", "can_mod_post": false, "created_utc":
        1733124194.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_2k1h0hnz", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "\\[Language: Arturo\\]\n\n[https://github.com/arturo-lang/arturo](https://github.com/arturo-lang/arturo)\n\n**Part
        A:**\n\n    [a,b]: map decouple split.every:2 to :block read ./\"input.txt\"
        =&gt; sort\n    print sum map 0..dec size a ''i -&gt; abs a\\[i] - b\\[i]\n\n**Part
        B:**\n\n    [a,b]: map decouple split.every:2 to :block read ./\"input.txt\"
        =&gt; sort\n    print sum map 0..dec size a ''i -&gt; a\\[i] * enumerate b
        =&gt; [&amp; = a\\[i]]", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m005axm", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Arturo]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/arturo-lang/arturo\"&gt;https://github.com/arturo-lang/arturo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        A:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[a,b]: map decouple
        split.every:2 to :block read ./&amp;quot;input.txt&amp;quot; =&amp;gt; sort\nprint
        sum map 0..dec size a &amp;#39;i -&amp;gt; abs a\\[i] - b\\[i]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        B:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[a,b]: map decouple
        split.every:2 to :block read ./&amp;quot;input.txt&amp;quot; =&amp;gt; sort\nprint
        sum map 0..dec size a &amp;#39;i -&amp;gt; a\\[i] * enumerate b =&amp;gt;
        [&amp;amp; = a\\[i]]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m005axm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733124194.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "m0058z0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "joshbduncan", "can_mod_post": false, "created_utc":
        1733124160.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 2,
        "author_fullname": "t2_9t2qo339", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: Python]\n\n    import sys\n    from
        collections import Counter\n\n    data = open(sys.argv[1]).read().strip()\n\n    left
        = []\n    right = []\n\n    for line in data.split(\"\\n\"):\n        nl,
        nr = line.split(\"   \")\n        left.append(int(nl))\n        right.append(int(nr))\n\n    p1
        = [abs(nl - nr) for nl, nr in zip(sorted(left), sorted(right))]\n    print(f\"Part
        1: {sum(p1)}\")\n\n    c = Counter(right)\n    p2 = [n * c[n] for n in left]\n    print(f\"Part
        2: {sum(p2)}\")", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_m0058z0", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import sys\nfrom collections import
        Counter\n\ndata = open(sys.argv[1]).read().strip()\n\nleft = []\nright = []\n\nfor
        line in data.split(&amp;quot;\\n&amp;quot;):\n    nl, nr = line.split(&amp;quot;   &amp;quot;)\n    left.append(int(nl))\n    right.append(int(nr))\n\np1
        = [abs(nl - nr) for nl, nr in zip(sorted(left), sorted(right))]\nprint(f&amp;quot;Part
        1: {sum(p1)}&amp;quot;)\n\nc = Counter(right)\np2 = [n * c[n] for n in left]\nprint(f&amp;quot;Part
        2: {sum(p2)}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m0058z0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733124160.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 0, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "lzzymwk", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1733120216.0, "send_replies": true, "parent_id": "t1_lzzxn4d",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Comment removed.  [Top-level
        comments in `Solution Megathread`s are for *code solutions* only](https://old.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_top-level_posts_are_for_code_solutions_only).",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_lzzymwk", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Comment
        removed.  &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_top-level_posts_are_for_code_solutions_only\"&gt;Top-level
        comments in &lt;code&gt;Solution Megathread&lt;/code&gt;s are for &lt;em&gt;code
        solutions&lt;/em&gt; only&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzymwk/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733120216.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "lzzxn4d", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 0, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[removed]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzxn4d/",
        "num_reports": null, "locked": false, "name": "t1_lzzxn4d", "created": 1733119666.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1733119666.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "m002yzr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "DJDarkViper",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_m000j2a", "score":
        1, "author_fullname": "t2_4jgvz", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Here we go. Tried a bunch
        of things, managed to get execution time down to 7.62ms, which im extremely
        happy with.  Swapping the split with the StringTokenizer was the fastest option
        that allowed more than just a single \\`char\\` for the delimeter.  This halved
        the execution speed.  Providing a bigger buffer size for the file reader only
        shaved half a millisecond off at best.   I might experiment with reading the
        file a couple different ways, I haven''t decided.  But at 7.62ms, I''m pretty
        happy with that.\n\n    /**\n     * This is version 2 of Day 1, which is going
        to be focusing less on test driven development, and aiming to be\n     * as
        straightforward performance-driven as possible\n     */\n    public class
        Day1v2 extends AOCDay {\n        @Override\n        public String getPuzzleInputFilePath()
        {\n            return \"2024/01.txt\";\n        }\n        @Override\n        public
        void easy() {\n            // create a couple of large buckets to store our
        ints\n            int[] left = new int[1000],  \n                  right =
        new int[1000];\n            // scalar values\n            int score = 0;\n            int
        i = 0;\n    \n            // Providing a bigger buffer size than the 8kb that
        java defaults too reduces I/O operations\n            try(BufferedReader br
        = new BufferedReader(new FileReader(getInput()), 64 * 1024)) {\n                String
        line;\n                StringTokenizer izr;\n                while((line =
        br.readLine()) != null) {\n                    // out of .split, Scanner,
        Matcher, and StringTokenizer, the StringTokenizer is by far the fastest\n                    izr
        = new StringTokenizer(line, \"   \");\n                    left[i] = Integer.parseInt(izr.nextToken());\n                    right[i]
        = Integer.parseInt(izr.nextToken());\n                    i++;\n                }\n            }
        catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n            Arrays.sort(left);\n            Arrays.sort(right);\n    \n            //
        find the distances and sum them up\n            for(i = 0; i &lt; left.length;
        i++) {\n                score += Math.abs(left[i] - right[i]);\n            }\n            System.out.println(\"Distance
        score is \" + score);\n    \n            //////////\n            //// Last
        run on Ryzen 5600X was 7.62ms\n            //////////\n        }\n    }",
        "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_m002yzr", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here
        we go. Tried a bunch of things, managed to get execution time down to 7.62ms,
        which im extremely happy with.  Swapping the split with the StringTokenizer
        was the fastest option that allowed more than just a single `char` for the
        delimeter.  This halved the execution speed.  Providing a bigger buffer size
        for the file reader only shaved half a millisecond off at best.   I might
        experiment with reading the file a couple different ways, I haven&amp;#39;t
        decided.  But at 7.62ms, I&amp;#39;m pretty happy with that.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/**\n
        * This is version 2 of Day 1, which is going to be focusing less on test driven
        development, and aiming to be\n * as straightforward performance-driven as
        possible\n */\npublic class Day1v2 extends AOCDay {\n    @Override\n    public
        String getPuzzleInputFilePath() {\n        return &amp;quot;2024/01.txt&amp;quot;;\n    }\n    @Override\n    public
        void easy() {\n        // create a couple of large buckets to store our ints\n        int[]
        left = new int[1000],  \n              right = new int[1000];\n        //
        scalar values\n        int score = 0;\n        int i = 0;\n\n        // Providing
        a bigger buffer size than the 8kb that java defaults too reduces I/O operations\n        try(BufferedReader
        br = new BufferedReader(new FileReader(getInput()), 64 * 1024)) {\n            String
        line;\n            StringTokenizer izr;\n            while((line = br.readLine())
        != null) {\n                // out of .split, Scanner, Matcher, and StringTokenizer,
        the StringTokenizer is by far the fastest\n                izr = new StringTokenizer(line,
        &amp;quot;   &amp;quot;);\n                left[i] = Integer.parseInt(izr.nextToken());\n                right[i]
        = Integer.parseInt(izr.nextToken());\n                i++;\n            }\n        }
        catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n        Arrays.sort(left);\n        Arrays.sort(right);\n\n        //
        find the distances and sum them up\n        for(i = 0; i &amp;lt; left.length;
        i++) {\n            score += Math.abs(left[i] - right[i]);\n        }\n        System.out.println(&amp;quot;Distance
        score is &amp;quot; + score);\n\n        //////////\n        //// Last run
        on Ryzen 5600X was 7.62ms\n        //////////\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m002yzr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733122747.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733122747.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "m000j2a", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "DJDarkViper", "can_mod_post": false, "created_utc":
        1733121303.0, "send_replies": true, "parent_id": "t1_lzzwv2r", "score": 1,
        "author_fullname": "t2_4jgvz", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Decided to take another stab
        at Day 1 to see if going brute-force straight forward would shave off a few
        ms.\n\nI was... shocked to be wrong.  18.77ms is my lowest time with this
        approach\n\n    /**\n     * This is version 2 of Day 1, which is going to
        be focusing less on test driven development, and aiming to be\n     * as straightforward
        performance-driven as possible using no fancy stuff\n     */\n    public class
        Day1v2 extends AOCDay {\n        @Override\n        public String getPuzzleInputFilePath()
        { return \"2024/01.txt\"; }\n    \n        @Override\n        public void
        easy() {\n            // create a couple of large buckets to store our ints\n            int[]
        left = new int[1000],\n                  right = new int[1000];\n            //
        scalar values\n            int score = 0;\n            int i = 0;\n    \n            //
        We need to avoid using the consumer/callback as much as possible, and leave
        as much to raw forward motion as we can\n            // It''s far less flexible
        but it should run significantly faster\n            try(BufferedReader br
        = new BufferedReader(new FileReader(getInput()))) {\n                i = 0;
        // reset pointer\n                String line; // storage for line\n                while((line
        = br.readLine()) != null) {\n                    String[] tokens = line.split(\"
        {3}\");\n                    left[i] = Integer.parseInt(tokens[0]);\n                    right[i]
        = Integer.parseInt(tokens[1]);\n    \n                    i++;\n                }\n            }
        catch (IOException e) { throw new RuntimeException(e); }\n    \n            Arrays.sort(left);\n            Arrays.sort(right);\n    \n            //
        find the distances and sum them up\n            for(i = 0; i &lt; left.length;
        i++) {\n                score += Math.abs(left[i] - right[i]);\n            }\n    \n            System.out.println(\"Distance
        score is \" + score);    }\n    }\n\n  \nRunning a profiler on it, turns out
        the \".split\" is the bottleneck, spending a full 11ms of the 18ms run time
        on that one line alone. \n\nGoing to try a couple more options.", "edited":
        1733121724.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_m000j2a", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Decided
        to take another stab at Day 1 to see if going brute-force straight forward
        would shave off a few ms.&lt;/p&gt;\n\n&lt;p&gt;I was... shocked to be wrong.  18.77ms
        is my lowest time with this approach&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/**\n
        * This is version 2 of Day 1, which is going to be focusing less on test driven
        development, and aiming to be\n * as straightforward performance-driven as
        possible using no fancy stuff\n */\npublic class Day1v2 extends AOCDay {\n    @Override\n    public
        String getPuzzleInputFilePath() { return &amp;quot;2024/01.txt&amp;quot;;
        }\n\n    @Override\n    public void easy() {\n        // create a couple of
        large buckets to store our ints\n        int[] left = new int[1000],\n              right
        = new int[1000];\n        // scalar values\n        int score = 0;\n        int
        i = 0;\n\n        // We need to avoid using the consumer/callback as much
        as possible, and leave as much to raw forward motion as we can\n        //
        It&amp;#39;s far less flexible but it should run significantly faster\n        try(BufferedReader
        br = new BufferedReader(new FileReader(getInput()))) {\n            i = 0;
        // reset pointer\n            String line; // storage for line\n            while((line
        = br.readLine()) != null) {\n                String[] tokens = line.split(&amp;quot;
        {3}&amp;quot;);\n                left[i] = Integer.parseInt(tokens[0]);\n                right[i]
        = Integer.parseInt(tokens[1]);\n\n                i++;\n            }\n        }
        catch (IOException e) { throw new RuntimeException(e); }\n\n        Arrays.sort(left);\n        Arrays.sort(right);\n\n        //
        find the distances and sum them up\n        for(i = 0; i &amp;lt; left.length;
        i++) {\n            score += Math.abs(left[i] - right[i]);\n        }\n\n        System.out.println(&amp;quot;Distance
        score is &amp;quot; + score);    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Running
        a profiler on it, turns out the &amp;quot;.split&amp;quot; is the bottleneck,
        spending a full 11ms of the 18ms run time on that one line alone. &lt;/p&gt;\n\n&lt;p&gt;Going
        to try a couple more options.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_1h3vp6n", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m000j2a/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733121303.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "lzzwv2r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "DJDarkViper",
        "can_mod_post": false, "created_utc": 1733119237.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_4jgvz", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "\\[Language:
        Java\\]\n\nExecution times:\n\nPart 1: 13.14ms  \nPart 2:  \n\\- 16.79ms (with
        Streams API)  \n\\- 14.29ms (using a for loop instead of Streams API)\n\n[https://github.com/RedactedProfile/jAdventOfCode/blob/master/src/main/java/com/redactedprofile/Y2024/days/Day1.java](https://github.com/RedactedProfile/jAdventOfCode/blob/master/src/main/java/com/redactedprofile/Y2024/days/Day1.java)",
        "edited": 1733119568.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_lzzwv2r", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Java]&lt;/p&gt;\n\n&lt;p&gt;Execution times:&lt;/p&gt;\n\n&lt;p&gt;Part 1:
        13.14ms&lt;br/&gt;\nPart 2:&lt;br/&gt;\n- 16.79ms (with Streams API)&lt;br/&gt;\n-
        14.29ms (using a for loop instead of Streams API)&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/RedactedProfile/jAdventOfCode/blob/master/src/main/java/com/redactedprofile/Y2024/days/Day1.java\"&gt;https://github.com/RedactedProfile/jAdventOfCode/blob/master/src/main/java/com/redactedprofile/Y2024/days/Day1.java&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzwv2r/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733119237.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 4}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "lzzvgr6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "spellcasters22", "can_mod_post": false,
        "created_utc": 1733118483.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 3, "author_fullname": "t2_7t9k2", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[Language: Python]\n\nPart
        1\nhttps://github.com/reixyz22/Advent-Of-Code/blob/master/1.py\n\nPart 2 \nhttps://github.com/reixyz22/Advent-Of-Code/blob/master/1.5.py\n\nWould
        appreicate any feedback", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_lzzvgr6", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;p&gt;Part 1\n&lt;a href=\"https://github.com/reixyz22/Advent-Of-Code/blob/master/1.py\"&gt;https://github.com/reixyz22/Advent-Of-Code/blob/master/1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2 \n&lt;a href=\"https://github.com/reixyz22/Advent-Of-Code/blob/master/1.5.py\"&gt;https://github.com/reixyz22/Advent-Of-Code/blob/master/1.5.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Would
        appreicate any feedback&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzvgr6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733118483.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "m00awsc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Anceps2",
        "can_mod_post": false, "created_utc": 1733127842.0, "send_replies": true,
        "parent_id": "t1_lzzv7k8", "score": 1, "author_fullname": "t2_145kszo9", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Nice way to use `for a, _ in data`.\n\nI''d do `left, right = zip(*data)`",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_m00awsc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice
        way to use &lt;code&gt;for a, _ in data&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d
        do &lt;code&gt;left, right = zip(*data)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/m00awsc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733127842.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "lzzv7k8", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "ThreadsOfCode", "can_mod_post": false,
        "created_utc": 1733118348.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_86ydms1g", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Python\\]\n\nPutting
        this here so that I have 5 for the snowglobe awards.\n\n    with open(''inputs/input01.txt'')
        as inputfile:\n        data = inputfile.read().split(''\\n'')\n    \n    data
        = [d.split() for d in data]\n    \n    left = sorted([int(a) for a, _ in data])\n    right
        = sorted([int(b) for _, b in data])\n    \n    difference = sum(abs(l - r)
        for l, r in zip(left, right))\n    similarity = sum(l * right.count(l) for
        l in left)\n    \n    print(f''part 1: {difference}'')\n    print(f''part
        2: {similarity}'')", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_lzzv7k8", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;p&gt;Putting this here so that I have 5 for the snowglobe
        awards.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;#39;inputs/input01.txt&amp;#39;)
        as inputfile:\n    data = inputfile.read().split(&amp;#39;\\n&amp;#39;)\n\ndata
        = [d.split() for d in data]\n\nleft = sorted([int(a) for a, _ in data])\nright
        = sorted([int(b) for _, b in data])\n\ndifference = sum(abs(l - r) for l,
        r in zip(left, right))\nsimilarity = sum(l * right.count(l) for l in left)\n\nprint(f&amp;#39;part
        1: {difference}&amp;#39;)\nprint(f&amp;#39;part 2: {similarity}&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzv7k8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733118348.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "lzztc8z", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "antiworkprotwerk", "can_mod_post": false,
        "created_utc": 1733117369.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_gqfqvss31", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Scala\\]\n\nPart
        One:  \nPriorityQueue to insert in a sorted way, iterate over once more to
        calculate distance.\n\nPart Two:  \nHashmap with the key as the integer, and
        the value as a tuple of (leftListOcurrences, rightListOccurences).  \nIterate
        over the map to calculate the sum. \n\n[https://gist.github.com/mrybak834/54cece7a2681c672ab4249b682f97527](https://gist.github.com/mrybak834/54cece7a2681c672ab4249b682f97527)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_lzztc8z", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Scala]&lt;/p&gt;\n\n&lt;p&gt;Part One:&lt;br/&gt;\nPriorityQueue to insert
        in a sorted way, iterate over once more to calculate distance.&lt;/p&gt;\n\n&lt;p&gt;Part
        Two:&lt;br/&gt;\nHashmap with the key as the integer, and the value as a tuple
        of (leftListOcurrences, rightListOccurences).&lt;br/&gt;\nIterate over the
        map to calculate the sum. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/mrybak834/54cece7a2681c672ab4249b682f97527\"&gt;https://gist.github.com/mrybak834/54cece7a2681c672ab4249b682f97527&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzztc8z/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733117369.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "lzzshgl", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "MyEternalSadness", "can_mod_post": false,
        "created_utc": 1733116932.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 3, "author_fullname": "t2_1cig3fqszu", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Haskell\\]\n\nI''m
        a little late to the party, because I forgot today was December 1, and we
        went to the movies.\n\nI''m upping the ante with Haskell this year after doing
        AoC in Rust for the last two years.  This one wasn''t too difficult.\n\n[Part
        1](https://github.com/apprenticewiz/adventofcode/blob/main/2024/haskell/day01a/Main.hs)\n\n[Part
        2](https://github.com/apprenticewiz/adventofcode/blob/main/2024/haskell/day01b/Main.hs)",
        "edited": 1733117821.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_lzzshgl", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Haskell]&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m a little late to the party, because
        I forgot today was December 1, and we went to the movies.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        upping the ante with Haskell this year after doing AoC in Rust for the last
        two years.  This one wasn&amp;#39;t too difficult.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/apprenticewiz/adventofcode/blob/main/2024/haskell/day01a/Main.hs\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/apprenticewiz/adventofcode/blob/main/2024/haskell/day01b/Main.hs\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzshgl/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1733116932.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "lzzokbk", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "bornsurvivor88", "can_mod_post": false,
        "created_utc": 1733115028.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_pyd4m", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "\\[Language: Rust\\]\n\n[code](https://github.com/GJason88/advent-of-code-2024-rust/blob/master/src/bin/day1/main.rs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_lzzokbk", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/GJason88/advent-of-code-2024-rust/blob/master/src/bin/day1/main.rs\"&gt;code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzokbk/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733115028.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "lzzk2nj", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "cccows", "can_mod_post": false, "created_utc":
        1733112991.0, "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 3,
        "author_fullname": "t2_lzidogcox", "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "\\[Language: Python\\]\n\n    import
        pandas as pd \n    \n    df = pd.read_csv(''input1.csv'', sep='' \u00a0 '',
        header=None)\n    \n    col0 = df[0].tolist()\n    iters = df[0].tolist()\n    col1
        = df[1].tolist()\n    listDif = []\n    count = 0 \n    print(f''length: {len(col0)}\\n'')\n    while
        count &lt; (len(iters)):\n    \u00a0 \u00a0 min0= min(col0)\n    \u00a0 \u00a0
        min1=min(col1)\n    \u00a0 \u00a0 difference = abs(min1-min0)\n    \u00a0
        \u00a0 listDif.append(difference)\n    \u00a0 \u00a0 \n    # print(f\"MIN0:{min0},
        MIN1:{min1}, DIFFERENCE:{difference}\")\n    \u00a0 \u00a0 col0.remove(min0)\n    \u00a0
        \u00a0 col1.remove(min1)\n    \u00a0 \u00a0 count +=1\n    print(f\"PART I:
        {sum(listDif)}\")\n    \n    \n    col0 = df[0].tolist()\n    col1 = df[1].tolist()\n    freq
        = 0\n    for i in col0:\n    \u00a0 \u00a0 freq_i = col1.count(i)\n    \u00a0
        \u00a0 similarity = i * freq_i\n    \u00a0 \u00a0 freq+=(similarity)\n    print(f\"PART
        II: {freq}\")", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_lzzk2nj", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import pandas as pd \n\ndf = pd.read_csv(&amp;#39;input1.csv&amp;#39;,
        sep=&amp;#39; \u00a0 &amp;#39;, header=None)\n\ncol0 = df[0].tolist()\niters
        = df[0].tolist()\ncol1 = df[1].tolist()\nlistDif = []\ncount = 0 \nprint(f&amp;#39;length:
        {len(col0)}\\n&amp;#39;)\nwhile count &amp;lt; (len(iters)):\n\u00a0 \u00a0
        min0= min(col0)\n\u00a0 \u00a0 min1=min(col1)\n\u00a0 \u00a0 difference =
        abs(min1-min0)\n\u00a0 \u00a0 listDif.append(difference)\n\u00a0 \u00a0 \n#
        print(f&amp;quot;MIN0:{min0}, MIN1:{min1}, DIFFERENCE:{difference}&amp;quot;)\n\u00a0
        \u00a0 col0.remove(min0)\n\u00a0 \u00a0 col1.remove(min1)\n\u00a0 \u00a0 count
        +=1\nprint(f&amp;quot;PART I: {sum(listDif)}&amp;quot;)\n\n\ncol0 = df[0].tolist()\ncol1
        = df[1].tolist()\nfreq = 0\nfor i in col0:\n\u00a0 \u00a0 freq_i = col1.count(i)\n\u00a0
        \u00a0 similarity = i * freq_i\n\u00a0 \u00a0 freq+=(similarity)\nprint(f&amp;quot;PART
        II: {freq}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzk2nj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733112991.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzzifpf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": true, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzifpf/",
        "num_reports": null, "locked": false, "name": "t1_lzzifpf", "created": 1733112290.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1733112290.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "more", "data": {"count":
        1, "name": "t1_lzzmzff", "id": "lzzmzff", "parent_id": "t1_lzzmndq", "depth":
        2, "children": ["lzzmzff"]}}], "before": null}}, "user_reports": [], "saved":
        false, "id": "lzzmndq", "banned_at_utc": null, "mod_reason_title": null, "gilded":
        0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author":
        "1234abcdcba4321", "can_mod_post": false, "created_utc": 1733114139.0, "send_replies":
        true, "parent_id": "t1_lzzhmf1", "score": 3, "author_fullname": "t2_fwjol",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "I like to archive my code so I always copypaste my part 1 code
        elsewhere as soon as I finish it (and then continue editing it for part 2).
        Sometimes it comes in handy, though, if it turns out I actually need something
        I removed without realizing at first.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_lzzmndq", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like to archive my code so
        I always copypaste my part 1 code elsewhere as soon as I finish it (and then
        continue editing it for part 2). Sometimes it comes in handy, though, if it
        turns out I actually need something I removed without realizing at first.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_1h3vp6n", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzmndq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733114139.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "lzzhmf1", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code":
        null, "no_follow": true, "author": "Conceptizual", "can_mod_post": false,
        "created_utc": 1733111947.0, "send_replies": true, "parent_id": "t3_1h3vp6n",
        "score": 2, "author_fullname": "t2_f996y", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[Language: Python]
        1571/1304 I have a tendency to write part 2 on top of the part 1 code, so
        this doesn''t have part 1 code. Pretty much the same as everyone else''s.\n\n    fileContents
        = open(\"AdventOfCode2024/Day 1/input.txt\")\n    arr = fileContents.read().split(\"\\n\")\n\n    left_numbers:
        list[int] = []\n    right_numbers: list[int] = []\n\n    for line in arr:\n        left,
        right = int(line.split(\"   \")[0]), int(line.split(\"   \")[1])\n        left_numbers.append(left)\n        right_numbers.append(right)\n\n    left_numbers
        = sorted(left_numbers)\n    right_numbers = sorted(right_numbers)\n\n\n    total
        = 0\n    for i in range(len(left_numbers)):\n        total += left_numbers[i]
        * len([j for j in right_numbers if j == left_numbers[i]])\n\n    print(total)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_lzzhmf1", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python] 1571/1304 I have a tendency to write part 2 on top of the part 1 code,
        so this doesn&amp;#39;t have part 1 code. Pretty much the same as everyone
        else&amp;#39;s.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fileContents = open(&amp;quot;AdventOfCode2024/Day
        1/input.txt&amp;quot;)\narr = fileContents.read().split(&amp;quot;\\n&amp;quot;)\n\nleft_numbers:
        list[int] = []\nright_numbers: list[int] = []\n\nfor line in arr:\n    left,
        right = int(line.split(&amp;quot;   &amp;quot;)[0]), int(line.split(&amp;quot;   &amp;quot;)[1])\n    left_numbers.append(left)\n    right_numbers.append(right)\n\nleft_numbers
        = sorted(left_numbers)\nright_numbers = sorted(right_numbers)\n\n\ntotal =
        0\nfor i in range(len(left_numbers)):\n    total += left_numbers[i] * len([j
        for j in right_numbers if j == left_numbers[i]])\n\nprint(total)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzhmf1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1733111947.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "more",
        "data": {"count": 1310, "name": "t1_lzzhi6n", "id": "lzzhi6n", "parent_id":
        "t3_1h3vp6n", "depth": 0, "children": ["lzzhi6n", "lzz88li", "lzz7ev4", "lzzdouv",
        "lzyoaka", "lzyhf3h", "lzyopak", "lzyy37i", "lzz8yjs", "lzz1zdd", "lzyioa0",
        "lzy3fj9", "lzyas3y", "lzy4wiu", "lzyj0c0", "lzy3w4z", "lzyoxpn", "lzywm0a",
        "lzz7dp2", "lzz3tud", "lzz0m22", "lzyzbv8", "lzyi596", "lzybcds", "lzxx539",
        "lzxiyqj", "lzxni8y", "lzxwxer", "lzwhlfw", "lzy0ubn", "lzxjjz7", "lzxo4cs",
        "lzy3l4s", "lzxg5k6", "lzymy1w", "lzx2iql", "lzyo099", "lzykfxp", "lzydegd",
        "lzyxsyp", "lzyplnw", "lzyu3xo", "lzxzl8k", "lzx5x7o", "lzy5ev5", "lzymhbq",
        "lzy2y3j", "lzyegbz", "lzy3ceo", "lzxc1gg", "lzxg9fi", "lzxey3q", "lzxhngc",
        "lzxb6wy", "lzwhwnu", "lzwhsbr", "lzxqfih", "lzwwa0j", "lzvr1me", "lzw7bxl",
        "lzvefsm", "lzxv1io", "lzx4vg0", "lzx5ew6", "lzx5fi8", "lzxjlud", "lzxyt1p",
        "lzwbpkj", "lzx7z9q", "lzwve2u", "lzy8xt4", "lzyitqc", "lzwkspk", "lzwvgyx",
        "lzwwtz8", "lzxgwjc", "lzyc6yj", "lzwlk04", "lzxymvy", "lzwm77m", "lzyln22",
        "lzvlx89", "lzyahn2", "lzy1xya", "lzy1vi1", "lzyip3j", "lzxlypv", "lzxwpuu",
        "lzwr1gt", "lzwy0pm", "lzy50rj", "lzx4yw1", "lzydt95", "lzw82qi", "lzxd4fq",
        "lzx663l", "lzy2ck1", "lzwgq3h", "lzxrzxz", "lzy13zj", "lzup0ap", "lzvjwvt",
        "lzvoigz", "lzw59qi", "lzwjr08", "lzwfu9m", "lzvijc3", "lzx9tmj", "lzwnpwa",
        "lzwh5rt", "lzv77xx", "lzv6mjf", "lzva9iy", "lzw590b", "lzwp0s1", "lzw392l",
        "lzwtcbu", "lzwcpug", "lzv9bgi", "lzvc49n", "lzw0iow", "lzvxbil", "lzva6dl",
        "lzuxln2", "lzxupfy", "lzxr1ct", "lzx0yun", "lzw0s5r", "lzvt9ub", "lzx1u4d",
        "lzwpqqx", "lzw1gq7", "lzx7y8o", "lzx3zmb", "lzxnr3q", "lzw94jt", "lzvl541",
        "lzwafh1", "lzuveei", "lzw7wbc", "lzvo53h", "lzvtm58", "lzw21qf", "lzxdgoa",
        "lzvpb7f", "lzxpqjn", "lzwk037", "lzw6cci", "lzwn130", "lzvljq9", "lzvyekv",
        "lzwtw8p", "lzwiqz3", "lzui0r7", "lzw6jj7", "lzwyo1y", "lzvkxpv", "lzvbe25",
        "lzxvf32", "lzuzmk2", "lzwih8i", "lzveta7", "lzxnyxk", "lzw0gx8", "lzvkpuj",
        "lzv53t5", "lzvx9tt", "lzx6ant", "lzxstr8", "lzx0451", "lzxk8in", "lzv0mhf",
        "lzwl442", "lzxzre1", "lzx3cfm", "lzx7rcg", "lzvr3x4", "lzx716i", "lzwjnkp",
        "lzw18yp", "lzwwfi2", "lzvwbmb", "lzxwzv1", "lzxnxu5", "lzw4kxr", "lzw0r7p",
        "lzxab8v", "lzy2ysa", "lzut77l", "lzvc37w", "lzwfhja", "lzx5ceh", "lzva1mu",
        "lzv1h7j", "lzy1ie6", "lzxcran", "lzucjcb", "lzuf6pl", "lzwqcgt", "lzut0dp",
        "lzwwdez", "lzv8820", "lzufdi1", "lzu2ivd", "lzuuc24", "lzuj683", "lzv5etg",
        "lzukqyb", "lzvfewi", "lzuqoee", "lzurrr3", "lzusygn", "lzvz9lm", "lzukgit",
        "lzvepsj", "lzvftee", "lzukrg8", "lzx6a3o", "lzubafx", "lzumum1", "lzvfjg6",
        "lzuqiqy", "lzuw204", "lzv1u54", "lzuxu2f", "lzv0kiu", "lzunlr8", "lzuqymy",
        "lzv2i40", "lzvgzl2", "lzuhzeh", "lzw8s3t", "lzv5do7", "lzvei7r", "lzupu7v",
        "lzv48yt", "lzudc61", "lzuzizu", "lzu6ecx", "lzuim0s", "lzuve9o", "lzur90m",
        "lzv1l81", "lzvbkq0", "lzv3ssf", "lzvjwvq", "lzv5cwn", "lzuir50", "lzugfkv",
        "lzu6dei", "lzxgnjw", "lzuwuer", "lzwbgg6", "lzx3r49", "lzuob92", "lzuhnpq",
        "lzuzxk9", "lzuc95m", "lzv6h6u", "lzvnk10", "lzw8clk", "lzuurvl", "lzwggfd",
        "lzvehvx", "lzuotng", "lzv0sma", "lzwf2n3", "lzwq5rw", "lzw6zcn", "lzuorux",
        "lzuph36", "lzwlzli", "lzvb8mz", "lzvgk86", "lzuonhq", "lzuqnrn", "lzuvv9d",
        "lzv0600", "lzunq6b", "lzury9n", "lzujbsz", "lzw3rc4", "lzux5eu", "lzvnuyr",
        "lzv4qlv", "lzv7ita", "lzv03wr", "lzvolnw", "lzwpc7l", "lzx6czc", "lzu5iu8",
        "lzuywc7", "lzvv2gw", "lzwo3xu", "lzufy8k", "lzv5tha", "lzvl8xt", "lzu247p",
        "lzw9xv7", "lzvqw9h", "lzuogyx", "lzuzuz0", "lzunnlt", "lzutnuq", "lzvonh4",
        "lzuyau3", "lzw05v2", "lzwg7ct", "lzuh31k", "lztxcn2", "lzvcct0", "lzuin6w",
        "lzunjwq", "lzvny74", "lzuztdp", "lzv76ku", "lzurrwf", "lzuxuz5", "lzuncn6",
        "lzw1l0y", "lzuj69d", "lzusuhd", "lzv14mo", "lzvl48t", "lzup054", "lzv06w0",
        "lzvwlng", "lzv1amu", "lzud5mh", "lzv0wj9", "lzvd10m", "lztveyg", "lzuxplx",
        "lzurdle", "lzv90g1", "lzv69w1", "lzufzih", "lzuq6jl", "lzwaqbg", "lzwpi7i",
        "lzupim4", "lzv6lu7", "lzxd7g7", "lzxbuz2", "lzuqgpm", "lzutfvq", "lzvlpzh",
        "lzvmheb", "lzwmaex", "lzww4wm", "lzw0bbp", "lzv6lsv", "lzukwoy", "lzutgq2",
        "lzuaoqc", "lzu6wxe", "lzunnwy", "lzw7wmw", "lzv5f36", "lzvxk6p", "lzunhiy",
        "lzvrclk", "lzwefd0", "lztwpcw", "lzvhlo7", "lzu5vwv", "lzxped4", "lzv7klk",
        "lzv9vah", "lzw747s", "lzv83r3", "lzvwrb4", "lzulk56", "lzv77ab", "lztzho4",
        "lzwz8r8", "lztwckv", "lzxvj9k", "lzudwpn", "lztzt7s", "lzv0jmg", "lztxoul",
        "lztzm3y", "lzvwc9e", "lzubpt1", "lzww2ia", "lzurxqm", "lzv85jl", "lztwt44",
        "lzusxwa", "lzvmi1t", "lztvz78", "lzudvpi", "lzub9ri", "lztypfi", "lztuqji",
        "lzu9r81", "lztutgx", "lzuuqlz", "lzwlnw1", "lzuclrz", "lzuqa28", "lzvh4g9",
        "lzwmp7w", "lzu8n39", "lztvrv7", "lztxgq1", "lzudcvb", "lztws3t", "lztvkl1",
        "lztx0ib", "lzu59uu", "lzu3ne8", "lztxifk", "lztwjdc", "lzty5w1", "lzu4wkj",
        "lztuvx8", "lzuyid3", "lztxvuj", "lztzllo", "lztv7ix", "lztwvux", "lztyw2n",
        "lzumtlf", "lzumwlo", "lzvod3j", "lzu57mq", "lzu6fxr", "lzu555y", "lztxj21",
        "lzuegf5", "lzu2yks", "lzueibv", "lztwo15", "lztxlix", "lzw6smd", "lzvk2b7",
        "lztzce5", "lztz5jj", "lzty87e", "lztzjk2", "lzupl7p", "lzv11tu", "lztwqd9",
        "lzui3bt", "lztvrmy", "lzu7m6r", "lzulebd", "lzu22qo", "lztyifv", "lztz227",
        "lzu2xto", "lzup0wo", "lztv0cr", "lzuhkm0", "lzuj028", "lztxpm4", "lzuy57y",
        "lztwdz8", "lzupixm", "lzunulz", "lzuhysu", "lzugzko", "lzvccp8", "lztuzu2",
        "lzurnln", "lzuzvr4", "lzu3arz", "lzuduwc", "lztwofg", "lzufa75", "lztzkrd",
        "lzup10n", "lztusuo", "lzu09x9", "lzuqgs5", "lzuhdck", "lztvrzf", "lztxq7u",
        "lzuc5un", "lztwb58", "lzu4v0v", "lztx0gs", "lzue1n7", "lzue4xp", "lzuuzy8",
        "lzu2o71", "lzu0r1q", "lzua5pk", "lzundbk", "lzv3mfg", "lzurwhq", "lztyu01",
        "lztwobe", "lzujvaw", "lztw44y", "lzu4jyf", "lzty1pl", "lzu6ehv", "lztuqbf",
        "lztxczr", "lzu0ngp", "lzub6xn", "lzu1m7y", "lzutbyl", "lzu16p9", "lzu6bxb",
        "lztyuu3", "lzu2xei", "lztvxqo", "lzu4dew", "lztznef", "lzu8lja", "lzu4arc",
        "lzu585x", "lzuams3", "lztx3fc", "lzu5c3j", "lzujlwa", "lzu0iw8", "lzufx31",
        "lzvcznm", "lzv0aq2", "lzuksqn", "lztycnp", "lzty81k", "lzvuxar", "lzu0yee",
        "lzv1dp2", "lzu0fn0", "lzunwxv", "lzug85n", "lzuf5fa", "lztxrmc", "lzv4kze",
        "lzua06v", "lzvk2zk", "lzu08md", "lzutcrs", "lzu1d8t", "lzuk8y5", "lztwe10",
        "lztx9nv", "lzulx1l", "lzu37j5", "lztwrej", "lzu0mwg", "lzu8brh", "lzuzoao",
        "lzu51im", "lzu9b7y", "lztxedy", "lzu40h0", "lztx33s", "lzuiq49", "lzur39j",
        "lzu3nq7", "lztxmoo", "lzu4ea2", "lztxp3z", "lzty48o", "lztv294", "lzub3gm",
        "lzu6srh", "lzu37x8", "lztwpd7", "lztvr1f", "lzuorbh", "lzuxuqn", "lzuluvw",
        "lzv1j4u", "lzufves", "lztvo7j", "lzu5p9p", "lzul07q", "lzurzx2", "lztxsbu",
        "lzu253p", "lzvm73n", "lzu3hjy", "lzvmxf5", "lztzrhe", "lztvv2v", "lzufzy7",
        "lzuhw5i", "lzurqvp", "lzu89yq", "lzuk4ws", "lztuxe5", "lztuhit", "lztxhsi",
        "lztze6e", "lzuaelz", "lzu1tvt", "lzut10v", "lzu0358", "lztxfn0", "lzv7dn6",
        "lzuiprd", "lzulkpq", "lzubcx0", "lzu1qef", "lzumhc5", "lzupjwe", "lztx6do",
        "lzu083i", "lzunco8", "lzutgmd", "lzu1f8s", "lzudkem", "lzupmws", "lzuuwbu",
        "lzubp9n", "lzuatf2", "lzuyrjc", "lzuy50s", "lzu5kkk", "lzu5gyd", "lzuaoj8",
        "lztvjez", "lztw2j0", "lzu1uyi", "lzusuqf", "lzudmaa", "lzufxbj", "lzu7pt3",
        "lztvtu4", "lzv20jv", "lzvmp1i", "lztv52p", "lzuca51", "lzu14er", "lzukmkn",
        "lzu03q6", "lztyism", "lztvnv0", "lzuxujh", "lztv8j1", "lztxfyf", "lzudln3",
        "lzu0lc6", "lztxn9m", "lztvbso", "lzuo7jw", "lztvat3", "lzu1j1c", "lzujovj",
        "lzuhoh0", "lzvdlvw", "lzu2kwf", "lzu257r", "lztzpt7", "lzuqgvb", "lzuvoa7",
        "lzv57tz"]}}], "before": null}}]'
  recorded_at: Sat, 08 Mar 2025 22:04:34 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:35 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=Z5v24x07Gg57c3SXEi; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:35 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzzhi6n,lzz88li,lzz7ev4,lzzdouv,lzyoaka,lzyhf3h,lzyopak,lzyy37i,lzz8yjs,lzz1zdd,lzyioa0,lzy3fj9,lzyas3y,lzy4wiu,lzyj0c0,lzy3w4z,lzyoxpn,lzywm0a,lzz7dp2,lzz3tud,lzz0m22,lzyzbv8,lzyi596,lzybcds,lzxx539,lzxiyqj,lzxni8y,lzxwxer,lzwhlfw,lzy0ubn,lzxjjz7,lzxo4cs,lzy3l4s,lzxg5k6,lzymy1w,lzx2iql,lzyo099,lzykfxp,lzydegd,lzyxsyp,lzyplnw,lzyu3xo,lzxzl8k,lzx5x7o,lzy5ev5,lzymhbq,lzy2y3j,lzyegbz,lzy3ceo,lzxc1gg,lzxg9fi,lzxey3q,lzxhngc,lzxb6wy,lzwhwnu,lzwhsbr,lzxqfih,lzwwa0j,lzvr1me,lzw7bxl,lzvefsm,lzxv1io,lzx4vg0,lzx5ew6,lzx5fi8,lzxjlud,lzxyt1p,lzwbpkj,lzx7z9q,lzwve2u,lzy8xt4,lzyitqc,lzwkspk,lzwvgyx,lzwwtz8,lzxgwjc,lzyc6yj,lzwlk04,lzxymvy,lzwm77m,lzyln22,lzvlx89,lzyahn2,lzy1xya,lzy1vi1,lzyip3j,lzxlypv,lzxwpuu,lzwr1gt,lzwy0pm,lzy50rj,lzx4yw1,lzydt95,lzw82qi,lzxd4fq,lzx663l,lzy2ck1,lzwgq3h,lzxrzxz,lzy13zj,lzup0ap,lzvjwvt,lzvoigz,lzw59qi,lzwjr08,lzwfu9m,lzvijc3,lzx9tmj,lzwnpwa,lzwh5rt,lzv77xx,lzv6mjf,lzva9iy,lzw590b,lzwp0s1,lzw392l,lzwtcbu,lzwcpug,lzv9bgi,lzvc49n,lzw0iow,lzvxbil,lzva6dl,lzuxln2,lzxupfy,lzxr1ct,lzx0yun,lzw0s5r,lzvt9ub,lzx1u4d,lzwpqqx,lzw1gq7,lzx7y8o,lzx3zmb,lzxnr3q,lzw94jt,lzvl541,lzwafh1,lzuveei,lzw7wbc,lzvo53h,lzvtm58,lzw21qf,lzxdgoa,lzvpb7f,lzxpqjn,lzwk037,lzw6cci,lzwn130,lzvljq9,lzvyekv,lzwtw8p,lzwiqz3,lzui0r7,lzw6jj7,lzwyo1y,lzvkxpv,lzvbe25,lzxvf32,lzuzmk2,lzwih8i,lzveta7,lzxnyxk,lzw0gx8,lzvkpuj,lzv53t5,lzvx9tt,lzx6ant,lzxstr8,lzx0451,lzxk8in,lzv0mhf,lzwl442,lzxzre1,lzx3cfm,lzx7rcg,lzvr3x4,lzx716i,lzwjnkp,lzw18yp,lzwwfi2,lzvwbmb,lzxwzv1,lzxnxu5,lzw4kxr,lzw0r7p,lzxab8v,lzy2ysa,lzut77l,lzvc37w,lzwfhja,lzx5ceh,lzva1mu,lzv1h7j,lzy1ie6,lzxcran,lzucjcb,lzuf6pl,lzwqcgt,lzut0dp,lzwwdez,lzv8820,lzufdi1,lzu2ivd,lzuuc24,lzuj683,lzv5etg,lzukqyb,lzvfewi,lzuqoee,lzurrr3,lzusygn,lzvz9lm,lzukgit,lzvepsj,lzvftee,lzukrg8,lzx6a3o,lzubafx,lzumum1,lzvfjg6,lzuqiqy,lzuw204,lzv1u54,lzuxu2f,lzv0kiu,lzunlr8,lzuqymy,lzv2i40,lzvgzl2,lzuhzeh,lzw8s3t,lzv5do7,lzvei7r,lzupu7v,lzv48yt,lzudc61,lzuzizu,lzu6ecx,lzuim0s,lzuve9o,lzur90m,lzv1l81,lzvbkq0,lzv3ssf,lzvjwvq,lzv5cwn,lzuir50,lzugfkv,lzu6dei,lzxgnjw,lzuwuer,lzwbgg6,lzx3r49,lzuob92,lzuhnpq,lzuzxk9,lzuc95m,lzv6h6u,lzvnk10,lzw8clk,lzuurvl,lzwggfd,lzvehvx,lzuotng,lzv0sma,lzwf2n3,lzwq5rw,lzw6zcn,lzuorux,lzuph36,lzwlzli,lzvb8mz,lzvgk86,lzuonhq,lzuqnrn,lzuvv9d,lzv0600,lzunq6b,lzury9n,lzujbsz,lzw3rc4,lzux5eu,lzvnuyr,lzv4qlv,lzv7ita,lzv03wr,lzvolnw,lzwpc7l,lzx6czc,lzu5iu8,lzuywc7,lzvv2gw,lzwo3xu,lzufy8k,lzv5tha,lzvl8xt,lzu247p,lzw9xv7,lzvqw9h,lzuogyx,lzuzuz0,lzunnlt,lzutnuq,lzvonh4,lzuyau3,lzw05v2,lzwg7ct,lzuh31k,lztxcn2,lzvcct0,lzuin6w,lzunjwq,lzvny74,lzuztdp,lzv76ku,lzurrwf,lzuxuz5,lzuncn6,lzw1l0y,lzuj69d,lzusuhd,lzv14mo,lzvl48t,lzup054,lzv06w0,lzvwlng,lzv1amu,lzud5mh,lzv0wj9,lzvd10m,lztveyg,lzuxplx,lzurdle,lzv90g1,lzv69w1,lzufzih,lzuq6jl,lzwaqbg,lzwpi7i,lzupim4,lzv6lu7,lzxd7g7,lzxbuz2,lzuqgpm,lzutfvq,lzvlpzh,lzvmheb,lzwmaex,lzww4wm,lzw0bbp,lzv6lsv,lzukwoy,lzutgq2,lzuaoqc,lzu6wxe,lzunnwy,lzw7wmw,lzv5f36,lzvxk6p,lzunhiy,lzvrclk,lzwefd0,lztwpcw,lzvhlo7,lzu5vwv,lzxped4,lzv7klk,lzv9vah,lzw747s,lzv83r3,lzvwrb4,lzulk56,lzv77ab,lztzho4,lzwz8r8,lztwckv,lzxvj9k,lzudwpn,lztzt7s,lzv0jmg,lztxoul,lztzm3y,lzvwc9e,lzubpt1,lzww2ia,lzurxqm,lzv85jl,lztwt44,lzusxwa,lzvmi1t,lztvz78,lzudvpi,lzub9ri,lztypfi,lztuqji,lzu9r81,lztutgx,lzuuqlz,lzwlnw1,lzuclrz,lzuqa28,lzvh4g9,lzwmp7w,lzu8n39,lztvrv7,lztxgq1,lzudcvb,lztws3t,lztvkl1,lztx0ib,lzu59uu,lzu3ne8,lztxifk,lztwjdc,lzty5w1,lzu4wkj,lztuvx8,lzuyid3,lztxvuj,lztzllo,lztv7ix,lztwvux,lztyw2n,lzumtlf,lzumwlo,lzvod3j,lzu57mq,lzu6fxr,lzu555y,lztxj21,lzuegf5,lzu2yks,lzueibv,lztwo15,lztxlix,lzw6smd,lzvk2b7,lztzce5,lztz5jj,lzty87e,lztzjk2,lzupl7p,lzv11tu,lztwqd9,lzui3bt,lztvrmy,lzu7m6r,lzulebd,lzu22qo,lztyifv,lztz227,lzu2xto,lzup0wo,lztv0cr,lzuhkm0,lzuj028,lztxpm4,lzuy57y,lztwdz8,lzupixm,lzunulz,lzuhysu,lzugzko,lzvccp8,lztuzu2,lzurnln,lzuzvr4,lzu3arz,lzuduwc,lztwofg,lzufa75,lztzkrd,lzup10n,lztusuo,lzu09x9,lzuqgs5,lzuhdck,lztvrzf,lztxq7u,lzuc5un,lztwb58,lzu4v0v,lztx0gs,lzue1n7,lzue4xp,lzuuzy8,lzu2o71,lzu0r1q,lzua5pk,lzundbk,lzv3mfg,lzurwhq,lztyu01,lztwobe,lzujvaw,lztw44y,lzu4jyf,lzty1pl,lzu6ehv,lztuqbf,lztxczr,lzu0ngp,lzub6xn,lzu1m7y,lzutbyl,lzu16p9,lzu6bxb,lztyuu3,lzu2xei,lztvxqo,lzu4dew,lztznef,lzu8lja,lzu4arc,lzu585x,lzuams3,lztx3fc,lzu5c3j,lzujlwa,lzu0iw8,lzufx31,lzvcznm,lzv0aq2,lzuksqn,lztycnp,lzty81k,lzvuxar,lzu0yee,lzv1dp2,lzu0fn0,lzunwxv,lzug85n,lzuf5fa,lztxrmc,lzv4kze,lzua06v,lzvk2zk,lzu08md,lzutcrs,lzu1d8t,lzuk8y5,lztwe10,lztx9nv,lzulx1l,lzu37j5,lztwrej,lzu0mwg,lzu8brh,lzuzoao,lzu51im,lzu9b7y,lztxedy,lzu40h0,lztx33s,lzuiq49,lzur39j,lzu3nq7,lztxmoo,lzu4ea2,lztxp3z,lzty48o,lztv294,lzub3gm,lzu6srh,lzu37x8,lztwpd7,lztvr1f,lzuorbh,lzuxuqn,lzuluvw,lzv1j4u,lzufves,lztvo7j,lzu5p9p,lzul07q,lzurzx2,lztxsbu,lzu253p,lzvm73n,lzu3hjy,lzvmxf5,lztzrhe,lztvv2v,lzufzy7,lzuhw5i,lzurqvp,lzu89yq,lzuk4ws,lztuxe5,lztuhit,lztxhsi,lztze6e,lzuaelz,lzu1tvt,lzut10v,lzu0358,lztxfn0,lzv7dn6,lzuiprd,lzulkpq,lzubcx0,lzu1qef,lzumhc5,lzupjwe,lztx6do,lzu083i,lzunco8,lzutgmd,lzu1f8s,lzudkem,lzupmws,lzuuwbu,lzubp9n,lzuatf2,lzuyrjc,lzuy50s,lzu5kkk,lzu5gyd,lzuaoj8,lztvjez,lztw2j0,lzu1uyi,lzusuqf,lzudmaa,lzufxbj,lzu7pt3,lztvtu4,lzv20jv,lzvmp1i,lztv52p,lzuca51,lzu14er,lzukmkn,lzu03q6,lztyism,lztvnv0,lzuxujh,lztv8j1,lztxfyf,lzudln3,lzu0lc6,lztxn9m,lztvbso,lzuo7jw,lztvat3,lzu1j1c,lzujovj,lzuhoh0,lzvdlvw,lzu2kwf,lzu257r,lztzpt7,lzuqgvb,lzuvoa7,lzv57tz
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '47614'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksemo4ehi.2.1741471475731.Z0FBQUFBQm56TDcwNGNvMUtMalJXUENBVlhGRlEwdjJxeDRIcno3ZUMzSE1LTzQwa3ZCRWpRSHluQVdUcDk2ekZBalZrTWJYbkFxNXZtbG1hZWI1eUFFRUNlQzdzZ0hBTUl1U0NNdHBJbm1pNjNEV0VibWhEVjhNSU9scGQ0NUd2R2pKd3ZkUGFnTHM;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:36
        GMT; secure, session_tracker=hhlhkkmjccjcjcofpk.0.1741471475844.Z0FBQUFBQm56TDcwS0RuamljS3N0SkxMek0xSUJXT21hS1dhOFZ6VXVzdE8tcGg3eVpsaGVHb2FvOGpjRC1Bb05Yd0tpSXlOMnJaczlNWS1sd3BrcExMX2NNSmMzY3E1LUFMWmVmRnlmVldPVFRkRGJZUXZCSlZxM0JxRWg3YWVIYzlyNThIV3JYX1A;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:36
        GMT; secure, edgebucket=5M2RKnUEHM9EbYsBVH; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '4'
      x-ratelimit-remaining:
      - '96.0'
      x-ratelimit-reset:
      - '324'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:36 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733072103.0, "mod_reason_by": null,
        "banned_by": null, "ups": 53, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztuvx8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "4HbQ",
        "can_mod_post": false, "created_utc": 1733029821.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 53, "author_fullname": "t2_55chxi28",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: Python]\n\n    data = [*map(int, open(''in.txt'').read().split())]\n    A,
        B = sorted(data[0::2]), sorted(data[1::2])\n    print(sum(map(lambda a, b:
        abs(a-b), A, B)),\n          sum(map(lambda a: a * B.count(a), A)))\n\nGlad
        we''re be back in business. Looking forward to learning (and teaching) new
        Python tricks for another year!\n\n*Edit:* I''ve also created a really succinct
        [solution using NumPy](https://www.reddit.com/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu2o71/).\n\nToday''s
        Python trick is on line 3: `map()` can take [multiple iterables](https://docs.python.org/3/library/functions.html#map).
        Example:\n\n    &gt;&gt;&gt; xs = [1, 2, 3]\n    &gt;&gt;&gt; ys = [4, 5,
        6]\n    &gt;&gt;&gt; list(map(lambda x, y: x + y, xs, ys))\n    [5, 7, 9]",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data
        = [*map(int, open(&amp;#39;in.txt&amp;#39;).read().split())]\nA, B = sorted(data[0::2]),
        sorted(data[1::2])\nprint(sum(map(lambda a, b: abs(a-b), A, B)),\n      sum(map(lambda
        a: a * B.count(a), A)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Glad we&amp;#39;re
        be back in business. Looking forward to learning (and teaching) new Python
        tricks for another year!&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt;
        I&amp;#39;ve also created a really succinct &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu2o71/\"&gt;solution
        using NumPy&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Today&amp;#39;s Python trick
        is on line 3: &lt;code&gt;map()&lt;/code&gt; can take &lt;a href=\"https://docs.python.org/3/library/functions.html#map\"&gt;multiple
        iterables&lt;/a&gt;. Example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;
        xs = [1, 2, 3]\n&amp;gt;&amp;gt;&amp;gt; ys = [4, 5, 6]\n&amp;gt;&amp;gt;&amp;gt;
        list(map(lambda x, y: x + y, xs, ys))\n[5, 7, 9]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztuvx8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztuvx8", "created":
        1733029821.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 13, "name": "t1_lztv2w5", "id": "lztv2w5", "parent_id":
        "t1_lztuvx8", "depth": 1, "children": ["lztv2w5", "lztvc97", "lzv65ux", "lzu9vx8",
        "lzus4f6", "lzurflo", "lzvd3w2", "lzzzjk9", "lzw63fl"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733104251.0, "mod_reason_by": null,
        "banned_by": null, "ups": 40, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztvkl1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "voidhawk42",
        "can_mod_post": false, "created_utc": 1733030154.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 40, "author_fullname": "t2_u464p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Dyalog APL]\n\n    p\u2190\u2349\u2191\u234e\u00a8\u2283\u2395nget''01.txt''1\n    +/|-\u233f{\u2375[\u234b\u2375]}\u23641\u22a2p
        \u235d part 1\n    (+/\u22a3+.\u00d7\u2218.=)/\u2193p   \u235d part 2\n\nBest
        time of the year, good luck everyone!\n\nEDIT: Alternative (slightly shorter)
        solution using the key operator - kinda APL''s equivalent of Python''s `Counter`
        class:\n\n    p\u2190\u2193\u2349\u2191\u234e\u00a8\u2283\u2395nget''01.txt''1\n    +/|-\u233f\u2191{\u2375[\u234b\u2375]}\u00a8p
        \u235d part 1\n    +/\u00d7\u2218\u2262\u2338\u2283\u2229/\u233dp     \u235d
        part 2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Dyalog APL]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p\u2190\u2349\u2191\u234e\u00a8\u2283\u2395nget&amp;#39;01.txt&amp;#39;1\n+/|-\u233f{\u2375[\u234b\u2375]}\u23641\u22a2p
        \u235d part 1\n(+/\u22a3+.\u00d7\u2218.=)/\u2193p   \u235d part 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Best
        time of the year, good luck everyone!&lt;/p&gt;\n\n&lt;p&gt;EDIT: Alternative
        (slightly shorter) solution using the key operator - kinda APL&amp;#39;s equivalent
        of Python&amp;#39;s &lt;code&gt;Counter&lt;/code&gt; class:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p\u2190\u2193\u2349\u2191\u234e\u00a8\u2283\u2395nget&amp;#39;01.txt&amp;#39;1\n+/|-\u233f\u2191{\u2375[\u234b\u2375]}\u00a8p
        \u235d part 1\n+/\u00d7\u2218\u2262\u2338\u2283\u2229/\u233dp     \u235d part
        2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvkl1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvkl1", "created":
        1733030154.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733074457.0, "mod_reason_by": null,
        "banned_by": null, "ups": 15, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu3p51", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1733034518.0, "send_replies": true,
        "parent_id": "t1_lztvkl1", "score": 15, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hey, a couple of days where I can try and do ''explain some APL'' again before
        it gets too hard. Look everyone, what jumps out? `\u2375[\u234b\u2375]` the
        sorting idiom at the heart of part 1. As always APL lines are like pipelines
        of functions, data goes in on the right of each line, comes out on the left.
        Each lines execute like  Output \u2190 third &lt;- second &lt;- first &lt;-
        data. \u235d is lamp the comment symbol. \n\nYou can try APL at https://tryapl.org/
        (it has a bar along the top for clicking the symbols, and tooltips to show
        you how to type them with backtick-prefix). And you can learn from [Stefan
        Kruger''s book on learning APL](https://xpqz.github.io/learnapl/intro.html)
        which he wrote after finding it via AdventOfCode 2015! (This code is a dense,
        codegolfy style and that''s not the only way to write APL).\n\nHere''s building
        up the lines bit by bit in Dyalog APL, using the example data, adding a command
        to the left of the line each time:\n\nLine 1: `p\u2190\u2349\u2191\u234e\u00a8\u2283\u2395nget''C:\\AdventOfCode\\2024\\day01-example.txt''1`\n\nLine
        1 in chunks right-to-left: read file as lines, eval text to numbers, change
        array shapes, store in variable `p`.\n\n          \u235d \u2395nget \"quad
        nget\" reads files, with argument 1 on its right, it reads as lines.\n          \u235d
        it returns the line data, and metadata about character encoding and line endings:\n\n          \u2395nget''C:\\AdventOfCode\\2024\\day01-example.txt''1\n    \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502
        \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u2502\n    \u2502 \u2502 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502UTF-8-NOBOM\u2502
        \u250213 10\u2502 \u2502\n    \u2502 \u2502 \u25023   4\u2502 \u25024   3\u2502
        \u25022   5\u2502 \u25021   3\u2502 \u25023   9\u2502 \u25023   3\u2502 \u2502
        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514~\u2500\u2500\u2500\u2500\u2518 \u2502\n    \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2502                       \u2502\n    \u2502
        \u2514\u220a\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                       \u2502\n    \u2514\u220a\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n          \u235d
        use \u2283 \"pick\" to get just the lines, as an array of nested arrays:\n          \u2283\u2395nget''C:\\AdventOfCode\\2024\\day01-example.txt''1\n    \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u2502\n    \u2502 \u25023   4\u2502 \u25024   3\u2502 \u25022   5\u2502 \u25021   3\u2502
        \u25023   9\u2502 \u25023   3\u2502 \u2502\n    \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n    \u2514\u220a\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n          \u235d
        use \u234e\u00a8 \"eval each\" to eval() each nested array, treats them as
        APL code, \n          \u235d and spaced numbers become arrays of numbers:\n          \u234e\u00a8\u2283\u2395nget''C:\\AdventOfCode\\2024\\day01-example.txt''1\n    \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502
        \u250c\u2192\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2510
        \u2502\n    \u2502 \u25023 4\u2502 \u25024 3\u2502 \u25022 5\u2502 \u25021
        3\u2502 \u25023 9\u2502 \u25023 3\u2502 \u2502\n    \u2502 \u2514~\u2500\u2500\u2518
        \u2514~\u2500\u2500\u2518 \u2514~\u2500\u2500\u2518 \u2514~\u2500\u2500\u2518
        \u2514~\u2500\u2500\u2518 \u2514~\u2500\u2500\u2518 \u2502\n    \u2514\u220a\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n          \u235d
        use \u2191 \"mix\" to turn nested arrays into one tall array of two columns:\n          \u2191\u234e\u00a8\u2283\u2395nget''C:\\AdventOfCode\\2024\\day01-example.txt''1\n    \u250c\u2192\u2500\u2500\u2510\n    \u21933
        4\u2502\n    \u25024 3\u2502\n    \u25022 5\u2502\n    \u25021 3\u2502\n    \u25023
        9\u2502\n    \u25023 3\u2502\n    \u2514~\u2500\u2500\u2518\n\n          \u235d
        use \u2349 \"transpose\" to turn that into one wide array of two rows:\n          \u2349\u2191\u234e\u00a8\u2283\u2395nget''C:\\AdventOfCode\\2024\\day01-example.txt''1\n    \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u21933
        4 2 1 3 3\u2502\n    \u25024 3 5 3 9 3\u2502\n    \u2514~\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n          \u235d
        \u2190 \"gets\" to assing to a variable, \"p gets the data\":\n          p\u2190\u2349\u2191\u234e\u00a8\u2283\u2395nget''C:\\AdventOfCode\\2024\\day01-example.txt''1\n\nLine
        2 in reply to this comment.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey,
        a couple of days where I can try and do &amp;#39;explain some APL&amp;#39;
        again before it gets too hard. Look everyone, what jumps out? &lt;code&gt;\u2375[\u234b\u2375]&lt;/code&gt;
        the sorting idiom at the heart of part 1. As always APL lines are like pipelines
        of functions, data goes in on the right of each line, comes out on the left.
        Each lines execute like  Output \u2190 third &amp;lt;- second &amp;lt;- first
        &amp;lt;- data. \u235d is lamp the comment symbol. &lt;/p&gt;\n\n&lt;p&gt;You
        can try APL at &lt;a href=\"https://tryapl.org/\"&gt;https://tryapl.org/&lt;/a&gt;
        (it has a bar along the top for clicking the symbols, and tooltips to show
        you how to type them with backtick-prefix). And you can learn from &lt;a href=\"https://xpqz.github.io/learnapl/intro.html\"&gt;Stefan
        Kruger&amp;#39;s book on learning APL&lt;/a&gt; which he wrote after finding
        it via AdventOfCode 2015! (This code is a dense, codegolfy style and that&amp;#39;s
        not the only way to write APL).&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s building
        up the lines bit by bit in Dyalog APL, using the example data, adding a command
        to the left of the line each time:&lt;/p&gt;\n\n&lt;p&gt;Line 1: &lt;code&gt;p\u2190\u2349\u2191\u234e\u00a8\u2283\u2395nget&amp;#39;C:\\AdventOfCode\\2024\\day01-example.txt&amp;#39;1&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Line
        1 in chunks right-to-left: read file as lines, eval text to numbers, change
        array shapes, store in variable &lt;code&gt;p&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;      \u235d
        \u2395nget &amp;quot;quad nget&amp;quot; reads files, with argument 1 on its
        right, it reads as lines.\n      \u235d it returns the line data, and metadata
        about character encoding and line endings:\n\n      \u2395nget&amp;#39;C:\\AdventOfCode\\2024\\day01-example.txt&amp;#39;1\n\u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502
        \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u2502\n\u2502 \u2502 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502UTF-8-NOBOM\u2502
        \u250213 10\u2502 \u2502\n\u2502 \u2502 \u25023   4\u2502 \u25024   3\u2502
        \u25022   5\u2502 \u25021   3\u2502 \u25023   9\u2502 \u25023   3\u2502 \u2502
        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514~\u2500\u2500\u2500\u2500\u2518 \u2502\n\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2502                       \u2502\n\u2502
        \u2514\u220a\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                       \u2502\n\u2514\u220a\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      \u235d
        use \u2283 &amp;quot;pick&amp;quot; to get just the lines, as an array of
        nested arrays:\n      \u2283\u2395nget&amp;#39;C:\\AdventOfCode\\2024\\day01-example.txt&amp;#39;1\n\u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2500\u2500\u2510
        \u2502\n\u2502 \u25023   4\u2502 \u25024   3\u2502 \u25022   5\u2502 \u25021   3\u2502
        \u25023   9\u2502 \u25023   3\u2502 \u2502\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518
        \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n\u2514\u220a\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      \u235d
        use \u234e\u00a8 &amp;quot;eval each&amp;quot; to eval() each nested array,
        treats them as APL code, \n      \u235d and spaced numbers become arrays of
        numbers:\n      \u234e\u00a8\u2283\u2395nget&amp;#39;C:\\AdventOfCode\\2024\\day01-example.txt&amp;#39;1\n\u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502
        \u250c\u2192\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2510
        \u250c\u2192\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2510 \u250c\u2192\u2500\u2500\u2510
        \u2502\n\u2502 \u25023 4\u2502 \u25024 3\u2502 \u25022 5\u2502 \u25021 3\u2502
        \u25023 9\u2502 \u25023 3\u2502 \u2502\n\u2502 \u2514~\u2500\u2500\u2518 \u2514~\u2500\u2500\u2518
        \u2514~\u2500\u2500\u2518 \u2514~\u2500\u2500\u2518 \u2514~\u2500\u2500\u2518
        \u2514~\u2500\u2500\u2518 \u2502\n\u2514\u220a\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      \u235d
        use \u2191 &amp;quot;mix&amp;quot; to turn nested arrays into one tall array
        of two columns:\n      \u2191\u234e\u00a8\u2283\u2395nget&amp;#39;C:\\AdventOfCode\\2024\\day01-example.txt&amp;#39;1\n\u250c\u2192\u2500\u2500\u2510\n\u21933
        4\u2502\n\u25024 3\u2502\n\u25022 5\u2502\n\u25021 3\u2502\n\u25023 9\u2502\n\u25023
        3\u2502\n\u2514~\u2500\u2500\u2518\n\n      \u235d use \u2349 &amp;quot;transpose&amp;quot;
        to turn that into one wide array of two rows:\n      \u2349\u2191\u234e\u00a8\u2283\u2395nget&amp;#39;C:\\AdventOfCode\\2024\\day01-example.txt&amp;#39;1\n\u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u21933
        4 2 1 3 3\u2502\n\u25024 3 5 3 9 3\u2502\n\u2514~\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u235d
        \u2190 &amp;quot;gets&amp;quot; to assing to a variable, &amp;quot;p gets
        the data&amp;quot;:\n      p\u2190\u2349\u2191\u234e\u00a8\u2283\u2395nget&amp;#39;C:\\AdventOfCode\\2024\\day01-example.txt&amp;#39;1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Line
        2 in reply to this comment.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu3p51/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu3p51", "created":
        1733034518.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733073021.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu51c4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1733035291.0, "send_replies": true,
        "parent_id": "t1_lzu3p51", "score": 7, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "NB. that APL operates on all values in an array by default, looping is often
        implicit.\n\nLine 2: `+/|-\u233f{\u2375[\u234b\u2375]}\u23641\u22a2p` read
        right to left in pieces says \"sort the rows in `p`, subtract down the columns,
        absolute value, sum. That goes through these steps:\n\n          \u235d sort
        function, applied row-wise over p, explained in more detail later:\n          {\u2375[\u234b\u2375]}\u23641
        \u22a2 p\n    \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u21931
        2 3 3 3 4\u2502\n    \u25023 3 3 4 5 9\u2502\n    \u2514~\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n          \u235d
        subtract-reduce -\u233f applied down the columns, 1-3, 2-3, etc. implicitly
        loops over every column.\n          -\u233f {\u2375[\u234b\u2375]}\u23641\u22a2p\n    \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502\u00af2
        \u00af1 0 \u00af1 \u00af2 \u00af5\u2502\n    \u2514~\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n          \u235d
        abs (absolute) value | applied to the array, implicitly loops over every value.\n          |
        -\u233f {\u2375[\u234b\u2375]}\u23641\u22a2p\n    \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u25022
        1 0 1 2 5\u2502\n    \u2514~\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \n          \u235d
        plus-reduce +/ applied across the array to sum it, implicitly loops over every
        value.\n          +/ | -\u233f {\u2375[\u234b\u2375]}\u23641\u22a2p\n      \n    11\n\nIt
        takes some practise to see where the lines split out into pieces, it''s possible
        to add spaces to make it clearer, but the Dyalog interpreter removes them
        when printing code. I am out of practise, but common patterns do catch the
        eye just like they do in other languages. / and \u233f are operators which
        take a function and run it left-right / and up-down \u233f so +/ is sum a
        vector. A lot of APL is about the shape of the data you have, e.g. number,
        1D vector, 2D matrix, 3D, 4D, up to hundreds of dimensions potentially. It
        gets more complex than I have learned, but 1D and 2D arrays (vector, matrix)
        are the bread and butter, and across or down are simple things to do on them.\n\nThe
        sort function `{\u2375[\u234b\u2375]}\u23641 \u22a2 p` is using \u234b \"grade\"
        which is halfway to sorting, it says which indices you would need to pick,
        to make an array sorted. e.g. \"to sort `nums`, take indices 4, 2, 1, 3 in
        that order\". Then nums[4], nums[2], nums[1], nums[3] can be done in APL as
        nums[4 2 1 3]. `{}` is a lambda/anonymous/inline/direct function and its magic
        arguments are always \u237a \"alpha\" from the left and \u2375 \"omega\" from
        the right. So inside `{}` \u234b\u2375 grades the right argument, \u2375[]
        indexes into it, so `{\u2375[\u234b\u2375]}` finds the indices that would
        sort it, picks those out, and so actually does sort it. But `p` has two rows,
        so that''s not quite enough...\n\n\u23641 is an adapter called rank which
        can be added to things and changes which array dimensions they operate on;
        rank 0 is each element in an array, 1 is the rows, 2 is the planes, 3 is the
        cubes, and probably a lot more detail I don''t know. It''s part of APL''s
        design of a few core functions which can be composed together and adapted
        to build up functionality for many different uses without having to write
        tons of boilerplate loops and transforms. Here, it''s adapting the sort to
        work on each row. \u22a2 is a bit of a golfing hack to break up the syntax
        so the interpreter can parse it properly, to avoid wrapping things in parens
        or defining the function with a name before using it.\n\nLine 3 in reply to
        this comment.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;NB.
        that APL operates on all values in an array by default, looping is often implicit.&lt;/p&gt;\n\n&lt;p&gt;Line
        2: &lt;code&gt;+/|-\u233f{\u2375[\u234b\u2375]}\u23641\u22a2p&lt;/code&gt;
        read right to left in pieces says &amp;quot;sort the rows in &lt;code&gt;p&lt;/code&gt;,
        subtract down the columns, absolute value, sum. That goes through these steps:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;      \u235d
        sort function, applied row-wise over p, explained in more detail later:\n      {\u2375[\u234b\u2375]}\u23641
        \u22a2 p\n\u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u21931
        2 3 3 3 4\u2502\n\u25023 3 3 4 5 9\u2502\n\u2514~\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      \u235d
        subtract-reduce -\u233f applied down the columns, 1-3, 2-3, etc. implicitly
        loops over every column.\n      -\u233f {\u2375[\u234b\u2375]}\u23641\u22a2p\n\u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u00af2
        \u00af1 0 \u00af1 \u00af2 \u00af5\u2502\n\u2514~\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      \u235d
        abs (absolute) value | applied to the array, implicitly loops over every value.\n      |
        -\u233f {\u2375[\u234b\u2375]}\u23641\u22a2p\n\u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25022
        1 0 1 2 5\u2502\n\u2514~\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      \u235d
        plus-reduce +/ applied across the array to sum it, implicitly loops over every
        value.\n      +/ | -\u233f {\u2375[\u234b\u2375]}\u23641\u22a2p\n\n11\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It
        takes some practise to see where the lines split out into pieces, it&amp;#39;s
        possible to add spaces to make it clearer, but the Dyalog interpreter removes
        them when printing code. I am out of practise, but common patterns do catch
        the eye just like they do in other languages. / and \u233f are operators which
        take a function and run it left-right / and up-down \u233f so +/ is sum a
        vector. A lot of APL is about the shape of the data you have, e.g. number,
        1D vector, 2D matrix, 3D, 4D, up to hundreds of dimensions potentially. It
        gets more complex than I have learned, but 1D and 2D arrays (vector, matrix)
        are the bread and butter, and across or down are simple things to do on them.&lt;/p&gt;\n\n&lt;p&gt;The
        sort function &lt;code&gt;{\u2375[\u234b\u2375]}\u23641 \u22a2 p&lt;/code&gt;
        is using \u234b &amp;quot;grade&amp;quot; which is halfway to sorting, it
        says which indices you would need to pick, to make an array sorted. e.g. &amp;quot;to
        sort &lt;code&gt;nums&lt;/code&gt;, take indices 4, 2, 1, 3 in that order&amp;quot;.
        Then nums[4], nums[2], nums[1], nums[3] can be done in APL as nums[4 2 1 3].
        &lt;code&gt;{}&lt;/code&gt; is a lambda/anonymous/inline/direct function and
        its magic arguments are always \u237a &amp;quot;alpha&amp;quot; from the left
        and \u2375 &amp;quot;omega&amp;quot; from the right. So inside &lt;code&gt;{}&lt;/code&gt;
        \u234b\u2375 grades the right argument, \u2375[] indexes into it, so &lt;code&gt;{\u2375[\u234b\u2375]}&lt;/code&gt;
        finds the indices that would sort it, picks those out, and so actually does
        sort it. But &lt;code&gt;p&lt;/code&gt; has two rows, so that&amp;#39;s not
        quite enough...&lt;/p&gt;\n\n&lt;p&gt;\u23641 is an adapter called rank which
        can be added to things and changes which array dimensions they operate on;
        rank 0 is each element in an array, 1 is the rows, 2 is the planes, 3 is the
        cubes, and probably a lot more detail I don&amp;#39;t know. It&amp;#39;s part
        of APL&amp;#39;s design of a few core functions which can be composed together
        and adapted to build up functionality for many different uses without having
        to write tons of boilerplate loops and transforms. Here, it&amp;#39;s adapting
        the sort to work on each row. \u22a2 is a bit of a golfing hack to break up
        the syntax so the interpreter can parse it properly, to avoid wrapping things
        in parens or defining the function with a name before using it.&lt;/p&gt;\n\n&lt;p&gt;Line
        3 in reply to this comment.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu51c4/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu51c4", "created":
        1733035291.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_lzu5xwx", "id": "lzu5xwx", "parent_id":
        "t1_lzu51c4", "depth": 3, "children": ["lzu5xwx", "lzu9jtv"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 18, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztw15k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733030385.0, "send_replies": true,
        "parent_id": "t1_lztvkl1", "score": 18, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ah yes, the Alien Programming Languages are back.  Good to see you again!  &lt;3",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ah yes, the Alien Programming
        Languages are back.  Good to see you again!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztw15k/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztw15k", "created":
        1733030385.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 2, "name": "t1_lzybtot", "id": "lzybtot",
        "parent_id": "t1_lztvkl1", "depth": 1, "children": ["lzybtot", "lzuoi5m"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1733108363.0,
        "mod_reason_by": null, "banned_by": null, "ups": 39, "num_reports": null,
        "author_flair_type": "text", "total_awards_received": 0, "subreddit": "adventofcode",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "lzu585x", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow":
        false, "author": "MrPingouin1", "can_mod_post": false, "created_utc": 1733035404.0,
        "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 39, "author_fullname":
        "t2_ez3hn", "report_reasons": null, "approved_by": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: Minecraft Commands]\n\n    scoreboard
        players set SOL VAR 0\n    function token:parselines {out:\"aoc out\",in:\"aoc
        input\",model:\"N{a}SN{b}\"}\n\n    data modify storage temp arr.a set value
        []\n    data modify storage temp arr.b set value []\n    function iter:array
        {in:\"aoc out\",f:\"aoc:sol/day1/fill_array\"}\n\n    function iter:util/sort_int
        {in:\"temp arr.a\"}\n    execute if score PART AOC matches 1 run function
        iter:util/sort_int {in:\"temp arr.b\"}\n    execute if score PART AOC matches
        2 run function iter:tool/counter {in:\"temp arr.b\",out:\"temp obj.b\"}\n\n    execute
        if score PART AOC matches 1 run function iter:tool/zip {in:\"temp arr.a\",
        in2:\"temp arr.b\",f:\"aoc:sol/day1/sum_dist\"}\n    execute if score PART
        AOC matches 2 run function iter:array {in:\"temp arr.a\", f:\"aoc:sol/day1/similarity\"}\n\n    function
        aoc:core/submit_score {path:\"SOL VAR\"}\n\n    #function aoc:sol/day1/fill_array\n    $data
        modify storage temp v set value $(v)\n    data modify storage temp arr.a append
        from storage temp v.a.data\n    data modify storage temp arr.b append from
        storage temp v.b.data\n\n    #function aoc:sol/day1/sum_dist\n    $scoreboard
        players set A VAR $(v)\n    $scoreboard players set B VAR $(v2)\n\n    scoreboard
        players operation A VAR -= B VAR\n    execute if score A VAR matches ..-1
        run scoreboard players operation A VAR *= -1 CONST\n    scoreboard players
        operation SOL VAR += A VAR\n\n    #function aoc:sol/day1/similarity\n    $scoreboard
        players set A VAR $(v)\n\n    scoreboard players set B VAR 0\n    $execute
        store result score B VAR run data get storage temp obj.b.$(v)\n\n    scoreboard
        players operation A VAR *= B VAR\n    scoreboard players operation SOL VAR
        += A VAR\n\n~~repo is coming soon~~~\nedit : here it is : [aoc 2024](https://github.com/MrPingouinMC/aoc2024/tree/main/function/sol/day1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Minecraft
        Commands]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;scoreboard players set SOL VAR
        0\nfunction token:parselines {out:&amp;quot;aoc out&amp;quot;,in:&amp;quot;aoc
        input&amp;quot;,model:&amp;quot;N{a}SN{b}&amp;quot;}\n\ndata modify storage
        temp arr.a set value []\ndata modify storage temp arr.b set value []\nfunction
        iter:array {in:&amp;quot;aoc out&amp;quot;,f:&amp;quot;aoc:sol/day1/fill_array&amp;quot;}\n\nfunction
        iter:util/sort_int {in:&amp;quot;temp arr.a&amp;quot;}\nexecute if score PART
        AOC matches 1 run function iter:util/sort_int {in:&amp;quot;temp arr.b&amp;quot;}\nexecute
        if score PART AOC matches 2 run function iter:tool/counter {in:&amp;quot;temp
        arr.b&amp;quot;,out:&amp;quot;temp obj.b&amp;quot;}\n\nexecute if score PART
        AOC matches 1 run function iter:tool/zip {in:&amp;quot;temp arr.a&amp;quot;,
        in2:&amp;quot;temp arr.b&amp;quot;,f:&amp;quot;aoc:sol/day1/sum_dist&amp;quot;}\nexecute
        if score PART AOC matches 2 run function iter:array {in:&amp;quot;temp arr.a&amp;quot;,
        f:&amp;quot;aoc:sol/day1/similarity&amp;quot;}\n\nfunction aoc:core/submit_score
        {path:&amp;quot;SOL VAR&amp;quot;}\n\n#function aoc:sol/day1/fill_array\n$data
        modify storage temp v set value $(v)\ndata modify storage temp arr.a append
        from storage temp v.a.data\ndata modify storage temp arr.b append from storage
        temp v.b.data\n\n#function aoc:sol/day1/sum_dist\n$scoreboard players set
        A VAR $(v)\n$scoreboard players set B VAR $(v2)\n\nscoreboard players operation
        A VAR -= B VAR\nexecute if score A VAR matches ..-1 run scoreboard players
        operation A VAR *= -1 CONST\nscoreboard players operation SOL VAR += A VAR\n\n#function
        aoc:sol/day1/similarity\n$scoreboard players set A VAR $(v)\n\nscoreboard
        players set B VAR 0\n$execute store result score B VAR run data get storage
        temp obj.b.$(v)\n\nscoreboard players operation A VAR *= B VAR\nscoreboard
        players operation SOL VAR += A VAR\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;del&gt;repo
        is coming soon&lt;/del&gt;~\nedit : here it is : &lt;a href=\"https://github.com/MrPingouinMC/aoc2024/tree/main/function/sol/day1\"&gt;aoc
        2024&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu585x/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu585x", "created":
        1733035404.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 12, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu6qm2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733036307.0, "send_replies": true,
        "parent_id": "t1_lzu585x", "score": 12, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; [LANGUAGE: Minecraft Commands]\n\nAdvent of Playing With Your Toys",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;[LANGUAGE:
        Minecraft Commands]&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Advent of Playing
        With Your Toys&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu6qm2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu6qm2", "created":
        1733036307.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 3, "name": "t1_lzua2nh", "id": "lzua2nh",
        "parent_id": "t1_lzu585x", "depth": 1, "children": ["lzua2nh", "lzziu7g"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1733078838.0,
        "mod_reason_by": null, "banned_by": null, "ups": 33, "num_reports": null,
        "author_flair_type": "text", "total_awards_received": 0, "subreddit": "adventofcode",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "lzuk4ws", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow":
        false, "author": "Smylers", "can_mod_post": false, "created_utc": 1733045052.0,
        "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 33, "author_fullname":
        "t2_13cudg", "report_reasons": null, "approved_by": null, "all_awardings":
        [], "collapsed": false, "body": "\\[LANGUAGE: Vim\\] Hello again, everybody.
        Nice to see you all again.\n\nTo solve part\u00a01, load your input into Vim
        and then type:\n\n    :sor n\u27e8Enter\u27e9\n    \u27e8Ctrl+V\u27e9Gwhd@:P\n    :%s/\\v(\\d+)\\s+(\\d+)/\\=submatch(1)-submatch(2)\u27e8Enter\u27e9\n    :%s/^-*/+\u27e8Enter\u27e9\n    vipJ0C\u27e8Ctrl+R\u27e9=\u27e8Ctrl+R\u27e9-\u27e8Enter\u27e9\u27e8Esc\u27e9\n\nThe
        best way of seeing how it works is to **give it a go** \u2014 type in the
        above and watch what happens as you type. Today''s isn''t very long, and is
        pretty forgiving (you can use backspace in the long command without messing
        anything up).\n\nThose lines in order:\n\n1. Sort the whole input numerically,
        which effectively means sorting the list on the left.\n2. Delete that sorted
        list, then sort the remaining input (the list on the right), and put the deleted
        lift back where it was. We now have both lists sorted. Note that `@:` repeats
        the most recent `:` command, in this case the `:sort` (and is very easy to
        type on UK keyboards, where `@` is to the right of `:`!).\n3. On each line,
        find a sequence of digits `(\\d+)`, some spaces `\\s+`, and some more digits.
        The parens around each digit group make them available as numbered submatches.
        Substitute the whole line with an expression (indicated by starting the replacement
        with `\\=`) which subtracts one submatch from the other.\n4. Some of those
        subtractions will have yielded negative numbers. We want the absolute value.
        The simplest way of getting absolute values in Vim is to remember that we''re
        dealing with text, so just substitute away the minus signs. Also, we want
        to add all these numbers together, so put a `+` at the start of each line.
        We can do both of these things at once by replacing zero or more minus signs
        at the start of a line `^-*` with a `+`.\n5. Join all the lines together so
        we have a single sum to evaluate. Then evaluate it: `0C` deletes the entire
        line, storing the deleted text in the small delete register `\"-.` It also
        switches to insert mode, where typing `\u27e8Ctrl+R\u27e9=` instructs Vim
        to prompt for an expression, evaluate it, and insert the result. At that prompt
        `\u27e8Ctrl+R\u27e9-` inserts the contents of the `\"-` register, the text
        that we''ve just deleted from the line. Hence we get Vim to do our arithmetic
        for us, and the buffer is left with your part\u00a01 answer.\n\nI suspect
        the \u2018evaluate the arithmetic in this line\u2019 pattern will crop up
        a few times more this Advent of Code.\n\nFor **part\u00a02** I used the traditional
        Unix command `uniq` along with Vim.  The entire solution still fits in the
        [IBM punchcard limit](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines/#wiki_how_to_determine_if_your_code_is_oversized)
        \u2014 reset your input to its initial state and type:\n\n    w\u27e8Ctrl+V\u27e9}dG2o\u27e8Esc\u27e9p:%s/
        \\+\u27e8Enter\u27e9\n    vip:sor|''&lt;,''&gt;!uniq -c\u27e8Enter\u27e9Gvip@:\n    :sor/\\d
        /|%!uniq -Df1\u27e8Enter\u27e9:g/^/j\u27e8Enter\u27e9\n    :%s/\\v(\\d+) (\\d+)
        (\\d+).*/+\\2*\\1*\\3\u27e8Enter\u27e9\n    vipJ0C\u27e8Ctrl+R\u27e9=\u27e8Ctrl+R\u27e9-\u27e8Enter\u27e9\u27e8Esc\u27e9\n\n1.
        Delete the list on the right, and put it at the bottom, after a blank line.
        Remove the spaces that were separating the lists. So now we have one list
        followed by the other, both as just numbers.\n2. Sort the first list, then
        use `uniq -c` to merge identical lines in it together, prepending them with
        a count of how many there were. Go to the bottom and repeat with the second
        list.\n3. Sort the entire file \u2014 merging the two lists together \u2014
        by location number; that is, use `:sort/\\d\u00a0/` to skip past the count
        at the start of the lines for sorting purposes. Then use `uniq -D` to filter
        the output to just location numbers that appear in both lists;  again, skip
        over the count for the purpose of finding duplicates, this time with `-f1`
        to ignore the first field. What remains will be pairs of lines with identical
        location codes, the first prepended by its count in the left list, the second
        by its count in the right list. Use `:g/^/j` to merge each line with the one
        following it, so we have a single line for each location.\n4. Use `:s///`
        to re-arrange each line so instead of `count1 location count2 location` (where
        both locations are the same) we have `+location*count1*count2`.\n5. Told you
        that pattern for doing arithmetic would crop up again! That''s exactly the
        same as the final line for part\u00a01.\n\nI expect many days'' puzzles won''t
        lend themselves to being solved in Vim, but I''ll use it where it''s plausible.
        This isn''t just silliness or for the sake of it: many [one-off](https://notoneoffbritishisms.com/2011/02/19/one-off/)
        real-world tasks that involve transforming data in some way can be achieved
        in Vim more efficiently than writing (and debugging) a program that''s only
        going to run once.\n\n**Edit:** Fixed typo, per comment below.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Vim] Hello again, everybody.
        Nice to see you all again.&lt;/p&gt;\n\n&lt;p&gt;To solve part\u00a01, load
        your input into Vim and then type:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;:sor
        n\u27e8Enter\u27e9\n\u27e8Ctrl+V\u27e9Gwhd@:P\n:%s/\\v(\\d+)\\s+(\\d+)/\\=submatch(1)-submatch(2)\u27e8Enter\u27e9\n:%s/^-*/+\u27e8Enter\u27e9\nvipJ0C\u27e8Ctrl+R\u27e9=\u27e8Ctrl+R\u27e9-\u27e8Enter\u27e9\u27e8Esc\u27e9\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The
        best way of seeing how it works is to &lt;strong&gt;give it a go&lt;/strong&gt;
        \u2014 type in the above and watch what happens as you type. Today&amp;#39;s
        isn&amp;#39;t very long, and is pretty forgiving (you can use backspace in
        the long command without messing anything up).&lt;/p&gt;\n\n&lt;p&gt;Those
        lines in order:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Sort the whole input numerically,
        which effectively means sorting the list on the left.&lt;/li&gt;\n&lt;li&gt;Delete
        that sorted list, then sort the remaining input (the list on the right), and
        put the deleted lift back where it was. We now have both lists sorted. Note
        that &lt;code&gt;@:&lt;/code&gt; repeats the most recent &lt;code&gt;:&lt;/code&gt;
        command, in this case the &lt;code&gt;:sort&lt;/code&gt; (and is very easy
        to type on UK keyboards, where &lt;code&gt;@&lt;/code&gt; is to the right
        of &lt;code&gt;:&lt;/code&gt;!).&lt;/li&gt;\n&lt;li&gt;On each line, find
        a sequence of digits &lt;code&gt;(\\d+)&lt;/code&gt;, some spaces &lt;code&gt;\\s+&lt;/code&gt;,
        and some more digits. The parens around each digit group make them available
        as numbered submatches. Substitute the whole line with an expression (indicated
        by starting the replacement with &lt;code&gt;\\=&lt;/code&gt;) which subtracts
        one submatch from the other.&lt;/li&gt;\n&lt;li&gt;Some of those subtractions
        will have yielded negative numbers. We want the absolute value. The simplest
        way of getting absolute values in Vim is to remember that we&amp;#39;re dealing
        with text, so just substitute away the minus signs. Also, we want to add all
        these numbers together, so put a &lt;code&gt;+&lt;/code&gt; at the start of
        each line. We can do both of these things at once by replacing zero or more
        minus signs at the start of a line &lt;code&gt;^-*&lt;/code&gt; with a &lt;code&gt;+&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Join
        all the lines together so we have a single sum to evaluate. Then evaluate
        it: &lt;code&gt;0C&lt;/code&gt; deletes the entire line, storing the deleted
        text in the small delete register &lt;code&gt;&amp;quot;-.&lt;/code&gt; It
        also switches to insert mode, where typing &lt;code&gt;\u27e8Ctrl+R\u27e9=&lt;/code&gt;
        instructs Vim to prompt for an expression, evaluate it, and insert the result.
        At that prompt &lt;code&gt;\u27e8Ctrl+R\u27e9-&lt;/code&gt; inserts the contents
        of the &lt;code&gt;&amp;quot;-&lt;/code&gt; register, the text that we&amp;#39;ve
        just deleted from the line. Hence we get Vim to do our arithmetic for us,
        and the buffer is left with your part\u00a01 answer.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;I
        suspect the \u2018evaluate the arithmetic in this line\u2019 pattern will
        crop up a few times more this Advent of Code.&lt;/p&gt;\n\n&lt;p&gt;For &lt;strong&gt;part\u00a02&lt;/strong&gt;
        I used the traditional Unix command &lt;code&gt;uniq&lt;/code&gt; along with
        Vim.  The entire solution still fits in the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines/#wiki_how_to_determine_if_your_code_is_oversized\"&gt;IBM
        punchcard limit&lt;/a&gt; \u2014 reset your input to its initial state and
        type:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;w\u27e8Ctrl+V\u27e9}dG2o\u27e8Esc\u27e9p:%s/
        \\+\u27e8Enter\u27e9\nvip:sor|&amp;#39;&amp;lt;,&amp;#39;&amp;gt;!uniq -c\u27e8Enter\u27e9Gvip@:\n:sor/\\d
        /|%!uniq -Df1\u27e8Enter\u27e9:g/^/j\u27e8Enter\u27e9\n:%s/\\v(\\d+) (\\d+)
        (\\d+).*/+\\2*\\1*\\3\u27e8Enter\u27e9\nvipJ0C\u27e8Ctrl+R\u27e9=\u27e8Ctrl+R\u27e9-\u27e8Enter\u27e9\u27e8Esc\u27e9\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Delete
        the list on the right, and put it at the bottom, after a blank line. Remove
        the spaces that were separating the lists. So now we have one list followed
        by the other, both as just numbers.&lt;/li&gt;\n&lt;li&gt;Sort the first list,
        then use &lt;code&gt;uniq -c&lt;/code&gt; to merge identical lines in it together,
        prepending them with a count of how many there were. Go to the bottom and
        repeat with the second list.&lt;/li&gt;\n&lt;li&gt;Sort the entire file \u2014
        merging the two lists together \u2014 by location number; that is, use &lt;code&gt;:sort/\\d\u00a0/&lt;/code&gt;
        to skip past the count at the start of the lines for sorting purposes. Then
        use &lt;code&gt;uniq -D&lt;/code&gt; to filter the output to just location
        numbers that appear in both lists;  again, skip over the count for the purpose
        of finding duplicates, this time with &lt;code&gt;-f1&lt;/code&gt; to ignore
        the first field. What remains will be pairs of lines with identical location
        codes, the first prepended by its count in the left list, the second by its
        count in the right list. Use &lt;code&gt;:g/^/j&lt;/code&gt; to merge each
        line with the one following it, so we have a single line for each location.&lt;/li&gt;\n&lt;li&gt;Use
        &lt;code&gt;:s///&lt;/code&gt; to re-arrange each line so instead of &lt;code&gt;count1
        location count2 location&lt;/code&gt; (where both locations are the same)
        we have &lt;code&gt;+location*count1*count2&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Told
        you that pattern for doing arithmetic would crop up again! That&amp;#39;s
        exactly the same as the final line for part\u00a01.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;I
        expect many days&amp;#39; puzzles won&amp;#39;t lend themselves to being solved
        in Vim, but I&amp;#39;ll use it where it&amp;#39;s plausible. This isn&amp;#39;t
        just silliness or for the sake of it: many &lt;a href=\"https://notoneoffbritishisms.com/2011/02/19/one-off/\"&gt;one-off&lt;/a&gt;
        real-world tasks that involve transforming data in some way can be achieved
        in Vim more efficiently than writing (and debugging) a program that&amp;#39;s
        only going to run once.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;
        Fixed typo, per comment below.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuk4ws/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzuk4ws", "created": 1733045052.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 10, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzukfnt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733045254.0, "send_replies": true,
        "parent_id": "t1_lzuk4ws", "score": 10, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "OH BOY you''re back with your HEINOUS ABUSE OF VIM!  &lt;3  Good to see you
        again!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OH
        BOY you&amp;#39;re back with your HEINOUS ABUSE OF VIM!  &amp;lt;3  Good to
        see you again!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzukfnt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzukfnt", "created":
        1733045254.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 6, "name": "t1_lzumxfk", "id": "lzumxfk",
        "parent_id": "t1_lzuk4ws", "depth": 1, "children": ["lzumxfk", "m009yy2",
        "lzvm96u"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1733069230.0,
        "mod_reason_by": null, "banned_by": null, "ups": 27, "num_reports": null,
        "author_flair_type": "text", "total_awards_received": 0, "subreddit": "adventofcode",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "lzu2o71", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow":
        false, "author": "4HbQ", "can_mod_post": false, "created_utc": 1733033929.0,
        "send_replies": true, "parent_id": "t3_1h3vp6n", "score": 27, "author_fullname":
        "t2_55chxi28", "report_reasons": null, "approved_by": null, "all_awardings":
        [], "collapsed": false, "body": "[LANGUAGE: Python + NumPy]\n\n    from numpy
        import loadtxt, sort, isin\n    \n    A, B = sort(loadtxt(''in.txt'', int).T)\n    print(sum(abs(A
        - B)),\n          sum(isin(B, A) * B))\n\nI''ve already posted a [version
        without NumPy](https://www.reddit.com/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztuvx8/),
        but I really like how succinct the NumPy one is :-)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python + NumPy]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        numpy import loadtxt, sort, isin\n\nA, B = sort(loadtxt(&amp;#39;in.txt&amp;#39;,
        int).T)\nprint(sum(abs(A - B)),\n      sum(isin(B, A) * B))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve
        already posted a &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztuvx8/\"&gt;version
        without NumPy&lt;/a&gt;, but I really like how succinct the NumPy one is :-)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu2o71/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu2o71", "created":
        1733033929.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_lzwqzcw", "id": "lzwqzcw", "parent_id":
        "t1_lzu2o71", "depth": 1, "children": ["lzwqzcw", "lzw9ik9"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 20, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztusuo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "jonathan_paulson",
        "can_mod_post": false, "created_utc": 1733029780.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 20, "author_fullname": "t2_k7ou5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python3\\]\n\nPlaced 25/40. [Code](https://github.com/jonathanpaulson/AdventOfCode/blob/master/2024/1.py).
        [Video](https://youtu.be/ym1ae-vBy6g). Wow, everyone is fast!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python3]&lt;/p&gt;\n\n&lt;p&gt;Placed
        25/40. &lt;a href=\"https://github.com/jonathanpaulson/AdventOfCode/blob/master/2024/1.py\"&gt;Code&lt;/a&gt;.
        &lt;a href=\"https://youtu.be/ym1ae-vBy6g\"&gt;Video&lt;/a&gt;. Wow, everyone
        is fast!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztusuo/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztusuo", "created":
        1733029780.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lztxps7", "id": "lztxps7", "parent_id":
        "t1_lztusuo", "depth": 1, "children": ["lztxps7", "lzu9p04"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 16, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu0r1q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "JustinHuPrime",
        "can_mod_post": false, "created_utc": 1733032855.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 16, "author_fullname": "t2_1xbtco41",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[Language: x86\\_64 assembly with Linux syscalls\\]\n\n[Part
        1](https://github.com/JustinHuPrime/AoC/blob/main/2024/1a.s) was a bit surprising
        in terms of difficulty, but then again I haven''t programmed in assembly since
        last year''s AoC. I thought I would have to do some stuff with dynamic allocation
        to get a large enough buffer to fit, but I did allow myself to succumb to
        the C programmers'' disease and just allocate a static buffer I know will
        be large enough for both the example and the actual input (as a reminder,
        I''m requiring my solutions to work with both the example and actual input
        without any modifications). I did find it mildly surprising that we were asked
        to sort a list of numbers - don''t the contest organizers know that''s quite
        painful to do in assembly unless you''ve got a library function ready to go
        for that? The absolute value part was fun - I got to use a branchless programming
        trick and issue a conditional move to do that (x86\\_64 doesn''t have an integer
        absolute value instruction).\n\n[Part 2](https://github.com/JustinHuPrime/AoC/blob/main/2024/1b.s)
        was actually fairly nice once I realized that the left list shouldn''t be
        deduplicated - I guess the fundamentals of programming puzzles remains the
        same, regardless of language: read the problem and examples thoroughly. I
        also got to do an interesting thing - I zero-terminated my data storage so
        I could avoid running off the end of the allocated space.\n\nPart 1 and part
        2 run in about 1 millisecond. Part 1 is 8376 bytes and part 2 is 8592 bytes.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: x86_64 assembly
        with Linux syscalls]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/JustinHuPrime/AoC/blob/main/2024/1a.s\"&gt;Part
        1&lt;/a&gt; was a bit surprising in terms of difficulty, but then again I
        haven&amp;#39;t programmed in assembly since last year&amp;#39;s AoC. I thought
        I would have to do some stuff with dynamic allocation to get a large enough
        buffer to fit, but I did allow myself to succumb to the C programmers&amp;#39;
        disease and just allocate a static buffer I know will be large enough for
        both the example and the actual input (as a reminder, I&amp;#39;m requiring
        my solutions to work with both the example and actual input without any modifications).
        I did find it mildly surprising that we were asked to sort a list of numbers
        - don&amp;#39;t the contest organizers know that&amp;#39;s quite painful to
        do in assembly unless you&amp;#39;ve got a library function ready to go for
        that? The absolute value part was fun - I got to use a branchless programming
        trick and issue a conditional move to do that (x86_64 doesn&amp;#39;t have
        an integer absolute value instruction).&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/JustinHuPrime/AoC/blob/main/2024/1b.s\"&gt;Part
        2&lt;/a&gt; was actually fairly nice once I realized that the left list shouldn&amp;#39;t
        be deduplicated - I guess the fundamentals of programming puzzles remains
        the same, regardless of language: read the problem and examples thoroughly.
        I also got to do an interesting thing - I zero-terminated my data storage
        so I could avoid running off the end of the allocated space.&lt;/p&gt;\n\n&lt;p&gt;Part
        1 and part 2 run in about 1 millisecond. Part 1 is 8376 bytes and part 2 is
        8592 bytes.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu0r1q/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu0r1q", "created":
        1733032855.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu3dh2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733034331.0, "send_replies": true,
        "parent_id": "t1_lzu0r1q", "score": 7, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; [Language: x86_64 assembly with Linux syscalls]\n\nOoo yeah, the assembly
        guy is back for more this year!  Good to see you again! &lt;3", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;[Language: x86_64 assembly
        with Linux syscalls]&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Ooo yeah,
        the assembly guy is back for more this year!  Good to see you again! &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu3dh2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu3dh2", "created":
        1733034331.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 5, "name": "t1_lzu51ks", "id": "lzu51ks",
        "parent_id": "t1_lzu0r1q", "depth": 1, "children": ["lzu51ks", "lzvd5o6"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 15, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztw44y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "bofstein",
        "can_mod_post": false, "created_utc": 1733030425.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 15, "author_fullname": "t2_du257", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Google Sheets\\]\n\nSolution: [https://docs.google.com/spreadsheets/d/1BQ1vefEK1RMy7PTkJygcXYM8CQmalSsegZ0WH324JZU/edit?usp=sharing](https://docs.google.com/spreadsheets/d/1BQ1vefEK1RMy7PTkJygcXYM8CQmalSsegZ0WH324JZU/edit?usp=sharing)\n\nFirst
        split into two columns `=SPLIT(A3,\" \")`  \nThen sort each column `=SORT(B:B,1,TRUE)`  \nThen
        a new column for the difference, realizing after the sample I should do absolute
        value `=ABS(D3-E3)`\n\nFor part two, just use COUNTIF on the original column
        A to count how many times each appears in column B, then multiply those to
        the numbers, and sum that.\n\nPart 2 took me a few minutes longer than it
        should have because as I was typing =SUM( at the top, it auto suggested H4:H1002
        instead of H3:H1002 and I didn''t notice and accepted it, and couldn''t figure
        out what was wrong.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Google Sheets]&lt;/p&gt;\n\n&lt;p&gt;Solution: &lt;a href=\"https://docs.google.com/spreadsheets/d/1BQ1vefEK1RMy7PTkJygcXYM8CQmalSsegZ0WH324JZU/edit?usp=sharing\"&gt;https://docs.google.com/spreadsheets/d/1BQ1vefEK1RMy7PTkJygcXYM8CQmalSsegZ0WH324JZU/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;First
        split into two columns &lt;code&gt;=SPLIT(A3,&amp;quot; &amp;quot;)&lt;/code&gt;&lt;br/&gt;\nThen
        sort each column &lt;code&gt;=SORT(B:B,1,TRUE)&lt;/code&gt;&lt;br/&gt;\nThen
        a new column for the difference, realizing after the sample I should do absolute
        value &lt;code&gt;=ABS(D3-E3)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;For part
        two, just use COUNTIF on the original column A to count how many times each
        appears in column B, then multiply those to the numbers, and sum that.&lt;/p&gt;\n\n&lt;p&gt;Part
        2 took me a few minutes longer than it should have because as I was typing
        =SUM( at the top, it auto suggested H4:H1002 instead of H3:H1002 and I didn&amp;#39;t
        notice and accepted it, and couldn&amp;#39;t figure out what was wrong.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztw44y/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztw44y", "created":
        1733030425.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzu4jeq", "id": "lzu4jeq", "parent_id":
        "t1_lztw44y", "depth": 1, "children": ["lzu4jeq", "lzvx9e7"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733033477.0, "mod_reason_by": null,
        "banned_by": null, "ups": 13, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztvz78", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "nthistle",
        "can_mod_post": false, "created_utc": 1733030358.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 13, "author_fullname": "t2_310ezr4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Python] 11/19. Good start to the year! [paste](https://topaz.github.io/paste/#XQAAAQClAQAAAAAAAAAzHIoib6pMX4ickc1Mep93pgqtuV6rGB3/t2SKtfp5xR3hNc6GRwmjRXNiUgRBiz4gFYkm4PrDS5YAxmO7eRj0qI9WyrszuxCe5V1RunBfyr8VIAwoxnksvb1DP/q8kIGgUA9gU9ht9UlqwOpKowGq1zMhBS8xD/RLTneCO/1IndGXjZ60QufeNXJvJb6V23D/q2weVRqhpqKmxbe2ciWd1DKXtNoWYomSEWNGZX42UbKmrg03/CQFw6vwZHcD3aJ8TzTLz8F/P23wdiRkAqa/dbp2yP8NSYVM77egqSDeM3jzkKr2YmHNtA8OEcUxReX9qh+LJzpDHg+r8qisBCR19RHzAQiwXT8wAu/veOqOP/z/c4E=),
        [solve video](https://youtu.be/BMa48ib3ei8?feature=shared) ~~coming soon (once
        I remember how to use premiere...)~~", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: Python] 11/19. Good start to the year!
        &lt;a href=\"https://topaz.github.io/paste/#XQAAAQClAQAAAAAAAAAzHIoib6pMX4ickc1Mep93pgqtuV6rGB3/t2SKtfp5xR3hNc6GRwmjRXNiUgRBiz4gFYkm4PrDS5YAxmO7eRj0qI9WyrszuxCe5V1RunBfyr8VIAwoxnksvb1DP/q8kIGgUA9gU9ht9UlqwOpKowGq1zMhBS8xD/RLTneCO/1IndGXjZ60QufeNXJvJb6V23D/q2weVRqhpqKmxbe2ciWd1DKXtNoWYomSEWNGZX42UbKmrg03/CQFw6vwZHcD3aJ8TzTLz8F/P23wdiRkAqa/dbp2yP8NSYVM77egqSDeM3jzkKr2YmHNtA8OEcUxReX9qh+LJzpDHg+r8qisBCR19RHzAQiwXT8wAu/veOqOP/z/c4E=\"&gt;paste&lt;/a&gt;,
        &lt;a href=\"https://youtu.be/BMa48ib3ei8?feature=shared\"&gt;solve video&lt;/a&gt;
        &lt;del&gt;coming soon (once I remember how to use premiere...)&lt;/del&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvz78/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvz78", "created":
        1733030358.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztvz98", "id": "lztvz98", "parent_id":
        "t1_lztvz78", "depth": 1, "children": ["lztvz98"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733059323.0, "mod_reason_by": null,
        "banned_by": null, "ups": 15, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzv03wr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "bsssh",
        "can_mod_post": false, "created_utc": 1733055530.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 15, "author_fullname": "t2_up8np2tx",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[Language: TypeScript Type System (Generics)]\n\ncompile-time
        solution\n\n[Part 1](https://www.typescriptlang.org/play/?#code/JYWwDg9gTgLgBAbwLACg5wDIwPJQKICOANHAIIBGAziQMoCu5MUAhgMYwmkAmXRqAvnABmUCCDgByGJQC0zKMBgALEAFMYwVhIDcqVDACeYVXBrQYAHgAqcVQA8YqgHZdKcJ3RDlVUANoBdTlZWWwdnV3dPbz9-OABeOACAPnjUdBt7Rxc3X2AnIR84ADFgKEp4TPC3Dy8fEgA6RryCqDgAJVVy0KyImuiA-zT0OAB+U3MLDvKSAEknSh9LUmCSErKYJKSh9AAuMmDdFH0jEzmF2GtuqsjamJIAOSvsm+igkMrnvp8A+MT-FLiQwyYWeuXyhTWXQ+vSidTgjXqzUKUwqIJhtwG21GmBw+AIFnuq1K5RS0LcAEYsegxr4EctWA8iesGo0UYM0MNdnAzotJp0OHBCYk6StisSYP8sXtaY16Q9-IdjsZTGAADaKDB5ToWGhPCLlBROADmbz1bgNeSNPwSyVSHN1ZLgAAMACQIJGtSEwfgAHScbo97X5-CdWLGNDVGq1lD502FstFXslHK5MvqctMCr0KEMyoj6pgAAVmMTLo6LcaAqbHb4vncXt9-LEbVW-v87ekzYlXe7wa0MF264J0AG++1B7CoCGWYixyiuxWrU2wyqC8XSyiSL40-TfAAGQKYQ874K+cmHtpNrYpuDSswXXcHpK0Ca789JLNHHMnOAALWAYBlmiOR1q2oFNtWwGJHWJB1v41p-ACQJdtugZFOSE63DOgZtBhjrgceaEAEyYa88JNHOJH4ZOAzspyYz-oBvi4SQbREceIoMok6GrOxyacns9KKt+yoACLAOUzBOKw2rAj0IGTrBk7wYe9KkY2vy2oCHJydcqFjgO1FYXAOHqVAh4Ijh-IoTBDbmZiN5jOJknSdqm7xumooUDG9CMCw7AWBgrGbPxwyCQc2a5iY9AgEB8l2a2alGdEvx7khOkoWh4pmdhc7WcljZ0cM4aeLGArcFwFhem8mxSvsrDCVFZD3DQADqeBtL8MUWM5MBSTJMaMTqkZFiWZTDQWmpONqcxgHQGybJshwAPTLcMAB6IyRT+s3zb8ToAMzDAALKgx3DAdqAkegACsqAYegl0oEd6AAJyoC9cAHU6hxAA)
        / \n[Part 2](https://www.typescriptlang.org/play/?#code/JYWwDg9gTgLgBAbwLACg5wIIBMsBo4CyArgDYzBgkCeqAvnAGZQQhwDkMAzgLQCGUwGAAsQAU3IBjNgG5UqGFTCi4AZUqCAMsAB2ozgB4VcUQA8Yo7Vk5xOMAdoDm+DBInGzFqzbs6HAbQBdOABeOECAPhDUdCNTc0trAAMAEgQdBlEoOAAxYChbWgAdbVT0zLgAJT0YWkTo9DgAflV1GC1dAyrbfD8AOn6XCXxc-JgA8Pr0AC4w-t7B-BUA2RR5RWU1EkEABV48gwAVd3ivW3t-AOdXY89rP20iEAAjTMD8B+fXgKDQvzew76RYL1I5xW5hFJpbQZLIaG4JOAfF5QejoUrQ8oVeFeJGZWr4OZlLJdeBghFnXyBAKTJotLYwXb7fQknp9AauPwABkucA0PLZ8w5AEYeRVATSZoMVmslKpHvpQR4EbioP9BtjrCqQnBOUCQRqwkScvtSUqcY9kQT+kaSQaVVSac0VPKWZgcPoRt1MK5whM0A1Ja5pSgFLKAMIQIjaGAKg28bRUf4qK5uMleeOJn4AvX+xUnO5Gz0wK29G3Van+5oRqMx13J42jA1GZoChYN2xBQMSP3Tb0SPxsEgWBzCNjLOQh9aqCTQPSxtN3e08pc89ULxEWr7aiLavPgv6Fk12zdQEtl2zHz6q77vE8OyvT2cGPyug5+EX8uZt4hkCjUD0mvg1bRgq748kWvrjPUXYTjKygYAAcioADqACiWKhM6ICGDOUBzpsOx7PkhitO0c4AJLaGARAwL6vorAA9AxDQAHqNBOobKJR1HwKEiQAMwNAALKgQkNPxqAAEwNAArKgQriaggnoAAnEp4mJCsQA)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: TypeScript
        Type System (Generics)]&lt;/p&gt;\n\n&lt;p&gt;compile-time solution&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.typescriptlang.org/play/?#code/JYWwDg9gTgLgBAbwLACg5wDIwPJQKICOANHAIIBGAziQMoCu5MUAhgMYwmkAmXRqAvnABmUCCDgByGJQC0zKMBgALEAFMYwVhIDcqVDACeYVXBrQYAHgAqcVQA8YqgHZdKcJ3RDlVUANoBdTlZWWwdnV3dPbz9-OABeOACAPnjUdBt7Rxc3X2AnIR84ADFgKEp4TPC3Dy8fEgA6RryCqDgAJVVy0KyImuiA-zT0OAB+U3MLDvKSAEknSh9LUmCSErKYJKSh9AAuMmDdFH0jEzmF2GtuqsjamJIAOSvsm+igkMrnvp8A+MT-FLiQwyYWeuXyhTWXQ+vSidTgjXqzUKUwqIJhtwG21GmBw+AIFnuq1K5RS0LcAEYsegxr4EctWA8iesGo0UYM0MNdnAzotJp0OHBCYk6StisSYP8sXtaY16Q9-IdjsZTGAADaKDB5ToWGhPCLlBROADmbz1bgNeSNPwSyVSHN1ZLgAAMACQIJGtSEwfgAHScbo97X5-CdWLGNDVGq1lD502FstFXslHK5MvqctMCr0KEMyoj6pgAAVmMTLo6LcaAqbHb4vncXt9-LEbVW-v87ekzYlXe7wa0MF264J0AG++1B7CoCGWYixyiuxWrU2wyqC8XSyiSL40-TfAAGQKYQ874K+cmHtpNrYpuDSswXXcHpK0Ca789JLNHHMnOAALWAYBlmiOR1q2oFNtWwGJHWJB1v41p-ACQJdtugZFOSE63DOgZtBhjrgceaEAEyYa88JNHOJH4ZOAzspyYz-oBvi4SQbREceIoMok6GrOxyacns9KKt+yoACLAOUzBOKw2rAj0IGTrBk7wYe9KkY2vy2oCHJydcqFjgO1FYXAOHqVAh4Ijh-IoTBDbmZiN5jOJknSdqm7xumooUDG9CMCw7AWBgrGbPxwyCQc2a5iY9AgEB8l2a2alGdEvx7khOkoWh4pmdhc7WcljZ0cM4aeLGArcFwFhem8mxSvsrDCVFZD3DQADqeBtL8MUWM5MBSTJMaMTqkZFiWZTDQWmpONqcxgHQGybJshwAPTLcMAB6IyRT+s3zb8ToAMzDAALKgx3DAdqAkegACsqAYegl0oEd6AAJyoC9cAHU6hxAA\"&gt;Part
        1&lt;/a&gt; / \n&lt;a href=\"https://www.typescriptlang.org/play/?#code/JYWwDg9gTgLgBAbwLACg5wIIBMsBo4CyArgDYzBgkCeqAvnAGZQQhwDkMAzgLQCGUwGAAsQAU3IBjNgG5UqGFTCi4AZUqCAMsAB2ozgB4VcUQA8Yo7Vk5xOMAdoDm+DBInGzFqzbs6HAbQBdOABeOECAPhDUdCNTc0trAAMAEgQdBlEoOAAxYChbWgAdbVT0zLgAJT0YWkTo9DgAflV1GC1dAyrbfD8AOn6XCXxc-JgA8Pr0AC4w-t7B-BUA2RR5RWU1EkEABV48gwAVd3ivW3t-AOdXY89rP20iEAAjTMD8B+fXgKDQvzew76RYL1I5xW5hFJpbQZLIaG4JOAfF5QejoUrQ8oVeFeJGZWr4OZlLJdeBghFnXyBAKTJotLYwXb7fQknp9AauPwABkucA0PLZ8w5AEYeRVATSZoMVmslKpHvpQR4EbioP9BtjrCqQnBOUCQRqwkScvtSUqcY9kQT+kaSQaVVSac0VPKWZgcPoRt1MK5whM0A1Ja5pSgFLKAMIQIjaGAKg28bRUf4qK5uMleeOJn4AvX+xUnO5Gz0wK29G3Van+5oRqMx13J42jA1GZoChYN2xBQMSP3Tb0SPxsEgWBzCNjLOQh9aqCTQPSxtN3e08pc89ULxEWr7aiLavPgv6Fk12zdQEtl2zHz6q77vE8OyvT2cGPyug5+EX8uZt4hkCjUD0mvg1bRgq748kWvrjPUXYTjKygYAAcioADqACiWKhM6ICGDOUBzpsOx7PkhitO0c4AJLaGARAwL6vorAA9AxDQAHqNBOobKJR1HwKEiQAMwNAALKgQkNPxqAAEwNAArKgQriaggnoAAnEp4mJCsQA\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv03wr/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv03wr", "created":
        1733055530.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzz6c8d", "id": "lzz6c8d", "parent_id":
        "t1_lzv03wr", "depth": 1, "children": ["lzz6c8d", "lzztjeh"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733048583.0, "mod_reason_by": null,
        "banned_by": null, "ups": 12, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzup0ap", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "i_have_no_biscuits",
        "can_mod_post": false, "created_utc": 1733048358.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 12, "author_fullname": "t2_qbkju5j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: GW-BASIC\\]\n\n    \u00a0 \u00a0 10 D=1000: DIM A(D),B(D): OPEN
        \"I\",1,\"DATA01.TXT\": FOR N=1 TO D: INPUT #1,A,B\n    \u00a0 \u00a0 20 I=N:
        WHILE A&lt;A(I-1): A(I)=A(I-1): I=I-1: WEND: A(I)=A\n    \u00a0 \u00a0 30
        I=N: WHILE B&lt;B(I-1): B(I)=B(I-1): I=I-1: WEND: B(I)=B\n    \u00a0 \u00a0
        40 NEXT: FOR N=1 TO D: P#=P#+ABS(A(N)-B(N)): C=0: FOR M=1 TO D\n    \u00a0
        \u00a0 50 C=C-(B(M)=A(N)): NEXT: Q#=Q#+A(N)*C: NEXT: PRINT P#, Q# \n\nGW-BASIC
        is a dialect of BASIC developed by Microsoft which appeared on many early
        PCs from 1983 until being replaced by QBasic with the release of MSDOS 5.\n\nThis
        will run on actual hardware, but very slowly due to the inefficient code.
        I tested it using the excellent PC-BASIC emulator - [https://robhagemans.github.io/pcbasic/](https://robhagemans.github.io/pcbasic/)
        \\- and QB64 - [https://qb64.com/](https://qb64.com/) \\- which is a modern
        recreation of the QBasic programming environment which produces compiled code.\n\nGuide:\n\nLine
        10 Initialises the parallel arrays A and B, and sets up the loop reading in
        the data lines.\n\nLines 20 and 30 perform an insertion sort of the two parallel
        arrays.\n\nLines 40 and 50 iterate through the sorted data, performing the
        needed calculations. P# stores the Part 1 value, and Q# the part 2 result.
        Note that the ''#'' suffix indicates a double-precision floating point value,
        which is also good for storing large integers (just like Javascript!). Also
        note the use of a boolean addition in line 50 to avoid an IF statement (with
        the quirk that True in basic is -1, not 1).", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: GW-BASIC]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u00a0
        \u00a0 10 D=1000: DIM A(D),B(D): OPEN &amp;quot;I&amp;quot;,1,&amp;quot;DATA01.TXT&amp;quot;:
        FOR N=1 TO D: INPUT #1,A,B\n\u00a0 \u00a0 20 I=N: WHILE A&amp;lt;A(I-1): A(I)=A(I-1):
        I=I-1: WEND: A(I)=A\n\u00a0 \u00a0 30 I=N: WHILE B&amp;lt;B(I-1): B(I)=B(I-1):
        I=I-1: WEND: B(I)=B\n\u00a0 \u00a0 40 NEXT: FOR N=1 TO D: P#=P#+ABS(A(N)-B(N)):
        C=0: FOR M=1 TO D\n\u00a0 \u00a0 50 C=C-(B(M)=A(N)): NEXT: Q#=Q#+A(N)*C: NEXT:
        PRINT P#, Q# \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;GW-BASIC is a dialect
        of BASIC developed by Microsoft which appeared on many early PCs from 1983
        until being replaced by QBasic with the release of MSDOS 5.&lt;/p&gt;\n\n&lt;p&gt;This
        will run on actual hardware, but very slowly due to the inefficient code.
        I tested it using the excellent PC-BASIC emulator - &lt;a href=\"https://robhagemans.github.io/pcbasic/\"&gt;https://robhagemans.github.io/pcbasic/&lt;/a&gt;
        - and QB64 - &lt;a href=\"https://qb64.com/\"&gt;https://qb64.com/&lt;/a&gt;
        - which is a modern recreation of the QBasic programming environment which
        produces compiled code.&lt;/p&gt;\n\n&lt;p&gt;Guide:&lt;/p&gt;\n\n&lt;p&gt;Line
        10 Initialises the parallel arrays A and B, and sets up the loop reading in
        the data lines.&lt;/p&gt;\n\n&lt;p&gt;Lines 20 and 30 perform an insertion
        sort of the two parallel arrays.&lt;/p&gt;\n\n&lt;p&gt;Lines 40 and 50 iterate
        through the sorted data, performing the needed calculations. P# stores the
        Part 1 value, and Q# the part 2 result. Note that the &amp;#39;#&amp;#39;
        suffix indicates a double-precision floating point value, which is also good
        for storing large integers (just like Javascript!). Also note the use of a
        boolean addition in line 50 to avoid an IF statement (with the quirk that
        True in basic is -1, not 1).&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzup0ap/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzup0ap", "created":
        1733048358.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzv7g2l", "id": "lzv7g2l", "parent_id":
        "t1_lzup0ap", "depth": 1, "children": ["lzv7g2l", "lzxen0f"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733049507.0, "mod_reason_by": null,
        "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu6wxe", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "insert_username_0",
        "can_mod_post": false, "created_utc": 1733036416.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 10, "author_fullname": "t2_6gozn4kg",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Dyalog APL\\]\n\n    in\u2190\u23491 0 0 1/\u2395CSV\u2360''Separator''
        '' ''\u22a2''data/1.txt''\u236c4\n    +/|-\u233f({\u2375[\u234b\u2375]}\u23641)in            \u235d
        Part 1\n    in[1;]{+/\u237a\u00d7+/\u237a\u2218.=\u2375}in[2;]     \u235d
        Part 2\n\nFirst time writing actual code in APL and this was a great start!\n\nETA:
        Made Part 2 a little cleaner", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Dyalog APL]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;in\u2190\u23491 0 0 1/\u2395CSV\u2360&amp;#39;Separator&amp;#39;
        &amp;#39; &amp;#39;\u22a2&amp;#39;data/1.txt&amp;#39;\u236c4\n+/|-\u233f({\u2375[\u234b\u2375]}\u23641)in            \u235d
        Part 1\nin[1;]{+/\u237a\u00d7+/\u237a\u2218.=\u2375}in[2;]     \u235d Part
        2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;First time writing actual code in
        APL and this was a great start!&lt;/p&gt;\n\n&lt;p&gt;ETA: Made Part 2 a little
        cleaner&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu6wxe/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu6wxe", "created":
        1733036416.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 11, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu8n39",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "keldeoroks",
        "can_mod_post": false, "created_utc": 1733037488.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 11, "author_fullname": "t2_38s2x4vo",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: python]\n\nim not too experienced with coding so
        ive decided to make that the problem of anyone who decides to look at my code\n\nhttps://raw.githubusercontent.com/Keldeoroks/adventofcode2024/refs/heads/main/day%201\n\nno
        imports!!! (because i dont know any other than math!!!)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: python]&lt;/p&gt;\n\n&lt;p&gt;im
        not too experienced with coding so ive decided to make that the problem of
        anyone who decides to look at my code&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://raw.githubusercontent.com/Keldeoroks/adventofcode2024/refs/heads/main/day%201\"&gt;https://raw.githubusercontent.com/Keldeoroks/adventofcode2024/refs/heads/main/day%201&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;no
        imports!!! (because i dont know any other than math!!!)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu8n39/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu8n39", "created":
        1733037488.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 13, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu9bmq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733037918.0, "send_replies": true,
        "parent_id": "t1_lzu8n39", "score": 13, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; im not too experienced with coding\n\nWelcome!  We''re happy to have
        you!  I hope you learn a bunch of stuff this year :)\n\n&gt; so ive decided
        to make that the problem of anyone who decides to look at my code\n\nI like
        your chutzpah.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;im
        not too experienced with coding&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Welcome!  We&amp;#39;re
        happy to have you!  I hope you learn a bunch of stuff this year :)&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;so
        ive decided to make that the problem of anyone who decides to look at my code&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I
        like your chutzpah.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu9bmq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu9bmq", "created":
        1733037918.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 2, "name": "t1_m00ahdw", "id": "m00ahdw",
        "parent_id": "t1_lzu8n39", "depth": 1, "children": ["m00ahdw"]}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733048319.0, "mod_reason_by": null,
        "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzunq6b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Radiadorineitor",
        "can_mod_post": false, "created_utc": 1733047486.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 10, "author_fullname": "t2_bgx2naeg",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Dyalog APL\\]\n\n    p\u2190\u2349\u234e\u00a8\u2191\u2395D\u2218(\u220a\u2368\u2286\u22a2)\u00a8\u2283\u2395NGET''1.txt''1\n    +/|-\u233f{\u2375[\u234b\u2375]}\u23641\u22a2p
        \u235d Part 1\n    {+/\u237a\u00d7+/\u237a\u2218.=\u2375}/\u2193p \u235d Part
        2\n\nHappy coding everyone!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Dyalog APL]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p\u2190\u2349\u234e\u00a8\u2191\u2395D\u2218(\u220a\u2368\u2286\u22a2)\u00a8\u2283\u2395NGET&amp;#39;1.txt&amp;#39;1\n+/|-\u233f{\u2375[\u234b\u2375]}\u23641\u22a2p
        \u235d Part 1\n{+/\u237a\u00d7+/\u237a\u2218.=\u2375}/\u2193p \u235d Part
        2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Happy coding everyone!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzunq6b/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzunq6b", "created":
        1733047486.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzwuss7", "id": "lzwuss7", "parent_id":
        "t1_lzunq6b", "depth": 1, "children": ["lzwuss7"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733033957.0, "mod_reason_by": null,
        "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztuxe5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "DFreiberg",
        "can_mod_post": false, "created_utc": 1733029840.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 10, "author_fullname": "t2_87ozx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Mathematica]\n**[Mathematica](https://github.com/HiggstonRainbird/AoC-2024/blob/master/Day%2001/AoC%20Day%2001.m/),
        482/266**\n---\n\nI somehow read \"**smallest** number in the left list with
        the **smallest** number in the right list\" and interpreted it to mean \"**smallest**
        number in the left list with the **largest** number in the right list\", costing
        me a full minute.  I''ll blame it on not programming enough in Mathematica
        and programming too much in Rust lately; I''ve clearly gotten Rusty.\n\n**Setup:**\n\n    {left,
        right} = Transpose[input];\n\n**Part 1:**\n\n    Total[ManhattanDistance @@@
        Transpose[{Sort[left], Sort[right]}]]\n\n**Part 2:**\n\n    Total[#*Count[right,
        #] &amp; /@ left]", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Mathematica]&lt;/p&gt;\n\n&lt;h2&gt;&lt;strong&gt;&lt;a href=\"https://github.com/HiggstonRainbird/AoC-2024/blob/master/Day%2001/AoC%20Day%2001.m/\"&gt;Mathematica&lt;/a&gt;,
        482/266&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;p&gt;I somehow read &amp;quot;&lt;strong&gt;smallest&lt;/strong&gt;
        number in the left list with the &lt;strong&gt;smallest&lt;/strong&gt; number
        in the right list&amp;quot; and interpreted it to mean &amp;quot;&lt;strong&gt;smallest&lt;/strong&gt;
        number in the left list with the &lt;strong&gt;largest&lt;/strong&gt; number
        in the right list&amp;quot;, costing me a full minute.  I&amp;#39;ll blame
        it on not programming enough in Mathematica and programming too much in Rust
        lately; I&amp;#39;ve clearly gotten Rusty.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Setup:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{left,
        right} = Transpose[input];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        1:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Total[ManhattanDistance
        @@@ Transpose[{Sort[left], Sort[right]}]]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        2:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Total[#*Count[right,
        #] &amp;amp; /@ left]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztuxe5/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztuxe5", "created": 1733029840.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztv1hv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "kugelblitzka",
        "can_mod_post": false, "created_utc": 1733029896.0, "send_replies": true,
        "parent_id": "t1_lztuxe5", "score": 8, "author_fullname": "t2_39w879ce", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "guy beat me on mathematica :sob:", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;guy beat me on mathematica :sob:&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztv1hv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztv1hv", "created":
        1733029896.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztw926", "id": "lztw926", "parent_id":
        "t1_lztv1hv", "depth": 2, "children": ["lztw926"]}}, {"kind": "more", "data":
        {"count": 3, "name": "t1_lztvmak", "id": "lztvmak", "parent_id": "t1_lztuxe5",
        "depth": 1, "children": ["lztvmak", "lztv35s"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 10,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztxlix",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "light_switchy",
        "can_mod_post": false, "created_utc": 1733031179.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 10, "author_fullname": "t2_n4s7g2fl",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: Dyalog APL]\n\n    part1\u2190+\u233f|-\u233f(\u2282\u2218\u234b\u2337\u22a2)\u23641\u2349\u2191\u234e\u00a8\u2283\u2395NGET
        ''1.txt'' 1\n    part2\u2190(2\u2337s) +.\u00d7 +\u233f \u2283\u2218.=\u233f\u2193s\u2190(\u2282\u2218\u234b\u2337\u22a2)\u2349\u2191\u234e\u00a8\u2283\u2395NGET
        ''1.txt'' 1", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Dyalog APL]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part1\u2190+\u233f|-\u233f(\u2282\u2218\u234b\u2337\u22a2)\u23641\u2349\u2191\u234e\u00a8\u2283\u2395NGET
        &amp;#39;1.txt&amp;#39; 1\npart2\u2190(2\u2337s) +.\u00d7 +\u233f \u2283\u2218.=\u233f\u2193s\u2190(\u2282\u2218\u234b\u2337\u22a2)\u2349\u2191\u234e\u00a8\u2283\u2395NGET
        &amp;#39;1.txt&amp;#39; 1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxlix/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztxlix", "created": 1733031179.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztyifv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "jaybosamiya",
        "can_mod_post": false, "created_utc": 1733031657.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 9, "author_fullname": "t2_12wctb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: APL]\n\n    l\u2190{\u2375[\u234b\u2375]}\u2283\u00a8t\n    r\u2190{\u2375[\u234b\u2375]}\u2283\u00a81\u2193\u00a8t\n    +/|l-r            \u235d
        Part 1\n    +/+/l\u2218.{\u2375\u00d7\u2375=\u237a}r   \u235d Part 2\n\nFairly
        simple solution, with the only \"interesting\" bit being the outer-product
        in part 2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        APL]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;l\u2190{\u2375[\u234b\u2375]}\u2283\u00a8t\nr\u2190{\u2375[\u234b\u2375]}\u2283\u00a81\u2193\u00a8t\n+/|l-r            \u235d
        Part 1\n+/+/l\u2218.{\u2375\u00d7\u2375=\u237a}r   \u235d Part 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Fairly
        simple solution, with the only &amp;quot;interesting&amp;quot; bit being the
        outer-product in part 2&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztyifv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztyifv", "created":
        1733031657.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 11, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu4wkj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "azzal07",
        "can_mod_post": false, "created_utc": 1733035214.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 11, "author_fullname": "t2_3v7c4gll",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: awk]\n\n    function M(a,x){for(k in a)a[k]&gt;a[x]&amp;&amp;x=k;D=a[x]\n    delete
        a[x]}END{for(;M(L)D;A+=M(R)((x-D)^2)^0.5)\n    B+=D*C[x=D];print A\"\\n\"B}++C[R[NR]=$2]{L[NR]=$1}",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: awk]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        M(a,x){for(k in a)a[k]&amp;gt;a[x]&amp;amp;&amp;amp;x=k;D=a[x]\ndelete a[x]}END{for(;M(L)D;A+=M(R)((x-D)^2)^0.5)\nB+=D*C[x=D];print
        A&amp;quot;\\n&amp;quot;B}++C[R[NR]=$2]{L[NR]=$1}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu4wkj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu4wkj", "created":
        1733035214.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 11, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuyid3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "sikief",
        "can_mod_post": false, "created_utc": 1733054584.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 11, "author_fullname": "t2_13xc75", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: EXCEL\\]\n\n[https://github.com/skief/advent-of-code-2024/blob/main/src/day01.xlsx](https://github.com/skief/advent-of-code-2024/blob/main/src/day01.xlsx)\n\nThis
        year I am doing the 25 Days - 25 Languages Challenge :)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: EXCEL]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/skief/advent-of-code-2024/blob/main/src/day01.xlsx\"&gt;https://github.com/skief/advent-of-code-2024/blob/main/src/day01.xlsx&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This
        year I am doing the 25 Days - 25 Languages Challenge :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuyid3/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuyid3", "created":
        1733054584.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 10, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzz8yjs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Zachary_Peculier",
        "can_mod_post": false, "created_utc": 1733108548.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 10, "author_fullname": "t2_z6yx5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: COBOL\\]  \n[I decided to do this on hard mode.](https://github.com/zhardin98/AdventOfCode2024/blob/main/day%201/day1.cbl)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: COBOL]&lt;br/&gt;\n&lt;a
        href=\"https://github.com/zhardin98/AdventOfCode2024/blob/main/day%201/day1.cbl\"&gt;I
        decided to do this on hard mode.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzz8yjs/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzz8yjs", "created": 1733108548.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_lzzng6p", "id": "lzzng6p", "parent_id":
        "t1_lzz8yjs", "depth": 1, "children": ["lzzng6p", "lzzw3nu", "lzzbhoz", "lzzbwjd"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu03q6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "joeyGibson",
        "can_mod_post": false, "created_utc": 1733032501.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 10, "author_fullname": "t2_yggr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Common Lisp]\n\nAh, a simple one for day 1. I was also happy to
        see that part 2 wasn''t some crazy riff on part 1, and was just a simple change.
        I added memoization preemptively, to keep from having to do the counts over
        and over again. (Update: I just tried it without the memoization, and it wasn''t
        needed. Still, it''s a good habit. \ud83e\udd23)\n\n    (ql:quickload :cl-ppcre)\n    (ql:quickload
        :split-sequence)\n    (ql:quickload :lisp-utils)\n    (ql:quickload :alexandria)\n    \n    (use-package
        :lisp-utils)\n    \n    (defun parse (lines)\n      (let ((list0 nil)\n            (list1
        nil))\n        (dolist (line lines)\n          (let ((chunks (cl-ppcre:split
        \"\\\\s+\" line)))\n            (push (parse-integer (first chunks)) list0)\n            (push
        (parse-integer (second chunks)) list1)))\n        (list (sort list0 #''&lt;)\n              (sort
        list1 #''&lt;))))\n    \n    (defun compute-diffs (list0 list1)\n      (loop
        for i0 in list0\n            for i1 in list1\n            collecting (abs
        (- i0 i1))))\n    \n    (defun part1 (file-name)\n      (let ((lines (uiop:read-file-lines
        file-name)))\n        (destructuring-bind (list0 list1) (parse lines)\n          (apply
        #''+ (compute-diffs list0 list1)))))\n    \n    (defun part2 (file-name)\n      (let
        ((lines (uiop:read-file-lines file-name))\n            (count-occurrences
        (memoize (lambda (num lst)\n                                          (count
        num lst)))))\n        (destructuring-bind (list0 list1) (parse lines)\n          (apply
        #''+ (mapcar (lambda (num)\n                               (let ((occurrences
        (funcall count-occurrences num list1)))\n                                 (*
        num occurrences)))\n                             list0)))))\n    \n    (print
        (part1 \"input0.txt\"))\n    (print (part1 \"input1.txt\"))\n    \n    (print
        (part2 \"input0.txt\"))\n    (print (part2 \"input1.txt\"))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Common Lisp]&lt;/p&gt;\n\n&lt;p&gt;Ah,
        a simple one for day 1. I was also happy to see that part 2 wasn&amp;#39;t
        some crazy riff on part 1, and was just a simple change. I added memoization
        preemptively, to keep from having to do the counts over and over again. (Update:
        I just tried it without the memoization, and it wasn&amp;#39;t needed. Still,
        it&amp;#39;s a good habit. \ud83e\udd23)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ql:quickload
        :cl-ppcre)\n(ql:quickload :split-sequence)\n(ql:quickload :lisp-utils)\n(ql:quickload
        :alexandria)\n\n(use-package :lisp-utils)\n\n(defun parse (lines)\n  (let
        ((list0 nil)\n        (list1 nil))\n    (dolist (line lines)\n      (let ((chunks
        (cl-ppcre:split &amp;quot;\\\\s+&amp;quot; line)))\n        (push (parse-integer
        (first chunks)) list0)\n        (push (parse-integer (second chunks)) list1)))\n    (list
        (sort list0 #&amp;#39;&amp;lt;)\n          (sort list1 #&amp;#39;&amp;lt;))))\n\n(defun
        compute-diffs (list0 list1)\n  (loop for i0 in list0\n        for i1 in list1\n        collecting
        (abs (- i0 i1))))\n\n(defun part1 (file-name)\n  (let ((lines (uiop:read-file-lines
        file-name)))\n    (destructuring-bind (list0 list1) (parse lines)\n      (apply
        #&amp;#39;+ (compute-diffs list0 list1)))))\n\n(defun part2 (file-name)\n  (let
        ((lines (uiop:read-file-lines file-name))\n        (count-occurrences (memoize
        (lambda (num lst)\n                                      (count num lst)))))\n    (destructuring-bind
        (list0 list1) (parse lines)\n      (apply #&amp;#39;+ (mapcar (lambda (num)\n                           (let
        ((occurrences (funcall count-occurrences num list1)))\n                             (*
        num occurrences)))\n                         list0)))))\n\n(print (part1 &amp;quot;input0.txt&amp;quot;))\n(print
        (part1 &amp;quot;input1.txt&amp;quot;))\n\n(print (part2 &amp;quot;input0.txt&amp;quot;))\n(print
        (part2 &amp;quot;input1.txt&amp;quot;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu03q6/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu03q6", "created":
        1733032501.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu2yks",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "jitwit",
        "can_mod_post": false, "created_utc": 1733034094.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 9, "author_fullname": "t2_3widzzz1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: J\\]\n\n    load ''~/code/aoc/aoc.ijs''\n    ''A B'' =: in =:
        |: \". ;._2 aoc 2024 1\n    +/ | -/ /:~\"1 in   NB. part A\n    +/ A * +/\"1
        A =/ B NB. part B", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        J]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;load &amp;#39;~/code/aoc/aoc.ijs&amp;#39;\n&amp;#39;A
        B&amp;#39; =: in =: |: &amp;quot;. ;._2 aoc 2024 1\n+/ | -/ /:~&amp;quot;1
        in   NB. part A\n+/ A * +/&amp;quot;1 A =/ B NB. part B\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu2yks/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu2yks", "created":
        1733034094.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzurwhq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "0rac1e",
        "can_mod_post": false, "created_utc": 1733050319.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 9, "author_fullname": "t2_jqvvy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: J]\n\n    ''a b'' =. |: \". ''m'' fread ''input''\n\n    echo
        +/ | a -&amp;(/:~) b\n    echo +/ a * +/\"1 a =/ b", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: J]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;#39;a
        b&amp;#39; =. |: &amp;quot;. &amp;#39;m&amp;#39; fread &amp;#39;input&amp;#39;\n\necho
        +/ | a -&amp;amp;(/:~) b\necho +/ a * +/&amp;quot;1 a =/ b\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzurwhq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzurwhq", "created":
        1733050319.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733086909.0, "mod_reason_by": null,
        "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuzizu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "6745408",
        "can_mod_post": false, "created_utc": 1733055188.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 10, "author_fullname": "t2_cx877", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Google Sheets]\n\n    =SORT(LET(r,SORT(RIGHT(A:A,5)),l,SORT(LEFT(A:A,5)),{SUM(ABS(l-r));SUM(l*COUNTIF(r,l))}))\n\nedit:
        shorter formula to cover both.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Google Sheets]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=SORT(LET(r,SORT(RIGHT(A:A,5)),l,SORT(LEFT(A:A,5)),{SUM(ABS(l-r));SUM(l*COUNTIF(r,l))}))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;edit:
        shorter formula to cover both.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuzizu/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzuzizu", "created": 1733055188.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzv3wre", "id": "lzv3wre", "parent_id":
        "t1_lzuzizu", "depth": 1, "children": ["lzv3wre", "m02k2bk"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 10, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvjwvt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "0rac1e",
        "can_mod_post": false, "created_utc": 1733064554.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 10, "author_fullname": "t2_jqvvy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Raku]\n\n    my (@a, @b) := [Z] ''input''.IO.lines.map(*.words\u00bb.Int);\n\n    put
        [+] (@a.sort Z- @b.sort)\u00bb.abs;\n    put [+] @a Z\u00d7 @b.Bag{@a};",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Raku]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;my
        (@a, @b) := [Z] &amp;#39;input&amp;#39;.IO.lines.map(*.words\u00bb.Int);\n\nput
        [+] (@a.sort Z- @b.sort)\u00bb.abs;\nput [+] @a Z\u00d7 @b.Bag{@a};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvjwvt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvjwvt", "created":
        1733064554.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzwzsuu", "id": "lzwzsuu", "parent_id":
        "t1_lzvjwvt", "depth": 1, "children": ["lzwzsuu", "lzvnidc"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw1l0y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "tav_stuff",
        "can_mod_post": false, "created_utc": 1733070663.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 9, "author_fullname": "t2_16xadj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Awk\\]\n\nPart 1:\n\n    function abs(n) {\n        return n
        &lt; 0 ? -n : n\n    }\n    \n    {\n        xs[++i] = $1\n        ys[i]   =
        $2\n    }\n    \n    END {\n        asort(xs)\n        asort(ys)\n        for
        (i in xs)\n            d += abs(xs[i] - ys[i])\n        print d\n    }\n\nPart
        2:\n\n    {\n        xs[++i] = $1\n        ys[$2]++\n    }\n    \n    END
        {\n        for (i in xs)\n            d += xs[i] * ys[xs[i]]\n        print
        d\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Awk]&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        abs(n) {\n    return n &amp;lt; 0 ? -n : n\n}\n\n{\n    xs[++i] = $1\n    ys[i]   =
        $2\n}\n\nEND {\n    asort(xs)\n    asort(ys)\n    for (i in xs)\n        d
        += abs(xs[i] - ys[i])\n    print d\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n    xs[++i] = $1\n    ys[$2]++\n}\n\nEND
        {\n    for (i in xs)\n        d += xs[i] * ys[xs[i]]\n    print d\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw1l0y/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw1l0y", "created":
        1733070663.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_lzwa0uz", "id": "lzwa0uz", "parent_id":
        "t1_lzw1l0y", "depth": 1, "children": ["lzwa0uz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 10, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwo3xu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "zagon",
        "can_mod_post": false, "created_utc": 1733077666.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 10, "author_fullname": "t2_3s1uv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Vim]\n\nWhen the challenges are still easy, I try to use only
        Vim to solve them. If possible, without \"coding\" in Vimscript, but rather
        with clever ex commands like macros, movements, substitutions, etc. Worked
        fine for part 1, for part 2 I had to resort to Vimscript.\n\n[aoc.vim](https://github.com/yogan/advent-of-code/blob/main/vim/2024/day-01/aoc.vim)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Vim]&lt;/p&gt;\n\n&lt;p&gt;When
        the challenges are still easy, I try to use only Vim to solve them. If possible,
        without &amp;quot;coding&amp;quot; in Vimscript, but rather with clever ex
        commands like macros, movements, substitutions, etc. Worked fine for part
        1, for part 2 I had to resort to Vimscript.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/yogan/advent-of-code/blob/main/vim/2024/day-01/aoc.vim\"&gt;aoc.vim&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwo3xu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwo3xu", "created":
        1733077666.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzwrhf2", "id": "lzwrhf2", "parent_id":
        "t1_lzwo3xu", "depth": 1, "children": ["lzwrhf2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733045486.0, "mod_reason_by": null,
        "banned_by": null, "ups": 16, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu1d8t", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Andreasnl",
        "can_mod_post": false, "created_utc": 1733033194.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 16, "author_fullname": "t2_5q9qp6t2",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Uiua\\]\n\n        &amp;fras\"1.txt\"\n        \u2261\u00b0\u229f
        \u21af\u221e_2 \u229c\u22d5\u22b8\u2208\"0123456789\"\n        \u2283(/+\u2335-\u2229\u2346|/+\u00d7/+\u22b8\u229e=)\n\nRun
        it in a browser [here](https://uiua.org/pad?src=0_14_0-dev_5__JCAzICAgNAokIDQgICAzCiQgMiAgIDUKJCAxICAgMwokIDMgICA5CiQgMyAgIDMK4oqc4ouV4oq44oiIIjAxMjM0NTY3ODkiCuKJocKw4oqfIOKGr-KInl8yCuKKgygvK-KMtS3iiKnijYZ8LyvDly8r4oq44oqePSkK)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Uiua]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    &amp;amp;fras&amp;quot;1.txt&amp;quot;\n    \u2261\u00b0\u229f
        \u21af\u221e_2 \u229c\u22d5\u22b8\u2208&amp;quot;0123456789&amp;quot;\n    \u2283(/+\u2335-\u2229\u2346|/+\u00d7/+\u22b8\u229e=)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Run
        it in a browser &lt;a href=\"https://uiua.org/pad?src=0_14_0-dev_5__JCAzICAgNAokIDQgICAzCiQgMiAgIDUKJCAxICAgMwokIDMgICA5CiQgMyAgIDMK4oqc4ouV4oq44oiIIjAxMjM0NTY3ODkiCuKJocKw4oqfIOKGr-KInl8yCuKKgygvK-KMtS3iiKnijYZ8LyvDly8r4oq44oqePSkK\"&gt;here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu1d8t/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu1d8t", "created":
        1733033194.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztwofg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "synack",
        "can_mod_post": false, "created_utc": 1733030707.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 8, "author_fullname": "t2_304so", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Ada\\]  \n[https://github.com/JeremyGrosser/advent/blob/master/2024/src/day1\\_2.adb](https://github.com/JeremyGrosser/advent/blob/master/2024/src/day1_2.adb)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ada]&lt;br/&gt;\n&lt;a
        href=\"https://github.com/JeremyGrosser/advent/blob/master/2024/src/day1_2.adb\"&gt;https://github.com/JeremyGrosser/advent/blob/master/2024/src/day1_2.adb&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwofg/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztwofg", "created":
        1733030707.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzuipu9", "id": "lzuipu9", "parent_id":
        "t1_lztwofg", "depth": 1, "children": ["lzuipu9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztxq7u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "zogwarg",
        "can_mod_post": false, "created_utc": 1733031247.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 8, "author_fullname": "t2_59wxq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Jq]\n\n- https://github.com/zogwarg/advent-of-code/blob/main/2024/jq/01-a.jq\n-
        https://github.com/zogwarg/advent-of-code/blob/main/2024/jq/01-b.jq\n\nPart
        1:\n\n    #!/usr/bin/env jq -n -R -f\n\n    # Get the two lists in sorted
        order\n    [ inputs | [scan(\"\\\\d+\")|tonumber]]\n    | transpose | map(sort)\n\n    #
        Output the total list distance\n    | transpose | map(.[0]-.[1]| abs)\n    |
        add\n\nPart 2:\n\n    #!/usr/bin/env jq -n -R -f\n    \n    # Get the two
        lists, in read order\n    [ inputs | [scan(\"\\\\d+\")|tonumber]]\n    | transpose
        | \n    \n    reduce .[0][] as $i (\n      {\n        l: (       # Build lookup
        table, of ID to number #\n          reduce ( #    of occurences in second
        list     #\n            .[1] | group_by(.) | .[] | [.[0],length]\n          )
        as [$j,$l] ([]; .[$j] = $l)\n        ),\n        s: 0\n      };\n      .s
        = .s + (.l[$i] // 0) * $i #  Gather similarity  #\n    )\n    \n    | .s #
        Final similarity score", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Jq]&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/zogwarg/advent-of-code/blob/main/2024/jq/01-a.jq\"&gt;https://github.com/zogwarg/advent-of-code/blob/main/2024/jq/01-a.jq&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a
        href=\"https://github.com/zogwarg/advent-of-code/blob/main/2024/jq/01-b.jq\"&gt;https://github.com/zogwarg/advent-of-code/blob/main/2024/jq/01-b.jq&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env jq -n -R -f\n\n# Get
        the two lists in sorted order\n[ inputs | [scan(&amp;quot;\\\\d+&amp;quot;)|tonumber]]\n|
        transpose | map(sort)\n\n# Output the total list distance\n| transpose | map(.[0]-.[1]|
        abs)\n| add\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env
        jq -n -R -f\n\n# Get the two lists, in read order\n[ inputs | [scan(&amp;quot;\\\\d+&amp;quot;)|tonumber]]\n|
        transpose | \n\nreduce .[0][] as $i (\n  {\n    l: (       # Build lookup
        table, of ID to number #\n      reduce ( #    of occurences in second list     #\n        .[1]
        | group_by(.) | .[] | [.[0],length]\n      ) as [$j,$l] ([]; .[$j] = $l)\n    ),\n    s:
        0\n  };\n  .s = .s + (.l[$i] // 0) * $i #  Gather similarity  #\n)\n\n| .s
        # Final similarity score\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxq7u/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztxq7u", "created": 1733031247.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztxq89", "id": "lztxq89", "parent_id":
        "t1_lztxq7u", "depth": 1, "children": ["lztxq89"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733033592.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu1j1c", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "RealPooperTrooper",
        "can_mod_post": false, "created_utc": 1733033281.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 8, "author_fullname": "t2_c7hzjuu1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Excel\\]\n\nWhy code when [Sheets](https://imgur.com/a/070E12g)
        do trick?\n\nFirst year doing AoC, let''s see how far I can carry this meme.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Excel]&lt;/p&gt;\n\n&lt;p&gt;Why
        code when &lt;a href=\"https://imgur.com/a/070E12g\"&gt;Sheets&lt;/a&gt; do
        trick?&lt;/p&gt;\n\n&lt;p&gt;First year doing AoC, let&amp;#39;s see how far
        I can carry this meme.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu1j1c/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu1j1c", "created":
        1733033281.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzu1j1o", "id": "lzu1j1o", "parent_id":
        "t1_lzu1j1c", "depth": 1, "children": ["lzu1j1o", "lzu4dab", "lzua4tg"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1733034950.0,
        "mod_reason_by": null, "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu37x8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "CapricornRaven-777",
        "can_mod_post": false, "created_utc": 1733034243.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 8, "author_fullname": "t2_v21iwzps", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Excel Sheets\\]\n\nI solved this AOC problem in Excel;\n\nPart
        1: Excel Forms\n\n1. Sort the array using the sort() function.\n2. find the
        difference between the sorted array and use the abs function\n3. and calculate
        the total using sum functions.\n\nPart 2:\n\n1. calcuate the no of times the
        left array appeared in rigth array using the &gt;!=SUM(COUNTIF(A5,$B$5:$B$1003))!&lt;\n2.
        calcuate the simiarty scores by mutlipy the no of times and left array value
        and calcuate it.\n\nNote, i cant able to post in excel file here, so i convert
        into google sheets.\n\nLink [2024-Aoc-day1](https://docs.google.com/spreadsheets/d/1roKJXl3Jpp_83QQHLOU8RZhGqxuhzFNl1TGZu3EiknE/edit?usp=sharing)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Excel Sheets]&lt;/p&gt;\n\n&lt;p&gt;I
        solved this AOC problem in Excel;&lt;/p&gt;\n\n&lt;p&gt;Part 1: Excel Forms&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Sort
        the array using the sort() function.&lt;/li&gt;\n&lt;li&gt;find the difference
        between the sorted array and use the abs function&lt;/li&gt;\n&lt;li&gt;and
        calculate the total using sum functions.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;calcuate the no of times the left array
        appeared in rigth array using the &lt;span class=\"md-spoiler-text\"&gt;=SUM(COUNTIF(A5,$B$5:$B$1003))&lt;/span&gt;&lt;/li&gt;\n&lt;li&gt;calcuate
        the simiarty scores by mutlipy the no of times and left array value and calcuate
        it.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Note, i cant able to post in excel
        file here, so i convert into google sheets.&lt;/p&gt;\n\n&lt;p&gt;Link &lt;a
        href=\"https://docs.google.com/spreadsheets/d/1roKJXl3Jpp_83QQHLOU8RZhGqxuhzFNl1TGZu3EiknE/edit?usp=sharing\"&gt;2024-Aoc-day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu37x8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu37x8", "created":
        1733034243.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzu48qg", "id": "lzu48qg", "parent_id":
        "t1_lzu37x8", "depth": 1, "children": ["lzu48qg", "lzu4d2z"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu59uu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "TartarusKelvin",
        "can_mod_post": false, "created_utc": 1733035431.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 8, "author_fullname": "t2_16hsib", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: K\\]\n\n    / Part 1\n    +/abs(-/)({x@&lt;x}''inp:+:\"J\"$\"   \"\\:''0:`:data/1)\n    /
        Part 2\n    sum{x*y x}.(::;#:''=:)@''inp", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: K]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/
        Part 1\n+/abs(-/)({x@&amp;lt;x}&amp;#39;inp:+:&amp;quot;J&amp;quot;$&amp;quot;   &amp;quot;\\:&amp;#39;0:`:data/1)\n/
        Part 2\nsum{x*y x}.(::;#:&amp;#39;=:)@&amp;#39;inp\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu59uu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu59uu", "created":
        1733035431.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzudc61",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "gzipgrep",
        "can_mod_post": false, "created_utc": 1733040495.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 8, "author_fullname": "t2_69ioxegg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: POSIX Shell]\n\n    tr -s '' '' ''\\t'' &lt;1.txt &gt;/tmp/inp\n    cut
        -f1 &lt;/tmp/inp | sort &gt;/tmp/left\n    cut -f2 &lt;/tmp/inp | sort &gt;/tmp/right\n    paste
        -d- /tmp/left /tmp/right | bc | tr -d - | paste -s -d+ - | bc\n    grep -Fxf
        /tmp/left /tmp/right | uniq -c | sed ''s/ *//;s/ /*/'' | paste -s -d+ - |
        bc", "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: POSIX Shell]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;tr
        -s &amp;#39; &amp;#39; &amp;#39;\\t&amp;#39; &amp;lt;1.txt &amp;gt;/tmp/inp\ncut
        -f1 &amp;lt;/tmp/inp | sort &amp;gt;/tmp/left\ncut -f2 &amp;lt;/tmp/inp |
        sort &amp;gt;/tmp/right\npaste -d- /tmp/left /tmp/right | bc | tr -d - | paste
        -s -d+ - | bc\ngrep -Fxf /tmp/left /tmp/right | uniq -c | sed &amp;#39;s/
        *//;s/ /*/&amp;#39; | paste -s -d+ - | bc\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzudc61/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzudc61", "created":
        1733040495.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzveta7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Fyver42",
        "can_mod_post": false, "created_utc": 1733062515.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 9, "author_fullname": "t2_13g61von", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: RISC-V assembly\\]\n\n[github](https://github.com/fyvonnet/AdventOfCode-2024-Assembly/blob/main/day01.asm)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: RISC-V assembly]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/fyvonnet/AdventOfCode-2024-Assembly/blob/main/day01.asm\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzveta7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzveta7", "created":
        1733062515.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxnr3q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "dannywinrow",
        "can_mod_post": false, "created_utc": 1733088533.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 8, "author_fullname": "t2_i33i5qe8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Julia]\n\n    lines = readlines(\"2024/inputs/1p1.txt\")\n    lines
        = split.(lines,\"   \")\n    list1 = sort(parse.(Int,getindex.(lines,1)))\n    list2
        = sort(parse.(Int,getindex.(lines,2)))\n    \n    pt1answer = sum(abs.(list1
        .- list2))\n    pt2answer = sum(filter(in(list1),list2))", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Julia]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;lines
        = readlines(&amp;quot;2024/inputs/1p1.txt&amp;quot;)\nlines = split.(lines,&amp;quot;   &amp;quot;)\nlist1
        = sort(parse.(Int,getindex.(lines,1)))\nlist2 = sort(parse.(Int,getindex.(lines,2)))\n\npt1answer
        = sum(abs.(list1 .- list2))\npt2answer = sum(filter(in(list1),list2))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxnr3q/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxnr3q", "created":
        1733088533.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxoema", "id": "lzxoema", "parent_id":
        "t1_lzxnr3q", "depth": 1, "children": ["lzxoema"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733191785.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzy3fj9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "odnoletkov",
        "can_mod_post": false, "created_utc": 1733093684.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_cziacar", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: jq] [github](https://github.com/odnoletkov/advent-of-code-jq)\n\n    [inputs/\"   \"]
        | transpose | [(.[1] | group_by(.) | INDEX(.[0]))[.[0][]][]? | tonumber] |
        add", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        jq] &lt;a href=\"https://github.com/odnoletkov/advent-of-code-jq\"&gt;github&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[inputs/&amp;quot;   &amp;quot;]
        | transpose | [(.[1] | group_by(.) | INDEX(.[0]))[.[0][]][]? | tonumber] |
        add\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy3fj9/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy3fj9", "created":
        1733093684.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzyiw3h", "id": "lzyiw3h", "parent_id":
        "t1_lzy3fj9", "depth": 1, "children": ["lzyiw3h"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 16, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuvv9d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "probablyfine",
        "can_mod_post": false, "created_utc": 1733052939.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 16, "author_fullname": "t2_a5a66", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: uiua]\n\n[Code and tests](https://github.com/mrwilson/advent-of-code-2024/blob/main/01/day_01.ua)\n\nPart
        1:\n\n    /+\u2335/-\u2261\u2346\u2349\u21af\u221e_2\u229c\u22d5\u00ac\u22b8\u2208\"
        \\n\"\n\nPart 2:\n\n    /+\u266d\u229e(\u00d7\u27dc=)\u00b0\u229f\u21cc\u2349\u21af\u221e_2\u229c\u22d5\u00ac\u22b8\u2208\"
        \\n\"", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        uiua]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/mrwilson/advent-of-code-2024/blob/main/01/day_01.ua\"&gt;Code
        and tests&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/+\u2335/-\u2261\u2346\u2349\u21af\u221e_2\u229c\u22d5\u00ac\u22b8\u2208&amp;quot;
        \\n&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/+\u266d\u229e(\u00d7\u27dc=)\u00b0\u229f\u21cc\u2349\u21af\u221e_2\u229c\u22d5\u00ac\u22b8\u2208&amp;quot;
        \\n&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuvv9d/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzuvv9d", "created": 1733052939.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733034231.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztv7ix", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "FruitdealerF",
        "can_mod_post": false, "created_utc": 1733029976.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_ab77d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: [Andy C++](https://github.com/timfennis/andy-cpp)] 247/158\n\nThis
        year I''m competing in a programming language that I built specifically for
        Advent of Code.\n\n[Code on Github](https://github.com/timfennis/advent-of-code-2024/blob/master/1.ndc)  \n[Screenshot
        with highlighting](https://i.imgur.com/PwatPeg.png)\n\nEdit: definitely adding
        a way overdue zip function later today.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: &lt;a href=\"https://github.com/timfennis/andy-cpp\"&gt;Andy
        C++&lt;/a&gt;] 247/158&lt;/p&gt;\n\n&lt;p&gt;This year I&amp;#39;m competing
        in a programming language that I built specifically for Advent of Code.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/timfennis/advent-of-code-2024/blob/master/1.ndc\"&gt;Code
        on Github&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://i.imgur.com/PwatPeg.png\"&gt;Screenshot
        with highlighting&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: definitely adding
        a way overdue zip function later today.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztv7ix/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztv7ix", "created": 1733029976.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzu2jko", "id": "lzu2jko", "parent_id":
        "t1_lztv7ix", "depth": 1, "children": ["lzu2jko"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztxrmc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "chubbc",
        "can_mod_post": false, "created_utc": 1733031268.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_acpvk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Julia\\]\n\n    M = reshape(parse.(Int,split(String(read(\"01.txt\")))),(2,:))\n    println(sum(abs,sort(M[1,:])-sort(M[2,:])))\n    println(sum(x-&gt;x*count(==(x),M[2,:]),M[1,:]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Julia]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;M
        = reshape(parse.(Int,split(String(read(&amp;quot;01.txt&amp;quot;)))),(2,:))\nprintln(sum(abs,sort(M[1,:])-sort(M[2,:])))\nprintln(sum(x-&amp;gt;x*count(==(x),M[2,:]),M[1,:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxrmc/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxrmc", "created":
        1733031268.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzu1ip8", "id": "lzu1ip8", "parent_id":
        "t1_lztxrmc", "depth": 1, "children": ["lzu1ip8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzty48o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "python-b5",
        "can_mod_post": false, "created_utc": 1733031450.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_13uu36", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Jai]\n\nTrying out this language for the first time. Probably
        not the smartest choice for solving puzzles quickly, but I''ll take the opportunity
        to learn something new. This solution is a little verbose and maybe not optimal,
        but at least it solves the problem.\n\nhttps://github.com/python-b5/advent-of-code-2024/blob/main/day_01.jai",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Jai]&lt;/p&gt;\n\n&lt;p&gt;Trying
        out this language for the first time. Probably not the smartest choice for
        solving puzzles quickly, but I&amp;#39;ll take the opportunity to learn something
        new. This solution is a little verbose and maybe not optimal, but at least
        it solves the problem.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/python-b5/advent-of-code-2024/blob/main/day_01.jai\"&gt;https://github.com/python-b5/advent-of-code-2024/blob/main/day_01.jai&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzty48o/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzty48o", "created":
        1733031450.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lztyga5", "id": "lztyga5", "parent_id":
        "t1_lzty48o", "depth": 1, "children": ["lztyga5"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733034540.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu1f8s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "arthurno1",
        "can_mod_post": false, "created_utc": 1733033224.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_13zo3p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: EmacsLisp]\n\n    (cl-labels\n        ((next-token ()\n           (condition-case
        nil\n               (read (current-buffer))\n             (error nil)))\n         (p2
        (l1 l2)\n           (let ((acc 0)\n                 count self elt)\n             (while
        l1\n               (setf elt (car l1)\n                     self (cl-count
        elt l1)\n                     count (cl-count elt l2))\n               (cl-incf
        acc (* elt count self))\n               (while (and (car l1) (= elt (car l1)))
        (pop l1))\n               (while (and (car l2) (= elt (car l2))) (pop l2)))\n             acc)))\n      (let
        (l1 l2)\n        (with-temp-buffer\n          (insert-file-contents-literally
        \"1\")\n          (while-let ((t1 (next-token))\n                      (t2
        (next-token)))\n            (push t1 l1)\n            (push t2 l2))\n          (setf
        l1 (cl-sort l1 ''&lt;)\n                l2 (cl-sort l2 ''&lt;)))\n        (message
        \"Part I: %s Part II: %s\"\n                 (cl-loop for x in l1\n                          for
        y in l2\n                          sum (abs (- x y)) into acc\n                          finally
        return acc)\n                 (p2 l1 l2))))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: EmacsLisp]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(cl-labels\n    ((next-token
        ()\n       (condition-case nil\n           (read (current-buffer))\n         (error
        nil)))\n     (p2 (l1 l2)\n       (let ((acc 0)\n             count self elt)\n         (while
        l1\n           (setf elt (car l1)\n                 self (cl-count elt l1)\n                 count
        (cl-count elt l2))\n           (cl-incf acc (* elt count self))\n           (while
        (and (car l1) (= elt (car l1))) (pop l1))\n           (while (and (car l2)
        (= elt (car l2))) (pop l2)))\n         acc)))\n  (let (l1 l2)\n    (with-temp-buffer\n      (insert-file-contents-literally
        &amp;quot;1&amp;quot;)\n      (while-let ((t1 (next-token))\n                  (t2
        (next-token)))\n        (push t1 l1)\n        (push t2 l2))\n      (setf l1
        (cl-sort l1 &amp;#39;&amp;lt;)\n            l2 (cl-sort l2 &amp;#39;&amp;lt;)))\n    (message
        &amp;quot;Part I: %s Part II: %s&amp;quot;\n             (cl-loop for x in
        l1\n                      for y in l2\n                      sum (abs (- x
        y)) into acc\n                      finally return acc)\n             (p2
        l1 l2))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu1f8s/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu1f8s", "created":
        1733033224.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu2kwf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "UnarmedZombie",
        "can_mod_post": false, "created_utc": 1733033876.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_5uh2a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: PHP\\]\n\n[Solution is here](https://github.com/nate-allen/advent-of-code/blob/trunk/2024/day-01.php)\n\nI
        know PHP isn''t popular for AoC but I really enjoy it. Barely made it on the
        leaderboard for part 1 at 95, but I''ll take it.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: PHP]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/nate-allen/advent-of-code/blob/trunk/2024/day-01.php\"&gt;Solution
        is here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I know PHP isn&amp;#39;t popular for
        AoC but I really enjoy it. Barely made it on the leaderboard for part 1 at
        95, but I&amp;#39;ll take it.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu2kwf/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzu2kwf", "created": 1733033876.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzu4sk4", "id": "lzu4sk4", "parent_id":
        "t1_lzu2kwf", "depth": 1, "children": ["lzu4sk4"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu6srh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "CCC_037",
        "can_mod_post": false, "created_utc": 1733036343.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 8, "author_fullname": "t2_b1sp7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Rockstar 2.0]\n\nLet''s rock.\n\n[Part 1](https://topaz.github.io/paste/#XQAAAQDoBwAAAAAAAAAmGkpnbzS3R0IHFQRV/XLYzFfyfbFRlX9fyUL6ZTIrGBrXdNkElFib9+u0vLy5O7FzxCURVYmdoBmDhxICAh58tGmH8PB7xowiMI8ndcnM64JwHolfP1D2S8bcuxzye1sbJN4ztTMroINKT4gQJBA+pV+AttD45pLW2FYYkg+G2N9xrhvr1/17aew9zEvwNIxL9CKOtJaCrVC/VXWfqB0UuVyK4PnIdh9u2khuWnWV1EmMiRHpCNg2iPgJH4hGnaCvdw0kDWYf04a/0crzM1CzFn0md6jzJ48SUhErGipv96SuDGZPBdMe1/DvMOLUClrFpvkbSA8aqAfjpZ+F9sUaNpwiR7usr+4GKrqGIknfzIxPHrC4gEkdMVBztavilXa1VvTgR9ruPLTDwuBZEM7XPOaA4BRLlXgtcgyZLAtDJZXnmY49yXbOmwVdZy5wRZeepBsU+fzsje5rSwK6j6rHoF0Xr5hlVIGC9soaPEz8WO4KepU4t+722dK+u74c31DSYr3WAXQGzPFPmGYazMEs+09kE678dmAgS+jizLbzsDv0emhzQnZ9QLtQ3JR1Y8q0/6EGiiUJDDqfm1kfNG68ddbKDpiwj4v6dvFcjlY4hKNM+JbdqVHpKfNDtZ83WH9n+Q6FyKjvUsUuWEj+ejmOE8FWkM1sJIUntJEVWJoilXPR4WkbSOsKAkT4xySKFOefaVmGqQVHvPQ5xMtrEiCrnQXkjNdt3OwLxf+YN/FEJE03P0AFXyDhOQrtSDA0kuZxVP+CmT+7f/+NPM1u)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Rockstar
        2.0]&lt;/p&gt;\n\n&lt;p&gt;Let&amp;#39;s rock.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDoBwAAAAAAAAAmGkpnbzS3R0IHFQRV/XLYzFfyfbFRlX9fyUL6ZTIrGBrXdNkElFib9+u0vLy5O7FzxCURVYmdoBmDhxICAh58tGmH8PB7xowiMI8ndcnM64JwHolfP1D2S8bcuxzye1sbJN4ztTMroINKT4gQJBA+pV+AttD45pLW2FYYkg+G2N9xrhvr1/17aew9zEvwNIxL9CKOtJaCrVC/VXWfqB0UuVyK4PnIdh9u2khuWnWV1EmMiRHpCNg2iPgJH4hGnaCvdw0kDWYf04a/0crzM1CzFn0md6jzJ48SUhErGipv96SuDGZPBdMe1/DvMOLUClrFpvkbSA8aqAfjpZ+F9sUaNpwiR7usr+4GKrqGIknfzIxPHrC4gEkdMVBztavilXa1VvTgR9ruPLTDwuBZEM7XPOaA4BRLlXgtcgyZLAtDJZXnmY49yXbOmwVdZy5wRZeepBsU+fzsje5rSwK6j6rHoF0Xr5hlVIGC9soaPEz8WO4KepU4t+722dK+u74c31DSYr3WAXQGzPFPmGYazMEs+09kE678dmAgS+jizLbzsDv0emhzQnZ9QLtQ3JR1Y8q0/6EGiiUJDDqfm1kfNG68ddbKDpiwj4v6dvFcjlY4hKNM+JbdqVHpKfNDtZ83WH9n+Q6FyKjvUsUuWEj+ejmOE8FWkM1sJIUntJEVWJoilXPR4WkbSOsKAkT4xySKFOefaVmGqQVHvPQ5xMtrEiCrnQXkjNdt3OwLxf+YN/FEJE03P0AFXyDhOQrtSDA0kuZxVP+CmT+7f/+NPM1u\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu6srh/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu6srh", "created":
        1733036343.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 11, "name": "t1_lzu6v7f", "id": "lzu6v7f", "parent_id":
        "t1_lzu6srh", "depth": 1, "children": ["lzu6v7f", "lzv28po", "lzwvznn"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuxuqn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "LorSamPau",
        "can_mod_post": false, "created_utc": 1733054190.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_k8nva", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n    print((lambda s: \"Part 1: \"+str(sum(abs(a-b)for
        a,b in zip(*s)))+\" Part 2: \"+str(sum(n*s[1].count(n)for n in s[0])))(list(map(sorted,zip(*[map(int,l.split())for
        l in open(\"input.txt\")])))))", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print((lambda
        s: &amp;quot;Part 1: &amp;quot;+str(sum(abs(a-b)for a,b in zip(*s)))+&amp;quot;
        Part 2: &amp;quot;+str(sum(n*s[1].count(n)for n in s[0])))(list(map(sorted,zip(*[map(int,l.split())for
        l in open(&amp;quot;input.txt&amp;quot;)])))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuxuqn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuxuqn", "created":
        1733054190.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_lzuzj3n", "id": "lzuzj3n", "parent_id":
        "t1_lzuxuqn", "depth": 1, "children": ["lzuzj3n", "lzv0p2w"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv5tha",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "ApplicationSlight420",
        "can_mod_post": false, "created_utc": 1733058571.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_8kzfzy3s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: coreutils + AWK\\]\n\nPart1:  \n`paste &lt;(tr -s \" \" &lt;
        input.txt | cut -d \" \" -f1 | sort -n) &lt;(tr -s \" \" &lt; input.txt |
        cut -d \" \" -f2 | sort -n) | awk ''{x=$1-$2;if(x&lt;0){x=-x}sum+=x}END{print
        sum}''`\n\nPart2:  \n`join -11 -22 &lt;(tr -s \" \" &lt; input.txt  | cut
        -d \" \" -f1 | sort -n) &lt;(tr -s \" \" &lt; input.txt | cut -d \" \" -f2
        | sort -n | uniq -c) | awk ''{x+=$1*$2}END{print x}''`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: coreutils + AWK]&lt;/p&gt;\n\n&lt;p&gt;Part1:&lt;br/&gt;\n&lt;code&gt;paste
        &amp;lt;(tr -s &amp;quot; &amp;quot; &amp;lt; input.txt | cut -d &amp;quot;
        &amp;quot; -f1 | sort -n) &amp;lt;(tr -s &amp;quot; &amp;quot; &amp;lt; input.txt
        | cut -d &amp;quot; &amp;quot; -f2 | sort -n) | awk &amp;#39;{x=$1-$2;if(x&amp;lt;0){x=-x}sum+=x}END{print
        sum}&amp;#39;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part2:&lt;br/&gt;\n&lt;code&gt;join
        -11 -22 &amp;lt;(tr -s &amp;quot; &amp;quot; &amp;lt; input.txt  | cut -d
        &amp;quot; &amp;quot; -f1 | sort -n) &amp;lt;(tr -s &amp;quot; &amp;quot;
        &amp;lt; input.txt | cut -d &amp;quot; &amp;quot; -f2 | sort -n | uniq -c)
        | awk &amp;#39;{x+=$1*$2}END{print x}&amp;#39;&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv5tha/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv5tha", "created":
        1733058571.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzx8z77", "id": "lzx8z77", "parent_id":
        "t1_lzv5tha", "depth": 1, "children": ["lzx8z77"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv7klk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "AustinVelonaut",
        "can_mod_post": false, "created_utc": 1733059398.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 8, "author_fullname": "t2_tbg56", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Miranda2]\n\nThis is my own language and compiler (mainly written
        for Advent of Code puzzles!), based upon Miranda with extensions from Haskell
        and other functional languages\n\n    %import \"adventLib\"\n    %import &lt;bag&gt;\n    \n    day01
        :: io ()\n    day01\n        = readFile \"../inputs/day01.txt\" &gt;&gt;=
        words .&gt; map intval .&gt; uninterleave .&gt; mapBoth (sortBy cmpint) .&gt;
        go\n          where\n            go (xs, ys)\n                = output [part1,
        part2]\n                  where\n                    ysCount = b_fromList
        cmpint ys\n                    part1   = zipWith subtract xs ys |&gt; map
        abs |&gt; sum |&gt; showint\n                    part2   = map similarityScore
        xs |&gt; sum |&gt; showint\n    \n                    similarityScore x =
        x * b_findWithDefault cmpint 0 x ysCount", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Miranda2]&lt;/p&gt;\n\n&lt;p&gt;This is
        my own language and compiler (mainly written for Advent of Code puzzles!),
        based upon Miranda with extensions from Haskell and other functional languages&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;%import
        &amp;quot;adventLib&amp;quot;\n%import &amp;lt;bag&amp;gt;\n\nday01 :: io
        ()\nday01\n    = readFile &amp;quot;../inputs/day01.txt&amp;quot; &amp;gt;&amp;gt;=
        words .&amp;gt; map intval .&amp;gt; uninterleave .&amp;gt; mapBoth (sortBy
        cmpint) .&amp;gt; go\n      where\n        go (xs, ys)\n            = output
        [part1, part2]\n              where\n                ysCount = b_fromList
        cmpint ys\n                part1   = zipWith subtract xs ys |&amp;gt; map
        abs |&amp;gt; sum |&amp;gt; showint\n                part2   = map similarityScore
        xs |&amp;gt; sum |&amp;gt; showint\n\n                similarityScore x =
        x * b_findWithDefault cmpint 0 x ysCount\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv7klk/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv7klk", "created":
        1733059398.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzvyd6r", "id": "lzvyd6r", "parent_id":
        "t1_lzv7klk", "depth": 1, "children": ["lzvyd6r"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvc49n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "menchauser",
        "can_mod_post": false, "created_utc": 1733061395.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_3m07u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Prolog]\n\nI''ve wanted to choose some language which I do not
        know and which introduces some new concepts for me, so I went with Prolog
        this year. The solution is bit long, because I''m just learning the ropes.\n\nhttps://github.com/menchauser/aoc2024/blob/master/day01.prolog",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Prolog]&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve
        wanted to choose some language which I do not know and which introduces some
        new concepts for me, so I went with Prolog this year. The solution is bit
        long, because I&amp;#39;m just learning the ropes.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/menchauser/aoc2024/blob/master/day01.prolog\"&gt;https://github.com/menchauser/aoc2024/blob/master/day01.prolog&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvc49n/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvc49n", "created":
        1733061395.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxoi23", "id": "lzxoi23", "parent_id":
        "t1_lzvc49n", "depth": 1, "children": ["lzxoi23"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvonh4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "oddolatry",
        "can_mod_post": false, "created_utc": 1733066286.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_sggc8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: OCaml]\n\nLearning OCaml is basically like that Eric Andre meme
        pared down to \"LET .. IN!\"\n\n[Paste](https://topaz.github.io/paste/#XQAAAQBqBAAAAAAAAAAUCoAi1uEj4Wk2RB0vwXp/X7CLcbn2p85/okwPiKCLJWiptZUKGJiDOfCYDa1wzLsScZwb9aFaU6jIxF7+Ucub/q6k+U2FW7hh7Kukj577viccS97OJ9fAf3XvpvngQeKsEDwEiKM67XxdBABVqv4TkjNSbiT00DHb3R2ud8u8x60817uS4274TllPTjKsh9CVHn60ugdXi9l4/B5OAP6gWNAw3hJQD1bvyMMEGWBBMqdbpWBT51w+n+xpJtNIOaCIcBHrq2u7YzQf9+0TSssMYmoxY/oEDwVwBOZr72vwVd4VhLK4bXRK8TWwZyUDDcOyy67CdsKRHrSdzj02i/mVnVQG3HzYrG4G+owyqSof67aOeTZJXKx14vaOOCVoARbsMOKG0Gw0AVNsB/gWWREq5mvYlHLcW1fVS3VcQ+BUVLmA0nHn6YKdvLDudXKTGKuMu9jvrmhbh5nhF6xnic+PNdygEnmLPnZQZLnHNqKc4jxBqC12daTBCJ4uKiT6jKD6nJcbDFfH+6OJZcC9elvUXZR68Gh0VcwpeXHBU6PtAMZvZ9Cihq+L5M7Z7YNq+HnIBJnsQ89r6OKoS2Ks4omr9xJ8IgLuuuBdk7ESqcQ99BDJ9wepuWJz9M09wdgFI5zD+4Z2sD+TFvhd7to48ykgCb+KgyubHr50jJqhT1iDI1h2mJGIC5z87pOJ61gj3OWGMnmyi2aidEFi/9ZgiyQ=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: OCaml]&lt;/p&gt;\n\n&lt;p&gt;Learning
        OCaml is basically like that Eric Andre meme pared down to &amp;quot;LET ..
        IN!&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBqBAAAAAAAAAAUCoAi1uEj4Wk2RB0vwXp/X7CLcbn2p85/okwPiKCLJWiptZUKGJiDOfCYDa1wzLsScZwb9aFaU6jIxF7+Ucub/q6k+U2FW7hh7Kukj577viccS97OJ9fAf3XvpvngQeKsEDwEiKM67XxdBABVqv4TkjNSbiT00DHb3R2ud8u8x60817uS4274TllPTjKsh9CVHn60ugdXi9l4/B5OAP6gWNAw3hJQD1bvyMMEGWBBMqdbpWBT51w+n+xpJtNIOaCIcBHrq2u7YzQf9+0TSssMYmoxY/oEDwVwBOZr72vwVd4VhLK4bXRK8TWwZyUDDcOyy67CdsKRHrSdzj02i/mVnVQG3HzYrG4G+owyqSof67aOeTZJXKx14vaOOCVoARbsMOKG0Gw0AVNsB/gWWREq5mvYlHLcW1fVS3VcQ+BUVLmA0nHn6YKdvLDudXKTGKuMu9jvrmhbh5nhF6xnic+PNdygEnmLPnZQZLnHNqKc4jxBqC12daTBCJ4uKiT6jKD6nJcbDFfH+6OJZcC9elvUXZR68Gh0VcwpeXHBU6PtAMZvZ9Cihq+L5M7Z7YNq+HnIBJnsQ89r6OKoS2Ks4omr9xJ8IgLuuuBdk7ESqcQ99BDJ9wepuWJz9M09wdgFI5zD+4Z2sD+TFvhd7to48ykgCb+KgyubHr50jJqhT1iDI1h2mJGIC5z87pOJ61gj3OWGMnmyi2aidEFi/9ZgiyQ=\"&gt;Paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvonh4/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvonh4", "created":
        1733066286.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733099537.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzyj0c0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "ivanjermakov",
        "can_mod_post": false, "created_utc": 1733099155.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_1obr8i38", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: x86 Assembly\\] [(source)](https://github.com/ivanjermakov/adventofcode/blob/master/aoc2024/src/day1/day1b.asm)  \nSometimes
        I forget how much levels of abstraction there are between me and my computer",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: x86 Assembly]
        &lt;a href=\"https://github.com/ivanjermakov/adventofcode/blob/master/aoc2024/src/day1/day1b.asm\"&gt;(source)&lt;/a&gt;&lt;br/&gt;\nSometimes
        I forget how much levels of abstraction there are between me and my computer&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyj0c0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyj0c0", "created":
        1733099155.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzyj0cl", "id": "lzyj0cl", "parent_id":
        "t1_lzyj0c0", "depth": 1, "children": ["lzyj0cl"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733031413.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztxmoo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "r_so9",
        "can_mod_post": false, "created_utc": 1733031196.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_zie42", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: F#] 997 / 3018\nTop 1000 on day 1, pretty proud :)\n\n    let
        lefts = input |&gt; Array.map Array.head\n    let rights = input |&gt; Array.map
        (fun arr -&gt; arr[1])\n\n    let part1 =\n        Array.zip (Array.sort lefts)
        (Array.sort rights)\n        |&gt; Array.sumBy (fun (a, b) -&gt; abs (b -
        a))\n\n    let countRights = rights |&gt; Array.countBy id |&gt; Map.ofArray\n\n    let
        part2 =\n        lefts |&gt; Array.sumBy (fun i -&gt; i * defaultArg (Map.tryFind
        i countRights) 0)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        F#] 997 / 3018\nTop 1000 on day 1, pretty proud :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        lefts = input |&amp;gt; Array.map Array.head\nlet rights = input |&amp;gt;
        Array.map (fun arr -&amp;gt; arr[1])\n\nlet part1 =\n    Array.zip (Array.sort
        lefts) (Array.sort rights)\n    |&amp;gt; Array.sumBy (fun (a, b) -&amp;gt;
        abs (b - a))\n\nlet countRights = rights |&amp;gt; Array.countBy id |&amp;gt;
        Map.ofArray\n\nlet part2 =\n    lefts |&amp;gt; Array.sumBy (fun i -&amp;gt;
        i * defaultArg (Map.tryFind i countRights) 0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxmoo/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxmoo", "created":
        1733031196.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lztxmph", "id": "lztxmph", "parent_id":
        "t1_lztxmoo", "depth": 1, "children": ["lztxmph", "lztycpq"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzty5w1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Pyr0Byt3",
        "can_mod_post": false, "created_utc": 1733031474.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_b4y19", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Go\\] \\[LANGUAGE: Golang\\]\n\n[https://github.com/mnml/aoc/blob/main/2024/01/1.go](https://github.com/mnml/aoc/blob/main/2024/01/1.go)\n\nAlready
        dealing with Go''s lack of a built-in integer `abs()` function on day 1.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go] [LANGUAGE:
        Golang]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/mnml/aoc/blob/main/2024/01/1.go\"&gt;https://github.com/mnml/aoc/blob/main/2024/01/1.go&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Already
        dealing with Go&amp;#39;s lack of a built-in integer &lt;code&gt;abs()&lt;/code&gt;
        function on day 1.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzty5w1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzty5w1", "created":
        1733031474.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzucglc", "id": "lzucglc", "parent_id":
        "t1_lzty5w1", "depth": 1, "children": ["lzucglc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu0ngp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "blue-fox14",
        "can_mod_post": false, "created_utc": 1733032801.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_v0dp5byju",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: Clojure] 809/581\n\nhttps://github.com/rileythomp/adventofcode/blob/master/aoc24/1/main.clj",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Clojure]
        809/581&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/rileythomp/adventofcode/blob/master/aoc24/1/main.clj\"&gt;https://github.com/rileythomp/adventofcode/blob/master/aoc24/1/main.clj&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu0ngp/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu0ngp", "created":
        1733032801.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzub6xn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "jwezorek",
        "can_mod_post": false, "created_utc": 1733039116.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_8vn4ohs7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++23\\]  \n[link to github](https://github.com/jwezorek/advent_of_code/blob/main/src/2024/day_01.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++23]&lt;br/&gt;\n&lt;a
        href=\"https://github.com/jwezorek/advent_of_code/blob/main/src/2024/day_01.cpp\"&gt;link
        to github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzub6xn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzub6xn", "created":
        1733039116.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1734562393.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuca51", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "SpaceHonk",
        "can_mod_post": false, "created_utc": 1733039811.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_dkj9u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Swift] [code](https://github.com/gereons/AoC2024/blob/main/Sources/Day01/Day01.swift)\n\nNice
        little warmup using zip, map, reduce", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Swift] &lt;a href=\"https://github.com/gereons/AoC2024/blob/main/Sources/Day01/Day01.swift\"&gt;code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nice
        little warmup using zip, map, reduce&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuca51/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzuca51", "created": 1733039811.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzug85n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "ShadowwwsAsm",
        "can_mod_post": false, "created_utc": 1733042408.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_7ifn9lix", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE : assembly/asm\\]\n\n[part1](https://github.com/Shadowwws/AdventOfCode2024/blob/main/1a.asm)\n\n[part2](https://github.com/Shadowwws/AdventOfCode2024/blob/main/1b.asm)\n\nGoing
        again in assembly at the beginning. Surprised to see a sort for part 1 of
        day 1 but why not.\n\nPart 1 : So I just put the number in the stack, alternating
        1st and 2nd column. Then a little sorting algorithm not optimized and the
        end is just compare + add. Found a cool trick to compute abs() in 3 lines\n\nPart
        2 : Definitely easier, after reading the number, just take each of the first
        list and go through the second list.\n\nOpen to questions/comments", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE : assembly/asm]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Shadowwws/AdventOfCode2024/blob/main/1a.asm\"&gt;part1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Shadowwws/AdventOfCode2024/blob/main/1b.asm\"&gt;part2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Going
        again in assembly at the beginning. Surprised to see a sort for part 1 of
        day 1 but why not.&lt;/p&gt;\n\n&lt;p&gt;Part 1 : So I just put the number
        in the stack, alternating 1st and 2nd column. Then a little sorting algorithm
        not optimized and the end is just compare + add. Found a cool trick to compute
        abs() in 3 lines&lt;/p&gt;\n\n&lt;p&gt;Part 2 : Definitely easier, after reading
        the number, just take each of the first list and go through the second list.&lt;/p&gt;\n\n&lt;p&gt;Open
        to questions/comments&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzug85n/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzug85n", "created":
        1733042408.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzug85x", "id": "lzug85x", "parent_id":
        "t1_lzug85n", "depth": 1, "children": ["lzug85x"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733045733.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzukrg8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "one_line_it_anyway",
        "can_mod_post": false, "created_utc": 1733045480.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_1e3v307tqz",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[Language: Python, NumPy\\]\n\n    from numpy import loadtxt,
        sort, unique\n    \n    data = loadtxt(''input.txt'', int)\n    a, b = sort(data.T)\n    d
        = dict(zip(*unique(b,0,0,1)))\n    \n    p1 = sum(abs(a - b))\n    p2 = sum(map(lambda
        x: x * d.get(x, 0), a))\n    \n    print(f\"{p1 = }\\n{p2 = }\")", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python, NumPy]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        numpy import loadtxt, sort, unique\n\ndata = loadtxt(&amp;#39;input.txt&amp;#39;,
        int)\na, b = sort(data.T)\nd = dict(zip(*unique(b,0,0,1)))\n\np1 = sum(abs(a
        - b))\np2 = sum(map(lambda x: x * d.get(x, 0), a))\n\nprint(f&amp;quot;{p1
        = }\\n{p2 = }&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzukrg8/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzukrg8", "created": 1733045480.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733050316.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzupixm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Synedh",
        "can_mod_post": false, "created_utc": 1733048708.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_lmxzllk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n    l1, l2 = zip(*[map(int, line.split()) for line
        in open(''input'')])\n\n    # Part 1\n    print(sum(abs(x - y) for x, y in
        zip(sorted(l1), sorted(l2))))\n\n    # Part 2\n    print(sum(x for x in l2
        if x in l1))\n\nPart one is straightforward. On part two, given statement
        is misleading, as we only have to sum occurences of l2 in l1 and nothing else.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;l1,
        l2 = zip(*[map(int, line.split()) for line in open(&amp;#39;input&amp;#39;)])\n\n#
        Part 1\nprint(sum(abs(x - y) for x, y in zip(sorted(l1), sorted(l2))))\n\n#
        Part 2\nprint(sum(x for x in l2 if x in l1))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        one is straightforward. On part two, given statement is misleading, as we
        only have to sum occurences of l2 in l1 and nothing else.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzupixm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzupixm", "created":
        1733048708.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzurcf9", "id": "lzurcf9", "parent_id":
        "t1_lzupixm", "depth": 1, "children": ["lzurcf9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzutgmd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "FlyingPlatypus5",
        "can_mod_post": false, "created_utc": 1733051376.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_9a283krj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Scratch\\] [https://scratch.mit.edu/projects/1104420861/](https://scratch.mit.edu/projects/1104420861/)\n\nPart
        1 &amp; 2: [https://imgur.com/a/OgFuwD5](https://imgur.com/a/OgFuwD5) Looking
        back on it this code looks horrendous", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Scratch] &lt;a href=\"https://scratch.mit.edu/projects/1104420861/\"&gt;https://scratch.mit.edu/projects/1104420861/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1 &amp;amp; 2: &lt;a href=\"https://imgur.com/a/OgFuwD5\"&gt;https://imgur.com/a/OgFuwD5&lt;/a&gt;
        Looking back on it this code looks horrendous&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzutgmd/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzutgmd", "created": 1733051376.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733056564.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzv0wj9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "dec0nstruct0r",
        "can_mod_post": false, "created_utc": 1733055980.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_meu0joep", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nsimple numpy solution:\n\n    import numpy as np\n    \"\"\"\n    01-A
        ------------------------------------\n    \"\"\"\n    d = np.loadtxt(\"01_input.txt\")\n    d1
        = np.sort(d[:,0])\n    d2 = np.sort(d[:,1])\n    d_diff = np.abs(d1 - d2)\n    result_1=
        sum(d_diff)\n    print(result_1)\n    \n    \"\"\"\n    01-B ------------------------------------\n    \"\"\"\n    result_2
        = 0\n    for x in d1:\n        result_2 += sum(x == d2) * x\n    print(result_2)\n\n`dsdds`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;simple
        numpy solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import numpy as np\n&amp;quot;&amp;quot;&amp;quot;\n01-A
        ------------------------------------\n&amp;quot;&amp;quot;&amp;quot;\nd =
        np.loadtxt(&amp;quot;01_input.txt&amp;quot;)\nd1 = np.sort(d[:,0])\nd2 = np.sort(d[:,1])\nd_diff
        = np.abs(d1 - d2)\nresult_1= sum(d_diff)\nprint(result_1)\n\n&amp;quot;&amp;quot;&amp;quot;\n01-B
        ------------------------------------\n&amp;quot;&amp;quot;&amp;quot;\nresult_2
        = 0\nfor x in d1:\n    result_2 += sum(x == d2) * x\nprint(result_2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;dsdds&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv0wj9/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv0wj9", "created":
        1733055980.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv5cwn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "blazemas",
        "can_mod_post": false, "created_utc": 1733058348.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_5tj9a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\n[https://github.com/jbush7401/AoCCPP/blob/main/AoCCPP/2024/Day1.cpp](https://github.com/jbush7401/AoCCPP/blob/main/AoCCPP/2024/Day1.cpp)\n\nTrying
        for performance and speed. Suggestions requested!\n\nTotal speed 7ms.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jbush7401/AoCCPP/blob/main/AoCCPP/2024/Day1.cpp\"&gt;https://github.com/jbush7401/AoCCPP/blob/main/AoCCPP/2024/Day1.cpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Trying
        for performance and speed. Suggestions requested!&lt;/p&gt;\n\n&lt;p&gt;Total
        speed 7ms.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv5cwn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv5cwn", "created":
        1733058348.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzvlc0w", "id": "lzvlc0w", "parent_id":
        "t1_lzv5cwn", "depth": 1, "children": ["lzvlc0w"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733062744.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvccp8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "el_daniero",
        "can_mod_post": false, "created_utc": 1733061493.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_d6tuf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Ruby\\]\n\n&gt;This looks like a job for ... [Trans Pose](https://ruby-doc.org/3.3.6/Array.html#method-i-transpose)!
        :)\n\n    input = File\n      .readlines(''input01.txt'')\n      .map { |line|
        line.scan(/\\d+/).map &amp;:to_i }\n    \n    \n    # Part 1\n    p input.transpose.map(&amp;:sort).transpose.sum
        { |a,b| (a - b).abs }\n    \n    \n    # Part 2\n    a,b = input.transpose\n    p
        a.sum { |i| i * b.count(i) }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Ruby]&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;This looks like a job for
        ... &lt;a href=\"https://ruby-doc.org/3.3.6/Array.html#method-i-transpose\"&gt;Trans
        Pose&lt;/a&gt;! :)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre&gt;&lt;code&gt;input
        = File\n  .readlines(&amp;#39;input01.txt&amp;#39;)\n  .map { |line| line.scan(/\\d+/).map
        &amp;amp;:to_i }\n\n\n# Part 1\np input.transpose.map(&amp;amp;:sort).transpose.sum
        { |a,b| (a - b).abs }\n\n\n# Part 2\na,b = input.transpose\np a.sum { |i|
        i * b.count(i) }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvccp8/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzvccp8", "created": 1733061493.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733186932.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvefsm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "greycat70",
        "can_mod_post": false, "created_utc": 1733062363.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_il9cr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Tcl]\n\n[Part 1](https://wooledge.org/~greg/advent/2024/1a), [part
        2 (original)](https://wooledge.org/~greg/advent/2024/1b.orig).\n\nI''m using
        Tcl 9.0 this year, but so far I haven''t used any of the new features yet;
        these two would run just fine in Tcl 8.\n\n**Edit**: Here''s an updated [part
        2](https://wooledge.org/~greg/advent/2024/1b) which uses a Tcl 9.0 feature:
        array default set.  This removes the need for an info exists test.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Tcl]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://wooledge.org/%7Egreg/advent/2024/1a\"&gt;Part 1&lt;/a&gt;,
        &lt;a href=\"https://wooledge.org/%7Egreg/advent/2024/1b.orig\"&gt;part 2
        (original)&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m using Tcl 9.0 this
        year, but so far I haven&amp;#39;t used any of the new features yet; these
        two would run just fine in Tcl 8.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;:
        Here&amp;#39;s an updated &lt;a href=\"https://wooledge.org/%7Egreg/advent/2024/1b\"&gt;part
        2&lt;/a&gt; which uses a Tcl 9.0 feature: array default set.  This removes
        the need for an info exists test.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvefsm/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzvefsm", "created": 1733062363.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzvh8pn", "id": "lzvh8pn", "parent_id":
        "t1_lzvefsm", "depth": 1, "children": ["lzvh8pn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvgk86",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "damnian",
        "can_mod_post": false, "created_utc": 1733063229.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_f5kqk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C#\\]\n\nLINQ One-liners\n\n[https://github.com/dmitry-shechtman/aoc2024/blob/main/day01/Program.cs](https://github.com/dmitry-shechtman/aoc2024/blob/main/day01/Program.cs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;p&gt;LINQ
        One-liners&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/dmitry-shechtman/aoc2024/blob/main/day01/Program.cs\"&gt;https://github.com/dmitry-shechtman/aoc2024/blob/main/day01/Program.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvgk86/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvgk86", "created":
        1733063229.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvnuyr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Th0usT",
        "can_mod_post": false, "created_utc": 1733066008.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_3mzsqorw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Ocaml\\]\n\n  \nWorking in Ocaml this year to get experience
        with a function ML-style language, having a lot of fun so far. The solutions
        might be quite verbose until I get more familiar with the standard library
        and general syntax.\n\nSolution (Part 1 &amp; Part 2): [https://github.com/JohnCosta27/AdventOfCode/blob/main/AdventOfCode2024/lib/day\\_01.ml](https://github.com/JohnCosta27/AdventOfCode/blob/main/AdventOfCode2024/lib/day_01.ml)\n\n  \nYouTube
        video: [https://www.youtube.com/watch?v=BL1qo5uerDk&amp;t=492s](https://www.youtube.com/watch?v=BL1qo5uerDk&amp;t=492s)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ocaml]&lt;/p&gt;\n\n&lt;p&gt;Working
        in Ocaml this year to get experience with a function ML-style language, having
        a lot of fun so far. The solutions might be quite verbose until I get more
        familiar with the standard library and general syntax.&lt;/p&gt;\n\n&lt;p&gt;Solution
        (Part 1 &amp;amp; Part 2): &lt;a href=\"https://github.com/JohnCosta27/AdventOfCode/blob/main/AdventOfCode2024/lib/day_01.ml\"&gt;https://github.com/JohnCosta27/AdventOfCode/blob/main/AdventOfCode2024/lib/day_01.ml&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;YouTube
        video: &lt;a href=\"https://www.youtube.com/watch?v=BL1qo5uerDk&amp;amp;t=492s\"&gt;https://www.youtube.com/watch?v=BL1qo5uerDk&amp;amp;t=492s&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvnuyr/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvnuyr", "created":
        1733066008.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxmxim", "id": "lzxmxim", "parent_id":
        "t1_lzvnuyr", "depth": 1, "children": ["lzxmxim"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvr1me",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "RalfDieter",
        "can_mod_post": false, "created_utc": 1733067127.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_ydaco", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: SQL/DuckDB\\]\n\n[https://github.com/LennartH/advent-of-code/blob/main/2024/day-01\\_historian-hysteria/solution.sql](https://github.com/LennartH/advent-of-code/blob/main/2024/day-01_historian-hysteria/solution.sql)\n\nCan''t
        wait to implement A\\* in SQL.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: SQL/DuckDB]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/LennartH/advent-of-code/blob/main/2024/day-01_historian-hysteria/solution.sql\"&gt;https://github.com/LennartH/advent-of-code/blob/main/2024/day-01_historian-hysteria/solution.sql&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Can&amp;#39;t
        wait to implement A* in SQL.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvr1me/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvr1me", "created":
        1733067127.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733067720.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvr3x4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "mschaap",
        "can_mod_post": false, "created_utc": 1733067149.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_13dwf0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Raku]\n\nRelatively easy start of the season, as usual, but not
        as trivial as in some other years.  Still, easy enough in Raku.\n\n    my
        (@left, @right) := [Z] $inputfile.lines\u00bb.comb(/ &lt;digit&gt;+ /);\n    say
        \"Part 1: \", (@left.sort Z- @right.sort)\u00bb.abs.sum;\n\n    my $similarity
        = bag @right;\n    say \"Part 2: \", (@left Z\u00d7 $similarity{@left}).sum;\n\nhttps://github.com/mscha/aoc/blob/master/aoc2024/aoc01",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Raku]&lt;/p&gt;\n\n&lt;p&gt;Relatively
        easy start of the season, as usual, but not as trivial as in some other years.  Still,
        easy enough in Raku.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;my (@left, @right)
        := [Z] $inputfile.lines\u00bb.comb(/ &amp;lt;digit&amp;gt;+ /);\nsay &amp;quot;Part
        1: &amp;quot;, (@left.sort Z- @right.sort)\u00bb.abs.sum;\n\nmy $similarity
        = bag @right;\nsay &amp;quot;Part 2: &amp;quot;, (@left Z\u00d7 $similarity{@left}).sum;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mscha/aoc/blob/master/aoc2024/aoc01\"&gt;https://github.com/mscha/aoc/blob/master/aoc2024/aoc01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvr3x4/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvr3x4", "created":
        1733067149.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzvrgy1", "id": "lzvrgy1", "parent_id":
        "t1_lzvr3x4", "depth": 1, "children": ["lzvrgy1", "lzwcdf3"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwnpwa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Downtown-Economics26",
        "can_mod_post": false, "created_utc": 1733077546.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_bynh1thl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Excel (Functions &amp; VBA)\\]\n\nFunction P1\n\n`=SUM(ABS(SORT(VALUE(TEXTBEFORE(A1:A1000,\"
        \")))-SORT(VALUE(TEXTAFTER(A1:A1000,\" \")))))`\n\nFunction P2\n\n`=LET(L,VALUE(TEXTBEFORE(A1:A1000,\"
        \")),R,VALUE(TEXTAFTER(A1:A1000,\" \")),SUM(BYROW(L,LAMBDA(X,COUNT(FILTER(R,R=X))*X))))`\n\nVBA
        P1 (very poorly done)\n\n    Sub AOC2024D01P01()\n    \n    Dim LCOUNT As
        Integer\n    Dim L() As Variant\n    Dim R() As Variant\n    Dim LFLOOR As
        Long\n    Dim RFLOOR As Long\n    Dim LMIN As Long\n    Dim RMIN As Long\n    Dim
        D As Long\n    \n    D = 0\n    LFLOOR = 0\n    RFLOOR = 0\n    LMIN = 10000000\n    RMIN
        = 10000000\n    RIND = 0\n    LCOUNT = WorksheetFunction.CountA(Range(\"A:A\"))\n    ReDim
        Preserve L(LCOUNT)\n    ReDim Preserve R(LCOUNT)\n    \n    For X = 1 To LCOUNT\n    I
        = Range(\"A\" &amp; X)\n    L(X) = CLng(Split(I, \"  \")(0))\n    R(X) = CLng(Split(I,
        \"  \")(1))\n    Next X\n    \n    ITERS = 0\n    \n    Do Until ITERS = LCOUNT\n    \n    For
        M = 1 To LCOUNT\n        If L(M) &lt; LMIN And L(M) &gt; LFLOOR Then\n        LMIN
        = L(M)\n        End If\n    Next M\n    For M = 1 To LCOUNT\n        Select
        Case R(M)\n        Case RFLOOR\n            If M &gt; RIND Then\n            RMIN
        = R(M)\n            NEWRIND = M\n            Exit For\n            End If\n        Case
        Is &gt; RFLOOR\n            If R(M) &lt; RMIN Then\n            RMIN = R(M)\n            NEWRIND
        = M\n            End If\n        End Select\n    Next M\n    \n    ITERS =
        ITERS + 1\n    D = D + Abs(LMIN - RMIN)\n    LFLOOR = LMIN\n    RFLOOR = RMIN\n    LMIN
        = 10000000\n    RMIN = 10000000\n    RIND = NEWRIND\n    Loop\n    \n    Debug.Print
        D\n    \n    End Sub\n\nVBA Part 2\n\n    Sub AOC2024D01P02()\n    \n    Dim
        LCOUNT As Integer\n    Dim L() As Variant\n    Dim R() As Variant\n    Dim
        LRCOUNT As Integer\n    Dim S As Long\n    S = 0\n    \n    LCOUNT = WorksheetFunction.CountA(Range(\"A:A\"))\n    ReDim
        Preserve L(LCOUNT)\n    ReDim Preserve R(LCOUNT)\n    \n    For X = 1 To LCOUNT\n    I
        = Range(\"A\" &amp; X)\n    L(X) = CLng(Split(I, \"  \")(0))\n    R(X) = CLng(Split(I,
        \"  \")(1))\n    Next X\n    \n    For LV = 1 To LCOUNT\n        N = L(LV)\n        LRCOUNT
        = 0\n        For RV = 1 To LCOUNT\n        If R(RV) = N Then\n        LRCOUNT
        = LRCOUNT + 1\n        End If\n        Next RV\n    S = S + N * LRCOUNT\n    Next
        LV\n    Debug.Print S\n    \n    End Sub", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Excel (Functions &amp;amp; VBA)]&lt;/p&gt;\n\n&lt;p&gt;Function
        P1&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;=SUM(ABS(SORT(VALUE(TEXTBEFORE(A1:A1000,&amp;quot;
        &amp;quot;)))-SORT(VALUE(TEXTAFTER(A1:A1000,&amp;quot; &amp;quot;)))))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Function
        P2&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;=LET(L,VALUE(TEXTBEFORE(A1:A1000,&amp;quot;
        &amp;quot;)),R,VALUE(TEXTAFTER(A1:A1000,&amp;quot; &amp;quot;)),SUM(BYROW(L,LAMBDA(X,COUNT(FILTER(R,R=X))*X))))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;VBA
        P1 (very poorly done)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Sub AOC2024D01P01()\n\nDim
        LCOUNT As Integer\nDim L() As Variant\nDim R() As Variant\nDim LFLOOR As Long\nDim
        RFLOOR As Long\nDim LMIN As Long\nDim RMIN As Long\nDim D As Long\n\nD = 0\nLFLOOR
        = 0\nRFLOOR = 0\nLMIN = 10000000\nRMIN = 10000000\nRIND = 0\nLCOUNT = WorksheetFunction.CountA(Range(&amp;quot;A:A&amp;quot;))\nReDim
        Preserve L(LCOUNT)\nReDim Preserve R(LCOUNT)\n\nFor X = 1 To LCOUNT\nI = Range(&amp;quot;A&amp;quot;
        &amp;amp; X)\nL(X) = CLng(Split(I, &amp;quot;  &amp;quot;)(0))\nR(X) = CLng(Split(I,
        &amp;quot;  &amp;quot;)(1))\nNext X\n\nITERS = 0\n\nDo Until ITERS = LCOUNT\n\nFor
        M = 1 To LCOUNT\n    If L(M) &amp;lt; LMIN And L(M) &amp;gt; LFLOOR Then\n    LMIN
        = L(M)\n    End If\nNext M\nFor M = 1 To LCOUNT\n    Select Case R(M)\n    Case
        RFLOOR\n        If M &amp;gt; RIND Then\n        RMIN = R(M)\n        NEWRIND
        = M\n        Exit For\n        End If\n    Case Is &amp;gt; RFLOOR\n        If
        R(M) &amp;lt; RMIN Then\n        RMIN = R(M)\n        NEWRIND = M\n        End
        If\n    End Select\nNext M\n\nITERS = ITERS + 1\nD = D + Abs(LMIN - RMIN)\nLFLOOR
        = LMIN\nRFLOOR = RMIN\nLMIN = 10000000\nRMIN = 10000000\nRIND = NEWRIND\nLoop\n\nDebug.Print
        D\n\nEnd Sub\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;VBA Part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Sub
        AOC2024D01P02()\n\nDim LCOUNT As Integer\nDim L() As Variant\nDim R() As Variant\nDim
        LRCOUNT As Integer\nDim S As Long\nS = 0\n\nLCOUNT = WorksheetFunction.CountA(Range(&amp;quot;A:A&amp;quot;))\nReDim
        Preserve L(LCOUNT)\nReDim Preserve R(LCOUNT)\n\nFor X = 1 To LCOUNT\nI = Range(&amp;quot;A&amp;quot;
        &amp;amp; X)\nL(X) = CLng(Split(I, &amp;quot;  &amp;quot;)(0))\nR(X) = CLng(Split(I,
        &amp;quot;  &amp;quot;)(1))\nNext X\n\nFor LV = 1 To LCOUNT\n    N = L(LV)\n    LRCOUNT
        = 0\n    For RV = 1 To LCOUNT\n    If R(RV) = N Then\n    LRCOUNT = LRCOUNT
        + 1\n    End If\n    Next RV\nS = S + N * LRCOUNT\nNext LV\nDebug.Print S\n\nEnd
        Sub\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwnpwa/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwnpwa", "created":
        1733077546.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwvgyx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "platypus10000",
        "can_mod_post": false, "created_utc": 1733079887.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 7, "author_fullname": "t2_5b1ql9tb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nReadability? Never heard of it. Both P1 and P2
        solution in two lines.\n\n  \n[https://github.com/eolelake/AdventOfCode/blob/main/2024/1/sol.py](https://github.com/eolelake/AdventOfCode/blob/main/2024/1/sol.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Readability?
        Never heard of it. Both P1 and P2 solution in two lines.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/eolelake/AdventOfCode/blob/main/2024/1/sol.py\"&gt;https://github.com/eolelake/AdventOfCode/blob/main/2024/1/sol.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwvgyx/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwvgyx", "created":
        1733079887.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxc7qa", "id": "lzxc7qa", "parent_id":
        "t1_lzwvgyx", "depth": 1, "children": ["lzxc7qa"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733081383.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwwdez", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "tomflumery",
        "can_mod_post": false, "created_utc": 1733080152.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_1n1f8ga0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: 05AB1E\\]\n\npart 1 (16 chars)\n\n    |\u03b5\"   \"\u00a1]\u00f8\u03b5{]`\u03b1O\n\npart
        2 (17 chars)\n\n    |\u03b5\"   \"\u00a1]\u00f8`sD\u0160\u00a2*O", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: 05AB1E]&lt;/p&gt;\n\n&lt;p&gt;part
        1 (16 chars)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;|\u03b5&amp;quot;   &amp;quot;\u00a1]\u00f8\u03b5{]`\u03b1O\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        2 (17 chars)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;|\u03b5&amp;quot;   &amp;quot;\u00a1]\u00f8`sD\u0160\u00a2*O\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwwdez/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwwdez", "created":
        1733080152.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 7, "name": "t1_lzwx4iw", "id": "lzwx4iw", "parent_id":
        "t1_lzwwdez", "depth": 1, "children": ["lzwx4iw", "lzwwm2y", "lzwz0th", "lzxdhwj"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzx1u4d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Imaginary_Age_4072",
        "can_mod_post": false, "created_utc": 1733081812.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_3dl4j1cb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Common Lisp\\]\n\nIt''s December already! Doing AoC in Common
        Lisp again :)\n\nSolutions will be here [https://github.com/blake-watkins/advent-of-code-2024/blob/main/day1.lisp](https://github.com/blake-watkins/advent-of-code-2024/blob/main/day1.lisp)\n\n    (defun
        parse-numbers ()\n      (parse-lines (parse-list (parse-number) (parse-characters
        #\\Space))))\n    \n    (defun day1 (input &amp;key (part 1))\n      (let
        ((pairs (run-parser (parse-numbers) input)))\n        (iter\n          (for
        (a b) in pairs)\n          (collect a into as)\n          (collect b into
        bs)\n          (finally\n           (return (if (= part 1)\n                       (iter\n                         (for
        a in (sort as #''&lt;))\n                         (for b in (sort bs #''&lt;))\n                         (sum
        (abs (- a b))))\n                       (iter\n                         (for
        a in as)\n                         (sum (* a (count-if (lambda (x) (= x a))
        bs))))))))))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Common Lisp]&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s December already! Doing AoC
        in Common Lisp again :)&lt;/p&gt;\n\n&lt;p&gt;Solutions will be here &lt;a
        href=\"https://github.com/blake-watkins/advent-of-code-2024/blob/main/day1.lisp\"&gt;https://github.com/blake-watkins/advent-of-code-2024/blob/main/day1.lisp&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        parse-numbers ()\n  (parse-lines (parse-list (parse-number) (parse-characters
        #\\Space))))\n\n(defun day1 (input &amp;amp;key (part 1))\n  (let ((pairs
        (run-parser (parse-numbers) input)))\n    (iter\n      (for (a b) in pairs)\n      (collect
        a into as)\n      (collect b into bs)\n      (finally\n       (return (if
        (= part 1)\n                   (iter\n                     (for a in (sort
        as #&amp;#39;&amp;lt;))\n                     (for b in (sort bs #&amp;#39;&amp;lt;))\n                     (sum
        (abs (- a b))))\n                   (iter\n                     (for a in
        as)\n                     (sum (* a (count-if (lambda (x) (= x a)) bs))))))))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx1u4d/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx1u4d", "created":
        1733081812.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx6czc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "middayc",
        "can_mod_post": false, "created_utc": 1733083188.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_32tih", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rye\\]\n\n    prep-col: fn { b n } { .column? n |sort! }\n    \n    read\\lines
        %input.txt\n    |map ?load\n    |vals\\with { .prep-col 0 , .prep-col 1 }
        :cols\n    |transpose\n    |map { .set! { l r } , math/abs l - r }\n    |sum
        |print ;part 1\n    \n    cols .set! { left right }\n    map left { ::x *
        length? filter right { = x } }\n    |sum |print ;part 2\n\nI had to add transpose
        function to https://ryelang.org and I fixed 2 bugs, so I''m happy :)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rye]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;prep-col:
        fn { b n } { .column? n |sort! }\n\nread\\lines %input.txt\n|map ?load\n|vals\\with
        { .prep-col 0 , .prep-col 1 } :cols\n|transpose\n|map { .set! { l r } , math/abs
        l - r }\n|sum |print ;part 1\n\ncols .set! { left right }\nmap left { ::x
        * length? filter right { = x } }\n|sum |print ;part 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        had to add transpose function to &lt;a href=\"https://ryelang.org\"&gt;https://ryelang.org&lt;/a&gt;
        and I fixed 2 bugs, so I&amp;#39;m happy :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx6czc/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzx6czc", "created": 1733083188.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733352748.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxnyxk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "alehandy",
        "can_mod_post": false, "created_utc": 1733088602.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_1c8x5lj1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Bash\\]\n\n[Day 1 script](https://raw.githubusercontent.com/kzkedzierska/aoc/refs/heads/main/2024/day_01/solution.sh)
        \\- I did this after I solved the puzzles in Python to increase some difficulty
        after seeing the solutions in this thread \ud83d\ude48.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Bash]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://raw.githubusercontent.com/kzkedzierska/aoc/refs/heads/main/2024/day_01/solution.sh\"&gt;Day
        1 script&lt;/a&gt; - I did this after I solved the puzzles in Python to increase
        some difficulty after seeing the solutions in this thread \ud83d\ude48.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxnyxk/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxnyxk", "created":
        1733088602.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy8xt4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "fork_pl",
        "can_mod_post": false, "created_utc": 1733095615.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_3uu4kgch", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: perl\\]\n\nusing some List::Util and List::MoreUtils it looks
        nice and readable\n\n    my @l = split /\\s+/, read_file(\\*STDIN, chomp =&gt;
        1);\n\n    my @a = sort { $a &lt;=&gt; $b } pairkeys @l;\n    my @b = sort
        { $a &lt;=&gt; $b } pairvalues @l;\n    my %h = frequency @b;\n\n    say \"Stage
        1: \", sum pairwise { abs($a - $b) } @a, @b;\n    say \"Stage 2: \", sum map
        { $_ * ($h{$_} // 0) } @a;", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        perl]&lt;/p&gt;\n\n&lt;p&gt;using some List::Util and List::MoreUtils it looks
        nice and readable&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;my @l = split /\\s+/,
        read_file(\\*STDIN, chomp =&amp;gt; 1);\n\nmy @a = sort { $a &amp;lt;=&amp;gt;
        $b } pairkeys @l;\nmy @b = sort { $a &amp;lt;=&amp;gt; $b } pairvalues @l;\nmy
        %h = frequency @b;\n\nsay &amp;quot;Stage 1: &amp;quot;, sum pairwise { abs($a
        - $b) } @a, @b;\nsay &amp;quot;Stage 2: &amp;quot;, sum map { $_ * ($h{$_}
        // 0) } @a;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy8xt4/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy8xt4", "created":
        1733095615.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733039428.0, "mod_reason_by": null,
        "banned_by": null, "ups": 11, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu7m6r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "chubbc",
        "can_mod_post": false, "created_utc": 1733036846.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 11, "author_fullname": "t2_acpvk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Uiua\\]\n\nSuccinct version:\n\n    \u2229/+\u2283(\u266d\u00d7\u27dc\u229e=|\u2335-\u2229\u2346)
        \u2261\u00b0\u229f\u21af\u221e_2\u229c\u22d5\u2265@0. &amp;fras\"01.txt\"\n\nSlightly
        more verbose version:\n\n    Input \u2190 \u2261\u00b0\u229f\u21af\u221e_2\u229c\u22d5\u2265@0.&amp;fras\"01.txt\"\n    Silv  \u2190
        /+\u2335-\u2229\u2346\n    Gold  \u2190 /+\u266d\u00d7\u27dc\u229e=\n    \u2283
        Gold Silv Input", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Uiua]&lt;/p&gt;\n\n&lt;p&gt;Succinct version:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u2229/+\u2283(\u266d\u00d7\u27dc\u229e=|\u2335-\u2229\u2346)
        \u2261\u00b0\u229f\u21af\u221e_2\u229c\u22d5\u2265@0. &amp;amp;fras&amp;quot;01.txt&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Slightly
        more verbose version:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Input \u2190 \u2261\u00b0\u229f\u21af\u221e_2\u229c\u22d5\u2265@0.&amp;amp;fras&amp;quot;01.txt&amp;quot;\nSilv  \u2190
        /+\u2335-\u2229\u2346\nGold  \u2190 /+\u266d\u00d7\u27dc\u229e=\n\u2283 Gold
        Silv Input\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu7m6r/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu7m6r", "created":
        1733036846.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztw2j0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "jsgrosman77",
        "can_mod_post": false, "created_utc": 1733030403.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_deh1s7gc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: TypeScript]\n\n    const contents = getFileContents();\n    const
        lines = contents.trim().split(/\\n/g);\n    \n    const leftList: number[]
        = lines.map( n =&gt; Number(n.split(/\\s+/)[0]));\n    const rightList: number[]
        = lines.map( n =&gt; Number(n.split(/\\s+/)[1]));\n    \n    leftList.sort()
        &amp;&amp; rightList.sort();\n    \n    let totalPart1 = 0, totalPart2 = 0;\n    for
        (let i = 0; i &lt; lines.length; i++) {\n        totalPart1 += Math.abs(leftList[i]
        - rightList[i]);\n        totalPart2 += leftList[i] * rightList.filter( n
        =&gt; n === leftList[i]).length;\n    }\n    console.log(`Part 1: ${totalPart1},
        Part 2: ${totalPart2}`);\n\nNothing fancy. Love using list functions to solve
        these things quickly.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        TypeScript]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const contents = getFileContents();\nconst
        lines = contents.trim().split(/\\n/g);\n\nconst leftList: number[] = lines.map(
        n =&amp;gt; Number(n.split(/\\s+/)[0]));\nconst rightList: number[] = lines.map(
        n =&amp;gt; Number(n.split(/\\s+/)[1]));\n\nleftList.sort() &amp;amp;&amp;amp;
        rightList.sort();\n\nlet totalPart1 = 0, totalPart2 = 0;\nfor (let i = 0;
        i &amp;lt; lines.length; i++) {\n    totalPart1 += Math.abs(leftList[i] -
        rightList[i]);\n    totalPart2 += leftList[i] * rightList.filter( n =&amp;gt;
        n === leftList[i]).length;\n}\nconsole.log(`Part 1: ${totalPart1}, Part 2:
        ${totalPart2}`);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Nothing fancy. Love
        using list functions to solve these things quickly.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztw2j0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztw2j0", "created":
        1733030403.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lztx8gk", "id": "lztx8gk", "parent_id":
        "t1_lztw2j0", "depth": 1, "children": ["lztx8gk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztx0ib",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "ziadam",
        "can_mod_post": false, "created_utc": 1733030878.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_1bwcbqytk0",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: Google Sheets]\n\nExpects input in A1. \n\n**Part
        1 &amp; 2**\n\n    =INDEX(LET(x,BYCOL(\n       SPLIT(TOCOL(SPLIT(SUBSTITUTE(A1,\"
        \",\"~\"),CHAR(10))),\"~\"),\n       LAMBDA(c,SORT(c))),{\n         SUM(ABS(MMULT(x,{-1;1})));\n         SUM(INDEX(x,,1)*COUNTIF(INDEX(x,,2),INDEX(x,,1)))}))\n\n[Repo](https://github.com/ziadti/advent-of-code-gs/)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Google Sheets]&lt;/p&gt;\n\n&lt;p&gt;Expects
        input in A1. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Part 1 &amp;amp; 2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=INDEX(LET(x,BYCOL(\n   SPLIT(TOCOL(SPLIT(SUBSTITUTE(A1,&amp;quot;
        &amp;quot;,&amp;quot;~&amp;quot;),CHAR(10))),&amp;quot;~&amp;quot;),\n   LAMBDA(c,SORT(c))),{\n     SUM(ABS(MMULT(x,{-1;1})));\n     SUM(INDEX(x,,1)*COUNTIF(INDEX(x,,2),INDEX(x,,1)))}))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ziadti/advent-of-code-gs/\"&gt;Repo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztx0ib/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztx0ib", "created":
        1733030878.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzu46xn", "id": "lzu46xn", "parent_id":
        "t1_lztx0ib", "depth": 1, "children": ["lzu46xn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzty81k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Outrageous72",
        "can_mod_post": false, "created_utc": 1733031505.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_7yxaprto", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C#\\]\n\nEasy start [Day 1](https://github.com/ryanheath/aoc2024/blob/main/Day1.cs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;p&gt;Easy
        start &lt;a href=\"https://github.com/ryanheath/aoc2024/blob/main/Day1.cs\"&gt;Day
        1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzty81k/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzty81k", "created":
        1733031505.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztyuu3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Max_NB",
        "can_mod_post": false, "created_utc": 1733031839.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_9gdinhyh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: bash\\]\n\nPart 1:\n\n    cat input | awk ''{print $1}'' | sort
        &gt; list1\n    cat input | awk ''{print $2}'' | sort &gt; list2\n    totDist=0\n    while
        IFS= read -r line1 &amp;&amp; IFS= read -r line2 &lt;&amp;3; do\n      dist=$(expr
        $line2 - $line1)\n      dist=${dist#-}\n      totDist=$(expr $totDist + $dist)\n    done
        &lt; list1 3&lt; list2\n    echo $totDist\n\nPart 2:\n\n    cat input | awk
        ''{print $1}'' | sort &gt; list1\n    cat input | awk ''{print $2}'' | sort
        &gt; list2\n    simScore=0\n    while IFS= read -r line1; do\n      num=$(expr
        $line1)\n      occ=$(grep -c $num list2)\n      simScoreInc=$(expr $num \\*
        $occ)\n      simScore=$(expr $simScore + $simScoreInc)\n    done &lt; list1\n    echo
        $simScore", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        bash]&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;cat
        input | awk &amp;#39;{print $1}&amp;#39; | sort &amp;gt; list1\ncat input
        | awk &amp;#39;{print $2}&amp;#39; | sort &amp;gt; list2\ntotDist=0\nwhile
        IFS= read -r line1 &amp;amp;&amp;amp; IFS= read -r line2 &amp;lt;&amp;amp;3;
        do\n  dist=$(expr $line2 - $line1)\n  dist=${dist#-}\n  totDist=$(expr $totDist
        + $dist)\ndone &amp;lt; list1 3&amp;lt; list2\necho $totDist\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;cat input | awk &amp;#39;{print $1}&amp;#39;
        | sort &amp;gt; list1\ncat input | awk &amp;#39;{print $2}&amp;#39; | sort
        &amp;gt; list2\nsimScore=0\nwhile IFS= read -r line1; do\n  num=$(expr $line1)\n  occ=$(grep
        -c $num list2)\n  simScoreInc=$(expr $num \\* $occ)\n  simScore=$(expr $simScore
        + $simScoreInc)\ndone &amp;lt; list1\necho $simScore\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztyuu3/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztyuu3", "created":
        1733031839.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lztz3ys", "id": "lztz3ys", "parent_id":
        "t1_lztyuu3", "depth": 1, "children": ["lztz3ys", "lzu6e7m"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu083i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "SnaggelsHD7",
        "can_mod_post": false, "created_utc": 1733032567.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_7gubhnsq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: R\\]\n\n[Github](https://github.com/SnaggelsHD/Advent-of-Code-2024-SnaggelsHD/blob/main/Task1.R)\n\n  \nFirst
        time participating, hope I came up with something acceptable :P", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: R]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/SnaggelsHD/Advent-of-Code-2024-SnaggelsHD/blob/main/Task1.R\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;First
        time participating, hope I came up with something acceptable :P&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu083i/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu083i", "created":
        1733032567.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzwnin2", "id": "lzwnin2", "parent_id":
        "t1_lzu083i", "depth": 1, "children": ["lzwnin2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu0mwg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "SunMatrix64",
        "can_mod_post": false, "created_utc": 1733032792.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_y93x25avf",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: C++\\]\n\nQuick and easy, it took me longer to
        setup than to actually solve it. By no means is this efficient or adjustable
        to quirky inputs. Just stick each side in an array, sort them, then count
        the differences. For part 2, count the right side with a frequency map, then
        multiply the items in the left side with how many are in the map.\n\n    std::string
        text;\n    std::ifstream file(\"./day1input.txt\");\n    \n    std::vector&lt;int&gt;
        left;\n    std::vector&lt;int&gt; right;\n    \n    while (getline(file, text))
        {\n    left.push_back(stoi(text.substr(0, 6)));\n    right.push_back(stoi(text.substr(8,
        6)));\n    }\n    \n    std::sort(left.begin(), left.end());\n    std::sort(right.begin(),
        right.end());\n    int sum = 0;\n    for (int i = 0; i &lt; left.size(); ++i)
        {\n    sum += abs(right[i] - left[i]);\n    }\n    std::cout &lt;&lt; sum
        &lt;&lt; std::endl;\n    \n    //part 2\n    std::map&lt;int, int&gt; m;\n    for
        (int i = 0; i &lt; right.size(); ++i) {\n    m[right[i]]++;\n    }\n    \n    int
        sum2 = 0;\n    for (int i = 0; i &lt; left.size(); ++i) {\n    sum2 += left[i]
        * m[left[i]];\n    }\n    std::cout &lt;&lt; sum2 &lt;&lt; std::endl;", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;Quick
        and easy, it took me longer to setup than to actually solve it. By no means
        is this efficient or adjustable to quirky inputs. Just stick each side in
        an array, sort them, then count the differences. For part 2, count the right
        side with a frequency map, then multiply the items in the left side with how
        many are in the map.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;std::string text;\nstd::ifstream
        file(&amp;quot;./day1input.txt&amp;quot;);\n\nstd::vector&amp;lt;int&amp;gt;
        left;\nstd::vector&amp;lt;int&amp;gt; right;\n\nwhile (getline(file, text))
        {\nleft.push_back(stoi(text.substr(0, 6)));\nright.push_back(stoi(text.substr(8,
        6)));\n}\n\nstd::sort(left.begin(), left.end());\nstd::sort(right.begin(),
        right.end());\nint sum = 0;\nfor (int i = 0; i &amp;lt; left.size(); ++i)
        {\nsum += abs(right[i] - left[i]);\n}\nstd::cout &amp;lt;&amp;lt; sum &amp;lt;&amp;lt;
        std::endl;\n\n//part 2\nstd::map&amp;lt;int, int&amp;gt; m;\nfor (int i =
        0; i &amp;lt; right.size(); ++i) {\nm[right[i]]++;\n}\n\nint sum2 = 0;\nfor
        (int i = 0; i &amp;lt; left.size(); ++i) {\nsum2 += left[i] * m[left[i]];\n}\nstd::cout
        &amp;lt;&amp;lt; sum2 &amp;lt;&amp;lt; std::endl;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu0mwg/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu0mwg", "created":
        1733032792.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzu8d30", "id": "lzu8d30", "parent_id":
        "t1_lzu0mwg", "depth": 1, "children": ["lzu8d30", "lzuz9c3"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu0yee",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "3j0hn",
        "can_mod_post": false, "created_utc": 1733032966.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_4vrr5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Maple\\]\n\nI foolishly hadn''t set up any of my workspaces
        or templates, and only accidentally happened to remember to check for the
        puzzle at midnight. Anyway, probably doing these all in Maple again this year.
        \n\n    pinput := map(Words,Split(Trim(input), \"\\n\")):    \n    list1 :=
        map2(parse@op, 1, pinput):\n    list2 := map2(parse@op, 2, pinput):\n    ans1
        := add( map(abs, sort(list1) -~ sort(list2) ) );\n    ans2 := add(s*numboccur(s,list2),
        s in list1);", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Maple]&lt;/p&gt;\n\n&lt;p&gt;I foolishly hadn&amp;#39;t set up any of my workspaces
        or templates, and only accidentally happened to remember to check for the
        puzzle at midnight. Anyway, probably doing these all in Maple again this year.
        &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pinput := map(Words,Split(Trim(input),
        &amp;quot;\\n&amp;quot;)):    \nlist1 := map2(parse@op, 1, pinput):\nlist2
        := map2(parse@op, 2, pinput):\nans1 := add( map(abs, sort(list1) -~ sort(list2)
        ) );\nans2 := add(s*numboccur(s,list2), s in list1);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu0yee/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu0yee", "created":
        1733032966.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733034390.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu22qo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Loonis",
        "can_mod_post": false, "created_utc": 1733033588.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_8vkeb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Perl 5\\]\n\nHas it already|only been a year?\n\nPart 1:\n\n    say
        sum pairmap { abs($a - $b) } mesh map { [ sort  @$_ ] } zip map { [ split
        '' '' ] } @input;\n\nPart 2:\n\n    for (@input) {\n        my ($l, $r) =
        split '' '';\n        $left{$l}++;\n        $right{$r}++;\n    }\n    \n    say
        sum map { $left{$_} * $_ * $right{$_} } grep { $right{$_} } keys %left;\n\n[Full
        paste](https://topaz.github.io/paste/#XQAAAQB+AQAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx++HqIaL2DMg1G0IGwN4AAhp8Rd/g2mwIkpjXq08cvhuqlYiiwNtEl/8t3Cy7ZZjwWL5GQrTHrp6vfMj3uIbFHMGpBGAEJlq0MG4kBOXDVDZeXOb+vTxD3+17zex8pfgTy6IvdZDUGw+QeyWJqn+zJ3M0HvUNlYC3kVYSxPhZgFfMDbdTivfgqNjdEN/FBexG6XPbWwc+2PGsVEtktrEqsD6g1KuKHUQdXDB01MqybepRPZSukr/WyqOEv6EvgRYONxXxbMAKrHPSPUBK521vBFdfR3IVJAow4Sfx3sI6DLUxPONysMYD/xOyt4=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Perl 5]&lt;/p&gt;\n\n&lt;p&gt;Has
        it already|only been a year?&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;say
        sum pairmap { abs($a - $b) } mesh map { [ sort  @$_ ] } zip map { [ split
        &amp;#39; &amp;#39; ] } @input;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (@input) {\n    my ($l, $r) = split
        &amp;#39; &amp;#39;;\n    $left{$l}++;\n    $right{$r}++;\n}\n\nsay sum map
        { $left{$_} * $_ * $right{$_} } grep { $right{$_} } keys %left;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQB+AQAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx++HqIaL2DMg1G0IGwN4AAhp8Rd/g2mwIkpjXq08cvhuqlYiiwNtEl/8t3Cy7ZZjwWL5GQrTHrp6vfMj3uIbFHMGpBGAEJlq0MG4kBOXDVDZeXOb+vTxD3+17zex8pfgTy6IvdZDUGw+QeyWJqn+zJ3M0HvUNlYC3kVYSxPhZgFfMDbdTivfgqNjdEN/FBexG6XPbWwc+2PGsVEtktrEqsD6g1KuKHUQdXDB01MqybepRPZSukr/WyqOEv6EvgRYONxXxbMAKrHPSPUBK521vBFdfR3IVJAow4Sfx3sI6DLUxPONysMYD/xOyt4=\"&gt;Full
        paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu22qo/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu22qo", "created":
        1733033588.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu3hjy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "oantolin",
        "can_mod_post": false, "created_utc": 1733034396.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_3fxjo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: ngn/k]\n\n    ans:{+/''({x|-x}@-/{x@&lt;x}'';{x*+/x=/:y}.)@\\:+.''0:x}",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: ngn/k]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ans:{+/&amp;#39;({x|-x}@-/{x@&amp;lt;x}&amp;#39;;{x*+/x=/:y}.)@\\:+.&amp;#39;0:x}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu3hjy/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu3hjy", "created":
        1733034396.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu4dew",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "835246",
        "can_mod_post": false, "created_utc": 1733034907.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_702fdkw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: C]\n\nPart 1 was quite simple. Part 2 I used a hash table to store
        the occurrences of each number. Which was exciting because I got to use a
        dsa dsa library I made this year.\n\nPart 1: https://github.com/efox4335/advent_of_code/blob/main/advent_of_code_2024/day_1_pt_1_loc_diff.c\n\nPart
        2: https://github.com/efox4335/advent_of_code/blob/main/advent_of_code_2024/day_1_pt_2_loc_diff.c",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C]&lt;/p&gt;\n\n&lt;p&gt;Part
        1 was quite simple. Part 2 I used a hash table to store the occurrences of
        each number. Which was exciting because I got to use a dsa dsa library I made
        this year.&lt;/p&gt;\n\n&lt;p&gt;Part 1: &lt;a href=\"https://github.com/efox4335/advent_of_code/blob/main/advent_of_code_2024/day_1_pt_1_loc_diff.c\"&gt;https://github.com/efox4335/advent_of_code/blob/main/advent_of_code_2024/day_1_pt_1_loc_diff.c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2: &lt;a href=\"https://github.com/efox4335/advent_of_code/blob/main/advent_of_code_2024/day_1_pt_2_loc_diff.c\"&gt;https://github.com/efox4335/advent_of_code/blob/main/advent_of_code_2024/day_1_pt_2_loc_diff.c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu4dew/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu4dew", "created":
        1733034907.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu51im",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "oantolin",
        "can_mod_post": false, "created_utc": 1733035294.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_3fxjo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: J]\n\n    inp =: {{ |:\".;._2]1!:1&lt;y }}\n    p1 =: {{ +/|-//:~\"1
        inp y }}\n    p2 =: {{ +/a*+/b=/a [ ''a b'' =. inp y }}", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: J]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;inp
        =: {{ |:&amp;quot;.;._2]1!:1&amp;lt;y }}\np1 =: {{ +/|-//:~&amp;quot;1 inp
        y }}\np2 =: {{ +/a*+/b=/a [ &amp;#39;a b&amp;#39; =. inp y }}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu51im/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu51im", "created":
        1733035294.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu57mq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "musifter",
        "can_mod_post": false, "created_utc": 1733035396.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_cwt0kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Perl]\n \nNothing too fancy.  I''m just getting over a bad cold,
        so I didn''t think too much about a good way to read the input.  Then I just
        use `List::Util` for `sum` and `zip` to do the work:\n\n    say \"Part 1:
        \", sum map { abs($_-&gt;[0] - $_-&gt;[1]) } zip \\@list1, \\@list2;\n    say
        \"Part 2: \", sum map { $_ * ($counts{$_} // 0) } @list1;\n\nCode: https://pastebin.com/nk2s6j9W",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Perl]&lt;/p&gt;\n\n&lt;p&gt;Nothing
        too fancy.  I&amp;#39;m just getting over a bad cold, so I didn&amp;#39;t
        think too much about a good way to read the input.  Then I just use &lt;code&gt;List::Util&lt;/code&gt;
        for &lt;code&gt;sum&lt;/code&gt; and &lt;code&gt;zip&lt;/code&gt; to do the
        work:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;say &amp;quot;Part 1: &amp;quot;,
        sum map { abs($_-&amp;gt;[0] - $_-&amp;gt;[1]) } zip \\@list1, \\@list2;\nsay
        &amp;quot;Part 2: &amp;quot;, sum map { $_ * ($counts{$_} // 0) } @list1;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Code:
        &lt;a href=\"https://pastebin.com/nk2s6j9W\"&gt;https://pastebin.com/nk2s6j9W&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu57mq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu57mq", "created":
        1733035396.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu6dei",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "tgs14159",
        "can_mod_post": false, "created_utc": 1733036085.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_lbl083l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Haskell\\]\n\n[Day01.hs](https://github.com/thomasschafer/advent-of-code/blob/main/2024/src/Day01.hs)\n\nNice
        day for a functional language", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: Haskell]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/thomasschafer/advent-of-code/blob/main/2024/src/Day01.hs\"&gt;Day01.hs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nice
        day for a functional language&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu6dei/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzu6dei", "created": 1733036085.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzue27g", "id": "lzue27g", "parent_id":
        "t1_lzu6dei", "depth": 1, "children": ["lzue27g"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu6ecx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "add_tree_deduct",
        "can_mod_post": false, "created_utc": 1733036101.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_19ivg6bn72",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[Language: C\\]\n\n    #include &lt;stdio.h&gt;\n    #include
        &lt;stdlib.h&gt;\n    \n    int a[1 &lt;&lt; 18], b[1 &lt;&lt; 18], n, f[1
        &lt;&lt; 19];\n    \n    int C(const void *i, const void *j) {\n    return
        *(int*)i - *(int*)j;\n    }\n    \n    int main() {\n    while (2 == scanf(\"%d%d\",
        a + n, b + n))\n    ++f[b[n++]];\n    qsort(a, n, sizeof *a, C);\n    qsort(b,
        n, sizeof *b, C);\n    long long z = 0, z2 = 0;\n    for (int i = 0; i &lt;
        n; ++i)\n    z += abs(a[i] - b[i]),\n    z2 += a[i] * 1ll * f[a[i]];\n    printf(\"%lld\\n%lld\",
        z, z2);\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        C]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n#include
        &amp;lt;stdlib.h&amp;gt;\n\nint a[1 &amp;lt;&amp;lt; 18], b[1 &amp;lt;&amp;lt;
        18], n, f[1 &amp;lt;&amp;lt; 19];\n\nint C(const void *i, const void *j) {\nreturn
        *(int*)i - *(int*)j;\n}\n\nint main() {\nwhile (2 == scanf(&amp;quot;%d%d&amp;quot;,
        a + n, b + n))\n++f[b[n++]];\nqsort(a, n, sizeof *a, C);\nqsort(b, n, sizeof
        *b, C);\nlong long z = 0, z2 = 0;\nfor (int i = 0; i &amp;lt; n; ++i)\nz +=
        abs(a[i] - b[i]),\nz2 += a[i] * 1ll * f[a[i]];\nprintf(&amp;quot;%lld\\n%lld&amp;quot;,
        z, z2);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu6ecx/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu6ecx", "created":
        1733036101.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733044107.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu9r81", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "encse",
        "can_mod_post": false, "created_utc": 1733038194.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_bidtz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C#\\]\n\n[https://aoc.csokavar.hu/?2024/1](https://aoc.csokavar.hu/?2024/1)\n\n[GSGA]
        \n\nhttps://th.bing.com/th/id/OIG4.D3Cl956oDeToNTG_W2d.?w=1024&amp;h=1024&amp;rs=1&amp;pid=ImgDetMain",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://aoc.csokavar.hu/?2024/1\"&gt;https://aoc.csokavar.hu/?2024/1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;[GSGA]
        &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://th.bing.com/th/id/OIG4.D3Cl956oDeToNTG_W2d.?w=1024&amp;amp;h=1024&amp;amp;rs=1&amp;amp;pid=ImgDetMain\"&gt;https://th.bing.com/th/id/OIG4.D3Cl956oDeToNTG_W2d.?w=1024&amp;amp;h=1024&amp;amp;rs=1&amp;amp;pid=ImgDetMain&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu9r81/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu9r81", "created":
        1733038194.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733052036.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuaoqc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "G_de_Volpiano",
        "can_mod_post": false, "created_utc": 1733038794.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_1w3ud5uq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Haskell]\n\nI think every single Haskell book starts with list
        manipulation, introducing first the map, filter, foldr trifecta, and soon
        after zipWith to bring two lists together. Long before \"Hello World\" is
        even mentioned. So even if I also needed transpose and sort, this really felt
        like Haskell 101.\n\n[My code](https://github.com/GuillaumedeVolpiano/adventOfCode/blob/master/2024/days/Day1.hs)\n\nBoth
        could obviously have been solved as one liners, but I took out the difference/similarity
        function for ease of reading. But just for the fun of it\n\n    part1 = sum
        . map abs . (\\[a, b] -&gt; zipWith (-) a b) . map sort . transpose .  map
        (map read . words) . lines\n    part2 = sum . (\\[a, b] -&gt; map (\\x -&gt;
        (x *) . length . filter (== x) $ b) a) . transpose . map (map read . words)
        . lines\n\nEdit : the idea of using a multi set for part 2 had been nagging
        me since I read the problem. Completely using an ace where a 2 will do, but
        it did split execution time by half. A whole 4 ms saved.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Haskell]&lt;/p&gt;\n\n&lt;p&gt;I
        think every single Haskell book starts with list manipulation, introducing
        first the map, filter, foldr trifecta, and soon after zipWith to bring two
        lists together. Long before &amp;quot;Hello World&amp;quot; is even mentioned.
        So even if I also needed transpose and sort, this really felt like Haskell
        101.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/GuillaumedeVolpiano/adventOfCode/blob/master/2024/days/Day1.hs\"&gt;My
        code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Both could obviously have been solved
        as one liners, but I took out the difference/similarity function for ease
        of reading. But just for the fun of it&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part1
        = sum . map abs . (\\[a, b] -&amp;gt; zipWith (-) a b) . map sort . transpose
        .  map (map read . words) . lines\npart2 = sum . (\\[a, b] -&amp;gt; map (\\x
        -&amp;gt; (x *) . length . filter (== x) $ b) a) . transpose . map (map read
        . words) . lines\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit : the idea of
        using a multi set for part 2 had been nagging me since I read the problem.
        Completely using an ace where a 2 will do, but it did split execution time
        by half. A whole 4 ms saved.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuaoqc/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuaoqc", "created":
        1733038794.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuf5fa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "9_11_did_bush",
        "can_mod_post": false, "created_utc": 1733041690.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_4p0249k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Lean\\]\n\nNothing special, here a link: [https://github.com/chenson2018/advent-of-code/blob/main/2024/lean/AoC/Day01.lean](https://github.com/chenson2018/advent-of-code/blob/main/2024/lean/AoC/Day01.lean)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Lean]&lt;/p&gt;\n\n&lt;p&gt;Nothing
        special, here a link: &lt;a href=\"https://github.com/chenson2018/advent-of-code/blob/main/2024/lean/AoC/Day01.lean\"&gt;https://github.com/chenson2018/advent-of-code/blob/main/2024/lean/AoC/Day01.lean&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuf5fa/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuf5fa", "created":
        1733041690.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1048, "name": "t1_lzumtlf", "id": "lzumtlf", "parent_id":
        "t3_1h3vp6n", "depth": 0, "children": ["lzumtlf", "lzuncn6", "lzuotng", "lzuonhq",
        "lzupim4", "lzvepsj", "lzv7ita", "lzup054", "lzvcznm", "lzvmi1t", "lzvm73n",
        "lzuc5un", "lzvkxpv", "lzx0yun", "lzwpc7l", "lzwafh1", "lzv57tz", "lzvrclk",
        "lzy3ceo", "lzwjnkp", "lzwtw8p", "lzx6ant", "lzut0dp", "lzuuwbu", "lzxg5k6",
        "lzwg7ct", "lzu5p9p", "lzxgwjc", "lzyln22", "lztwjdc", "lztxoul", "lztvv2v",
        "lzx716i", "lztze6e", "lztvnv0", "lzvtm58", "lzwwtz8", "lztxpm4", "lzutfvq",
        "lzu2ivd", "lzwyo1y", "lzub9ri", "lzwlk04", "lzv4qlv", "lzvxk6p", "lzww4wm",
        "lztzkrd", "lzw7wmw", "lzxupfy", "lzw0iow", "lztznef", "lzu6ehv", "lzuxujh",
        "lzv53t5", "lzx6a3o", "lzvmxf5", "lzu9b7y", "lzv2i40", "lzutnuq", "lzvfjg6",
        "lzueibv", "lzur39j", "lzu89yq", "lzxg9fi", "lzu555y", "lzuyrjc", "lzv6lsv",
        "lzuuzy8", "lzu5gyd", "lzundbk", "lzufx31", "lzvk2b7", "lztwrej", "lztx33s",
        "lztzt7s", "lzuams3", "lztvo7j", "lzvpb7f", "lztwe10", "lzu8lja", "lzugzko",
        "lzxo4cs", "lzuj028", "lzu7pt3", "lzvwc9e", "lzuhoh0", "lztzllo", "lzurnln",
        "lzujbsz", "lzw59qi", "lztwt44", "lzuhkm0", "lzuaelz", "lztxvuj", "lzunulz",
        "lztzce5", "lzwm77m", "lzuy50s", "lzwn130", "lzy2ysa", "lzuurvl", "lzxstr8",
        "lzudwpn", "lzx4vg0", "lzvl541", "lzu3nq7", "lzujlwa", "lzunnwy", "lzywm0a",
        "lzuzvr4", "lzvyekv", "lztuqji", "lzue1n7", "lzu5kkk", "lzulebd", "lzvx9tt",
        "lztwobe", "lzu1qef", "lzufxbj", "lzwz8r8", "lzuqgs5", "lzx7y8o", "lzulk56",
        "lzty1pl", "lzxzl8k", "lzvmp1i", "lzw94jt", "lzu4ea2", "lzuzuz0", "lzvod3j",
        "lzz1zdd", "lzujovj", "lztvbso", "lztvat3", "lztzrhe", "lzucjcb", "lzv77xx",
        "lzuhw5i", "lzvxbil", "lzubcx0", "lzvk2zk", "lzva1mu", "lzx2iql", "lzykfxp",
        "lztzm3y", "lzxrzxz", "lzuy57y", "lzu8brh", "lzv1u54", "lzudvpi", "lzutbyl",
        "lzuqgvb", "lztvrv7", "lztyw2n", "lztuzu2", "lztvrzf", "lzx0451", "lzwl442",
        "lzx3zmb", "lzvt9ub", "lzy13zj", "lzw7bxl", "lzv1j4u", "lzv85jl", "lzyc6yj",
        "lzu09x9", "lzuk8y5", "lzuhnpq", "lzx5x7o", "lzudcvb", "lzxab8v", "lzw6zcn",
        "lztwvux", "lzukwoy", "lzuxu2f", "lzxjlud", "lzxyt1p", "lzusuqf", "lzusxwa",
        "lzxr1ct", "lztyism", "lzuveei", "lzw392l", "lzwwfi2", "lzuaoj8", "lzuph36",
        "lzwfhja", "lzusygn", "lzxwzv1", "lzunwxv", "lzuqnrn", "lzuwuer", "lzz3tud",
        "lzxx539", "lzv6mjf", "lztvjez", "lzwiqz3", "lztxedy", "lzukgit", "lzxk8in",
        "lzw6cci", "lzxdgoa", "lzv8820", "lzy2y3j", "lzumwlo", "lzv5etg", "lzyo099",
        "lzvo53h", "lzxymvy", "lzu5vwv", "lzxgnjw", "lzua5pk", "lzuatf2", "lzy1xya",
        "lzv90g1", "lzurzx2", "lzu37j5", "lztvxqo", "lzvftee", "lzwqcgt", "lzuq6jl",
        "lzu08md", "lzvhlo7", "lzvwlng", "lzwfu9m", "lzufzy7", "lzw8clk", "lzvdlvw",
        "lzv06w0", "lzu5iu8", "lzuogyx", "lztxczr", "lzxhngc", "lzz7ev4", "lztwckv",
        "lzvgzl2", "lzzdouv", "lzx7rcg", "lzxvj9k", "lzwk037", "lztwb58", "lzuclrz",
        "lzv4kze", "lztypfi", "lzvc37w", "lzua06v", "lztxj21", "lzvz9lm", "lztxp3z",
        "lztxfn0", "lzu4v0v", "lztveyg", "lzvlx89", "lzvoigz", "lzunjwq", "lzydt95",
        "lzuc95m", "lzu14er", "lzuzxk9", "lzupl7p", "lzvolnw", "lzx3cfm", "lzvei7r",
        "lzw0gx8", "lztzjk2", "lzy3w4z", "lztutgx", "lzvcct0", "lzwjr08", "lzuf6pl",
        "lzvb8mz", "lzuzmk2", "lzva9iy", "lzw4kxr", "lzty87e", "lzu2xto", "lztxfyf",
        "lzwhwnu", "lztvr1f", "lzujvaw", "lztx9nv", "lztxcn2", "lzymy1w", "lztvtu4",
        "lzuqa28", "lzukqyb", "lzv3ssf", "lzubp9n", "lzu1tvt", "lztxsbu", "lzurdle",
        "lzw18yp", "lzvh4g9", "lzuxplx", "lzud5mh", "lzwaqbg", "lztwdz8", "lzunco8",
        "lzu247p", "lzu6bxb", "lzu0358", "lzv0sma", "lzxwpuu", "lzuir50", "lztvrmy",
        "lzurrwf", "lzxd7g7", "lzuve9o", "lzyhf3h", "lzy2ck1", "lzufdi1", "lzwy0pm",
        "lzwgq3h", "lzuw204", "lzydegd", "lzwr1gt", "lzwp0s1", "lzvfewi", "lzvljq9",
        "lzu16p9", "lzxcran", "lzuj69d", "lzwbpkj", "lzw8s3t", "lzuywc7", "lzwmaex",
        "lzyi596", "lzw6jj7", "lzu6fxr", "lzwpi7i", "lzupmws", "lztv52p", "lzu1m7y",
        "lzz7dp2", "lzv20jv", "lzuorbh", "lzz88li", "lzy50rj", "lzulx1l", "lzwkspk",
        "lztv0cr", "lztxifk", "lzxni8y", "lzw6smd", "lzvmheb", "lzxb6wy", "lzxzre1",
        "lzuegf5", "lzvjwvq", "lzw3rc4", "lzxey3q", "lzv1l81", "lzuksqn", "lzxd4fq",
        "lzv11tu", "lzuvoa7", "lzwlnw1", "lzv0mhf", "lzyzbv8", "lzuuc24", "lzy5ev5",
        "lzu0fn0", "lzudkem", "lzugfkv", "lzuiprd", "lzw0s5r", "lzv69w1", "lzyegbz",
        "lzxnxu5", "lzuhysu", "lzu1uyi", "lzyitqc", "lzutcrs", "lzwve2u", "lzuorux",
        "lzury9n", "lztxn9m", "lzvehvx", "lzu3ne8", "lzvv2gw", "lzuxuz5", "lzufy8k",
        "lzw747s", "lzunnlt", "lztwo15", "lzwefd0", "lzwmp7w", "lztzho4", "lztuhit",
        "lzw21qf", "lzyy37i", "lzvwrb4", "lzv9bgi", "lzx5fi8", "lzv0aq2", "lzwhlfw",
        "lzzhi6n", "lzuuqlz", "lzw0bbp", "lzyas3y", "lzuyau3", "lztyu01", "lzvijc3",
        "lzu40h0", "lzv76ku", "lzyahn2", "lzup0wo", "lzyu3xo", "lzvkpuj", "lzx3r49",
        "lztxhsi", "lzuim0s", "lztwpcw", "lzurxqm", "lzy1ie6", "lzyip3j", "lzv0kiu",
        "lztycnp", "lzuj683", "lzv0600", "lzx663l", "lzwhsbr", "lztx3fc", "lzv48yt",
        "lzw0r7p", "lzupjwe", "lzxiyqj", "lzuxln2", "lzvwbmb", "lzx5ceh", "lzy4wiu",
        "lzubpt1", "lzvd10m", "lztv8j1", "lzwcpug", "lzub3gm", "lzyioa0", "lztwpd7",
        "lzwbgg6", "lzxvf32", "lzvbkq0", "lzu0lc6", "lzxqfih", "lzybcds", "lzwggfd",
        "lzyopak", "lzulkpq", "lzxwxer", "lztv294", "lzx9tmj", "lztz227", "lzvnk10",
        "lzuo7jw", "lzu4arc", "lzui3bt", "lzv14mo", "lzui0r7", "lzyoaka", "lzul07q",
        "lzv0jmg", "lzuztdp", "lzww2ia", "lzy3l4s", "lztzpt7", "lzxv1io", "lzx7z9q",
        "lzuluvw", "lztwqd9", "lzusuhd", "lzu5c3j", "lzw7wbc", "lzudmaa", "lzxbuz2",
        "lztx0gs", "lzv1dp2", "lzufa75", "lzuqgpm", "lzxlypv", "lzv5f36", "lzz0m22",
        "lzyoxpn", "lzup10n", "lzuqiqy", "lzu0iw8", "lzwwa0j", "lzv9vah", "lzuiq49",
        "lzudln3", "lzufves", "lzu253p", "lzumum1", "lzwlzli", "lzunhiy", "lzw05v2",
        "lzyxsyp", "lzwh5rt", "lzue4xp", "lzvqw9h", "lzvbe25", "lzvl8xt", "lzw1gq7",
        "lzw590b", "lztuqbf", "lzufzih", "lzuqoee", "lzv6lu7", "lzvuxar", "lzxjjz7",
        "lzv1amu", "lzy0ubn", "lzw82qi", "lzwf2n3", "lzubafx", "lzut10v", "lzumhc5",
        "lzymhbq", "lzv77ab", "lzupu7v", "lzux5eu", "lzurrr3", "lzuh31k", "lztws3t",
        "lzu257r", "lzv3mfg", "lzxc1gg", "lzva6dl", "lzv5do7", "lzv1h7j", "lzuhzeh",
        "lzy1vi1", "lzvlpzh", "lzv6h6u", "lzwq5rw", "lztx6do", "lzvl48t", "lzut77l",
        "lzwih8i", "lzu2xei", "lzxpqjn", "lzx5ew6", "lzur90m", "lzwpqqx", "lzwtcbu",
        "lzukmkn", "lzuduwc", "lzw9xv7", "lzxped4", "lzv7dn6", "lzuzoao", "lzuob92",
        "lzx4yw1", "lztz5jj", "lzuhdck", "lzu4jyf", "lzu3arz", "lzuqymy", "lzvny74",
        "lzurqvp", "lzunlr8", "lzv83r3", "lzuin6w", "lztxgq1", "lzyplnw", "lzutgq2"]}}],
        true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_lztuvx8"]], [13,
        14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16,
        17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:36 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:37 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=SbMwJcMMBfaVNdbKgq; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:37 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzumtlf,lzuncn6,lzuotng,lzuonhq,lzupim4,lzvepsj,lzv7ita,lzup054,lzvcznm,lzvmi1t,lzvm73n,lzuc5un,lzvkxpv,lzx0yun,lzwpc7l,lzwafh1,lzv57tz,lzvrclk,lzy3ceo,lzwjnkp,lzwtw8p,lzx6ant,lzut0dp,lzuuwbu,lzxg5k6,lzwg7ct,lzu5p9p,lzxgwjc,lzyln22,lztwjdc,lztxoul,lztvv2v,lzx716i,lztze6e,lztvnv0,lzvtm58,lzwwtz8,lztxpm4,lzutfvq,lzu2ivd,lzwyo1y,lzub9ri,lzwlk04,lzv4qlv,lzvxk6p,lzww4wm,lztzkrd,lzw7wmw,lzxupfy,lzw0iow,lztznef,lzu6ehv,lzuxujh,lzv53t5,lzx6a3o,lzvmxf5,lzu9b7y,lzv2i40,lzutnuq,lzvfjg6,lzueibv,lzur39j,lzu89yq,lzxg9fi,lzu555y,lzuyrjc,lzv6lsv,lzuuzy8,lzu5gyd,lzundbk,lzufx31,lzvk2b7,lztwrej,lztx33s,lztzt7s,lzuams3,lztvo7j,lzvpb7f,lztwe10,lzu8lja,lzugzko,lzxo4cs,lzuj028,lzu7pt3,lzvwc9e,lzuhoh0,lztzllo,lzurnln,lzujbsz,lzw59qi,lztwt44,lzuhkm0,lzuaelz,lztxvuj,lzunulz,lztzce5,lzwm77m,lzuy50s,lzwn130,lzy2ysa,lzuurvl,lzxstr8,lzudwpn,lzx4vg0,lzvl541,lzu3nq7,lzujlwa,lzunnwy,lzywm0a,lzuzvr4,lzvyekv,lztuqji,lzue1n7,lzu5kkk,lzulebd,lzvx9tt,lztwobe,lzu1qef,lzufxbj,lzwz8r8,lzuqgs5,lzx7y8o,lzulk56,lzty1pl,lzxzl8k,lzvmp1i,lzw94jt,lzu4ea2,lzuzuz0,lzvod3j,lzz1zdd,lzujovj,lztvbso,lztvat3,lztzrhe,lzucjcb,lzv77xx,lzuhw5i,lzvxbil,lzubcx0,lzvk2zk,lzva1mu,lzx2iql,lzykfxp,lztzm3y,lzxrzxz,lzuy57y,lzu8brh,lzv1u54,lzudvpi,lzutbyl,lzuqgvb,lztvrv7,lztyw2n,lztuzu2,lztvrzf,lzx0451,lzwl442,lzx3zmb,lzvt9ub,lzy13zj,lzw7bxl,lzv1j4u,lzv85jl,lzyc6yj,lzu09x9,lzuk8y5,lzuhnpq,lzx5x7o,lzudcvb,lzxab8v,lzw6zcn,lztwvux,lzukwoy,lzuxu2f,lzxjlud,lzxyt1p,lzusuqf,lzusxwa,lzxr1ct,lztyism,lzuveei,lzw392l,lzwwfi2,lzuaoj8,lzuph36,lzwfhja,lzusygn,lzxwzv1,lzunwxv,lzuqnrn,lzuwuer,lzz3tud,lzxx539,lzv6mjf,lztvjez,lzwiqz3,lztxedy,lzukgit,lzxk8in,lzw6cci,lzxdgoa,lzv8820,lzy2y3j,lzumwlo,lzv5etg,lzyo099,lzvo53h,lzxymvy,lzu5vwv,lzxgnjw,lzua5pk,lzuatf2,lzy1xya,lzv90g1,lzurzx2,lzu37j5,lztvxqo,lzvftee,lzwqcgt,lzuq6jl,lzu08md,lzvhlo7,lzvwlng,lzwfu9m,lzufzy7,lzw8clk,lzvdlvw,lzv06w0,lzu5iu8,lzuogyx,lztxczr,lzxhngc,lzz7ev4,lztwckv,lzvgzl2,lzzdouv,lzx7rcg,lzxvj9k,lzwk037,lztwb58,lzuclrz,lzv4kze,lztypfi,lzvc37w,lzua06v,lztxj21,lzvz9lm,lztxp3z,lztxfn0,lzu4v0v,lztveyg,lzvlx89,lzvoigz,lzunjwq,lzydt95,lzuc95m,lzu14er,lzuzxk9,lzupl7p,lzvolnw,lzx3cfm,lzvei7r,lzw0gx8,lztzjk2,lzy3w4z,lztutgx,lzvcct0,lzwjr08,lzuf6pl,lzvb8mz,lzuzmk2,lzva9iy,lzw4kxr,lzty87e,lzu2xto,lztxfyf,lzwhwnu,lztvr1f,lzujvaw,lztx9nv,lztxcn2,lzymy1w,lztvtu4,lzuqa28,lzukqyb,lzv3ssf,lzubp9n,lzu1tvt,lztxsbu,lzurdle,lzw18yp,lzvh4g9,lzuxplx,lzud5mh,lzwaqbg,lztwdz8,lzunco8,lzu247p,lzu6bxb,lzu0358,lzv0sma,lzxwpuu,lzuir50,lztvrmy,lzurrwf,lzxd7g7,lzuve9o,lzyhf3h,lzy2ck1,lzufdi1,lzwy0pm,lzwgq3h,lzuw204,lzydegd,lzwr1gt,lzwp0s1,lzvfewi,lzvljq9,lzu16p9,lzxcran,lzuj69d,lzwbpkj,lzw8s3t,lzuywc7,lzwmaex,lzyi596,lzw6jj7,lzu6fxr,lzwpi7i,lzupmws,lztv52p,lzu1m7y,lzz7dp2,lzv20jv,lzuorbh,lzz88li,lzy50rj,lzulx1l,lzwkspk,lztv0cr,lztxifk,lzxni8y,lzw6smd,lzvmheb,lzxb6wy,lzxzre1,lzuegf5,lzvjwvq,lzw3rc4,lzxey3q,lzv1l81,lzuksqn,lzxd4fq,lzv11tu,lzuvoa7,lzwlnw1,lzv0mhf,lzyzbv8,lzuuc24,lzy5ev5,lzu0fn0,lzudkem,lzugfkv,lzuiprd,lzw0s5r,lzv69w1,lzyegbz,lzxnxu5,lzuhysu,lzu1uyi,lzyitqc,lzutcrs,lzwve2u,lzuorux,lzury9n,lztxn9m,lzvehvx,lzu3ne8,lzvv2gw,lzuxuz5,lzufy8k,lzw747s,lzunnlt,lztwo15,lzwefd0,lzwmp7w,lztzho4,lztuhit,lzw21qf,lzyy37i,lzvwrb4,lzv9bgi,lzx5fi8,lzv0aq2,lzwhlfw,lzzhi6n,lzuuqlz,lzw0bbp,lzyas3y,lzuyau3,lztyu01,lzvijc3,lzu40h0,lzv76ku,lzyahn2,lzup0wo,lzyu3xo,lzvkpuj,lzx3r49,lztxhsi,lzuim0s,lztwpcw,lzurxqm,lzy1ie6,lzyip3j,lzv0kiu,lztycnp,lzuj683,lzv0600,lzx663l,lzwhsbr,lztx3fc,lzv48yt,lzw0r7p,lzupjwe,lzxiyqj,lzuxln2,lzvwbmb,lzx5ceh,lzy4wiu,lzubpt1,lzvd10m,lztv8j1,lzwcpug,lzub3gm,lzyioa0,lztwpd7,lzwbgg6,lzxvf32,lzvbkq0,lzu0lc6,lzxqfih,lzybcds,lzwggfd,lzyopak,lzulkpq,lzxwxer,lztv294,lzx9tmj,lztz227,lzvnk10,lzuo7jw,lzu4arc,lzui3bt,lzv14mo,lzui0r7,lzyoaka,lzul07q,lzv0jmg,lzuztdp,lzww2ia,lzy3l4s,lztzpt7,lzxv1io,lzx7z9q,lzuluvw,lztwqd9,lzusuhd,lzu5c3j,lzw7wbc,lzudmaa,lzxbuz2,lztx0gs,lzv1dp2,lzufa75,lzuqgpm,lzxlypv,lzv5f36,lzz0m22,lzyoxpn,lzup10n,lzuqiqy,lzu0iw8,lzwwa0j,lzv9vah,lzuiq49,lzudln3,lzufves,lzu253p,lzumum1,lzwlzli,lzunhiy,lzw05v2,lzyxsyp,lzwh5rt,lzue4xp,lzvqw9h,lzvbe25,lzvl8xt,lzw1gq7,lzw590b,lztuqbf,lzufzih,lzuqoee,lzv6lu7,lzvuxar,lzxjjz7,lzv1amu,lzy0ubn,lzw82qi,lzwf2n3,lzubafx,lzut10v,lzumhc5,lzymhbq,lzv77ab,lzupu7v,lzux5eu,lzurrr3,lzuh31k,lztws3t,lzu257r,lzv3mfg,lzxc1gg,lzva6dl,lzv5do7,lzv1h7j,lzuhzeh,lzy1vi1,lzvlpzh,lzv6h6u,lzwq5rw,lztx6do,lzvl48t,lzut77l,lzwih8i,lzu2xei,lzxpqjn,lzx5ew6,lzur90m,lzwpqqx,lzwtcbu,lzukmkn,lzuduwc,lzw9xv7,lzxped4,lzv7dn6,lzuzoao,lzuob92,lzx4yw1,lztz5jj,lzuhdck,lzu4jyf,lzu3arz,lzuqymy,lzvny74,lzurqvp,lzunlr8,lzv83r3,lzuin6w,lztxgq1,lzyplnw,lzutgq2
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '48260'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksemoejk0.2.1741471477365.Z0FBQUFBQm56TDcxQ0NxTHhXN1NVMW44Y3R4X19qbldWcmU5RE50c0J6N05VZzR0OXhRSFF0aGtwVUVCY0dhOGdrRm1fWllkU3p6RjhNZ3JXbzlwSFNMNmxlSkc3dEtnOHVnUDRpWVUyNzR4enJraVEtWHhKUUMySmhnYjhKLUFwSkdXaFduME5HX3I;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:37
        GMT; secure, session_tracker=njbbhocidamqaabipm.0.1741471477379.Z0FBQUFBQm56TDcxVGR6bEMtb0tsbnRqOVVjRkN0VUlFRV9NcjA3Rkg4NzN3S2JHVlFlSW8xNF9RYXlkNFhxM2ZQVThCOWttdTVuQTQwSEplR1ZWYXVQZ21UYjl1Z1pVTUsybF8wYmVNd3Z6cTJhby1sZDZuRTNoVGwwcllkM3J5bzhROGRESVJCdXc;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:37
        GMT; secure, edgebucket=QgHAJ5xvDEap2DErIo; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '5'
      x-ratelimit-remaining:
      - '95.0'
      x-ratelimit-reset:
      - '322'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:37 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzumtlf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Mats56",
        "can_mod_post": false, "created_utc": 1733046871.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_a7kz2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Kotlin\\]\n\nas always trying for a functional style with little
        assignments or mutations\n\n    return lines.map {\n        it.allInts()\n    }.transpose().let
        {\n        it[0].sorted().zip(it[1].sorted())\n    }.sumOf {\n        abs(it.second
        - it.first)\n    }\n\nmy utils made this quite ok, each line is a list of
        2 elements, transposing that gives me 2 lists of x elements that I then can
        zip and compare\n\n    return lines.map {\n        it.allInts()\n    }.transpose().let
        { (a, b) -&gt;\n        a.sumOf { v -&gt;\n            b.count { v == it }
        * v\n        }\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Kotlin]&lt;/p&gt;\n\n&lt;p&gt;as always trying for a functional style with
        little assignments or mutations&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return
        lines.map {\n    it.allInts()\n}.transpose().let {\n    it[0].sorted().zip(it[1].sorted())\n}.sumOf
        {\n    abs(it.second - it.first)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;my
        utils made this quite ok, each line is a list of 2 elements, transposing that
        gives me 2 lists of x elements that I then can zip and compare&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return
        lines.map {\n    it.allInts()\n}.transpose().let { (a, b) -&amp;gt;\n    a.sumOf
        { v -&amp;gt;\n        b.count { v == it } * v\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzumtlf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzumtlf", "created":
        1733046871.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733049596.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuncn6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "musifter",
        "can_mod_post": false, "created_utc": 1733047232.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_cwt0kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Smalltalk (GNU)]\n\nBack again with GNU smalltalk.  Decided Bag
        would be correct for today''s... it''s a dictionary of key to occurrences,
        and you can ask it for sorted contents and it will handle the multiples correctly.\n\nCode:
        https://pastebin.com/F8pTNsSA", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Smalltalk (GNU)]&lt;/p&gt;\n\n&lt;p&gt;Back
        again with GNU smalltalk.  Decided Bag would be correct for today&amp;#39;s...
        it&amp;#39;s a dictionary of key to occurrences, and you can ask it for sorted
        contents and it will handle the multiples correctly.&lt;/p&gt;\n\n&lt;p&gt;Code:
        &lt;a href=\"https://pastebin.com/F8pTNsSA\"&gt;https://pastebin.com/F8pTNsSA&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuncn6/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuncn6", "created":
        1733047232.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733131223.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuonhq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "p88h",
        "can_mod_post": false, "created_utc": 1733048116.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_w7wi5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Zig\\]\n\nBoth parts:\n\n[https://github.com/p88h/aoc2024/blob/main/src/day01.zig](https://github.com/p88h/aoc2024/blob/main/src/day01.zig)\n\n\\[
        Update: better parsing \\]\n\n            parse   part1   part2\n    day 01:
        8.2 \u00b5s \u00a016.9 \u00b5s 5.7 \u00b5s", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: Zig]&lt;/p&gt;\n\n&lt;p&gt;Both parts:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/p88h/aoc2024/blob/main/src/day01.zig\"&gt;https://github.com/p88h/aoc2024/blob/main/src/day01.zig&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;[
        Update: better parsing ]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;        parse   part1   part2\nday
        01: 8.2 \u00b5s \u00a016.9 \u00b5s 5.7 \u00b5s\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuonhq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuonhq", "created":
        1733048116.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzv15yl", "id": "lzv15yl", "parent_id":
        "t1_lzuonhq", "depth": 1, "children": ["lzv15yl"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuotng",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "flwyd",
        "can_mod_post": false, "created_utc": 1733048233.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_4x5am2k0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Shell] ([GitHub](https://github.com/flwyd/adventofcode/blob/main/2024/day1/day1shell)
        but with a really silly abuse of POSIX commands and the filesystem.\n\n    for
        fname in \"$@\" ; do\n      p1dir=`mktemp -d ${TMPDIR-/tmp}/part1.XXXXXX`\n      tr
        -s '' '' ''\\t'' &lt; $fname | cut -f 1 | sort -n &gt; $p1dir/foo\n      tr
        -s '' '' ''\\t'' &lt; $fname | cut -f 2 | sort -n &gt; $p1dir/bar\n      /bin/echo
        -n ''part1: ''\n      paste $p1dir/foo $p1dir/bar | \\\n        sed -E ''s/([0-9]+)\\t([0-9]+)/+
        ( \\1 - \\2 \\&amp; \\1 &gt; \\2 ) + ( \\2 - \\1 \\&amp; \\2 &gt; \\1 )/''
        | \\\n        xargs expr 0 | \\\n        sed ''s/^/+ /'' | xargs expr 0  #
        Darwin expr prints multiple lines sometimes\n\n      p2dir=`mktemp -d ${TMPDIR-/tmp}/part2.XXXXXX`\n      while
        read line ; do\n        touch $p2dir/$line\n        echo '''' &gt;&gt; $p2dir/$line\n      done
        &lt; $p1dir/bar\n      touch $p2dir/answer\n      while read line ; do\n        touch
        $p2dir/$line\n        /bin/echo \"+ $line * \" \\\n          `wc -l $p2dir/$line
        | sed ''s/^ *//'' | cut -d'' '' -f 1` &gt;&gt; $p2dir/answer\n      done &lt;
        $p1dir/foo\n      /bin/echo -n ''part2: ''\n      xargs expr 0 &lt; $p2dir/answer\n    done",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Shell] (&lt;a
        href=\"https://github.com/flwyd/adventofcode/blob/main/2024/day1/day1shell\"&gt;GitHub&lt;/a&gt;
        but with a really silly abuse of POSIX commands and the filesystem.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for
        fname in &amp;quot;$@&amp;quot; ; do\n  p1dir=`mktemp -d ${TMPDIR-/tmp}/part1.XXXXXX`\n  tr
        -s &amp;#39; &amp;#39; &amp;#39;\\t&amp;#39; &amp;lt; $fname | cut -f 1 |
        sort -n &amp;gt; $p1dir/foo\n  tr -s &amp;#39; &amp;#39; &amp;#39;\\t&amp;#39;
        &amp;lt; $fname | cut -f 2 | sort -n &amp;gt; $p1dir/bar\n  /bin/echo -n &amp;#39;part1:
        &amp;#39;\n  paste $p1dir/foo $p1dir/bar | \\\n    sed -E &amp;#39;s/([0-9]+)\\t([0-9]+)/+
        ( \\1 - \\2 \\&amp;amp; \\1 &amp;gt; \\2 ) + ( \\2 - \\1 \\&amp;amp; \\2 &amp;gt;
        \\1 )/&amp;#39; | \\\n    xargs expr 0 | \\\n    sed &amp;#39;s/^/+ /&amp;#39;
        | xargs expr 0  # Darwin expr prints multiple lines sometimes\n\n  p2dir=`mktemp
        -d ${TMPDIR-/tmp}/part2.XXXXXX`\n  while read line ; do\n    touch $p2dir/$line\n    echo
        &amp;#39;&amp;#39; &amp;gt;&amp;gt; $p2dir/$line\n  done &amp;lt; $p1dir/bar\n  touch
        $p2dir/answer\n  while read line ; do\n    touch $p2dir/$line\n    /bin/echo
        &amp;quot;+ $line * &amp;quot; \\\n      `wc -l $p2dir/$line | sed &amp;#39;s/^
        *//&amp;#39; | cut -d&amp;#39; &amp;#39; -f 1` &amp;gt;&amp;gt; $p2dir/answer\n  done
        &amp;lt; $p1dir/foo\n  /bin/echo -n &amp;#39;part2: &amp;#39;\n  xargs expr
        0 &amp;lt; $p2dir/answer\ndone\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuotng/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuotng", "created":
        1733048233.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733073522.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzup054", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "rySeeR4",
        "can_mod_post": false, "created_utc": 1733048355.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_17jlux", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Elixir\\]\n\nVery simple list handling, nothing clever.\n\n[https://github.com/jbonet/advent\\_of\\_code\\_2024/blob/main/lib/advent\\_of\\_code\\_2024/days/01.ex](https://github.com/jbonet/advent_of_code_2024/blob/main/lib/advent_of_code_2024/days/01.ex)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;p&gt;Very
        simple list handling, nothing clever.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/jbonet/advent_of_code_2024/blob/main/lib/advent_of_code_2024/days/01.ex\"&gt;https://github.com/jbonet/advent_of_code_2024/blob/main/lib/advent_of_code_2024/days/01.ex&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzup054/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzup054", "created":
        1733048355.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzwa1dd", "id": "lzwa1dd", "parent_id":
        "t1_lzup054", "depth": 1, "children": ["lzwa1dd"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzupim4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "GunnarInTheWeb",
        "can_mod_post": false, "created_utc": 1733048703.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_1b6dwfmfr4",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Rust\\]\n\nIn order to achieve maximal performance,
        I implemented this \"manually\", e.g. not using lines.iter, split, zip, fold
        or the like. While they can be zero cost abstractions I found using as\\_bytes()
        (assuming ASCII) and match is much faster during parsing.\n\nFurther, in part2
        it is not necessary to search the full second list, but only a small part
        as the numbers are sorted which is difficult to achieve using Rust standard
        tools.\n\nBenchmark (Intel i7-8700k):  \npart 1: 0.035 ms  \npart 2: 0.051
        ms\n\n[GitHub](https://github.com/GunterSchmidt/advent-of-code-rust/tree/main/2024/day-01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;In
        order to achieve maximal performance, I implemented this &amp;quot;manually&amp;quot;,
        e.g. not using lines.iter, split, zip, fold or the like. While they can be
        zero cost abstractions I found using as_bytes() (assuming ASCII) and match
        is much faster during parsing.&lt;/p&gt;\n\n&lt;p&gt;Further, in part2 it
        is not necessary to search the full second list, but only a small part as
        the numbers are sorted which is difficult to achieve using Rust standard tools.&lt;/p&gt;\n\n&lt;p&gt;Benchmark
        (Intel i7-8700k):&lt;br/&gt;\npart 1: 0.035 ms&lt;br/&gt;\npart 2: 0.051 ms&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/GunterSchmidt/advent-of-code-rust/tree/main/2024/day-01\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzupim4/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzupim4", "created":
        1733048703.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv57tz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "t-rkr",
        "can_mod_post": false, "created_utc": 1733058280.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_jkrqxty", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Perl\\]\n\n[https://gitlab.com/t-rkr/advent-of-code-2024/-/blob/main/day1/aoc.pl](https://gitlab.com/t-rkr/advent-of-code-2024/-/blob/main/day1/aoc.pl)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Perl]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gitlab.com/t-rkr/advent-of-code-2024/-/blob/main/day1/aoc.pl\"&gt;https://gitlab.com/t-rkr/advent-of-code-2024/-/blob/main/day1/aoc.pl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv57tz/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv57tz", "created":
        1733058280.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzvi3wx", "id": "lzvi3wx", "parent_id":
        "t1_lzv57tz", "depth": 1, "children": ["lzvi3wx"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv7ita",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "dylan_mojo",
        "can_mod_post": false, "created_utc": 1733059375.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_18r1rw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Bash/Awk\\]\n\n  \n[https://github.com/djkirby/advent-of-code/commit/53fd47fcdc723fc35b271a20a5190f9ed2c562ef](https://github.com/djkirby/advent-of-code/commit/53fd47fcdc723fc35b271a20a5190f9ed2c562ef)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Bash/Awk]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/djkirby/advent-of-code/commit/53fd47fcdc723fc35b271a20a5190f9ed2c562ef\"&gt;https://github.com/djkirby/advent-of-code/commit/53fd47fcdc723fc35b271a20a5190f9ed2c562ef&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv7ita/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv7ita", "created":
        1733059375.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzyxp10", "id": "lzyxp10", "parent_id":
        "t1_lzv7ita", "depth": 1, "children": ["lzyxp10"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvcznm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Jadarma",
        "can_mod_post": false, "created_utc": 1733061759.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_os7h6t5pc",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: Kotlin]\n\nVery simple first puzzle, and good opportunity
        to get the standard lib back into muscle memory!\n\n[AocKt Y2024D01](https://github.com/Jadarma/advent-of-code-kotlin-solutions/blob/main/solutions/aockt/y2024/Y2024D01.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin]&lt;/p&gt;\n\n&lt;p&gt;Very
        simple first puzzle, and good opportunity to get the standard lib back into
        muscle memory!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Jadarma/advent-of-code-kotlin-solutions/blob/main/solutions/aockt/y2024/Y2024D01.kt\"&gt;AocKt
        Y2024D01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvcznm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvcznm", "created":
        1733061759.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvepsj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Fyver42",
        "can_mod_post": false, "created_utc": 1733062476.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_13g61von", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: RISC-V assembly\\]\n\n[github](https://github.com/fyvonnet/AdventOfCode-2024-Assembly/blob/main/day01.asm)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: RISC-V assembly]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/fyvonnet/AdventOfCode-2024-Assembly/blob/main/day01.asm\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvepsj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvepsj", "created":
        1733062476.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvkxpv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "tymscar",
        "can_mod_post": false, "created_utc": 1733064937.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_5gebp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Kotlin\\]\n\nDecided to do this year in Kotlin. Wasted over
        an hour getting everything set up, tons of headaches with the IDE, with gradle,
        with everything, but the language is nice.\n\nPart1: [https://github.com/tymscar/Advent-Of-Code/blob/master/2024/kotlin/src/main/kotlin/com/tymscar/day01/part1/part1.kt](https://github.com/tymscar/Advent-Of-Code/blob/master/2024/kotlin/src/main/kotlin/com/tymscar/day01/part1/part1.kt)   \n  \nPart2:
        [https://github.com/tymscar/Advent-Of-Code/blob/master/2024/kotlin/src/main/kotlin/com/tymscar/day01/part2/part2.kt](https://github.com/tymscar/Advent-Of-Code/blob/master/2024/kotlin/src/main/kotlin/com/tymscar/day01/part2/part2.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Kotlin]&lt;/p&gt;\n\n&lt;p&gt;Decided
        to do this year in Kotlin. Wasted over an hour getting everything set up,
        tons of headaches with the IDE, with gradle, with everything, but the language
        is nice.&lt;/p&gt;\n\n&lt;p&gt;Part1: &lt;a href=\"https://github.com/tymscar/Advent-Of-Code/blob/master/2024/kotlin/src/main/kotlin/com/tymscar/day01/part1/part1.kt\"&gt;https://github.com/tymscar/Advent-Of-Code/blob/master/2024/kotlin/src/main/kotlin/com/tymscar/day01/part1/part1.kt&lt;/a&gt;   &lt;/p&gt;\n\n&lt;p&gt;Part2:
        &lt;a href=\"https://github.com/tymscar/Advent-Of-Code/blob/master/2024/kotlin/src/main/kotlin/com/tymscar/day01/part2/part2.kt\"&gt;https://github.com/tymscar/Advent-Of-Code/blob/master/2024/kotlin/src/main/kotlin/com/tymscar/day01/part2/part2.kt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvkxpv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvkxpv", "created":
        1733064937.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvm73n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "osalbahr",
        "can_mod_post": false, "created_utc": 1733065403.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_j34rdpm4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\n[https://github.com/osalbahr/Learn-Programming/blob/main/adventofcode/2024/day01.cpp](https://github.com/osalbahr/Learn-Programming/blob/main/adventofcode/2024/day01.cpp)\n\n[https://github.com/osalbahr/Learn-Programming/blob/main/adventofcode/2024/day01\\_2.cpp](https://github.com/osalbahr/Learn-Programming/blob/main/adventofcode/2024/day01_2.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/osalbahr/Learn-Programming/blob/main/adventofcode/2024/day01.cpp\"&gt;https://github.com/osalbahr/Learn-Programming/blob/main/adventofcode/2024/day01.cpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/osalbahr/Learn-Programming/blob/main/adventofcode/2024/day01_2.cpp\"&gt;https://github.com/osalbahr/Learn-Programming/blob/main/adventofcode/2024/day01_2.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvm73n/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvm73n", "created":
        1733065403.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvmi1t",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Aeonian9",
        "can_mod_post": false, "created_utc": 1733065515.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_1nhj4ox", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Julia\\]\n\nFor part 2, I initially used nested loops O(n\\^2),
        but my wife pointed out a faster way by initially recording the occurrences
        in the second list, which is O(2n).\n\n[Solution on GitHub](https://github.com/fgittins/AdventOfCode2024.jl/blob/main/src/day01.jl).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Julia]&lt;/p&gt;\n\n&lt;p&gt;For
        part 2, I initially used nested loops O(n^2), but my wife pointed out a faster
        way by initially recording the occurrences in the second list, which is O(2n).&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/fgittins/AdventOfCode2024.jl/blob/main/src/day01.jl\"&gt;Solution
        on GitHub&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvmi1t/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvmi1t", "created":
        1733065515.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvrclk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "pakapikk77",
        "can_mod_post": false, "created_utc": 1733067231.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_h0o3jwo1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\nSome of the other Rust solutions posted here create
        intermediary vectors during the input parsing. Using the [Iteraror::unzip()](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.unzip)
        method avoids this, resulting in a shorter more elegant code:\n\n        input\n            .lines()\n            .map(|line|
        {\n                line.split_ascii_whitespace()\n                    .map(|e|
        e.parse::&lt;u32&gt;().unwrap())\n                    .collect_tuple()\n                    .unwrap()\n            })\n            .unzip()\n\nInteresting
        to note that despite having collected the 450 previous stars, it''s the first
        time I get to use unzip().\n\nFull solution: [https://github.com/voberle/adventofcode/blob/main/2024/day01/src/main.rs](https://github.com/voberle/adventofcode/blob/main/2024/day01/src/main.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Some
        of the other Rust solutions posted here create intermediary vectors during
        the input parsing. Using the &lt;a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.unzip\"&gt;Iteraror::unzip()&lt;/a&gt;
        method avoids this, resulting in a shorter more elegant code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    input\n        .lines()\n        .map(|line|
        {\n            line.split_ascii_whitespace()\n                .map(|e| e.parse::&amp;lt;u32&amp;gt;().unwrap())\n                .collect_tuple()\n                .unwrap()\n        })\n        .unzip()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Interesting
        to note that despite having collected the 450 previous stars, it&amp;#39;s
        the first time I get to use unzip().&lt;/p&gt;\n\n&lt;p&gt;Full solution:
        &lt;a href=\"https://github.com/voberle/adventofcode/blob/main/2024/day01/src/main.rs\"&gt;https://github.com/voberle/adventofcode/blob/main/2024/day01/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvrclk/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvrclk", "created":
        1733067231.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733068220.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvtm58", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "sergiosgc",
        "can_mod_post": false, "created_utc": 1733068006.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_adshw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Nim\\]  \n[https://github.com/sergiosgc/AdventOfCode/blob/master/2024/day01/one.nim](https://github.com/sergiosgc/AdventOfCode/blob/master/2024/day01/one.nim)\n\n[https://github.com/sergiosgc/AdventOfCode/blob/master/2024/day01/two.nim](https://github.com/sergiosgc/AdventOfCode/blob/master/2024/day01/two.nim)\n\nI''m
        using AoC as an excuse to try out Nim. A couple observations so far:\n\n1.
        The compiler error reporting is a blast from the past (not in a good way).
        I''m probably spoiled by rustc, but nim''s errors remind me of Microsoft''s
        C++ compiler circa 2000;\n2. Functional aspects of the language are not amazing.
        It fails to deduce the type of a [stdin.lines.toSeq.map](http://stdin.lines.toSeq.map)
        chain, making it impossible to call foldl next. There''s probably some dumbassery
        between keyboard and chair (first time touching the language), but it should
        be straightforward, no?\n3. Is there no destructuring when defining lambda
        functions or is it again a PBKAC?", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Nim]&lt;br/&gt;\n&lt;a href=\"https://github.com/sergiosgc/AdventOfCode/blob/master/2024/day01/one.nim\"&gt;https://github.com/sergiosgc/AdventOfCode/blob/master/2024/day01/one.nim&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/sergiosgc/AdventOfCode/blob/master/2024/day01/two.nim\"&gt;https://github.com/sergiosgc/AdventOfCode/blob/master/2024/day01/two.nim&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        using AoC as an excuse to try out Nim. A couple observations so far:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;The
        compiler error reporting is a blast from the past (not in a good way). I&amp;#39;m
        probably spoiled by rustc, but nim&amp;#39;s errors remind me of Microsoft&amp;#39;s
        C++ compiler circa 2000;&lt;/li&gt;\n&lt;li&gt;Functional aspects of the language
        are not amazing. It fails to deduce the type of a &lt;a href=\"http://stdin.lines.toSeq.map\"&gt;stdin.lines.toSeq.map&lt;/a&gt;
        chain, making it impossible to call foldl next. There&amp;#39;s probably some
        dumbassery between keyboard and chair (first time touching the language),
        but it should be straightforward, no?&lt;/li&gt;\n&lt;li&gt;Is there no destructuring
        when defining lambda functions or is it again a PBKAC?&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvtm58/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvtm58", "created":
        1733068006.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwafh1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "RadioEven2609",
        "can_mod_post": false, "created_utc": 1733073475.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_9frzzq4k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nCursed one-liners!\n\nPart 1:\n\n    print(sum(map(lambda
        a, b: abs(a-b), *map(lambda l: sorted(map(int, l)), zip(*map(str.split, open(''in.txt'').readlines()))))))\n        \nPart
        2:\n\n    print((lambda pair: sum(map(lambda num: num * pair[1][num], pair[0])))(list(map(lambda
        enum: __import__(''collections'').Counter(enum[1]) if enum[0] else enum[1],
        enumerate(map(lambda l: map(int, l), zip(*map(str.split, open(''in.txt'').readlines()))))))))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Cursed
        one-liners!&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(sum(map(lambda
        a, b: abs(a-b), *map(lambda l: sorted(map(int, l)), zip(*map(str.split, open(&amp;#39;in.txt&amp;#39;).readlines()))))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print((lambda pair: sum(map(lambda
        num: num * pair[1][num], pair[0])))(list(map(lambda enum: __import__(&amp;#39;collections&amp;#39;).Counter(enum[1])
        if enum[0] else enum[1], enumerate(map(lambda l: map(int, l), zip(*map(str.split,
        open(&amp;#39;in.txt&amp;#39;).readlines()))))))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwafh1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwafh1", "created":
        1733073475.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzwe4e3", "id": "lzwe4e3", "parent_id":
        "t1_lzwafh1", "depth": 1, "children": ["lzwe4e3"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733080576.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwg7ct", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "onrustigescheikundig",
        "can_mod_post": false, "created_utc": 1733075245.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_1qggdbx9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Clojure] [LANGUAGE: Scheme (R6RS, chez)]\n\nSomeone during AoC
        2022 told me to give Clojure a shot when I was using Racket, so here I am.
        Honestly, it''s really nice after the chaos that was [me yoloing OCaml last
        year](https://github.com/EricKalkman/AoC2023).\n\n[2024 github](https://github.com/EricKalkman/AoC2024/)\n\nReasonably
        concise. Line splitting the input is pretty common in AoC, so I have some
        driver code (not shown here) that does the file IO and line splitting. Part
        1 splits each line in a list of lines into a list (well, `vector`, technically)
        of numbers, transposes and sorts the the lines, and un-transposes the lot
        to find the pairwise differences, which are summed. Transposition is achieved
        with `(apply map ...)`.\n\nPart 2 builds a num -&gt; count map from the right
        list using a nil punning trick for a one-line `reduce`. Each element of the
        left list is then multiplied with the result of passing it through the map
        (or zero if not in the map), and that stream is summed.\n\nPart 1:\n\n    (defn
        part-1 [lines]\n      (-&gt;&gt; lines\n           (map #(mapv parse-long
        (str/split % #\" +\")))\n           (apply map (comp sort vector)) ; transpose
        to get lists, then sort\n           (apply map (comp abs -))       ; un-transpose
        and find the abs diff between each element\n           (reduce +)))                   ;
        sum\n\nPart 2:\n\n    (defn part-2 [lines]\n      (let [[a b] (-&gt;&gt; lines\n                        (map
        #(mapv parse-long (str/split % #\" +\")))\n                        (apply
        map vector))]  ; get transposed lists\n        (as-&gt; b x\n          ; count
        each element in b, storing counts in a map\n          (reduce (fn [table n]
        (update table n #(inc (or % 0)))) {} x)\n          ; multiply each element
        of a with its count in b\n          (map #(* (x % 0) %) a)\n          ; sum\n          (reduce
        + x))))\n\nEDIT: I decided to implement the solution in pure R6RS Scheme as
        well for comparison, though I probably won''t continue to do so as the difficulty
        ramps up. Apparently, R6RS scheme does not have a `string-split` function,
        so I went with the nuclear option and hacked together a parser-combinator
        library that may or may not still have some bugs. I also threw a bunch of
        useful syntax like threading macros and auxiliary functions like `compose`
        into `util.scm`. Otherwise, the solution is very similar to Clojure, except
        for using an association list in Part 2 instead of a hashtable. See github
        for files.\n\n    (import\n      (rnrs)\n      (util)\n      (prefix (parsecomb)
        p:))\n    \n    (define line-parser (p:seq p:parse-int p:skip-ws p:parse-int))\n    (define
        parse-line (compose p:parse-result-val line-parser p:make-string-buffer))\n  \n    (define
        (part-1 lines)\n      (-&gt;&gt; lines\n           (map parse-line)\n           (apply
        map (compose (\u03bb (x) (list-sort &lt; x)) list))\n           (apply map
        (compose abs -))\n           (fold-left + 0)))\n  \n    (define (assv-get
        x lst) ; assv returns the cons cell; assv-get cdr''s the cell\n      (and-&gt;&gt;
        (assv x lst)\n              (cdr)))\n  \n    (define (part-2 lines)\n      (let
        ([lsts (-&gt;&gt; lines\n                       (map parse-line)\n                       (apply
        map list))])\n        (as-&gt; (cadr lsts) x\n              (fold-left (\u03bb
        (table n)\n                            (acons n (+ 1 (or (assv-get n table)
        0)) table))\n                         ''() x)\n              (map (\u03bb
        (n) (* n (or (assv-get n x) 0))) (car lsts))\n              (fold-left + 0
        x))))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Clojure] [LANGUAGE: Scheme (R6RS, chez)]&lt;/p&gt;\n\n&lt;p&gt;Someone during
        AoC 2022 told me to give Clojure a shot when I was using Racket, so here I
        am. Honestly, it&amp;#39;s really nice after the chaos that was &lt;a href=\"https://github.com/EricKalkman/AoC2023\"&gt;me
        yoloing OCaml last year&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/EricKalkman/AoC2024/\"&gt;2024
        github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Reasonably concise. Line splitting
        the input is pretty common in AoC, so I have some driver code (not shown here)
        that does the file IO and line splitting. Part 1 splits each line in a list
        of lines into a list (well, &lt;code&gt;vector&lt;/code&gt;, technically)
        of numbers, transposes and sorts the the lines, and un-transposes the lot
        to find the pairwise differences, which are summed. Transposition is achieved
        with &lt;code&gt;(apply map ...)&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Part
        2 builds a num -&amp;gt; count map from the right list using a nil punning
        trick for a one-line &lt;code&gt;reduce&lt;/code&gt;. Each element of the
        left list is then multiplied with the result of passing it through the map
        (or zero if not in the map), and that stream is summed.&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn part-1 [lines]\n  (-&amp;gt;&amp;gt;
        lines\n       (map #(mapv parse-long (str/split % #&amp;quot; +&amp;quot;)))\n       (apply
        map (comp sort vector)) ; transpose to get lists, then sort\n       (apply
        map (comp abs -))       ; un-transpose and find the abs diff between each
        element\n       (reduce +)))                   ; sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn part-2 [lines]\n  (let [[a b]
        (-&amp;gt;&amp;gt; lines\n                    (map #(mapv parse-long (str/split
        % #&amp;quot; +&amp;quot;)))\n                    (apply map vector))]  ;
        get transposed lists\n    (as-&amp;gt; b x\n      ; count each element in
        b, storing counts in a map\n      (reduce (fn [table n] (update table n #(inc
        (or % 0)))) {} x)\n      ; multiply each element of a with its count in b\n      (map
        #(* (x % 0) %) a)\n      ; sum\n      (reduce + x))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT:
        I decided to implement the solution in pure R6RS Scheme as well for comparison,
        though I probably won&amp;#39;t continue to do so as the difficulty ramps
        up. Apparently, R6RS scheme does not have a &lt;code&gt;string-split&lt;/code&gt;
        function, so I went with the nuclear option and hacked together a parser-combinator
        library that may or may not still have some bugs. I also threw a bunch of
        useful syntax like threading macros and auxiliary functions like &lt;code&gt;compose&lt;/code&gt;
        into &lt;code&gt;util.scm&lt;/code&gt;. Otherwise, the solution is very similar
        to Clojure, except for using an association list in Part 2 instead of a hashtable.
        See github for files.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(import\n  (rnrs)\n  (util)\n  (prefix
        (parsecomb) p:))\n\n(define line-parser (p:seq p:parse-int p:skip-ws p:parse-int))\n(define
        parse-line (compose p:parse-result-val line-parser p:make-string-buffer))\n\n(define
        (part-1 lines)\n  (-&amp;gt;&amp;gt; lines\n       (map parse-line)\n       (apply
        map (compose (\u03bb (x) (list-sort &amp;lt; x)) list))\n       (apply map
        (compose abs -))\n       (fold-left + 0)))\n\n(define (assv-get x lst) ; assv
        returns the cons cell; assv-get cdr&amp;#39;s the cell\n  (and-&amp;gt;&amp;gt;
        (assv x lst)\n          (cdr)))\n\n(define (part-2 lines)\n  (let ([lsts (-&amp;gt;&amp;gt;
        lines\n                   (map parse-line)\n                   (apply map
        list))])\n    (as-&amp;gt; (cadr lsts) x\n          (fold-left (\u03bb (table
        n)\n                        (acons n (+ 1 (or (assv-get n table) 0)) table))\n                     &amp;#39;()
        x)\n          (map (\u03bb (n) (* n (or (assv-get n x) 0))) (car lsts))\n          (fold-left
        + 0 x))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwg7ct/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwg7ct", "created":
        1733075245.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwjnkp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Kwuray",
        "can_mod_post": false, "created_utc": 1733076300.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_2q593mhp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Posix Shell &amp; Utils\\]\n\n  \nGenerate some arithmetic operations
        and process them with `bc`\n\nPart1:\n\n    #!/bin/bash\n    LIST_ONE=$(cut
        -d'' ''\u00a0 -f1 $1 | sort -n)\n    LIST_TWO=$(cut -d'' ''\u00a0 -f4 $1 |
        sort -n)\n    echo \"$(paste -d''-'' &lt;(echo \"$LIST_TWO\") &lt;(echo \"$LIST_ONE\"))\"
        | bc | tr -d ''-'' | tr ''\\n'' ''+'' | sed ''s/\\+$//'' | bc\n\nPart2:\n\n    #!/bin/bash\n    LIST_ONE=$(cut
        -d'' ''\u00a0 -f1 $1 | sort -n)\n    LIST_TWO=$(cut -d'' ''\u00a0 -f4 $1 |
        sort -n)\n    LIST_TWO+=\"\\n$(echo \"$LIST_ONE\" | sort -n | uniq)\"\n    LIST_ONE+=\"\\n$(echo
        \"$LIST_TWO\" | sort -n | uniq)\"\n    UNIQUE_LEFT=$(echo -e \"$LIST_ONE\"
        | sort -n | uniq -c | sed ''s/^ *//'' | tr '' '' '';'')\n    UNIQUE_RIGHT=$(echo
        -e \"$LIST_TWO\" | sort -n | uniq -c | sed ''s/^ *//'' | tr '' '' '';'')\n    paste
        -d'';'' &lt;(echo \"$UNIQUE_LEFT\") &lt;(echo \"$UNIQUE_RIGHT\") | sed -E
        ''s/([0-9]+);([0-9]+);([0-9]+);([0-9]+)/\\(\\1-1\\)*\\(\\2*\\(\\3-1\\)\\)/''
        | bc | tr ''\\n'' ''+'' | sed ''s/\\+$//'' | bc", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Posix Shell &amp;amp; Utils]&lt;/p&gt;\n\n&lt;p&gt;Generate
        some arithmetic operations and process them with &lt;code&gt;bc&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/bash\nLIST_ONE=$(cut
        -d&amp;#39; &amp;#39;\u00a0 -f1 $1 | sort -n)\nLIST_TWO=$(cut -d&amp;#39;
        &amp;#39;\u00a0 -f4 $1 | sort -n)\necho &amp;quot;$(paste -d&amp;#39;-&amp;#39;
        &amp;lt;(echo &amp;quot;$LIST_TWO&amp;quot;) &amp;lt;(echo &amp;quot;$LIST_ONE&amp;quot;))&amp;quot;
        | bc | tr -d &amp;#39;-&amp;#39; | tr &amp;#39;\\n&amp;#39; &amp;#39;+&amp;#39;
        | sed &amp;#39;s/\\+$//&amp;#39; | bc\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/bash\nLIST_ONE=$(cut
        -d&amp;#39; &amp;#39;\u00a0 -f1 $1 | sort -n)\nLIST_TWO=$(cut -d&amp;#39;
        &amp;#39;\u00a0 -f4 $1 | sort -n)\nLIST_TWO+=&amp;quot;\\n$(echo &amp;quot;$LIST_ONE&amp;quot;
        | sort -n | uniq)&amp;quot;\nLIST_ONE+=&amp;quot;\\n$(echo &amp;quot;$LIST_TWO&amp;quot;
        | sort -n | uniq)&amp;quot;\nUNIQUE_LEFT=$(echo -e &amp;quot;$LIST_ONE&amp;quot;
        | sort -n | uniq -c | sed &amp;#39;s/^ *//&amp;#39; | tr &amp;#39; &amp;#39;
        &amp;#39;;&amp;#39;)\nUNIQUE_RIGHT=$(echo -e &amp;quot;$LIST_TWO&amp;quot;
        | sort -n | uniq -c | sed &amp;#39;s/^ *//&amp;#39; | tr &amp;#39; &amp;#39;
        &amp;#39;;&amp;#39;)\npaste -d&amp;#39;;&amp;#39; &amp;lt;(echo &amp;quot;$UNIQUE_LEFT&amp;quot;)
        &amp;lt;(echo &amp;quot;$UNIQUE_RIGHT&amp;quot;) | sed -E &amp;#39;s/([0-9]+);([0-9]+);([0-9]+);([0-9]+)/\\(\\1-1\\)*\\(\\2*\\(\\3-1\\)\\)/&amp;#39;
        | bc | tr &amp;#39;\\n&amp;#39; &amp;#39;+&amp;#39; | sed &amp;#39;s/\\+$//&amp;#39;
        | bc\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwjnkp/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwjnkp", "created":
        1733076300.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzyvorg", "id": "lzyvorg", "parent_id":
        "t1_lzwjnkp", "depth": 1, "children": ["lzyvorg"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwpc7l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "kbielefe",
        "can_mod_post": false, "created_utc": 1733078039.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_3be8v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Scala]\n\n[GitHub](https://github.com/kbielefe/advent-of-code/blob/1e036d317d702fd8f0dc763704ee58ac5eca6dd2/2024/src/main/scala/01.scala)\n\nFairly
        straightforward, aside from slightly more complex parsing than I''d expect
        for a day one problem (anti-LLM measures perhaps?). Part 2 was a nice fit
        for Scala''s `groupMapReduce(identity)(identity)(_ + _)`. Didn''t need to
        multiply, just sum during the reduce instead of counting there.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Scala]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/kbielefe/advent-of-code/blob/1e036d317d702fd8f0dc763704ee58ac5eca6dd2/2024/src/main/scala/01.scala\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Fairly
        straightforward, aside from slightly more complex parsing than I&amp;#39;d
        expect for a day one problem (anti-LLM measures perhaps?). Part 2 was a nice
        fit for Scala&amp;#39;s &lt;code&gt;groupMapReduce(identity)(identity)(_ +
        _)&lt;/code&gt;. Didn&amp;#39;t need to multiply, just sum during the reduce
        instead of counting there.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwpc7l/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwpc7l", "created":
        1733078039.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwtw8p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "penguinencounter",
        "can_mod_post": false, "created_utc": 1733079422.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_3rely4cb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Inform 7]\n\nInform 7 is interactive fiction authoring software.
        As it turns out, Inform is not good at doing anything computation-related;
        this code takes just over 5 minutes to run on my computer.\n\n* Code: [paste](https://topaz.github.io/paste/#XQAAAQDqEQAAAAAAAAAREEXkNLccTGFqm7897vGrtynzbZVhPURH6Lw7zc5B/IxLm0A++qFGUpgcvzKooym35+0fatbzfjoKjYUMujaZPAtyxFkeFVqgRu9ppuCaTTENmPjlXNR5LgSqyN8ncSbt9fmf1hB7CdyEXQlAjnFCn9iC3nsq2+qhlPcUtQQz6Sh0yr+gARdnO5DMg41b5/wPCd8KZa/MREKUc8+uQhbUVDan+WrtQDJamEDC5AMcgPO4r0rdZ5AkfiVhDpcOwljQWbDgi04fTLS/JgCgX+g0g76mPTmhPyblofcaxroIRtAaJNgqZVsLJWE7yfjYJiLAA4n23UfR5zS+LBO6Icd34hDcOE5Edn/N++T46g0IHEvgLnZxDOQGiZ6Tb1iV0GPYGTJCdbsUB6sAdr0cUsUnSJNLTCCQTpUqOWFuJg2QnjoccI3Dcxrc3TasQ/AyNZsr5aISLF//yx/FpTExA5SP9+rdnLRmER29AG1WwNSwtH/44s9xBPcdFcRZlDe1u4NwSB8KLDDrL75kXJX7ePDv6OrCYH410E3fFZjhEmNfEHokFMyH14+cRqsequ/YiEk6Q/nHxMKrkL9mgGhlWCKdiqzo+sPfKSggZAMVqrGFBcWSijdHyvdtAM8mEcYGF74p2N7tjwreSBOwaJXEBB9Ikn28+KcNjuICH2GPp7tXxwvJikeo+FiUFlP7bGJS55bK8Av+LJ7G+j79MSeqgAgoTTtvGYH8gYxEQMnm0fVHwdwOuTNa2241r4lbC0jc4bJsf9++/42i1UG8bDFunj/4wYBF365gqHk7AKaKPTxPwBB2hTPaHyNjGr/1VqUDKT5jRDZ452rRe12Ic0QjTdk4esuWJaO6yNe/mevJQCYgitUvUnahlI8Tga2/6Ck0fd1xvgL1eIfUSTgUg3BdTBRkl+B+OB/IxDyAF6MlnwmQkqvYfiCyCWkcOC+bjcanUd0PP7IaIZAycjj3h2scvogWpLb2s16NLMx9h0juoCxprC4uVhzkEenbmvc66uWna7ANc7fdwoUE60weF79itJi6TsViwtfxSvqR1rlgXDop4vNcJEteV7xZZTig87QyTiEb/wZOex+RPD9dblrvyljPrRkyX9WTXugUZc1yjOs7f9F5oKJsKTPH00XLT1Emtb+yUCo2T6fC8FfunW+1eNXhpisnUnfdfdnL4puFz0WedObp7eBxcJphmCdYdrVpPsanFE63+rVbbzf8pbUkyn3TOZcUGhkrNbFMhRXJkysN0htNweAZJ/YtegpiiVYnNstqQbcEw63+hHmUqeJ46v+c2Mo80nXe5ovFNGqtVPgyNWQD3JJX2IVOyciiM0zAvSXxDdTPMx1VTvTFm3F7jut34+9U+CBcVm8AfaFiBAevGqonUposNt8Zr4F2mR2swW/7c11UeHNwMY+ahswmNEUdNxn5oqbiBe3BDot7Lfq6oUdOQSYfQGlMiBw0UDeR9LfVRtQYTxf38udYIkP1K00hOSHNSxXIzheWkjKOv+4+xIfGMPqxwCdXSIler+RzzZi9VgJxK4zallMGbMritYWTFinf9gqfCmuAWyfLKiGKXdmSOSoVmTwg8lvunactMOFPCTxpW7Bx9PiDmiNe2/Yfr0KF6XtkGS/xrZT/GU+gE1LAku8WuPCx/yVXDnelReLja9GPssE+T1MDxeFaEKI2sCeNt+g0jROvR0O9ksAGd8NnqIuyJBWDoq97068pbmTm8vFXpCfdaz+X1zKWRb+fSn15uRg3zOfhzCK3BGKlA5FS5jHUarrXtroUHIX8SwYmgbKgBwepGRHH1IM3pwLhmGSpOkByjaxvHmJLsqNSgOZURW8kRPrxD72j6RpQVD/UpKV9yNB50km8CVFSvQNlvyrsPBM+J441/zKDUSqXQFvnoVqakFjmggMssRcayn8+s89cZpqJglhIM3YpoS0pRu/qTUgECcgjKKeSO9TBMAmRUiMYKYD4vpROBL2bZe82gVIdusSk4ulDr2a4ZJpwxL8xzBJXTIz0dozqBn6Zcjg/0w3QEHrrEI+JsR+MK83KA3obE528LP/KaCSvwvBXqwM+lR1/ORu/Uvbdjlv46xSzcjFw1TOLvSLxqyMVexa1Z5HMBb9PwslUh5YkWkFXY3JlHNq3AV1qjegrNQpMmZwISAygatOCBLaTSjYv1+v/O7rmU68x7y5V7ljs1iO02ejO8TX9KYGrqa+IKlR1cBm79hZVHlBLVZn5ADsDwJDwyiy/PaqCzY9ksoazOuFPClGMtXNoK41r3Ua4tDP/TAOOAA==)\n*
        Inform 7: [https://ganelson.github.io/inform-website/](https://ganelson.github.io/inform-website/)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Inform 7]&lt;/p&gt;\n\n&lt;p&gt;Inform
        7 is interactive fiction authoring software. As it turns out, Inform is not
        good at doing anything computation-related; this code takes just over 5 minutes
        to run on my computer.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Code: &lt;a href=\"https://topaz.github.io/paste/#XQAAAQDqEQAAAAAAAAAREEXkNLccTGFqm7897vGrtynzbZVhPURH6Lw7zc5B/IxLm0A++qFGUpgcvzKooym35+0fatbzfjoKjYUMujaZPAtyxFkeFVqgRu9ppuCaTTENmPjlXNR5LgSqyN8ncSbt9fmf1hB7CdyEXQlAjnFCn9iC3nsq2+qhlPcUtQQz6Sh0yr+gARdnO5DMg41b5/wPCd8KZa/MREKUc8+uQhbUVDan+WrtQDJamEDC5AMcgPO4r0rdZ5AkfiVhDpcOwljQWbDgi04fTLS/JgCgX+g0g76mPTmhPyblofcaxroIRtAaJNgqZVsLJWE7yfjYJiLAA4n23UfR5zS+LBO6Icd34hDcOE5Edn/N++T46g0IHEvgLnZxDOQGiZ6Tb1iV0GPYGTJCdbsUB6sAdr0cUsUnSJNLTCCQTpUqOWFuJg2QnjoccI3Dcxrc3TasQ/AyNZsr5aISLF//yx/FpTExA5SP9+rdnLRmER29AG1WwNSwtH/44s9xBPcdFcRZlDe1u4NwSB8KLDDrL75kXJX7ePDv6OrCYH410E3fFZjhEmNfEHokFMyH14+cRqsequ/YiEk6Q/nHxMKrkL9mgGhlWCKdiqzo+sPfKSggZAMVqrGFBcWSijdHyvdtAM8mEcYGF74p2N7tjwreSBOwaJXEBB9Ikn28+KcNjuICH2GPp7tXxwvJikeo+FiUFlP7bGJS55bK8Av+LJ7G+j79MSeqgAgoTTtvGYH8gYxEQMnm0fVHwdwOuTNa2241r4lbC0jc4bJsf9++/42i1UG8bDFunj/4wYBF365gqHk7AKaKPTxPwBB2hTPaHyNjGr/1VqUDKT5jRDZ452rRe12Ic0QjTdk4esuWJaO6yNe/mevJQCYgitUvUnahlI8Tga2/6Ck0fd1xvgL1eIfUSTgUg3BdTBRkl+B+OB/IxDyAF6MlnwmQkqvYfiCyCWkcOC+bjcanUd0PP7IaIZAycjj3h2scvogWpLb2s16NLMx9h0juoCxprC4uVhzkEenbmvc66uWna7ANc7fdwoUE60weF79itJi6TsViwtfxSvqR1rlgXDop4vNcJEteV7xZZTig87QyTiEb/wZOex+RPD9dblrvyljPrRkyX9WTXugUZc1yjOs7f9F5oKJsKTPH00XLT1Emtb+yUCo2T6fC8FfunW+1eNXhpisnUnfdfdnL4puFz0WedObp7eBxcJphmCdYdrVpPsanFE63+rVbbzf8pbUkyn3TOZcUGhkrNbFMhRXJkysN0htNweAZJ/YtegpiiVYnNstqQbcEw63+hHmUqeJ46v+c2Mo80nXe5ovFNGqtVPgyNWQD3JJX2IVOyciiM0zAvSXxDdTPMx1VTvTFm3F7jut34+9U+CBcVm8AfaFiBAevGqonUposNt8Zr4F2mR2swW/7c11UeHNwMY+ahswmNEUdNxn5oqbiBe3BDot7Lfq6oUdOQSYfQGlMiBw0UDeR9LfVRtQYTxf38udYIkP1K00hOSHNSxXIzheWkjKOv+4+xIfGMPqxwCdXSIler+RzzZi9VgJxK4zallMGbMritYWTFinf9gqfCmuAWyfLKiGKXdmSOSoVmTwg8lvunactMOFPCTxpW7Bx9PiDmiNe2/Yfr0KF6XtkGS/xrZT/GU+gE1LAku8WuPCx/yVXDnelReLja9GPssE+T1MDxeFaEKI2sCeNt+g0jROvR0O9ksAGd8NnqIuyJBWDoq97068pbmTm8vFXpCfdaz+X1zKWRb+fSn15uRg3zOfhzCK3BGKlA5FS5jHUarrXtroUHIX8SwYmgbKgBwepGRHH1IM3pwLhmGSpOkByjaxvHmJLsqNSgOZURW8kRPrxD72j6RpQVD/UpKV9yNB50km8CVFSvQNlvyrsPBM+J441/zKDUSqXQFvnoVqakFjmggMssRcayn8+s89cZpqJglhIM3YpoS0pRu/qTUgECcgjKKeSO9TBMAmRUiMYKYD4vpROBL2bZe82gVIdusSk4ulDr2a4ZJpwxL8xzBJXTIz0dozqBn6Zcjg/0w3QEHrrEI+JsR+MK83KA3obE528LP/KaCSvwvBXqwM+lR1/ORu/Uvbdjlv46xSzcjFw1TOLvSLxqyMVexa1Z5HMBb9PwslUh5YkWkFXY3JlHNq3AV1qjegrNQpMmZwISAygatOCBLaTSjYv1+v/O7rmU68x7y5V7ljs1iO02ejO8TX9KYGrqa+IKlR1cBm79hZVHlBLVZn5ADsDwJDwyiy/PaqCzY9ksoazOuFPClGMtXNoK41r3Ua4tDP/TAOOAA==\"&gt;paste&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Inform
        7: &lt;a href=\"https://ganelson.github.io/inform-website/\"&gt;https://ganelson.github.io/inform-website/&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwtw8p/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwtw8p", "created":
        1733079422.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzwuvat", "id": "lzwuvat", "parent_id":
        "t1_lzwtw8p", "depth": 1, "children": ["lzwuvat", "lzxkauj"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwyo1y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "PerturbedHamster",
        "can_mod_post": false, "created_utc": 1733080844.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_46ky7kqj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: bash\\]\n\nThe goal was to use basic bash (i.e. no sed or awk)
        in one line\n\nPart 1:\n\n`paste -d ''-'' &lt;(sort -k1 input_20241201.txt
        | tr -s '' '' | cut -d '' '' -f1) &lt;(sort -k2 input_20241201.txt | tr -s
        '' '' | cut  -d '' '' -f2) | bc | tr -d ''-'' | paste -sd+ | bc`\n\nPart 2:\n\n`comm
        -12 &lt;(sort -k1 input_20241201.txt | tr -s '' '' | cut -d '' '' -f1) &lt;(sort
        -k2 input_20241201.txt | tr -s '' '' | cut -d '' '' -f2) | xargs -I ''{}''
        -n 1 grep -o \"{}$\" input_20241201.txt | uniq -c | tr -s '' '' | cut -d ''
        '' -f2- | tr -s '' '' ''*'' | paste -sd+ | bc`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: bash]&lt;/p&gt;\n\n&lt;p&gt;The goal was
        to use basic bash (i.e. no sed or awk) in one line&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;paste -d &amp;#39;-&amp;#39; &amp;lt;(sort
        -k1 input_20241201.txt | tr -s &amp;#39; &amp;#39; | cut -d &amp;#39; &amp;#39;
        -f1) &amp;lt;(sort -k2 input_20241201.txt | tr -s &amp;#39; &amp;#39; | cut  -d
        &amp;#39; &amp;#39; -f2) | bc | tr -d &amp;#39;-&amp;#39; | paste -sd+ | bc&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;comm -12 &amp;lt;(sort -k1 input_20241201.txt
        | tr -s &amp;#39; &amp;#39; | cut -d &amp;#39; &amp;#39; -f1) &amp;lt;(sort
        -k2 input_20241201.txt | tr -s &amp;#39; &amp;#39; | cut -d &amp;#39; &amp;#39;
        -f2) | xargs -I &amp;#39;{}&amp;#39; -n 1 grep -o &amp;quot;{}$&amp;quot;
        input_20241201.txt | uniq -c | tr -s &amp;#39; &amp;#39; | cut -d &amp;#39;
        &amp;#39; -f2- | tr -s &amp;#39; &amp;#39; &amp;#39;*&amp;#39; | paste -sd+
        | bc&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwyo1y/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwyo1y", "created":
        1733080844.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzxk84k", "id": "lzxk84k", "parent_id":
        "t1_lzwyo1y", "depth": 1, "children": ["lzxk84k"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx0yun",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Sherbert_Positive",
        "can_mod_post": false, "created_utc": 1733081543.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_6rw5qsb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Clojure\\]\n\nI guess I could have made my life easier somehow,
        but I need to refresh my Clojure\n\n    (defn problem1 [input]\n      (let
        [indexed (map-indexed vector\n                                 (map #(Integer/parseInt
        %) (re-seq #\"\\d+\" input)))\n            left (sort (map second (filter
        #(even? (first %)) indexed)))\n            right (sort (map second (filter
        #(odd? (first %)) indexed)))]\n        (reduce + (map abs (map - left right)))))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Clojure]&lt;/p&gt;\n\n&lt;p&gt;I
        guess I could have made my life easier somehow, but I need to refresh my Clojure&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn
        problem1 [input]\n  (let [indexed (map-indexed vector\n                             (map
        #(Integer/parseInt %) (re-seq #&amp;quot;\\d+&amp;quot; input)))\n        left
        (sort (map second (filter #(even? (first %)) indexed)))\n        right (sort
        (map second (filter #(odd? (first %)) indexed)))]\n    (reduce + (map abs
        (map - left right)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx0yun/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzx0yun", "created": 1733081543.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx6ant",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "tobega",
        "can_mod_post": false, "created_utc": 1733083170.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_56v5itu2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Tailspinv0.5\\]\n\nHaven''t gotten around to implementing reading
        of input yet, so manually formatted example input inline.\n\nCompressed like
        numbers together in the sorted arrays, then stepped through the compressed
        arrays, matching up.\n\n[https://github.com/tobega/aoc2024/blob/main/day1/solution.tt](https://github.com/tobega/aoc2024/blob/main/day1/solution.tt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Tailspinv0.5]&lt;/p&gt;\n\n&lt;p&gt;Haven&amp;#39;t
        gotten around to implementing reading of input yet, so manually formatted
        example input inline.&lt;/p&gt;\n\n&lt;p&gt;Compressed like numbers together
        in the sorted arrays, then stepped through the compressed arrays, matching
        up.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/tobega/aoc2024/blob/main/day1/solution.tt\"&gt;https://github.com/tobega/aoc2024/blob/main/day1/solution.tt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx6ant/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx6ant", "created":
        1733083170.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx716i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "POGtastic",
        "can_mod_post": false, "created_utc": 1733083393.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_9rleo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: F#]\n\nhttps://github.com/mbottini/AOC2024/blob/main/Day01/Program.fs\n\nEasy
        little warmup, great test for some of my Prelude utility functions. `Seq`
        is extremely good for these kinds of tasks.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: F#]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/mbottini/AOC2024/blob/main/Day01/Program.fs\"&gt;https://github.com/mbottini/AOC2024/blob/main/Day01/Program.fs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Easy
        little warmup, great test for some of my Prelude utility functions. &lt;code&gt;Seq&lt;/code&gt;
        is extremely good for these kinds of tasks.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx716i/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzx716i", "created": 1733083393.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxg5k6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "InfamousTrouble7993",
        "can_mod_post": false, "created_utc": 1733086180.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_e3gtuzyo0",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Haskell\\]\n\n    import qualified Debug.Trace
        as D \n    import Data.List\n    \n    main= do \n        let filename = \"aoc_day_1_1_input.txt\"\n        fileContent
        &lt;- readFile filename\n        let list = lines fileContent\n        let
        rawNumbers = (map words list)\n        let splittedList = (map (\\x -&gt;
        x!!0) rawNumbers, map (\\x -&gt; x!!1) rawNumbers)\n        let leftColumnAsStrings
        = fst splittedList\n        let rightColumnAsStrings = snd splittedList\n        let
        leftColumn = map (\\x -&gt; read x :: Int) leftColumnAsStrings\n        let
        rightColumn = map (\\x -&gt; read x :: Int) rightColumnAsStrings\n    \n        --
        part one\n        let leftColumnSorted = sort leftColumn\n        let rightColumnSorted
        = sort rightColumn\n        let diff = sum (map (\\(x, y) -&gt; abs (x-y)
        :: Int) (zip leftColumnSorted rightColumnSorted))\n        \n        -- part
        two\n        let distinctLeftColumn = distinct leftColumnSorted\n        let
        occLeftColumn = occurences leftColumnSorted\n    \n        let distinctRightColumn
        = distinct rightColumnSorted\n        let occRightColumn = occurences rightColumnSorted\n    \n        let
        simScore = sum (map (\\(x, y) -&gt; x * y *  (if (getIndex x distinctRightColumn
        0) == -1 then 0 else occRightColumn!!(getIndex x distinctRightColumn 0)))
        (zip distinctLeftColumn occLeftColumn))\n    \n        print (\"Part one:
        \"  ++ show diff)\n        print (\"Part two: \" ++ show simScore)\n    \n    \n    getIndex::
        Int -&gt; [Int] -&gt; Int -&gt; Int\n    getIndex x (y:ys) i\n        | x
        == y = i\n        | (length ys == 0) = -1\n        | otherwise = getIndex
        x ys (i+1)\n    \n    count :: Int -&gt; [Int] -&gt; Int\n    count x [] =
        0\n    count x xs = length (filter (==x) xs)\n    \n    distinct :: [Int]
        -&gt; [Int]\n    distinct [] = []\n    distinct (x:xs) = x:(distinct (filter
        (/=x) xs))\n    \n    occurences :: [Int] -&gt; [Int]\n    occurences [] =
        []\n    occurences (x:xs) = (count x (x:xs)):(occurences (filter (/=x) xs))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Haskell]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        qualified Debug.Trace as D \nimport Data.List\n\nmain= do \n    let filename
        = &amp;quot;aoc_day_1_1_input.txt&amp;quot;\n    fileContent &amp;lt;- readFile
        filename\n    let list = lines fileContent\n    let rawNumbers = (map words
        list)\n    let splittedList = (map (\\x -&amp;gt; x!!0) rawNumbers, map (\\x
        -&amp;gt; x!!1) rawNumbers)\n    let leftColumnAsStrings = fst splittedList\n    let
        rightColumnAsStrings = snd splittedList\n    let leftColumn = map (\\x -&amp;gt;
        read x :: Int) leftColumnAsStrings\n    let rightColumn = map (\\x -&amp;gt;
        read x :: Int) rightColumnAsStrings\n\n    -- part one\n    let leftColumnSorted
        = sort leftColumn\n    let rightColumnSorted = sort rightColumn\n    let diff
        = sum (map (\\(x, y) -&amp;gt; abs (x-y) :: Int) (zip leftColumnSorted rightColumnSorted))\n\n    --
        part two\n    let distinctLeftColumn = distinct leftColumnSorted\n    let
        occLeftColumn = occurences leftColumnSorted\n\n    let distinctRightColumn
        = distinct rightColumnSorted\n    let occRightColumn = occurences rightColumnSorted\n\n    let
        simScore = sum (map (\\(x, y) -&amp;gt; x * y *  (if (getIndex x distinctRightColumn
        0) == -1 then 0 else occRightColumn!!(getIndex x distinctRightColumn 0)))
        (zip distinctLeftColumn occLeftColumn))\n\n    print (&amp;quot;Part one:
        &amp;quot;  ++ show diff)\n    print (&amp;quot;Part two: &amp;quot; ++ show
        simScore)\n\n\ngetIndex:: Int -&amp;gt; [Int] -&amp;gt; Int -&amp;gt; Int\ngetIndex
        x (y:ys) i\n    | x == y = i\n    | (length ys == 0) = -1\n    | otherwise
        = getIndex x ys (i+1)\n\ncount :: Int -&amp;gt; [Int] -&amp;gt; Int\ncount
        x [] = 0\ncount x xs = length (filter (==x) xs)\n\ndistinct :: [Int] -&amp;gt;
        [Int]\ndistinct [] = []\ndistinct (x:xs) = x:(distinct (filter (/=x) xs))\n\noccurences
        :: [Int] -&amp;gt; [Int]\noccurences [] = []\noccurences (x:xs) = (count x
        (x:xs)):(occurences (filter (/=x) xs))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxg5k6/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxg5k6", "created":
        1733086180.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxlab3", "id": "lzxlab3", "parent_id":
        "t1_lzxg5k6", "depth": 1, "children": ["lzxlab3"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxgwjc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Smylers",
        "can_mod_post": false, "created_utc": 1733086409.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 6, "author_fullname": "t2_13cudg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Perl]\n\n    pairmap { push @l, $a; push @r, $b } map { /\\d+/g
        } &lt;&gt;;\n    say sum zip_by { abs ($_[0] - $_[1]) } [sort @l], [sort @r];\n    $r_tally{$_}++
        foreach @r;\n    say sum map { $_ * $r_tally{$_} } @l;\n\n[Full code with
        imports](https://topaz.github.io/paste/#XQAAAQCDAQAAAAAAAAARiEAi+CcWVOjW+vdhrEc7fZz0yqgwDN9Oco0IyqfWfFeqoxUbX1lp8EJoY3bM6j+i0PxUC74ugDWTnHiBLbOO1MR6TZtN2kv7XWiLwZO7ZUUuATWWfPZN+d3a4PCv+bATxfL02gNPsvMGWcXAHXh1kniW7tsLWzc4mG2RuJB72CHFrXY8ihKFAy4U1BojouXvWS+IsKq20FHxXbARxK6vZ7FCckbFPv04jA/Qp3mfZ+qFBsddioasAfVuuAnUeJ+kuyuoqspubvhhSCPefLezlgnwzLCPRv8bj0ILYWiPnLLi65IJvxPyXA9fGO0pQRRw7dYk2uSdlK2SDPo++SFmWqaT/oF8BwPB/DFPbiO8IDggyuVuSyOhPuf/+iJ1GA==).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Perl]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pairmap
        { push @l, $a; push @r, $b } map { /\\d+/g } &amp;lt;&amp;gt;;\nsay sum zip_by
        { abs ($_[0] - $_[1]) } [sort @l], [sort @r];\n$r_tally{$_}++ foreach @r;\nsay
        sum map { $_ * $r_tally{$_} } @l;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCDAQAAAAAAAAARiEAi+CcWVOjW+vdhrEc7fZz0yqgwDN9Oco0IyqfWfFeqoxUbX1lp8EJoY3bM6j+i0PxUC74ugDWTnHiBLbOO1MR6TZtN2kv7XWiLwZO7ZUUuATWWfPZN+d3a4PCv+bATxfL02gNPsvMGWcXAHXh1kniW7tsLWzc4mG2RuJB72CHFrXY8ihKFAy4U1BojouXvWS+IsKq20FHxXbARxK6vZ7FCckbFPv04jA/Qp3mfZ+qFBsddioasAfVuuAnUeJ+kuyuoqspubvhhSCPefLezlgnwzLCPRv8bj0ILYWiPnLLi65IJvxPyXA9fGO0pQRRw7dYk2uSdlK2SDPo++SFmWqaT/oF8BwPB/DFPbiO8IDggyuVuSyOhPuf/+iJ1GA==\"&gt;Full
        code with imports&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxgwjc/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxgwjc", "created":
        1733086409.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxupfy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "lscddit",
        "can_mod_post": false, "created_utc": 1733090763.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_odfez", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n    import numpy as np\n    x = np.loadtxt(\"day01input.txt\",
        dtype=int)\n    print(sum(np.abs(np.sort(x[:, 0]) - np.sort(x[:, 1]))))\n    print(sum([n
        * sum(x[:, 1] == n) for n in x[:, 0]]))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        numpy as np\nx = np.loadtxt(&amp;quot;day01input.txt&amp;quot;, dtype=int)\nprint(sum(np.abs(np.sort(x[:,
        0]) - np.sort(x[:, 1]))))\nprint(sum([n * sum(x[:, 1] == n) for n in x[:,
        0]]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxupfy/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxupfy", "created":
        1733090763.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy3ceo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "nivlark",
        "can_mod_post": false, "created_utc": 1733093654.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_7k3gl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: python\\]\n\nCurrently sick with covid (yes, very 2020 of me)
        so a belated first day solution.\n\n    from collections import Counter\n    \n    def
        day01(filename):\n        l1, l2 = list(), list()\n        with open(filename,
        \"r\") as f:\n            for l in f:\n                a, b = map(int, l.split())\n                l1.append(a)\n                l2.append(b)\n        diff
        = sum(abs(x - y) for x, y in zip(sorted(l1), sorted(l2)))\n        ctr = Counter(l2)\n        similarity
        = sum(x * ctr[x] for x in l1)\n        return diff, similarity", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: python]&lt;/p&gt;\n\n&lt;p&gt;Currently
        sick with covid (yes, very 2020 of me) so a belated first day solution.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        collections import Counter\n\ndef day01(filename):\n    l1, l2 = list(), list()\n    with
        open(filename, &amp;quot;r&amp;quot;) as f:\n        for l in f:\n            a,
        b = map(int, l.split())\n            l1.append(a)\n            l2.append(b)\n    diff
        = sum(abs(x - y) for x, y in zip(sorted(l1), sorted(l2)))\n    ctr = Counter(l2)\n    similarity
        = sum(x * ctr[x] for x in l1)\n    return diff, similarity\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy3ceo/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy3ceo", "created":
        1733093654.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzy4gn5", "id": "lzy4gn5", "parent_id":
        "t1_lzy3ceo", "depth": 1, "children": ["lzy4gn5"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzyln22", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        6, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzyln22", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyln22/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733100070.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733100070.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzzbzsu", "id": "lzzbzsu", "parent_id":
        "t1_lzyln22", "depth": 1, "children": ["lzzbzsu"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztvnv0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Standard-Affect",
        "can_mod_post": false, "created_utc": 1733030200.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_4zni0mvj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python3]\n\nNo nasty surprises, unlike last year. Now to rewrite
        this and make it presentable.\n\n    i = split_lines(\"inputs/day1.txt\")\n\n    part1
        = part2 = 0\n    l1 = []\n    l2 = []\n    for l in i:\n        l1 += [ int(l.split(\"   \")[0])
        ]\n        l2 += [ int(l.split(\"   \")[1]) ]\n\n    l1.sort()\n    l2.sort()\n    for
        ix in range(len(l1)):\n        part1 += abs(l1[ix] - l2[ix])\n        part2
        += (l1[ix] * sum(k == l1[ix] for k in l2)) \n\n\n    print(part1)\n    print(part2)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python3]&lt;/p&gt;\n\n&lt;p&gt;No
        nasty surprises, unlike last year. Now to rewrite this and make it presentable.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;i
        = split_lines(&amp;quot;inputs/day1.txt&amp;quot;)\n\npart1 = part2 = 0\nl1
        = []\nl2 = []\nfor l in i:\n    l1 += [ int(l.split(&amp;quot;   &amp;quot;)[0])
        ]\n    l2 += [ int(l.split(&amp;quot;   &amp;quot;)[1]) ]\n\nl1.sort()\nl2.sort()\nfor
        ix in range(len(l1)):\n    part1 += abs(l1[ix] - l2[ix])\n    part2 += (l1[ix]
        * sum(k == l1[ix] for k in l2)) \n\n\nprint(part1)\nprint(part2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvnv0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvnv0", "created":
        1733030200.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztvnv9", "id": "lztvnv9", "parent_id":
        "t1_lztvnv0", "depth": 1, "children": ["lztvnv9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733062118.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztvv2v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "nlowe_",
        "can_mod_post": false, "created_utc": 1733030301.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_56rgazd6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Go]\n\n\n[1035 / 887](https://github.com/nlowe/aoc2024/commit/973922ef856c5a64c8cc732564f086475bae51ff)\u00a0
        Pretty happy with that placement, it''s good to be back! Happy AoC season
        everyone!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/nlowe/aoc2024/commit/973922ef856c5a64c8cc732564f086475bae51ff\"&gt;1035
        / 887&lt;/a&gt;\u00a0 Pretty happy with that placement, it&amp;#39;s good
        to be back! Happy AoC season everyone!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvv2v/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztvv2v", "created": 1733030301.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzu1ojs", "id": "lzu1ojs", "parent_id":
        "t1_lztvv2v", "depth": 1, "children": ["lzu1ojs", "lzw9t1n", "lztvv3n"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztwjdc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "GassaFM",
        "can_mod_post": false, "created_utc": 1733030637.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_ffvdb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: D\\] 133/107\n\nCode: [part 1](https://github.com/GassaFM/aoc2024/blob/main/day01/d01p1.d),
        [part 2](https://github.com/GassaFM/aoc2024/blob/main/day01/d01p2.d).\n\nOn
        day 1, just getting the job done.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: D] 133/107&lt;/p&gt;\n\n&lt;p&gt;Code:
        &lt;a href=\"https://github.com/GassaFM/aoc2024/blob/main/day01/d01p1.d\"&gt;part
        1&lt;/a&gt;, &lt;a href=\"https://github.com/GassaFM/aoc2024/blob/main/day01/d01p2.d\"&gt;part
        2&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;On day 1, just getting the job done.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwjdc/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztwjdc", "created":
        1733030637.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733032674.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztxoul", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Comprehensive_Ad3095",
        "can_mod_post": false, "created_utc": 1733031228.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_3n0nj4vj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Lua\\]\n\n[https://github.com/DeybisMelendez/AdventOfCode/blob/master/2024/01.lua](https://github.com/DeybisMelendez/AdventOfCode/blob/master/2024/01.lua)\n\ntable.sort
        for answer1", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Lua]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/DeybisMelendez/AdventOfCode/blob/master/2024/01.lua\"&gt;https://github.com/DeybisMelendez/AdventOfCode/blob/master/2024/01.lua&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;table.sort
        for answer1&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxoul/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxoul", "created":
        1733031228.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733031511.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztxpm4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "riffraff",
        "can_mod_post": false, "created_utc": 1733031239.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_1vf8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Ruby\\] 7062/1094 I could have made it to the first 1k if I
        didn''t have to help my wife with something between the two parts :D\n\n    #
        1.rb\n    DAY = __FILE__.sub(\".rb\", \".input\")\n    def parse(io)\n      _line_parts
        = io.readlines.map { |l| l.chomp.split.map(&amp;:to_i) }\n    end\n    def
        daily_input\n      File.open(DAY) do |fd|\n        return parse(fd)\n      end\n    end\n    \n    def
        solve_easy(pairs)\n      a, b = pairs.transpose.map(&amp;:sort)\n      a.zip(b).sum
        { (_1 - _2).abs }\n    end\n    \n    def solve_hard(pairs)\n      a, b =
        pairs.transpose\n      t = b.tally\n      a.sum { _1 * t.fetch(_1, 0) }\n    end\n\nedit:
        usual complaint, I hate that ruby''s `Array#zip` with a block returns `nil`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Ruby] 7062/1094
        I could have made it to the first 1k if I didn&amp;#39;t have to help my wife
        with something between the two parts :D&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        1.rb\nDAY = __FILE__.sub(&amp;quot;.rb&amp;quot;, &amp;quot;.input&amp;quot;)\ndef
        parse(io)\n  _line_parts = io.readlines.map { |l| l.chomp.split.map(&amp;amp;:to_i)
        }\nend\ndef daily_input\n  File.open(DAY) do |fd|\n    return parse(fd)\n  end\nend\n\ndef
        solve_easy(pairs)\n  a, b = pairs.transpose.map(&amp;amp;:sort)\n  a.zip(b).sum
        { (_1 - _2).abs }\nend\n\ndef solve_hard(pairs)\n  a, b = pairs.transpose\n  t
        = b.tally\n  a.sum { _1 * t.fetch(_1, 0) }\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;edit:
        usual complaint, I hate that ruby&amp;#39;s &lt;code&gt;Array#zip&lt;/code&gt;
        with a block returns &lt;code&gt;nil&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxpm4/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxpm4", "created":
        1733031239.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztze6e",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "UseUnlucky3830",
        "can_mod_post": false, "created_utc": 1733032122.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_ig0ogh1k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Julia\\]\n\n[solution](https://github.com/fmarotta/AoC/blob/main/2024/day1/run.jl)\n\nWasted
        a bunch of time because I forgot to use the absolute value of the difference",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Julia]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/fmarotta/AoC/blob/main/2024/day1/run.jl\"&gt;solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Wasted
        a bunch of time because I forgot to use the absolute value of the difference&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztze6e/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztze6e", "created":
        1733032122.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lztze6w", "id": "lztze6w", "parent_id":
        "t1_lztze6e", "depth": 1, "children": ["lztze6w", "lzu0qo0"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733038317.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztznef", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "dellfm",
        "can_mod_post": false, "created_utc": 1733032260.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_13nsvw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Google Sheets]\n\nOne formula for both parts\n\n    =LET(input,BYROW(B3:B,LAMBDA(row,SPLIT(row,\"   \"))),\n        LET(left,SORT(INDEX(input,,1)),
        right,SORT(INDEX(input,,2)), {\n            SUM(ARRAYFORMULA(ABS(left-right))),\n            SUM(BYROW(left,LAMBDA(l,l*COUNTIF(right,l))))}))\n\nEdit:
        Made some changes. It took me awhile to realize part 2 doesn''t care if the
        lists are sorted or not, so I can just use the same sorted lists for both
        parts, then I renamed the other variable names.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Google Sheets]&lt;/p&gt;\n\n&lt;p&gt;One
        formula for both parts&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=LET(input,BYROW(B3:B,LAMBDA(row,SPLIT(row,&amp;quot;   &amp;quot;))),\n    LET(left,SORT(INDEX(input,,1)),
        right,SORT(INDEX(input,,2)), {\n        SUM(ARRAYFORMULA(ABS(left-right))),\n        SUM(BYROW(left,LAMBDA(l,l*COUNTIF(right,l))))}))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit:
        Made some changes. It took me awhile to realize part 2 doesn&amp;#39;t care
        if the lists are sorted or not, so I can just use the same sorted lists for
        both parts, then I renamed the other variable names.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztznef/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztznef", "created":
        1733032260.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu2ivd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "rjray",
        "can_mod_post": false, "created_utc": 1733033844.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_1qqv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Clojure]\n\n[code](https://github.com/rjray/advent-2024-clojure/blob/master/src/advent_of_code/day01.clj)\n\nDue
        to being out at a hockey game, I didn''t get started until 10-15 min after
        the puzzle unlocked. This pair of puzzles were really well-suited to the nature
        of Clojure. Both solutions were based on taking the two columns of numbers
        and transposing them into two rows. For part 1, these rows were sorted and
        `map` and `Math/abs` were used to gather the differences.\n\nPart 2 *could*
        have been harder than part 1, but Clojure has a `frequencies` primitive. This
        keyword take a list of items and produces a table where the distinct items
        are the keys and the counts are the values. Using this, it was fast to iterate
        over the first list and calculate the \"similarities\". Part 2 took about
        1/4 the time part 1 had.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Clojure]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/rjray/advent-2024-clojure/blob/master/src/advent_of_code/day01.clj\"&gt;code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Due
        to being out at a hockey game, I didn&amp;#39;t get started until 10-15 min
        after the puzzle unlocked. This pair of puzzles were really well-suited to
        the nature of Clojure. Both solutions were based on taking the two columns
        of numbers and transposing them into two rows. For part 1, these rows were
        sorted and &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;Math/abs&lt;/code&gt;
        were used to gather the differences.&lt;/p&gt;\n\n&lt;p&gt;Part 2 &lt;em&gt;could&lt;/em&gt;
        have been harder than part 1, but Clojure has a &lt;code&gt;frequencies&lt;/code&gt;
        primitive. This keyword take a list of items and produces a table where the
        distinct items are the keys and the counts are the values. Using this, it
        was fast to iterate over the first list and calculate the &amp;quot;similarities&amp;quot;.
        Part 2 took about 1/4 the time part 1 had.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu2ivd/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzu2ivd", "created": 1733033844.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1735235731.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu3nq7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "musifter",
        "can_mod_post": false, "created_utc": 1733034496.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_cwt0kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: dc]\n\nJust part 2 for now.  Part 1 will be a bit more of a mess,
        but this was nice. \n\nFirst a version without a sentinel for the list 1 stack.  dc
        provides size checking for the main stack, but not for register stacks...
        here we check the size of the main stack to see if we failed to pop an item
        and only have the sum left:\n\n    dc -e''?[d;b1+r:bSa?z0&lt;I]dsIx0La[d;b*+Laz1&lt;L]dsLxp''
        &lt;input\n\nYou can, of course, pipe the error away with a `2&gt;/dev/null`
        if you want.\n\nFor a version with sentinel checking, which makes things longer:\n\n    dc
        -e''0Sa?[d;b1+r:bSa?z0&lt;I]dsIx0La[d;b*+Lad0&lt;L]dsLxrp'' &lt;input\n\nEDIT:  Part
        1.  This can be made shorter by making the assumption that items in the first
        list are unique (true of my input, but not the test case).  For this I used
        a generic model... a macro that parameterizes its get and push as calls to
        macros that the caller can set before hand.  Since I''m doing this to convert
        the input into sorted stacks, I might as well treat both lists the same.  There''s
        probably more strokes that can be bummed (I''m using a sentinel here), but
        this good enough for now.\n\n    dc -e''[q]sQ?[d;b1+r:bd;a1+r:a?z0&lt;I]dsIx[99999[dlGx[d0=QrdlPxr1-lJx]dsJx+1-d0&lt;I]dsIx]sS0Sc[;a]sG[Sc]sPlSx[;b]sG[Sd]sPlSx0[Lcd0=QLd-d*v+lLx]dsLxrp''
        &lt;input\n\nCommented source part 1: https://pastebin.com/zv4EwWSF\n\nCommented
        source part 2: https://pastebin.com/j3AjkVRN", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: dc]&lt;/p&gt;\n\n&lt;p&gt;Just part 2
        for now.  Part 1 will be a bit more of a mess, but this was nice. &lt;/p&gt;\n\n&lt;p&gt;First
        a version without a sentinel for the list 1 stack.  dc provides size checking
        for the main stack, but not for register stacks... here we check the size
        of the main stack to see if we failed to pop an item and only have the sum
        left:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dc -e&amp;#39;?[d;b1+r:bSa?z0&amp;lt;I]dsIx0La[d;b*+Laz1&amp;lt;L]dsLxp&amp;#39;
        &amp;lt;input\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can, of course, pipe
        the error away with a &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; if you want.&lt;/p&gt;\n\n&lt;p&gt;For
        a version with sentinel checking, which makes things longer:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dc
        -e&amp;#39;0Sa?[d;b1+r:bSa?z0&amp;lt;I]dsIx0La[d;b*+Lad0&amp;lt;L]dsLxrp&amp;#39;
        &amp;lt;input\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT:  Part 1.  This
        can be made shorter by making the assumption that items in the first list
        are unique (true of my input, but not the test case).  For this I used a generic
        model... a macro that parameterizes its get and push as calls to macros that
        the caller can set before hand.  Since I&amp;#39;m doing this to convert the
        input into sorted stacks, I might as well treat both lists the same.  There&amp;#39;s
        probably more strokes that can be bummed (I&amp;#39;m using a sentinel here),
        but this good enough for now.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dc -e&amp;#39;[q]sQ?[d;b1+r:bd;a1+r:a?z0&amp;lt;I]dsIx[99999[dlGx[d0=QrdlPxr1-lJx]dsJx+1-d0&amp;lt;I]dsIx]sS0Sc[;a]sG[Sc]sPlSx[;b]sG[Sd]sPlSx0[Lcd0=QLd-d*v+lLx]dsLxrp&amp;#39;
        &amp;lt;input\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Commented source part
        1: &lt;a href=\"https://pastebin.com/zv4EwWSF\"&gt;https://pastebin.com/zv4EwWSF&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Commented
        source part 2: &lt;a href=\"https://pastebin.com/j3AjkVRN\"&gt;https://pastebin.com/j3AjkVRN&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu3nq7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu3nq7", "created":
        1733034496.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzv5p7g", "id": "lzv5p7g", "parent_id":
        "t1_lzu3nq7", "depth": 1, "children": ["lzv5p7g"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu555y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Awkward-Macaroon5019",
        "can_mod_post": false, "created_utc": 1733035354.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_ksxchdnaj",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[Language: Python\\]\n\n        with open(\"241201.txt\")
        as f:\n        \u00a0 \u00a0 lol = [list(y) for y in zip(*[[int(x) for x in
        line.split()] for line in f])]\n        print(sum(abs(x-y) for (x,y) in zip(sorted(lol[0]),sorted(lol[1]))))\n        print(sum(x*lol[1].count(x)
        for x in lol[0]))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    with open(&amp;quot;241201.txt&amp;quot;)
        as f:\n    \u00a0 \u00a0 lol = [list(y) for y in zip(*[[int(x) for x in line.split()]
        for line in f])]\n    print(sum(abs(x-y) for (x,y) in zip(sorted(lol[0]),sorted(lol[1]))))\n    print(sum(x*lol[1].count(x)
        for x in lol[0]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu555y/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzu555y", "created": 1733035354.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu5gyd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "flwyd",
        "can_mod_post": false, "created_utc": 1733035548.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_4x5am2k0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: PostScript] [GitHub](https://github.com/flwyd/adventofcode/blob/main/2024/day1/day1.ps)
        with [my own standard library](https://github.com/flwyd/adventofcode/tree/main/2024/cob)\n\nPostScript
        doesn''t have a built-in sort operator, so a couple weeks ago I decided to
        implement insertion sort since it would be simplest to code.  Benchmarks suggested
        that if I was only sorting about 1000 items then the O(n^2) performance wouldn''t
        be too bad.  Whaddaya know, the first day it''s time to srot 1000 items twice!  So
        part 1 runs in about a quarter second, while part 2 runs in just 2ms without
        sorting :-)\n\nI did implement a `zip` function as part of my standard library,
        but didn''t think to implement `unzip`.  \"Iterate through one array and put
        things in two other arrays\" is a little complicated in PostScript, so I played
        with several options after solving before opting for the below.\n\n    /part1
        { 8 dict begin % [lines] part1 result\n      /input exch def /a input length
        array def /b input length array def\n      /i 0 def /delim (   ) def\n      %
        put first column in a second column in b\n      input { delim split cvi b
        i 3 -1 roll put cvi a i 3 -1 roll put /i inc } forall\n      a {compare} isort
        b {compare} isort\n      0 0 1 input length 1 sub { dup a exch get b 3 -1
        roll get sub abs add } for\n    end } bind def %/part1\n    \n    /part2 {
        8 dict begin % [lines] part2 result\n      /input exch def /counts input length
        dict def /delim (   ) def\n      % count occurrences in second list\n      input
        { delim split cvi dup counts exch 0 getor 1 add counts 3 1 roll put pop }
        forall\n      % multiply first list by counts and add them\n      0 input
        { token pop exch pop cvi counts 1 index 0 getor mul add } forall\n    end
        } bind def %/part2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        PostScript] &lt;a href=\"https://github.com/flwyd/adventofcode/blob/main/2024/day1/day1.ps\"&gt;GitHub&lt;/a&gt;
        with &lt;a href=\"https://github.com/flwyd/adventofcode/tree/main/2024/cob\"&gt;my
        own standard library&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;PostScript doesn&amp;#39;t
        have a built-in sort operator, so a couple weeks ago I decided to implement
        insertion sort since it would be simplest to code.  Benchmarks suggested that
        if I was only sorting about 1000 items then the O(n&lt;sup&gt;2)&lt;/sup&gt;
        performance wouldn&amp;#39;t be too bad.  Whaddaya know, the first day it&amp;#39;s
        time to srot 1000 items twice!  So part 1 runs in about a quarter second,
        while part 2 runs in just 2ms without sorting :-)&lt;/p&gt;\n\n&lt;p&gt;I
        did implement a &lt;code&gt;zip&lt;/code&gt; function as part of my standard
        library, but didn&amp;#39;t think to implement &lt;code&gt;unzip&lt;/code&gt;.  &amp;quot;Iterate
        through one array and put things in two other arrays&amp;quot; is a little
        complicated in PostScript, so I played with several options after solving
        before opting for the below.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/part1 {
        8 dict begin % [lines] part1 result\n  /input exch def /a input length array
        def /b input length array def\n  /i 0 def /delim (   ) def\n  % put first
        column in a second column in b\n  input { delim split cvi b i 3 -1 roll put
        cvi a i 3 -1 roll put /i inc } forall\n  a {compare} isort b {compare} isort\n  0
        0 1 input length 1 sub { dup a exch get b 3 -1 roll get sub abs add } for\nend
        } bind def %/part1\n\n/part2 { 8 dict begin % [lines] part2 result\n  /input
        exch def /counts input length dict def /delim (   ) def\n  % count occurrences
        in second list\n  input { delim split cvi dup counts exch 0 getor 1 add counts
        3 1 roll put pop } forall\n  % multiply first list by counts and add them\n  0
        input { token pop exch pop cvi counts 1 index 0 getor mul add } forall\nend
        } bind def %/part2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu5gyd/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzu5gyd", "created": 1733035548.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzu6n0f", "id": "lzu6n0f", "parent_id":
        "t1_lzu5gyd", "depth": 1, "children": ["lzu6n0f"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu5p9p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "prendradjaja",
        "can_mod_post": false, "created_utc": 1733035683.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_4uw2bk4a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: C]\n\nhttps://github.com/prendradjaja/advent-of-code-2024/blob/main/01/a.c\nhttps://github.com/prendradjaja/advent-of-code-2024/blob/main/01/b.c\n\n    int
        main() {\n      int left[MAX_SIZE];\n      int right[MAX_SIZE];\n      int
        size;\n      read_input_file(left, right, &amp;size);\n\n      selection_sort(left,
        size);\n      selection_sort(right, size);\n\n      int answer = 0;\n      for
        (int i = 0; i &lt; size; i++) {\n        answer += abs(left[i] - right[i]);\n      }\n      printf(\"%d\\n\",
        answer);\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        C]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/prendradjaja/advent-of-code-2024/blob/main/01/a.c\"&gt;https://github.com/prendradjaja/advent-of-code-2024/blob/main/01/a.c&lt;/a&gt;\n&lt;a
        href=\"https://github.com/prendradjaja/advent-of-code-2024/blob/main/01/b.c\"&gt;https://github.com/prendradjaja/advent-of-code-2024/blob/main/01/b.c&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        main() {\n  int left[MAX_SIZE];\n  int right[MAX_SIZE];\n  int size;\n  read_input_file(left,
        right, &amp;amp;size);\n\n  selection_sort(left, size);\n  selection_sort(right,
        size);\n\n  int answer = 0;\n  for (int i = 0; i &amp;lt; size; i++) {\n    answer
        += abs(left[i] - right[i]);\n  }\n  printf(&amp;quot;%d\\n&amp;quot;, answer);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu5p9p/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu5p9p", "created":
        1733035683.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu7pt3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "UseUnlucky3830",
        "can_mod_post": false, "created_utc": 1733036908.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_ig0ogh1k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C\\]\n\n[solution](https://github.com/fmarotta/AoC/blob/main/2024/day1/run.c)\n\nEncouraged
        by a friend''s challenge, I also wrote a C program in addition to the Julia
        one. I solved part 2 without dictionaries or count tables by exploiting the
        fact that the lists were already sorted :P", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/fmarotta/AoC/blob/main/2024/day1/run.c\"&gt;solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Encouraged
        by a friend&amp;#39;s challenge, I also wrote a C program in addition to the
        Julia one. I solved part 2 without dictionaries or count tables by exploiting
        the fact that the lists were already sorted :P&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu7pt3/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzu7pt3", "created": 1733036908.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu89yq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "bluefloyd3",
        "can_mod_post": false, "created_utc": 1733037257.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_7gsdh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: PowerShell\\]\n\nFirst time posting code online, go easy on
        me!\n\nRan into an issue in the second part where multiplying the left set
        by the amount of times it is present in the right set caused the output to
        be the left set concatenated that many times. Ex. `3 * 3 = 333` instead of
        `3 * 3 = 9`\n\nOnce that was figured out the rest fell into place without
        much issue\n\n    $Content = get-content .\\AoC_2024\\Day1\\Day1_input.txt\n    #$Content
        = get-content .\\AoC_2024\\Day1\\Day1_test.txt\n    \n    $Holder = 0\n    $LeftSet
        = @()\n    $RightSet= @()\n    \n    foreach ($NumberSet in $Content){\n    \u00a0
        \u00a0 $Set = $NumberSet -split \" \u00a0 \"\n    \u00a0 \u00a0 $LeftSet +=
        $set[0]\n    \u00a0 \u00a0 $RightSet += $set[1]\n    }\n    \n    $LeftSet
        = $LeftSet | Sort-Object\n    $RightSet = $RightSet | Sort-Object\n    \n    for($i=0;
        $i -lt $LeftSet.count; $i++){\n    \u00a0 \u00a0 $Set = @($LeftSet[$i],$RightSet[$i])\n    \u00a0
        \u00a0 $set = $set | Sort-Object -Descending\n    \u00a0 \u00a0 $Holder =
        $holder + ($set[0] - $set[1])\n    }\n    \n    Write-output \"First solution
        is $holder\"\n    \n    [Int32]$holder2 = 0\n    \n    for($i=0; $i -lt $LeftSet.count;
        $i++){\n    \u00a0 \u00a0 [Int]$Count = ($rightset | Where-Object {$_ -eq
        $LeftSet[$i]}).count\n    \u00a0 \u00a0 If($count -gt 0){\n    \u00a0 \u00a0
        \u00a0 \u00a0 [Int32]$T = ([int]$($LeftSet[$i]) * $Count)\n    \u00a0 \u00a0
        \u00a0 \u00a0 $holder2 = $holder2 + $T\n    \u00a0 \u00a0 }\n    }\n    Write-output
        \"Second solution is $holder2\"", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: PowerShell]&lt;/p&gt;\n\n&lt;p&gt;First
        time posting code online, go easy on me!&lt;/p&gt;\n\n&lt;p&gt;Ran into an
        issue in the second part where multiplying the left set by the amount of times
        it is present in the right set caused the output to be the left set concatenated
        that many times. Ex. &lt;code&gt;3 * 3 = 333&lt;/code&gt; instead of &lt;code&gt;3
        * 3 = 9&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Once that was figured out the rest
        fell into place without much issue&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$Content
        = get-content .\\AoC_2024\\Day1\\Day1_input.txt\n#$Content = get-content .\\AoC_2024\\Day1\\Day1_test.txt\n\n$Holder
        = 0\n$LeftSet = @()\n$RightSet= @()\n\nforeach ($NumberSet in $Content){\n\u00a0
        \u00a0 $Set = $NumberSet -split &amp;quot; \u00a0 &amp;quot;\n\u00a0 \u00a0
        $LeftSet += $set[0]\n\u00a0 \u00a0 $RightSet += $set[1]\n}\n\n$LeftSet = $LeftSet
        | Sort-Object\n$RightSet = $RightSet | Sort-Object\n\nfor($i=0; $i -lt $LeftSet.count;
        $i++){\n\u00a0 \u00a0 $Set = @($LeftSet[$i],$RightSet[$i])\n\u00a0 \u00a0
        $set = $set | Sort-Object -Descending\n\u00a0 \u00a0 $Holder = $holder + ($set[0]
        - $set[1])\n}\n\nWrite-output &amp;quot;First solution is $holder&amp;quot;\n\n[Int32]$holder2
        = 0\n\nfor($i=0; $i -lt $LeftSet.count; $i++){\n\u00a0 \u00a0 [Int]$Count
        = ($rightset | Where-Object {$_ -eq $LeftSet[$i]}).count\n\u00a0 \u00a0 If($count
        -gt 0){\n\u00a0 \u00a0 \u00a0 \u00a0 [Int32]$T = ([int]$($LeftSet[$i]) * $Count)\n\u00a0
        \u00a0 \u00a0 \u00a0 $holder2 = $holder2 + $T\n\u00a0 \u00a0 }\n}\nWrite-output
        &amp;quot;Second solution is $holder2&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu89yq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu89yq", "created":
        1733037257.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzu9u5s", "id": "lzu9u5s", "parent_id":
        "t1_lzu89yq", "depth": 1, "children": ["lzu9u5s"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu8lja",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "stuque",
        "can_mod_post": false, "created_utc": 1733037460.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_v3c7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\] \\[Allez Cuisine\\]\n\nDoes this count as Allez Cuisine?
        It uses only 2 top-level variable names, but there are other variable names
        in the comprehensions. I guess data and left\\_right could be replaced by
        their expressions, and n by a or  b, to get 2 variable names throughout. But
        I guess that would still count as 3 variables?\n\n    data = [int(n) for n
        in open(''data.txt'').read().split()]\n    left_right = sorted(data[::2])
        + sorted(data[1:][::2])\n    \n    print(''Part 1:'', sum(abs(a - b) for a,
        b in zip(left_right[:len(data) // 2], \n                                                    left_right[len(data)
        // 2:])))\n    \n    print(''Part 2:'', sum(n * left_right[len(data) // 2:].count(n)
        \n                         for n in left_right[:len(data) // 2]))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python] [Allez Cuisine]&lt;/p&gt;\n\n&lt;p&gt;Does
        this count as Allez Cuisine? It uses only 2 top-level variable names, but
        there are other variable names in the comprehensions. I guess data and left_right
        could be replaced by their expressions, and n by a or  b, to get 2 variable
        names throughout. But I guess that would still count as 3 variables?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data
        = [int(n) for n in open(&amp;#39;data.txt&amp;#39;).read().split()]\nleft_right
        = sorted(data[::2]) + sorted(data[1:][::2])\n\nprint(&amp;#39;Part 1:&amp;#39;,
        sum(abs(a - b) for a, b in zip(left_right[:len(data) // 2], \n                                                left_right[len(data)
        // 2:])))\n\nprint(&amp;#39;Part 2:&amp;#39;, sum(n * left_right[len(data)
        // 2:].count(n) \n                     for n in left_right[:len(data) // 2]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu8lja/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu8lja", "created":
        1733037460.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzu970s", "id": "lzu970s", "parent_id":
        "t1_lzu8lja", "depth": 1, "children": ["lzu970s", "lzuasb3", "lzuamyw"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu9b7y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "sim642",
        "can_mod_post": false, "created_utc": 1733037911.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_49npq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Scala]\n\n[On GitHub](https://github.com/sim642/adventofcode/blob/master/src/main/scala/eu/sim642/adventofcode2024/Day1.scala).\n\nBoth
        parts are quite straightforward with Scala''s built-in collections library.
        The only custom piece there is `.groupCount` which is a specialization of
        Scala''s `.groupMapReduce` to construct a map of counts in part 2.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Scala]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/sim642/adventofcode/blob/master/src/main/scala/eu/sim642/adventofcode2024/Day1.scala\"&gt;On
        GitHub&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Both parts are quite straightforward
        with Scala&amp;#39;s built-in collections library. The only custom piece there
        is &lt;code&gt;.groupCount&lt;/code&gt; which is a specialization of Scala&amp;#39;s
        &lt;code&gt;.groupMapReduce&lt;/code&gt; to construct a map of counts in part
        2.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu9b7y/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu9b7y", "created":
        1733037911.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuams3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "WhiteSparrow",
        "can_mod_post": false, "created_utc": 1733038759.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_447ok", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Prolog\\]\n\n[solution](https://github.com/Liezere/AoC24/blob/master/day01.pl)\n\nUsing
        this years AoC to get better at prolog. Day 1 did not exactly play into prolog''s
        strengths although it wasn''t difficult either. Here''s the essence of part
        1 for example:\n\n    task1(Xs, Ys, X) :-\n        msort(Xs, Xss),\n        msort(Ys,
        Yss),\n        foldl(diffsum, Xss, Yss, 0, X).\n    \n    diffsum(X, Y, S0,
        S) :-\n        S is S0 + abs(X - Y).\n\nOne small prologism that tripped me
        up - `sort/2` actually removes duplicate elements from the list! Took me some
        15 minutes to figure out why my fold did not converge. Luckily SWI-Prolog
        provides `msort/2` as well.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Prolog]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Liezere/AoC24/blob/master/day01.pl\"&gt;solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Using
        this years AoC to get better at prolog. Day 1 did not exactly play into prolog&amp;#39;s
        strengths although it wasn&amp;#39;t difficult either. Here&amp;#39;s the
        essence of part 1 for example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;task1(Xs,
        Ys, X) :-\n    msort(Xs, Xss),\n    msort(Ys, Yss),\n    foldl(diffsum, Xss,
        Yss, 0, X).\n\ndiffsum(X, Y, S0, S) :-\n    S is S0 + abs(X - Y).\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;One
        small prologism that tripped me up - &lt;code&gt;sort/2&lt;/code&gt; actually
        removes duplicate elements from the list! Took me some 15 minutes to figure
        out why my fold did not converge. Luckily SWI-Prolog provides &lt;code&gt;msort/2&lt;/code&gt;
        as well.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuams3/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuams3", "created":
        1733038759.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzwbxdy", "id": "lzwbxdy", "parent_id":
        "t1_lzuams3", "depth": 1, "children": ["lzwbxdy"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzub9ri",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "hhnnngg",
        "can_mod_post": false, "created_utc": 1733039166.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_8l3ed", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: BCPL\\]\n\nNothing fancy here. Just sorting and iterating\n\n[Github
        Source](https://github.com/keyboardspecialist/advent_of_code_2024/blob/master/src/day1.b)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: BCPL]&lt;/p&gt;\n\n&lt;p&gt;Nothing
        fancy here. Just sorting and iterating&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/keyboardspecialist/advent_of_code_2024/blob/master/src/day1.b\"&gt;Github
        Source&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzub9ri/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzub9ri", "created":
        1733039166.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuc5un",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "strobetal",
        "can_mod_post": false, "created_utc": 1733039735.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_dy5nx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: jq\\]\n\njq is best language, use jq for everything.\n\n    def
        part0:\n      map(sort)                  # sort each array\n      | transpose                #
        turn back into an array with 2 elements each\n      | map(.[0] - .[-1] | abs)  #
        calculate the differences\n    ;\n    \n    def part1:\n      # count occurrences
        in the second array\n      (reduce .[1][] as $x ({}; .[$x | tostring] += 1))
        as $c\n      | .[0]                             # for each element in the
        first array\n      | map(. * ($c[. | tostring] // 0)) # multiply by the count\n    ;\n    \n    split(\"\\n\")[:-1]                             #
        load input as lines\n      | map(split(\"   \") | map(tonumber))        #
        2 numbers per line\n      | transpose                                # turn
        into two arrays\n      | if $part == 0 then part0 else part1 end  # run the
        selected part\n      | add                                      # sum the
        results\n\nRun with `jq -R -r -s --argjson part 0 -f main.jq input.txt`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: jq]&lt;/p&gt;\n\n&lt;p&gt;jq
        is best language, use jq for everything.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        part0:\n  map(sort)                  # sort each array\n  | transpose                #
        turn back into an array with 2 elements each\n  | map(.[0] - .[-1] | abs)  #
        calculate the differences\n;\n\ndef part1:\n  # count occurrences in the second
        array\n  (reduce .[1][] as $x ({}; .[$x | tostring] += 1)) as $c\n  | .[0]                             #
        for each element in the first array\n  | map(. * ($c[. | tostring] // 0))
        # multiply by the count\n;\n\nsplit(&amp;quot;\\n&amp;quot;)[:-1]                             #
        load input as lines\n  | map(split(&amp;quot;   &amp;quot;) | map(tonumber))        #
        2 numbers per line\n  | transpose                                # turn into
        two arrays\n  | if $part == 0 then part0 else part1 end  # run the selected
        part\n  | add                                      # sum the results\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Run
        with &lt;code&gt;jq -R -r -s --argjson part 0 -f main.jq input.txt&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuc5un/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuc5un", "created":
        1733039735.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzueibv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "bluesfc",
        "can_mod_post": false, "created_utc": 1733041261.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_76zt1z4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C\\] \n\n[Github : Link](https://github.com/akhilmaddineni/AOC/blob/main/2024/day01/main.c)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C] &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/akhilmaddineni/AOC/blob/main/2024/day01/main.c\"&gt;Github
        : Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzueibv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzueibv", "created":
        1733041261.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzugzko",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "gettalong",
        "can_mod_post": false, "created_utc": 1733042925.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_12k0ek", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Crystal\\]\n\nSo my first approach was rather long-winded, doing
        everything manually and trying to reduce allocations and iterations (e.g.
        linear search over the right column for part 2).\n\nThen I \"refactored\",
        making it not so optimal but much more concise:\n\n    left, right = File.read_lines(ARGV[0]).map
        {|line| line.split(/\\s+/).map(&amp;.to_i) }.transpose.map(&amp;.sort!)\n    \n    #
        Part 1\n    puts [left, right].transpose.sum {|a| (a[0] - a[1]).abs }\n    \n    #
        Part 2\n    puts left.sum {|num| num * right.count(num) }", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Crystal]&lt;/p&gt;\n\n&lt;p&gt;So
        my first approach was rather long-winded, doing everything manually and trying
        to reduce allocations and iterations (e.g. linear search over the right column
        for part 2).&lt;/p&gt;\n\n&lt;p&gt;Then I &amp;quot;refactored&amp;quot;,
        making it not so optimal but much more concise:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;left,
        right = File.read_lines(ARGV[0]).map {|line| line.split(/\\s+/).map(&amp;amp;.to_i)
        }.transpose.map(&amp;amp;.sort!)\n\n# Part 1\nputs [left, right].transpose.sum
        {|a| (a[0] - a[1]).abs }\n\n# Part 2\nputs left.sum {|num| num * right.count(num)
        }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzugzko/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzugzko", "created":
        1733042925.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzuq2bz", "id": "lzuq2bz", "parent_id":
        "t1_lzugzko", "depth": 1, "children": ["lzuq2bz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuhoh0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "vmaskmovps",
        "can_mod_post": false, "created_utc": 1733043388.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_1binuwn4tm",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: SQL\\]\n\nSQL was a good fit for this problem,
        given the table nature of it all. The only reason I chose PostgreSQL is because
        it was easier to import the input data from a script instead of using external
        means (like \\`.mode csv\\` and .import\\` in SQLite).\n\n[Solution here (part
        1 + 2)](https://topaz.github.io/paste/#XQAAAQDyAwAAAAAAAAAhlISsTsi0Glx9kGoyKKXwdLH02waw3AvRPIup8/fkcFKHiVge0Sv62IMLsBC/vM/p5lUebox3e47Un7hsABChHsDzjGHua7+t/v005U9l9VS0vE3z9M3zLmmGR8xcLtKgPW7KTXc+sBk9lRYTQFncIpwguSHZsIkWtnIblCNrttVg9mUbf8BIXcfbFPamQN50vwtiIrHC+0SWYVKgRHt8EsmcLhP112roumRAkXjoVPUiKwOOKm1my7uG8GCFSgkO3x0DGWPPLysp44asvUD2w/7B2xOZQwRqFW45f/cR1r7UyByMZigzf/Blu9oqHiRbLXrRPDtCu9Zch3zTOj2uoFKtT7F2yqOrvR+eiXrcH7Cu+h4S/Utwf2EWV3wO9a5GGlHGYk7clv9oVxtlxOHI3uCdKyV6r8NEEnV+ND9T+VfZo0TG+LnZznQQCPKh7aZD5dwAzCB3JqbpvzxfOs2FYUDE+cPZD8kbX3IMcD/WWdrh6VIRThfwwV6OzfSrkKbUXiyHX7zftm78kSilQ45Gv/sjwLI=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: SQL]&lt;/p&gt;\n\n&lt;p&gt;SQL
        was a good fit for this problem, given the table nature of it all. The only
        reason I chose PostgreSQL is because it was easier to import the input data
        from a script instead of using external means (like `.mode csv` and .import`
        in SQLite).&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDyAwAAAAAAAAAhlISsTsi0Glx9kGoyKKXwdLH02waw3AvRPIup8/fkcFKHiVge0Sv62IMLsBC/vM/p5lUebox3e47Un7hsABChHsDzjGHua7+t/v005U9l9VS0vE3z9M3zLmmGR8xcLtKgPW7KTXc+sBk9lRYTQFncIpwguSHZsIkWtnIblCNrttVg9mUbf8BIXcfbFPamQN50vwtiIrHC+0SWYVKgRHt8EsmcLhP112roumRAkXjoVPUiKwOOKm1my7uG8GCFSgkO3x0DGWPPLysp44asvUD2w/7B2xOZQwRqFW45f/cR1r7UyByMZigzf/Blu9oqHiRbLXrRPDtCu9Zch3zTOj2uoFKtT7F2yqOrvR+eiXrcH7Cu+h4S/Utwf2EWV3wO9a5GGlHGYk7clv9oVxtlxOHI3uCdKyV6r8NEEnV+ND9T+VfZo0TG+LnZznQQCPKh7aZD5dwAzCB3JqbpvzxfOs2FYUDE+cPZD8kbX3IMcD/WWdrh6VIRThfwwV6OzfSrkKbUXiyHX7zftm78kSilQ45Gv/sjwLI=\"&gt;Solution
        here (part 1 + 2)&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuhoh0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuhoh0", "created":
        1733043388.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzuqcd9", "id": "lzuqcd9", "parent_id":
        "t1_lzuhoh0", "depth": 1, "children": ["lzuqcd9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuhw5i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "FordyO_o",
        "can_mod_post": false, "created_utc": 1733043533.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_5ks9w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C#\\]\n\nUsing AOC as a vehicle to learn some C# this year.
        \n\nAny tips on getting the input parsing more concise here?\n\n[https://github.com/mattford/aoc-dotnet/blob/master/aoc-dotnet/Year2024/Day1/Solver.cs](https://github.com/mattford/aoc-dotnet/blob/master/aoc-dotnet/Year2024/Day1/Solver.cs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;p&gt;Using
        AOC as a vehicle to learn some C# this year. &lt;/p&gt;\n\n&lt;p&gt;Any tips
        on getting the input parsing more concise here?&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mattford/aoc-dotnet/blob/master/aoc-dotnet/Year2024/Day1/Solver.cs\"&gt;https://github.com/mattford/aoc-dotnet/blob/master/aoc-dotnet/Year2024/Day1/Solver.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuhw5i/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuhw5i", "created":
        1733043533.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzul2xc", "id": "lzul2xc", "parent_id":
        "t1_lzuhw5i", "depth": 1, "children": ["lzul2xc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733046004.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzujovj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "aurele",
        "can_mod_post": false, "created_utc": 1733044752.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_1w2b", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Elixir]\n\n    defmodule AdventOfCode.Solution.Year2024.Day01
        do\n      use AdventOfCode.Solution.SharedParse\n    \n      @impl true\n      def
        parse(input) do\n        numbers =\n          input\n          |&gt; String.split(\"\\n\",
        trim: true)\n          |&gt; Enum.map(fn l -&gt; String.split(l) |&gt; Enum.map(&amp;String.to_integer/1)
        end)\n    \n        {Stream.map(numbers, &amp;Enum.at(&amp;1, 0)), Stream.map(numbers,
        &amp;Enum.at(&amp;1, 1))}\n      end\n    \n      def part1({left, right})
        do\n        Enum.zip_reduce(Enum.sort(left), Enum.sort(right), 0, &amp;(&amp;3
        + abs(&amp;1 - &amp;2)))\n      end\n    \n      def part2({left, right})
        do\n        freq = Enum.frequencies(right)\n        left |&gt; Stream.map(&amp;(&amp;1
        * Map.get(freq, &amp;1, 0))) |&gt; Enum.sum()\n      end\n    end", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        AdventOfCode.Solution.Year2024.Day01 do\n  use AdventOfCode.Solution.SharedParse\n\n  @impl
        true\n  def parse(input) do\n    numbers =\n      input\n      |&amp;gt; String.split(&amp;quot;\\n&amp;quot;,
        trim: true)\n      |&amp;gt; Enum.map(fn l -&amp;gt; String.split(l) |&amp;gt;
        Enum.map(&amp;amp;String.to_integer/1) end)\n\n    {Stream.map(numbers, &amp;amp;Enum.at(&amp;amp;1,
        0)), Stream.map(numbers, &amp;amp;Enum.at(&amp;amp;1, 1))}\n  end\n\n  def
        part1({left, right}) do\n    Enum.zip_reduce(Enum.sort(left), Enum.sort(right),
        0, &amp;amp;(&amp;amp;3 + abs(&amp;amp;1 - &amp;amp;2)))\n  end\n\n  def part2({left,
        right}) do\n    freq = Enum.frequencies(right)\n    left |&amp;gt; Stream.map(&amp;amp;(&amp;amp;1
        * Map.get(freq, &amp;amp;1, 0))) |&amp;gt; Enum.sum()\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzujovj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzujovj", "created":
        1733044752.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzundbk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Cue_23",
        "can_mod_post": false, "created_utc": 1733047244.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_uu53pj8c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: C++23] [GSGA]\n\n[Get the cookie here!](https://topaz.github.io/paste/#XQAAAQD5CwAAAAAAAAAQbhAvwQkEowPjX6ksCLRDOIM/ZUz5JyPHidsXeJotq6tdc35skt64N0eOlUuTukLajaTVRGrh0yObD38qTnfM1vLWi34bd0kLRRaGsnJ91R5ntmN1+xWJ9MQvfflFl0m84rlV/0O5bdHAYELAiuo2DE25GuqZwymFE0zlt9n1G3QBeOGrat5fxTHvEGuJ5yPECn01WTfQyOvW8ZdZ9Aoaog8ereawGhAg7KpkR4CDwnC00MlrNWiNSl84UBFy/hDKo3MO/SaIgf2nVQkkMqBpzgRoFX8GroE2SU9sUIozzg9HMuIoMP2l9gij+ontl2atxuUtsWyBrUlgXCxPYD9GWUS58RrRbrOCFcjI0R6mt2v+kbfyE9R1CSDJC5ZzgMSFlXR2XjpEBnJHh3C+qf4He4faeqrP6dIgs12KM5RnmKHSx7ojmsdtcnnwEcw9MGbPV17U58gxsoE40y/XW4nOS9q/1sP+IWkrp1ARgHyoQluKuFqByxAH3EnB5s/oMBSlgOQrlqkj5K9g8ZVBzR9yssuzZpxhr7MGUnK0tWq+HHp6jZws+mmQcXuTDJ92kAM2ViOxjqbrhmvJ628WuYVp3h28bgkD0GJDJxHlqMqzqn6TmaGyhe1qB6fuk92WONeqaqyLLFdiymYqNSUD5qT888ixIZNgo+nb4mmErXenP78V826OfZrV7xMym4PrOk3jjLR8Ale+6WtZiMnWhXPB3ZeIjXA+E+lcmdIbvEtvNfg4v3Kh8wjAE1frLLqGHkRK4LJSoYaEP2FT5Q+fjEhVU9JziftUrbsImqE+nQXDVpdK19D47rimQqnZgie1QT+TADdIFoEVkkDL9cMS8XYuBobd3SBOAkNqlTUIOQZVxDWKmmXT3l5Z+6Lb7F8kXMPkEfSCEF8mUs6gUuz1oP35LLxO)\n\nIt
        includes credits at the top, the [local actor](https://raw.githubusercontent.com/CueXXIII/adventofcode2023/refs/heads/master/common/simpleparser.hpp)
        is from yesteryears advent, and i even put in the right easter egg for todays
        puzzle into the cookie!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C++23] [GSGA]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQD5CwAAAAAAAAAQbhAvwQkEowPjX6ksCLRDOIM/ZUz5JyPHidsXeJotq6tdc35skt64N0eOlUuTukLajaTVRGrh0yObD38qTnfM1vLWi34bd0kLRRaGsnJ91R5ntmN1+xWJ9MQvfflFl0m84rlV/0O5bdHAYELAiuo2DE25GuqZwymFE0zlt9n1G3QBeOGrat5fxTHvEGuJ5yPECn01WTfQyOvW8ZdZ9Aoaog8ereawGhAg7KpkR4CDwnC00MlrNWiNSl84UBFy/hDKo3MO/SaIgf2nVQkkMqBpzgRoFX8GroE2SU9sUIozzg9HMuIoMP2l9gij+ontl2atxuUtsWyBrUlgXCxPYD9GWUS58RrRbrOCFcjI0R6mt2v+kbfyE9R1CSDJC5ZzgMSFlXR2XjpEBnJHh3C+qf4He4faeqrP6dIgs12KM5RnmKHSx7ojmsdtcnnwEcw9MGbPV17U58gxsoE40y/XW4nOS9q/1sP+IWkrp1ARgHyoQluKuFqByxAH3EnB5s/oMBSlgOQrlqkj5K9g8ZVBzR9yssuzZpxhr7MGUnK0tWq+HHp6jZws+mmQcXuTDJ92kAM2ViOxjqbrhmvJ628WuYVp3h28bgkD0GJDJxHlqMqzqn6TmaGyhe1qB6fuk92WONeqaqyLLFdiymYqNSUD5qT888ixIZNgo+nb4mmErXenP78V826OfZrV7xMym4PrOk3jjLR8Ale+6WtZiMnWhXPB3ZeIjXA+E+lcmdIbvEtvNfg4v3Kh8wjAE1frLLqGHkRK4LJSoYaEP2FT5Q+fjEhVU9JziftUrbsImqE+nQXDVpdK19D47rimQqnZgie1QT+TADdIFoEVkkDL9cMS8XYuBobd3SBOAkNqlTUIOQZVxDWKmmXT3l5Z+6Lb7F8kXMPkEfSCEF8mUs6gUuz1oP35LLxO\"&gt;Get
        the cookie here!&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It includes credits at the
        top, the &lt;a href=\"https://raw.githubusercontent.com/CueXXIII/adventofcode2023/refs/heads/master/common/simpleparser.hpp\"&gt;local
        actor&lt;/a&gt; is from yesteryears advent, and i even put in the right easter
        egg for todays puzzle into the cookie!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzundbk/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzundbk", "created": 1733047244.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzuokhn", "id": "lzuokhn", "parent_id":
        "t1_lzundbk", "depth": 1, "children": ["lzuokhn", "lzxgekj"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuqgvb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "LinAGKar",
        "can_mod_post": false, "created_utc": 1733049348.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_hbt9n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\nhttps://github.com/LinAGKar/advent-of-code-2024-rust/blob/master/day1/src/main.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/LinAGKar/advent-of-code-2024-rust/blob/master/day1/src/main.rs\"&gt;https://github.com/LinAGKar/advent-of-code-2024-rust/blob/master/day1/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuqgvb/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuqgvb", "created":
        1733049348.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733051761.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzur39j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "badcop_",
        "can_mod_post": false, "created_utc": 1733049767.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_pnt79xc23",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Bash\\]\n\nLink to [both parts](https://github.com/cgsdev0/advent-of-code/tree/main/2024/day1)\n\nCode
        for part 1 only:\n\n    paste -d''-'' \\\n        &lt;(tr -s '' '' &lt; \"$1\"
        | cut -d'' '' -f1 | sort -n) \\\n        &lt;(tr -s '' '' &lt; \"$1\" | cut
        -d'' '' -f2 | sort -n) \\\n        | bc | tr -d ''-'' \\\n        | paste
        -sd+ | bc", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Bash]&lt;/p&gt;\n\n&lt;p&gt;Link to &lt;a href=\"https://github.com/cgsdev0/advent-of-code/tree/main/2024/day1\"&gt;both
        parts&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Code for part 1 only:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;paste
        -d&amp;#39;-&amp;#39; \\\n    &amp;lt;(tr -s &amp;#39; &amp;#39; &amp;lt;
        &amp;quot;$1&amp;quot; | cut -d&amp;#39; &amp;#39; -f1 | sort -n) \\\n    &amp;lt;(tr
        -s &amp;#39; &amp;#39; &amp;lt; &amp;quot;$1&amp;quot; | cut -d&amp;#39; &amp;#39;
        -f2 | sort -n) \\\n    | bc | tr -d &amp;#39;-&amp;#39; \\\n    | paste -sd+
        | bc\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzur39j/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzur39j", "created":
        1733049767.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzur39z", "id": "lzur39z", "parent_id":
        "t1_lzur39j", "depth": 1, "children": ["lzur39z"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzurnln",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Hath995",
        "can_mod_post": false, "created_utc": 1733050154.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_dwrhv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Dafny\\]\n\nDay 1 using my template for advent of code.\n\n[Part
        1 and 2](https://github.com/hath995/dafny-aoc-2024/blob/main/problems/1/Problem1.dfy)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Dafny]&lt;/p&gt;\n\n&lt;p&gt;Day
        1 using my template for advent of code.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/hath995/dafny-aoc-2024/blob/main/problems/1/Problem1.dfy\"&gt;Part
        1 and 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzurnln/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzurnln", "created":
        1733050154.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733051541.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzut0dp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "DevilGeorgeColdbane",
        "can_mod_post": false, "created_utc": 1733051073.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_k6mqy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Kotlin\\]\n\nThe previous two years i have been doing in rust,
        but since i have less time this year i decided to do it in Kotlin instead.\n\nIt
        always surprises me just how easy it is to solves these problems in Kotlin
        with the vast amount of built in utility functions.\n\n    class LocationIdList(input:
        List&lt;Pair&lt;Int, Int&gt;&gt;) {\n    \n        private val left: List&lt;Int&gt;
        = input.map { it.first }\n        private val right: List&lt;Int&gt; = input.map
        { it.second }\n    \n        fun totalDistance() =\n            left.sorted()\n                .zip(right.sorted())\n                .sumOf
        { abs(it.first - it.second) }\n    \n        fun similarityScore(): Int {\n            val
        rightOccurrenceIndex = right.groupingBy { it }.eachCount()\n            return
        left.sumOf { it * (rightOccurrenceIndex[it] ?: 0) }\n        }\n    }\n\n[https://github.com/etkr/AdventOfCode2024/blob/master/src/main/kotlin/day01/LocationIdList.kt](https://github.com/etkr/AdventOfCode2024/blob/master/src/main/kotlin/day01/LocationIdList.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin]&lt;/p&gt;\n\n&lt;p&gt;The
        previous two years i have been doing in rust, but since i have less time this
        year i decided to do it in Kotlin instead.&lt;/p&gt;\n\n&lt;p&gt;It always
        surprises me just how easy it is to solves these problems in Kotlin with the
        vast amount of built in utility functions.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class
        LocationIdList(input: List&amp;lt;Pair&amp;lt;Int, Int&amp;gt;&amp;gt;) {\n\n    private
        val left: List&amp;lt;Int&amp;gt; = input.map { it.first }\n    private val
        right: List&amp;lt;Int&amp;gt; = input.map { it.second }\n\n    fun totalDistance()
        =\n        left.sorted()\n            .zip(right.sorted())\n            .sumOf
        { abs(it.first - it.second) }\n\n    fun similarityScore(): Int {\n        val
        rightOccurrenceIndex = right.groupingBy { it }.eachCount()\n        return
        left.sumOf { it * (rightOccurrenceIndex[it] ?: 0) }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/etkr/AdventOfCode2024/blob/master/src/main/kotlin/day01/LocationIdList.kt\"&gt;https://github.com/etkr/AdventOfCode2024/blob/master/src/main/kotlin/day01/LocationIdList.kt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzut0dp/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzut0dp", "created":
        1733051073.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzut4ob", "id": "lzut4ob", "parent_id":
        "t1_lzut0dp", "depth": 1, "children": ["lzut4ob", "lzut0em"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733055553.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzutfvq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "remysharp",
        "can_mod_post": false, "created_utc": 1733051362.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_dfra", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: jq]\n\na\n\n    [inputs] |\n    map(\n      split(\"\\\\s+\";
        null) |\n      map(tonumber)\n    ) |\n    transpose |\n    map(sort) |\n    .
        as $_ |\n    reduce range(.[0] | length) as $i (\n      0;\n      . + ($_[0][$i]
        - $_[1][$i] | abs)\n    )\n\nb\n\n    [inputs] |\n    map(\n      split(\"\\\\s+\";
        null) |\n      map(tonumber)\n    ) |\n    transpose |\n    . as $_ |\n    reduce
        range(.[0] | length) as $i (\n      0;\n      . + ($_[0][$i] * ($_[1] | map(\n        select(.
        == $_[0][$i])\n      ) | length))\n    )\n\nhttps://github.com/remy/advent-of-code-solved/tree/main/2024/jq\n\nI
        know there''s another dev that does jq and I''m always way, way more verbose
        in my solutions\u2026but I always get there :)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: jq]&lt;/p&gt;\n\n&lt;p&gt;a&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[inputs]
        |\nmap(\n  split(&amp;quot;\\\\s+&amp;quot;; null) |\n  map(tonumber)\n) |\ntranspose
        |\nmap(sort) |\n. as $_ |\nreduce range(.[0] | length) as $i (\n  0;\n  .
        + ($_[0][$i] - $_[1][$i] | abs)\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;b&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[inputs]
        |\nmap(\n  split(&amp;quot;\\\\s+&amp;quot;; null) |\n  map(tonumber)\n) |\ntranspose
        |\n. as $_ |\nreduce range(.[0] | length) as $i (\n  0;\n  . + ($_[0][$i]
        * ($_[1] | map(\n    select(. == $_[0][$i])\n  ) | length))\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/remy/advent-of-code-solved/tree/main/2024/jq\"&gt;https://github.com/remy/advent-of-code-solved/tree/main/2024/jq&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        know there&amp;#39;s another dev that does jq and I&amp;#39;m always way,
        way more verbose in my solutions\u2026but I always get there :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzutfvq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzutfvq", "created":
        1733051362.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzutfw0", "id": "lzutfw0", "parent_id":
        "t1_lzutfvq", "depth": 1, "children": ["lzutfw0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzutnuq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "TheRealRatler",
        "can_mod_post": false, "created_utc": 1733051511.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_c0p3cl14", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: bash\\]\n\nPart 1 and 2. It is pretty optimized since most of
        it is pure bash. But I''m sure it might be possible to improve it further.\n\n    #!/usr/bin/env
        bash\n    \n    declare -A d2\n    readarray -t l1 &lt; &lt;(awk ''{ print
        $1 | \"sort -n\" }'' input)\n    readarray -t l2 &lt; &lt;(awk ''{ print $2
        | \"sort -n\" }'' input)\n    \n    if [[ \"${#l1[@]}\" != \"${#l2[@]}\" ]];
        then \n      echo \"Error: arrays are not the same length\"\n      exit 1\n    fi\n    \n    #
        Part 1\n    sum=0\n    for ((i=0; i&lt;${#l1[@]}; i++)); do\n      diff=$((
        l1[i] - l2[i] ))\n      (( sum+=${diff#-} ))\n    done\n    \n    echo \"Part
        1: $sum\"\n    \n    # Part 2\n    sum=0\n    for ((i=0; i&lt;${#l2[@]}; i++));
        do\n      (( d2[${l2[i]}]++ ))\n    done\n    \n    for ((i=0; i&lt;${#l1[@]};
        i++)); do\n      if [[ -v d2[${l1[i]}] ]]; then\n        (( sum+=${l1[$i]}
        * ${d2[${l1[i]}]} ))\n      fi\n    done\n    \n    echo \"Part 2: $sum\"",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: bash]&lt;/p&gt;\n\n&lt;p&gt;Part
        1 and 2. It is pretty optimized since most of it is pure bash. But I&amp;#39;m
        sure it might be possible to improve it further.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env
        bash\n\ndeclare -A d2\nreadarray -t l1 &amp;lt; &amp;lt;(awk &amp;#39;{ print
        $1 | &amp;quot;sort -n&amp;quot; }&amp;#39; input)\nreadarray -t l2 &amp;lt;
        &amp;lt;(awk &amp;#39;{ print $2 | &amp;quot;sort -n&amp;quot; }&amp;#39;
        input)\n\nif [[ &amp;quot;${#l1[@]}&amp;quot; != &amp;quot;${#l2[@]}&amp;quot;
        ]]; then \n  echo &amp;quot;Error: arrays are not the same length&amp;quot;\n  exit
        1\nfi\n\n# Part 1\nsum=0\nfor ((i=0; i&amp;lt;${#l1[@]}; i++)); do\n  diff=$((
        l1[i] - l2[i] ))\n  (( sum+=${diff#-} ))\ndone\n\necho &amp;quot;Part 1: $sum&amp;quot;\n\n#
        Part 2\nsum=0\nfor ((i=0; i&amp;lt;${#l2[@]}; i++)); do\n  (( d2[${l2[i]}]++
        ))\ndone\n\nfor ((i=0; i&amp;lt;${#l1[@]}; i++)); do\n  if [[ -v d2[${l1[i]}]
        ]]; then\n    (( sum+=${l1[$i]} * ${d2[${l1[i]}]} ))\n  fi\ndone\n\necho &amp;quot;Part
        2: $sum&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzutnuq/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzutnuq", "created": 1733051511.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 9, "name": "t1_lzuvym5", "id": "lzuvym5", "parent_id":
        "t1_lzutnuq", "depth": 1, "children": ["lzuvym5", "lzuw4bx", "lzuwowb"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuuwbu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "mulokisch",
        "can_mod_post": false, "created_utc": 1733052313.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_e1aqv364", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Gleam\\]\n\n[Github Link](https://github.com/adrian-goe/adventofcode2024/blob/main/src/aoc_2024/day_1.gleam)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Gleam]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/adrian-goe/adventofcode2024/blob/main/src/aoc_2024/day_1.gleam\"&gt;Github
        Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuuwbu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuuwbu", "created":
        1733052313.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuuzy8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "atgreen",
        "can_mod_post": false, "created_utc": 1733052379.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_36rtk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Common Lisp\\]\n\n    (let* ((lines (uiop:read-file-lines \"01.input\"))\n       (left
        (sort (mapcar (lambda (line) (parse-integer line :junk-allowed t)) lines)
        #''&lt;))\n       (right (sort (mapcar (lambda (line) (parse-integer (subseq
        line 8))) lines) #''&lt;)))\n     (print (loop for lnum in left for rnum in
        right sum (abs (- lnum rnum))))\n     (print (loop for lnum in left sum (*
        lnum (count lnum right)))))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Common Lisp]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(let* ((lines (uiop:read-file-lines
        &amp;quot;01.input&amp;quot;))\n   (left (sort (mapcar (lambda (line) (parse-integer
        line :junk-allowed t)) lines) #&amp;#39;&amp;lt;))\n   (right (sort (mapcar
        (lambda (line) (parse-integer (subseq line 8))) lines) #&amp;#39;&amp;lt;)))\n
        (print (loop for lnum in left for rnum in right sum (abs (- lnum rnum))))\n
        (print (loop for lnum in left sum (* lnum (count lnum right)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuuzy8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuuzy8", "created":
        1733052379.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv2i40",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "NathanSMB",
        "can_mod_post": false, "created_utc": 1733056869.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_14ag80", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\nI do my challenges as REST APIs. I only ever use
        Rust for fun so it''s probably not perfect. But it''s mine :)\n\n    use std::collections::HashMap;\n    \n    use
        rocket::{Build, Rocket};\n    \n    #[post(\"/location/distance/sum\", data=\"&lt;input&gt;\")]\n    fn
        sum_distance(input: String) -&gt; String {\n        let (mut left_numbers,
        mut right_numbers) = parse_lists(input);\n    \n        left_numbers.sort();\n        right_numbers.sort();\n    \n        let
        total_distance = left_numbers.iter().zip(right_numbers.iter())\n            .map(|(left,
        right)| (left - right).abs())\n            .sum::&lt;i32&gt;();\n    \n        total_distance.to_string()\n    }\n    \n    #[post(\"/location/similarity-score/calculate\",
        data=\"&lt;input&gt;\")]\n    fn calculate_similarity_score(input: String)
        -&gt; String {\n        let (left_numbers, right_numbers) = parse_lists(input);\n        let
        mut similarity_map: HashMap&lt;_, _&gt; = left_numbers.iter().map(|&amp;left|
        (left, 0)).collect();\n    \n        for right in right_numbers {\n            similarity_map.entry(right)\n                .and_modify(|count|
        *count += 1);\n        }\n    \n        let similarity_score: i32 = similarity_map\n            .iter()\n            .filter(|(_,
        &amp;count)| count &gt; 0)\n            .map(|(&amp;key, &amp;count)| key
        * count)\n            .sum();\n        similarity_score.to_string()\n    }\n    \n    fn
        parse_lists(input: String) -&gt; (Vec&lt;i32&gt;, Vec&lt;i32&gt;) {\n        let
        mut left_numbers = Vec::new();\n        let mut right_numbers = Vec::new();\n    \n        for
        line in input.lines() {\n            let parts: Vec&lt;&amp;str&gt; = line.split_whitespace().collect();\n            left_numbers.push(parts[0].parse::&lt;i32&gt;().unwrap());\n            right_numbers.push(parts[1].parse::&lt;i32&gt;().unwrap());\n        }\n    \n        (left_numbers,
        right_numbers)\n    }\n    \n    pub fn configure(rocket: Rocket&lt;Build&gt;)
        -&gt; Rocket&lt;Build&gt; {\n        rocket\n            .mount(\"/api\",
        routes![sum_distance, calculate_similarity_score])\n    }", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;I
        do my challenges as REST APIs. I only ever use Rust for fun so it&amp;#39;s
        probably not perfect. But it&amp;#39;s mine :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        std::collections::HashMap;\n\nuse rocket::{Build, Rocket};\n\n#[post(&amp;quot;/location/distance/sum&amp;quot;,
        data=&amp;quot;&amp;lt;input&amp;gt;&amp;quot;)]\nfn sum_distance(input: String)
        -&amp;gt; String {\n    let (mut left_numbers, mut right_numbers) = parse_lists(input);\n\n    left_numbers.sort();\n    right_numbers.sort();\n\n    let
        total_distance = left_numbers.iter().zip(right_numbers.iter())\n        .map(|(left,
        right)| (left - right).abs())\n        .sum::&amp;lt;i32&amp;gt;();\n\n    total_distance.to_string()\n}\n\n#[post(&amp;quot;/location/similarity-score/calculate&amp;quot;,
        data=&amp;quot;&amp;lt;input&amp;gt;&amp;quot;)]\nfn calculate_similarity_score(input:
        String) -&amp;gt; String {\n    let (left_numbers, right_numbers) = parse_lists(input);\n    let
        mut similarity_map: HashMap&amp;lt;_, _&amp;gt; = left_numbers.iter().map(|&amp;amp;left|
        (left, 0)).collect();\n\n    for right in right_numbers {\n        similarity_map.entry(right)\n            .and_modify(|count|
        *count += 1);\n    }\n\n    let similarity_score: i32 = similarity_map\n        .iter()\n        .filter(|(_,
        &amp;amp;count)| count &amp;gt; 0)\n        .map(|(&amp;amp;key, &amp;amp;count)|
        key * count)\n        .sum();\n    similarity_score.to_string()\n}\n\nfn parse_lists(input:
        String) -&amp;gt; (Vec&amp;lt;i32&amp;gt;, Vec&amp;lt;i32&amp;gt;) {\n    let
        mut left_numbers = Vec::new();\n    let mut right_numbers = Vec::new();\n\n    for
        line in input.lines() {\n        let parts: Vec&amp;lt;&amp;amp;str&amp;gt;
        = line.split_whitespace().collect();\n        left_numbers.push(parts[0].parse::&amp;lt;i32&amp;gt;().unwrap());\n        right_numbers.push(parts[1].parse::&amp;lt;i32&amp;gt;().unwrap());\n    }\n\n    (left_numbers,
        right_numbers)\n}\n\npub fn configure(rocket: Rocket&amp;lt;Build&amp;gt;)
        -&amp;gt; Rocket&amp;lt;Build&amp;gt; {\n    rocket\n        .mount(&amp;quot;/api&amp;quot;,
        routes![sum_distance, calculate_similarity_score])\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv2i40/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv2i40", "created":
        1733056869.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733201555.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzv4qlv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "veydar_",
        "can_mod_post": false, "created_utc": 1733058041.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_el9uw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Janet]\n\nI am not going for brevity this year. 15 lines with
        `wc -l` including whitespace.\n\nI really want to dive into PEGs this year.
        Here''s the parser for today:\n\n    (def parser (peg/compile ~(split \"\\n\"
        (group (split :s (any (number :d+)))))))\n\nFollowed by making use of the
        fact that `map` can be applied to multiple lists.\n\n    (defn total-distance
        [xs1 xs2] (+ ;(map (comp math/abs (partial -)) xs1 xs2)))\n\nPart 2 also uses
        the same combination of spreading the result of `map` with `;` and using a
        function shorthand with `|()`\n\n    (defn sim-score [xs1 xs2]\n      (let
        [freq (frequencies xs2)]\n        (+ ;(map |(* $ (get freq $ 0)) xs1))))\n\n-
        [GitHub Repository](https://github.com/cideM/aoc2024-janet)\n- [Topaz Paste](https://topaz.github.io/paste/#XQAAAQASAgAAAAAAAAAUGQimf65xPD4Zg2WKJBje4+eyJyKmGLnigYVjipB2oZ3VTfUharWH57ZGH4QQS7LiX2cb5RkbPBg4QBPXWAyXDn4VyekSBqdRdiDr1TqDsJsQdWvHvq/1PbZCI9Pl0rWvJHfFjpX9XOVSyI7kBnpxY4KMQEjLVSjXROaGmpEKsYg31lPdt/rR3Sz7Nwdcme/Bxr1ugHzBNSQuBy1b/Qs6G/dTNW5h8gpKEL3bcEch7/Jv+i/T46OwnFjIT29lPZIyg9CbLoA7OdR5y8/uIxZZD53yXwAggjjKn9PmmHxdXoRMtOZmqrNoyT3DnAIGhi1xv/f1vVu8OCk0y3T1M1bBlHH9VWjMKkriT+N4gKwQmlccZHbz3vRfj/k2LEKdeA9JW7kvvoUez59xBRh3Rt9D0X2hIf/z7SAg)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Janet]&lt;/p&gt;\n\n&lt;p&gt;I
        am not going for brevity this year. 15 lines with &lt;code&gt;wc -l&lt;/code&gt;
        including whitespace.&lt;/p&gt;\n\n&lt;p&gt;I really want to dive into PEGs
        this year. Here&amp;#39;s the parser for today:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(def
        parser (peg/compile ~(split &amp;quot;\\n&amp;quot; (group (split :s (any
        (number :d+)))))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Followed by making
        use of the fact that &lt;code&gt;map&lt;/code&gt; can be applied to multiple
        lists.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn total-distance [xs1 xs2]
        (+ ;(map (comp math/abs (partial -)) xs1 xs2)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 also uses the same combination of spreading the result of &lt;code&gt;map&lt;/code&gt;
        with &lt;code&gt;;&lt;/code&gt; and using a function shorthand with &lt;code&gt;|()&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn
        sim-score [xs1 xs2]\n  (let [freq (frequencies xs2)]\n    (+ ;(map |(* $ (get
        freq $ 0)) xs1))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a
        href=\"https://github.com/cideM/aoc2024-janet\"&gt;GitHub Repository&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQASAgAAAAAAAAAUGQimf65xPD4Zg2WKJBje4+eyJyKmGLnigYVjipB2oZ3VTfUharWH57ZGH4QQS7LiX2cb5RkbPBg4QBPXWAyXDn4VyekSBqdRdiDr1TqDsJsQdWvHvq/1PbZCI9Pl0rWvJHfFjpX9XOVSyI7kBnpxY4KMQEjLVSjXROaGmpEKsYg31lPdt/rR3Sz7Nwdcme/Bxr1ugHzBNSQuBy1b/Qs6G/dTNW5h8gpKEL3bcEch7/Jv+i/T46OwnFjIT29lPZIyg9CbLoA7OdR5y8/uIxZZD53yXwAggjjKn9PmmHxdXoRMtOZmqrNoyT3DnAIGhi1xv/f1vVu8OCk0y3T1M1bBlHH9VWjMKkriT+N4gKwQmlccZHbz3vRfj/k2LEKdeA9JW7kvvoUez59xBRh3Rt9D0X2hIf/z7SAg\"&gt;Topaz
        Paste&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv4qlv/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzv4qlv", "created": 1733058041.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv53t5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mattrex47",
        "can_mod_post": false, "created_utc": 1733058224.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_a26vg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++23\\]\n\n  \n[https://github.com/mnajda/advent-of-code-2024/blob/main/day1/main.cpp](https://github.com/mnajda/advent-of-code-2024/blob/main/day1/main.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++23]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mnajda/advent-of-code-2024/blob/main/day1/main.cpp\"&gt;https://github.com/mnajda/advent-of-code-2024/blob/main/day1/main.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv53t5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv53t5", "created":
        1733058224.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv6lsv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "jrc313",
        "can_mod_post": false, "created_utc": 1733058945.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_4wefj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Julia\\]\n\nNothing fancy here. I used CSV.jl to load the input,
        which seems to be way faster than parsing the file directly.\n\n[https://github.com/jrc313/advent-of-code/blob/main/julia/2024/01/solution.jl](https://github.com/jrc313/advent-of-code/blob/main/julia/2024/01/solution.jl)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Julia]&lt;/p&gt;\n\n&lt;p&gt;Nothing
        fancy here. I used CSV.jl to load the input, which seems to be way faster
        than parsing the file directly.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/jrc313/advent-of-code/blob/main/julia/2024/01/solution.jl\"&gt;https://github.com/jrc313/advent-of-code/blob/main/julia/2024/01/solution.jl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv6lsv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv6lsv", "created":
        1733058945.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzvc0d0", "id": "lzvc0d0", "parent_id":
        "t1_lzv6lsv", "depth": 1, "children": ["lzvc0d0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733092005.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvfjg6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "trevdak2",
        "can_mod_post": false, "created_utc": 1733062814.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_32ecf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: JavaScript (golf)]\n\nI''m really rusty with my golf, I might
        return to these once my brain juices are flowing. If anyone has any thoughts
        on improving it, I''m all ears.\n\nPart 1, 106 Chars. The Math.abs is driving
        me nuts, there must be a way to shorten that:\n\n    (a=[/^\\d+/mg,/\\d+$/mg].map(v=&gt;$(''*'').innerText.match(v).sort()))[c=0].map((v,i)=&gt;c+=Math.abs(v-a[1][i]));c\n\nPart
        2, 77 Chars:\n\n    c=0;(z=$(''*'').innerText).match(/^\\d+/mg).map(v=&gt;c+=v*(z.split(v).length-2));c",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript
        (golf)]&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m really rusty with my golf, I might
        return to these once my brain juices are flowing. If anyone has any thoughts
        on improving it, I&amp;#39;m all ears.&lt;/p&gt;\n\n&lt;p&gt;Part 1, 106 Chars.
        The Math.abs is driving me nuts, there must be a way to shorten that:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(a=[/^\\d+/mg,/\\d+$/mg].map(v=&amp;gt;$(&amp;#39;*&amp;#39;).innerText.match(v).sort()))[c=0].map((v,i)=&amp;gt;c+=Math.abs(v-a[1][i]));c\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2, 77 Chars:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;c=0;(z=$(&amp;#39;*&amp;#39;).innerText).match(/^\\d+/mg).map(v=&amp;gt;c+=v*(z.split(v).length-2));c\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvfjg6/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvfjg6", "created":
        1733062814.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzvfjgo", "id": "lzvfjgo", "parent_id":
        "t1_lzvfjg6", "depth": 1, "children": ["lzvfjgo"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvk2b7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "isaacvando",
        "can_mod_post": false, "created_utc": 1733064611.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_5kpnyo3t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Roc]\nhttps://github.com/isaacvando/aoc/blob/main/2024/1.roc",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Roc]\n&lt;a
        href=\"https://github.com/isaacvando/aoc/blob/main/2024/1.roc\"&gt;https://github.com/isaacvando/aoc/blob/main/2024/1.roc&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvk2b7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvk2b7", "created":
        1733064611.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvk2zk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "IATGOF",
        "can_mod_post": false, "created_utc": 1733064618.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_8oteu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Uiua]\n\n    \u2283(/+\u00d7\u27dc(/+\u2349\u229e=)\u00b0\u229f)(/+\u2335/-\u2261\u2346)\u2349\u229c(\u229c\u22d5\u2260@
        .)\u2260@\\n.&amp;fras\"input\"\n\nPerfect problem for Uiua.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Uiua]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u2283(/+\u00d7\u27dc(/+\u2349\u229e=)\u00b0\u229f)(/+\u2335/-\u2261\u2346)\u2349\u229c(\u229c\u22d5\u2260@
        .)\u2260@\\n.&amp;amp;fras&amp;quot;input&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Perfect
        problem for Uiua.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvk2zk/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvk2zk", "created":
        1733064618.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzwww4i", "id": "lzwww4i", "parent_id":
        "t1_lzvk2zk", "depth": 1, "children": ["lzwww4i"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvl541",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "sisters_clit_is_lit",
        "can_mod_post": false, "created_utc": 1733065015.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_48jqx4gl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Haskell\\]\n\n[View on GitHub](https://github.com/omeldar/adventofcode/blob/main/2024/haskell/lib/Day1.hs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Haskell]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/omeldar/adventofcode/blob/main/2024/haskell/lib/Day1.hs\"&gt;View
        on GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvl541/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvl541", "created":
        1733065015.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvmxf5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "InfamousTrouble7993",
        "can_mod_post": false, "created_utc": 1733065674.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_e3gtuzyo0",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Python\\]\n\nI didn\u00b4t know that there is
        already a counter class in python stdlib lol.\n\n    import numpy as np\n    import
        pandas as pd\n    import csv\n    \n    first_col = None\n    second_col =
        None\n    with open(''aoc_day_1_1_input.txt'') as inf:\n        reader = csv.reader(inf,
        delimiter=\" \")\n        data = list(zip(*reader))\n        first_col = data[0]\n        second_col
        = data[3]\n    \n    ########## PART ONE ##########\n    x1 = np.array(pd.to_numeric(first_col))\n    x2
        = np.array(pd.to_numeric(second_col))\n    x1.sort()\n    x2.sort()\n    \n    print(\"Part
        One: Total distance: {distance}\".format(distance=np.sum(np.abs(x1 - x2))))\n    \n    ##########
        PART TWO ##########\n    # Build lookup table of right column\n    def build_lookup(np_arr):\n        lookup
        = dict()\n        for val in np_arr:\n            keys = lookup.keys()\n            key
        = str(val)\n            if key not in keys:\n                lookup[key] =
        1\n            else:\n                lookup[key] = lookup[key] + 1\n        return
        lookup\n    \n    \n    lookup_left = build_lookup(x1)\n    lookup_right =
        build_lookup(x2)\n    \n    sim_score = 0\n    keys_right = lookup_right.keys()\n    for
        key in lookup_left.keys():\n        if key not in keys_right:\n            continue\n        sim_score
        = sim_score + lookup_left[key] * int(key) * lookup_right[key]\n    \n    print(\"Part
        Two: Total similarity score: {score}\".format(score=sim_score))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;I
        didn\u00b4t know that there is already a counter class in python stdlib lol.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        numpy as np\nimport pandas as pd\nimport csv\n\nfirst_col = None\nsecond_col
        = None\nwith open(&amp;#39;aoc_day_1_1_input.txt&amp;#39;) as inf:\n    reader
        = csv.reader(inf, delimiter=&amp;quot; &amp;quot;)\n    data = list(zip(*reader))\n    first_col
        = data[0]\n    second_col = data[3]\n\n########## PART ONE ##########\nx1
        = np.array(pd.to_numeric(first_col))\nx2 = np.array(pd.to_numeric(second_col))\nx1.sort()\nx2.sort()\n\nprint(&amp;quot;Part
        One: Total distance: {distance}&amp;quot;.format(distance=np.sum(np.abs(x1
        - x2))))\n\n########## PART TWO ##########\n# Build lookup table of right
        column\ndef build_lookup(np_arr):\n    lookup = dict()\n    for val in np_arr:\n        keys
        = lookup.keys()\n        key = str(val)\n        if key not in keys:\n            lookup[key]
        = 1\n        else:\n            lookup[key] = lookup[key] + 1\n    return
        lookup\n\n\nlookup_left = build_lookup(x1)\nlookup_right = build_lookup(x2)\n\nsim_score
        = 0\nkeys_right = lookup_right.keys()\nfor key in lookup_left.keys():\n    if
        key not in keys_right:\n        continue\n    sim_score = sim_score + lookup_left[key]
        * int(key) * lookup_right[key]\n\nprint(&amp;quot;Part Two: Total similarity
        score: {score}&amp;quot;.format(score=sim_score))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvmxf5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvmxf5", "created":
        1733065674.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzygbl5", "id": "lzygbl5", "parent_id":
        "t1_lzvmxf5", "depth": 1, "children": ["lzygbl5"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvod3j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "fridi_s",
        "can_mod_post": false, "created_utc": 1733066186.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_10ozg436", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Fuzion\\]\n\n[on github](https://github.com/fridis/fuzion_aoc/blob/main/2024/01/part2.fz)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Fuzion]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/fridis/fuzion_aoc/blob/main/2024/01/part2.fz\"&gt;on
        github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvod3j/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvod3j", "created":
        1733066186.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvoigz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "hrunt",
        "can_mod_post": false, "created_utc": 1733066238.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_6xomu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[Code](https://topaz.github.io/paste/#XQAAAQDuAgAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx/DqKkM2yi+HVdpp+qLiqZwdO8DftYzG7xETHPj1qjypxh5M1TcPUMscdwJ9eFI+2L7Vg7vcoTYizXG887YTGI4JD5EDLD/zoVg0Sf2W/LaG/EOJr5b8lj3xIXry/yYu4hLFclSXnwhmhN4B93PDZaxUwltTUgjWKc0MyTH3maHk6zMUsAAbUg1uq+hYJl60qOsHsFDvARUt0cPWtgN8BkUjyhPJl0SjKUN8KbG/oT/ym/Tr8BU3r3F4wAudz8wYCGKnZ0QwBSFoNNT+pG8omnftGR+1Zh6iBjXMxst6UA/Ph05LZXqAkeMu9NgX/aIOrsW+8seiCm2dXMVT5gbWY1BfRotmRoi5I+4C1tLqLTe4lzyCDSU0RXhIkfrObFH6MHVNVSwJLB8wEG7JgY4ERiZI5GoyWutU0R6aLKI74rfBt3Vyb3Snp9hATPYjILeaTNhSRZGNV4FwbCgukml4Z0uZDXfHDsl/In6J/tU/koIgssz6IfsC7TqoyVRRBwfXniCCuJVdhoARmkhMGWdtPY7gfq1Iytq+Sc8nhbYbyhz7FmuGZp3siWz7ubUoQv/31EQ5)\n\nZip
        two sorted lists and sum the absolute value of the differences at each index
        for part 1. Use Python''s `Counter` built-in to count the items, then sum
        the products of the IDs and counts for part 2. Python''s `Counter` has the
        nice feature that if the element isn''t counted, it returns zero and not `None`.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDuAgAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx/DqKkM2yi+HVdpp+qLiqZwdO8DftYzG7xETHPj1qjypxh5M1TcPUMscdwJ9eFI+2L7Vg7vcoTYizXG887YTGI4JD5EDLD/zoVg0Sf2W/LaG/EOJr5b8lj3xIXry/yYu4hLFclSXnwhmhN4B93PDZaxUwltTUgjWKc0MyTH3maHk6zMUsAAbUg1uq+hYJl60qOsHsFDvARUt0cPWtgN8BkUjyhPJl0SjKUN8KbG/oT/ym/Tr8BU3r3F4wAudz8wYCGKnZ0QwBSFoNNT+pG8omnftGR+1Zh6iBjXMxst6UA/Ph05LZXqAkeMu9NgX/aIOrsW+8seiCm2dXMVT5gbWY1BfRotmRoi5I+4C1tLqLTe4lzyCDSU0RXhIkfrObFH6MHVNVSwJLB8wEG7JgY4ERiZI5GoyWutU0R6aLKI74rfBt3Vyb3Snp9hATPYjILeaTNhSRZGNV4FwbCgukml4Z0uZDXfHDsl/In6J/tU/koIgssz6IfsC7TqoyVRRBwfXniCCuJVdhoARmkhMGWdtPY7gfq1Iytq+Sc8nhbYbyhz7FmuGZp3siWz7ubUoQv/31EQ5\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Zip
        two sorted lists and sum the absolute value of the differences at each index
        for part 1. Use Python&amp;#39;s &lt;code&gt;Counter&lt;/code&gt; built-in
        to count the items, then sum the products of the IDs and counts for part 2.
        Python&amp;#39;s &lt;code&gt;Counter&lt;/code&gt; has the nice feature that
        if the element isn&amp;#39;t counted, it returns zero and not &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvoigz/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvoigz", "created":
        1733066238.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvpb7f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "D_Ranjan",
        "can_mod_post": false, "created_utc": 1733066518.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_ts8qckze", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\n[https://github.com/d-ranjan/AdventOfCode2024/tree/main/day01](https://github.com/d-ranjan/AdventOfCode2024/tree/main/day01)\n\nDay01
        solution in modern c++ with ranges and views.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/d-ranjan/AdventOfCode2024/tree/main/day01\"&gt;https://github.com/d-ranjan/AdventOfCode2024/tree/main/day01&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Day01
        solution in modern c++ with ranges and views.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvpb7f/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzvpb7f", "created": 1733066518.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvxbil",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "verdammelt",
        "can_mod_post": false, "created_utc": 1733069264.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_13xdqd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Common Lisp\\]\n\nI got quite tripped up with part2; I kept
        getting the wrong answer on the full input. Even re-downloaded. Then it dawned
        on me, \\`sort\\` is destructive and my implementation of part1 was messing
        with the input so when I ran part2 I no longer had the full input! This is
        something I am always tripping over \\[sigh\\]\n\n    (defpackage #:aoc-2024-01\n      (:use
        :cl))\n    \n    (in-package #:aoc-2024-01)\n    \n    (aoc:def-today-suite*)\n    \n    (defun
        separate-pairs (pairs)\n      (loop for (car cdr) in pairs\n            collect
        car into cars\n            collect cdr into cdrs\n            finally (return
        (list cars cdrs))))\n    \n    (defun parse-integer-pairs (pairs)\n      (loop
        for (car cdr) in pairs\n            collect (list (parse-integer car) (parse-integer
        cdr))))\n    \n    (defun read-data (file)\n      (aoc:read-data\n       file\n       :line-parser
        #''(lambda (l) (aoc:split-string-on-char #\\Space l))\n       :post-process
        #''(lambda (data) (separate-pairs (parse-integer-pairs data)))))\n    \n    (defparameter
        +example+\n      (read-data (aoc:today-data-pathname \"example\")))\n    \n    (defparameter
        +input+\n      (read-data (aoc:today-data-pathname)))\n    \n    (defun part1
        (input)\n      (aoc:sum\n       (mapcar #''(lambda (x y) (abs (- x y)))\n               (sort
        (copy-seq (first input)) #''&lt;)\n               (sort (copy-seq (second
        input)) #''&lt;))))\n    \n    (5am:def-test part1 (:suite :aoc-2024-01)\n      (5am:is
        (= 11 (part1 +example+)))\n      (5am:is (= 1879048 (part1 +input+))))\n    \n    (defun
        frequencies (seq)\n      (let ((counts (make-hash-table)))\n        (loop
        for x in seq\n              do (incf (gethash x counts 0)))\n        counts))\n    \n    (defun
        part2 (input)\n      (let* ((left (first input))\n             (right (second
        input))\n             (counts (frequencies right)))\n        (aoc:sum\n         (mapcar
        #''(lambda (l) (* l (gethash l counts 0))) left))))\n    \n    (5am:def-test
        part2 (:suite :aoc-2024-01)\n      (5am:is (= 31 (part2 +example+)))\n      (5am:is
        (= 21024792 (part2 +input+))))", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: Common Lisp]&lt;/p&gt;\n\n&lt;p&gt;I got
        quite tripped up with part2; I kept getting the wrong answer on the full input.
        Even re-downloaded. Then it dawned on me, `sort` is destructive and my implementation
        of part1 was messing with the input so when I ran part2 I no longer had the
        full input! This is something I am always tripping over [sigh]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defpackage
        #:aoc-2024-01\n  (:use :cl))\n\n(in-package #:aoc-2024-01)\n\n(aoc:def-today-suite*)\n\n(defun
        separate-pairs (pairs)\n  (loop for (car cdr) in pairs\n        collect car
        into cars\n        collect cdr into cdrs\n        finally (return (list cars
        cdrs))))\n\n(defun parse-integer-pairs (pairs)\n  (loop for (car cdr) in pairs\n        collect
        (list (parse-integer car) (parse-integer cdr))))\n\n(defun read-data (file)\n  (aoc:read-data\n   file\n   :line-parser
        #&amp;#39;(lambda (l) (aoc:split-string-on-char #\\Space l))\n   :post-process
        #&amp;#39;(lambda (data) (separate-pairs (parse-integer-pairs data)))))\n\n(defparameter
        +example+\n  (read-data (aoc:today-data-pathname &amp;quot;example&amp;quot;)))\n\n(defparameter
        +input+\n  (read-data (aoc:today-data-pathname)))\n\n(defun part1 (input)\n  (aoc:sum\n   (mapcar
        #&amp;#39;(lambda (x y) (abs (- x y)))\n           (sort (copy-seq (first
        input)) #&amp;#39;&amp;lt;)\n           (sort (copy-seq (second input)) #&amp;#39;&amp;lt;))))\n\n(5am:def-test
        part1 (:suite :aoc-2024-01)\n  (5am:is (= 11 (part1 +example+)))\n  (5am:is
        (= 1879048 (part1 +input+))))\n\n(defun frequencies (seq)\n  (let ((counts
        (make-hash-table)))\n    (loop for x in seq\n          do (incf (gethash x
        counts 0)))\n    counts))\n\n(defun part2 (input)\n  (let* ((left (first input))\n         (right
        (second input))\n         (counts (frequencies right)))\n    (aoc:sum\n     (mapcar
        #&amp;#39;(lambda (l) (* l (gethash l counts 0))) left))))\n\n(5am:def-test
        part2 (:suite :aoc-2024-01)\n  (5am:is (= 31 (part2 +example+)))\n  (5am:is
        (= 21024792 (part2 +input+))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvxbil/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvxbil", "created":
        1733069264.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzw740f", "id": "lzw740f", "parent_id":
        "t1_lzvxbil", "depth": 1, "children": ["lzw740f"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvxk6p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "pinkwar",
        "can_mod_post": false, "created_utc": 1733069343.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_dzzwq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Clojure\\]\n\n[Clojure - Day 1](https://github.com/alexisNorthcoders/adventCode2023/blob/main/Clojure/aoc-2024/src/aoc_2024/day1.clj)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Clojure]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/alexisNorthcoders/adventCode2023/blob/main/Clojure/aoc-2024/src/aoc_2024/day1.clj\"&gt;Clojure
        - Day 1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvxk6p/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvxk6p", "created":
        1733069343.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzw8n6r", "id": "lzw8n6r", "parent_id":
        "t1_lzvxk6p", "depth": 1, "children": ["lzw8n6r"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvyekv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "chicagocode",
        "can_mod_post": false, "created_utc": 1733069619.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_mtcx04l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Kotlin\\]\n\nI''m so happy Advent of Code is back for year 10!
        I''ll be doing solutions in Kotlin and blogging about them again, as time
        permits.\n\n* [Code](https://github.com/tginsberg/advent-2024-kotlin/blob/main/src/main/kotlin/com/ginsberg/advent2024/Day01.kt)\n*
        [Blog](https://todd.ginsberg.com/post/advent-of-code/2024/day1/)\n\nA nice
        fun start. I used `groupingBy{it}.eachCount()` to count frequencies. It feels
        like Kotlin should have an `Iterable&lt;T&gt;.eachCount{...}` to do this directly
        though.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Kotlin]&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m so happy Advent of Code is back
        for year 10! I&amp;#39;ll be doing solutions in Kotlin and blogging about
        them again, as time permits.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/tginsberg/advent-2024-kotlin/blob/main/src/main/kotlin/com/ginsberg/advent2024/Day01.kt\"&gt;Code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a
        href=\"https://todd.ginsberg.com/post/advent-of-code/2024/day1/\"&gt;Blog&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;A
        nice fun start. I used &lt;code&gt;groupingBy{it}.eachCount()&lt;/code&gt;
        to count frequencies. It feels like Kotlin should have an &lt;code&gt;Iterable&amp;lt;T&amp;gt;.eachCount{...}&lt;/code&gt;
        to do this directly though.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvyekv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvyekv", "created":
        1733069619.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzw86jz", "id": "lzw86jz", "parent_id":
        "t1_lzvyekv", "depth": 1, "children": ["lzw86jz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw0iow",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "clyne0",
        "can_mod_post": false, "created_utc": 1733070313.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_s9fndgaw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Forth]\n\n[https://github.com/tcsullivan/advent-of-code/blob/master/day1/day1.fth](https://github.com/tcsullivan/advent-of-code/blob/master/day1/day1.fth)\n\nWorst
        part was implementing an insertion sort algorithm since standard Forth doesn''t
        provide one (I''ll be sticking the implementation in a common library for
        future days though). Otherwise working with these lists was easy, and the
        input file could be directly included into my code: the numbers all get pushed
        to the stack and from there I moved them into list variables.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Forth]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/tcsullivan/advent-of-code/blob/master/day1/day1.fth\"&gt;https://github.com/tcsullivan/advent-of-code/blob/master/day1/day1.fth&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Worst
        part was implementing an insertion sort algorithm since standard Forth doesn&amp;#39;t
        provide one (I&amp;#39;ll be sticking the implementation in a common library
        for future days though). Otherwise working with these lists was easy, and
        the input file could be directly included into my code: the numbers all get
        pushed to the stack and from there I moved them into list variables.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw0iow/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw0iow", "created":
        1733070313.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzyaf3w", "id": "lzyaf3w", "parent_id":
        "t1_lzw0iow", "depth": 1, "children": ["lzyaf3w"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw4kxr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "abizern",
        "can_mod_post": false, "created_utc": 1733071638.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_7q62v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Swift\\]\n\n  \n[Day01.swift](https://github.com/Abizern/aoc-swift-2024/blob/main/Sources/Day01.swift)\n\n[Blog
        post](https://abizern.dev/posts/aoc-day1-historian-hysteria/)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Swift]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Abizern/aoc-swift-2024/blob/main/Sources/Day01.swift\"&gt;Day01.swift&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://abizern.dev/posts/aoc-day1-historian-hysteria/\"&gt;Blog post&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw4kxr/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw4kxr", "created":
        1733071638.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw7wmw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "GlitterTerrorist",
        "can_mod_post": false, "created_utc": 1733072675.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_ptnuilirv",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: EXCEL]\n\nDay 1\n\nPart 1\n\n1 Line\n\n    =SUM(ABS(SORT(LEFT(A1:A1000,5),,-1)-SORT(RIGHT(A1:A1000,5),,-1)))\n\nPart
        2\n\n    =SUM(COUNTIF($B1:$B1000,LEFT($A$1:$A$1000,5))*LEFT(Input!$A$1:$A$1000,5))\n\nFor
        Part 2, I have to manually split the right side of the list into column B,
        otherwise it won''t work. Anyone know how to get the Range of the countif
        to function as a fixed array? Criteria works fine, but trying to do a RIGHT
        for Range doesn''t fly.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        EXCEL]&lt;/p&gt;\n\n&lt;p&gt;Day 1&lt;/p&gt;\n\n&lt;p&gt;Part 1&lt;/p&gt;\n\n&lt;p&gt;1
        Line&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=SUM(ABS(SORT(LEFT(A1:A1000,5),,-1)-SORT(RIGHT(A1:A1000,5),,-1)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=SUM(COUNTIF($B1:$B1000,LEFT($A$1:$A$1000,5))*LEFT(Input!$A$1:$A$1000,5))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For
        Part 2, I have to manually split the right side of the list into column B,
        otherwise it won&amp;#39;t work. Anyone know how to get the Range of the countif
        to function as a fixed array? Criteria works fine, but trying to do a RIGHT
        for Range doesn&amp;#39;t fly.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw7wmw/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzw7wmw", "created": 1733072675.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw94jt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "SleepingInsomniac",
        "can_mod_post": false, "created_utc": 1733073065.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_4ijyt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: crystal]\n\nPart 1\n\n    list_left = [] of Int32\n    list_right
        = [] of Int32\n    \n    File.read_lines(File.join(__DIR__, file)).each do
        |line|\n      left, right = line.chomp.split(/\\s+/).map(&amp;.to_i32)\n      list_left
        &lt;&lt; left\n      list_right &lt;&lt; right\n    end\n    \n    list_left.sort!\n    list_right.sort!\n    \n    dist
        = list_left.zip(list_right).map { |(l, r)| (r - l).abs }.sum\n\n\nPart 2\n\n    list
        = [] of Int32\n    tally = {} of Int32 =&gt; Int32\n    \n    File.read_lines(File.join(__DIR__,
        file)).each do |line|\n      left, right = line.chomp.split(/\\s+/).map(&amp;.to_i32)\n      list
        &lt;&lt; left\n      tally[right] ||= 0\n      tally[right] += 1\n    end\n    \n    dist
        = list.reduce(0) { |d, n| d += n * (tally[n]? || 0) }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: crystal]&lt;/p&gt;\n\n&lt;p&gt;Part 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;list_left
        = [] of Int32\nlist_right = [] of Int32\n\nFile.read_lines(File.join(__DIR__,
        file)).each do |line|\n  left, right = line.chomp.split(/\\s+/).map(&amp;amp;.to_i32)\n  list_left
        &amp;lt;&amp;lt; left\n  list_right &amp;lt;&amp;lt; right\nend\n\nlist_left.sort!\nlist_right.sort!\n\ndist
        = list_left.zip(list_right).map { |(l, r)| (r - l).abs }.sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;list = [] of Int32\ntally = {} of Int32
        =&amp;gt; Int32\n\nFile.read_lines(File.join(__DIR__, file)).each do |line|\n  left,
        right = line.chomp.split(/\\s+/).map(&amp;amp;.to_i32)\n  list &amp;lt;&amp;lt;
        left\n  tally[right] ||= 0\n  tally[right] += 1\nend\n\ndist = list.reduce(0)
        { |d, n| d += n * (tally[n]? || 0) }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw94jt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw94jt", "created":
        1733073065.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwl442",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "bjartwolf",
        "can_mod_post": false, "created_utc": 1733076754.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_8vlar", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: F#\\]\n\nTranspiling the F# to Python and JavaScript (Node and
        Browser) with Fable\n\n[The browser compiled version](https://fish.bjartnes.dev/day1/)\n\n[advent2024/day\\_1
        at main \u00b7 bjartwolf/advent2024](https://github.com/bjartwolf/advent2024/tree/main/day_1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: F#]&lt;/p&gt;\n\n&lt;p&gt;Transpiling
        the F# to Python and JavaScript (Node and Browser) with Fable&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://fish.bjartnes.dev/day1/\"&gt;The browser compiled version&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/bjartwolf/advent2024/tree/main/day_1\"&gt;advent2024/day_1
        at main \u00b7 bjartwolf/advent2024&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwl442/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzwl442", "created": 1733076754.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwlk04",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Occultius",
        "can_mod_post": false, "created_utc": 1733076888.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_t249k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Swift]\n\nIt''s probably bad practice to force-unwrap all these
        optionals, but it''s not like I need to recover from invalid states.\n\n    import
        Foundation\n    \n    var input = (try? String(contentsOf: URL(fileURLWithPath:
        \"input.txt\")))!\n    if input[input.index(before: input.endIndex)] != \"\\n\")
        {\n      input.append(\"\\n\")\n    }\n    \n    var list1 = [Int](), list2
        = [Int]()\n    var temp = \"\"\n    for c: Character in input {\n      if
        c &gt;= \"0\" &amp;&amp; c &lt;= \"9\" {\n        temp.append(c)\n      }
        else if c == \" \" &amp;&amp; temp != \"\" {\n        list1.append(Int(temp)!)\n        temp
        = \"\"\n      } else if c == \"\\n\" {\n        list2.append(Int(temp)!)\n        temp
        = \"\"\n      }\n    }\n    \n    // The part where the magic happens\n    list1.sort()\n    list2.sort()\n    \n    var
        total1 = 0\n    for i in 0..&lt;list1.count {\n      total1 += abs(list1[i]
        - list2[i])\n    }\n    print(\"Part 1 answer: \\(total1)\")\n\n    var total2
        = 0\n    for num1 in list1 {\n      var count = 0\n      for num2 in list2
        {\n        count += (num1 == num2 ? 1 : 0)\n      }\n      total2 += num1
        * count\n    }\n    print(\"Part 2 answer: \\(total2)\")", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Swift]&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s
        probably bad practice to force-unwrap all these optionals, but it&amp;#39;s
        not like I need to recover from invalid states.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Foundation\n\nvar input = (try? String(contentsOf: URL(fileURLWithPath: &amp;quot;input.txt&amp;quot;)))!\nif
        input[input.index(before: input.endIndex)] != &amp;quot;\\n&amp;quot;) {\n  input.append(&amp;quot;\\n&amp;quot;)\n}\n\nvar
        list1 = [Int](), list2 = [Int]()\nvar temp = &amp;quot;&amp;quot;\nfor c:
        Character in input {\n  if c &amp;gt;= &amp;quot;0&amp;quot; &amp;amp;&amp;amp;
        c &amp;lt;= &amp;quot;9&amp;quot; {\n    temp.append(c)\n  } else if c ==
        &amp;quot; &amp;quot; &amp;amp;&amp;amp; temp != &amp;quot;&amp;quot; {\n    list1.append(Int(temp)!)\n    temp
        = &amp;quot;&amp;quot;\n  } else if c == &amp;quot;\\n&amp;quot; {\n    list2.append(Int(temp)!)\n    temp
        = &amp;quot;&amp;quot;\n  }\n}\n\n// The part where the magic happens\nlist1.sort()\nlist2.sort()\n\nvar
        total1 = 0\nfor i in 0..&amp;lt;list1.count {\n  total1 += abs(list1[i] -
        list2[i])\n}\nprint(&amp;quot;Part 1 answer: \\(total1)&amp;quot;)\n\nvar
        total2 = 0\nfor num1 in list1 {\n  var count = 0\n  for num2 in list2 {\n    count
        += (num1 == num2 ? 1 : 0)\n  }\n  total2 += num1 * count\n}\nprint(&amp;quot;Part
        2 answer: \\(total2)&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwlk04/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwlk04", "created":
        1733076888.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzww4wm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daic0r",
        "can_mod_post": false, "created_utc": 1733080082.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_8fbe9nsl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Elixir\\]\n\n[https://github.com/daic0r/advent\\_of\\_code\\_2024/blob/main/elixir/day1/day1.exs](https://github.com/daic0r/advent_of_code_2024/blob/main/elixir/day1/day1.exs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/daic0r/advent_of_code_2024/blob/main/elixir/day1/day1.exs\"&gt;https://github.com/daic0r/advent_of_code_2024/blob/main/elixir/day1/day1.exs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzww4wm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzww4wm", "created":
        1733080082.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzxnkx5", "id": "lzxnkx5", "parent_id":
        "t1_lzww4wm", "depth": 1, "children": ["lzxnkx5"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwwtz8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzwwtz8", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwwtz8/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733080290.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733080290.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxz744", "id": "lzxz744", "parent_id":
        "t1_lzwwtz8", "depth": 1, "children": ["lzxz744"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwz8r8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "sondr3_",
        "can_mod_post": false, "created_utc": 1733081018.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_2wvwqzt9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Haskell]\n\nThankfully easier than last year, but I was very late
        to the party. Very straight forward recursive solutions (that I converted
        to folds).\n\n    type Input = ([Int], [Int])\n\n    partA :: Input -&gt;
        Int\n    partA (xs, ys) = foldl'' (\\acc (x, y) -&gt; acc + abs (x - y)) 0
        (zip (sort xs) (sort ys))\n\n    partB :: Input -&gt; Int\n    partB (xs,
        ys) = foldl'' (\\acc x -&gt; acc + (x * length (filter (== x) ys))) 0 xs\n\n    parser
        :: Parser Input\n    parser = unzip &lt;$&gt; some ((,) &lt;$&gt; lexeme L.decimal
        &lt;*&gt; lexeme L.decimal &lt;* optional eol) &lt;* eof", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Haskell]&lt;/p&gt;\n\n&lt;p&gt;Thankfully
        easier than last year, but I was very late to the party. Very straight forward
        recursive solutions (that I converted to folds).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type
        Input = ([Int], [Int])\n\npartA :: Input -&amp;gt; Int\npartA (xs, ys) = foldl&amp;#39;
        (\\acc (x, y) -&amp;gt; acc + abs (x - y)) 0 (zip (sort xs) (sort ys))\n\npartB
        :: Input -&amp;gt; Int\npartB (xs, ys) = foldl&amp;#39; (\\acc x -&amp;gt;
        acc + (x * length (filter (== x) ys))) 0 xs\n\nparser :: Parser Input\nparser
        = unzip &amp;lt;$&amp;gt; some ((,) &amp;lt;$&amp;gt; lexeme L.decimal &amp;lt;*&amp;gt;
        lexeme L.decimal &amp;lt;* optional eol) &amp;lt;* eof\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwz8r8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwz8r8", "created":
        1733081018.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzxwied", "id": "lzxwied", "parent_id":
        "t1_lzwz8r8", "depth": 1, "children": ["lzxwied"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx3zmb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Fine-Marionberry1989",
        "can_mod_post": false, "created_utc": 1733082468.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_16iz21na5c",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Python\\]\n\n    import numpy as np\n    \n    with
        open(\"data.txt\") as f:\n        seats = f.read().split(\"\\n\")\n        seats
        = [seat.split(\"   \") for seat in seats]\n        seats = np.array(seats)\n        seats
        = np.rot90(seats)\n        seats = [[int(s) for s in seat] for seat in seats]\n        seats
        = [sorted(seat) for seat in seats]\n    \n    #part 1\n    difference = abs(np.subtract(seats[0],
        seats[1]))\n    print(difference)\n    print(sum(difference))\n    \n    #part2\n    list1
        = seats[1]\n    list2 = seats[0]\n    similarity_list = [list2.count(i)*i
        for i in list1]\n    similarity_score = sum(similarity_list)\n    print(similarity_score)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        numpy as np\n\nwith open(&amp;quot;data.txt&amp;quot;) as f:\n    seats =
        f.read().split(&amp;quot;\\n&amp;quot;)\n    seats = [seat.split(&amp;quot;   &amp;quot;)
        for seat in seats]\n    seats = np.array(seats)\n    seats = np.rot90(seats)\n    seats
        = [[int(s) for s in seat] for seat in seats]\n    seats = [sorted(seat) for
        seat in seats]\n\n#part 1\ndifference = abs(np.subtract(seats[0], seats[1]))\nprint(difference)\nprint(sum(difference))\n\n#part2\nlist1
        = seats[1]\nlist2 = seats[0]\nsimilarity_list = [list2.count(i)*i for i in
        list1]\nsimilarity_score = sum(similarity_list)\nprint(similarity_score)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx3zmb/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx3zmb", "created":
        1733082468.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxhjft", "id": "lzxhjft", "parent_id":
        "t1_lzx3zmb", "depth": 1, "children": ["lzxhjft"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx4vg0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "derkusherkus",
        "can_mod_post": false, "created_utc": 1733082739.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_e7nuqvdz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C\\]\n\nDoing C this year. I''m creating the useful data structures
        as I go. Made a vector and hashmap today.\n\nIn both of them, when I insert
        (e.g. [here](https://github.com/maxastyler/advent-of-code-2024/blob/8cc2c5dee935e9be545f1163e58db1c8e68daf6d/src/day_01/day_01.c#L86)),
        my API uses a ptr to the element to insert, so I can cast to void \\*. I need
        to do this so that the structures are generic, but is there a better way to
        design it?\n\n[https://github.com/maxastyler/advent-of-code-2024/blob/master/src/day\\_01/day\\_01.c](https://github.com/maxastyler/advent-of-code-2024/blob/master/src/day_01/day_01.c)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C]&lt;/p&gt;\n\n&lt;p&gt;Doing
        C this year. I&amp;#39;m creating the useful data structures as I go. Made
        a vector and hashmap today.&lt;/p&gt;\n\n&lt;p&gt;In both of them, when I
        insert (e.g. &lt;a href=\"https://github.com/maxastyler/advent-of-code-2024/blob/8cc2c5dee935e9be545f1163e58db1c8e68daf6d/src/day_01/day_01.c#L86\"&gt;here&lt;/a&gt;),
        my API uses a ptr to the element to insert, so I can cast to void *. I need
        to do this so that the structures are generic, but is there a better way to
        design it?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/maxastyler/advent-of-code-2024/blob/master/src/day_01/day_01.c\"&gt;https://github.com/maxastyler/advent-of-code-2024/blob/master/src/day_01/day_01.c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx4vg0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx4vg0", "created":
        1733082739.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzy9c3q", "id": "lzy9c3q", "parent_id":
        "t1_lzx4vg0", "depth": 1, "children": ["lzy9c3q"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733084547.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzx6a3o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "FCBStar-of-the-South",
        "can_mod_post": false, "created_utc": 1733083165.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_8zh1pc7y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Ruby\\]\n\n    lines = File.readlines(''input1.txt'', chomp:
        true)\n    list1 = []\n    list2 = []\n    freq = Hash.new(0)\n\n    lines.each
        do |line|\n      ids = line.split.map(&amp;:to_i)\n      list1 &lt;&lt; ids[0]\n      list2
        &lt;&lt; ids[1]\n      freq[ids[1]] += 1\n    end\n\n    list1.sort!\n    list2.sort!\n\n    distance
        = 0\n    similarity = 0\n    list1.zip(list2).each do |id1, id2|\n      distance
        += (id1 - id2).abs\n      similarity += id1 * freq[id1]\n    end\n\n    puts
        distance, similarity\n\n\nMy very first Ruby script, critiques more than welcome!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ruby]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;lines
        = File.readlines(&amp;#39;input1.txt&amp;#39;, chomp: true)\nlist1 = []\nlist2
        = []\nfreq = Hash.new(0)\n\nlines.each do |line|\n  ids = line.split.map(&amp;amp;:to_i)\n  list1
        &amp;lt;&amp;lt; ids[0]\n  list2 &amp;lt;&amp;lt; ids[1]\n  freq[ids[1]] +=
        1\nend\n\nlist1.sort!\nlist2.sort!\n\ndistance = 0\nsimilarity = 0\nlist1.zip(list2).each
        do |id1, id2|\n  distance += (id1 - id2).abs\n  similarity += id1 * freq[id1]\nend\n\nputs
        distance, similarity\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My very first
        Ruby script, critiques more than welcome!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx6a3o/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzx6a3o", "created": 1733083165.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzx7y8o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzx7y8o", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx7y8o/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733083667.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733083667.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxjepz", "id": "lzxjepz", "parent_id":
        "t1_lzx7y8o", "depth": 1, "children": ["lzxjepz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxdgoa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "NearbyCopy",
        "can_mod_post": false, "created_utc": 1733085364.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_2lzyasrr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: go\\]\n\nFirst time writing go.\n\n    func GetArrays(file string)
        ([]int, []int) {\n        data, err := os.ReadFile(\"./day_1/input.txt\")\n        if
        err != nil {\n            panic(err)\n        }\n    \n        var input =
        strings.Fields(string(data))\n    \n        var left []int\n        var right
        []int\n        for i := 0; i &lt; len(input); i += 2 {\n            first,
        err := strconv.Atoi(input[i])\n            if err != nil {\n                panic(err)\n            }\n            second,
        err := strconv.Atoi(input[i+1])\n            if err != nil {\n                panic(err)\n            }\n    \n            left
        = append(left, first)\n            right = append(right, second)\n        }\n        sort.Ints(left)\n        sort.Ints(right)\n    \n        return
        left, right\n    }\n    \n    func Exercise1() {\n        left, right := GetArrays(\"./day_1/input.txt\")\n        var
        distance = 0\n        for i := 0; i &lt; len(left); i++ {\n            first
        := left[i]\n            second := right[i]\n            if first &gt; second
        {\n                distance += (first - second)\n            } else {\n                distance
        += (second - first)\n            }\n        }\n        fmt.Printf(\"Distance:
        %d\\n\", distance)\n    }\n    \n    func Exercise2() {\n        left, right
        := GetArrays(\"./day_1/input.txt\")\n        var similarityScore = 0\n        var
        lastVariableSimilarity = 0\n        var lastIndexOfSecondArray = 0\n        for
        i := 0; i &lt; len(left); i++ {\n            if i != 0 &amp;&amp; left[i-1]
        != left[i] {\n                first := left[i]\n                var repetitionCount
        = 0\n                for j := lastIndexOfSecondArray; j &lt; len(right); j++
        {\n                    lastIndexOfSecondArray = j\n                    second
        := right[j]\n                    if first == second {\n                        repetitionCount++\n                    }\n                    if
        first &lt; second {\n                        break\n                    }\n                }\n                lastVariableSimilarity
        = first * repetitionCount\n            }\n            similarityScore += lastVariableSimilarity\n        }\n        fmt.Printf(\"Similiraty
        Score: %d\\n\", similarityScore)\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: go]&lt;/p&gt;\n\n&lt;p&gt;First time writing
        go.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func GetArrays(file string) ([]int,
        []int) {\n    data, err := os.ReadFile(&amp;quot;./day_1/input.txt&amp;quot;)\n    if
        err != nil {\n        panic(err)\n    }\n\n    var input = strings.Fields(string(data))\n\n    var
        left []int\n    var right []int\n    for i := 0; i &amp;lt; len(input); i
        += 2 {\n        first, err := strconv.Atoi(input[i])\n        if err != nil
        {\n            panic(err)\n        }\n        second, err := strconv.Atoi(input[i+1])\n        if
        err != nil {\n            panic(err)\n        }\n\n        left = append(left,
        first)\n        right = append(right, second)\n    }\n    sort.Ints(left)\n    sort.Ints(right)\n\n    return
        left, right\n}\n\nfunc Exercise1() {\n    left, right := GetArrays(&amp;quot;./day_1/input.txt&amp;quot;)\n    var
        distance = 0\n    for i := 0; i &amp;lt; len(left); i++ {\n        first :=
        left[i]\n        second := right[i]\n        if first &amp;gt; second {\n            distance
        += (first - second)\n        } else {\n            distance += (second - first)\n        }\n    }\n    fmt.Printf(&amp;quot;Distance:
        %d\\n&amp;quot;, distance)\n}\n\nfunc Exercise2() {\n    left, right := GetArrays(&amp;quot;./day_1/input.txt&amp;quot;)\n    var
        similarityScore = 0\n    var lastVariableSimilarity = 0\n    var lastIndexOfSecondArray
        = 0\n    for i := 0; i &amp;lt; len(left); i++ {\n        if i != 0 &amp;amp;&amp;amp;
        left[i-1] != left[i] {\n            first := left[i]\n            var repetitionCount
        = 0\n            for j := lastIndexOfSecondArray; j &amp;lt; len(right); j++
        {\n                lastIndexOfSecondArray = j\n                second := right[j]\n                if
        first == second {\n                    repetitionCount++\n                }\n                if
        first &amp;lt; second {\n                    break\n                }\n            }\n            lastVariableSimilarity
        = first * repetitionCount\n        }\n        similarityScore += lastVariableSimilarity\n    }\n    fmt.Printf(&amp;quot;Similiraty
        Score: %d\\n&amp;quot;, similarityScore)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxdgoa/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxdgoa", "created":
        1733085364.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733332458.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxg9fi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "AndydeCleyre",
        "can_mod_post": false, "created_utc": 1733086213.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_5kxzp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Factor]\n\n    : get-input ( -- left-list right-list )\n      \"vocab:aoc-2024/01/input.txt\"
        utf8 file-lines\n      [ split-words harvest ] map unzip\n      [ [ string&gt;number
        ] map ] bi@ ;\n    \n    : part1 ( -- n )\n      get-input\n      [ sort ]
        bi@\n      [ - abs ] 2map-sum ;\n    \n    : part2 ( -- n )\n      get-input\n      histogram\n      ''[
        dup _ at 0 or * ] map-sum ;\n\n[on GitHub](https://github.com/AndydeCleyre/aoc-2024/blob/main/01/01.factor)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Factor]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;:
        get-input ( -- left-list right-list )\n  &amp;quot;vocab:aoc-2024/01/input.txt&amp;quot;
        utf8 file-lines\n  [ split-words harvest ] map unzip\n  [ [ string&amp;gt;number
        ] map ] bi@ ;\n\n: part1 ( -- n )\n  get-input\n  [ sort ] bi@\n  [ - abs
        ] 2map-sum ;\n\n: part2 ( -- n )\n  get-input\n  histogram\n  &amp;#39;[ dup
        _ at 0 or * ] map-sum ;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/AndydeCleyre/aoc-2024/blob/main/01/01.factor\"&gt;on
        GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxg9fi/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxg9fi", "created":
        1733086213.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxo4cs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1733088650.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: SWI Prolog]\n\n[Github Gist link](https://gist.github.com/HumanEquivalentUnit/264ede23f4f1159f7dc02f2b29196854).
        Edit the path to input file, run with `swipl -t go c:/path/to/2024-day01.pl`.\n\nIt''s
        a declarative grammar to parse the file, and some functional programming style
        mapl/fold to avoid writing a lot of recursion. There is a trick in it around
        line 32 that does something like:\n\n - zip two lists [1,2,3] [5,6,7] using
        pairs_keys_values giving Prolog terms [1-5, 2-6, 3-7] because dash is convenient
        to link two items in a pair.\n - Prolog doesn''t do arithmetic until you ask
        it to.\n - maplist(abs) over the pairs forces them to be evaluated as arithmetic,
        then does abs() on the results.\n\nThat''s a bit of metaprogramming, code-is-data
        and data-is-code, 1-5 is a piece of Prolog code constructed at runtime, and
        then used.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        SWI Prolog]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/HumanEquivalentUnit/264ede23f4f1159f7dc02f2b29196854\"&gt;Github
        Gist link&lt;/a&gt;. Edit the path to input file, run with &lt;code&gt;swipl
        -t go c:/path/to/2024-day01.pl&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s
        a declarative grammar to parse the file, and some functional programming style
        mapl/fold to avoid writing a lot of recursion. There is a trick in it around
        line 32 that does something like:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;zip two
        lists [1,2,3] [5,6,7] using pairs_keys_values giving Prolog terms [1-5, 2-6,
        3-7] because dash is convenient to link two items in a pair.&lt;/li&gt;\n&lt;li&gt;Prolog
        doesn&amp;#39;t do arithmetic until you ask it to.&lt;/li&gt;\n&lt;li&gt;maplist(abs)
        over the pairs forces them to be evaluated as arithmetic, then does abs()
        on the results.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;That&amp;#39;s a bit of
        metaprogramming, code-is-data and data-is-code, 1-5 is a piece of Prolog code
        constructed at runtime, and then used.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxo4cs/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzxo4cs", "created": 1733088650.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxstr8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "SuperD0D0",
        "can_mod_post": false, "created_utc": 1733090151.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_4dlz5kti", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C#/CSharp\\]  \n\n\n    var input = File.ReadAllLines(\"./day1.txt\");\n    var
        leftList = input.Select(x =&gt; x.Split(\" \u00a0 \")[0]).Select(int.Parse).Order().ToList();\n    var
        rightList = input.Select(x =&gt; x.Split(\" \u00a0 \")[1]).Select(int.Parse).Order().ToList();\n    \n    //Part
        One\n    Console.WriteLine(Enumerable.Range(0, leftList.Count).Select(i =&gt;
        Math.Abs(leftList[i] - rightList[i])).Sum());\n    \n    //Part Two\n    Console.WriteLine(leftList.Select(l
        =&gt; l * rightList.Count(r =&gt; r == l)).Sum());", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#/CSharp]  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        input = File.ReadAllLines(&amp;quot;./day1.txt&amp;quot;);\nvar leftList =
        input.Select(x =&amp;gt; x.Split(&amp;quot; \u00a0 &amp;quot;)[0]).Select(int.Parse).Order().ToList();\nvar
        rightList = input.Select(x =&amp;gt; x.Split(&amp;quot; \u00a0 &amp;quot;)[1]).Select(int.Parse).Order().ToList();\n\n//Part
        One\nConsole.WriteLine(Enumerable.Range(0, leftList.Count).Select(i =&amp;gt;
        Math.Abs(leftList[i] - rightList[i])).Sum());\n\n//Part Two\nConsole.WriteLine(leftList.Select(l
        =&amp;gt; l * rightList.Count(r =&amp;gt; r == l)).Sum());\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxstr8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxstr8", "created":
        1733090151.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzzp4qh", "id": "lzzp4qh", "parent_id":
        "t1_lzxstr8", "depth": 1, "children": ["lzzp4qh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy13zj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Mundane_Customer_276",
        "can_mod_post": false, "created_utc": 1733092901.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_8xphdrxs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Haskell\\]\n\nFeedbacks are always welcome! Felt very long so
        looking for ways to improve!\n\n[gist link](https://gist.github.com/luke9kim8/7678bfb209d7c2032a4f3793ea106ccf)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Haskell]&lt;/p&gt;\n\n&lt;p&gt;Feedbacks
        are always welcome! Felt very long so looking for ways to improve!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gist.github.com/luke9kim8/7678bfb209d7c2032a4f3793ea106ccf\"&gt;gist
        link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy13zj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy13zj", "created":
        1733092901.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzy8tic", "id": "lzy8tic", "parent_id":
        "t1_lzy13zj", "depth": 1, "children": ["lzy8tic"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733098046.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzy2ysa", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "KrokettenMan",
        "can_mod_post": false, "created_utc": 1733093524.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 5, "author_fullname": "t2_sl3iy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Bash\\]\n\nGolfed it pretty well, don''t think I''ll be able
        to get it any shorter. Suggestions are welcome!\n\nMake sure to pass the file
        as the first argument of this script\n\npart 1\n\n    #!/usr/bin/env bash\n    \n    i=$1;f(){
        cut -d\\  -f$1&lt;$i|sort -n;}\n    echo $(($(for l in $(paste -d- &lt;(f
        1) &lt;(f 4));do l=$((l));echo +${l/-/};done)))\n\npart 2\n\n    #!/usr/bin/env
        bash\n    echo $(($(for l in $(cut -d\\  -f1&lt;$1);do echo +$(($(grep -c
        \\ $l $1)*$l));done)))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Bash]&lt;/p&gt;\n\n&lt;p&gt;Golfed it pretty well, don&amp;#39;t think I&amp;#39;ll
        be able to get it any shorter. Suggestions are welcome!&lt;/p&gt;\n\n&lt;p&gt;Make
        sure to pass the file as the first argument of this script&lt;/p&gt;\n\n&lt;p&gt;part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env bash\n\ni=$1;f(){ cut
        -d\\  -f$1&amp;lt;$i|sort -n;}\necho $(($(for l in $(paste -d- &amp;lt;(f
        1) &amp;lt;(f 4));do l=$((l));echo +${l/-/};done)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env bash\necho $(($(for l
        in $(cut -d\\  -f1&amp;lt;$1);do echo +$(($(grep -c \\ $l $1)*$l));done)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy2ysa/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy2ysa", "created":
        1733093524.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_m03en72", "id": "m03en72", "parent_id":
        "t1_lzy2ysa", "depth": 1, "children": ["m03en72", "lzzc88d", "lzy56mr"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzyhf3h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "dijotal",
        "can_mod_post": false, "created_utc": 1733098598.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_57y7ez02", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Haskell\\]\n\n        module Main where\n    \n        import
        Data.IntMap qualified as M\n        import Data.List (sort, transpose)\n    \n        part_1
        :: [[Int]] -&gt; Int\n        part_1 pairs = sum $ zipWith (\\x y -&gt; abs
        (x - y)) xs ys\n          where\n            [xs, ys] = map sort $ transpose
        pairs\n    \n        part_2 :: [[Int]] -&gt; Int\n        part_2 pairs =\n            let\n                [xs,
        ys] = transpose pairs\n                freqY = M.fromListWith (+) $ zip ys
        (repeat 1)\n                weights = M.mapWithKey (\\k y -&gt; k * y) freqY\n             in\n                sum
        $ map (\\k -&gt; M.findWithDefault 0 k weights) xs\n    \n        main ::
        IO ()\n        main = do\n            contents &lt;- readFile \"input\"\n            let
        pairs = map (map read . words) (lines contents) :: [[Int]]\n            putStrLn
        $ \"Part 1: \" ++ show (part_1 pairs)\n            putStrLn $ \"Part 2: \"
        ++ show (part_2 pairs)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Haskell]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    module Main where\n\n    import
        Data.IntMap qualified as M\n    import Data.List (sort, transpose)\n\n    part_1
        :: [[Int]] -&amp;gt; Int\n    part_1 pairs = sum $ zipWith (\\x y -&amp;gt;
        abs (x - y)) xs ys\n      where\n        [xs, ys] = map sort $ transpose pairs\n\n    part_2
        :: [[Int]] -&amp;gt; Int\n    part_2 pairs =\n        let\n            [xs,
        ys] = transpose pairs\n            freqY = M.fromListWith (+) $ zip ys (repeat
        1)\n            weights = M.mapWithKey (\\k y -&amp;gt; k * y) freqY\n         in\n            sum
        $ map (\\k -&amp;gt; M.findWithDefault 0 k weights) xs\n\n    main :: IO ()\n    main
        = do\n        contents &amp;lt;- readFile &amp;quot;input&amp;quot;\n        let
        pairs = map (map read . words) (lines contents) :: [[Int]]\n        putStrLn
        $ &amp;quot;Part 1: &amp;quot; ++ show (part_1 pairs)\n        putStrLn $
        &amp;quot;Part 2: &amp;quot; ++ show (part_2 pairs)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyhf3h/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyhf3h", "created":
        1733098598.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733109049.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzz7ev4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "4DigitPin",
        "can_mod_post": false, "created_utc": 1733107974.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_15gfsk4nkh",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Golang\\]\n\nWhy use hashmaps when you can chase
        indices?\n\n[https://github.com/vynra/Advent\\_of\\_Code\\_2024/blob/main/day\\_1/day\\_1.go](https://github.com/vynra/Advent_of_Code_2024/blob/main/day_1/day_1.go)\n\nI
        wrote a custom algorithm for part 2 for fun, think it might be faster than
        a hashmap. Fun bit starts on line 42", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Golang]&lt;/p&gt;\n\n&lt;p&gt;Why use
        hashmaps when you can chase indices?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/vynra/Advent_of_Code_2024/blob/main/day_1/day_1.go\"&gt;https://github.com/vynra/Advent_of_Code_2024/blob/main/day_1/day_1.go&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        wrote a custom algorithm for part 2 for fun, think it might be faster than
        a hashmap. Fun bit starts on line 42&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzz7ev4/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzz7ev4", "created": 1733107974.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzz9310", "id": "lzz9310", "parent_id":
        "t1_lzz7ev4", "depth": 1, "children": ["lzz9310", "lzznybf"]}}, {"kind": "more",
        "data": {"count": 852, "name": "t1_lzzdouv", "id": "lzzdouv", "parent_id":
        "t3_1h3vp6n", "depth": 0, "children": ["lzzdouv", "lztuqji", "lztvrv7", "lztwt44",
        "lztvo7j", "lztvat3", "lztwrej", "lztvrzf", "lztxedy", "lztxvuj", "lztvxqo",
        "lztwobe", "lzu14er", "lzty87e", "lztx33s", "lztxj21", "lzuj028", "lzudcvb",
        "lztzllo", "lztzce5", "lztzkrd", "lzukgit", "lztwe10", "lzu5kkk", "lzu1qef",
        "lzty1pl", "lzu5c3j", "lzu4ea2", "lzucjcb", "lzua06v", "lzu2xto", "lztzm3y",
        "lztyw2n", "lzu6bxb", "lzw392l", "lzvt9ub", "lzufxbj", "lzuhnpq", "lzujbsz",
        "lzvmheb", "lzusuqf", "lzuaelz", "lzwfhja", "lzuvoa7", "lzuurvl", "lzv5etg",
        "lzw8clk", "lzurzx2", "lzunnwy", "lzulebd", "lzuogyx", "lzvd10m", "lzu5iu8",
        "lzui0r7", "lzulk56", "lzvlx89", "lzuzuz0", "lzusuhd", "lzvcct0", "lzuyrjc",
        "lztutgx", "lzubcx0", "lzudwpn", "lzusygn", "lzu8brh", "lztzt7s", "lzudvpi",
        "lzu247p", "lzuy50s", "lzuir50", "lzuve9o", "lzwm77m", "lzwy0pm", "lzw7bxl",
        "lzuin6w", "lzyc6yj", "lzuk8y5", "lzwmaex", "lzw6zcn", "lzukwoy", "lzw59qi",
        "lzw3rc4", "lzw6smd", "lzuveei", "lzunulz", "lzuph36", "lzwn130", "lzxwzv1",
        "lzxx539", "lzwiqz3", "lzv6mjf", "lzwmp7w", "lztuhit", "lztwo15", "lzxgnjw",
        "lzxymvy", "lzywm0a", "lzuzvr4", "lzv90g1", "lzvftee", "lzw6cci", "lzuxujh",
        "lzvhlo7", "lzv8820", "lzxhngc", "lzvdlvw", "lztwb58", "lztypfi", "lzuqgs5",
        "lzvz9lm", "lztxfn0", "lztvbso", "lzxzl8k", "lzu1m7y", "lzu2xei", "lzvolnw",
        "lzx3cfm", "lzz1zdd", "lzumum1", "lzw18yp", "lzv77xx", "lzvlpzh", "lztvrmy",
        "lzuf6pl", "lzva9iy", "lzufx31", "lzwhwnu", "lzx2iql", "lzva1mu", "lztvtu4",
        "lzxrzxz", "lzu6ehv", "lzv1u54", "lztwdz8", "lzutbyl", "lzue1n7", "lzuy57y",
        "lztuzu2", "lzx0451", "lzu0358", "lzxd7g7", "lzvqw9h", "lzv77ab", "lztxczr",
        "lzu4v0v", "lzy2ck1", "lzwgq3h", "lzuhzeh", "lzwr1gt", "lzv1j4u", "lzv85jl",
        "lzu09x9", "lzw8s3t", "lzwlnw1", "lzx5x7o", "lzxwpuu", "lzxab8v", "lzupmws",
        "lztwvux", "lzv20jv", "lzxjlud", "lzulx1l", "lzxyt1p", "lzuj69d", "lzuhkm0",
        "lzusxwa", "lzxb6wy", "lztyism", "lzuaoj8", "lzwwfi2", "lzu0fn0", "lzuqnrn",
        "lzx5ew6", "lzuuc24", "lzu3ne8", "lzz3tud", "lzv69w1", "lzuorux", "lztxn9m",
        "lztvjez", "lzvh4g9", "lzufy8k", "lzxk8in", "lzunlr8", "lztzho4", "lzugfkv",
        "lzury9n", "lzv9bgi", "lzyo099", "lzxjjz7", "lzuyau3", "lzyy37i", "lzumwlo",
        "lzu40h0", "lzvo53h", "lzuatf2", "lztwpcw", "lzu5vwv", "lztycnp", "lzwqcgt",
        "lzuq6jl", "lzu08md", "lzv48yt", "lzu37j5", "lzvwlng", "lzv0kiu", "lzux5eu",
        "lzupjwe", "lzy1xya", "lztxfyf", "lzu0lc6", "lzvx9tt", "lzub3gm", "lzxwxer",
        "lzxvf32", "lzvgzl2", "lzv4kze", "lzvc37w", "lzwaqbg", "lzud5mh", "lztwckv",
        "lzuclrz", "lztxp3z", "lzxv1io", "lzvl48t", "lztwqd9", "lzunjwq", "lzww2ia",
        "lzuqgpm", "lzuzxk9", "lzubp9n", "lztxsbu", "lzuc95m", "lzvei7r", "lzupl7p",
        "lztveyg", "lzuqiqy", "lzunhiy", "lztzrhe", "lzvbe25", "lzy3w4z", "lzuzmk2",
        "lzwjr08", "lzyoxpn", "lzv11tu", "lzvb8mz", "lzv1amu", "lzy2y3j", "lzukmkn",
        "lzut10v", "lzujvaw", "lztxcn2", "lztuqbf", "lzymy1w", "lzuqa28", "lzykfxp",
        "lzu1tvt", "lztvr1f", "lzurdle", "lzujlwa", "lzuhdck", "lztx9nv", "lzy3l4s",
        "lzxpqjn", "lztx6do", "lzzhi6n", "lzuxplx", "lzu3arz", "lzunco8", "lzv0sma",
        "lzurqvp", "lztxgq1", "lzutgq2", "lzuwuer", "lzv9vah", "lzu6fxr", "lzxped4",
        "lzwbgg6", "lzuim0s", "lzyopak", "lzx3r49", "lzui3bt", "lzufdi1", "lzukqyb",
        "lzva6dl", "lzuw204", "lzyplnw", "lzydegd", "lzwp0s1", "lzvljq9", "lzvfewi",
        "lzuuqlz", "lzu16p9", "lzxcran", "lzvnk10", "lzyi596", "lzwbpkj", "lzwtcbu",
        "lzyegbz", "lzw6jj7", "lzwpqqx", "lzwpi7i", "lzuqoee", "lztv52p", "lzxc1gg",
        "lzy50rj", "lzurrwf", "lzxni8y", "lzz88li", "lzuorbh", "lzwkspk", "lztv0cr",
        "lztxifk", "lzv6h6u", "lzxey3q", "lzv6lu7", "lzxr1ct", "lzuegf5", "lzvjwvq",
        "lzxzre1", "lzubpt1", "lzv1l81", "lzuxu2f", "lzxd4fq", "lzv5do7", "lzvny74",
        "lzyzbv8", "lzxqfih", "lzuiprd", "lzv0mhf", "lztz5jj", "lzudkem", "lzu1uyi",
        "lzuksqn", "lzyitqc", "lzwve2u", "lzw0s5r", "lzvv2gw", "lzuhysu", "lzunnlt",
        "lzy5ev5", "lzuxuz5", "lzwefd0", "lzw747s", "lzw21qf", "lzw590b", "lzv0aq2",
        "lzw9xv7", "lzunwxv", "lzv3ssf", "lzutcrs", "lzvwrb4", "lzy4wiu", "lzy0ubn",
        "lzuywc7", "lzz7dp2", "lzwf2n3", "lzw0bbp", "lztxhsi", "lztyu01", "lzvijc3",
        "lzx5fi8", "lzwhlfw", "lzua5pk", "lzy1ie6", "lzyu3xo", "lzyas3y", "lzuob92",
        "lzv0600", "lzu257r", "lzurxqm", "lzyip3j", "lzx663l", "lzuxln2", "lzup0wo",
        "lztx3fc", "lzvkpuj", "lzwhsbr", "lzv7dn6", "lzufzy7", "lzuj683", "lzw0r7p",
        "lzyahn2", "lzvwbmb", "lzz0m22", "lzv06w0", "lzwfu9m", "lzyioa0", "lztv8j1",
        "lzx5ceh", "lzuh31k", "lztwpd7", "lzut77l", "lzwcpug", "lzulkpq", "lzybcds",
        "lzv1h7j", "lztv294", "lzvbkq0", "lztz227", "lzuo7jw", "lzx7rcg", "lzwggfd",
        "lzvehvx", "lzwk037", "lzv76ku", "lzul07q", "lzv0jmg", "lzu4arc", "lzxnxu5",
        "lzwq5rw", "lzx9tmj", "lztzpt7", "lzyoaka", "lzuztdp", "lzumhc5", "lzv14mo",
        "lzu4jyf", "lzudmaa", "lzxbuz2", "lzv1dp2", "lzx7z9q", "lzx4yw1", "lzv5f36",
        "lzy1vi1", "lzxvj9k", "lzuluvw", "lzw7wbc", "lzydt95", "lzwwa0j", "lzw1gq7",
        "lzuiq49", "lzufa75", "lztzjk2", "lzufves", "lzxiyqj", "lzup10n", "lzwih8i",
        "lzu0iw8", "lzur90m", "lztx0gs", "lzyxsyp", "lzw0gx8", "lzudln3", "lzue4xp",
        "lzwlzli", "lzw82qi", "lzu253p", "lzwh5rt", "lzw05v2", "lzuzoao", "lzvuxar",
        "lzvl8xt", "lzv83r3", "lzuqymy", "lzuduwc", "lzufzih", "lzymhbq", "lzxlypv",
        "lzupu7v", "lzurrr3", "lztws3t", "lzv3mfg", "lzubafx"]}}], true]], [0, 12,
        "attr", "things"], [12, 13, "call", ["t1_lzumtlf"]], [13, 14, "attr", "focus"],
        [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call", ["None"]],
        [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]], [19, 20,
        "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:38 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:38 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=bPiUSk8xcVOFa2sYq5; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:38 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzzdouv,lztuqji,lztvrv7,lztwt44,lztvo7j,lztvat3,lztwrej,lztvrzf,lztxedy,lztxvuj,lztvxqo,lztwobe,lzu14er,lzty87e,lztx33s,lztxj21,lzuj028,lzudcvb,lztzllo,lztzce5,lztzkrd,lzukgit,lztwe10,lzu5kkk,lzu1qef,lzty1pl,lzu5c3j,lzu4ea2,lzucjcb,lzua06v,lzu2xto,lztzm3y,lztyw2n,lzu6bxb,lzw392l,lzvt9ub,lzufxbj,lzuhnpq,lzujbsz,lzvmheb,lzusuqf,lzuaelz,lzwfhja,lzuvoa7,lzuurvl,lzv5etg,lzw8clk,lzurzx2,lzunnwy,lzulebd,lzuogyx,lzvd10m,lzu5iu8,lzui0r7,lzulk56,lzvlx89,lzuzuz0,lzusuhd,lzvcct0,lzuyrjc,lztutgx,lzubcx0,lzudwpn,lzusygn,lzu8brh,lztzt7s,lzudvpi,lzu247p,lzuy50s,lzuir50,lzuve9o,lzwm77m,lzwy0pm,lzw7bxl,lzuin6w,lzyc6yj,lzuk8y5,lzwmaex,lzw6zcn,lzukwoy,lzw59qi,lzw3rc4,lzw6smd,lzuveei,lzunulz,lzuph36,lzwn130,lzxwzv1,lzxx539,lzwiqz3,lzv6mjf,lzwmp7w,lztuhit,lztwo15,lzxgnjw,lzxymvy,lzywm0a,lzuzvr4,lzv90g1,lzvftee,lzw6cci,lzuxujh,lzvhlo7,lzv8820,lzxhngc,lzvdlvw,lztwb58,lztypfi,lzuqgs5,lzvz9lm,lztxfn0,lztvbso,lzxzl8k,lzu1m7y,lzu2xei,lzvolnw,lzx3cfm,lzz1zdd,lzumum1,lzw18yp,lzv77xx,lzvlpzh,lztvrmy,lzuf6pl,lzva9iy,lzufx31,lzwhwnu,lzx2iql,lzva1mu,lztvtu4,lzxrzxz,lzu6ehv,lzv1u54,lztwdz8,lzutbyl,lzue1n7,lzuy57y,lztuzu2,lzx0451,lzu0358,lzxd7g7,lzvqw9h,lzv77ab,lztxczr,lzu4v0v,lzy2ck1,lzwgq3h,lzuhzeh,lzwr1gt,lzv1j4u,lzv85jl,lzu09x9,lzw8s3t,lzwlnw1,lzx5x7o,lzxwpuu,lzxab8v,lzupmws,lztwvux,lzv20jv,lzxjlud,lzulx1l,lzxyt1p,lzuj69d,lzuhkm0,lzusxwa,lzxb6wy,lztyism,lzuaoj8,lzwwfi2,lzu0fn0,lzuqnrn,lzx5ew6,lzuuc24,lzu3ne8,lzz3tud,lzv69w1,lzuorux,lztxn9m,lztvjez,lzvh4g9,lzufy8k,lzxk8in,lzunlr8,lztzho4,lzugfkv,lzury9n,lzv9bgi,lzyo099,lzxjjz7,lzuyau3,lzyy37i,lzumwlo,lzu40h0,lzvo53h,lzuatf2,lztwpcw,lzu5vwv,lztycnp,lzwqcgt,lzuq6jl,lzu08md,lzv48yt,lzu37j5,lzvwlng,lzv0kiu,lzux5eu,lzupjwe,lzy1xya,lztxfyf,lzu0lc6,lzvx9tt,lzub3gm,lzxwxer,lzxvf32,lzvgzl2,lzv4kze,lzvc37w,lzwaqbg,lzud5mh,lztwckv,lzuclrz,lztxp3z,lzxv1io,lzvl48t,lztwqd9,lzunjwq,lzww2ia,lzuqgpm,lzuzxk9,lzubp9n,lztxsbu,lzuc95m,lzvei7r,lzupl7p,lztveyg,lzuqiqy,lzunhiy,lztzrhe,lzvbe25,lzy3w4z,lzuzmk2,lzwjr08,lzyoxpn,lzv11tu,lzvb8mz,lzv1amu,lzy2y3j,lzukmkn,lzut10v,lzujvaw,lztxcn2,lztuqbf,lzymy1w,lzuqa28,lzykfxp,lzu1tvt,lztvr1f,lzurdle,lzujlwa,lzuhdck,lztx9nv,lzy3l4s,lzxpqjn,lztx6do,lzzhi6n,lzuxplx,lzu3arz,lzunco8,lzv0sma,lzurqvp,lztxgq1,lzutgq2,lzuwuer,lzv9vah,lzu6fxr,lzxped4,lzwbgg6,lzuim0s,lzyopak,lzx3r49,lzui3bt,lzufdi1,lzukqyb,lzva6dl,lzuw204,lzyplnw,lzydegd,lzwp0s1,lzvljq9,lzvfewi,lzuuqlz,lzu16p9,lzxcran,lzvnk10,lzyi596,lzwbpkj,lzwtcbu,lzyegbz,lzw6jj7,lzwpqqx,lzwpi7i,lzuqoee,lztv52p,lzxc1gg,lzy50rj,lzurrwf,lzxni8y,lzz88li,lzuorbh,lzwkspk,lztv0cr,lztxifk,lzv6h6u,lzxey3q,lzv6lu7,lzxr1ct,lzuegf5,lzvjwvq,lzxzre1,lzubpt1,lzv1l81,lzuxu2f,lzxd4fq,lzv5do7,lzvny74,lzyzbv8,lzxqfih,lzuiprd,lzv0mhf,lztz5jj,lzudkem,lzu1uyi,lzuksqn,lzyitqc,lzwve2u,lzw0s5r,lzvv2gw,lzuhysu,lzunnlt,lzy5ev5,lzuxuz5,lzwefd0,lzw747s,lzw21qf,lzw590b,lzv0aq2,lzw9xv7,lzunwxv,lzv3ssf,lzutcrs,lzvwrb4,lzy4wiu,lzy0ubn,lzuywc7,lzz7dp2,lzwf2n3,lzw0bbp,lztxhsi,lztyu01,lzvijc3,lzx5fi8,lzwhlfw,lzua5pk,lzy1ie6,lzyu3xo,lzyas3y,lzuob92,lzv0600,lzu257r,lzurxqm,lzyip3j,lzx663l,lzuxln2,lzup0wo,lztx3fc,lzvkpuj,lzwhsbr,lzv7dn6,lzufzy7,lzuj683,lzw0r7p,lzyahn2,lzvwbmb,lzz0m22,lzv06w0,lzwfu9m,lzyioa0,lztv8j1,lzx5ceh,lzuh31k,lztwpd7,lzut77l,lzwcpug,lzulkpq,lzybcds,lzv1h7j,lztv294,lzvbkq0,lztz227,lzuo7jw,lzx7rcg,lzwggfd,lzvehvx,lzwk037,lzv76ku,lzul07q,lzv0jmg,lzu4arc,lzxnxu5,lzwq5rw,lzx9tmj,lztzpt7,lzyoaka,lzuztdp,lzumhc5,lzv14mo,lzu4jyf,lzudmaa,lzxbuz2,lzv1dp2,lzx7z9q,lzx4yw1,lzv5f36,lzy1vi1,lzxvj9k,lzuluvw,lzw7wbc,lzydt95,lzwwa0j,lzw1gq7,lzuiq49,lzufa75,lztzjk2,lzufves,lzxiyqj,lzup10n,lzwih8i,lzu0iw8,lzur90m,lztx0gs,lzyxsyp,lzw0gx8,lzudln3,lzue4xp,lzwlzli,lzw82qi,lzu253p,lzwh5rt,lzw05v2,lzuzoao,lzvuxar,lzvl8xt,lzv83r3,lzuqymy,lzuduwc,lzufzih,lzymhbq,lzxlypv,lzupu7v,lzurrr3,lztws3t,lzv3mfg,lzubafx
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '34914'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksemootsq.2.1741471478990.Z0FBQUFBQm56TDczN0ZNUDFibFpyVEFFNW4tbDRiUkpkTElRWk1Jd3RSbTZNc3Q3ZzRfVmlndkE3N0NSUFgwQTM4d0hUSW9MWE52NlhULWc1RnRnYU1yczhIN2gwbVJSbmNmb0V3R0EzOXhsbFNpNUtUdGFDSkRZc2JDU0M1bjVyNUZqQm44b0JVYVE;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:39
        GMT; secure, session_tracker=nlomiehdkcclfjilkj.0.1741471479001.Z0FBQUFBQm56TDczaHE0ZkVYWmNOOE1LZUZxVUVLRWM2SXY2U1ZKSktoWjNjWl9aTzZJY1lxRUQ0OW9Cb2lsNmM5dm5rT0h1VnIwSDNKZ2NkNlJjVDRTUVhiaWQ2LWdEdkEtNEQxX3RNTzN1Z2cwRklqQTZHbGNlb01lbDZ1UlU3WVVwSjJmaERyZVc;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:39
        GMT; secure, edgebucket=lF9aWxShAyRue44gcM; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '6'
      x-ratelimit-remaining:
      - '94.0'
      x-ratelimit-reset:
      - '321'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:39 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzzdouv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "shinigami6691",
        "can_mod_post": false, "created_utc": 1733110377.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_4gka8nco", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Java\\]\n\nLearnt java last semester in uni, thought I would
        put it into practice! Took the advantage of using memoization to do part 2.\n\n[https://github.com/shinigami6691/AoC/blob/main/2024/Day%201/Main.java](https://github.com/shinigami6691/AoC/blob/main/2024/Day%201/Main.java)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Java]&lt;/p&gt;\n\n&lt;p&gt;Learnt
        java last semester in uni, thought I would put it into practice! Took the
        advantage of using memoization to do part 2.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/shinigami6691/AoC/blob/main/2024/Day%201/Main.java\"&gt;https://github.com/shinigami6691/AoC/blob/main/2024/Day%201/Main.java&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzdouv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzzdouv", "created":
        1733110377.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_m01rb6m", "id": "m01rb6m", "parent_id":
        "t1_lzzdouv", "depth": 1, "children": ["m01rb6m"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733030237.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztuqji", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Wayoshi",
        "can_mod_post": false, "created_utc": 1733029749.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_c1rnn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\] 360/445\n\nHad to multitask a bit or I wonder if I
        could have made leaderboard. Pretty simple as usual on day 1.\n\n[paste](https://topaz.github.io/paste/#XQAAAQCgAQAAAAAAAAAzHIoib6pMX4iogbge384p5fx1NAcmWcSPjNpyOlSUAozPmohsFWhMHGUIkAFsOqCEDm68kUNLg4O4U5vQ7fUqO9GyaLFTU0dM97LtXUT/dwqWpKp/5vJL2cO33LbZrvSuf/2B6gtwqqAbOcBqIihr9I/MuZ7uOfdhPDRfnkigYmyD9uDav1akvHVwY0Ioi+R9j6r3qZfYQFjo3H6ly86Ejnh9b3AYWNsTOnK9FmfCK5F/eLozbsZx/n+t4Z9UzNQ1xVqjODg+RJTEg7KwvYnPXIub+lNFoJHZTePc3bLXZAUyyze7s6LU6Tzl47//Sy8ZAA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python] 360/445&lt;/p&gt;\n\n&lt;p&gt;Had
        to multitask a bit or I wonder if I could have made leaderboard. Pretty simple
        as usual on day 1.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCgAQAAAAAAAAAzHIoib6pMX4iogbge384p5fx1NAcmWcSPjNpyOlSUAozPmohsFWhMHGUIkAFsOqCEDm68kUNLg4O4U5vQ7fUqO9GyaLFTU0dM97LtXUT/dwqWpKp/5vJL2cO33LbZrvSuf/2B6gtwqqAbOcBqIihr9I/MuZ7uOfdhPDRfnkigYmyD9uDav1akvHVwY0Ioi+R9j6r3qZfYQFjo3H6ly86Ejnh9b3AYWNsTOnK9FmfCK5F/eLozbsZx/n+t4Z9UzNQ1xVqjODg+RJTEg7KwvYnPXIub+lNFoJHZTePc3bLXZAUyyze7s6LU6Tzl47//Sy8ZAA==\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztuqji/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztuqji", "created":
        1733029749.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztuqk4", "id": "lztuqk4", "parent_id":
        "t1_lztuqji", "depth": 1, "children": ["lztuqk4"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztvat3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "vanveenfromardis",
        "can_mod_post": false, "created_utc": 1733030019.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_7yiedewg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: C# .NET\\] 741 / 673\n\n[GitHub](https://github.com/tmbarker/advent-of-code/blob/main/Solutions/Y2024/D01/Solution.cs)\n\nI''m
        happy to have Advent of Code back, I''ve been looking forward to it all year.
        Can''t wait for the puzzles to ramp up some more in difficulty.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: C# .NET] 741 / 673&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/tmbarker/advent-of-code/blob/main/Solutions/Y2024/D01/Solution.cs\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        happy to have Advent of Code back, I&amp;#39;ve been looking forward to it
        all year. Can&amp;#39;t wait for the puzzles to ramp up some more in difficulty.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvat3/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvat3", "created":
        1733030019.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztvo7j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Camelpilot33",
        "can_mod_post": false, "created_utc": 1733030204.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_8mkl3vq5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Javascript\\] 63/118\n\n[github code](https://github.com/Camelpilot33/AdventOfCode/blob/main/2024/day1.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Javascript]
        63/118&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Camelpilot33/AdventOfCode/blob/main/2024/day1.js\"&gt;github
        code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvo7j/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvo7j", "created":
        1733030204.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztzu0i", "id": "lztzu0i", "parent_id":
        "t1_lztvo7j", "depth": 1, "children": ["lztzu0i"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztvrv7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "LxsterGames",
        "can_mod_post": false, "created_utc": 1733030256.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_4ebewx50", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Kotlin\\] 270/135\n\nMost of the time for solving part 1 was
        reading the input, glad I have my utils so I could blitz out the code very
        quickly\n\nPart 1:\n\n    val lines = input.lines.map{ it.extractNumbersSeparated()
        }\n    val first = lines.map { it.first() }.sorted()\n    val second = lines.map
        { it.last() }.sorted()\n    return first.zip(second).sumOf { abs(it.first
        - it.second) }\n\nPart 2:\n\n    val first = lines.map { it.first() }.sorted()\n    val
        second = lines.map { it.last() }.sorted()\n    return first.sumOf { left -&gt;
        left * second.count { right -&gt; right == left }}", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin] 270/135&lt;/p&gt;\n\n&lt;p&gt;Most
        of the time for solving part 1 was reading the input, glad I have my utils
        so I could blitz out the code very quickly&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val
        lines = input.lines.map{ it.extractNumbersSeparated() }\nval first = lines.map
        { it.first() }.sorted()\nval second = lines.map { it.last() }.sorted()\nreturn
        first.zip(second).sumOf { abs(it.first - it.second) }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val first = lines.map { it.first()
        }.sorted()\nval second = lines.map { it.last() }.sorted()\nreturn first.sumOf
        { left -&amp;gt; left * second.count { right -&amp;gt; right == left }}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvrv7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvrv7", "created":
        1733030256.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztvrzf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "abrahamguo",
        "can_mod_post": false, "created_utc": 1733030258.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_1lcd5mk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: TypeScript\\] nice and elegant!\n\n    export default (input:
        string, part1: boolean) =&gt; {\n      const [lefts, rights] = [...Array(2).keys()]\n        .map(i
        =&gt;\n          input\n            .split(`\\n`)\n            .map(line =&gt;
        +line.split(`  `)[i]!)\n            .sort((a, b) =&gt; a - b)\n        );\n      return
        lefts!.reduce(\n        (sum, left, i) =&gt;\n          sum +\n          (part1\n            ?
        Math.abs(left - rights![i]!)\n            : rights!.filter(right =&gt; left
        == right).length * left),\n        0\n      );\n    };", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: TypeScript] nice and elegant!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export
        default (input: string, part1: boolean) =&amp;gt; {\n  const [lefts, rights]
        = [...Array(2).keys()]\n    .map(i =&amp;gt;\n      input\n        .split(`\\n`)\n        .map(line
        =&amp;gt; +line.split(`  `)[i]!)\n        .sort((a, b) =&amp;gt; a - b)\n    );\n  return
        lefts!.reduce(\n    (sum, left, i) =&amp;gt;\n      sum +\n      (part1\n        ?
        Math.abs(left - rights![i]!)\n        : rights!.filter(right =&amp;gt; left
        == right).length * left),\n    0\n  );\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvrzf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvrzf", "created":
        1733030258.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztvxqo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Kehvarl",
        "can_mod_post": false, "created_utc": 1733030338.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_nymy1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Python 3] 4203/3521\nI felt really slow going into this one, but
        I''m pretty satisfied with a 14 minute solution time. \n\n\n[Part 2](https://topaz.github.io/paste/#XQAAAQDUAQAAAAAAAAAzHIoib6pXbueH4X9F244lVRDcOZab5q1+VXY/ex42qR7D/Ked5gkN2kM3I418Q4KqrmgEDxUged6FBSxndnVbmKXAp0wmL/gD62Sgy5mxea6cL0M3xlbfwWsSYDtAdwWc4NIblqlVs/y9gwpXWuNVIDBSUSKyrG+IYp+uJiCJMEINWqkKIPlkv311IznYnDtqXIjRYs34SV1n2Z0DblAQC+hlALw3hmMDakNjAJZP8NnIYf1FsGigCDiXiMb6vghUoGn6aooXInzOAQKHCqzlBiYwwlyzVcWbVqUactuhQXNAOT66IIzU4IUg7W9sv89oImmF+8rHOSozG91+EdzM81gW7vZCX5sVQpHKwtvS+7HR0JIGAv+oov2g)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python 3]
        4203/3521\nI felt really slow going into this one, but I&amp;#39;m pretty
        satisfied with a 14 minute solution time. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDUAQAAAAAAAAAzHIoib6pXbueH4X9F244lVRDcOZab5q1+VXY/ex42qR7D/Ked5gkN2kM3I418Q4KqrmgEDxUged6FBSxndnVbmKXAp0wmL/gD62Sgy5mxea6cL0M3xlbfwWsSYDtAdwWc4NIblqlVs/y9gwpXWuNVIDBSUSKyrG+IYp+uJiCJMEINWqkKIPlkv311IznYnDtqXIjRYs34SV1n2Z0DblAQC+hlALw3hmMDakNjAJZP8NnIYf1FsGigCDiXiMb6vghUoGn6aooXInzOAQKHCqzlBiYwwlyzVcWbVqUactuhQXNAOT66IIzU4IUg7W9sv89oImmF+8rHOSozG91+EdzM81gW7vZCX5sVQpHKwtvS+7HR0JIGAv+oov2g\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvxqo/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvxqo", "created":
        1733030338.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztwe10",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Polaric_Spiral",
        "can_mod_post": false, "created_utc": 1733030562.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_n57szwsc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: TypeScript]\n\n[Advent of Node, Day 1](https://topaz.github.io/paste/#XQAAAQBpAgAAAAAAAAA0m0pnuFI8dAwooqreRZKWImk4uTVfU9a+P6SvARjPfUGj0Tepbfga4gSujITz/l3bY6x/LvSSmNZ1Y2CTb3NH/f79m9Rkl9HTOxwQ48F8/uaGvN0qN7Gs0HdlmPD7GiMh+i+hW4YQp1Krn7d5+ZHonsoQv1FW/f3pfARtGkYvIQMNTW7ZXfwmCy+IpucVMRQcRxU2LbSTC2sRlTtE6N3vSTBDgHZXkLzGIByuVm7qBZ2EP50PNwgC3ylUkQUzAmWUhHjg0i5OEM9rhO4ncoNl5kZd/G7PJ1qrYTGcWK7s8Hc3FZMgUmbLN2bkek1TTOWLr+QmMl5ntbDCxRSdLrgxpCnTqG6MRfjJh0b1C5X447h7rXHSx7IAzWlYDZfLp6whPxmyb3MvPh67ujWuE6LTs7fEb1BvHHF3237d/crvWw==)\n\nDead
        simple application of basic JS array functions for part 1, got at least a
        bit clever on part 2 and bucketed the right array for some (pointless) efficiency.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: TypeScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBpAgAAAAAAAAA0m0pnuFI8dAwooqreRZKWImk4uTVfU9a+P6SvARjPfUGj0Tepbfga4gSujITz/l3bY6x/LvSSmNZ1Y2CTb3NH/f79m9Rkl9HTOxwQ48F8/uaGvN0qN7Gs0HdlmPD7GiMh+i+hW4YQp1Krn7d5+ZHonsoQv1FW/f3pfARtGkYvIQMNTW7ZXfwmCy+IpucVMRQcRxU2LbSTC2sRlTtE6N3vSTBDgHZXkLzGIByuVm7qBZ2EP50PNwgC3ylUkQUzAmWUhHjg0i5OEM9rhO4ncoNl5kZd/G7PJ1qrYTGcWK7s8Hc3FZMgUmbLN2bkek1TTOWLr+QmMl5ntbDCxRSdLrgxpCnTqG6MRfjJh0b1C5X447h7rXHSx7IAzWlYDZfLp6whPxmyb3MvPh67ujWuE6LTs7fEb1BvHHF3237d/crvWw==\"&gt;Advent
        of Node, Day 1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Dead simple application of
        basic JS array functions for part 1, got at least a bit clever on part 2 and
        bucketed the right array for some (pointless) efficiency.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwe10/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztwe10", "created":
        1733030562.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztwobe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Sharparam",
        "can_mod_post": false, "created_utc": 1733030706.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_ayk53", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Ruby]\n\n    left, right = ARGF.readlines.map(&amp;:split).map
        { _1.map(&amp;:to_i) }.transpose\n    puts left.sort.zip(right.sort).map {
        (_1 - _2).abs }.sum\n    puts left.map { [_1, right.count(_1)] }.map { _1
        * _2 }.sum\n\nInitially had a small bug in my part 2 with using `find` instead
        of `count`, I blame sleep deprivation!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ruby]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;left,
        right = ARGF.readlines.map(&amp;amp;:split).map { _1.map(&amp;amp;:to_i) }.transpose\nputs
        left.sort.zip(right.sort).map { (_1 - _2).abs }.sum\nputs left.map { [_1,
        right.count(_1)] }.map { _1 * _2 }.sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Initially
        had a small bug in my part 2 with using &lt;code&gt;find&lt;/code&gt; instead
        of &lt;code&gt;count&lt;/code&gt;, I blame sleep deprivation!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwobe/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztwobe", "created":
        1733030706.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztwrej",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "nysra",
        "can_mod_post": false, "created_utc": 1733030749.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_tfas5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Rust]\n\n\tuse std::collections::HashMap;\n\n\tpub fn solve(lines:
        &amp;[String]) -&gt; (usize, usize)\n\t{\n\t\tlet n = lines.len();\n\t\t\n\t\tlet
        mut left = Vec::with_capacity(n);\n\t\tlet mut right = Vec::with_capacity(n);\n\t\t\n\t\tfor
        l in lines\n\t\t{\n\t\t\tlet (a, b) = l.split_once(\"   \").unwrap();\n\t\t\t\n\t\t\tlet
        l: i32 = a.parse().unwrap();\n\t\t\tlet r: i32 = b.parse().unwrap();\n\t\t\t\n\t\t\tleft.push(l);\n\t\t\tright.push(r);\n\t\t}\n\t\t\n\t\tleft.sort();\n\t\tright.sort();\n\t\t\n\t\tlet
        p1 = left.iter().zip(right.iter()).map(|(a, b)| (a - b).abs()).sum::&lt;i32&gt;()
        as usize;\n\t\t\n\t\tlet mut counter = HashMap::with_capacity(n);\n\t\tfor
        n in right.iter()\n\t\t{\n\t\t\t*counter.entry(n).or_insert(0) += 1;\n\t\t}\n\t\t\n\t\tlet
        p2 = left.iter().map(|n| n * counter.get(n).unwrap_or(&amp;0)).sum::&lt;i32&gt;()
        as usize;\n\t\t\n\t\t(p1, p2)\n\t}", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: Rust]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        std::collections::HashMap;\n\npub fn solve(lines: &amp;amp;[String]) -&amp;gt;
        (usize, usize)\n{\n    let n = lines.len();\n\n    let mut left = Vec::with_capacity(n);\n    let
        mut right = Vec::with_capacity(n);\n\n    for l in lines\n    {\n        let
        (a, b) = l.split_once(&amp;quot;   &amp;quot;).unwrap();\n\n        let l:
        i32 = a.parse().unwrap();\n        let r: i32 = b.parse().unwrap();\n\n        left.push(l);\n        right.push(r);\n    }\n\n    left.sort();\n    right.sort();\n\n    let
        p1 = left.iter().zip(right.iter()).map(|(a, b)| (a - b).abs()).sum::&amp;lt;i32&amp;gt;()
        as usize;\n\n    let mut counter = HashMap::with_capacity(n);\n    for n in
        right.iter()\n    {\n        *counter.entry(n).or_insert(0) += 1;\n    }\n\n    let
        p2 = left.iter().map(|n| n * counter.get(n).unwrap_or(&amp;amp;0)).sum::&amp;lt;i32&amp;gt;()
        as usize;\n\n    (p1, p2)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwrej/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztwrej", "created": 1733030749.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lztxa2k", "id": "lztxa2k", "parent_id":
        "t1_lztwrej", "depth": 1, "children": ["lztxa2k"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztwt44",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "davidsharick",
        "can_mod_post": false, "created_utc": 1733030774.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_mstlv7pkx",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: Python 3] 445/345\n\n[Gitlab](https://gitlab.com/davidsharick/advent-of-code-2024/-/blob/main/day1/day1.py)\n\nNice
        simple problem to start off the year.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python 3] 445/345&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gitlab.com/davidsharick/advent-of-code-2024/-/blob/main/day1/day1.py\"&gt;Gitlab&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nice
        simple problem to start off the year.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwt44/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztwt44", "created": 1733030774.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztx33s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "chickenthechicken",
        "can_mod_post": false, "created_utc": 1733030914.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_136q52", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C\\]\n\n[part 1](https://github.com/PaigePalisade/AdventOfCode2024/blob/main/Solutions/day01part1.c)\n\n[part
        2](https://github.com/PaigePalisade/AdventOfCode2024/blob/main/Solutions/day01part2.c)\n\nI
        used the included `qsort` method provided by `stdlib` for part 1.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/PaigePalisade/AdventOfCode2024/blob/main/Solutions/day01part1.c\"&gt;part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/PaigePalisade/AdventOfCode2024/blob/main/Solutions/day01part2.c\"&gt;part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I used the included &lt;code&gt;qsort&lt;/code&gt;
        method provided by &lt;code&gt;stdlib&lt;/code&gt; for part 1.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztx33s/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztx33s", "created":
        1733030914.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733032074.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztxedy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "spenpal_dev",
        "can_mod_post": false, "created_utc": 1733031077.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_sq0p642lc",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[Language: Python\\]\n\n    def parse(data: str) -&gt; dict[int,
        tuple]:\n    \u00a0 \u00a0 data = [line.split() for line in data.strip().splitlines()]\n    \u00a0
        \u00a0 ids_1, ids_2 = zip(*data, strict=False)\n    \u00a0 \u00a0 ids_1, ids_2
        = sorted(map(int, ids_1)), sorted(map(int, ids_2))\n    \u00a0 \u00a0 return
        {1: (ids_1, ids_2), 2: (ids_1, ids_2)}\n    \n    \n    def part1(ids_1: list[int],
        ids_2: list[int]) -&gt; int:\n    \u00a0 \u00a0 return sum(abs(id_1 - id_2)
        for id_1, id_2 in zip(ids_1, ids_2, strict=False))\n    \n    \n    def part2(ids_1:
        list[int], ids_2: list[int]) -&gt; int:\n    \u00a0 \u00a0 return sum(id_1
        * ids_2.count(id_1) for id_1 in ids_1)\n\nReadable One-Liner Solution (with
        type hints)\n\nPart 2 could use an optimization from O(n\\^2) to O(n), but
        it is not that significant of an improvement, especially on day 1.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        parse(data: str) -&amp;gt; dict[int, tuple]:\n\u00a0 \u00a0 data = [line.split()
        for line in data.strip().splitlines()]\n\u00a0 \u00a0 ids_1, ids_2 = zip(*data,
        strict=False)\n\u00a0 \u00a0 ids_1, ids_2 = sorted(map(int, ids_1)), sorted(map(int,
        ids_2))\n\u00a0 \u00a0 return {1: (ids_1, ids_2), 2: (ids_1, ids_2)}\n\n\ndef
        part1(ids_1: list[int], ids_2: list[int]) -&amp;gt; int:\n\u00a0 \u00a0 return
        sum(abs(id_1 - id_2) for id_1, id_2 in zip(ids_1, ids_2, strict=False))\n\n\ndef
        part2(ids_1: list[int], ids_2: list[int]) -&amp;gt; int:\n\u00a0 \u00a0 return
        sum(id_1 * ids_2.count(id_1) for id_1 in ids_1)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Readable
        One-Liner Solution (with type hints)&lt;/p&gt;\n\n&lt;p&gt;Part 2 could use
        an optimization from O(n^2) to O(n), but it is not that significant of an
        improvement, especially on day 1.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxedy/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztxedy", "created": 1733031077.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztxj21",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Downtown-Quote-4780",
        "can_mod_post": false, "created_utc": 1733031144.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_qv045koxt",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[Language: OCaml\\]\n\n  \n[https://github.com/LeedsJohn/OCaml-Advent-Of-Code/blob/main/lib/solutions/problem\\_2024\\_01.ml](https://github.com/LeedsJohn/OCaml-Advent-Of-Code/blob/main/lib/solutions/problem_2024_01.ml)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: OCaml]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/LeedsJohn/OCaml-Advent-Of-Code/blob/main/lib/solutions/problem_2024_01.ml\"&gt;https://github.com/LeedsJohn/OCaml-Advent-Of-Code/blob/main/lib/solutions/problem_2024_01.ml&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxj21/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxj21", "created":
        1733031144.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_lzxrd5g", "id": "lzxrd5g", "parent_id":
        "t1_lztxj21", "depth": 1, "children": ["lzxrd5g"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733036981.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztxvuj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "shigawire",
        "can_mod_post": false, "created_utc": 1733031329.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_3vde2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: python]\n\n    from collections import Counter\n    # ... boring
        loading into 2 lists\n    sort(a)\n    sort(b)\n    print(sum(abs(a-b) for
        a,b in zip(a,b)))  # part 1\n    c = Counter(b)\n    print(sum(aa*c[aa] for
        aa in a))  # part 2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from collections import Counter\n#
        ... boring loading into 2 lists\nsort(a)\nsort(b)\nprint(sum(abs(a-b) for
        a,b in zip(a,b)))  # part 1\nc = Counter(b)\nprint(sum(aa*c[aa] for aa in
        a))  # part 2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxvuj/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztxvuj", "created": 1733031329.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztxvvk", "id": "lztxvvk", "parent_id":
        "t1_lztxvuj", "depth": 1, "children": ["lztxvvk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzty1pl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "InternetArgument-er",
        "can_mod_post": false, "created_utc": 1733031414.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_imnyieu1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: C++\\]\n\n[https://github.com/ANormalProgrammer/AdventOfCode/blob/main/2024/2024\\_day1.cpp](https://github.com/ANormalProgrammer/AdventOfCode/blob/main/2024/2024_day1.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: C++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ANormalProgrammer/AdventOfCode/blob/main/2024/2024_day1.cpp\"&gt;https://github.com/ANormalProgrammer/AdventOfCode/blob/main/2024/2024_day1.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzty1pl/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzty1pl", "created":
        1733031414.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzty87e",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "VedRane",
        "can_mod_post": false, "created_utc": 1733031507.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_a8wsfzyu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[https://github.com/vedrane/Advent-of-Code-2024/blob/main/day1.py](https://github.com/vedrane/Advent-of-Code-2024/blob/main/day1.py)\n\nLock",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/vedrane/Advent-of-Code-2024/blob/main/day1.py\"&gt;https://github.com/vedrane/Advent-of-Code-2024/blob/main/day1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Lock&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzty87e/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzty87e", "created":
        1733031507.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lztyhyn", "id": "lztyhyn", "parent_id":
        "t1_lzty87e", "depth": 1, "children": ["lztyhyn", "lztzl51"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztyw2n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "theonlytruemathnerd",
        "can_mod_post": false, "created_utc": 1733031857.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_d3lhd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: MATLAB] 837 / 2249\n\n[github](https://github.com/theonlytruemathnerd/AoC/blob/main/2024/Day1.m)\n\nThere''s
        probably a better way to check that numbers on the left appear on the right,
        but ismember does the trick well enough.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: MATLAB] 837 / 2249&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/theonlytruemathnerd/AoC/blob/main/2024/Day1.m\"&gt;github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s
        probably a better way to check that numbers on the left appear on the right,
        but ismember does the trick well enough.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztyw2n/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztyw2n", "created": 1733031857.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztzce5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ex-voltaire",
        "can_mod_post": false, "created_utc": 1733032095.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_brfyyhzm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C\\]  \n  \n[https://github.com/voltaire7/advent-of-code/blob/master/2024/c/1-1.c](https://github.com/voltaire7/advent-of-code/blob/master/2024/c/1-1.c)\n\n[https://github.com/voltaire7/advent-of-code/blob/master/2024/c/1-2.c](https://github.com/voltaire7/advent-of-code/blob/master/2024/c/1-2.c)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C]  &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/voltaire7/advent-of-code/blob/master/2024/c/1-1.c\"&gt;https://github.com/voltaire7/advent-of-code/blob/master/2024/c/1-1.c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/voltaire7/advent-of-code/blob/master/2024/c/1-2.c\"&gt;https://github.com/voltaire7/advent-of-code/blob/master/2024/c/1-2.c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztzce5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztzce5", "created":
        1733032095.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztzkrd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "xavdid",
        "can_mod_post": false, "created_utc": 1733032220.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_np8mb41h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n[Step-by-step explanation](https://advent-of-code.xavd.id/writeups/2024/day/1/)
        | [full code](https://github.com/xavdid/advent-of-code/blob/main/solutions/2024/day_01/solution.py)\n\nFun
        to get back into it! Parsing the \"vertical\" lists was tricky, so I did it
        simply to start:\n\n    l, r = [], []\n    for line in self.input:\n        a,
        b = line.split()\n        l.append(int(a))\n        r.append(int(b))\n\n    l.sort()\n    r.sort()\n\nBut,
        after some playing with it, I got it down to a more svelte 2 liner:\n\n    pairs
        = [map(int, l.split()) for l in self.input]\n    l, r = [sorted(col) for col
        in zip(*pairs)]\n\n`zip` returns tuples, but `sorted` turns any iterable into
        a list, so we get some of the type transformation we''d have to do otherwise
        for free.\n\nA `collections.Counter` made part 2 [simple and clean](https://www.youtube.com/watch?v=0nKizH5TV_g).\n\nGreat
        to be back in it!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://advent-of-code.xavd.id/writeups/2024/day/1/\"&gt;Step-by-step
        explanation&lt;/a&gt; | &lt;a href=\"https://github.com/xavdid/advent-of-code/blob/main/solutions/2024/day_01/solution.py\"&gt;full
        code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Fun to get back into it! Parsing the
        &amp;quot;vertical&amp;quot; lists was tricky, so I did it simply to start:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;l,
        r = [], []\nfor line in self.input:\n    a, b = line.split()\n    l.append(int(a))\n    r.append(int(b))\n\nl.sort()\nr.sort()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But,
        after some playing with it, I got it down to a more svelte 2 liner:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pairs
        = [map(int, l.split()) for l in self.input]\nl, r = [sorted(col) for col in
        zip(*pairs)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;zip&lt;/code&gt;
        returns tuples, but &lt;code&gt;sorted&lt;/code&gt; turns any iterable into
        a list, so we get some of the type transformation we&amp;#39;d have to do
        otherwise for free.&lt;/p&gt;\n\n&lt;p&gt;A &lt;code&gt;collections.Counter&lt;/code&gt;
        made part 2 &lt;a href=\"https://www.youtube.com/watch?v=0nKizH5TV_g\"&gt;simple
        and clean&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Great to be back in it!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztzkrd/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztzkrd", "created":
        1733032220.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztzllo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "inqbus406",
        "can_mod_post": false, "created_utc": 1733032233.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_o2i42", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\n[github](https://github.com/inqbus406/aoc24/blob/master/day01/src/main.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/inqbus406/aoc24/blob/master/day01/src/main.rs\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztzllo/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztzllo", "created":
        1733032233.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztzm3y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "TheUnknownYou",
        "can_mod_post": false, "created_utc": 1733032240.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_5ahcrkxh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Go\\]\\[LANGUAGE: Golang\\]\n\nI am trying to learn Go, which
        I started learning last week so my code is sub optimal. My first Advent of
        Code as a junior in college!\n\n [https://github.com/sameep-git/AdventOfCode/blob/main/2024/day1/day1.go](https://github.com/sameep-git/AdventOfCode/blob/main/2024/day1/day1.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go][LANGUAGE:
        Golang]&lt;/p&gt;\n\n&lt;p&gt;I am trying to learn Go, which I started learning
        last week so my code is sub optimal. My first Advent of Code as a junior in
        college!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/sameep-git/AdventOfCode/blob/main/2024/day1/day1.go\"&gt;https://github.com/sameep-git/AdventOfCode/blob/main/2024/day1/day1.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztzm3y/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztzm3y", "created":
        1733032240.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzu0x5v", "id": "lzu0x5v", "parent_id":
        "t1_lztzm3y", "depth": 1, "children": ["lzu0x5v"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733044357.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztzt7s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mendelmunkis",
        "can_mod_post": false, "created_utc": 1733032343.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_96rj7khp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[[LANGUAGE:  C]](https://git.sr.ht/~moshepiekarski/AoC/tree/master/item/2024/sort.c)\n\nI
        can do anything with qsort\n\n^(1.082 ms/ 783 \u03bcs )", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://git.sr.ht/%7Emoshepiekarski/AoC/tree/master/item/2024/sort.c\"&gt;[LANGUAGE:  C]&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        can do anything with qsort&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;1.082 ms/ 783
        \u03bcs &lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztzt7s/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztzt7s", "created":
        1733032343.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzu0t8f", "id": "lzu0t8f", "parent_id":
        "t1_lztzt7s", "depth": 1, "children": ["lzu0t8f", "lztzt8l"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733033516.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu14er", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "zndflxtyh",
        "can_mod_post": false, "created_utc": 1733033057.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_59kik", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n[Zip zipping](https://topaz.github.io/paste/#XQAAAQA8AQAAAAAAAAA0m0pnuFI8c/fBNApcL1Y57OO7A++5etlACLtU1ByBhWyYSkAyR6UW+TodrUl0qwAAPPWpCb9Rug+iI0vTByCIahWHtezUuR3YjM9B2M/4N3QKqQWvJfVgREdegSq1AMaEvjBJlfojk2kXPm7BmzLFG1yFg36QwOoZ5AEqKVAY6Oy/kO4OGrvrEJooEWXFt2Z1CADONRaQVyHBLr+dhK4BLBTALiJ/PtxiQ6Mw5oQ8SK0ZsVHc6vIXd/72dVoNRQh0g8nY3pF65CNL0bMsxuRuRLyDD1Fv1k9aQv/z9Eos)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQA8AQAAAAAAAAA0m0pnuFI8c/fBNApcL1Y57OO7A++5etlACLtU1ByBhWyYSkAyR6UW+TodrUl0qwAAPPWpCb9Rug+iI0vTByCIahWHtezUuR3YjM9B2M/4N3QKqQWvJfVgREdegSq1AMaEvjBJlfojk2kXPm7BmzLFG1yFg36QwOoZ5AEqKVAY6Oy/kO4OGrvrEJooEWXFt2Z1CADONRaQVyHBLr+dhK4BLBTALiJ/PtxiQ6Mw5oQ8SK0ZsVHc6vIXd/72dVoNRQh0g8nY3pF65CNL0bMsxuRuRLyDD1Fv1k9aQv/z9Eos\"&gt;Zip
        zipping&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu14er/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu14er", "created":
        1733033057.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733038418.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu1qef", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "maneatingape",
        "can_mod_post": false, "created_utc": 1733033395.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_6mzqyuze", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust] \n\n[Solution](https://github.com/maneatingape/advent-of-code-rust/blob/main/src/year2024/day01.rs)\n\nBenchmark
        21 \u00b5s.\n\nPart 2 uses a HashMap to compute frequencies. Interestingly
        the time needed to allocate memory when inserting into the map is a significant
        percentage of the total. Pre-allocating `with_capacity(1000)` saved 66% of
        the part 2 time.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust] &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/maneatingape/advent-of-code-rust/blob/main/src/year2024/day01.rs\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Benchmark
        21 \u00b5s.&lt;/p&gt;\n\n&lt;p&gt;Part 2 uses a HashMap to compute frequencies.
        Interestingly the time needed to allocate memory when inserting into the map
        is a significant percentage of the total. Pre-allocating &lt;code&gt;with_capacity(1000)&lt;/code&gt;
        saved 66% of the part 2 time.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu1qef/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzu1qef", "created": 1733033395.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_lzunpb6", "id": "lzunpb6", "parent_id":
        "t1_lzu1qef", "depth": 1, "children": ["lzunpb6"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu247p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "vss2sn",
        "can_mod_post": false, "created_utc": 1733033612.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_aadtluzt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]  \n[Part 1](https://github.com/vss2sn/advent_of_code/blob/master/2024/cpp/day_01a.cpp)  \n[Part
        2](https://github.com/vss2sn/advent_of_code/blob/master/2024/cpp/day_01b.cpp)  \n(Each
        file is a self-contained solution)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;br/&gt;\n&lt;a href=\"https://github.com/vss2sn/advent_of_code/blob/master/2024/cpp/day_01a.cpp\"&gt;Part
        1&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://github.com/vss2sn/advent_of_code/blob/master/2024/cpp/day_01b.cpp\"&gt;Part
        2&lt;/a&gt;&lt;br/&gt;\n(Each file is a self-contained solution)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu247p/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu247p", "created":
        1733033612.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu2xto",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ramrunner0xff",
        "can_mod_post": false, "created_utc": 1733034082.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_n66l8ma", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: scheme\\]  \nGoing back to the roots after so long with my beloved
        chicken scheme for this year :)  \nsolution is [in sourcehut](https://git.sr.ht/~gotplt/aoc/tree/master/item/2024/d1.ss)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: scheme]&lt;br/&gt;\nGoing
        back to the roots after so long with my beloved chicken scheme for this year
        :)&lt;br/&gt;\nsolution is &lt;a href=\"https://git.sr.ht/%7Egotplt/aoc/tree/master/item/2024/d1.ss\"&gt;in
        sourcehut&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu2xto/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu2xto", "created":
        1733034082.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu4ea2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "vmaskmovps",
        "can_mod_post": false, "created_utc": 1733034921.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_1binuwn4tm",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Fortran\\]\n\nRepresenting the ultimate math
        language... with a really bad solution (err, bad in the sense that I couldn''t
        figure how to use stdlib\\_hashmaps). I beg all people better at Fortran than
        me to tell me what I could do better.\n\n[Solution for Part 1 and Part 2](https://topaz.github.io/paste/#XQAAAQAwBQAAAAAAAAA4HIoh+SG6LQJF6gDeu2fWZBY+ofYdxu+Y2mn6II+jsOHXwLOv/x7iffcLX7IZr70AaiX8uxxxQYe2I07m+98zPqA90rKwKC7qo060rpnCTQtREWIC/CXNpXibE0kX3vXJOGhaL3txJylgHOrEVK1pPGFNC9FRNZYarHkrjekteh66kewTplY7Zf5S2njhdQ+Xw6AUUypQ0GCoIfATyudbv+zDBTiM36eg8x5FFuaONogkvhYd6W5MDmmGQhEjHAA16jV6f8bGwEkF544u3I+lLE4NlOCoLdurcXvCvIiHD6l7dYT888zQMoKhwCWqOgu+34nBfbXCrB3DzActot28ne1FadDsQDilUt1xt4D5vOmAPY22NtJbuix8tk+ennSCjAXcHdFmzXqYyB5i7T4sfP63zXN7EJZMJRtf5O60F62D9OGI84x31RL73CKlBM+15YXUpQWlS69UOaTieoGWbz2MLD2dgSWmo7ScJB7LSIRfTjmH8wSnlQgwonM/a9Z/AvGdCD090FI8/6DcINDvkA3iQDc3dC/gbfWZayMhnj2+3yXTIwgWLqL+2toJtTp+cIXue4o146ma5WpQV6UDtnDv++zFXmv1QgZsd61RvWTzf3a/rLAJN9cylx7EhYSCAPmZLQ0JBskjcx0+meh8oy6q7KELJ/HVX+qSQNUGW+7A5X8oirELrSDvo0LTaJ8Yi4F/tQJiBYOpQ09HxPx0XqzFsZHGTDFHJTA/7P6CSoyWy45+K0//ordk6w==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Fortran]&lt;/p&gt;\n\n&lt;p&gt;Representing
        the ultimate math language... with a really bad solution (err, bad in the
        sense that I couldn&amp;#39;t figure how to use stdlib_hashmaps). I beg all
        people better at Fortran than me to tell me what I could do better.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQAwBQAAAAAAAAA4HIoh+SG6LQJF6gDeu2fWZBY+ofYdxu+Y2mn6II+jsOHXwLOv/x7iffcLX7IZr70AaiX8uxxxQYe2I07m+98zPqA90rKwKC7qo060rpnCTQtREWIC/CXNpXibE0kX3vXJOGhaL3txJylgHOrEVK1pPGFNC9FRNZYarHkrjekteh66kewTplY7Zf5S2njhdQ+Xw6AUUypQ0GCoIfATyudbv+zDBTiM36eg8x5FFuaONogkvhYd6W5MDmmGQhEjHAA16jV6f8bGwEkF544u3I+lLE4NlOCoLdurcXvCvIiHD6l7dYT888zQMoKhwCWqOgu+34nBfbXCrB3DzActot28ne1FadDsQDilUt1xt4D5vOmAPY22NtJbuix8tk+ennSCjAXcHdFmzXqYyB5i7T4sfP63zXN7EJZMJRtf5O60F62D9OGI84x31RL73CKlBM+15YXUpQWlS69UOaTieoGWbz2MLD2dgSWmo7ScJB7LSIRfTjmH8wSnlQgwonM/a9Z/AvGdCD090FI8/6DcINDvkA3iQDc3dC/gbfWZayMhnj2+3yXTIwgWLqL+2toJtTp+cIXue4o146ma5WpQV6UDtnDv++zFXmv1QgZsd61RvWTzf3a/rLAJN9cylx7EhYSCAPmZLQ0JBskjcx0+meh8oy6q7KELJ/HVX+qSQNUGW+7A5X8oirELrSDvo0LTaJ8Yi4F/tQJiBYOpQ09HxPx0XqzFsZHGTDFHJTA/7P6CSoyWy45+K0//ordk6w==\"&gt;Solution
        for Part 1 and Part 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu4ea2/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzu4ea2", "created": 1733034921.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu5c3j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "DJRothm",
        "can_mod_post": false, "created_utc": 1733035468.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_t9uz0sv6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: golang\\]\n\n[Link to github](https://github.com/thisRedH/AdventOfCode/blob/main/2024/days/day01.go)\n\n(First
        time writing go)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        golang]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/thisRedH/AdventOfCode/blob/main/2024/days/day01.go\"&gt;Link
        to github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(First time writing go)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu5c3j/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu5c3j", "created":
        1733035468.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_lzu6thk", "id": "lzu6thk", "parent_id":
        "t1_lzu5c3j", "depth": 1, "children": ["lzu6thk", "lzuhhzq"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu5iu8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "fsed123",
        "can_mod_post": false, "created_utc": 1733035579.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_2lwv2ppr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[https://github.com/Fadi88/AoC/blob/master/2024/day01/main.rs](https://github.com/Fadi88/AoC/blob/master/2024/day01/main.rs)\n\n\n\nporting
        my python solution from earlier, under 1 milliseond in release mode on mac
        mini m4", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Fadi88/AoC/blob/master/2024/day01/main.rs\"&gt;https://github.com/Fadi88/AoC/blob/master/2024/day01/main.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;porting
        my python solution from earlier, under 1 milliseond in release mode on mac
        mini m4&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu5iu8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu5iu8", "created":
        1733035579.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733040604.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu5kkk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Similar_Push198",
        "can_mod_post": false, "created_utc": 1733035608.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_ds8fqbhy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\nMade sure to keep a HashMap  of the frequencies of the
        right numbers while parsing the input. Tried to only use Iterators and learned
        new iterator functions!\n\n[Github source](https://github.com/akash-panda-dev/aoc-rust-2024/blob/master/src/days/day01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Made
        sure to keep a HashMap  of the frequencies of the right numbers while parsing
        the input. Tried to only use Iterators and learned new iterator functions!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/akash-panda-dev/aoc-rust-2024/blob/master/src/days/day01.rs\"&gt;Github
        source&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu5kkk/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu5kkk", "created":
        1733035608.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu6bxb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "supportvectorspace",
        "can_mod_post": false, "created_utc": 1733036059.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_2rhwu30g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n    fn part1(s: &amp;str) -&gt; i32 {\n      let
        (left, right) = parse(s);\n      left.sorted()\n        .zip(right.sorted())\n        .map(|(a,
        b)| a.abs_diff(b) as i32)\n        .sum()\n    }\n    \n    fn part2(s: &amp;str)
        -&gt; i32 {\n      let (left, right) = parse(s);\n      let counts = right.fold(HashMap::&lt;_,
        i32&gt;::new(), |mut m, x| {\n        *m.entry(x).or_default() += 1;\n        m\n      });\n      left.map(|x|
        x * counts.get(&amp;x).copied().unwrap_or_default()).sum()\n    }\n    \n    fn
        parse(s: &amp;str) -&gt; (impl Iterator&lt;Item=i32&gt;, impl Iterator&lt;Item=i32&gt;)
        {\n      let nums = s.split_whitespace().map(i32::from_str).map(Result::unwrap);\n      let
        left = nums.clone().step_by(2);\n      let right = nums.clone().skip(1).step_by(2);\n      (left,
        right)\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn part1(s: &amp;amp;str) -&amp;gt;
        i32 {\n  let (left, right) = parse(s);\n  left.sorted()\n    .zip(right.sorted())\n    .map(|(a,
        b)| a.abs_diff(b) as i32)\n    .sum()\n}\n\nfn part2(s: &amp;amp;str) -&amp;gt;
        i32 {\n  let (left, right) = parse(s);\n  let counts = right.fold(HashMap::&amp;lt;_,
        i32&amp;gt;::new(), |mut m, x| {\n    *m.entry(x).or_default() += 1;\n    m\n  });\n  left.map(|x|
        x * counts.get(&amp;amp;x).copied().unwrap_or_default()).sum()\n}\n\nfn parse(s:
        &amp;amp;str) -&amp;gt; (impl Iterator&amp;lt;Item=i32&amp;gt;, impl Iterator&amp;lt;Item=i32&amp;gt;)
        {\n  let nums = s.split_whitespace().map(i32::from_str).map(Result::unwrap);\n  let
        left = nums.clone().step_by(2);\n  let right = nums.clone().skip(1).step_by(2);\n  (left,
        right)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu6bxb/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu6bxb", "created":
        1733036059.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"author_cakeday": true, "subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu6ehv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "JWinslow23",
        "can_mod_post": false, "created_utc": 1733036103.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_1609la", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[Day 1 code](https://github.com/WinslowJosiah/adventofcode/blob/main/aoc/2024/day01/__init__.py)\n\n[Blog
        post](https://josiah.win/b/6q11i)\n\nNice and easy first day today. Not like
        last year (which was my first AOC!), with these few nasty edge cases that
        slowed me down. Today, it''s all mostly straightforward.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/WinslowJosiah/adventofcode/blob/main/aoc/2024/day01/__init__.py\"&gt;Day
        1 code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://josiah.win/b/6q11i\"&gt;Blog
        post&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nice and easy first day today. Not like
        last year (which was my first AOC!), with these few nasty edge cases that
        slowed me down. Today, it&amp;#39;s all mostly straightforward.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu6ehv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu6ehv", "created":
        1733036103.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733078492.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu8brh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Popular-Produce-3492",
        "can_mod_post": false, "created_utc": 1733037289.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_vloi1a3l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: c++\\]\n\n[https://github.com/apdofficial/aoc/blob/main/subprojects/aoc-2024/src/aoc/2024/day01.cc](https://github.com/apdofficial/aoc/blob/main/subprojects/aoc-2024/src/aoc/2024/day01.cc)\n\n    auto
        Day1::SolvePart1() -&gt; Puzzle::Part1 {\n      std::ranges::sort(group_a_);\n      std::ranges::sort(group_b_);\n      return
        std::ranges::fold_left(\n          std::views::zip(group_a_, group_b_), 0,
        [](int acc, auto pair) {\n            return acc + std::abs(pair.first - pair.second);\n          });\n    }\n    \n    auto
        Day1::SolvePart2() -&gt; Puzzle::Part2 {\n      std::map&lt;int, int&gt; count{};\n      for
        (auto const&amp; id : group_b_) {\n        ++count[id];\n      }\n      return
        std::ranges::fold_left(group_a_, 0, [&amp;count](int acc, int id) { \n        return
        acc + id * count[id]; \n      });\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: c++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/apdofficial/aoc/blob/main/subprojects/aoc-2024/src/aoc/2024/day01.cc\"&gt;https://github.com/apdofficial/aoc/blob/main/subprojects/aoc-2024/src/aoc/2024/day01.cc&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;auto
        Day1::SolvePart1() -&amp;gt; Puzzle::Part1 {\n  std::ranges::sort(group_a_);\n  std::ranges::sort(group_b_);\n  return
        std::ranges::fold_left(\n      std::views::zip(group_a_, group_b_), 0, [](int
        acc, auto pair) {\n        return acc + std::abs(pair.first - pair.second);\n      });\n}\n\nauto
        Day1::SolvePart2() -&amp;gt; Puzzle::Part2 {\n  std::map&amp;lt;int, int&amp;gt;
        count{};\n  for (auto const&amp;amp; id : group_b_) {\n    ++count[id];\n  }\n  return
        std::ranges::fold_left(group_a_, 0, [&amp;amp;count](int acc, int id) { \n    return
        acc + id * count[id]; \n  });\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu8brh/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu8brh", "created":
        1733037289.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzu8brz", "id": "lzu8brz", "parent_id":
        "t1_lzu8brh", "depth": 1, "children": ["lzu8brz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzua06v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "anaseto",
        "can_mod_post": false, "created_utc": 1733038354.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_puhvv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Goal]\n\n    i:+\"v\"$read\"i/01\" / ids\n    say+/abs-/^''i /
        part1\n    (n;c):(*i;=*|i) / (numbers;counts)\n    say+/n*c n / part2", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Goal]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;i:+&amp;quot;v&amp;quot;$read&amp;quot;i/01&amp;quot;
        / ids\nsay+/abs-/^&amp;#39;i / part1\n(n;c):(*i;=*|i) / (numbers;counts)\nsay+/n*c
        n / part2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzua06v/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzua06v", "created":
        1733038354.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuaelz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Apollo_619",
        "can_mod_post": false, "created_utc": 1733038613.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_yd0m8tw6i",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: C++]\n\n    #include &lt;iostream&gt;\n    #include
        &lt;filesystem&gt;\n    #include &lt;fstream&gt;\n    #include &lt;array&gt;\n    #include
        &lt;algorithm&gt;\n    #include &lt;cmath&gt;\n    #include &lt;stdexcept&gt;\n\n    constexpr
        size_t len = 1000;\n\n    static void ReadNumbers(const std::filesystem::path&amp;
        file, std::array&lt;int, len&gt;&amp; lNumbers, std::array&lt;int, len&gt;&amp;
        rNumbers)\n    {\n        std::ifstream in{ file };\n        if (!in)\n        {\n            throw
        std::runtime_error(\"failed to open file: \" + file.string());\n        }\n\n        int
        lNum, rNum;\n        size_t n = 0;\n        while (in &gt;&gt; lNum &gt;&gt;
        rNum)\n        {\n            lNumbers[n] = lNum;\n            rNumbers[n]
        = rNum;\n            n++;\n        }\n    }\n\n    static unsigned int Part1(std::array&lt;int,
        len&gt;&amp; lNumbers, std::array&lt;int, len&gt;&amp; rNumbers)\n    {\n        std::sort(lNumbers.begin(),
        lNumbers.end());\n        std::sort(rNumbers.begin(), rNumbers.end());\n\n        unsigned
        int dist = 0;\n        for (size_t n = 0; n &lt; len; n++)\n        {\n            dist
        += std::abs(lNumbers[n] - rNumbers[n]);\n        }\n\n        return dist;\n    }\n\n    static
        unsigned int Part2(const std::array&lt;int, len&gt;&amp; lNumbers, const std::array&lt;int,
        len&gt;&amp; rNumbers)\n    {\n        unsigned int similarity = 0;\n        for
        (size_t n = 0; n &lt; len; n++)\n        {\n            auto lNum = lNumbers[n];\n            auto
        count = std::count(rNumbers.begin(), rNumbers.end(), lNum);\n            similarity
        += lNum * count;\n        }\n        return similarity;\n    }\n\n    int
        main(int argc, char* argv[])\n    {\n        if (argc &lt; 2)\n        {\n            std::cerr
        &lt;&lt; \"missing file path parameter\" &lt;&lt; std::endl;\n            return
        -1;\n        }\n        const std::filesystem::path file{ argv[1] };\n\n        try\n        {\n            std::array&lt;int,
        len&gt; lNumbers{}, rNumbers{};\n            ReadNumbers(file, lNumbers, rNumbers);\n            auto
        dist = Part1(lNumbers, rNumbers);\n            auto similarity = Part2(lNumbers,
        rNumbers);\n\n            std::cout &lt;&lt; \"distance:   \" &lt;&lt; dist
        &lt;&lt; \"\\r\\n\"\n                      &lt;&lt; \"similarity: \" &lt;&lt;
        similarity &lt;&lt; std::endl;\n        }\n        catch (const std::exception&amp;
        e)\n        {\n            std::cerr &lt;&lt; e.what() &lt;&lt; std::endl;\n        }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;filesystem&amp;gt;\n#include &amp;lt;fstream&amp;gt;\n#include
        &amp;lt;array&amp;gt;\n#include &amp;lt;algorithm&amp;gt;\n#include &amp;lt;cmath&amp;gt;\n#include
        &amp;lt;stdexcept&amp;gt;\n\nconstexpr size_t len = 1000;\n\nstatic void ReadNumbers(const
        std::filesystem::path&amp;amp; file, std::array&amp;lt;int, len&amp;gt;&amp;amp;
        lNumbers, std::array&amp;lt;int, len&amp;gt;&amp;amp; rNumbers)\n{\n    std::ifstream
        in{ file };\n    if (!in)\n    {\n        throw std::runtime_error(&amp;quot;failed
        to open file: &amp;quot; + file.string());\n    }\n\n    int lNum, rNum;\n    size_t
        n = 0;\n    while (in &amp;gt;&amp;gt; lNum &amp;gt;&amp;gt; rNum)\n    {\n        lNumbers[n]
        = lNum;\n        rNumbers[n] = rNum;\n        n++;\n    }\n}\n\nstatic unsigned
        int Part1(std::array&amp;lt;int, len&amp;gt;&amp;amp; lNumbers, std::array&amp;lt;int,
        len&amp;gt;&amp;amp; rNumbers)\n{\n    std::sort(lNumbers.begin(), lNumbers.end());\n    std::sort(rNumbers.begin(),
        rNumbers.end());\n\n    unsigned int dist = 0;\n    for (size_t n = 0; n &amp;lt;
        len; n++)\n    {\n        dist += std::abs(lNumbers[n] - rNumbers[n]);\n    }\n\n    return
        dist;\n}\n\nstatic unsigned int Part2(const std::array&amp;lt;int, len&amp;gt;&amp;amp;
        lNumbers, const std::array&amp;lt;int, len&amp;gt;&amp;amp; rNumbers)\n{\n    unsigned
        int similarity = 0;\n    for (size_t n = 0; n &amp;lt; len; n++)\n    {\n        auto
        lNum = lNumbers[n];\n        auto count = std::count(rNumbers.begin(), rNumbers.end(),
        lNum);\n        similarity += lNum * count;\n    }\n    return similarity;\n}\n\nint
        main(int argc, char* argv[])\n{\n    if (argc &amp;lt; 2)\n    {\n        std::cerr
        &amp;lt;&amp;lt; &amp;quot;missing file path parameter&amp;quot; &amp;lt;&amp;lt;
        std::endl;\n        return -1;\n    }\n    const std::filesystem::path file{
        argv[1] };\n\n    try\n    {\n        std::array&amp;lt;int, len&amp;gt; lNumbers{},
        rNumbers{};\n        ReadNumbers(file, lNumbers, rNumbers);\n        auto
        dist = Part1(lNumbers, rNumbers);\n        auto similarity = Part2(lNumbers,
        rNumbers);\n\n        std::cout &amp;lt;&amp;lt; &amp;quot;distance:   &amp;quot;
        &amp;lt;&amp;lt; dist &amp;lt;&amp;lt; &amp;quot;\\r\\n&amp;quot;\n                  &amp;lt;&amp;lt;
        &amp;quot;similarity: &amp;quot; &amp;lt;&amp;lt; similarity &amp;lt;&amp;lt;
        std::endl;\n    }\n    catch (const std::exception&amp;amp; e)\n    {\n        std::cerr
        &amp;lt;&amp;lt; e.what() &amp;lt;&amp;lt; std::endl;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuaelz/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuaelz", "created":
        1733038613.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzubcx0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "gyorokpeter",
        "can_mod_post": false, "created_utc": 1733039223.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_spppp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: q]\n\n    d1:{\"J\"$(first;last)@/:\\:\" \"vs/:x};\n    d1p1:{sum
        abs(-). asc each d1 x};\n    d1p2:{a:d1 x;sum a[0]*0^(count each group a 1)a
        0};", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        q]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d1:{&amp;quot;J&amp;quot;$(first;last)@/:\\:&amp;quot;
        &amp;quot;vs/:x};\nd1p1:{sum abs(-). asc each d1 x};\nd1p2:{a:d1 x;sum a[0]*0^(count
        each group a 1)a 0};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzubcx0/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzubcx0", "created": 1733039223.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzucjcb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Dapper_nerd87",
        "can_mod_post": false, "created_utc": 1733039976.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_csk6ai58", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\nRepo [here](https://github.com/dappernerddesigns/advent_of_code_2024)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;Repo
        &lt;a href=\"https://github.com/dappernerddesigns/advent_of_code_2024\"&gt;here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzucjcb/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzucjcb", "created":
        1733039976.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzucjcn", "id": "lzucjcn", "parent_id":
        "t1_lzucjcb", "depth": 1, "children": ["lzucjcn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzudcvb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "dvk0",
        "can_mod_post": false, "created_utc": 1733040508.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_irdvy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: PHP]\n[Code](https://github.com/dannyvankooten/advent-of-code/blob/main/2024-php/01.php)
        \n\nHYPEEEEEED.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        PHP]\n&lt;a href=\"https://github.com/dannyvankooten/advent-of-code/blob/main/2024-php/01.php\"&gt;Code&lt;/a&gt;
        &lt;/p&gt;\n\n&lt;p&gt;HYPEEEEEED.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzudcvb/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzudcvb", "created": 1733040508.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzuibkr", "id": "lzuibkr", "parent_id":
        "t1_lzudcvb", "depth": 1, "children": ["lzuibkr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzudvpi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "natrys",
        "can_mod_post": false, "created_utc": 1733040849.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_gr41fzt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: TXR]\n\nPart1:\n\n    @(collect)\n    @col1 @col2\n    @(end)\n    @(do
        (let ((l1 (sort [mapcar toint col1]))\n               (l2 (sort [mapcar toint
        col2])))\n           (put-line `Part1: @(sum (mapcar (op abs (- @2 @1)) l1
        l2))`)))\n\nPart2:\n\n    @(collect)\n    @col1 @col2\n    @(end)\n    @(do
        (let ((l1 [mapcar toint col1])\n               (l2 (hash-from-alist (hist-sort
        [mapcar toint col2]))))\n           (put-line `Part2: @(sum-each ((i l1))
        (* i (gethash l2 i 0)))`)))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        TXR]&lt;/p&gt;\n\n&lt;p&gt;Part1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@(collect)\n@col1
        @col2\n@(end)\n@(do (let ((l1 (sort [mapcar toint col1]))\n           (l2
        (sort [mapcar toint col2])))\n       (put-line `Part1: @(sum (mapcar (op abs
        (- @2 @1)) l1 l2))`)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@(collect)\n@col1
        @col2\n@(end)\n@(do (let ((l1 [mapcar toint col1])\n           (l2 (hash-from-alist
        (hist-sort [mapcar toint col2]))))\n       (put-line `Part2: @(sum-each ((i
        l1)) (* i (gethash l2 i 0)))`)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzudvpi/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzudvpi", "created":
        1733040849.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzudwpn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Simple-Astronaut-952",
        "can_mod_post": false, "created_utc": 1733040867.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_65p3lexi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Java\\]\n\n[Link](https://topaz.github.io/paste/#XQAAAQD3BgAAAAAAAAA4HUhobBw1MA7Jk3hz/X+83NjsjMZjmbrV/TiBhpHKmReEMMh6v2QnGgxrhhCdZcVGmtTQf95W+lhLDONJA8IOVQuWjBd9S5da6TMg0JLgdQ75I38cMphOSszSJaxpHy9iThbUGjaJ7/u6EzDwRiyZFCLKrVIChdk8itQtqA38FZS8iZiCPza8w2dG5ppzz0PTSN/Tn1r8E7asJliDISIIuOeJXaGsDM4VkKC1xZhC3G5xdPq/QXiKKJ8+UX1Hk/GLRnxVqyVtQ9G55FRs689JGpqeBAKnMAONfXFSg61t5zEp/e3XXXCeSHxZJzT3gakJF3Di5Mr0VjOsxlDurOin6dh8GKCpfnIBq7Dx4YvABK0r1Cu7A9z1MYZPpwpo43LzZ9s4RA4uURgYOzsK99sT0y1uQmUhe6p7ai0gY1Uc1E3ZxNGvgDwtWvV8KGpEmcmvV06hhpAfEquZqXfNcM2b7GyALy0GXlqQlkLTl+9dmyIck9ERWlfBn3vDjZ/Yf7rc4eBkMsEawtGf6N4iRH7eDXmW7aOFik+CefP/CfbGkhAuK6YGmFlY3cXhy8dhRTDWtFNIHFRgtT/ERv66kmvxovfOrbS9pFydAFAyUS296ybyd2nCau5G9hrkJNOQnfinZvwIz2QUcf2CO2wry1JcdkKQ24jNSX7abTdCOZ7Lcu5/UwrHPKVA+xLxqQ==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Java]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQD3BgAAAAAAAAA4HUhobBw1MA7Jk3hz/X+83NjsjMZjmbrV/TiBhpHKmReEMMh6v2QnGgxrhhCdZcVGmtTQf95W+lhLDONJA8IOVQuWjBd9S5da6TMg0JLgdQ75I38cMphOSszSJaxpHy9iThbUGjaJ7/u6EzDwRiyZFCLKrVIChdk8itQtqA38FZS8iZiCPza8w2dG5ppzz0PTSN/Tn1r8E7asJliDISIIuOeJXaGsDM4VkKC1xZhC3G5xdPq/QXiKKJ8+UX1Hk/GLRnxVqyVtQ9G55FRs689JGpqeBAKnMAONfXFSg61t5zEp/e3XXXCeSHxZJzT3gakJF3Di5Mr0VjOsxlDurOin6dh8GKCpfnIBq7Dx4YvABK0r1Cu7A9z1MYZPpwpo43LzZ9s4RA4uURgYOzsK99sT0y1uQmUhe6p7ai0gY1Uc1E3ZxNGvgDwtWvV8KGpEmcmvV06hhpAfEquZqXfNcM2b7GyALy0GXlqQlkLTl+9dmyIck9ERWlfBn3vDjZ/Yf7rc4eBkMsEawtGf6N4iRH7eDXmW7aOFik+CefP/CfbGkhAuK6YGmFlY3cXhy8dhRTDWtFNIHFRgtT/ERv66kmvxovfOrbS9pFydAFAyUS296ybyd2nCau5G9hrkJNOQnfinZvwIz2QUcf2CO2wry1JcdkKQ24jNSX7abTdCOZ7Lcu5/UwrHPKVA+xLxqQ==\"&gt;Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzudwpn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzudwpn", "created":
        1733040867.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzue1n7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "EleventhBorn",
        "can_mod_post": false, "created_utc": 1733040955.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_5i665xrf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Erlang\\]\n\nThere is a more efficient way to do part 2, but
        this solution works.\n\n    -import(lists, [filter/2, sum/1, zip/2, sort/1]).\n    \n    run()
        -&gt;\n        solution([\"3   4\", \"4   3\", \"2   5\", \"1   3\", \"3   9\",
        \"3   3\"]).\n    \n    solution(List) -&gt;\n        Numbers = [[list_to_integer(E)
        || E &lt;- string:split(Elem, \"   \")] || Elem &lt;- List],\n        First
        = [E || [E | _] &lt;- Numbers],\n        Second = [E || [_, E | _] &lt;- Numbers],\n        io:format(\"part1:
        ~p, part2: ~p~n\",\n                  [total_distance(First, Second), similarity_score(First,
        Second)]).\n    \n    total_distance(L1, L2) -&gt;\n        sum([abs(X - Y)
        || {X, Y} &lt;- zip(sort(L1), sort(L2))]).\n    \n    similarity_score(L1,
        L2) -&gt;\n        sum([Elem * length(filter(fun(E) -&gt; E == Elem end, L2))
        || Elem &lt;- L1]).", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Erlang]&lt;/p&gt;\n\n&lt;p&gt;There is a more efficient way to do part 2,
        but this solution works.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-import(lists,
        [filter/2, sum/1, zip/2, sort/1]).\n\nrun() -&amp;gt;\n    solution([&amp;quot;3   4&amp;quot;,
        &amp;quot;4   3&amp;quot;, &amp;quot;2   5&amp;quot;, &amp;quot;1   3&amp;quot;,
        &amp;quot;3   9&amp;quot;, &amp;quot;3   3&amp;quot;]).\n\nsolution(List)
        -&amp;gt;\n    Numbers = [[list_to_integer(E) || E &amp;lt;- string:split(Elem,
        &amp;quot;   &amp;quot;)] || Elem &amp;lt;- List],\n    First = [E || [E |
        _] &amp;lt;- Numbers],\n    Second = [E || [_, E | _] &amp;lt;- Numbers],\n    io:format(&amp;quot;part1:
        ~p, part2: ~p~n&amp;quot;,\n              [total_distance(First, Second),
        similarity_score(First, Second)]).\n\ntotal_distance(L1, L2) -&amp;gt;\n    sum([abs(X
        - Y) || {X, Y} &amp;lt;- zip(sort(L1), sort(L2))]).\n\nsimilarity_score(L1,
        L2) -&amp;gt;\n    sum([Elem * length(filter(fun(E) -&amp;gt; E == Elem end,
        L2)) || Elem &amp;lt;- L1]).\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzue1n7/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzue1n7", "created": 1733040955.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733043637.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuf6pl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mosredna101",
        "can_mod_post": false, "created_utc": 1733041714.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_4cbr46", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Node.js / JavaScript\\]\n\nLooking forward to early mornings
        with coffee, breakfast, and some coding. Here\u2019s my first solution:\n\n[Day
        1 Solution](https://pastebin.com/iXiRuSAF)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Node.js / JavaScript]&lt;/p&gt;\n\n&lt;p&gt;Looking
        forward to early mornings with coffee, breakfast, and some coding. Here\u2019s
        my first solution:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/iXiRuSAF\"&gt;Day
        1 Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuf6pl/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuf6pl", "created":
        1733041714.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzufx31",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "sky_badger",
        "can_mod_post": false, "created_utc": 1733042201.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_qvdmd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nManaged a rare one liner in Part 1 (once I had
        my lists):\n\n        print(sum(abs(l1-l2) for l1, l2 in zip(sorted(list1),
        sorted(list2))))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;p&gt;Managed a rare one liner in Part 1 (once I had
        my lists):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    print(sum(abs(l1-l2) for
        l1, l2 in zip(sorted(list1), sorted(list2))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzufx31/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzufx31", "created":
        1733042201.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzufxbj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "The_Jare",
        "can_mod_post": false, "created_utc": 1733042205.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_ix6r1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Ruby\\]\n\n    l1, l2 = ARGF.each.map(&amp;:split).transpose.map
        {|x| x.map(&amp;:to_i).sort }\n    puts l1.zip(l2).sum { |a, b| (a-b).abs
        }\n    puts l1.sum { |x| x*l2.count(x) }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ruby]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;l1,
        l2 = ARGF.each.map(&amp;amp;:split).transpose.map {|x| x.map(&amp;amp;:to_i).sort
        }\nputs l1.zip(l2).sum { |a, b| (a-b).abs }\nputs l1.sum { |x| x*l2.count(x)
        }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzufxbj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzufxbj", "created":
        1733042205.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuhnpq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "wsgac",
        "can_mod_post": false, "created_utc": 1733043374.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_6qjw35e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Common Lisp\\]\n\nI used a mixture of mapping and reducing for
        Part 1. For Part 2 computed a histogram of the second column, looped through
        the first and computed the weighted sum.\n\nHere''s my CL solution to [Day
        1](https://github.com/wsgac/advent-of-code-2024/blob/master/2024/day01.lisp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Common Lisp]&lt;/p&gt;\n\n&lt;p&gt;I
        used a mixture of mapping and reducing for Part 1. For Part 2 computed a histogram
        of the second column, looped through the first and computed the weighted sum.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s
        my CL solution to &lt;a href=\"https://github.com/wsgac/advent-of-code-2024/blob/master/2024/day01.lisp\"&gt;Day
        1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuhnpq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuhnpq", "created":
        1733043374.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzui0r7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "semicolonator",
        "can_mod_post": false, "created_utc": 1733043621.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_11inux", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Python]\n\nPython: 20 lines https://github.com/r0f1/adventofcode2024/blob/main/day01/main.py\n\nI
        used a heap for the first part, and collections.Counter() for the second.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python]&lt;/p&gt;\n\n&lt;p&gt;Python:
        20 lines &lt;a href=\"https://github.com/r0f1/adventofcode2024/blob/main/day01/main.py\"&gt;https://github.com/r0f1/adventofcode2024/blob/main/day01/main.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        used a heap for the first part, and collections.Counter() for the second.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzui0r7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzui0r7", "created":
        1733043621.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuir50",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ipav",
        "can_mod_post": false, "created_utc": 1733044117.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_d1raq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Elixir]\n\nFirst steps with Elixir, I hope I am fine. [repo here](https://github.com/paiv/aoc2024)\n\n    defmodule
        Day1 do\n      defp parse(data) do\n        data\n        |&gt; String.split(\"\\n\",
        trim: true)\n        |&gt; Enum.map(fn s -&gt; String.split(s) |&gt; Enum.map(&amp;String.to_integer/1)
        |&gt; List.to_tuple() end)\n        |&gt; Enum.unzip()\n      end\n\n      def
        part1(data) do\n        {a, b} = parse(data)\n\n        Enum.zip_reduce([Enum.sort(a),
        Enum.sort(b)], 0, fn [x, y], acc -&gt;\n          acc + abs(x - y)\n        end)\n      end\n\n      def
        part2(data) do\n        {a, b} = parse(data)\n\n        Enum.reduce(a, 0,
        fn x, acc -&gt;\n          acc + x * Enum.count(b, &amp;(&amp;1 == x))\n        end)\n      end\n    end",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;p&gt;First
        steps with Elixir, I hope I am fine. &lt;a href=\"https://github.com/paiv/aoc2024\"&gt;repo
        here&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule Day1 do\n  defp
        parse(data) do\n    data\n    |&amp;gt; String.split(&amp;quot;\\n&amp;quot;,
        trim: true)\n    |&amp;gt; Enum.map(fn s -&amp;gt; String.split(s) |&amp;gt;
        Enum.map(&amp;amp;String.to_integer/1) |&amp;gt; List.to_tuple() end)\n    |&amp;gt;
        Enum.unzip()\n  end\n\n  def part1(data) do\n    {a, b} = parse(data)\n\n    Enum.zip_reduce([Enum.sort(a),
        Enum.sort(b)], 0, fn [x, y], acc -&amp;gt;\n      acc + abs(x - y)\n    end)\n  end\n\n  def
        part2(data) do\n    {a, b} = parse(data)\n\n    Enum.reduce(a, 0, fn x, acc
        -&amp;gt;\n      acc + x * Enum.count(b, &amp;amp;(&amp;amp;1 == x))\n    end)\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuir50/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuir50", "created":
        1733044117.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzujipx", "id": "lzujipx", "parent_id":
        "t1_lzuir50", "depth": 1, "children": ["lzujipx"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuj028",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "foolnotion",
        "can_mod_post": false, "created_utc": 1733044285.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_737kk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: C++]\n\nSorting, counting, very straightforward. A counter class
        (similar to `collections.Counter` in Python) would be useful.\n\nhttps://github.com/foolnotion/advent-of-code/blob/master/source/2024/01/solution.cpp",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;Sorting,
        counting, very straightforward. A counter class (similar to &lt;code&gt;collections.Counter&lt;/code&gt;
        in Python) would be useful.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/foolnotion/advent-of-code/blob/master/source/2024/01/solution.cpp\"&gt;https://github.com/foolnotion/advent-of-code/blob/master/source/2024/01/solution.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuj028/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuj028", "created":
        1733044285.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzx8xdp", "id": "lzx8xdp", "parent_id":
        "t1_lzuj028", "depth": 1, "children": ["lzx8xdp"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzujbsz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Rtchaik",
        "can_mod_post": false, "created_utc": 1733044506.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_4whxl6hn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Python\\]\n\nZip and Counter were helpful today.\n\n[Solution](https://github.com/Rtchaik/AoC-2024/blob/main/Day01/solution.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python]&lt;/p&gt;\n\n&lt;p&gt;Zip
        and Counter were helpful today.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Rtchaik/AoC-2024/blob/main/Day01/solution.py\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzujbsz/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzujbsz", "created":
        1733044506.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzukgit",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "janek37",
        "can_mod_post": false, "created_utc": 1733045271.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_3leby", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[Solution](https://github.com/janek37/advent-of-code/blob/main/2024/day01.py)\n\nPart
        2 is done without multiplication.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/janek37/advent-of-code/blob/main/2024/day01.py\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2 is done without multiplication.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzukgit/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzukgit", "created": 1733045271.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzukwoy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "CutOnBumInBandHere9",
        "can_mod_post": false, "created_utc": 1733045581.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_9qkbtq0k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nPart 1:\n\n    data = np.sort(load(1, \"int\"), axis=0)\n    abs(np.diff(data)).sum()\n\nPart
        2:\n\n    lookup = defaultdict(int)\n    lookup.update(\n        {value: count
        for value, count in zip(*np.unique(data[:, 1], return_counts=True))}\n    )\n    sum(x
        * lookup[x] for x in data[:, 0])\n\nI''m just happy that my janky `org -&gt;
        quarto -&gt; blog` scripts from last year still work fine, so that I can post
        things [like this](https://cutonbuminband.github.io/AOC/qmd/2024.html#day-1-historian-hysteria)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data = np.sort(load(1, &amp;quot;int&amp;quot;),
        axis=0)\nabs(np.diff(data)).sum()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;lookup = defaultdict(int)\nlookup.update(\n    {value:
        count for value, count in zip(*np.unique(data[:, 1], return_counts=True))}\n)\nsum(x
        * lookup[x] for x in data[:, 0])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m
        just happy that my janky &lt;code&gt;org -&amp;gt; quarto -&amp;gt; blog&lt;/code&gt;
        scripts from last year still work fine, so that I can post things &lt;a href=\"https://cutonbuminband.github.io/AOC/qmd/2024.html#day-1-historian-hysteria\"&gt;like
        this&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzukwoy/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzukwoy", "created":
        1733045581.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzulebd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzulebd", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzulebd/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733045914.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733045914.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzuuieh", "id": "lzuuieh", "parent_id":
        "t1_lzulebd", "depth": 1, "children": ["lzuuieh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733046445.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzulk56", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AccomplishedFish7206",
        "can_mod_post": false, "created_utc": 1733046023.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_o2nljqukr",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Common Lisp\\]\n\n        ; Part One\n        ;
        text file input\n        (defun input_txt () \"input.txt\")\n        (read-file-as-lines
        \"input.txt\")\n        ; read text as lists\n        ; i.e. ((3 4) (4 3)
        etc. ...)\n        \u00a0(defun read-file-as-lines (filename)\n        \u00a0
        \"Read file into a list of lines.\"\n        \u00a0 (with-open-file (in filename)\n    \u00a0     \u00a0
        (loop for line = (read-line in nil nil)\n    \u00a0     \u00a0 \u00a0 while
        line\n    \u00a0     \u00a0 \u00a0 collect line)))\n    \n        ; helper
        functions to read and concat to lists\n        (defun line-as-list (line)\n        \u00a0
        \"Read all objects from the line as a list.\"\n        \u00a0 (read-from-string
        \n    \u00a0     \u00a0 (concatenate ''string \"(\" line \")\")))\n    \n        (defun
        input_lists (file)\n        \u00a0 (mapcar #''line-as-list \n        \u00a0
        \u00a0 \u00a0 (read-file-as-lines file)\n        \u00a0 \u00a0 )\n        \u00a0
        )\n    \n        ; first element of each list\n        (defun car_lists (input)\n        \u00a0
        (sort (mapcar #''car (input_lists input)) #''&lt;))\n    \n        ; second
        element of each list\n        (defun cadr_lists (input)\n        \u00a0 (sort
        (mapcar #''cadr (input_lists input)) #''&lt;))\n    \n        ; mapcar #''-
        to take difference\n        ; reduce #*+ to sum\n        (reduce #''+ (mapcar
        #''abs \n        \u00a0 \u00a0 (mapcar #''- (car_lists (input_txt))\n        \u00a0
        \u00a0 \u00a0 \u00a0 (cadr_lists (input_txt))))\n        )\n    \n        ;
        Part 2 \n        ; count each car from list one\n        ; then add them together\n        (print
        (reduce #''+ (mapcar #''* (mapcar (lambda (x) \n        \u00a0 (count x (car_lists
        (input_txt)))) \n        \u00a0 \u00a0 (cadr_lists (input_txt))) (cadr_lists
        (input_txt))))\n        )", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Common Lisp]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    ; Part One\n    ; text
        file input\n    (defun input_txt () &amp;quot;input.txt&amp;quot;)\n    (read-file-as-lines
        &amp;quot;input.txt&amp;quot;)\n    ; read text as lists\n    ; i.e. ((3 4)
        (4 3) etc. ...)\n    \u00a0(defun read-file-as-lines (filename)\n    \u00a0
        &amp;quot;Read file into a list of lines.&amp;quot;\n    \u00a0 (with-open-file
        (in filename)\n\u00a0     \u00a0 (loop for line = (read-line in nil nil)\n\u00a0     \u00a0
        \u00a0 while line\n\u00a0     \u00a0 \u00a0 collect line)))\n\n    ; helper
        functions to read and concat to lists\n    (defun line-as-list (line)\n    \u00a0
        &amp;quot;Read all objects from the line as a list.&amp;quot;\n    \u00a0
        (read-from-string \n\u00a0     \u00a0 (concatenate &amp;#39;string &amp;quot;(&amp;quot;
        line &amp;quot;)&amp;quot;)))\n\n    (defun input_lists (file)\n    \u00a0
        (mapcar #&amp;#39;line-as-list \n    \u00a0 \u00a0 \u00a0 (read-file-as-lines
        file)\n    \u00a0 \u00a0 )\n    \u00a0 )\n\n    ; first element of each list\n    (defun
        car_lists (input)\n    \u00a0 (sort (mapcar #&amp;#39;car (input_lists input))
        #&amp;#39;&amp;lt;))\n\n    ; second element of each list\n    (defun cadr_lists
        (input)\n    \u00a0 (sort (mapcar #&amp;#39;cadr (input_lists input)) #&amp;#39;&amp;lt;))\n\n    ;
        mapcar #&amp;#39;- to take difference\n    ; reduce #*+ to sum\n    (reduce
        #&amp;#39;+ (mapcar #&amp;#39;abs \n    \u00a0 \u00a0 (mapcar #&amp;#39;-
        (car_lists (input_txt))\n    \u00a0 \u00a0 \u00a0 \u00a0 (cadr_lists (input_txt))))\n    )\n\n    ;
        Part 2 \n    ; count each car from list one\n    ; then add them together\n    (print
        (reduce #&amp;#39;+ (mapcar #&amp;#39;* (mapcar (lambda (x) \n    \u00a0 (count
        x (car_lists (input_txt)))) \n    \u00a0 \u00a0 (cadr_lists (input_txt)))
        (cadr_lists (input_txt))))\n    )\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzulk56/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzulk56", "created":
        1733046023.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733047887.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzunnwy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ProfessionalNihilist",
        "can_mod_post": false, "created_utc": 1733047443.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_4y6kv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: F#]\n\n[Day 1 on paste](https://topaz.github.io/paste/#XQAAAQC5AgAAAAAAAAA3nAjOjW0Wu3Wqy+3pr+h4FYZtHpa2uCewad91Fk4VVPrt1+Z7OL99xq2j7g8XLHfSU07VjJqHMZF204/6pO9YphFTkXFu3rKYurGa4qmT4EF+oB4oAEkrt5xFrxoR+6xUHivwt7Y+1tr67t5hJumol2YHSc3ssJuO+d7aq3TplRxsg1oQgE47ny6VfZXQPuzD6R7FPLTNPbbFc54Hw27D6nFIX8g8HpOlrItxH73UA+/aoprRSz5BDtngGdMruXOPAeSotD2rcDb8e0QfTLq9YBWUsvnh33nesSpKILoISnCqRw6NOtIlyu2Ccm8dMy344GLiYtz1HWGNdzyN/BfPlRBUN1aI86GiWZorw0FMKmUmVekFvD30XfMgFFEEUG9W0SG5SiVFf6FujJ0JqV6Cu/hAQb7+AK499B66cRnrZdKuBqvG5owWJzUu9l3aH4ESpg1ukX1XmJoS6jM/q1L++Np0HQ==)\n\n\nI
        have a little harness that fetches (and caches) the input files, which calls
        this, and I tend to try and write code that I can come back to later and understand.
        Not quite production-quality, but not quite throw-away either.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: F#]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQC5AgAAAAAAAAA3nAjOjW0Wu3Wqy+3pr+h4FYZtHpa2uCewad91Fk4VVPrt1+Z7OL99xq2j7g8XLHfSU07VjJqHMZF204/6pO9YphFTkXFu3rKYurGa4qmT4EF+oB4oAEkrt5xFrxoR+6xUHivwt7Y+1tr67t5hJumol2YHSc3ssJuO+d7aq3TplRxsg1oQgE47ny6VfZXQPuzD6R7FPLTNPbbFc54Hw27D6nFIX8g8HpOlrItxH73UA+/aoprRSz5BDtngGdMruXOPAeSotD2rcDb8e0QfTLq9YBWUsvnh33nesSpKILoISnCqRw6NOtIlyu2Ccm8dMy344GLiYtz1HWGNdzyN/BfPlRBUN1aI86GiWZorw0FMKmUmVekFvD30XfMgFFEEUG9W0SG5SiVFf6FujJ0JqV6Cu/hAQb7+AK499B66cRnrZdKuBqvG5owWJzUu9l3aH4ESpg1ukX1XmJoS6jM/q1L++Np0HQ==\"&gt;Day
        1 on paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I have a little harness that fetches
        (and caches) the input files, which calls this, and I tend to try and write
        code that I can come back to later and understand. Not quite production-quality,
        but not quite throw-away either.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzunnwy/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzunnwy", "created": 1733047443.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxg53n", "id": "lzxg53n", "parent_id":
        "t1_lzunnwy", "depth": 1, "children": ["lzxg53n"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzunulz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "glebm",
        "can_mod_post": false, "created_utc": 1733047570.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_bup9r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Ruby]\n\n    lists = $&lt;.map { _1.scan(/\\d+/).map(&amp;:to_i)
        }.transpose\n    lists.each(&amp;:sort!)\n    puts lists[0].zip(lists[1]).lazy.map
        { |(a, b)| (a - b).abs }.sum\n    puts lists[0].lazy.map { |a|\n      lo =
        lists[1].bsearch_index { |b| b &gt;= a }\n      next 0 if lo.nil?\n      count
        = (lo...).lazy.take_while { _1 &lt; lists[1].size &amp;&amp; lists[1][_1]
        == a }.count\n      a * count\n    }.sum", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ruby]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;lists
        = $&amp;lt;.map { _1.scan(/\\d+/).map(&amp;amp;:to_i) }.transpose\nlists.each(&amp;amp;:sort!)\nputs
        lists[0].zip(lists[1]).lazy.map { |(a, b)| (a - b).abs }.sum\nputs lists[0].lazy.map
        { |a|\n  lo = lists[1].bsearch_index { |b| b &amp;gt;= a }\n  next 0 if lo.nil?\n  count
        = (lo...).lazy.take_while { _1 &amp;lt; lists[1].size &amp;amp;&amp;amp; lists[1][_1]
        == a }.count\n  a * count\n}.sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzunulz/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzunulz", "created":
        1733047570.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzuqguv", "id": "lzuqguv", "parent_id":
        "t1_lzunulz", "depth": 1, "children": ["lzuqguv"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733052814.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuogyx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mister_cow_",
        "can_mod_post": false, "created_utc": 1733047993.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_5ar4aplv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\n[part1](https://github.com/LucasCzerny/AdventOfCode2024/blob/main/Day%2001/part1.cpp)
        and [part2](https://github.com/LucasCzerny/AdventOfCode2024/blob/main/Day%2001/part2.cpp)
        in C++ :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/LucasCzerny/AdventOfCode2024/blob/main/Day%2001/part1.cpp\"&gt;part1&lt;/a&gt;
        and &lt;a href=\"https://github.com/LucasCzerny/AdventOfCode2024/blob/main/Day%2001/part2.cpp\"&gt;part2&lt;/a&gt;
        in C++ :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuogyx/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuogyx", "created":
        1733047993.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzuogz9", "id": "lzuogz9", "parent_id":
        "t1_lzuogyx", "depth": 1, "children": ["lzuogz9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuph36",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "wzkx",
        "can_mod_post": false, "created_utc": 1733048674.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_t1qbo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: J]\n\n    echo +/|-//:~\"1''a b''=:|:&gt;\".&amp;.&gt;cutLF CR-.~fread''01.dat''\n    echo
        +/a*+/\"1 a=/b", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        J]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo +/|-//:~&amp;quot;1&amp;#39;a
        b&amp;#39;=:|:&amp;gt;&amp;quot;.&amp;amp;.&amp;gt;cutLF CR-.~fread&amp;#39;01.dat&amp;#39;\necho
        +/a*+/&amp;quot;1 a=/b\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuph36/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzuph36", "created": 1733048674.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuqgs5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Far_Sweet_6070",
        "can_mod_post": false, "created_utc": 1733049346.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_1ahnulvvvw",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Ajla\\]\n\npart1: [https://www.ajla-lang.cz/downloads/examples/advent-2024/01.ajla](https://www.ajla-lang.cz/downloads/examples/advent-2024/01.ajla)\n\npart2:
        [https://www.ajla-lang.cz/downloads/examples/advent-2024/01-2.ajla](https://www.ajla-lang.cz/downloads/examples/advent-2024/01-2.ajla)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ajla]&lt;/p&gt;\n\n&lt;p&gt;part1:
        &lt;a href=\"https://www.ajla-lang.cz/downloads/examples/advent-2024/01.ajla\"&gt;https://www.ajla-lang.cz/downloads/examples/advent-2024/01.ajla&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;part2:
        &lt;a href=\"https://www.ajla-lang.cz/downloads/examples/advent-2024/01-2.ajla\"&gt;https://www.ajla-lang.cz/downloads/examples/advent-2024/01-2.ajla&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuqgs5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuqgs5", "created":
        1733049346.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzurzx2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "TonyRubak",
        "can_mod_post": false, "created_utc": 1733050383.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_14n4v6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\n    int find_similarity(const std::string&amp; number,
        const std::vector&lt;std::string&gt;&amp; list) {\n      return std::stoi(number)
        * std::count(list.begin(), list.end(), number);\n    }\n    \n    void part_two(const
        std::vector&lt;std::string&gt;&amp; left, const std::vector&lt;std::string&gt;&amp;
        right) {\n      std::cout &lt;&lt; \"Part Two\" &lt;&lt; std::endl;\n      int
        total = 0;\n      for (auto item : left) {\n        total += find_similarity(item,
        right);\n      }\n      std::cout &lt;&lt; total &lt;&lt; std::endl;\n    }\n    \n    void
        part_one(std::vector&lt;std::string&gt; left, std::vector&lt;std::string&gt;
        right) {\n      std::vector&lt;int&gt; distances;\n      std::sort(left.begin(),
        left.end());\n      std::sort(right.begin(), right.end());\n    \n      std::transform(left.begin(),
        left.end(), right.begin(), std::back_inserter(distances), \n        [](std::string
        a, std::string b) {\n           return std::abs(std::stoi(a) - std::stoi(b));\n         });\n      std::cout
        &lt;&lt; std::accumulate(distances.begin(), distances.end(), 0) &lt;&lt; std::endl;\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        find_similarity(const std::string&amp;amp; number, const std::vector&amp;lt;std::string&amp;gt;&amp;amp;
        list) {\n  return std::stoi(number) * std::count(list.begin(), list.end(),
        number);\n}\n\nvoid part_two(const std::vector&amp;lt;std::string&amp;gt;&amp;amp;
        left, const std::vector&amp;lt;std::string&amp;gt;&amp;amp; right) {\n  std::cout
        &amp;lt;&amp;lt; &amp;quot;Part Two&amp;quot; &amp;lt;&amp;lt; std::endl;\n  int
        total = 0;\n  for (auto item : left) {\n    total += find_similarity(item,
        right);\n  }\n  std::cout &amp;lt;&amp;lt; total &amp;lt;&amp;lt; std::endl;\n}\n\nvoid
        part_one(std::vector&amp;lt;std::string&amp;gt; left, std::vector&amp;lt;std::string&amp;gt;
        right) {\n  std::vector&amp;lt;int&amp;gt; distances;\n  std::sort(left.begin(),
        left.end());\n  std::sort(right.begin(), right.end());\n\n  std::transform(left.begin(),
        left.end(), right.begin(), std::back_inserter(distances), \n    [](std::string
        a, std::string b) {\n       return std::abs(std::stoi(a) - std::stoi(b));\n     });\n  std::cout
        &amp;lt;&amp;lt; std::accumulate(distances.begin(), distances.end(), 0) &amp;lt;&amp;lt;
        std::endl;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzurzx2/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzurzx2", "created": 1733050383.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzusuhd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "UnknownGermanGuy",
        "can_mod_post": false, "created_utc": 1733050964.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_u5mln", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: CPP\\]\n\nBoth parts together complete in roughly 0.25ms including
        I/O (on my Macbook Air M2).  \nNot the best but oh well \ud83e\udd37\u200d\u2642\ufe0f\n\n[https://github.com/JakobSachs/AoC24/blob/main/src/days/day01.cc](https://github.com/JakobSachs/AoC24/blob/main/src/days/day01.cc)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: CPP]&lt;/p&gt;\n\n&lt;p&gt;Both
        parts together complete in roughly 0.25ms including I/O (on my Macbook Air
        M2).&lt;br/&gt;\nNot the best but oh well \ud83e\udd37\u200d\u2642\ufe0f&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/JakobSachs/AoC24/blob/main/src/days/day01.cc\"&gt;https://github.com/JakobSachs/AoC24/blob/main/src/days/day01.cc&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzusuhd/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzusuhd", "created":
        1733050964.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733051714.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzusuqf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "SillyTelephone7724",
        "can_mod_post": false, "created_utc": 1733050969.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_109p2rm696",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: Raku]\n\n    #p1 \n    my @input = ([Z] \"input\".IO.slurp.lines&gt;&gt;.split(/\\h+/))&gt;&gt;.Int&gt;&gt;.sort&gt;&gt;.Array;\n    say
        [+] ([&gt;&gt;-&lt;&lt;] @input)&gt;&gt;.abs;\n\n\n    #p2\n    say [+] @input[0].map:
        {$_ * @input[1].grep($_).elems};\n\nfun", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Raku]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#p1
        \nmy @input = ([Z] &amp;quot;input&amp;quot;.IO.slurp.lines&amp;gt;&amp;gt;.split(/\\h+/))&amp;gt;&amp;gt;.Int&amp;gt;&amp;gt;.sort&amp;gt;&amp;gt;.Array;\nsay
        [+] ([&amp;gt;&amp;gt;-&amp;lt;&amp;lt;] @input)&amp;gt;&amp;gt;.abs;\n\n\n#p2\nsay
        [+] @input[0].map: {$_ * @input[1].grep($_).elems};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;fun&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzusuqf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzusuqf", "created":
        1733050969.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzusygn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "vinc686",
        "can_mod_post": false, "created_utc": 1733051036.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_15u8ok6u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Ruby]\n\nhttps://github.com/vinc/advent-of-code\n\nPart 1\n\n    a,
        b = ARGF.read.split.map(&amp;:to_i).each_slice(2).to_a.transpose.map(&amp;:sort)\n    puts
        a.zip(b).map { |x, y| (x - y).abs }.sum\n\nPart 2\n\n    a, b = ARGF.read.split.map(&amp;:to_i).each_slice(2).to_a.transpose\n    puts
        a.map { |x| x * b.count(x) }.sum", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ruby]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/vinc/advent-of-code\"&gt;https://github.com/vinc/advent-of-code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a, b = ARGF.read.split.map(&amp;amp;:to_i).each_slice(2).to_a.transpose.map(&amp;amp;:sort)\nputs
        a.zip(b).map { |x, y| (x - y).abs }.sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a, b = ARGF.read.split.map(&amp;amp;:to_i).each_slice(2).to_a.transpose\nputs
        a.map { |x| x * b.count(x) }.sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzusygn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzusygn", "created":
        1733051036.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzutbyl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mr_mlk",
        "can_mod_post": false, "created_utc": 1733051289.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_6fuxa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: python\\]\n\n[https://github.com/mlk/aoc/blob/main/CardPuter/2024/y2024d1p1.py](https://github.com/mlk/aoc/blob/main/CardPuter/2024/y2024d1p1.py)\n\n  \nThese
        were completed on a CardPuter using the editor and runtime from MicroHydra.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mlk/aoc/blob/main/CardPuter/2024/y2024d1p1.py\"&gt;https://github.com/mlk/aoc/blob/main/CardPuter/2024/y2024d1p1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;These
        were completed on a CardPuter using the editor and runtime from MicroHydra.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzutbyl/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzutbyl", "created":
        1733051289.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxaxjy", "id": "lzxaxjy", "parent_id":
        "t1_lzutbyl", "depth": 1, "children": ["lzxaxjy"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuurvl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "codevogel",
        "can_mod_post": false, "created_utc": 1733052232.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_1e3us0idsz",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: C#/csharp]\n\nI feel like System.Linq was made
        for AoC. \n\nhttps://github.com/codevogel/AdventOfCode/blob/d2b8ea9af9675ecbdcd23c507b30177ddc80954b/2024/day1/Solver.cs\n\nA:\n\n    //
        Sort to match numbers\n    left = left.OrderBy(number =&gt; number).ToArray();\n    right
        = right.OrderBy(number =&gt; number).ToArray();\n    // Get sum of absolute
        differences \n    return left.Zip(right, (leftNumber, rightNumber) =&gt; Math.Abs(leftNumber
        - rightNumber)).Sum();\n\nB:\n\n    return left.Select(leftNumber =&gt; leftNumber
        * right.Count(rightNumber =&gt; leftNumber == rightNumber)).Sum();", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#/csharp]&lt;/p&gt;\n\n&lt;p&gt;I
        feel like System.Linq was made for AoC. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/codevogel/AdventOfCode/blob/d2b8ea9af9675ecbdcd23c507b30177ddc80954b/2024/day1/Solver.cs\"&gt;https://github.com/codevogel/AdventOfCode/blob/d2b8ea9af9675ecbdcd23c507b30177ddc80954b/2024/day1/Solver.cs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        Sort to match numbers\nleft = left.OrderBy(number =&amp;gt; number).ToArray();\nright
        = right.OrderBy(number =&amp;gt; number).ToArray();\n// Get sum of absolute
        differences \nreturn left.Zip(right, (leftNumber, rightNumber) =&amp;gt; Math.Abs(leftNumber
        - rightNumber)).Sum();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;B:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return
        left.Select(leftNumber =&amp;gt; leftNumber * right.Count(rightNumber =&amp;gt;
        leftNumber == rightNumber)).Sum();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuurvl/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuurvl", "created":
        1733052232.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"author_cakeday": true, "subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1733054262.0,
        "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuveei", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "dannybres",
        "can_mod_post": false, "created_utc": 1733052638.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_av78z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: MATLAB]\n\nI use MATLAB for work, so solve AoC with it to practice
        it more. I always find that it is really well suited to the first few days
        where it\u2019s normally just simple manipulation of numerical vectors. \n\n`%%
        day1puzzle2 - Daniel Breslan - Advent Of Code 2024\ndata = double(readlines(\u201cinput.txt\u201d).extract(digitsPattern));\nday1puzzle2result
        = sum(d1 .* sum(data(:,1) == data(:,2)\u2019,2))`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: MATLAB]&lt;/p&gt;\n\n&lt;p&gt;I use MATLAB
        for work, so solve AoC with it to practice it more. I always find that it
        is really well suited to the first few days where it\u2019s normally just
        simple manipulation of numerical vectors. &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;%%
        day1puzzle2 - Daniel Breslan - Advent Of Code 2024\ndata = double(readlines(\u201cinput.txt\u201d).extract(digitsPattern));\nday1puzzle2result
        = sum(d1 .* sum(data(:,1) == data(:,2)\u2019,2))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuveei/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuveei", "created":
        1733052638.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxa9mx", "id": "lzxa9mx", "parent_id":
        "t1_lzuveei", "depth": 1, "children": ["lzxa9mx", "lzuveer"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuvoa7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "tatut",
        "can_mod_post": false, "created_utc": 1733052814.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_gl9ds", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: elf\\]\n\n[https://github.com/tatut/aoc2024-elf/blob/main/day1.elf](https://github.com/tatut/aoc2024-elf/blob/main/day1.elf)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: elf]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/tatut/aoc2024-elf/blob/main/day1.elf\"&gt;https://github.com/tatut/aoc2024-elf/blob/main/day1.elf&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuvoa7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuvoa7", "created":
        1733052814.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuxplx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Ukhando",
        "can_mod_post": false, "created_utc": 1733054102.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_yk9uu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: CSharp\\]\n\n[Link to Github](https://github.com/TomKauffeld/advent-of-code-2024/tree/main/AdventOfCode.Day01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: CSharp]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/TomKauffeld/advent-of-code-2024/tree/main/AdventOfCode.Day01\"&gt;Link
        to Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuxplx/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuxplx", "created":
        1733054102.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuxujh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "enelen",
        "can_mod_post": false, "created_utc": 1733054187.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_t7yj3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: R\\]\n\n[Solution](https://github.com/AdroMine/AdventOfCode/blob/main/2024/Day01/solution.R)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: R]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AdroMine/AdventOfCode/blob/main/2024/Day01/solution.R\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuxujh/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuxujh", "created":
        1733054187.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuy50s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "The-Dwarf",
        "can_mod_post": false, "created_utc": 1733054362.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_djauq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Go\\]\n\nDay1: [GitHub](https://github.com/FloSchl8/adventofcode/blob/main/2024/day01/main.go)\n\nGets
        the job done but I''m not really proud of the double \\`for\\` in the second
        part (lines 68).\n\nAny suggestion welcome!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;Day1: &lt;a
        href=\"https://github.com/FloSchl8/adventofcode/blob/main/2024/day01/main.go\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Gets
        the job done but I&amp;#39;m not really proud of the double `for` in the second
        part (lines 68).&lt;/p&gt;\n\n&lt;p&gt;Any suggestion welcome!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuy50s/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuy50s", "created":
        1733054362.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzvbdtx", "id": "lzvbdtx", "parent_id":
        "t1_lzuy50s", "depth": 1, "children": ["lzvbdtx"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuy57y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "MeaningfulChoice",
        "can_mod_post": false, "created_utc": 1733054365.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_60rn680p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: F#\\]\n\n[Pastebin Link](https://pastebin.com/uVt1mymw)\n\nFirst
        time using F# so the solution is fairly verbose.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: F#]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/uVt1mymw\"&gt;Pastebin
        Link&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;First time using F# so the solution is
        fairly verbose.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuy57y/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuy57y", "created":
        1733054365.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzvjqqk", "id": "lzvjqqk", "parent_id":
        "t1_lzuy57y", "depth": 1, "children": ["lzvjqqk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuyrjc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "chkas",
        "can_mod_post": false, "created_utc": 1733054737.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_41wmaij", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Easylang]\n\n[Solution](https://easylang.online/aoc/24/?day=1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Easylang]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://easylang.online/aoc/24/?day=1\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuyrjc/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuyrjc", "created":
        1733054737.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuzuz0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "im0b",
        "can_mod_post": false, "created_utc": 1733055385.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_awput", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Javascript] \n\n    const _ = require(''lodash'')\n    const {
        readFileSync } = require(''fs'')\n    const log = (v) =&gt; console.dir(v,
        { depth: null })\n\n    //part 1\n    _\n      .chain(readFileSync(''./input''))\n      .trim()\n      .split(''\\n'')\n      .map(line
        =&gt; line.split(''   ''))\n      .unzip()\n      .map((col) =&gt; col.map(Number))\n      .map(col
        =&gt; col.sort((a, b) =&gt; a-b))\n      .thru(v =&gt; _.zip(...v))\n      .map(([a,
        b]) =&gt; Math.abs(a-b))\n      .sum()\n      .tap(log)\n      .value()\n\n    //part2\n    _\n      .chain(readFileSync(''./input''))\n      .trim()\n      .split(''\\n'')\n      .map(line
        =&gt; line.split(''   ''))\n      .unzip()\n      .map((col) =&gt; col.map(Number))\n      .thru(([left,
        right]) =&gt; left.map(n =&gt; right.filter(m =&gt; m == n).length * n))\n      .sum()\n      .tap(log)\n      .value()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Javascript]
        &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const _ = require(&amp;#39;lodash&amp;#39;)\nconst
        { readFileSync } = require(&amp;#39;fs&amp;#39;)\nconst log = (v) =&amp;gt;
        console.dir(v, { depth: null })\n\n//part 1\n_\n  .chain(readFileSync(&amp;#39;./input&amp;#39;))\n  .trim()\n  .split(&amp;#39;\\n&amp;#39;)\n  .map(line
        =&amp;gt; line.split(&amp;#39;   &amp;#39;))\n  .unzip()\n  .map((col) =&amp;gt;
        col.map(Number))\n  .map(col =&amp;gt; col.sort((a, b) =&amp;gt; a-b))\n  .thru(v
        =&amp;gt; _.zip(...v))\n  .map(([a, b]) =&amp;gt; Math.abs(a-b))\n  .sum()\n  .tap(log)\n  .value()\n\n//part2\n_\n  .chain(readFileSync(&amp;#39;./input&amp;#39;))\n  .trim()\n  .split(&amp;#39;\\n&amp;#39;)\n  .map(line
        =&amp;gt; line.split(&amp;#39;   &amp;#39;))\n  .unzip()\n  .map((col) =&amp;gt;
        col.map(Number))\n  .thru(([left, right]) =&amp;gt; left.map(n =&amp;gt; right.filter(m
        =&amp;gt; m == n).length * n))\n  .sum()\n  .tap(log)\n  .value()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuzuz0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuzuz0", "created":
        1733055385.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuzvr4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Armanlex",
        "can_mod_post": false, "created_utc": 1733055397.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_d2ha4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Go]\n\n[Part 1](https://github.com/Armanlex/advent-of-GOde/blob/main/2024-D1/Part1/main.go)
        &amp; [Part 2](https://github.com/Armanlex/advent-of-GOde/blob/main/2024-D1/Part2/main.go)\n\nTrying
        to focus on writing readable code along with making a decent solution. Open
        to all critisism. Will try to go as far as I can, eventually, cause poe2 will
        grab all my attention when it''s out XD. But I''ll come back later for sure.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Armanlex/advent-of-GOde/blob/main/2024-D1/Part1/main.go\"&gt;Part
        1&lt;/a&gt; &amp;amp; &lt;a href=\"https://github.com/Armanlex/advent-of-GOde/blob/main/2024-D1/Part2/main.go\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Trying to focus on writing readable code
        along with making a decent solution. Open to all critisism. Will try to go
        as far as I can, eventually, cause poe2 will grab all my attention when it&amp;#39;s
        out XD. But I&amp;#39;ll come back later for sure.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuzvr4/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuzvr4", "created":
        1733055397.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzv1u54", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzv1u54", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv1u54/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733056502.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733056502.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzvhh0z", "id": "lzvhh0z", "parent_id":
        "t1_lzv1u54", "depth": 1, "children": ["lzvhh0z"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv5etg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "thijsvl",
        "can_mod_post": false, "created_utc": 1733058373.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_2hcsrfhj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C\\]\n\nStarted coding a couple months ago, so I''m still learning
        optimizations\n\n[Day 1 both stars](https://pastebin.com/vJ9VT1MT)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C]&lt;/p&gt;\n\n&lt;p&gt;Started
        coding a couple months ago, so I&amp;#39;m still learning optimizations&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/vJ9VT1MT\"&gt;Day 1 both stars&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv5etg/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv5etg", "created":
        1733058373.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzvttx9", "id": "lzvttx9", "parent_id":
        "t1_lzv5etg", "depth": 1, "children": ["lzvttx9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv6mjf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "maw501",
        "can_mod_post": false, "created_utc": 1733058955.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_6opgo4ji", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n[GitHub repo](https://github.com/maw501/advent-of-code-2024/tree/main)\n\n[YouTube
        explainer of required Python knowledge](https://youtu.be/bMX62lm9QS8)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/maw501/advent-of-code-2024/tree/main\"&gt;GitHub
        repo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://youtu.be/bMX62lm9QS8\"&gt;YouTube
        explainer of required Python knowledge&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv6mjf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv6mjf", "created":
        1733058955.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvar7g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Oryphax",
        "can_mod_post": false, "created_utc": 1733060811.0, "send_replies": true,
        "parent_id": "t1_lzv6mjf", "score": 3, "author_fullname": "t2_yg060", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Just a heads up, you''re not supposed to share your input file\n\nhttps://adventofcode.com/2024/about",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just a heads up, you&amp;#39;re
        not supposed to share your input file&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://adventofcode.com/2024/about\"&gt;https://adventofcode.com/2024/about&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvar7g/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvar7g", "created":
        1733060811.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzvbijt", "id": "lzvbijt", "parent_id":
        "t1_lzvar7g", "depth": 2, "children": ["lzvbijt"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_lzv8ur8", "id": "lzv8ur8", "parent_id": "t1_lzv6mjf",
        "depth": 1, "children": ["lzv8ur8"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv77xx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "polumrak_",
        "can_mod_post": false, "created_utc": 1733059235.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_2hd30fkl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Typescript\\]\n\n[https://github.com/turtlecrab/Advent-of-Code/blob/master/2024/day01.ts](https://github.com/turtlecrab/Advent-of-Code/blob/master/2024/day01.ts)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Typescript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/turtlecrab/Advent-of-Code/blob/master/2024/day01.ts\"&gt;https://github.com/turtlecrab/Advent-of-Code/blob/master/2024/day01.ts&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv77xx/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv77xx", "created":
        1733059235.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733059956.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzv8820", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "LactatingBadger",
        "can_mod_post": false, "created_utc": 1733059696.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_c3r0j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\nOnce again using AoC to try and trick my python brain
        into learning Rust.\n\nOne new trick I got to try out was allowing the receiving
        type decide how to collect an iterator. Notice how the parsing code for part
        one and part two is identical other than changing the type signature from
        `Vec&lt;i32&gt;` to `Counter&lt;_&gt;`.\n\n    use counter::Counter;\n    \n    pub
        fn part_one(input: &amp;str) -&gt; Option&lt;i32&gt; {\n        let (mut col1,
        mut col2): (Vec&lt;i32&gt;, Vec&lt;i32&gt;) = input\n            .lines()\n            .filter_map(|line|
        {\n                let mut nums = line\n                    .split_whitespace()\n                    .filter_map(|x|
        x.parse::&lt;i32&gt;().ok());\n                Some((nums.next()?, nums.next()?))})\n            .unzip();\n      \n    col1.sort();\n    col2.sort();\n    \n    let
        tot: i32 = col1.into_iter().zip(col2)\n                       .map(|l| (l.0
        - l.1).abs()).sum();\n    \n    Some(tot)\n    }\n    \n    pub fn part_two(input:
        &amp;str) -&gt; Option&lt;usize&gt; {\n        let (col1, col2): (Counter&lt;_&gt;,
        Counter&lt;_&gt;) = input\n            .lines()\n            .filter_map(|line|
        {\n                let mut nums = line\n                    .split_whitespace()\n                    .filter_map(|x|
        x.parse::&lt;usize&gt;().ok());\n                Some((nums.next()?, nums.next()?))})\n            .unzip();\n    \n        let
        a: usize = col1.into_iter()\n               .map(|f| f.0 * f.1 * col2[&amp;f.0]).sum();\n        Some(a)\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Once
        again using AoC to try and trick my python brain into learning Rust.&lt;/p&gt;\n\n&lt;p&gt;One
        new trick I got to try out was allowing the receiving type decide how to collect
        an iterator. Notice how the parsing code for part one and part two is identical
        other than changing the type signature from &lt;code&gt;Vec&amp;lt;i32&amp;gt;&lt;/code&gt;
        to &lt;code&gt;Counter&amp;lt;_&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        counter::Counter;\n\npub fn part_one(input: &amp;amp;str) -&amp;gt; Option&amp;lt;i32&amp;gt;
        {\n    let (mut col1, mut col2): (Vec&amp;lt;i32&amp;gt;, Vec&amp;lt;i32&amp;gt;)
        = input\n        .lines()\n        .filter_map(|line| {\n            let mut
        nums = line\n                .split_whitespace()\n                .filter_map(|x|
        x.parse::&amp;lt;i32&amp;gt;().ok());\n            Some((nums.next()?, nums.next()?))})\n        .unzip();\n\ncol1.sort();\ncol2.sort();\n\nlet
        tot: i32 = col1.into_iter().zip(col2)\n                   .map(|l| (l.0 -
        l.1).abs()).sum();\n\nSome(tot)\n}\n\npub fn part_two(input: &amp;amp;str)
        -&amp;gt; Option&amp;lt;usize&amp;gt; {\n    let (col1, col2): (Counter&amp;lt;_&amp;gt;,
        Counter&amp;lt;_&amp;gt;) = input\n        .lines()\n        .filter_map(|line|
        {\n            let mut nums = line\n                .split_whitespace()\n                .filter_map(|x|
        x.parse::&amp;lt;usize&amp;gt;().ok());\n            Some((nums.next()?, nums.next()?))})\n        .unzip();\n\n    let
        a: usize = col1.into_iter()\n           .map(|f| f.0 * f.1 * col2[&amp;amp;f.0]).sum();\n    Some(a)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv8820/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv8820", "created":
        1733059696.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv90g1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "jamincan",
        "can_mod_post": false, "created_utc": 1733060052.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_851qa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\nhttps://github.com/jamincan/aoc2024/blob/main/src/day1.rs\n\nDay1
        - Part1/(default)  time:   [22.466 \u00b5s 24.358 \u00b5s 26.100 \u00b5s]\n\nDay1
        - Part2/(default)  time:   [10.564 \u00b5s 10.615 \u00b5s 10.673 \u00b5s]",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jamincan/aoc2024/blob/main/src/day1.rs\"&gt;https://github.com/jamincan/aoc2024/blob/main/src/day1.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Day1
        - Part1/(default)  time:   [22.466 \u00b5s 24.358 \u00b5s 26.100 \u00b5s]&lt;/p&gt;\n\n&lt;p&gt;Day1
        - Part2/(default)  time:   [10.564 \u00b5s 10.615 \u00b5s 10.673 \u00b5s]&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv90g1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv90g1", "created":
        1733060052.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzva1mu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Merricat--Blackwood",
        "can_mod_post": false, "created_utc": 1733060501.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_9s7rx64z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: go\\]\n\n    package main\n    \n    import (\n    \u00a0 \u00a0
        \"bufio\"\n    \u00a0 \u00a0 \"fmt\"\n    \u00a0 \u00a0 \"os\"\n    \u00a0
        \u00a0 \"slices\"\n    \u00a0 \u00a0 \"sort\"\n    \u00a0 \u00a0 \"strconv\"\n    \u00a0
        \u00a0 \"strings\"\n    )\n    \n    func main() {\n    \u00a0 \u00a0 file,
        err := os.Open(\"test_input\")\n    \u00a0 \u00a0 if err != nil {\n    \u00a0
        \u00a0 \u00a0 \u00a0 panic(err)\n    \u00a0 \u00a0 }\n    \u00a0 \u00a0 defer
        file.Close()\n    \n    \u00a0 \u00a0 scanner := bufio.NewScanner(file)\n    \n    \u00a0
        \u00a0 var locationsLeft []int\n    \u00a0 \u00a0 var locationsRight []int\n    \u00a0
        \u00a0 var distances []int\n    \u00a0 \u00a0 var similarities []int\n    \n    \u00a0
        \u00a0 for scanner.Scan() {\n    \u00a0 \u00a0 \u00a0 \u00a0 locations :=
        strings.Split(scanner.Text(), \" \u00a0 \")\n    \u00a0 \u00a0 \u00a0 \u00a0
        locationsLeft = append(locationsLeft, convertLocationToInt(locations[0]))\n    \u00a0
        \u00a0 \u00a0 \u00a0 locationsRight = append(locationsRight, convertLocationToInt(locations[1]))\n    \u00a0
        \u00a0 }\n    \n    \u00a0 \u00a0 sort.Ints(locationsLeft)\n    \u00a0 \u00a0
        sort.Ints(locationsRight)\n    \n    \u00a0 \u00a0 for i, location := range
        locationsLeft {\n    \u00a0 \u00a0 \u00a0 \u00a0 distances = append(distances,
        distance(location, locationsRight[i]))\n    \u00a0 \u00a0 }\n    \n    \u00a0
        \u00a0 for _, location := range locationsLeft {\n    \u00a0 \u00a0 \u00a0
        \u00a0 similarities = append(similarities, location*instancesOf(locationsRight,
        location))\n    \u00a0 \u00a0 }\n    \n    \u00a0 \u00a0 fmt.Printf(\"Part
        1: %d\\n\", sum(distances))\n    \u00a0 \u00a0 fmt.Printf(\"Part 2: %d\\n\",
        sum(similarities))\n    }\n    \n    func sum(s []int) int {\n    \u00a0 \u00a0
        total := 0\n    \u00a0 \u00a0 for _, val := range s {\n    \u00a0 \u00a0 \u00a0
        \u00a0 total += val\n    \u00a0 \u00a0 }\n    \u00a0 \u00a0 return total\n    }\n    \n    func
        convertLocationToInt(location string) int {\n    \u00a0 \u00a0 locationInt,
        err := strconv.Atoi(location)\n    \u00a0 \u00a0 if err != nil {\n    \u00a0
        \u00a0 \u00a0 \u00a0 panic(err)\n    \u00a0 \u00a0 }\n    \u00a0 \u00a0 return
        locationInt\n    }\n    \n    func distance(a, b int) int {\n    \u00a0 \u00a0
        distance := a - b\n    \u00a0 \u00a0 return abs(distance)\n    }\n    \n    func
        abs(a int) int {\n    \u00a0 \u00a0 if a &gt;= 0 {\n    \u00a0 \u00a0 \u00a0
        \u00a0 return a\n    \u00a0 \u00a0 }\n    \u00a0 \u00a0 return -a\n    }\n    \n    func
        instancesOf(s []int, i int) int {\n    \u00a0 \u00a0 position := slices.Index(s,
        i)\n    \u00a0 \u00a0 var total int\n    \u00a0 \u00a0 if position == -1 {\n    \u00a0
        \u00a0 \u00a0 \u00a0 return 0\n    \u00a0 \u00a0 }\n    \u00a0 \u00a0 total
        = 1\n    \u00a0 \u00a0 for {\n    \u00a0 \u00a0 \u00a0 \u00a0 position++\n    \u00a0
        \u00a0 \u00a0 \u00a0 if s[position] != i {\n    \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 return total\n    \u00a0 \u00a0 \u00a0 \u00a0 } else {\n    \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 total += 1\n    \u00a0 \u00a0 \u00a0 \u00a0
        }\n    \u00a0 \u00a0 }\n    }", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: go]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        main\n\nimport (\n\u00a0 \u00a0 &amp;quot;bufio&amp;quot;\n\u00a0 \u00a0 &amp;quot;fmt&amp;quot;\n\u00a0
        \u00a0 &amp;quot;os&amp;quot;\n\u00a0 \u00a0 &amp;quot;slices&amp;quot;\n\u00a0
        \u00a0 &amp;quot;sort&amp;quot;\n\u00a0 \u00a0 &amp;quot;strconv&amp;quot;\n\u00a0
        \u00a0 &amp;quot;strings&amp;quot;\n)\n\nfunc main() {\n\u00a0 \u00a0 file,
        err := os.Open(&amp;quot;test_input&amp;quot;)\n\u00a0 \u00a0 if err != nil
        {\n\u00a0 \u00a0 \u00a0 \u00a0 panic(err)\n\u00a0 \u00a0 }\n\u00a0 \u00a0
        defer file.Close()\n\n\u00a0 \u00a0 scanner := bufio.NewScanner(file)\n\n\u00a0
        \u00a0 var locationsLeft []int\n\u00a0 \u00a0 var locationsRight []int\n\u00a0
        \u00a0 var distances []int\n\u00a0 \u00a0 var similarities []int\n\n\u00a0
        \u00a0 for scanner.Scan() {\n\u00a0 \u00a0 \u00a0 \u00a0 locations := strings.Split(scanner.Text(),
        &amp;quot; \u00a0 &amp;quot;)\n\u00a0 \u00a0 \u00a0 \u00a0 locationsLeft =
        append(locationsLeft, convertLocationToInt(locations[0]))\n\u00a0 \u00a0 \u00a0
        \u00a0 locationsRight = append(locationsRight, convertLocationToInt(locations[1]))\n\u00a0
        \u00a0 }\n\n\u00a0 \u00a0 sort.Ints(locationsLeft)\n\u00a0 \u00a0 sort.Ints(locationsRight)\n\n\u00a0
        \u00a0 for i, location := range locationsLeft {\n\u00a0 \u00a0 \u00a0 \u00a0
        distances = append(distances, distance(location, locationsRight[i]))\n\u00a0
        \u00a0 }\n\n\u00a0 \u00a0 for _, location := range locationsLeft {\n\u00a0
        \u00a0 \u00a0 \u00a0 similarities = append(similarities, location*instancesOf(locationsRight,
        location))\n\u00a0 \u00a0 }\n\n\u00a0 \u00a0 fmt.Printf(&amp;quot;Part 1:
        %d\\n&amp;quot;, sum(distances))\n\u00a0 \u00a0 fmt.Printf(&amp;quot;Part
        2: %d\\n&amp;quot;, sum(similarities))\n}\n\nfunc sum(s []int) int {\n\u00a0
        \u00a0 total := 0\n\u00a0 \u00a0 for _, val := range s {\n\u00a0 \u00a0 \u00a0
        \u00a0 total += val\n\u00a0 \u00a0 }\n\u00a0 \u00a0 return total\n}\n\nfunc
        convertLocationToInt(location string) int {\n\u00a0 \u00a0 locationInt, err
        := strconv.Atoi(location)\n\u00a0 \u00a0 if err != nil {\n\u00a0 \u00a0 \u00a0
        \u00a0 panic(err)\n\u00a0 \u00a0 }\n\u00a0 \u00a0 return locationInt\n}\n\nfunc
        distance(a, b int) int {\n\u00a0 \u00a0 distance := a - b\n\u00a0 \u00a0 return
        abs(distance)\n}\n\nfunc abs(a int) int {\n\u00a0 \u00a0 if a &amp;gt;= 0
        {\n\u00a0 \u00a0 \u00a0 \u00a0 return a\n\u00a0 \u00a0 }\n\u00a0 \u00a0 return
        -a\n}\n\nfunc instancesOf(s []int, i int) int {\n\u00a0 \u00a0 position :=
        slices.Index(s, i)\n\u00a0 \u00a0 var total int\n\u00a0 \u00a0 if position
        == -1 {\n\u00a0 \u00a0 \u00a0 \u00a0 return 0\n\u00a0 \u00a0 }\n\u00a0 \u00a0
        total = 1\n\u00a0 \u00a0 for {\n\u00a0 \u00a0 \u00a0 \u00a0 position++\n\u00a0
        \u00a0 \u00a0 \u00a0 if s[position] != i {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 return total\n\u00a0 \u00a0 \u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 total += 1\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0
        }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzva1mu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzva1mu", "created":
        1733060501.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzva1nb", "id": "lzva1nb", "parent_id":
        "t1_lzva1mu", "depth": 1, "children": ["lzva1nb"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzva9iy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ollien",
        "can_mod_post": false, "created_utc": 1733060596.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_4u4h1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Gleam]\n\n\nhttps://github.com/ollien/advent-of-code-2024/blob/main/src/day1.gleam",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Gleam]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ollien/advent-of-code-2024/blob/main/src/day1.gleam\"&gt;https://github.com/ollien/advent-of-code-2024/blob/main/src/day1.gleam&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzva9iy/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzva9iy", "created":
        1733060596.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvc37w",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Przy2Ja",
        "can_mod_post": false, "created_utc": 1733061383.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_36bruvwc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\nLearning JavaScript in school, decided to attempt
        this years edition to work on my problem-solving and general coding skills,
        feedback greatly appreciated!\n\n[GitHub](https://github.com/brtkglnski/advent-of-code-2024/blob/main/day1.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;Learning
        JavaScript in school, decided to attempt this years edition to work on my
        problem-solving and general coding skills, feedback greatly appreciated!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/brtkglnski/advent-of-code-2024/blob/main/day1.js\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvc37w/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvc37w", "created":
        1733061383.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733075108.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvcct0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "johny-tz",
        "can_mod_post": false, "created_utc": 1733061494.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_643utwh7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: c++\\]\n\nSolution with std::multiset\n\n[https://github.com/msmigielski/AdventOfCode2024/blob/main/tasks/day01/task.cpp](https://github.com/msmigielski/AdventOfCode2024/blob/main/tasks/day01/task.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: c++]&lt;/p&gt;\n\n&lt;p&gt;Solution
        with std::multiset&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/msmigielski/AdventOfCode2024/blob/main/tasks/day01/task.cpp\"&gt;https://github.com/msmigielski/AdventOfCode2024/blob/main/tasks/day01/task.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvcct0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvcct0", "created":
        1733061494.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvd10m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Seanie987",
        "can_mod_post": false, "created_utc": 1733061775.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_4gbpker", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n    #Part 1:\n    with open(\"input.txt\", \"r\")
        as f:\n        lines = f.readlines()\n    \n    left, right = [], []\n    \n    for
        line in lines:\n        left.append(int(line.split(\"   \")[0].strip()))\n        right.append(int(line.split(\"   \")[1].strip()))\n    \n    left.sort()\n    right.sort()\n    \n    print(sum([abs(l
        - r) for l, r in zip(left, right)]))\n    \n    #Part 2:\n    from collections
        import Counter\n    \n    with open(\"input.txt\", \"r\") as f:\n        lines
        = f.readlines()\n    \n    left, right = [], []\n    \n    for line in lines:\n        left.append(int(line.split(\"   \")[0].strip()))\n        right.append(int(line.split(\"   \")[1].strip()))\n    \n    counter
        = Counter(right)\n    \n    print(sum([i * counter[i] for i in left]))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#Part
        1:\nwith open(&amp;quot;input.txt&amp;quot;, &amp;quot;r&amp;quot;) as f:\n    lines
        = f.readlines()\n\nleft, right = [], []\n\nfor line in lines:\n    left.append(int(line.split(&amp;quot;   &amp;quot;)[0].strip()))\n    right.append(int(line.split(&amp;quot;   &amp;quot;)[1].strip()))\n\nleft.sort()\nright.sort()\n\nprint(sum([abs(l
        - r) for l, r in zip(left, right)]))\n\n#Part 2:\nfrom collections import
        Counter\n\nwith open(&amp;quot;input.txt&amp;quot;, &amp;quot;r&amp;quot;)
        as f:\n    lines = f.readlines()\n\nleft, right = [], []\n\nfor line in lines:\n    left.append(int(line.split(&amp;quot;   &amp;quot;)[0].strip()))\n    right.append(int(line.split(&amp;quot;   &amp;quot;)[1].strip()))\n\ncounter
        = Counter(right)\n\nprint(sum([i * counter[i] for i in left]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvd10m/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvd10m", "created":
        1733061775.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvdlvw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ObscureLangEnjoyer",
        "can_mod_post": false, "created_utc": 1733062017.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_1dx9tl2od6",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: C#\\]\n\n[https://tildegit.org/aru/aoc/src/branch/master/2024/csharp/Day01/Program.cs](https://tildegit.org/aru/aoc/src/branch/master/2024/csharp/Day01/Program.cs)\n\nAs
        you can guess, I''m not a C# person (yet). LINQ is nice, even if it is a tiny
        bit slower than being more explicit about what is done and how.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://tildegit.org/aru/aoc/src/branch/master/2024/csharp/Day01/Program.cs\"&gt;https://tildegit.org/aru/aoc/src/branch/master/2024/csharp/Day01/Program.cs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;As
        you can guess, I&amp;#39;m not a C# person (yet). LINQ is nice, even if it
        is a tiny bit slower than being more explicit about what is done and how.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvdlvw/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvdlvw", "created":
        1733062017.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzvqk1s", "id": "lzvqk1s", "parent_id":
        "t1_lzvdlvw", "depth": 1, "children": ["lzvqk1s"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvftee",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Domy__",
        "can_mod_post": false, "created_utc": 1733062926.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_febeq0q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[https://github.com/Domyy95/Challenges/blob/master/2024-12-Advent-of-code/1.py](https://github.com/Domyy95/Challenges/blob/master/2024-12-Advent-of-code/1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Domyy95/Challenges/blob/master/2024-12-Advent-of-code/1.py\"&gt;https://github.com/Domyy95/Challenges/blob/master/2024-12-Advent-of-code/1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvftee/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvftee", "created":
        1733062926.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvh4g9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AnonnymousComenter",
        "can_mod_post": false, "created_utc": 1733063454.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_ijlms", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: ocaml]\n\n[github](https://github.com/nukeLEARg/AOC2024-OCAML/blob/master/bin/Day01.ml)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: ocaml]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/nukeLEARg/AOC2024-OCAML/blob/master/bin/Day01.ml\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvh4g9/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvh4g9", "created":
        1733063454.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvhlo7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "markjenkinswpg",
        "can_mod_post": false, "created_utc": 1733063647.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_4ud54", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n    from sys import stdin\n    from collections
        import Counter\n    from math import sumprod\n    input_data = [ (int(a),int(b))
        for a,b in (line.split() for line in stdin)]\n    counts = Counter( b for
        a,b in input_data )\n    print(sumprod( (a for a,b in input_data),\n                   (counts[a]
        for a,b in input_data)))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from sys import stdin\nfrom collections
        import Counter\nfrom math import sumprod\ninput_data = [ (int(a),int(b)) for
        a,b in (line.split() for line in stdin)]\ncounts = Counter( b for a,b in input_data
        )\nprint(sumprod( (a for a,b in input_data),\n               (counts[a] for
        a,b in input_data)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvhlo7/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzvhlo7", "created": 1733063647.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvlx89",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "killingjoke_pyrs",
        "can_mod_post": false, "created_utc": 1733065303.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_1awhrnwqbu",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Python\\]\n\n    from collections import Counter\n    \n    \n    def
        line_to_int_pair(line: str) -&gt; tuple[int, int]:\n    \u00a0 \u00a0 parts
        = line.split()\n    \u00a0 \u00a0 assert len(parts) == 2\n    \u00a0 \u00a0
        return (int(parts[0]), int(parts[1]))\n    \n    \n    with open(\"day1_input.txt\",
        \"r\") as f:\n    \u00a0 \u00a0 lines = f.readlines()\n    \n    pairs: list[tuple[int,
        int]] = list(map(line_to_int_pair, lines))\n    a = sorted([x[0] for x in
        pairs])\n    b = sorted([x[1] for x in pairs])\n    \n    total_distance =
        sum([abs(x - y) for x, y in zip(a, b)])\n    print(total_distance)\n    \n    b_freq
        = Counter(b)\n    similarity_score = sum([x * b_freq[x] for x in a])\n    print(similarity_score)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        collections import Counter\n\n\ndef line_to_int_pair(line: str) -&amp;gt;
        tuple[int, int]:\n\u00a0 \u00a0 parts = line.split()\n\u00a0 \u00a0 assert
        len(parts) == 2\n\u00a0 \u00a0 return (int(parts[0]), int(parts[1]))\n\n\nwith
        open(&amp;quot;day1_input.txt&amp;quot;, &amp;quot;r&amp;quot;) as f:\n\u00a0
        \u00a0 lines = f.readlines()\n\npairs: list[tuple[int, int]] = list(map(line_to_int_pair,
        lines))\na = sorted([x[0] for x in pairs])\nb = sorted([x[1] for x in pairs])\n\ntotal_distance
        = sum([abs(x - y) for x, y in zip(a, b)])\nprint(total_distance)\n\nb_freq
        = Counter(b)\nsimilarity_score = sum([x * b_freq[x] for x in a])\nprint(similarity_score)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvlx89/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvlx89", "created":
        1733065303.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvmheb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "denise_amiga",
        "can_mod_post": false, "created_utc": 1733065508.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_13uir4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: V]\n\nI am studying v...\n\n    import os\n    import benchmark\n    import
        math\n    \n    fn p1(a1 []int, a2 []int) int {\n    \tmut result := 0\n    \tfor
        i in 0 .. a1.len {\n    \t\tresult += math.abs(a2[i] - a1[i])\n    \t}\n    \treturn
        result\n    }\n    \n    fn p2(a1 []int, counts map[int]int) int {\n    \tmut
        result := 0\n    \tfor k in a1 {\n    \t\tresult += k * counts[k]\n    \t}\n    \treturn
        result\n    }\n    \n    fn main() {\n    \tmut b := benchmark.start()\n    \tar
        := os.read_lines(''input.txt'') or { panic(''No input'') }\n    \tmut a1 :=
        []int{}\n    \tmut a2 := []int{}\n    \tmut counts := map[int]int{}\n    \tfor
        l in ar {\n    \t\tt := l.split(''   '')\n    \t\ta1 &lt;&lt; t[0].int()\n    \t\ta2
        &lt;&lt; t[1].int()\n    \t\tcounts[t[1].int()]++\n    \t}\n    \ta1.sort()\n    \ta2.sort()\n    \tb.measure(''Warming
        up'')\n    \tprintln(p1(a1, a2))\n    \tb.measure(''P1'')\n    \tprintln(p2(a1,
        counts))\n    \tb.measure(''P2'')\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: V]&lt;/p&gt;\n\n&lt;p&gt;I am studying
        v...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import os\nimport benchmark\nimport
        math\n\nfn p1(a1 []int, a2 []int) int {\n    mut result := 0\n    for i in
        0 .. a1.len {\n        result += math.abs(a2[i] - a1[i])\n    }\n    return
        result\n}\n\nfn p2(a1 []int, counts map[int]int) int {\n    mut result :=
        0\n    for k in a1 {\n        result += k * counts[k]\n    }\n    return result\n}\n\nfn
        main() {\n    mut b := benchmark.start()\n    ar := os.read_lines(&amp;#39;input.txt&amp;#39;)
        or { panic(&amp;#39;No input&amp;#39;) }\n    mut a1 := []int{}\n    mut a2
        := []int{}\n    mut counts := map[int]int{}\n    for l in ar {\n        t
        := l.split(&amp;#39;   &amp;#39;)\n        a1 &amp;lt;&amp;lt; t[0].int()\n        a2
        &amp;lt;&amp;lt; t[1].int()\n        counts[t[1].int()]++\n    }\n    a1.sort()\n    a2.sort()\n    b.measure(&amp;#39;Warming
        up&amp;#39;)\n    println(p1(a1, a2))\n    b.measure(&amp;#39;P1&amp;#39;)\n    println(p2(a1,
        counts))\n    b.measure(&amp;#39;P2&amp;#39;)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvmheb/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvmheb", "created":
        1733065508.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvolnw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "pem4224",
        "can_mod_post": false, "created_utc": 1733066268.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_9rcy5fh8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Go\\]\n\n[https://github.com/pemoreau/advent-of-code/tree/main/go/2024/01](https://github.com/pemoreau/advent-of-code/tree/main/go/2024/01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/pemoreau/advent-of-code/tree/main/go/2024/01\"&gt;https://github.com/pemoreau/advent-of-code/tree/main/go/2024/01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvolnw/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvolnw", "created":
        1733066268.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzwidek", "id": "lzwidek", "parent_id":
        "t1_lzvolnw", "depth": 1, "children": ["lzwidek", "lzx7cyk"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvt9ub",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "homme_chauve_souris",
        "can_mod_post": false, "created_utc": 1733067889.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_8vu5dnj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n    def aoc01():\n        L = list(zip(*[map(int, line.split())
        for line in open(\"input01.txt\")]))\n        print(sum(abs(a-b) for (a,b)
        in zip(*map(sorted, L))))\n        print(sum(x*L[1].count(x) for x in L[0]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        aoc01():\n    L = list(zip(*[map(int, line.split()) for line in open(&amp;quot;input01.txt&amp;quot;)]))\n    print(sum(abs(a-b)
        for (a,b) in zip(*map(sorted, L))))\n    print(sum(x*L[1].count(x) for x in
        L[0]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvt9ub/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvt9ub", "created":
        1733067889.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvwlng",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "raevnos",
        "can_mod_post": false, "created_utc": 1733069023.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_3995k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Bash]\n    \n    #!/usr/bin/env bash\n    \n    getcolumn() {\n            tr
        -s \" \" \"\\t\" &lt; \"$1\"  | cut -f \"$2\" | sort -n\n    }\n    \n    input=${1:-day01.txt}\n    readarray
        -t left &lt;&lt;&lt;\"$(getcolumn \"$input\" 1)\"\n    readarray -t right
        &lt;&lt;&lt;\"$(getcolumn \"$input\" 2)\"\n    declare -i total=0\n    for
        (( i = 0; i &lt; ${#left[@]}; i++)); do\n      total+=$(( left[i] &lt; right[i]
        ? right[i] - left[i] : left[i] - right[i] ))\n    done\n    printf \"Part
        1: %d\\n\" \"$total\"\n    \n    declare -A rightcounts\n    while read -r
        count n; do\n            rightcounts[$n]=$count\n    done &lt;&lt;&lt;\"$(printf
        \"%d\\n\" \"${right[@]}\" | uniq -c)\"\n    \n    total=0\n    for (( i =
        0; i &lt; ${#left[@]}; i++ )); do\n            total+=$(( left[i] * ${rightcounts[${left[i]}]:-0}
        ))\n    done\n    printf \"Part 2: %d\\n\" \"$total\"", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Bash]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env
        bash\n\ngetcolumn() {\n        tr -s &amp;quot; &amp;quot; &amp;quot;\\t&amp;quot;
        &amp;lt; &amp;quot;$1&amp;quot;  | cut -f &amp;quot;$2&amp;quot; | sort -n\n}\n\ninput=${1:-day01.txt}\nreadarray
        -t left &amp;lt;&amp;lt;&amp;lt;&amp;quot;$(getcolumn &amp;quot;$input&amp;quot;
        1)&amp;quot;\nreadarray -t right &amp;lt;&amp;lt;&amp;lt;&amp;quot;$(getcolumn
        &amp;quot;$input&amp;quot; 2)&amp;quot;\ndeclare -i total=0\nfor (( i = 0;
        i &amp;lt; ${#left[@]}; i++)); do\n  total+=$(( left[i] &amp;lt; right[i]
        ? right[i] - left[i] : left[i] - right[i] ))\ndone\nprintf &amp;quot;Part
        1: %d\\n&amp;quot; &amp;quot;$total&amp;quot;\n\ndeclare -A rightcounts\nwhile
        read -r count n; do\n        rightcounts[$n]=$count\ndone &amp;lt;&amp;lt;&amp;lt;&amp;quot;$(printf
        &amp;quot;%d\\n&amp;quot; &amp;quot;${right[@]}&amp;quot; | uniq -c)&amp;quot;\n\ntotal=0\nfor
        (( i = 0; i &amp;lt; ${#left[@]}; i++ )); do\n        total+=$(( left[i] *
        ${rightcounts[${left[i]}]:-0} ))\ndone\nprintf &amp;quot;Part 2: %d\\n&amp;quot;
        &amp;quot;$total&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvwlng/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzvwlng", "created": 1733069023.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzw5q2q", "id": "lzw5q2q", "parent_id":
        "t1_lzvwlng", "depth": 1, "children": ["lzw5q2q"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvx9tt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Elliot-Kik",
        "can_mod_post": false, "created_utc": 1733069248.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_2lkwobz6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n    def part_one(filename):\n        left_list = []\n        right_list
        = []\n        total_distance = 0\n\n        with open(filename) as file:\n            for
        line in file:\n                left_nb, right_nb = line.strip().split()\n                right_list.append(int(right_nb))\n                left_list.append(int(left_nb))\n\n        left_list
        = sorted(left_list)\n        right_list = sorted(right_list)\n\n        for
        i in range(len(left_list)):\n            total_distance += abs(left_list[i]
        - right_list[i])\n\n        return total_distance\n\n    print(part_one(\"day1/input/puzzle.txt\"))\n\n\n    def
        part_two(filename):\n        left_list = []\n        right_list = []\n        total_distance
        = 0\n\n        with open(filename) as file:\n            for line in file:\n                left_nb,
        right_nb = line.strip().split()\n                right_list.append(int(right_nb))\n                left_list.append(int(left_nb))\n        \n        for
        nb in left_list:\n        similarity_score += nb * right_list.count(nb)\n    \n        return
        similarity_score\n\n    print(part_two(\"day1/input/puzzle.txt\"))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        part_one(filename):\n    left_list = []\n    right_list = []\n    total_distance
        = 0\n\n    with open(filename) as file:\n        for line in file:\n            left_nb,
        right_nb = line.strip().split()\n            right_list.append(int(right_nb))\n            left_list.append(int(left_nb))\n\n    left_list
        = sorted(left_list)\n    right_list = sorted(right_list)\n\n    for i in range(len(left_list)):\n        total_distance
        += abs(left_list[i] - right_list[i])\n\n    return total_distance\n\nprint(part_one(&amp;quot;day1/input/puzzle.txt&amp;quot;))\n\n\ndef
        part_two(filename):\n    left_list = []\n    right_list = []\n    total_distance
        = 0\n\n    with open(filename) as file:\n        for line in file:\n            left_nb,
        right_nb = line.strip().split()\n            right_list.append(int(right_nb))\n            left_list.append(int(left_nb))\n\n    for
        nb in left_list:\n    similarity_score += nb * right_list.count(nb)\n\n    return
        similarity_score\n\nprint(part_two(&amp;quot;day1/input/puzzle.txt&amp;quot;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvx9tt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvx9tt", "created":
        1733069248.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvz9lm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "lureevar",
        "can_mod_post": false, "created_utc": 1733069903.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_i0c5w870", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Perl\\]\n\n[Day 1 Source Code](https://gitlab.com/olooeez/advent-of-code-2024/-/tree/main/day_1?ref_type=heads)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Perl]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gitlab.com/olooeez/advent-of-code-2024/-/tree/main/day_1?ref_type=heads\"&gt;Day
        1 Source Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvz9lm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvz9lm", "created":
        1733069903.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw18yp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Adept-Athlete-681",
        "can_mod_post": false, "created_utc": 1733070553.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_zlls7pq8w",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Haskell\\]\n\nThe \\`run\\` function just reads
        the file into a string and calls \\`lines\\`. \n\n    module Main where\n    \n    import
        Advent.Utils (run)\n    import Control.Arrow ((***))\n    import Data.List
        (sort)\n    \n    type Input = ([Int], [Int])\n    \n    part1 :: Input -&gt;
        Int\n    part1 = sum . fmap (abs . uncurry (-)) . uncurry zip . (sort ***
        sort)\n    \n    part2 :: Input -&gt; Int\n    part2 (as, bs) = sum [a * count
        a bs | a &lt;- as]\n      where\n        count x = length . filter (== x)\n    \n    prepare
        :: [String] -&gt; Input\n    prepare =\n        foldr\n            ( \\s (l1,
        l2) -&gt; case read &lt;$&gt; words s of\n                [a, b] -&gt; (a
        : l1, b : l2)\n                _ -&gt; error (\"Failed to parse input: \"
        &lt;&gt; s)\n            )\n            ([], [])\n    \n    main :: IO ()\n    main
        = run part1 part2 prepare", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Haskell]&lt;/p&gt;\n\n&lt;p&gt;The `run` function just reads the file into
        a string and calls `lines`. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module Main
        where\n\nimport Advent.Utils (run)\nimport Control.Arrow ((***))\nimport Data.List
        (sort)\n\ntype Input = ([Int], [Int])\n\npart1 :: Input -&amp;gt; Int\npart1
        = sum . fmap (abs . uncurry (-)) . uncurry zip . (sort *** sort)\n\npart2
        :: Input -&amp;gt; Int\npart2 (as, bs) = sum [a * count a bs | a &amp;lt;-
        as]\n  where\n    count x = length . filter (== x)\n\nprepare :: [String]
        -&amp;gt; Input\nprepare =\n    foldr\n        ( \\s (l1, l2) -&amp;gt; case
        read &amp;lt;$&amp;gt; words s of\n            [a, b] -&amp;gt; (a : l1, b
        : l2)\n            _ -&amp;gt; error (&amp;quot;Failed to parse input: &amp;quot;
        &amp;lt;&amp;gt; s)\n        )\n        ([], [])\n\nmain :: IO ()\nmain =
        run part1 part2 prepare\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw18yp/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzw18yp", "created": 1733070553.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzxq93j", "id": "lzxq93j", "parent_id":
        "t1_lzw18yp", "depth": 1, "children": ["lzxq93j", "lzw1dmz"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw392l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Secure_Pirate9838",
        "can_mod_post": false, "created_utc": 1733071204.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_ielrcnfwt",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Rust\\]\n\n[Day1.rs](https://github.com/samoylenkodmitry/AdventOfCode2024/blob/main/src/day1.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/samoylenkodmitry/AdventOfCode2024/blob/main/src/day1.rs\"&gt;Day1.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw392l/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw392l", "created":
        1733071204.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 679, "name": "t1_lzw3rc4", "id": "lzw3rc4", "parent_id":
        "t3_1h3vp6n", "depth": 0, "children": ["lzw3rc4", "lzw59qi", "lzw6cci", "lzw6smd",
        "lzwk037", "lzwhwnu", "lzw7bxl", "lzw6zcn", "lzw8clk", "lzxhngc", "lzwy0pm",
        "lzx3cfm", "lzx2iql", "lzwaqbg", "lzwgq3h", "lzwmaex", "lzxgnjw", "lzwfhja",
        "lzwiqz3", "lzxymvy", "lzy1xya", "lztwb58", "lzxzl8k", "lztveyg", "lzy2y3j",
        "lzxab8v", "lzxrzxz", "lzxwpuu", "lzx0451", "lzwm77m", "lzyc6yj", "lzx5x7o",
        "lzxyt1p", "lzxjlud", "lzu0fn0", "lzwn130", "lzxwzv1", "lzwmp7w", "lzyo099",
        "lzywm0a", "lztwpcw", "lzu08md", "lztv8j1", "lztxcn2", "lztxfyf", "lztvbso",
        "lzuclrz", "lztxsbu", "lzuc95m", "lzz1zdd", "lzu1m7y", "lzymy1w", "lzykfxp",
        "lzu1tvt", "lztvtu4", "lzzhi6n", "lztvrmy", "lztuzu2", "lzu0358", "lzydt95",
        "lzy2ck1", "lztx9nv", "lzu09x9", "lzw6jj7", "lztv52p", "lztwvux", "lztv0cr",
        "lzuhkm0", "lztyism", "lzuaoj8", "lzuxu2f", "lzugfkv", "lzz7dp2", "lzxx539",
        "lztvjez", "lzufy8k", "lzxk8in", "lztuhit", "lzyy37i", "lzumwlo", "lzu40h0",
        "lzu5vwv", "lztycnp", "lzu2xei", "lzu37j5", "lztvr1f", "lzujvaw", "lzu0lc6",
        "lzx5ceh", "lztypfi", "lzud5mh", "lztxp3z", "lztwckv", "lzunjwq", "lzuqgpm",
        "lzubp9n", "lzu3arz", "lzui3bt", "lzumum1", "lztzrhe", "lzuzmk2", "lzuin6w",
        "lzunlr8", "lztws3t", "lzuh31k", "lztuqbf", "lzv7dn6", "lzurdle", "lzy3l4s",
        "lzut77l", "lztwdz8", "lzyplnw", "lzv0sma", "lzvlpzh", "lztxgq1", "lzunco8",
        "lzuob92", "lzutcrs", "lzu6fxr", "lzufdi1", "lzx3r49", "lztxczr", "lzvfewi",
        "lzv1j4u", "lzv85jl", "lzuk8y5", "lzxcran", "lzwpi7i", "lzut10v", "lzyi596",
        "lzupmws", "lzulx1l", "lzuj69d", "lzv20jv", "lzv9vah", "lzuorbh", "lzupu7v",
        "lzxni8y", "lzv1l81", "lzxzre1", "lzv5do7", "lzv83r3", "lzvv2gw", "lzux5eu",
        "lzxlypv", "lzu1uyi", "lzunnlt", "lzz3tud", "lzuorux", "lztxn9m", "lzuhysu",
        "lzukmkn", "lzv0aq2", "lztxhsi", "lztwo15", "lzu4v0v", "lzy1ie6", "lzxjjz7",
        "lzuyau3", "lzwhlfw", "lzua5pk", "lzwqcgt", "lzuatf2", "lzurxqm", "lzubpt1",
        "lzuq6jl", "lzvkpuj", "lzufzy7", "lzw0r7p", "lzuxln2", "lzv06w0", "lzv0kiu",
        "lzwfu9m", "lzupjwe", "lzub3gm", "lzxwxer", "lztz227", "lzv4kze", "lzuhzeh",
        "lzuhdck", "lzvgzl2", "lzu3ne8", "lztzpt7", "lztxfn0", "lzx9tmj", "lzxvj9k",
        "lzw82qi", "lzuzxk9", "lzuluvw", "lzxnxu5", "lzwwa0j", "lzvei7r", "lzupl7p",
        "lzu0iw8", "lzunhiy", "lzuqiqy", "lzw0gx8", "lzw1gq7", "lzvbe25", "lzwjr08",
        "lzv6lu7", "lzvb8mz", "lzv1amu", "lztutgx", "lzubafx", "lzudln3", "lzuqa28",
        "lzukqyb", "lzv3ssf", "lzy3w4z", "lzy1vi1", "lzur90m", "lzva6dl", "lzvl48t",
        "lzv48yt", "lzw9xv7", "lzw21qf", "lzv3mfg", "lzwih8i", "lzx5ew6", "lzurrwf",
        "lzwpqqx", "lzutgq2", "lzuwuer", "lzxd7g7", "lzuve9o", "lzwbgg6", "lzyopak",
        "lzudmaa", "lzxped4", "lzuim0s", "lzuduwc", "lzvl8xt", "lzuw204", "lzwr1gt",
        "lzwp0s1", "lzydegd", "lzuuqlz", "lzu4jyf", "lzvljq9", "lzw8s3t", "lzu16p9",
        "lzyoxpn", "lzyegbz", "lzuywc7", "lzwbpkj", "lzv1h7j", "lzz88li", "lzwlnw1",
        "lzu257r", "lzy50rj", "lzxiyqj", "lztxifk", "lzvjwvq", "lzusxwa", "lzxr1ct",
        "lzuegf5", "lzwkspk", "lzv6h6u", "lzxey3q", "lzurrr3", "lzulkpq", "lzxd4fq",
        "lzxb6wy", "lzwwfi2", "lzuksqn", "lzyzbv8", "lzv11tu", "lzv0mhf", "lzuiprd",
        "lzvny74", "lzuuc24", "lzuqnrn", "lzy5ev5", "lzyitqc", "lzudkem", "lzwve2u",
        "lzwefd0", "lzv69w1", "lzw0s5r", "lzvehvx", "lzury9n", "lzuxuz5", "lzv77ab",
        "lzw747s", "lzwtcbu", "lzw590b", "lztzho4", "lzunwxv", "lzvwrb4", "lzv9bgi",
        "lzxpqjn", "lzwf2n3", "lzw0bbp", "lzx5fi8", "lzv0600", "lztyu01", "lzvijc3",
        "lzx663l", "lzvo53h", "lzyas3y", "lzyu3xo", "lzuqoee", "lzvqw9h", "lzyip3j",
        "lzurqvp", "lzup0wo", "lzuj683", "lzwh5rt", "lzwhsbr", "lzz0m22", "lzy0ubn",
        "lztz5jj", "lztx3fc", "lzyioa0", "lzvwbmb", "lzy4wiu", "lztwpd7", "lzuqymy",
        "lzxqfih", "lzuzoao", "lzyahn2", "lzybcds", "lztv294", "lzv76ku", "lzwcpug",
        "lzuo7jw", "lzxvf32", "lzx7rcg", "lzul07q", "lzvuxar", "lzv0jmg", "lzvbkq0",
        "lzvnk10", "lzwq5rw", "lzwggfd", "lzu4arc", "lzxv1io", "lztx0gs", "lzyoaka",
        "lztwqd9", "lzw05v2", "lzxbuz2", "lzumhc5", "lzv1dp2", "lzuztdp", "lzx4yw1",
        "lzv14mo", "lzv5f36", "lzx7z9q", "lzymhbq", "lzufzih", "lztx6do", "lzw7wbc",
        "lzww2ia", "lzuiq49", "lztzjk2", "lzufves", "lzufa75", "lzxc1gg", "lzup10n",
        "lzwlzli", "lzu253p", "lzyxsyp", "lzue4xp"]}}], true]], [0, 12, "attr", "things"],
        [12, 13, "call", ["t1_lzzdouv"]], [13, 14, "attr", "focus"], [14, 15, "call",
        []], [0, 16, "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr",
        "filter"], [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"],
        [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:39 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:40 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=v296lXBNeDQdXVEjYx; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:40 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzw3rc4,lzw59qi,lzw6cci,lzw6smd,lzwk037,lzwhwnu,lzw7bxl,lzw6zcn,lzw8clk,lzxhngc,lzwy0pm,lzx3cfm,lzx2iql,lzwaqbg,lzwgq3h,lzwmaex,lzxgnjw,lzwfhja,lzwiqz3,lzxymvy,lzy1xya,lztwb58,lzxzl8k,lztveyg,lzy2y3j,lzxab8v,lzxrzxz,lzxwpuu,lzx0451,lzwm77m,lzyc6yj,lzx5x7o,lzxyt1p,lzxjlud,lzu0fn0,lzwn130,lzxwzv1,lzwmp7w,lzyo099,lzywm0a,lztwpcw,lzu08md,lztv8j1,lztxcn2,lztxfyf,lztvbso,lzuclrz,lztxsbu,lzuc95m,lzz1zdd,lzu1m7y,lzymy1w,lzykfxp,lzu1tvt,lztvtu4,lzzhi6n,lztvrmy,lztuzu2,lzu0358,lzydt95,lzy2ck1,lztx9nv,lzu09x9,lzw6jj7,lztv52p,lztwvux,lztv0cr,lzuhkm0,lztyism,lzuaoj8,lzuxu2f,lzugfkv,lzz7dp2,lzxx539,lztvjez,lzufy8k,lzxk8in,lztuhit,lzyy37i,lzumwlo,lzu40h0,lzu5vwv,lztycnp,lzu2xei,lzu37j5,lztvr1f,lzujvaw,lzu0lc6,lzx5ceh,lztypfi,lzud5mh,lztxp3z,lztwckv,lzunjwq,lzuqgpm,lzubp9n,lzu3arz,lzui3bt,lzumum1,lztzrhe,lzuzmk2,lzuin6w,lzunlr8,lztws3t,lzuh31k,lztuqbf,lzv7dn6,lzurdle,lzy3l4s,lzut77l,lztwdz8,lzyplnw,lzv0sma,lzvlpzh,lztxgq1,lzunco8,lzuob92,lzutcrs,lzu6fxr,lzufdi1,lzx3r49,lztxczr,lzvfewi,lzv1j4u,lzv85jl,lzuk8y5,lzxcran,lzwpi7i,lzut10v,lzyi596,lzupmws,lzulx1l,lzuj69d,lzv20jv,lzv9vah,lzuorbh,lzupu7v,lzxni8y,lzv1l81,lzxzre1,lzv5do7,lzv83r3,lzvv2gw,lzux5eu,lzxlypv,lzu1uyi,lzunnlt,lzz3tud,lzuorux,lztxn9m,lzuhysu,lzukmkn,lzv0aq2,lztxhsi,lztwo15,lzu4v0v,lzy1ie6,lzxjjz7,lzuyau3,lzwhlfw,lzua5pk,lzwqcgt,lzuatf2,lzurxqm,lzubpt1,lzuq6jl,lzvkpuj,lzufzy7,lzw0r7p,lzuxln2,lzv06w0,lzv0kiu,lzwfu9m,lzupjwe,lzub3gm,lzxwxer,lztz227,lzv4kze,lzuhzeh,lzuhdck,lzvgzl2,lzu3ne8,lztzpt7,lztxfn0,lzx9tmj,lzxvj9k,lzw82qi,lzuzxk9,lzuluvw,lzxnxu5,lzwwa0j,lzvei7r,lzupl7p,lzu0iw8,lzunhiy,lzuqiqy,lzw0gx8,lzw1gq7,lzvbe25,lzwjr08,lzv6lu7,lzvb8mz,lzv1amu,lztutgx,lzubafx,lzudln3,lzuqa28,lzukqyb,lzv3ssf,lzy3w4z,lzy1vi1,lzur90m,lzva6dl,lzvl48t,lzv48yt,lzw9xv7,lzw21qf,lzv3mfg,lzwih8i,lzx5ew6,lzurrwf,lzwpqqx,lzutgq2,lzuwuer,lzxd7g7,lzuve9o,lzwbgg6,lzyopak,lzudmaa,lzxped4,lzuim0s,lzuduwc,lzvl8xt,lzuw204,lzwr1gt,lzwp0s1,lzydegd,lzuuqlz,lzu4jyf,lzvljq9,lzw8s3t,lzu16p9,lzyoxpn,lzyegbz,lzuywc7,lzwbpkj,lzv1h7j,lzz88li,lzwlnw1,lzu257r,lzy50rj,lzxiyqj,lztxifk,lzvjwvq,lzusxwa,lzxr1ct,lzuegf5,lzwkspk,lzv6h6u,lzxey3q,lzurrr3,lzulkpq,lzxd4fq,lzxb6wy,lzwwfi2,lzuksqn,lzyzbv8,lzv11tu,lzv0mhf,lzuiprd,lzvny74,lzuuc24,lzuqnrn,lzy5ev5,lzyitqc,lzudkem,lzwve2u,lzwefd0,lzv69w1,lzw0s5r,lzvehvx,lzury9n,lzuxuz5,lzv77ab,lzw747s,lzwtcbu,lzw590b,lztzho4,lzunwxv,lzvwrb4,lzv9bgi,lzxpqjn,lzwf2n3,lzw0bbp,lzx5fi8,lzv0600,lztyu01,lzvijc3,lzx663l,lzvo53h,lzyas3y,lzyu3xo,lzuqoee,lzvqw9h,lzyip3j,lzurqvp,lzup0wo,lzuj683,lzwh5rt,lzwhsbr,lzz0m22,lzy0ubn,lztz5jj,lztx3fc,lzyioa0,lzvwbmb,lzy4wiu,lztwpd7,lzuqymy,lzxqfih,lzuzoao,lzyahn2,lzybcds,lztv294,lzv76ku,lzwcpug,lzuo7jw,lzxvf32,lzx7rcg,lzul07q,lzvuxar,lzv0jmg,lzvbkq0,lzvnk10,lzwq5rw,lzwggfd,lzu4arc,lzxv1io,lztx0gs,lzyoaka,lztwqd9,lzw05v2,lzxbuz2,lzumhc5,lzv1dp2,lzuztdp,lzx4yw1,lzv14mo,lzv5f36,lzx7z9q,lzymhbq,lzufzih,lztx6do,lzw7wbc,lzww2ia,lzuiq49,lztzjk2,lzufves,lzufa75,lzxc1gg,lzup10n,lzwlzli,lzu253p,lzyxsyp,lzue4xp
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '39236'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksemox6dc.2.1741471480266.Z0FBQUFBQm56TDc0LTV3bTliTUp5SzBMUkd1RHpxY0FqMHJkVXJLZjlDTlRjbWFOeHcwRkFNNkNDQlV4czRuZXZZamlYZHE1b1d2Q2YtT2FCbmlkS293bHJLRUJxQk5WakVSYnZFZ3pxaHNNWEI3S2ppNEVKNXkyRHV6VUoyRTU4MkpXd1dvUlZzT0U;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:40
        GMT; secure, session_tracker=ajomrnlcqiffqqlqpk.0.1741471480278.Z0FBQUFBQm56TDc0Y05IVm9tbGxZOExPbGRTdkQweW50Zmx6U1VfOWQzel9jTldyWWtFYXhqczIyaWpmSUZLZlZwRHRjdGlZQU5aR3JVUWM0c3BvemxPdGZMZXNCZkpLUXdVOTBnY1ZzTmlfc3UydUxnZlBlRzRhUkhzYzN0dGhDSHdEY2dUdExPMm0;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:40
        GMT; secure, edgebucket=vh4wEgPMeMUY9vchG2; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '7'
      x-ratelimit-remaining:
      - '93.0'
      x-ratelimit-reset:
      - '319'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:40 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733073567.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzw3rc4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Trick-Apple1289",
        "can_mod_post": false, "created_utc": 1733071368.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_l1folkmj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C\\]\n\nas of posting this comment only part 1 uploaded, still
        need to clean it up a bit :-)\n\n[Repo with src](https://codeberg.org/rs221122/AOC2024/src/branch/main/day1)\n\nedit:
        epic hyperlink fail :(  \nedit2: part two added", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C]&lt;/p&gt;\n\n&lt;p&gt;as of posting
        this comment only part 1 uploaded, still need to clean it up a bit :-)&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://codeberg.org/rs221122/AOC2024/src/branch/main/day1\"&gt;Repo
        with src&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;edit: epic hyperlink fail :(&lt;br/&gt;\nedit2:
        part two added&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw3rc4/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw3rc4", "created":
        1733071368.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733072148.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzw59qi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "biggy-smith",
        "can_mod_post": false, "created_utc": 1733071857.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_uean0ee0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\n[https://github.com/biggysmith/advent\\_of\\_code\\_2024/blob/master/src/day01/day1.cpp](https://github.com/biggysmith/advent_of_code_2024/blob/master/src/day01/day1.cpp)\n\nsorting
        for part 1 and histogramming for part 2.\n\nglad to be back advent''ing with
        you all!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/biggysmith/advent_of_code_2024/blob/master/src/day01/day1.cpp\"&gt;https://github.com/biggysmith/advent_of_code_2024/blob/master/src/day01/day1.cpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;sorting
        for part 1 and histogramming for part 2.&lt;/p&gt;\n\n&lt;p&gt;glad to be
        back advent&amp;#39;ing with you all!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw59qi/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzw59qi", "created": 1733071857.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzx5p46", "id": "lzx5p46", "parent_id":
        "t1_lzw59qi", "depth": 1, "children": ["lzx5p46", "lzw59sa"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733072375.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzw6cci", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "onsistems",
        "can_mod_post": false, "created_utc": 1733072190.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_9fozh6hv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: PHP\\]\n\n    &lt;?php\n    \n    // Advent of Code 2024 - Day
        1: Historian Hysteria\n    \n    $data = file_get_contents(''input.txt'');\n    $data
        = preg_split(\"/\\r\\n|\\n|\\r/\", $data);\n    \n    foreach ($data as $key
        =&gt; $value) {\n    $split = explode(\"   \", $value);\n    \n    $column1[]
        = intval($split[0]);\n    $column2[] = intval($split[1]);\n    }\n    sort($column1);\n    sort($column2);\n    \n    //
        Part 1\n    $response1=0;\n    foreach ($column1 as $key =&gt; $value) {\n    $response1
        += abs($value-$column2[$key]);\n    }\n    \n    echo $response1.\"\\n\";\n    \n    //
        Part 2\n    $count_column2 = array_count_values($column2);\n    \n    $response2=0;\n    foreach
        ($column1 as $key =&gt; $value) {\n    $response2 += $value*($count_column2[$value]??0);\n    }\n    \n    echo
        $response2;", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        PHP]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n// Advent of Code
        2024 - Day 1: Historian Hysteria\n\n$data = file_get_contents(&amp;#39;input.txt&amp;#39;);\n$data
        = preg_split(&amp;quot;/\\r\\n|\\n|\\r/&amp;quot;, $data);\n\nforeach ($data
        as $key =&amp;gt; $value) {\n$split = explode(&amp;quot;   &amp;quot;, $value);\n\n$column1[]
        = intval($split[0]);\n$column2[] = intval($split[1]);\n}\nsort($column1);\nsort($column2);\n\n//
        Part 1\n$response1=0;\nforeach ($column1 as $key =&amp;gt; $value) {\n$response1
        += abs($value-$column2[$key]);\n}\n\necho $response1.&amp;quot;\\n&amp;quot;;\n\n//
        Part 2\n$count_column2 = array_count_values($column2);\n\n$response2=0;\nforeach
        ($column1 as $key =&amp;gt; $value) {\n$response2 += $value*($count_column2[$value]??0);\n}\n\necho
        $response2;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw6cci/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw6cci", "created":
        1733072190.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzw6kdc", "id": "lzw6kdc", "parent_id":
        "t1_lzw6cci", "depth": 1, "children": ["lzw6kdc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw6smd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "fuxino",
        "can_mod_post": false, "created_utc": 1733072325.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_2lxz0343", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Haskell\\]\n\nPart 1:\n\n    import Data.List (transpose, sort)\n    import
        System.IO\n    \n    listDistance :: [Int] -&gt; [Int] -&gt; Int\n    listDistance
        xs ys = sum $ map abs $ zipWith (-) (sort xs) (sort ys)\n    \n    main =
        do\n        contents &lt;- lines &lt;$&gt; readFile \"day1.txt\"\n        let
        [x, y] = transpose $ map read . words &lt;$&gt; contents\n            distance
        = listDistance x y\n        print distance\n\nPart 2:\n\n    import Data.List
        (transpose, sort, group)\n    import System.IO\n    \n    similarityScore
        :: [Int] -&gt; [Int] -&gt; Int\n    similarityScore xs ys = let elemsY = [
        (head y, length y) | y &lt;- (group . sort) ys ]\n                            in  sum
        [ x * snd y | x &lt;- xs, y &lt;- elemsY, x == fst y ]\n    \n    main = do\n        contents
        &lt;- lines &lt;$&gt; readFile \"day1.txt\"\n        let [x, y] = transpose
        $ map read . words &lt;$&gt; contents\n            score = similarityScore
        x y\n        print score", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Haskell]&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Data.List (transpose, sort)\nimport System.IO\n\nlistDistance :: [Int] -&amp;gt;
        [Int] -&amp;gt; Int\nlistDistance xs ys = sum $ map abs $ zipWith (-) (sort
        xs) (sort ys)\n\nmain = do\n    contents &amp;lt;- lines &amp;lt;$&amp;gt;
        readFile &amp;quot;day1.txt&amp;quot;\n    let [x, y] = transpose $ map read
        . words &amp;lt;$&amp;gt; contents\n        distance = listDistance x y\n    print
        distance\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Data.List (transpose, sort, group)\nimport System.IO\n\nsimilarityScore ::
        [Int] -&amp;gt; [Int] -&amp;gt; Int\nsimilarityScore xs ys = let elemsY =
        [ (head y, length y) | y &amp;lt;- (group . sort) ys ]\n                        in  sum
        [ x * snd y | x &amp;lt;- xs, y &amp;lt;- elemsY, x == fst y ]\n\nmain = do\n    contents
        &amp;lt;- lines &amp;lt;$&amp;gt; readFile &amp;quot;day1.txt&amp;quot;\n    let
        [x, y] = transpose $ map read . words &amp;lt;$&amp;gt; contents\n        score
        = similarityScore x y\n    print score\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw6smd/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw6smd", "created":
        1733072325.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733073178.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzw6zcn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "treanir",
        "can_mod_post": false, "created_utc": 1733072383.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_kyap9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nVery very new at Python, so this is probably a
        pretty iffy solution, but it got me there and I am pretty pleased with myself.\n\n\n\n    import
        math\n    \n    # open pre-made file from https://adventofcode.com/2024/day/1/input\n    with
        open(''adventOfCode2024Day1List.txt'', ''r'') as file:\n        result = file.read().splitlines()\n    \n    #
        create two lists to compare later\n    listOne = []\n    listTwo = []\n    \n    #
        populate first list\n    for i in result:\n        listOne.append(i[0:5])\n    \n    #
        populate second list\n    for i in result:\n        listTwo.append(i[8:13])\n    \n    #
        sort lists\n    listOne.sort()\n    listTwo.sort()\n    \n    diffSum = 0\n    \n    #
        compare each list one by one and add the difference to diffsum\n    for i
        in range(len(listOne)):\n        difference = abs(int(listOne[i])-int(listTwo[i]))\n        diffSum
        += difference\n    \n    print(diffSum)\n    \n    # Start of question\n    similarityScore
        = 0\n    foundMatches = 0\n    \n    # find similarity score\n    for i in
        range(len(listOne)):\n        foundMatches = listTwo.count(listOne[i])\n        similarityScore
        += (int(listOne[i]) * foundMatches)\n    \n    print(similarityScore)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Very
        very new at Python, so this is probably a pretty iffy solution, but it got
        me there and I am pretty pleased with myself.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        math\n\n# open pre-made file from https://adventofcode.com/2024/day/1/input\nwith
        open(&amp;#39;adventOfCode2024Day1List.txt&amp;#39;, &amp;#39;r&amp;#39;)
        as file:\n    result = file.read().splitlines()\n\n# create two lists to compare
        later\nlistOne = []\nlistTwo = []\n\n# populate first list\nfor i in result:\n    listOne.append(i[0:5])\n\n#
        populate second list\nfor i in result:\n    listTwo.append(i[8:13])\n\n# sort
        lists\nlistOne.sort()\nlistTwo.sort()\n\ndiffSum = 0\n\n# compare each list
        one by one and add the difference to diffsum\nfor i in range(len(listOne)):\n    difference
        = abs(int(listOne[i])-int(listTwo[i]))\n    diffSum += difference\n\nprint(diffSum)\n\n#
        Start of question\nsimilarityScore = 0\nfoundMatches = 0\n\n# find similarity
        score\nfor i in range(len(listOne)):\n    foundMatches = listTwo.count(listOne[i])\n    similarityScore
        += (int(listOne[i]) * foundMatches)\n\nprint(similarityScore)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw6zcn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw6zcn", "created":
        1733072383.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzx5iu8", "id": "lzx5iu8", "parent_id":
        "t1_lzw6zcn", "depth": 1, "children": ["lzx5iu8", "lzw6zd7"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw7bxl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "2SmoothForYou",
        "can_mod_post": false, "created_utc": 1733072493.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_hephg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Haskell\\]\n\n    module Day1 where\n    \n    import           Control.Arrow                  (
        (***) )\n    import           Data.List                      ( sort )\n    import           Control.Monad                  (
        join )\n    \n    splitInput :: String -&gt; Maybe (Int, Int)\n    splitInput
        input = case words input of\n      word1 : word2 : [] -&gt; Just (read word1,
        read word2)\n      _                  -&gt; Nothing\n    \n    part1 :: String
        -&gt; Maybe Int\n    part1 =\n      fmap (sum . map abs . uncurry (zipWith
        (-)) . join (***) sort . unzip)\n        . sequence\n        . map splitInput\n        .
        lines\n    \n    part2 :: String -&gt; Maybe Int\n    part2 input = do\n      (leftList,
        rightList) &lt;- fmap unzip . sequence . map splitInput $ lines input\n      pure
        $ sum $ map (\\left -&gt; left * (length $ filter (== left) rightList))\n                       leftList",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Haskell]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module
        Day1 where\n\nimport           Control.Arrow                  ( (***) )\nimport           Data.List                      (
        sort )\nimport           Control.Monad                  ( join )\n\nsplitInput
        :: String -&amp;gt; Maybe (Int, Int)\nsplitInput input = case words input
        of\n  word1 : word2 : [] -&amp;gt; Just (read word1, read word2)\n  _                  -&amp;gt;
        Nothing\n\npart1 :: String -&amp;gt; Maybe Int\npart1 =\n  fmap (sum . map
        abs . uncurry (zipWith (-)) . join (***) sort . unzip)\n    . sequence\n    .
        map splitInput\n    . lines\n\npart2 :: String -&amp;gt; Maybe Int\npart2
        input = do\n  (leftList, rightList) &amp;lt;- fmap unzip . sequence . map
        splitInput $ lines input\n  pure $ sum $ map (\\left -&amp;gt; left * (length
        $ filter (== left) rightList))\n                   leftList\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw7bxl/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw7bxl", "created":
        1733072493.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw8clk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "xelf",
        "can_mod_post": false, "created_utc": 1733072818.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_3k2at", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python] (pandas really)\n\n    df = pd.DataFrame(aocdata)\n    print(''part
        1'', abs(np.sort(df[1])-np.sort(df[0])).sum())\n\n    diff_map = dict(df[1].value_counts())\n    print(''part
        2'', df[0].apply(lambda x: x * diff_map.get(x,0)).sum())\n\nActually missed
        the start, can''t believe it''s december already!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python] (pandas really)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;df
        = pd.DataFrame(aocdata)\nprint(&amp;#39;part 1&amp;#39;, abs(np.sort(df[1])-np.sort(df[0])).sum())\n\ndiff_map
        = dict(df[1].value_counts())\nprint(&amp;#39;part 2&amp;#39;, df[0].apply(lambda
        x: x * diff_map.get(x,0)).sum())\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Actually
        missed the start, can&amp;#39;t believe it&amp;#39;s december already!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw8clk/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw8clk", "created":
        1733072818.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwaqbg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "NeilNjae",
        "can_mod_post": false, "created_utc": 1733073567.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_6836y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Haskell]\n\nA good fit for Haskell, even if I decided to use the
        Multiset library for part 2.\n\n    part1, part2 :: [(Int, Int)] -&gt; Int\n    part1
        pairs = sum $ zipWith absDiff (sort lefts) (sort rights)\n    where (lefts,
        rights) = unzip pairs\n            absDiff a b = abs (a - b)\n\n    part2
        pairs = sum $ fmap similarity lefts\n        where (lefts, rights) = unzip
        pairs\n            counts = MS.fromList rights\n            similarity l =
        l * (MS.occur l counts)\n\n[Full writeup on my blog](https://work.njae.me.uk/2024/12/01/advent-of-code-2024-day-1/),
        and code on [Codeberg](https://codeberg.org/NeilNjae/advent-of-code-24/src/branch/main/advent01/Main.hs).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Haskell]&lt;/p&gt;\n\n&lt;p&gt;A
        good fit for Haskell, even if I decided to use the Multiset library for part
        2.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part1, part2 :: [(Int, Int)] -&amp;gt;
        Int\npart1 pairs = sum $ zipWith absDiff (sort lefts) (sort rights)\nwhere
        (lefts, rights) = unzip pairs\n        absDiff a b = abs (a - b)\n\npart2
        pairs = sum $ fmap similarity lefts\n    where (lefts, rights) = unzip pairs\n        counts
        = MS.fromList rights\n        similarity l = l * (MS.occur l counts)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://work.njae.me.uk/2024/12/01/advent-of-code-2024-day-1/\"&gt;Full
        writeup on my blog&lt;/a&gt;, and code on &lt;a href=\"https://codeberg.org/NeilNjae/advent-of-code-24/src/branch/main/advent01/Main.hs\"&gt;Codeberg&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwaqbg/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwaqbg", "created":
        1733073567.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwfhja",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "CachooCoo",
        "can_mod_post": false, "created_utc": 1733075025.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_6pq8n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Posix Shell &amp; Utils]\n\nPosix shell and utils but I guess
        awk is doing most of the work.\n\n    #!/bin/sh\n\n    if [ $# -ne 1 ]; then\n        echo
        \"usage: solve &lt;filename&gt;\" 1&gt;&amp;2\n        exit 1\n    fi\n\n    input_file=$1\n\n    line1=$(
        awk ''{ print $1 }'' \"$input_file\" | sort | tr ''\\n'' '' '' )\n    line2=$(
        awk ''{ print $2 }'' \"$input_file\" | sort | tr ''\\n'' '' '' )\n    lines=$(
        printf \"%s\\n%s\" \"$line1\" \"$line2\" )\n\n    sorted_input=$( printf \"%s\"
        \"$lines\" | awk ''\n    NR % 2 != 0 {\n        for (i = 1; i &lt;= NF; i++)
        {\n                line[i] = $i\n        }\n    }\n    NR % 2 == 0 {\n        for
        (i = 1; i &lt;= NF; i++) {\n                printf(\"%d   %d\\n\", line[i],
        $i)\n        }\n    }'' )\n\n    result1=$( echo \"$sorted_input\" | awk ''\n    function
        abs(n) { return n &gt; 0 ? n : n * -1 }\n    { sum += abs($1 - $2) }\n    END
        { printf(\"%d\", sum) }'' )\n\n    result2=$( echo \"$lines\" | awk ''\n    NR
        == 1 { line1 = $0 }\n    NR == 2 {\n        for (i = 0; i &lt; NF; i++) {\n                occurrences[$i]++\n        }\n    }\n    END
        {\n        nnums = split(line1, line)\n        for (i = 1; i &lt;= nnums;
        i++) {\n                result += line[i] * occurrences[line[i]]\n        }\n        print
        result\n    }'' )\n\n    echo \"1: $result1\"\n    echo \"2: $result2\"",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Posix Shell
        &amp;amp; Utils]&lt;/p&gt;\n\n&lt;p&gt;Posix shell and utils but I guess awk
        is doing most of the work.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/sh\n\nif
        [ $# -ne 1 ]; then\n    echo &amp;quot;usage: solve &amp;lt;filename&amp;gt;&amp;quot;
        1&amp;gt;&amp;amp;2\n    exit 1\nfi\n\ninput_file=$1\n\nline1=$( awk &amp;#39;{
        print $1 }&amp;#39; &amp;quot;$input_file&amp;quot; | sort | tr &amp;#39;\\n&amp;#39;
        &amp;#39; &amp;#39; )\nline2=$( awk &amp;#39;{ print $2 }&amp;#39; &amp;quot;$input_file&amp;quot;
        | sort | tr &amp;#39;\\n&amp;#39; &amp;#39; &amp;#39; )\nlines=$( printf &amp;quot;%s\\n%s&amp;quot;
        &amp;quot;$line1&amp;quot; &amp;quot;$line2&amp;quot; )\n\nsorted_input=$(
        printf &amp;quot;%s&amp;quot; &amp;quot;$lines&amp;quot; | awk &amp;#39;\nNR
        % 2 != 0 {\n    for (i = 1; i &amp;lt;= NF; i++) {\n            line[i] =
        $i\n    }\n}\nNR % 2 == 0 {\n    for (i = 1; i &amp;lt;= NF; i++) {\n            printf(&amp;quot;%d   %d\\n&amp;quot;,
        line[i], $i)\n    }\n}&amp;#39; )\n\nresult1=$( echo &amp;quot;$sorted_input&amp;quot;
        | awk &amp;#39;\nfunction abs(n) { return n &amp;gt; 0 ? n : n * -1 }\n{ sum
        += abs($1 - $2) }\nEND { printf(&amp;quot;%d&amp;quot;, sum) }&amp;#39; )\n\nresult2=$(
        echo &amp;quot;$lines&amp;quot; | awk &amp;#39;\nNR == 1 { line1 = $0 }\nNR
        == 2 {\n    for (i = 0; i &amp;lt; NF; i++) {\n            occurrences[$i]++\n    }\n}\nEND
        {\n    nnums = split(line1, line)\n    for (i = 1; i &amp;lt;= nnums; i++)
        {\n            result += line[i] * occurrences[line[i]]\n    }\n    print
        result\n}&amp;#39; )\n\necho &amp;quot;1: $result1&amp;quot;\necho &amp;quot;2:
        $result2&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwfhja/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzwfhja", "created": 1733075025.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwgq3h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Select_From",
        "can_mod_post": false, "created_utc": 1733075404.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_f9pbxbd6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\nTried in C++ as something new. Did it as a conversation.  \nPart
        1: [Advent\\_of\\_Code/2024/Day 1/d01-easy.cpp at main \u00b7 SixFiveMil/Advent\\_of\\_Code](https://github.com/SixFiveMil/Advent_of_Code/blob/main/2024/Day%201/d01-easy.cpp)Part
        2: [Advent\\_of\\_Code/2024/Day 1/d01-hard.cpp at main \u00b7 SixFiveMil/Advent\\_of\\_Code](https://github.com/SixFiveMil/Advent_of_Code/blob/main/2024/Day%201/d01-hard.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;Tried
        in C++ as something new. Did it as a conversation.&lt;br/&gt;\nPart 1: &lt;a
        href=\"https://github.com/SixFiveMil/Advent_of_Code/blob/main/2024/Day%201/d01-easy.cpp\"&gt;Advent_of_Code/2024/Day
        1/d01-easy.cpp at main \u00b7 SixFiveMil/Advent_of_Code&lt;/a&gt;Part 2: &lt;a
        href=\"https://github.com/SixFiveMil/Advent_of_Code/blob/main/2024/Day%201/d01-hard.cpp\"&gt;Advent_of_Code/2024/Day
        1/d01-hard.cpp at main \u00b7 SixFiveMil/Advent_of_Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwgq3h/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwgq3h", "created":
        1733075404.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwirjy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Apollo_619",
        "can_mod_post": false, "created_utc": 1733076021.0, "send_replies": true,
        "parent_id": "t1_lzwgq3h", "score": 3, "author_fullname": "t2_yd0m8tw6i",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "You can use while (while (inputFile &gt;&gt; num1 &gt;&gt;
        num2) here, then you don''t need a stringstream.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;You can use while (while (inputFile &amp;gt;&amp;gt;
        num1 &amp;gt;&amp;gt; num2) here, then you don&amp;#39;t need a stringstream.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwirjy/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwirjy", "created":
        1733076021.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzwkan3", "id": "lzwkan3", "parent_id":
        "t1_lzwirjy", "depth": 2, "children": ["lzwkan3"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwhwnu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Opening_Kiwi6441",
        "can_mod_post": false, "created_utc": 1733075765.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_abbg16tk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Elixir\\]\n\nLets goooooo! [Part 1 and 2](https://github.com/anshchaturvedi/advent-of-code/blob/main/2024/day-01/sol.ex)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;p&gt;Lets
        goooooo! &lt;a href=\"https://github.com/anshchaturvedi/advent-of-code/blob/main/2024/day-01/sol.ex\"&gt;Part
        1 and 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwhwnu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwhwnu", "created":
        1733075765.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwiqz3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Mother_Somewhere_507",
        "can_mod_post": false, "created_utc": 1733076016.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_3qlqu65a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nHere''s my code written in Python :\n\n    a_list
        = []\n    b_list = []\n    compteur = 0\n    \n    with open(\"AOC_2024day1.txt\",\"r\",encoding=\"UTF-8\")
        as f:\n        for line in f:\n            a, b = line.split(\"  \")\n            a
        = int(a.strip())\n            b = int(b.strip())\n            a_list.append(a)\n            b_list.append(b)\n    \n    a_list.sort()\n    b_list.sort()\n    \n    i=
        0\n    somme = 0\n    for i in range(len(a_list)):\n        distance = abs(a_list[i]
        - b_list[i])\n        somme += distance\n    \n    print(\"La somme est\",somme)\n    \n    for
        num in a_list:\n        compteur += num * b_list.count(num)\n    \n    print(\"Le
        score de similitude est\",compteur)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s
        my code written in Python :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a_list = []\nb_list
        = []\ncompteur = 0\n\nwith open(&amp;quot;AOC_2024day1.txt&amp;quot;,&amp;quot;r&amp;quot;,encoding=&amp;quot;UTF-8&amp;quot;)
        as f:\n    for line in f:\n        a, b = line.split(&amp;quot;  &amp;quot;)\n        a
        = int(a.strip())\n        b = int(b.strip())\n        a_list.append(a)\n        b_list.append(b)\n\na_list.sort()\nb_list.sort()\n\ni=
        0\nsomme = 0\nfor i in range(len(a_list)):\n    distance = abs(a_list[i] -
        b_list[i])\n    somme += distance\n\nprint(&amp;quot;La somme est&amp;quot;,somme)\n\nfor
        num in a_list:\n    compteur += num * b_list.count(num)\n\nprint(&amp;quot;Le
        score de similitude est&amp;quot;,compteur)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwiqz3/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwiqz3", "created":
        1733076016.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzwp4on", "id": "lzwp4on", "parent_id":
        "t1_lzwiqz3", "depth": 1, "children": ["lzwp4on"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwk037",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "alexx109",
        "can_mod_post": false, "created_utc": 1733076410.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_3sxoposc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[Code here](https://github.com/alexcani/advent-of-code-2024/blob/master/src/days/day01.rs)\n\nO(n)
        solution for both parts taking into account the properties of the sorted lists,
        no histogramming.\n\n\\~1ms time for the full problem on my machine.\n\nAlso
        I have a nice infra set for reading the input (or using the example if the
        EXAMPLE env variable is set), parsing and setting a context that is passed
        to the solver function, automatically measuring execution time and reporting
        it along with the solution.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/alexcani/advent-of-code-2024/blob/master/src/days/day01.rs\"&gt;Code
        here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;O(n) solution for both parts taking into
        account the properties of the sorted lists, no histogramming.&lt;/p&gt;\n\n&lt;p&gt;~1ms
        time for the full problem on my machine.&lt;/p&gt;\n\n&lt;p&gt;Also I have
        a nice infra set for reading the input (or using the example if the EXAMPLE
        env variable is set), parsing and setting a context that is passed to the
        solver function, automatically measuring execution time and reporting it along
        with the solution.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwk037/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwk037", "created":
        1733076410.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733077761.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwm77m", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ZackArtz",
        "can_mod_post": false, "created_utc": 1733077085.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_wcd24", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[Code Here](https://github.com/zackartz/aoc2024/blob/main/src/bin/01.rs)\n\nPart
        two could be better, but part one runs in ~~184\u00b5s~~ 57\u00b5s on my machine
        which i am pretty happy about!", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/zackartz/aoc2024/blob/main/src/bin/01.rs\"&gt;Code
        Here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part two could be better, but part one
        runs in &lt;del&gt;184\u00b5s&lt;/del&gt; 57\u00b5s on my machine which i
        am pretty happy about!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwm77m/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwm77m", "created":
        1733077085.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733077950.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwmaex", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "syntax_erorr",
        "can_mod_post": false, "created_utc": 1733077112.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_3ewen", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: TypeScript\\]  \nPart 1\n\n    import { significantLocations
        } from ''./data'';\n    const fistCols: number[] = [];\n    const secondCols:
        number[] = [];\n    significantLocations.forEach((distance) =&gt; {\n    \u00a0
        const split = distance.split('' \u00a0 '');\n    \u00a0 fistCols.push(+split[0]);\n    \u00a0
        secondCols.push(+split[1]);\n    });\n    const firstColSorted = fistCols.sort();\n    const
        secondColSorted = secondCols.sort();\n    const total = firstColSorted.reduce((acc,
        val, index) =&gt; {\n    \u00a0 return acc += Math.abs(val - secondColSorted[index]);\n    },
        0)\n    console.log({ total });\n\nPart 2\n\n    import { significantLocations
        } from ''./data'';\n    \n    const totals: number[] = [];\n    const secondCols:
        string[] = [];\n    \n    significantLocations.forEach((distance) =&gt; {\n    \u00a0
        const split = distance.split('' \u00a0 '');\n    \u00a0 secondCols.push(split[1]);\n    });\n    \n    significantLocations.forEach((distance)
        =&gt; {\n    \u00a0 const split = distance.split('' \u00a0 '');\n    \u00a0
        const col1 = split[0];\n    \u00a0 const col2Contains = secondCols.filter((col2)
        =&gt; {\n    \u00a0 \u00a0 return +col1 === +col2;\n    \u00a0 });\n    \u00a0
        totals.push(col2Contains.length * +col1);\n    });\n    \n    const total
        = totals.reduce((acc, val) =&gt; {\n    \u00a0 return (acc += val);\n    },
        0);\n    \n    console.log({ total });", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: TypeScript]&lt;br/&gt;\nPart 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        { significantLocations } from &amp;#39;./data&amp;#39;;\nconst fistCols: number[]
        = [];\nconst secondCols: number[] = [];\nsignificantLocations.forEach((distance)
        =&amp;gt; {\n\u00a0 const split = distance.split(&amp;#39; \u00a0 &amp;#39;);\n\u00a0
        fistCols.push(+split[0]);\n\u00a0 secondCols.push(+split[1]);\n});\nconst
        firstColSorted = fistCols.sort();\nconst secondColSorted = secondCols.sort();\nconst
        total = firstColSorted.reduce((acc, val, index) =&amp;gt; {\n\u00a0 return
        acc += Math.abs(val - secondColSorted[index]);\n}, 0)\nconsole.log({ total
        });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        { significantLocations } from &amp;#39;./data&amp;#39;;\n\nconst totals: number[]
        = [];\nconst secondCols: string[] = [];\n\nsignificantLocations.forEach((distance)
        =&amp;gt; {\n\u00a0 const split = distance.split(&amp;#39; \u00a0 &amp;#39;);\n\u00a0
        secondCols.push(split[1]);\n});\n\nsignificantLocations.forEach((distance)
        =&amp;gt; {\n\u00a0 const split = distance.split(&amp;#39; \u00a0 &amp;#39;);\n\u00a0
        const col1 = split[0];\n\u00a0 const col2Contains = secondCols.filter((col2)
        =&amp;gt; {\n\u00a0 \u00a0 return +col1 === +col2;\n\u00a0 });\n\u00a0 totals.push(col2Contains.length
        * +col1);\n});\n\nconst total = totals.reduce((acc, val) =&amp;gt; {\n\u00a0
        return (acc += val);\n}, 0);\n\nconsole.log({ total });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwmaex/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwmaex", "created":
        1733077112.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzwmm01", "id": "lzwmm01", "parent_id":
        "t1_lzwmaex", "depth": 1, "children": ["lzwmm01"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwmp7w",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Pagie7",
        "can_mod_post": false, "created_utc": 1733077236.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_7wlg6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: R\\]\n\n[Code here](https://github.com/paigeremde/AoC_2024/blob/main/Day01.Rmd)\n\nI
        wanted to do some sort of map within the tibble but I ended up resorting to
        a for loop. Would love to know if someone had a more R-like solution.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: R]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/paigeremde/AoC_2024/blob/main/Day01.Rmd\"&gt;Code
        here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I wanted to do some sort of map within
        the tibble but I ended up resorting to a for loop. Would love to know if someone
        had a more R-like solution.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwmp7w/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwmp7w", "created":
        1733077236.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwow50",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Naturage",
        "can_mod_post": false, "created_utc": 1733077904.0, "send_replies": true,
        "parent_id": "t1_lzwmp7w", "score": 3, "author_fullname": "t2_ov1hq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "For part 2, since you''re working in tibbles, inner join is a neat way to
        do the \"get all copies in list 2 for every copy in list 1\" step. Of course,
        it''s not ideal if both lists are huge - in which case you''d count unique
        values first and multiply the counts.\n\nMy solution''s somewhere below -
        I generally recommend looking through other R solutions when available; always
        interesting to hunt for alternative ways to solve same issue!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;For part 2, since you&amp;#39;re working
        in tibbles, inner join is a neat way to do the &amp;quot;get all copies in
        list 2 for every copy in list 1&amp;quot; step. Of course, it&amp;#39;s not
        ideal if both lists are huge - in which case you&amp;#39;d count unique values
        first and multiply the counts.&lt;/p&gt;\n\n&lt;p&gt;My solution&amp;#39;s
        somewhere below - I generally recommend looking through other R solutions
        when available; always interesting to hunt for alternative ways to solve same
        issue!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwow50/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwow50", "created":
        1733077904.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_lzwpv2h", "id": "lzwpv2h", "parent_id":
        "t1_lzwmp7w", "depth": 1, "children": ["lzwpv2h", "lzwpfgk", "lzx05xr"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwn130", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "DiligentWrongdoer632",
        "can_mod_post": false, "created_utc": 1733077336.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_168b83l89s",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: OCaml\\]\n\n[https://github.com/Math3mat1x/advent-of-code-24/blob/master/day\\_one.ml](https://github.com/Math3mat1x/advent-of-code-24/blob/master/day_one.ml)\n\nAny
        recommandations?", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        OCaml]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Math3mat1x/advent-of-code-24/blob/master/day_one.ml\"&gt;https://github.com/Math3mat1x/advent-of-code-24/blob/master/day_one.ml&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Any
        recommandations?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwn130/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwn130", "created":
        1733077336.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzyljj5", "id": "lzyljj5", "parent_id":
        "t1_lzwn130", "depth": 1, "children": ["lzyljj5"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwy0pm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Chib",
        "can_mod_post": false, "created_utc": 1733080650.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_3h5t6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: R\\]\n\nPart 2:\n\n    library(data.table)  \n    input &lt;-
        fread(text = \"\") # Read directly into a data.table  \n    input[input, on
        = .(V1 == V2), nomatch = NULL, mult = \"all\", sum(x.V1)]", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: R]&lt;/p&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;library(data.table)  \ninput &amp;lt;-
        fread(text = &amp;quot;&amp;quot;) # Read directly into a data.table  \ninput[input,
        on = .(V1 == V2), nomatch = NULL, mult = &amp;quot;all&amp;quot;, sum(x.V1)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwy0pm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwy0pm", "created":
        1733080650.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx0451",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "hikingsticks",
        "can_mod_post": false, "created_utc": 1733081283.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_15zzkw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n  \nUsed slice objects instead of split(\"   \"),
        because I just read about them and wanted to try them out.\n\nAlso the Counter
        object instead of .count() took Part 2 from 11 ms to 0.5 ms, which is a nice
        improvement. My aim this year is to use less common approaches to discover
        new bits of Python, and see what performance gains can be made that I''ll
        hopefully incorporate into my daily usage.\n\n    import time\n    from collections
        import Counter\n    \n    t0 = time.perf_counter()\n    \n    INPUT = \"input\"\n    \n    #
        Using slice objects is more verbose, and roughly the same speed as using .split(\"
        \u00a0 \")\n    if INPUT == \"example\":\n    \u00a0 \u00a0num_1 = slice(0,
        1)\n    \u00a0 \u00a0num_2 = slice(4, 5)\n    elif INPUT == \"input\":\n    \u00a0
        \u00a0num_1 = slice(0, 5)\n    \u00a0 \u00a0num_2 = slice(8, 13)\n    else:\n    \u00a0
        \u00a0raise Exception(\"Unrecognized input file\")\n    \n    list_1, list_2
        = [], []\n    \n    # .read().splitlines() proved to be slightly faster (0.02
        ms) than .splitlines() or looping over f, which surprised me\n    with open(f\"day_1/{INPUT}.txt\",
        \"r\") as f:\n    \u00a0 \u00a0for line in f.read().splitlines():\n    \u00a0
        \u00a0 \u00a0 list_1.append(int(line[num_1]))\n    \u00a0 \u00a0 \u00a0 list_2.append(int(line[num_2]))\n    \n    list_1.sort()\n    list_2.sort()\n    \n    diff
        = 0\n    \n    for num_1, num_2 in zip(list_1, list_2):\n    \u00a0 \u00a0diff
        += abs(num_1 - num_2)\n    \n    t1 = time.perf_counter()\n    print(f\"Part
        One: {diff}, took {(t1 - t0) * 1000:.3f} ms\")\n    \n    # Using a Counter
        object over .count() improves speed by ~20x\n    my_counter = Counter(list_2)\n    \n    total
        = 0\n    for num in list_1:\n    \u00a0 \u00a0# Here, avoiding 0 multiplication
        saves ~0.4 ms, even with the additional assignment to \"frequency\" variable\n    \u00a0
        \u00a0frequency = my_counter[num]\n    \u00a0 \u00a0if frequency:\n    \u00a0
        \u00a0 \u00a0 total += (num * frequency) \n    \n    print(f\"Part Two: {total},
        took {(time.perf_counter() - t1) * 1000:.3f} ms\")", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Used slice
        objects instead of split(&amp;quot;   &amp;quot;), because I just read about
        them and wanted to try them out.&lt;/p&gt;\n\n&lt;p&gt;Also the Counter object
        instead of .count() took Part 2 from 11 ms to 0.5 ms, which is a nice improvement.
        My aim this year is to use less common approaches to discover new bits of
        Python, and see what performance gains can be made that I&amp;#39;ll hopefully
        incorporate into my daily usage.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        time\nfrom collections import Counter\n\nt0 = time.perf_counter()\n\nINPUT
        = &amp;quot;input&amp;quot;\n\n# Using slice objects is more verbose, and
        roughly the same speed as using .split(&amp;quot; \u00a0 &amp;quot;)\nif INPUT
        == &amp;quot;example&amp;quot;:\n\u00a0 \u00a0num_1 = slice(0, 1)\n\u00a0
        \u00a0num_2 = slice(4, 5)\nelif INPUT == &amp;quot;input&amp;quot;:\n\u00a0
        \u00a0num_1 = slice(0, 5)\n\u00a0 \u00a0num_2 = slice(8, 13)\nelse:\n\u00a0
        \u00a0raise Exception(&amp;quot;Unrecognized input file&amp;quot;)\n\nlist_1,
        list_2 = [], []\n\n# .read().splitlines() proved to be slightly faster (0.02
        ms) than .splitlines() or looping over f, which surprised me\nwith open(f&amp;quot;day_1/{INPUT}.txt&amp;quot;,
        &amp;quot;r&amp;quot;) as f:\n\u00a0 \u00a0for line in f.read().splitlines():\n\u00a0
        \u00a0 \u00a0 list_1.append(int(line[num_1]))\n\u00a0 \u00a0 \u00a0 list_2.append(int(line[num_2]))\n\nlist_1.sort()\nlist_2.sort()\n\ndiff
        = 0\n\nfor num_1, num_2 in zip(list_1, list_2):\n\u00a0 \u00a0diff += abs(num_1
        - num_2)\n\nt1 = time.perf_counter()\nprint(f&amp;quot;Part One: {diff}, took
        {(t1 - t0) * 1000:.3f} ms&amp;quot;)\n\n# Using a Counter object over .count()
        improves speed by ~20x\nmy_counter = Counter(list_2)\n\ntotal = 0\nfor num
        in list_1:\n\u00a0 \u00a0# Here, avoiding 0 multiplication saves ~0.4 ms,
        even with the additional assignment to &amp;quot;frequency&amp;quot; variable\n\u00a0
        \u00a0frequency = my_counter[num]\n\u00a0 \u00a0if frequency:\n\u00a0 \u00a0
        \u00a0 total += (num * frequency) \n\nprint(f&amp;quot;Part Two: {total},
        took {(time.perf_counter() - t1) * 1000:.3f} ms&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx0451/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx0451", "created":
        1733081283.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 7, "name": "t1_lzxcx1w", "id": "lzxcx1w", "parent_id":
        "t1_lzx0451", "depth": 1, "children": ["lzxcx1w", "lzzjnc9", "lzzsfa3"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1733085527.0,
        "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzx2iql", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "frightspear_ps5",
        "can_mod_post": false, "created_utc": 1733082018.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_hwxjvjrd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: C++]\n\nEDIT: moved code to [paste](https://topaz.github.io/paste/#XQAAAQD/CgAAAAAAAAARmknGRw8TogB3OxjQrcFxrqzF2Mz9910CNX7TRnplMWf2jleZafhFNV6Ay0/2kD4Xw+Jq0n6EDFTh9mCNzgcCvnMnYm0UcspPY/xgVukNFnUSFNDDDi3a33lAkgXesrNZsdqCHxNo4id14eTeaK5u9UQPyKkGTCX5qOuOHcjegxwjYasTWd6NnBkA9sT+nOPA40cHRyk+GBPDsvntZ6QF1+DATnE94lj66VgomwD1CLsBWA551XiWkoCaNypZXme4jjMJ4pnRF7/GFmam7H+VsKkWBGf/c/g8OjO9vWU30c4y08/rhnZUKANvTR1cLn6WCPJ1ScXj+gDhBE7J8dGABNCOp3PvjdaBkV7MRgpokgr0zaV7qdUqnzVGwHeoTVqhVNTV/3vTSfoNZa8Dqj/aMBQNDewaxj33y3G2K/z1wMV5yQnUOe1+wAQgKUC8mSeX59IrrktH1tGjlSXs9zGWXAlkmekDCVGaP2IO3h29nl9hA21Khb4viEzXqHmgJBCWUtOD2akp3G0+3T13d0oR+Gdu6qWFrJRGjtELxJLcD8RbxPVUk2/AUMAWxZ2bYuVzIb0D2Ki6iKiZnwLaY5tEr0rbTbNIEL3Pz0iBpepNSoL6hzyRykPFGp3/a0OFH2EiJKiNujZFeqIGPpEpYNvqkl5upeMmd8MPR9rHj6ipXVfySjGXneSqKs8QwqDBq6DeRxFqdsAEYS59hfbVscvrccLSReaoCG2KmjOLhhrYduQKzCJW1hCqBaMbM/kL5QjK+xrxuq5e84lL9jSWXNHtx3/hRG7wFzU6kMYwR+9+1pI9EsRgTuxwWhDA3Ccy6Hw3oeoH1WCHANzJiMit/oXYdSiL8gh1nrcKt1cgG1G4ZwLYvfesOvchUu+a9rQea+gPllFjE2aIus60G04LWXwM8Fd3TQYyB3S6hc+aHJSHUxxCMlpGlKSLeHXP3uNcGow9U5SlUdVytU2WtaWIsbKCvVSa/lhJXFP8U24U8hIzwJYcrYz0b2lqa24q1O70Ve2+zhCnvaQXbVyyETHmMp/Z8pb04MM5p81jn2AMgYPx12wxoKaGyPFS8R7NlNuFjpvUph4hp3lLEsLDNQ6fqRWOFgghJNzSr7/QXbs09PBANxt4b/5Y2g+KA1wab9rJRtW6wScj6dY+jHIkI7zcQivuW/Q6mJunZQWepfYe3BlAyzcJ/TsSMkv+nBXq)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;EDIT:
        moved code to &lt;a href=\"https://topaz.github.io/paste/#XQAAAQD/CgAAAAAAAAARmknGRw8TogB3OxjQrcFxrqzF2Mz9910CNX7TRnplMWf2jleZafhFNV6Ay0/2kD4Xw+Jq0n6EDFTh9mCNzgcCvnMnYm0UcspPY/xgVukNFnUSFNDDDi3a33lAkgXesrNZsdqCHxNo4id14eTeaK5u9UQPyKkGTCX5qOuOHcjegxwjYasTWd6NnBkA9sT+nOPA40cHRyk+GBPDsvntZ6QF1+DATnE94lj66VgomwD1CLsBWA551XiWkoCaNypZXme4jjMJ4pnRF7/GFmam7H+VsKkWBGf/c/g8OjO9vWU30c4y08/rhnZUKANvTR1cLn6WCPJ1ScXj+gDhBE7J8dGABNCOp3PvjdaBkV7MRgpokgr0zaV7qdUqnzVGwHeoTVqhVNTV/3vTSfoNZa8Dqj/aMBQNDewaxj33y3G2K/z1wMV5yQnUOe1+wAQgKUC8mSeX59IrrktH1tGjlSXs9zGWXAlkmekDCVGaP2IO3h29nl9hA21Khb4viEzXqHmgJBCWUtOD2akp3G0+3T13d0oR+Gdu6qWFrJRGjtELxJLcD8RbxPVUk2/AUMAWxZ2bYuVzIb0D2Ki6iKiZnwLaY5tEr0rbTbNIEL3Pz0iBpepNSoL6hzyRykPFGp3/a0OFH2EiJKiNujZFeqIGPpEpYNvqkl5upeMmd8MPR9rHj6ipXVfySjGXneSqKs8QwqDBq6DeRxFqdsAEYS59hfbVscvrccLSReaoCG2KmjOLhhrYduQKzCJW1hCqBaMbM/kL5QjK+xrxuq5e84lL9jSWXNHtx3/hRG7wFzU6kMYwR+9+1pI9EsRgTuxwWhDA3Ccy6Hw3oeoH1WCHANzJiMit/oXYdSiL8gh1nrcKt1cgG1G4ZwLYvfesOvchUu+a9rQea+gPllFjE2aIus60G04LWXwM8Fd3TQYyB3S6hc+aHJSHUxxCMlpGlKSLeHXP3uNcGow9U5SlUdVytU2WtaWIsbKCvVSa/lhJXFP8U24U8hIzwJYcrYz0b2lqa24q1O70Ve2+zhCnvaQXbVyyETHmMp/Z8pb04MM5p81jn2AMgYPx12wxoKaGyPFS8R7NlNuFjpvUph4hp3lLEsLDNQ6fqRWOFgghJNzSr7/QXbs09PBANxt4b/5Y2g+KA1wab9rJRtW6wScj6dY+jHIkI7zcQivuW/Q6mJunZQWepfYe3BlAyzcJ/TsSMkv+nBXq\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx2iql/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx2iql", "created":
        1733082018.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxauh7", "id": "lzxauh7", "parent_id":
        "t1_lzx2iql", "depth": 1, "children": ["lzxauh7"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx3cfm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Lord_Of_Millipedes",
        "can_mod_post": false, "created_utc": 1733082269.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_2lj55qal", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Go\\]  \nDoing aoc for the first time to learn a new language\n\n[https://github.com/Quollveth/AdventOfGode/blob/main/day1/day1.go](https://github.com/Quollveth/AdventOfGode/blob/main/day1/day1.go)\n\nalso
        made a little util to get read the input be split as i assume it will be used
        for all days\n\n[https://github.com/Quollveth/AdventOfGode/blob/main/util/reader.go](https://github.com/Quollveth/AdventOfGode/blob/main/util/reader.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;br/&gt;\nDoing
        aoc for the first time to learn a new language&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Quollveth/AdventOfGode/blob/main/day1/day1.go\"&gt;https://github.com/Quollveth/AdventOfGode/blob/main/day1/day1.go&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;also
        made a little util to get read the input be split as i assume it will be used
        for all days&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Quollveth/AdventOfGode/blob/main/util/reader.go\"&gt;https://github.com/Quollveth/AdventOfGode/blob/main/util/reader.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx3cfm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx3cfm", "created":
        1733082269.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzxk2f9", "id": "lzxk2f9", "parent_id":
        "t1_lzx3cfm", "depth": 1, "children": ["lzxk2f9", "lzxn4z2"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx5x7o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "GiraffeFire",
        "can_mod_post": false, "created_utc": 1733083059.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_kud2q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Elixir\\]\n\n    defmodule Advent.Year2024.Day01 do\n      defp
        parse_lines_into_lists(args) do\n        args\n        |&gt; String.trim()\n        |&gt;
        String.split(\"\\n\")\n        |&gt; Enum.map(fn line -&gt;\n          [a,
        b] = String.split(line, \"   \")\n    \n          [String.to_integer(a), String.to_integer(b)]\n        end)\n        |&gt;
        Enum.reduce([[], []], fn [a, b], [as, bs] -&gt;\n          [[a | as], [b |
        bs]]\n        end)\n      end\n    \n      def part1(args) do\n        args\n        |&gt;
        parse_lines_into_lists()\n        |&gt; Enum.map(&amp;Enum.sort/1)\n        |&gt;
        Enum.zip()\n        |&gt; Enum.reduce(0, fn {a, b}, acc -&gt;\n          acc
        + abs(a - b)\n        end)\n      end\n    \n      def part2(args) do\n        [left,
        right] = parse_lines_into_lists(args)\n    \n        right_count_by_number
        =\n          Enum.reduce(right, %{}, fn i, acc -&gt;\n            Map.update(acc,
        i, 1, &amp;(&amp;1 + 1))\n          end)\n    \n        Enum.reduce(left,
        0, fn i, acc -&gt;\n          acc + i * Map.get(right_count_by_number, i,
        0)\n        end)\n      end\n    end", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        Advent.Year2024.Day01 do\n  defp parse_lines_into_lists(args) do\n    args\n    |&amp;gt;
        String.trim()\n    |&amp;gt; String.split(&amp;quot;\\n&amp;quot;)\n    |&amp;gt;
        Enum.map(fn line -&amp;gt;\n      [a, b] = String.split(line, &amp;quot;   &amp;quot;)\n\n      [String.to_integer(a),
        String.to_integer(b)]\n    end)\n    |&amp;gt; Enum.reduce([[], []], fn [a,
        b], [as, bs] -&amp;gt;\n      [[a | as], [b | bs]]\n    end)\n  end\n\n  def
        part1(args) do\n    args\n    |&amp;gt; parse_lines_into_lists()\n    |&amp;gt;
        Enum.map(&amp;amp;Enum.sort/1)\n    |&amp;gt; Enum.zip()\n    |&amp;gt; Enum.reduce(0,
        fn {a, b}, acc -&amp;gt;\n      acc + abs(a - b)\n    end)\n  end\n\n  def
        part2(args) do\n    [left, right] = parse_lines_into_lists(args)\n\n    right_count_by_number
        =\n      Enum.reduce(right, %{}, fn i, acc -&amp;gt;\n        Map.update(acc,
        i, 1, &amp;amp;(&amp;amp;1 + 1))\n      end)\n\n    Enum.reduce(left, 0, fn
        i, acc -&amp;gt;\n      acc + i * Map.get(right_count_by_number, i, 0)\n    end)\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx5x7o/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx5x7o", "created":
        1733083059.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733088281.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxab8v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ADMINISTATOR_CYRUS",
        "can_mod_post": false, "created_utc": 1733084393.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_2qq8r0d0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python, Rust\\]\n\nSince I''m in the process of learning rust
        I could not be bothered to figure out reading that file properly, so I did
        it in python instad.\n\n[https://github.com/EnderNon/aoc-solutions/tree/main/2024/day1](https://github.com/EnderNon/aoc-solutions/tree/main/2024/day1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python, Rust]&lt;/p&gt;\n\n&lt;p&gt;Since
        I&amp;#39;m in the process of learning rust I could not be bothered to figure
        out reading that file properly, so I did it in python instad.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/EnderNon/aoc-solutions/tree/main/2024/day1\"&gt;https://github.com/EnderNon/aoc-solutions/tree/main/2024/day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxab8v/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxab8v", "created":
        1733084393.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzy6w17", "id": "lzy6w17", "parent_id":
        "t1_lzxab8v", "depth": 1, "children": ["lzy6w17", "lzxj8xj"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxgnjw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Pentracchiano",
        "can_mod_post": false, "created_utc": 1733086332.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_g2co5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]  \nFirst time writing Rust: feedback welcome. [Github
        link](https://github.com/Pentracchiano/advent-of-code-rust-2024/blob/main/src/bin/01.rs)\n\n    \u00a0
        \u00a0 fn parse_input(input: &amp;str) -&gt; (Vec&lt;u32&gt;, Vec&lt;u32&gt;)
        {\n    \u00a0 \u00a0 \u00a0 \u00a0 let mut v1 = Vec::new();\n    \u00a0 \u00a0
        \u00a0 \u00a0 let mut v2 = Vec::new();\n    \u00a0 \u00a0 \u00a0 \u00a0 for
        line in input.lines() {\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 let
        mut parts = line.split_whitespace();\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 v1.push(parts.next().unwrap().parse().unwrap());\n    \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 v2.push(parts.next().unwrap().parse().unwrap());\n    \u00a0
        \u00a0 \u00a0 \u00a0 }\n    \u00a0 \u00a0 \u00a0 \u00a0 (v1, v2)\n    \u00a0
        \u00a0 }\n    \u00a0 \u00a0 \n    \u00a0 \u00a0 pub fn part_one(input: &amp;str)
        -&gt; Option&lt;u32&gt; {\n    \u00a0 \u00a0 \u00a0 \u00a0 let (mut v1, mut
        v2) = parse_input(input);\n    \u00a0 \u00a0 \u00a0 \u00a0 v1.sort();\n    \u00a0
        \u00a0 \u00a0 \u00a0 v2.sort();\n    \u00a0 \u00a0 \u00a0 \u00a0 Some(v1\n    \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .iter()\n    \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 .zip(v2)\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .map(|(a,
        b)| a.abs_diff(b))\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .sum())\n    \u00a0
        \u00a0 }\n    \u00a0 \u00a0 \n    \u00a0 \u00a0 pub fn part_two(input: &amp;str)
        -&gt; Option&lt;u32&gt; {\n    \u00a0 \u00a0 \u00a0 \u00a0 let (v1, v2) =
        parse_input(input);\n    \u00a0 \u00a0 \u00a0 \u00a0 let mut counter = std::collections::HashMap::new();\n    \u00a0
        \u00a0 \n    \u00a0 \u00a0 \u00a0 \u00a0 for number in v2 {\n    \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 *counter.entry(number).or_insert(0) += 1;\n    \u00a0
        \u00a0 \u00a0 \u00a0 }\n    \u00a0 \u00a0 \n    \u00a0 \u00a0 \u00a0 \u00a0
        Some(v1.iter()\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .map(|number|
        {\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 match counter.get(number)
        {\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        Some(count) =&gt; number * count,\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 None =&gt; 0,\n    \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 })\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .sum())\n    \u00a0
        \u00a0 }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;br/&gt;\nFirst time writing Rust: feedback welcome. &lt;a href=\"https://github.com/Pentracchiano/advent-of-code-rust-2024/blob/main/src/bin/01.rs\"&gt;Github
        link&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u00a0 \u00a0 fn parse_input(input:
        &amp;amp;str) -&amp;gt; (Vec&amp;lt;u32&amp;gt;, Vec&amp;lt;u32&amp;gt;) {\n\u00a0
        \u00a0 \u00a0 \u00a0 let mut v1 = Vec::new();\n\u00a0 \u00a0 \u00a0 \u00a0
        let mut v2 = Vec::new();\n\u00a0 \u00a0 \u00a0 \u00a0 for line in input.lines()
        {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 let mut parts = line.split_whitespace();\n\u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 v1.push(parts.next().unwrap().parse().unwrap());\n\u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 v2.push(parts.next().unwrap().parse().unwrap());\n\u00a0
        \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 (v1, v2)\n\u00a0 \u00a0
        }\n\u00a0 \u00a0 \n\u00a0 \u00a0 pub fn part_one(input: &amp;amp;str) -&amp;gt;
        Option&amp;lt;u32&amp;gt; {\n\u00a0 \u00a0 \u00a0 \u00a0 let (mut v1, mut
        v2) = parse_input(input);\n\u00a0 \u00a0 \u00a0 \u00a0 v1.sort();\n\u00a0
        \u00a0 \u00a0 \u00a0 v2.sort();\n\u00a0 \u00a0 \u00a0 \u00a0 Some(v1\n\u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .iter()\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 .zip(v2)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .map(|(a, b)| a.abs_diff(b))\n\u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .sum())\n\u00a0 \u00a0 }\n\u00a0 \u00a0
        \n\u00a0 \u00a0 pub fn part_two(input: &amp;amp;str) -&amp;gt; Option&amp;lt;u32&amp;gt;
        {\n\u00a0 \u00a0 \u00a0 \u00a0 let (v1, v2) = parse_input(input);\n\u00a0
        \u00a0 \u00a0 \u00a0 let mut counter = std::collections::HashMap::new();\n\u00a0
        \u00a0 \n\u00a0 \u00a0 \u00a0 \u00a0 for number in v2 {\n\u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 *counter.entry(number).or_insert(0) += 1;\n\u00a0 \u00a0
        \u00a0 \u00a0 }\n\u00a0 \u00a0 \n\u00a0 \u00a0 \u00a0 \u00a0 Some(v1.iter()\n\u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .map(|number| {\n\u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 match counter.get(number) {\n\u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Some(count) =&amp;gt; number
        * count,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        None =&amp;gt; 0,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        }\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 })\n\u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 .sum())\n\u00a0 \u00a0 }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxgnjw/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxgnjw", "created":
        1733086332.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxhngc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Goldman7911",
        "can_mod_post": false, "created_utc": 1733086637.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_aaic6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Java\\]\n\n    package advent2024;\n    \n    \n    import java.io.IOException;\n    import
        java.nio.file.Files;\n    import java.nio.file.Paths;\n    import java.util.*;\n    \n    \n    public
        class Day1 {\n    \n    \n      public static void main(String[] args) throws
        IOException {\n        var file = Files.readAllLines(Paths.get(\"src/main/java/advent2024/input.txt\"));\n        var
        list1 = new ArrayList&lt;Integer&gt;();\n        var list2 = new ArrayList&lt;Integer&gt;();\n        //
        Populate the lists\n        file.forEach(\n            l -&gt; {\n              var
        split = l.split(\"   \");\n              list1.add(Integer.parseInt(split[0]));\n              list2.add(Integer.parseInt(split[1]));\n            });\n    \n    \n        //
        order\n        list1.sort(Comparator.naturalOrder());\n        list2.sort(Comparator.naturalOrder());\n    \n    \n        //
        Part 1\n        Integer result1 = 0;\n        for (int i = 0; i &lt; list1.size();
        i++) {\n          result1 += (Math.abs(list1.get(i) - list2.get(i)));\n        }\n        System.out.println(\"RESULTADO
        PARTE 1: \" + result1);\n    \n    \n        // Part 2\n        var ocurrences
        = countOccurrences(list2);\n        Integer result2 = 0;\n        for (Integer
        i : list1) {\n          if (ocurrences.containsKey(i)){\n            result2
        += i * ocurrences.get(i);\n          }\n        }\n    \n    \n        System.out.println(\"RESULTADO
        PARTE 2: \" + result2);\n      }\n    \n    \n      public static Map&lt;Integer,
        Integer&gt; countOccurrences(List&lt;Integer&gt; list) {\n        Map&lt;Integer,
        Integer&gt; countMap = new HashMap&lt;&gt;();\n        for (Integer number
        : list) {\n          countMap.put(number, countMap.getOrDefault(number, 0)
        + 1);\n        }\n        return countMap;\n      }\n    }", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Java]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        advent2024;\n\n\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport
        java.nio.file.Paths;\nimport java.util.*;\n\n\npublic class Day1 {\n\n\n  public
        static void main(String[] args) throws IOException {\n    var file = Files.readAllLines(Paths.get(&amp;quot;src/main/java/advent2024/input.txt&amp;quot;));\n    var
        list1 = new ArrayList&amp;lt;Integer&amp;gt;();\n    var list2 = new ArrayList&amp;lt;Integer&amp;gt;();\n    //
        Populate the lists\n    file.forEach(\n        l -&amp;gt; {\n          var
        split = l.split(&amp;quot;   &amp;quot;);\n          list1.add(Integer.parseInt(split[0]));\n          list2.add(Integer.parseInt(split[1]));\n        });\n\n\n    //
        order\n    list1.sort(Comparator.naturalOrder());\n    list2.sort(Comparator.naturalOrder());\n\n\n    //
        Part 1\n    Integer result1 = 0;\n    for (int i = 0; i &amp;lt; list1.size();
        i++) {\n      result1 += (Math.abs(list1.get(i) - list2.get(i)));\n    }\n    System.out.println(&amp;quot;RESULTADO
        PARTE 1: &amp;quot; + result1);\n\n\n    // Part 2\n    var ocurrences = countOccurrences(list2);\n    Integer
        result2 = 0;\n    for (Integer i : list1) {\n      if (ocurrences.containsKey(i)){\n        result2
        += i * ocurrences.get(i);\n      }\n    }\n\n\n    System.out.println(&amp;quot;RESULTADO
        PARTE 2: &amp;quot; + result2);\n  }\n\n\n  public static Map&amp;lt;Integer,
        Integer&amp;gt; countOccurrences(List&amp;lt;Integer&amp;gt; list) {\n    Map&amp;lt;Integer,
        Integer&amp;gt; countMap = new HashMap&amp;lt;&amp;gt;();\n    for (Integer
        number : list) {\n      countMap.put(number, countMap.getOrDefault(number,
        0) + 1);\n    }\n    return countMap;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxhngc/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxhngc", "created":
        1733086637.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxjlud",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Monofu",
        "can_mod_post": false, "created_utc": 1733087238.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_70x9t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Scala]\n\n[paste](https://topaz.github.io/paste/#XQAAAQDOAwAAAAAAAAA0m0pnuFI8c/eR0NbCke+c7fQl8UlY95fFg5r2ppMX9BM2jmr190wXlVz48eW1jJkN6Far3fRldQPxT7wy9PUrquVY0nXcI8T+2xLKkdodbin1Xj16AXWq8terKyN5kyjxG1skoTKbHFgNbtMBpEujEC+PpcKOjk8XfhrsXn/n9NZmw94/gg/GmaKnLASvOM8QmGrNwNXpyUibxOqH44GoF/g6OLpZ/1nZG5X2mr/btbbn8S94B/9OdPf2J6W6iFmIfLMMhapDFaplgdDInTPL5KTXdNDX9D9Tw1b+UdahVg3hoKfJYwsUtDaAFERiHN53szy+L1elupKH3KYiAZjhE6Pq2MgPEMiP8f/e/Ht/qzOQLfwVwFHql02UtOeKhtaxlTtIzJrNUZ61jFCiJmhJXymAk9tw08adWDl+8O7AvdOqEYLP3k7gEToQtnNwwU3OZKvBSOftDvtQDE3S7a2RJN7tA3Fh1wahvI/WTR+TDCd26HdxvkvPWZbhxzExabdNP6dNNNaqEvMII0sjp1U2XY1cmZI5z8lhFqESC2TD6IRItlfEU1l9xgcYLs/nrKje2Mkj95XOmaphZZN2U4MhMAk6X1KM0IXRlZJCBbFs5AKnmvWI9bz25NYbPJl2fkHhhDjS/HA3z0qznHRYZbro/Yj8nDDiY7w1fOkM9Un9LPYv//8hkLqj6nijB//rePQ5)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Scala]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDOAwAAAAAAAAA0m0pnuFI8c/eR0NbCke+c7fQl8UlY95fFg5r2ppMX9BM2jmr190wXlVz48eW1jJkN6Far3fRldQPxT7wy9PUrquVY0nXcI8T+2xLKkdodbin1Xj16AXWq8terKyN5kyjxG1skoTKbHFgNbtMBpEujEC+PpcKOjk8XfhrsXn/n9NZmw94/gg/GmaKnLASvOM8QmGrNwNXpyUibxOqH44GoF/g6OLpZ/1nZG5X2mr/btbbn8S94B/9OdPf2J6W6iFmIfLMMhapDFaplgdDInTPL5KTXdNDX9D9Tw1b+UdahVg3hoKfJYwsUtDaAFERiHN53szy+L1elupKH3KYiAZjhE6Pq2MgPEMiP8f/e/Ht/qzOQLfwVwFHql02UtOeKhtaxlTtIzJrNUZ61jFCiJmhJXymAk9tw08adWDl+8O7AvdOqEYLP3k7gEToQtnNwwU3OZKvBSOftDvtQDE3S7a2RJN7tA3Fh1wahvI/WTR+TDCd26HdxvkvPWZbhxzExabdNP6dNNNaqEvMII0sjp1U2XY1cmZI5z8lhFqESC2TD6IRItlfEU1l9xgcYLs/nrKje2Mkj95XOmaphZZN2U4MhMAk6X1KM0IXRlZJCBbFs5AKnmvWI9bz25NYbPJl2fkHhhDjS/HA3z0qznHRYZbro/Yj8nDDiY7w1fOkM9Un9LPYv//8hkLqj6nijB//rePQ5\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxjlud/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxjlud", "created":
        1733087238.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxk8in",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "CrAzYmEtAlHeAd1",
        "can_mod_post": false, "created_utc": 1733087429.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_8ctzo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[You can find my full answer here](https://github.com/CalSimmon/advent-of-code/blob/main/2024/src/days/day01.rs)\n\nNice
        simple one to start the month.  I was hoping I could find a simpler way to
        find the answer for part one, but I ended up just going with split, sort,
        and compare.  Once that was done, I created a counter for the second map and
        then iterated through to find the frequency of each location in the first
        map.  5ms runtime.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/CalSimmon/advent-of-code/blob/main/2024/src/days/day01.rs\"&gt;You
        can find my full answer here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nice simple one
        to start the month.  I was hoping I could find a simpler way to find the answer
        for part one, but I ended up just going with split, sort, and compare.  Once
        that was done, I created a counter for the second map and then iterated through
        to find the frequency of each location in the first map.  5ms runtime.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxk8in/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxk8in", "created":
        1733087429.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733090435.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxrzxz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Bioinfomagico",
        "can_mod_post": false, "created_utc": 1733089886.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_6m538p57", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Haskell\\]  \nTrying Haskell this year\u2014feedback is welcome!\n\n\n    import
        System.Environment\n    import Data.List (sort, group)\n    import qualified
        Data.Map.Strict as M\n    import Data.Maybe\n    \n    -- Load this on ghci
        and pass the input file path as arguments\n    -- Ex: ghci&gt; day1Pt1 \"/path/to/input/file.txt\"\n    createMap
        :: (Ord a) =&gt; [a] -&gt; M.Map a Int\n    createMap xs = M.fromList $ map
        (\\x -&gt; (head x, length x)) $ group $ sort xs\n    \n    lookupZeroDefault
        :: Int -&gt; M.Map Int Int -&gt; Int\n    lookupZeroDefault x d = fromMaybe
        0 (M.lookup x d)\n    \n    day1Pt1 :: String -&gt; IO ()\n    day1Pt1 filename
        = do\n        content &lt;- readFile filename\n        let rows = map (map
        read . words) (lines content) :: [[Int]]\n            column1 = sort $ map
        head rows\n            column2 = sort $ map (head . tail) rows\n            differences
        = map abs $ zipWith (-) column2 column1\n        print $ sum differences\n    \n    day1Pt2
        :: String -&gt; IO ()\n    day1Pt2 filename = do\n        content &lt;- readFile
        filename\n        let rows = map (map read . words) (lines content) :: [[Int]]\n            numbers_col
        = sort $ map head rows\n            freqs_col = createMap $ map (head . tail)
        rows\n            similarities = map (\\x -&gt; (x * (lookupZeroDefault x
        freqs_col))) numbers_col\n        print $ sum similarities", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Haskell]&lt;br/&gt;\nTrying Haskell
        this year\u2014feedback is welcome!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        System.Environment\nimport Data.List (sort, group)\nimport qualified Data.Map.Strict
        as M\nimport Data.Maybe\n\n-- Load this on ghci and pass the input file path
        as arguments\n-- Ex: ghci&amp;gt; day1Pt1 &amp;quot;/path/to/input/file.txt&amp;quot;\ncreateMap
        :: (Ord a) =&amp;gt; [a] -&amp;gt; M.Map a Int\ncreateMap xs = M.fromList
        $ map (\\x -&amp;gt; (head x, length x)) $ group $ sort xs\n\nlookupZeroDefault
        :: Int -&amp;gt; M.Map Int Int -&amp;gt; Int\nlookupZeroDefault x d = fromMaybe
        0 (M.lookup x d)\n\nday1Pt1 :: String -&amp;gt; IO ()\nday1Pt1 filename =
        do\n    content &amp;lt;- readFile filename\n    let rows = map (map read
        . words) (lines content) :: [[Int]]\n        column1 = sort $ map head rows\n        column2
        = sort $ map (head . tail) rows\n        differences = map abs $ zipWith (-)
        column2 column1\n    print $ sum differences\n\nday1Pt2 :: String -&amp;gt;
        IO ()\nday1Pt2 filename = do\n    content &amp;lt;- readFile filename\n    let
        rows = map (map read . words) (lines content) :: [[Int]]\n        numbers_col
        = sort $ map head rows\n        freqs_col = createMap $ map (head . tail)
        rows\n        similarities = map (\\x -&amp;gt; (x * (lookupZeroDefault x
        freqs_col))) numbers_col\n    print $ sum similarities\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxrzxz/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxrzxz", "created":
        1733089886.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxwpuu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "MrMartillo",
        "can_mod_post": false, "created_utc": 1733091427.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_cnxj1nq0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\n[day 1](https://github.com/martin-conur/rust-advent-of-code-2024/blob/main/src/bin/day1.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/martin-conur/rust-advent-of-code-2024/blob/main/src/bin/day1.rs\"&gt;day
        1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxwpuu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxwpuu", "created":
        1733091427.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxwzv1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "LuffysBalls",
        "can_mod_post": false, "created_utc": 1733091520.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_9g6klams", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\n[repo](https://github.com/dogukan-sys/Advent-of-Code)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/dogukan-sys/Advent-of-Code\"&gt;repo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxwzv1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxwzv1", "created":
        1733091520.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxyvg7", "id": "lzxyvg7", "parent_id":
        "t1_lzxwzv1", "depth": 1, "children": ["lzxyvg7"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733096578.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxx539", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Quasido",
        "can_mod_post": false, "created_utc": 1733091568.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_16ntu8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Haskell\\]\n\nThis is over complicated as I abused myself to
        try and use as much point free notation as possible.\n\n[Repo](https://gitlab.com/Quasido/advent-of-code-2024/-/blob/master/01/Main.hs?ref_type=heads)\n\nEdit:
        diff (a,b) = abs $ (a-b) Replaced with diff = abs . uncurry (-)\n\n    module
        Main where\n    import Data.List\n    import Data.Tuple.Extra\n    \n    main
        :: IO ()\n    main = do\n      input &lt;- readFile \"01/input\"\n      let
        parsed = parseInput input\n    \n      print $ solution parsed\n      print
        $ runparttwo $ transpose parsed\n    \n    solution :: [[Int]] -&gt; Int\n    solution
        = sum . fmap diff . listzip . fmap sort . transpose\n      where diff = abs
        . uncurry (-)\n    \n    runparttwo :: [[Int]] -&gt; Int\n    runparttwo (a:b:_)
        = parttwo b a\n    \n    parttwo :: [Int] -&gt; [Int] -&gt; Int\n    parttwo
        second = sum . fmap ((\\(f, i) -&gt; f i) . ((&amp;&amp;&amp;) (*) (flip count
        $ second)))\n    \n    listzip :: [[Int]] -&gt; [(Int, Int)]\n    listzip
        (x:y:_) = zip x y\n    \n    count :: Eq a =&gt; a -&gt; [a] -&gt; Int\n    count
        val = length . (filter ((==) val))\n    \n    parseInput :: String -&gt; [[Int]]\n    parseInput
        = (fmap (fmap (read :: String -&gt; Int))) . fmap words . lines", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Haskell]&lt;/p&gt;\n\n&lt;p&gt;This
        is over complicated as I abused myself to try and use as much point free notation
        as possible.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gitlab.com/Quasido/advent-of-code-2024/-/blob/master/01/Main.hs?ref_type=heads\"&gt;Repo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        diff (a,b) = abs $ (a-b) Replaced with diff = abs . uncurry (-)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module
        Main where\nimport Data.List\nimport Data.Tuple.Extra\n\nmain :: IO ()\nmain
        = do\n  input &amp;lt;- readFile &amp;quot;01/input&amp;quot;\n  let parsed
        = parseInput input\n\n  print $ solution parsed\n  print $ runparttwo $ transpose
        parsed\n\nsolution :: [[Int]] -&amp;gt; Int\nsolution = sum . fmap diff .
        listzip . fmap sort . transpose\n  where diff = abs . uncurry (-)\n\nrunparttwo
        :: [[Int]] -&amp;gt; Int\nrunparttwo (a:b:_) = parttwo b a\n\nparttwo :: [Int]
        -&amp;gt; [Int] -&amp;gt; Int\nparttwo second = sum . fmap ((\\(f, i) -&amp;gt;
        f i) . ((&amp;amp;&amp;amp;&amp;amp;) (*) (flip count $ second)))\n\nlistzip
        :: [[Int]] -&amp;gt; [(Int, Int)]\nlistzip (x:y:_) = zip x y\n\ncount :: Eq
        a =&amp;gt; a -&amp;gt; [a] -&amp;gt; Int\ncount val = length . (filter ((==)
        val))\n\nparseInput :: String -&amp;gt; [[Int]]\nparseInput = (fmap (fmap
        (read :: String -&amp;gt; Int))) . fmap words . lines\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxx539/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxx539", "created":
        1733091568.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxymvy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "darthminimall",
        "can_mod_post": false, "created_utc": 1733092068.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_kyjzi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Rust\\]\n\n[part 1](https://github.com/sjohntrombley/AoC2024/blob/master/day01_1/src/main.rs)\n\n[part
        2](https://github.com/sjohntrombley/AoC2024/blob/master/day01_2/src/main.rs)\n\nStill
        pretty new to Rust, if anyone has tips for writing better Rust, feel free
        to let me know.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/sjohntrombley/AoC2024/blob/master/day01_1/src/main.rs\"&gt;part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/sjohntrombley/AoC2024/blob/master/day01_2/src/main.rs\"&gt;part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Still pretty new to Rust, if anyone has
        tips for writing better Rust, feel free to let me know.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxymvy/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxymvy", "created":
        1733092068.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzy92z5", "id": "lzy92z5", "parent_id":
        "t1_lzxymvy", "depth": 1, "children": ["lzy92z5", "lzz4h92"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxyt1p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "dimitarbogdanov",
        "can_mod_post": false, "created_utc": 1733092127.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_ect22mqzv",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: CSharp\\]\n\nIt''s the first time I''m actually
        taking AOC seriously, also the code can be shortened a lot, but it works :D\n\n[Part
        1](https://github.com/DimitarBogdanov/AdventOfCode2024/blob/main/AdventOfCode2024/src/Day1Part1.cs)  \n[Part
        2](https://github.com/DimitarBogdanov/AdventOfCode2024/blob/main/AdventOfCode2024/src/Day1Part2.cs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: CSharp]&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s
        the first time I&amp;#39;m actually taking AOC seriously, also the code can
        be shortened a lot, but it works :D&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/DimitarBogdanov/AdventOfCode2024/blob/main/AdventOfCode2024/src/Day1Part1.cs\"&gt;Part
        1&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://github.com/DimitarBogdanov/AdventOfCode2024/blob/main/AdventOfCode2024/src/Day1Part2.cs\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxyt1p/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxyt1p", "created":
        1733092127.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzy9utr", "id": "lzy9utr", "parent_id":
        "t1_lzxyt1p", "depth": 1, "children": ["lzy9utr", "lzy2c8m"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733093786.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxzl8k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Practical-Quote1371",
        "can_mod_post": false, "created_utc": 1733092390.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_1ahmvo1ycg",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: TypeScript] My 2nd year, but first trying to do
        the puzzles when they drop. \u00a0I couldn\u2019t believe how much the adrenaline
        started pumping as I watched the countdown! https://github.com/jasonmuzzy/aoc24/blob/main/src/aoc2401.ts",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: TypeScript]
        My 2nd year, but first trying to do the puzzles when they drop. \u00a0I couldn\u2019t
        believe how much the adrenaline started pumping as I watched the countdown!
        &lt;a href=\"https://github.com/jasonmuzzy/aoc24/blob/main/src/aoc2401.ts\"&gt;https://github.com/jasonmuzzy/aoc24/blob/main/src/aoc2401.ts&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxzl8k/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxzl8k", "created":
        1733092390.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy1xya",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Icy_Mountain_1389",
        "can_mod_post": false, "created_utc": 1733093177.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_vb11nvry", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n    import re\n    \n    def ints(string):\n        return
        [int(token) for token in re.findall(r''\\d+'', string)]\n    \n    def part_1(left,
        right):\n        return sum(abs(l - r) for l, r in zip(sorted(left), sorted(right)))\n    \n    def
        part_2(left, right):\n        return sum(l * right.count(l) for l in left)\n    \n    if
        __name__ == ''__main__'':\n        lines = open(''inputs/2024/day1.txt'').readlines()\n        left,
        right = zip(*(ints(line) for line in lines))\n    \n        print(part_1(left,
        right))\n        print(part_2(left, right))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        re\n\ndef ints(string):\n    return [int(token) for token in re.findall(r&amp;#39;\\d+&amp;#39;,
        string)]\n\ndef part_1(left, right):\n    return sum(abs(l - r) for l, r in
        zip(sorted(left), sorted(right)))\n\ndef part_2(left, right):\n    return
        sum(l * right.count(l) for l in left)\n\nif __name__ == &amp;#39;__main__&amp;#39;:\n    lines
        = open(&amp;#39;inputs/2024/day1.txt&amp;#39;).readlines()\n    left, right
        = zip(*(ints(line) for line in lines))\n\n    print(part_1(left, right))\n    print(part_2(left,
        right))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy1xya/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy1xya", "created":
        1733093177.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzzwfen", "id": "lzzwfen", "parent_id":
        "t1_lzy1xya", "depth": 1, "children": ["lzzwfen", "lzy1xyz"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733094136.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzy2ck1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "pho_ben",
        "can_mod_post": false, "created_utc": 1733093313.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_um1v00b3i",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: C++\\]\n\ndidnt cross my mind to use something
        like an unordered map but oh well binary search is cool\n\n[code](https://topaz.github.io/paste/#XQAAAQD+AgAAAAAAAAARmknGRw8TogB3Oxd1shjosqbbE050eI8IE8UbmbmvNMgZJaPQ7TJfOoxrCAsyuV4pV27OJW9MQQSk6oidOYkmzsGbuh44ADL8dPigGGslhag3T5rFmoEbcnsrHehkOCHtIZ+GoukED7ODeOAAPLBc11HOuR9P5VIQfFE/vmBdpbfZfUnYXtHt7YsMC/upYxujAEeg9rXFf9YrrMkRkzpim2rU+x7DdGrrA0yQyenrD31XNkil0bTyZDKuJkm96Qd8+Ssx+5bZdvj0/L3Cs8T8UtG3J61TxKU2jpzVgvy9vBQNZ6ChIR0F9W6glK0XJyXkiiLqFDglpGy5nhLHqcbpDY0Vwr1JuzAKzbZQEp+erY4RnJw1UEfgrSeKiSAEwucPW3XOU4YPQk3dJbCLH4C9jykQX7kWn7kBRVz6AvezTFnaPr/yV9u35oWsIL3evDXN+NXQuCbMMbqiuUBR+EBVVN5If3ltLDR5JWBS9xO6U7FjYJMLAAQpQykPgdH8G1f/7juwiA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;didnt
        cross my mind to use something like an unordered map but oh well binary search
        is cool&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQD+AgAAAAAAAAARmknGRw8TogB3Oxd1shjosqbbE050eI8IE8UbmbmvNMgZJaPQ7TJfOoxrCAsyuV4pV27OJW9MQQSk6oidOYkmzsGbuh44ADL8dPigGGslhag3T5rFmoEbcnsrHehkOCHtIZ+GoukED7ODeOAAPLBc11HOuR9P5VIQfFE/vmBdpbfZfUnYXtHt7YsMC/upYxujAEeg9rXFf9YrrMkRkzpim2rU+x7DdGrrA0yQyenrD31XNkil0bTyZDKuJkm96Qd8+Ssx+5bZdvj0/L3Cs8T8UtG3J61TxKU2jpzVgvy9vBQNZ6ChIR0F9W6glK0XJyXkiiLqFDglpGy5nhLHqcbpDY0Vwr1JuzAKzbZQEp+erY4RnJw1UEfgrSeKiSAEwucPW3XOU4YPQk3dJbCLH4C9jykQX7kWn7kBRVz6AvezTFnaPr/yV9u35oWsIL3evDXN+NXQuCbMMbqiuUBR+EBVVN5If3ltLDR5JWBS9xO6U7FjYJMLAAQpQykPgdH8G1f/7juwiA==\"&gt;code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy2ck1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy2ck1", "created":
        1733093313.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzy4nbl", "id": "lzy4nbl", "parent_id":
        "t1_lzy2ck1", "depth": 1, "children": ["lzy4nbl", "lzyg5pa"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy2y3j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "xXMacMillanXx",
        "can_mod_post": false, "created_utc": 1733093518.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_ecrpt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: V\\]\n\n[Day 1](https://github.com/xXMacMillanXx/advent_of_code_2024/tree/main/day01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: V]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/xXMacMillanXx/advent_of_code_2024/tree/main/day01\"&gt;Day
        1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy2y3j/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy2y3j", "created":
        1733093518.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyc6yj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "hhnnngg",
        "can_mod_post": false, "created_utc": 1733096758.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_8l3ed", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: BCPL\\]\n\nOptimized my part 2 solution from a brute force linear
        search to hash look up. O(n\\^2) to O(n) \\~40x faster. Original solution
        would average 40-45ms, now down to \\~1ms.\n\nKept the merge sort for part
        1. Pretty consistent 5ms to sort. Using a quicksort written by Martin Richards
        is about 2x faster.\n\nNot bad for interpreted INTCODE.\n\n[Updated Code](https://github.com/keyboardspecialist/advent_of_code_2024/blob/master/src/day1.b)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: BCPL]&lt;/p&gt;\n\n&lt;p&gt;Optimized
        my part 2 solution from a brute force linear search to hash look up. O(n^2)
        to O(n) ~40x faster. Original solution would average 40-45ms, now down to
        ~1ms.&lt;/p&gt;\n\n&lt;p&gt;Kept the merge sort for part 1. Pretty consistent
        5ms to sort. Using a quicksort written by Martin Richards is about 2x faster.&lt;/p&gt;\n\n&lt;p&gt;Not
        bad for interpreted INTCODE.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/keyboardspecialist/advent_of_code_2024/blob/master/src/day1.b\"&gt;Updated
        Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyc6yj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyc6yj", "created":
        1733096758.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_m005ig8", "id": "m005ig8", "parent_id":
        "t1_lzyc6yj", "depth": 1, "children": ["m005ig8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733132424.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzykfxp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "MichelGerding",
        "can_mod_post": false, "created_utc": 1733099656.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_4pdynzh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\nDecided to try and optimize the code as much as possible
        after solving it the readable way.\n\nAverages of 10k runs including I/O were
        as follows  (intel i7 11800h):\n\n* Part 1: 12.7\u00b5s\n* Part 2: 7.0\u00b5s\n\nlink
        to code: [https://github.com/MichelGerding/aoc-2024-rs/blob/main/src/bin/01.rs](https://github.com/MichelGerding/aoc-2024-rs/blob/main/src/bin/01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Decided
        to try and optimize the code as much as possible after solving it the readable
        way.&lt;/p&gt;\n\n&lt;p&gt;Averages of 10k runs including I/O were as follows  (intel
        i7 11800h):&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Part 1: 12.7\u00b5s&lt;/li&gt;\n&lt;li&gt;Part
        2: 7.0\u00b5s&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;link to code: &lt;a href=\"https://github.com/MichelGerding/aoc-2024-rs/blob/main/src/bin/01.rs\"&gt;https://github.com/MichelGerding/aoc-2024-rs/blob/main/src/bin/01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzykfxp/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzykfxp", "created":
        1733099656.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzyzs54", "id": "lzyzs54", "parent_id":
        "t1_lzykfxp", "depth": 1, "children": ["lzyzs54"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzymy1w",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "woyspawn",
        "can_mod_post": false, "created_utc": 1733100524.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_2935cjf8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Common Lisp\\]\n\nI Hate my parser. And it took me stupidly
        long to solve it\n\n    (defun rotate (list-of-lists)\n      (apply #''mapcar
        #''list list-of-lists))\n    \n    (defun read-input (file)\n      (rotate\n      (with-open-file
        (in file)\n      (loop \n                      :with iv := nil                   \n                      :for
        riv = (read-line in nil)                   \n                      :while
        riv                  \n                      :collect (loop \n                        :with
        pos := 0\n                        :with ov := 0\n                        :while
        (if ov (multiple-value-setq (ov pos) (parse-integer riv :start pos :junk-allowed
        t)))\n                        :collect ov\n                      ) ))))\n    \n    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n    \n    (defun
        sort-diff-sum (pair-of-lists)\n      (apply #''+ (mapcar #''abs ( apply #''mapcar
        #''- (mapcar (lambda (x) (sort x #''&lt;)) pair-of-lists)))))\n    \n    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n    \n    (defun
        count-repeats (test-number control-list)\n      (count-if (lambda (x) (= x
        test-number)) control-list))\n    \n    \n    (defun similarity-score (test-list
        control-list)\n    (apply #''+ (mapcar (lambda (test-number) (* test-number
        (count-repeats test-number control-list))) test-list)))\n    \n    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n    \n    (sort-diff-sum
        (read-input \"2024/day1/input\"))\n    \n    (apply #''similarity-score (read-input
        \"2024/day1/input\"))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Common Lisp]&lt;/p&gt;\n\n&lt;p&gt;I Hate my parser. And it took me stupidly
        long to solve it&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun rotate (list-of-lists)\n  (apply
        #&amp;#39;mapcar #&amp;#39;list list-of-lists))\n\n(defun read-input (file)\n  (rotate\n  (with-open-file
        (in file)\n  (loop \n                  :with iv := nil                   \n                  :for
        riv = (read-line in nil)                   \n                  :while riv                  \n                  :collect
        (loop \n                    :with pos := 0\n                    :with ov :=
        0\n                    :while (if ov (multiple-value-setq (ov pos) (parse-integer
        riv :start pos :junk-allowed t)))\n                    :collect ov\n                  )
        ))))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(defun sort-diff-sum (pair-of-lists)\n  (apply
        #&amp;#39;+ (mapcar #&amp;#39;abs ( apply #&amp;#39;mapcar #&amp;#39;- (mapcar
        (lambda (x) (sort x #&amp;#39;&amp;lt;)) pair-of-lists)))))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(defun
        count-repeats (test-number control-list)\n  (count-if (lambda (x) (= x test-number))
        control-list))\n\n\n(defun similarity-score (test-list control-list)\n(apply
        #&amp;#39;+ (mapcar (lambda (test-number) (* test-number (count-repeats test-number
        control-list))) test-list)))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(sort-diff-sum
        (read-input &amp;quot;2024/day1/input&amp;quot;))\n\n(apply #&amp;#39;similarity-score
        (read-input &amp;quot;2024/day1/input&amp;quot;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzymy1w/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzymy1w", "created":
        1733100524.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzzjh3z", "id": "lzzjh3z", "parent_id":
        "t1_lzymy1w", "depth": 1, "children": ["lzzjh3z"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyo099",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ray10k",
        "can_mod_post": false, "created_utc": 1733100899.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_5p8po", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n[Decided to take the easy approach](https://github.com/ray10k/2024py/blob/main/days/day_01.py),
        it''s just day 1 after all! Really though, setting up my template took longer!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ray10k/2024py/blob/main/days/day_01.py\"&gt;Decided
        to take the easy approach&lt;/a&gt;, it&amp;#39;s just day 1 after all! Really
        though, setting up my template took longer!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyo099/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzyo099", "created": 1733100899.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzywm0a",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "s3aker",
        "can_mod_post": false, "created_utc": 1733104009.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_3xauwsi0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: raku\\]\n\n[code](https://glot.io/snippets/h2b4ma8lx8)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: raku]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://glot.io/snippets/h2b4ma8lx8\"&gt;code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzywm0a/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzywm0a", "created":
        1733104009.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyy37i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "spunkle",
        "can_mod_post": false, "created_utc": 1733104542.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_4jbja", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: C]\n\nhttps://github.com/gabts/advent-of-code/blob/main/2024/day-01/main.c",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/gabts/advent-of-code/blob/main/2024/day-01/main.c\"&gt;https://github.com/gabts/advent-of-code/blob/main/2024/day-01/main.c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyy37i/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyy37i", "created":
        1733104542.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzz1zdd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "atrocia6",
        "can_mod_post": false, "created_utc": 1733105956.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_nqfm165", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nPart 1 (2 LOC):\n\n    lists = [[int(x) for x in line.split()]
        for line in open(0)]\n    print(sum([abs(a - b) for a, b in zip(sorted([line[0]
        for line in lists]), sorted([line[1] for line in lists]))]))\n\nPart 2 (3
        LOC):\n\n    lists = [[int(x) for x in line.split()] for line in open(0)]\n    list2
        = [line[1] for line in lists]\n    print(sum([line[0] * list2.count(line[0])
        for line in lists]))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;p&gt;Part 1 (2 LOC):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;lists
        = [[int(x) for x in line.split()] for line in open(0)]\nprint(sum([abs(a -
        b) for a, b in zip(sorted([line[0] for line in lists]), sorted([line[1] for
        line in lists]))]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2 (3 LOC):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;lists
        = [[int(x) for x in line.split()] for line in open(0)]\nlist2 = [line[1] for
        line in lists]\nprint(sum([line[0] * list2.count(line[0]) for line in lists]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzz1zdd/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzz1zdd", "created":
        1733105956.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzz3tud",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Schweppes7T4",
        "can_mod_post": false, "created_utc": 1733106639.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_9uj7h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nI''m teaching AP CSP for the first time this year
        and wanted to see if I could do this. I feel like I did it very simply? I
        dunno. I saw that every number was 5 digits and separated by 3 spaces so I
        just used slicing.\n\n[Code](https://github.com/dazmocation/Advent-of-Code-2024/blob/main/day_1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        teaching AP CSP for the first time this year and wanted to see if I could
        do this. I feel like I did it very simply? I dunno. I saw that every number
        was 5 digits and separated by 3 spaces so I just used slicing.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/dazmocation/Advent-of-Code-2024/blob/main/day_1.py\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzz3tud/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzz3tud", "created":
        1733106639.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzz587q", "id": "lzz587q", "parent_id":
        "t1_lzz3tud", "depth": 1, "children": ["lzz587q"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzz7dp2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzz7dp2", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzz7dp2/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733107962.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733107962.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_m03w3c0", "id": "m03w3c0", "parent_id":
        "t1_lzz7dp2", "depth": 1, "children": ["m03w3c0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzzhi6n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "PluckyMango",
        "can_mod_post": false, "created_utc": 1733111899.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_2fobj45q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Go\\]\n\n[paste](https://topaz.github.io/paste/#XQAAAQCNBAAAAAAAAAA4GEiZzRd1JAgz+whYRQxSFI7XvmlfhtGDino6nycs7JKCSUS+r7/qzMSiUt6GI72Wjhlj6oebwJuih8x+r/AYTJ5jhJDI4Sybn41fJrKrDYfyM60Eb9i0AP2AHRXn8d6iClSMKIQpTul4u3SdHwwaTJNzmgNjfPU+SvPG/JFi+Qruil4NlnDqiX2/ZGQV0b9Uw8ocjrlNWGbixscEhDtB7yUsfyOogngQ7yzV/DcQR99+jatxYFH1xBJ2xkaoGBIPWet3Zm50hv794AyejYSl7DMsquRB7PsNtw73UxAZAUdgDG+cLMQ9KIjyKWA81ErJiDdDJ+TVXOQRPDFYKTtFfAsHhpwuK82UzB4uqOkD37Fk8ktR4BDrUyt+SK7QuV6PJoWLVaHPrTDh5UjFROjJ9Dq3BpNzz9X++9HO+6ojaVM3aqaMDpTChQPD918VdUMqHzBwvgXM6Dn1j7w7BXs91dkHLeAUB0xslDHqMxLjaWWoJ4OYMYilMst3XkHrDG8XOl1/q7Vq+yMs2qcszLg5rBo9DylkMKdBbnC9d+ePpRf1uHqmp27erTgO+u9syx4M4s8og+4JZfCcEUlx7w+sxWXjOKob475YSh1tZCDzMbdETPmGZ8Q/5MeW/4pPMGTdvi5glL+h6BSMfBJQraLu6vYKOZivq9xdHkeH/96Jgdw=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCNBAAAAAAAAAA4GEiZzRd1JAgz+whYRQxSFI7XvmlfhtGDino6nycs7JKCSUS+r7/qzMSiUt6GI72Wjhlj6oebwJuih8x+r/AYTJ5jhJDI4Sybn41fJrKrDYfyM60Eb9i0AP2AHRXn8d6iClSMKIQpTul4u3SdHwwaTJNzmgNjfPU+SvPG/JFi+Qruil4NlnDqiX2/ZGQV0b9Uw8ocjrlNWGbixscEhDtB7yUsfyOogngQ7yzV/DcQR99+jatxYFH1xBJ2xkaoGBIPWet3Zm50hv794AyejYSl7DMsquRB7PsNtw73UxAZAUdgDG+cLMQ9KIjyKWA81ErJiDdDJ+TVXOQRPDFYKTtFfAsHhpwuK82UzB4uqOkD37Fk8ktR4BDrUyt+SK7QuV6PJoWLVaHPrTDh5UjFROjJ9Dq3BpNzz9X++9HO+6ojaVM3aqaMDpTChQPD918VdUMqHzBwvgXM6Dn1j7w7BXs91dkHLeAUB0xslDHqMxLjaWWoJ4OYMYilMst3XkHrDG8XOl1/q7Vq+yMs2qcszLg5rBo9DylkMKdBbnC9d+ePpRf1uHqmp27erTgO+u9syx4M4s8og+4JZfCcEUlx7w+sxWXjOKob475YSh1tZCDzMbdETPmGZ8Q/5MeW/4pPMGTdvi5glL+h6BSMfBJQraLu6vYKOZivq9xdHkeH/96Jgdw=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzhi6n/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzzhi6n", "created":
        1733111899.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_m00eobg", "id": "m00eobg", "parent_id":
        "t1_lzzhi6n", "depth": 1, "children": ["m00eobg"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuzmk2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "ssnoyes",
        "can_mod_post": false, "created_utc": 1733055245.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 4, "author_fullname": "t2_k1b0r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: MySQL\\]\n\n[https://github.com/snoyes/AoC/blob/main/2024/day01/day01.sql](https://github.com/snoyes/AoC/blob/main/2024/day01/day01.sql)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: MySQL]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/snoyes/AoC/blob/main/2024/day01/day01.sql\"&gt;https://github.com/snoyes/AoC/blob/main/2024/day01/day01.sql&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuzmk2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuzmk2", "created":
        1733055245.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzvilvd", "id": "lzvilvd", "parent_id":
        "t1_lzuzmk2", "depth": 1, "children": ["lzvilvd"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztuhit",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "xoronth",
        "can_mod_post": false, "created_utc": 1733029630.0, "send_replies": false,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_5rv44mya", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n[paste](https://topaz.github.io/paste/#XQAAAQAWBAAAAAAAAAARiEJGPfQWNG6xo4rUnrU/FzgTXmJOWQF53DaV6F4jcQsDsZs/mYVTr44+AFCYLJlk1piiNlbkGGsjpZ1c4vwGJJ4s63QpSbL8y0NKO1FkaOEDhonVkZR6W9KlJh5bNsmGWhP+Ng305YMOKq3XoSaFLqWcH88D48/z6t1B8gNQNFqXWCJpAUba+o87J4N4l5FKHC4TfFp85uazghIhzbKs7rn1JjjgLD1kdcXz4sKusw0/DEHPuEuQgFBqZw2ZrDPiXBLda0n9H/SzSPJFizpb4B5I09duN/NCMWFOqD5Msl3gtHuz1QRyiULtLAscCU6SkU3G3h6GGp89HNz08zsOW+0YSb34TMyBD2Q4CJubEGLy3BNaBSqpbrLTgY1zompGl3XjOD3ajxmwwU/eQktdCmnZ7x0c5p2vntgiayoQit52SDmVNvUfJoAzZBIYOFVo0cuAk+HDpim4s9uy3OmkWLCfwY3wtctALjPR++OiO+ZrCsdU0pEz2yLHkqOW5vt/LfCQWB8kQkb2y9ZyQ6wZy9KbltjDdzcrbvwWSPQiQMFqUp2EW6jvWs63J6eq1J9uGudQ1kxNeUzTrGRabuGhqTF+/91sCEw=)\n\nHello
        everyone, whether you''re a newcomer or you''ve done this song and dance before!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQAWBAAAAAAAAAARiEJGPfQWNG6xo4rUnrU/FzgTXmJOWQF53DaV6F4jcQsDsZs/mYVTr44+AFCYLJlk1piiNlbkGGsjpZ1c4vwGJJ4s63QpSbL8y0NKO1FkaOEDhonVkZR6W9KlJh5bNsmGWhP+Ng305YMOKq3XoSaFLqWcH88D48/z6t1B8gNQNFqXWCJpAUba+o87J4N4l5FKHC4TfFp85uazghIhzbKs7rn1JjjgLD1kdcXz4sKusw0/DEHPuEuQgFBqZw2ZrDPiXBLda0n9H/SzSPJFizpb4B5I09duN/NCMWFOqD5Msl3gtHuz1QRyiULtLAscCU6SkU3G3h6GGp89HNz08zsOW+0YSb34TMyBD2Q4CJubEGLy3BNaBSqpbrLTgY1zompGl3XjOD3ajxmwwU/eQktdCmnZ7x0c5p2vntgiayoQit52SDmVNvUfJoAzZBIYOFVo0cuAk+HDpim4s9uy3OmkWLCfwY3wtctALjPR++OiO+ZrCsdU0pEz2yLHkqOW5vt/LfCQWB8kQkb2y9ZyQ6wZy9KbltjDdzcrbvwWSPQiQMFqUp2EW6jvWs63J6eq1J9uGudQ1kxNeUzTrGRabuGhqTF+/91sCEw=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Hello
        everyone, whether you&amp;#39;re a newcomer or you&amp;#39;ve done this song
        and dance before!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztuhit/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztuhit", "created":
        1733029630.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztuyv9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "justinkroegerlake",
        "can_mod_post": false, "created_utc": 1733029860.0, "send_replies": true,
        "parent_id": "t1_lztuhit", "score": 4, "author_fullname": "t2_xybv5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "fyi: you can call `l.split()` with no argument and it will split on whitespace",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;fyi: you can call &lt;code&gt;l.split()&lt;/code&gt;
        with no argument and it will split on whitespace&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztuyv9/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztuyv9", "created":
        1733029860.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lztvluk", "id": "lztvluk", "parent_id":
        "t1_lztuyv9", "depth": 2, "children": ["lztvluk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733031907.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztuqbf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "yossi_peti",
        "can_mod_post": false, "created_utc": 1733029747.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_6tcvn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\] 466/516\n\n[paste](https://github.com/peterolson/2024-advent-of-code/blob/master/1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python] 466/516&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/peterolson/2024-advent-of-code/blob/master/1.py\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztuqbf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztuqbf", "created":
        1733029747.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lztyubr", "id": "lztyubr", "parent_id":
        "t1_lztuqbf", "depth": 1, "children": ["lztyubr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1734367253.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztutgx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "pred",
        "can_mod_post": false, "created_utc": 1733029788.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_3zds9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python] 84/64. [GitHub](https://github.com/fuglede/adventofcode/blob/master/2024/day01/solutions.py)\n\nPretty
        straightforward; sort the two lists, and zip them together:\n\n    print(sum(abs(a
        - b) for a, b in zip(sorted(l1), sorted(l2))))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python] 84/64. &lt;a href=\"https://github.com/fuglede/adventofcode/blob/master/2024/day01/solutions.py\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Pretty
        straightforward; sort the two lists, and zip them together:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(sum(abs(a
        - b) for a, b in zip(sorted(l1), sorted(l2))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztutgx/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztutgx", "created":
        1733029788.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztuthc", "id": "lztuthc", "parent_id":
        "t1_lztutgx", "depth": 1, "children": ["lztuthc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztuzu2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "fsed123",
        "can_mod_post": false, "created_utc": 1733029873.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_2lwv2ppr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[https://github.com/Fadi88/AoC/blob/master/2024/day01/code.py](https://github.com/Fadi88/AoC/blob/master/2024/day01/code.py)\n\nnothing
        special", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Fadi88/AoC/blob/master/2024/day01/code.py\"&gt;https://github.com/Fadi88/AoC/blob/master/2024/day01/code.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;nothing
        special&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztuzu2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztuzu2", "created":
        1733029873.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztuzuj", "id": "lztuzuj", "parent_id":
        "t1_lztuzu2", "depth": 1, "children": ["lztuzuj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztv0cr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "seligman99",
        "can_mod_post": false, "created_utc": 1733029880.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_3syc5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python] 936 / 1172\n\n[github](https://github.com/seligman/aoc/blob/master/2024/Helpers/day_01.py)\n\nFun
        start to the year!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python] 936 / 1172&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/seligman/aoc/blob/master/2024/Helpers/day_01.py\"&gt;github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Fun
        start to the year!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztv0cr/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztv0cr", "created":
        1733029880.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztv52p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Ok-Builder-2348",
        "can_mod_post": false, "created_utc": 1733029943.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ne8ub9n4b",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Python\\]\n\n[Part 1](https://topaz.github.io/paste/#XQAAAQAXAQAAAAAAAAA7mkrvHeIvDZUizuaPfPeAcKMVX/5thfifrJZ05mmvSlMLeXVG45T4C8V8BkOaJN393x1qaKeOzeI1sR8hSGzagVef7pJRKU00kySX9TLWTAiu1CvJyzpZwNsOJOYUcZB2kQhL87VNGlhsAjNev+HMEnodsmNA4Xn2W+v6agdMYTuNSxjPkltOZoJRnkxHd6ZKFDfoFsZHs33rswyGwqqFeePaq0ff2RPzboPyHiEZ9Tz/+IgVOg==)\n\n[Part
        2](https://topaz.github.io/paste/#XQAAAQAjAQAAAAAAAAA7mkrvHeIvDZUizuaPfPeAcKMVX/5thfifrJZ05mmvSlMLeXVG45T4C8V8BkOaJN393x1qaKeOzeI1sR8hSGzagVef7pJRKU00kySX9TLWTAiu1CvJyzpZwNsOJOYUcZB2kQhL87VNGlhsAjNev+HMEnodsmNA4Xn2W+v6agdMYTuNSxjPkltOZoJRnkxHfnpV7uYX0QCJxHoVAhIzs733V15a6mY6hW/uHY3ZD/EOmjqfDiYqH/91D0AA)\n\nA
        short and sweet day 1 to start this year! Always good when part 2 only requires
        small changes to the code; didn''t need to sort the lists this time but since
        it was there, I just left it in.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAXAQAAAAAAAAA7mkrvHeIvDZUizuaPfPeAcKMVX/5thfifrJZ05mmvSlMLeXVG45T4C8V8BkOaJN393x1qaKeOzeI1sR8hSGzagVef7pJRKU00kySX9TLWTAiu1CvJyzpZwNsOJOYUcZB2kQhL87VNGlhsAjNev+HMEnodsmNA4Xn2W+v6agdMYTuNSxjPkltOZoJRnkxHd6ZKFDfoFsZHs33rswyGwqqFeePaq0ff2RPzboPyHiEZ9Tz/+IgVOg==\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAjAQAAAAAAAAA7mkrvHeIvDZUizuaPfPeAcKMVX/5thfifrJZ05mmvSlMLeXVG45T4C8V8BkOaJN393x1qaKeOzeI1sR8hSGzagVef7pJRKU00kySX9TLWTAiu1CvJyzpZwNsOJOYUcZB2kQhL87VNGlhsAjNev+HMEnodsmNA4Xn2W+v6agdMYTuNSxjPkltOZoJRnkxHfnpV7uYX0QCJxHoVAhIzs733V15a6mY6hW/uHY3ZD/EOmjqfDiYqH/91D0AA\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A short and sweet day 1 to start this year!
        Always good when part 2 only requires small changes to the code; didn&amp;#39;t
        need to sort the lists this time but since it was there, I just left it in.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztv52p/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztv52p", "created":
        1733029943.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztv8j1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "OroArmor",
        "can_mod_post": false, "created_utc": 1733029988.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1xmngoln", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Python\\] 925/1351\n\n[https://github.com/OroArmor/AdventOfCode/blob/master/src/2024/day1.py](https://github.com/OroArmor/AdventOfCode/blob/master/src/2024/day1.py)\n\nFairly
        simple once you get the transpose for the two columns. Spent too much time
        trying to figure that out, and then forgot python has \\`list.count()\\`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python] 925/1351&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/OroArmor/AdventOfCode/blob/master/src/2024/day1.py\"&gt;https://github.com/OroArmor/AdventOfCode/blob/master/src/2024/day1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Fairly
        simple once you get the transpose for the two columns. Spent too much time
        trying to figure that out, and then forgot python has `list.count()`&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztv8j1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztv8j1", "created":
        1733029988.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztvbso",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "adamsilkey",
        "can_mod_post": false, "created_utc": 1733030033.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_14418n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python] 628/813. People are so darn fast!!\n\nhttps://gist.github.com/adamsilkey/bcfeaf55e784af454648c1c81a460e3f",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python] 628/813.
        People are so darn fast!!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/adamsilkey/bcfeaf55e784af454648c1c81a460e3f\"&gt;https://gist.github.com/adamsilkey/bcfeaf55e784af454648c1c81a460e3f&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvbso/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvbso", "created":
        1733030033.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztveyg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "TallPeppermintMocha",
        "can_mod_post": false, "created_utc": 1733030076.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_jytyf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Python] 226\n\nExcited for this year! \n\n[paste](https://topaz.github.io/paste/#XQAAAQCpAAAAAAAAAAA0m0pnuFI8c+qagMoNTEcTIfyUWj6FDwjYaWkemair20BCliPDq7Q3JM5qmo0aDijb/8Tye5XyFJ4apHNdoJmqPJYk2pOvbUXHh4ipGCyn3L9F8tD9Td/gpzCkQCoXMXhc2i+FtM+12u+HdzozSc4EMH+bd6f+UiR2JAUD/clXwA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python] 226&lt;/p&gt;\n\n&lt;p&gt;Excited
        for this year! &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCpAAAAAAAAAAA0m0pnuFI8c+qagMoNTEcTIfyUWj6FDwjYaWkemair20BCliPDq7Q3JM5qmo0aDijb/8Tye5XyFJ4apHNdoJmqPJYk2pOvbUXHh4ipGCyn3L9F8tD9Td/gpzCkQCoXMXhc2i+FtM+12u+HdzozSc4EMH+bd6f+UiR2JAUD/clXwA==\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztveyg/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztveyg", "created":
        1733030076.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztymmd", "id": "lztymmd", "parent_id":
        "t1_lztveyg", "depth": 1, "children": ["lztymmd"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733030393.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztvjez", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Boojum",
        "can_mod_post": false, "created_utc": 1733030139.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1q57", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python], 833 / 994\n\nPart 1:\n\n    import fileinput\n    l,
        r = zip( *[ map( int, l.split() ) for l in fileinput.input() ] )\n    print(
        sum( abs( b - a ) for a, b in zip( sorted( l ), sorted( r ) ) ) )\n\nPart
        2:\n\n    import fileinput, collections\n    l, r = zip( *[ map( int, l.split()
        ) for l in fileinput.input() ] )\n    r = collections.Counter( r )\n    print(
        sum( i * r[ i ] for i in l ) )\n\nSo, a global tour this year?\n\n[GSGA] Blooper:
        forgot to multiply by the value on Part 2 at first, just summed the counts
        instead.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python], 833 / 994&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        fileinput\nl, r = zip( *[ map( int, l.split() ) for l in fileinput.input()
        ] )\nprint( sum( abs( b - a ) for a, b in zip( sorted( l ), sorted( r ) )
        ) )\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        fileinput, collections\nl, r = zip( *[ map( int, l.split() ) for l in fileinput.input()
        ] )\nr = collections.Counter( r )\nprint( sum( i * r[ i ] for i in l ) )\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So,
        a global tour this year?&lt;/p&gt;\n\n&lt;p&gt;[GSGA] Blooper: forgot to multiply
        by the value on Part 2 at first, just summed the counts instead.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvjez/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvjez", "created":
        1733030139.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztvjhg", "id": "lztvjhg", "parent_id":
        "t1_lztvjez", "depth": 1, "children": ["lztvjhg"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztvr1f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "TheZigerionScammer",
        "can_mod_post": false, "created_utc": 1733030244.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_hembo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python] 2539/2236\n\nPretty easy Day 1, had an issue where my
        IDE wouldn''t update the actual code it executed unless I saved the program
        which I''ve never had to deal with before. Fixed that and everything else
        went smoothly. Probably lost a lot of time getting screenshots of the evolving
        calendar. The actual problem was pretty simple, take each line, split it on
        the whitespace, put both numbers into two lists, then sort them. Compare each
        number in each list with each counterpart in sequence and add it to the total,
        then in Part 2 do the same thing but add the value of each item in the left
        list multiplied by a count of each item in the right. Enumerate go brr.\n\n[Paste](https://topaz.github.io/paste/#XQAAAQDmAQAAAAAAAAApGkjmqBYISitvaGVTU3dRmtSNs9ndZc0jk6x/eAyPrLPQEJaHwbnZkY+FCkNOxAuJmJ18NuchfzmS/U0OtiMyO/70akCMOkbJbEoPKWTIuK1Im/tcuMDWn1/gEVK73WBTJSAQ3StJdomlg1fdwQHhrL87llGJLdzQojOV5l6VS+dmi+U1blCC+3e45/eJPVL6XGenEu78d4fCpoQ5AOXQd7kFGeExIX5jbL7IktgH+ZvhmmoJ/gFz865rnLuOSsUzbXpY0gAIaaN3xfAYcbxzadLE1jJ3vbyBnZ0mhZpF04HTt/lSA4exMr6V+jKbyjIr7MRTobMf/bfpCw==)\n\nAs
        a side note, how can someone complete both parts in 9 seconds?", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python] 2539/2236&lt;/p&gt;\n\n&lt;p&gt;Pretty
        easy Day 1, had an issue where my IDE wouldn&amp;#39;t update the actual code
        it executed unless I saved the program which I&amp;#39;ve never had to deal
        with before. Fixed that and everything else went smoothly. Probably lost a
        lot of time getting screenshots of the evolving calendar. The actual problem
        was pretty simple, take each line, split it on the whitespace, put both numbers
        into two lists, then sort them. Compare each number in each list with each
        counterpart in sequence and add it to the total, then in Part 2 do the same
        thing but add the value of each item in the left list multiplied by a count
        of each item in the right. Enumerate go brr.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDmAQAAAAAAAAApGkjmqBYISitvaGVTU3dRmtSNs9ndZc0jk6x/eAyPrLPQEJaHwbnZkY+FCkNOxAuJmJ18NuchfzmS/U0OtiMyO/70akCMOkbJbEoPKWTIuK1Im/tcuMDWn1/gEVK73WBTJSAQ3StJdomlg1fdwQHhrL87llGJLdzQojOV5l6VS+dmi+U1blCC+3e45/eJPVL6XGenEu78d4fCpoQ5AOXQd7kFGeExIX5jbL7IktgH+ZvhmmoJ/gFz865rnLuOSsUzbXpY0gAIaaN3xfAYcbxzadLE1jJ3vbyBnZ0mhZpF04HTt/lSA4exMr6V+jKbyjIr7MRTobMf/bfpCw==\"&gt;Paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;As
        a side note, how can someone complete both parts in 9 seconds?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvr1f/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvr1f", "created":
        1733030244.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_lztyr5l", "id": "lztyr5l", "parent_id":
        "t1_lztvr1f", "depth": 1, "children": ["lztyr5l", "lztygls", "lztyxer"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztvrmy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Krryl",
        "can_mod_post": false, "created_utc": 1733030253.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_coxqv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nPart 1 \n\n    with open (''aoc-1.txt'', ''r'') as
        f:\n        l_arr, r_arr, diff = [], [], []\n        for line in f:\n            l,
        r = line.split()\n            l_arr.append(int(l))\n            r_arr.append(int(r))\n        l_arr.sort()\n        r_arr.sort()\n    \n    \n        for
        i in range(len(l_arr)):\n            diff.append(abs(r_arr[i] - l_arr[i]))\n        print(sum(diff))\n    \n\nPart
        2\n\n    import collections\n    \n    with open (''aoc-1.txt'', ''r'') as
        f:\n        l_arr = []\n        r_freq = collections.defaultdict(int)\n        for
        line in f:\n            l, r = line.split()\n            l_arr.append(int(l))\n            r_freq[int(r)]+=1\n        \n        ret
        = 0\n        \n        for i,l in enumerate(l_arr):\n            if l in r_freq:\n                ret+=(l*r_freq[l])\n        print(ret)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Part
        1 &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open (&amp;#39;aoc-1.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as f:\n    l_arr, r_arr, diff = [], [], []\n    for line
        in f:\n        l, r = line.split()\n        l_arr.append(int(l))\n        r_arr.append(int(r))\n    l_arr.sort()\n    r_arr.sort()\n\n\n    for
        i in range(len(l_arr)):\n        diff.append(abs(r_arr[i] - l_arr[i]))\n    print(sum(diff))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import collections\n\nwith open (&amp;#39;aoc-1.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as f:\n    l_arr = []\n    r_freq = collections.defaultdict(int)\n    for
        line in f:\n        l, r = line.split()\n        l_arr.append(int(l))\n        r_freq[int(r)]+=1\n\n    ret
        = 0\n\n    for i,l in enumerate(l_arr):\n        if l in r_freq:\n            ret+=(l*r_freq[l])\n    print(ret)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvrmy/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztvrmy", "created":
        1733030253.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lztwdzx", "id": "lztwdzx", "parent_id":
        "t1_lztvrmy", "depth": 1, "children": ["lztwdzx"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztvtu4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "kingmrlapiz",
        "can_mod_post": false, "created_utc": 1733030284.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_53bpmsbw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n  \n[https://github.com/cursorweb/JavaAOC/blob/rust/src/aoc2024/day1/mod.rs](https://github.com/cursorweb/JavaAOC/blob/rust/src/aoc2024/day1/mod.rs)\n\n  \nI
        didn''t code in rust for a while, so for the first half I was honestly just
        searching up how to do stuff in rust lol\n\n  \nWay easier than last year
        that''s for sure!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/cursorweb/JavaAOC/blob/rust/src/aoc2024/day1/mod.rs\"&gt;https://github.com/cursorweb/JavaAOC/blob/rust/src/aoc2024/day1/mod.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        didn&amp;#39;t code in rust for a while, so for the first half I was honestly
        just searching up how to do stuff in rust lol&lt;/p&gt;\n\n&lt;p&gt;Way easier
        than last year that&amp;#39;s for sure!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztvtu4/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztvtu4", "created": 1733030284.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lztxbyr", "id": "lztxbyr", "parent_id":
        "t1_lztvtu4", "depth": 1, "children": ["lztxbyr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztwb58",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "maarteq",
        "can_mod_post": false, "created_utc": 1733030522.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_yt87v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "`[LANGUAGE: python]`, 1259,1384\n\n[paste](https://topaz.github.io/paste/#XQAAAQAOAQAAAAAAAAAyGEruliPhOEAkMm9/7OLixM6UY+MH5SGX+q8gNitz5GrrtrcqCm4yYrc91B8M45fMJnFn/W91iDWa5J8SmExSpyFEjVxlPnFVTsXdGrkDmcUKaKeqCFCAUMckDvmy1nIaz+1NZUbowG7dvdnM/4ZsC903yddgpWyjAANfHf8jgEW7Qe1tRWAMLuXKKk7Glx9kPsReimVvyLFzeAFI2x7jLkfW7AVP0sQOLRpQNJ3lVcZEpC6lHPr/k3NAAA==)\n\nI
        need to learn to read the problem better. Especially the part about calculating
        the answer", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;[LANGUAGE:
        python]&lt;/code&gt;, 1259,1384&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAOAQAAAAAAAAAyGEruliPhOEAkMm9/7OLixM6UY+MH5SGX+q8gNitz5GrrtrcqCm4yYrc91B8M45fMJnFn/W91iDWa5J8SmExSpyFEjVxlPnFVTsXdGrkDmcUKaKeqCFCAUMckDvmy1nIaz+1NZUbowG7dvdnM/4ZsC903yddgpWyjAANfHf8jgEW7Qe1tRWAMLuXKKk7Glx9kPsReimVvyLFzeAFI2x7jLkfW7AVP0sQOLRpQNJ3lVcZEpC6lHPr/k3NAAA==\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        need to learn to read the problem better. Especially the part about calculating
        the answer&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwb58/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztwb58", "created":
        1733030522.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lztzlsw", "id": "lztzlsw", "parent_id":
        "t1_lztwb58", "depth": 1, "children": ["lztzlsw", "lztwb5n"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztwckv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "PendragonDaGreat",
        "can_mod_post": false, "created_utc": 1733030542.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_7nqwk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: C# Csharp]\n\nSolution: https://github.com/Bpendragon/AdventOfCodeCSharp/blob/cf7c4/AdventOfCode/Solutions/Year2024/Day01-Solution.cs\n\nCouple
        of Linq one-liners on this one. Great first day to get me back in the rhythm
        of things. Here''s to another fun year!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: C# Csharp]&lt;/p&gt;\n\n&lt;p&gt;Solution:
        &lt;a href=\"https://github.com/Bpendragon/AdventOfCodeCSharp/blob/cf7c4/AdventOfCode/Solutions/Year2024/Day01-Solution.cs\"&gt;https://github.com/Bpendragon/AdventOfCodeCSharp/blob/cf7c4/AdventOfCode/Solutions/Year2024/Day01-Solution.cs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Couple
        of Linq one-liners on this one. Great first day to get me back in the rhythm
        of things. Here&amp;#39;s to another fun year!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwckv/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztwckv", "created": 1733030542.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzty392", "id": "lzty392", "parent_id":
        "t1_lztwckv", "depth": 1, "children": ["lzty392"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztwdz8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Rush_Independent",
        "can_mod_post": false, "created_utc": 1733030562.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_75m8qjlz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Nim]\n\n    proc solve(input: string): AOCSolution[int, int] =\n      let
        lines = input.splitLines()\n\n      var l1,l2: seq[int]\n      for line in
        lines:\n        let pair = line.splitWhitespace()\n        l1.add parseInt(pair[0])\n        l2.add
        parseInt(pair[1])\n\n      l1.sort()\n      l2.sort()\n\n      block p1:\n        for
        i in 0..l1.high:\n          result.part1 += abs(l1[i] - l2[i])\n\n      block
        p2:\n        for n in l1:\n          result.part2 += n * l2.count(n)\n\nI''ve
        got my first sub 1000 rank (998). Yay!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Nim]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;proc
        solve(input: string): AOCSolution[int, int] =\n  let lines = input.splitLines()\n\n  var
        l1,l2: seq[int]\n  for line in lines:\n    let pair = line.splitWhitespace()\n    l1.add
        parseInt(pair[0])\n    l2.add parseInt(pair[1])\n\n  l1.sort()\n  l2.sort()\n\n  block
        p1:\n    for i in 0..l1.high:\n      result.part1 += abs(l1[i] - l2[i])\n\n  block
        p2:\n    for n in l1:\n      result.part2 += n * l2.count(n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve
        got my first sub 1000 rank (998). Yay!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwdz8/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztwdz8", "created": 1733030562.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztwk1p", "id": "lztwk1p", "parent_id":
        "t1_lztwdz8", "depth": 1, "children": ["lztwk1p"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztwo15",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "c4irns",
        "can_mod_post": false, "created_utc": 1733030702.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_cbwh5ese8",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "`[LANGUAGE: Go]`\n\n[Solution to parts 1 and 2.](https://github.com/cdillond/aoc/blob/main/2024/d1/1.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;[LANGUAGE:
        Go]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/cdillond/aoc/blob/main/2024/d1/1.go\"&gt;Solution
        to parts 1 and 2.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwo15/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztwo15", "created":
        1733030702.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztwo1q", "id": "lztwo1q", "parent_id":
        "t1_lztwo15", "depth": 1, "children": ["lztwo1q"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztws3t",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "clouddjr",
        "can_mod_post": false, "created_utc": 1733030759.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1505cu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Kotlin]\n\nGlad to see you all again!\n\n[Solution](https://github.com/ClouddJR/advent-of-code-2024/blob/main/src/main/kotlin/com/clouddjr/advent2024/Day01.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin]&lt;/p&gt;\n\n&lt;p&gt;Glad
        to see you all again!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ClouddJR/advent-of-code-2024/blob/main/src/main/kotlin/com/clouddjr/advent2024/Day01.kt\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztws3t/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztws3t", "created":
        1733030759.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztz686", "id": "lztz686", "parent_id":
        "t1_lztws3t", "depth": 1, "children": ["lztz686"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733043878.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztwvux", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "pdxbuckets",
        "can_mod_post": false, "created_utc": 1733030813.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_qqcrq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Languages: Kotlin, Rust\\]\n\n[Kotlin](https://github.com/nbanman/Play2022/blob/master/src/main/kotlin/org/gristle/adventOfCode/y2024/d1/Y2024D1.kt),
        [Rust](https://github.com/nbanman/advent/blob/master/2024/01.rs)\n\nDespite
        the simplicity I leaned on a bunch of premade utility functions. Just can''t
        help myself.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Languages:
        Kotlin, Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/nbanman/Play2022/blob/master/src/main/kotlin/org/gristle/adventOfCode/y2024/d1/Y2024D1.kt\"&gt;Kotlin&lt;/a&gt;,
        &lt;a href=\"https://github.com/nbanman/advent/blob/master/2024/01.rs\"&gt;Rust&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Despite
        the simplicity I leaned on a bunch of premade utility functions. Just can&amp;#39;t
        help myself.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztwvux/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztwvux", "created":
        1733030813.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzubv6w", "id": "lzubv6w", "parent_id":
        "t1_lztwvux", "depth": 1, "children": ["lzubv6w", "lztwvxa"]}}, {"kind": "t1",
        "data": {"author_cakeday": true, "subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztx9nv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AllanTaylor314",
        "can_mod_post": false, "created_utc": 1733031009.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_u59prxs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[GitHub](https://github.com/AllanTaylor314/AdventOfCode/blob/main/2024/01.py)\n\nA
        lot of that is just my template, then the actual solution is a couple of sums
        of generator expressions (yeah, part 2 is n^(2) but I couldn''t be bothered
        importing Counter). Sorting makes part 1 really simple and doesn''t affect
        the way I do part 2 (I could use the fact that it''s sorted, but since anything
        else would take more than 11 ms to write, it''s faster to run it as is. (This
        year I''m planning to make each commitish in the form {year}D{day:02d} using
        [lucky commit](https://github.com/not-an-aardvark/lucky-commit))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AllanTaylor314/AdventOfCode/blob/main/2024/01.py\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A
        lot of that is just my template, then the actual solution is a couple of sums
        of generator expressions (yeah, part 2 is n&lt;sup&gt;2&lt;/sup&gt; but I
        couldn&amp;#39;t be bothered importing Counter). Sorting makes part 1 really
        simple and doesn&amp;#39;t affect the way I do part 2 (I could use the fact
        that it&amp;#39;s sorted, but since anything else would take more than 11
        ms to write, it&amp;#39;s faster to run it as is. (This year I&amp;#39;m planning
        to make each commitish in the form {year}D{day:02d} using &lt;a href=\"https://github.com/not-an-aardvark/lucky-commit\"&gt;lucky
        commit&lt;/a&gt;)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztx9nv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztx9nv", "created":
        1733031009.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztxcn2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "xiBread",
        "can_mod_post": false, "created_utc": 1733031051.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_c6xhjybj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript/TypeScript\\]\n\n`transpose` is a util function from
        previous years\n\n    const ids = input.split(\"\\n\").map((line) =&gt; line.split(/
        +/).map(Number));\n    const [left, right] = transpose(ids);\n    left.sort((a,
        b) =&gt; a - b)\n    right.sort((a, b) =&gt; a - b)\n    \n    let distance
        = 0;\n    let sim = 0;\n    \n    for (let i = 0; i &lt; left.length; i++)
        {\n      distance += Math.abs(left[i] - right[i]);\n      sim += left[i] *
        right.filter((n) =&gt; n === left[i]).length\n    }\n    \n    console.log(distance,
        sim);", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        JavaScript/TypeScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;transpose&lt;/code&gt;
        is a util function from previous years&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        ids = input.split(&amp;quot;\\n&amp;quot;).map((line) =&amp;gt; line.split(/
        +/).map(Number));\nconst [left, right] = transpose(ids);\nleft.sort((a, b)
        =&amp;gt; a - b)\nright.sort((a, b) =&amp;gt; a - b)\n\nlet distance = 0;\nlet
        sim = 0;\n\nfor (let i = 0; i &amp;lt; left.length; i++) {\n  distance +=
        Math.abs(left[i] - right[i]);\n  sim += left[i] * right.filter((n) =&amp;gt;
        n === left[i]).length\n}\n\nconsole.log(distance, sim);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxcn2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxcn2", "created":
        1733031051.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztxczr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "bosyluke",
        "can_mod_post": false, "created_utc": 1733031056.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_11imbq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Roc\\]\n\n\n\n[https://github.com/lukewilliamboswell/aoc/blob/2024/2024/01.roc](https://github.com/lukewilliamboswell/aoc/blob/2024/2024/01.roc)\n\n\n\n\\`\\`\\`\n\nTIMING:\n\nREADING
        INPUT:  &lt;1ms\n\nSOLVING PART 1: &lt;1ms\n\nSOLVING PART 2: 1ms\n\n\\`\\`\\`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Roc]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/lukewilliamboswell/aoc/blob/2024/2024/01.roc\"&gt;https://github.com/lukewilliamboswell/aoc/blob/2024/2024/01.roc&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;TIMING:&lt;/p&gt;\n\n&lt;p&gt;READING
        INPUT:  &amp;lt;1ms&lt;/p&gt;\n\n&lt;p&gt;SOLVING PART 1: &amp;lt;1ms&lt;/p&gt;\n\n&lt;p&gt;SOLVING
        PART 2: 1ms&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxczr/", "subreddit_type":
        "public", "locked": false, "name": "t1_lztxczr", "created": 1733031056.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztyvb5", "id": "lztyvb5", "parent_id":
        "t1_lztxczr", "depth": 1, "children": ["lztyvb5"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztxfn0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "CodingAP",
        "can_mod_post": false, "created_utc": 1733031095.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_2mtc4ku", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Javascript\\]\n\n[Github](https://github.com/CodingAP/advent-of-code/tree/main/puzzles/2024/day01)\n\nFIRST
        DAY! I could have gotten it faster if I could read it correctly lol", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Javascript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/CodingAP/advent-of-code/tree/main/puzzles/2024/day01\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;FIRST
        DAY! I could have gotten it faster if I could read it correctly lol&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxfn0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxfn0", "created":
        1733031095.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztytot", "id": "lztytot", "parent_id":
        "t1_lztxfn0", "depth": 1, "children": ["lztytot"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztxfyf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "rjwut",
        "can_mod_post": false, "created_utc": 1733031099.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_i0mae2g0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\n[A heck of a lot easier day 1 puzzle than last
        year''s!](https://github.com/rjwut/advent/blob/main/src/solutions/2024/day-01.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/rjwut/advent/blob/main/src/solutions/2024/day-01.js\"&gt;A
        heck of a lot easier day 1 puzzle than last year&amp;#39;s!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxfyf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxfyf", "created":
        1733031099.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztxgq1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Prashant_acharya",
        "can_mod_post": false, "created_utc": 1733031111.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_p2nb2zk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: **Python**\\] 3511/3901\n\n[https://github.com/prashantacharya/advent-of-code/blob/main/2024/day1/solution.py](https://github.com/prashantacharya/advent-of-code/blob/main/2024/day1/solution.py)\n\nI
        found this year''s day 1 to be easier than the last.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: &lt;strong&gt;Python&lt;/strong&gt;] 3511/3901&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/prashantacharya/advent-of-code/blob/main/2024/day1/solution.py\"&gt;https://github.com/prashantacharya/advent-of-code/blob/main/2024/day1/solution.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        found this year&amp;#39;s day 1 to be easier than the last.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxgq1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxgq1", "created":
        1733031111.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733031488.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztxhsi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "aardvark1231",
        "can_mod_post": false, "created_utc": 1733031126.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_24zg2nv1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C#\\] [link](https://topaz.github.io/paste/#XQAAAQByBAAAAAAAAAA3GEn9/eN2jGGty61rWWeY6HGwFGBypUfqx5dxr2WRlH5BN3+Dgv3Xg3lvVRBWlTf/HgZQU77fHwDQ9K/P3SoJIvKHNplcRAeJjjXkVDjSFgbl/7bNC9WZSj19cIczgUhmz/j+DDcmnoUSpqao4LVlxmN0sohh/47KF5J1Qge8SVgwl7WPsDi7arqvRzN54cutpWQ+whnAr1OY3TM5SLQa7v9mmIzBrsnOIm/SiKwGZ33k6ZFNrMlEfRljfVn4Qll1QLGk5VoY/XkDn1q6TCL4ZPY2sRA7hM3uiPOmwWvGawfEzgdqPjcPaXc7bgXgJd7XtsWdzJV8UDb54IFR2qLaon1mpyJe8jnMvjYNTSRuDfUD3bNGn31Wkxo3k2DpGVOfZnD3iJzxl6mBgxUux9I248MIODHn18KSfzd7kpIWTumaKJ4LRts3XqHjyFhLOz9JoWgzfdLu6C0iI91G6sat2nScOZAINnzmhwQ/tHXoBOoFeeg9egHTKZ9mGhztl1YKqBqaBst8yRvauNizDBv+owbAiAux0YvvkW6bl2pwMHlpN0+XZ6bUE95hA70vI2eVDzfB/sTZog==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#] &lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQByBAAAAAAAAAA3GEn9/eN2jGGty61rWWeY6HGwFGBypUfqx5dxr2WRlH5BN3+Dgv3Xg3lvVRBWlTf/HgZQU77fHwDQ9K/P3SoJIvKHNplcRAeJjjXkVDjSFgbl/7bNC9WZSj19cIczgUhmz/j+DDcmnoUSpqao4LVlxmN0sohh/47KF5J1Qge8SVgwl7WPsDi7arqvRzN54cutpWQ+whnAr1OY3TM5SLQa7v9mmIzBrsnOIm/SiKwGZ33k6ZFNrMlEfRljfVn4Qll1QLGk5VoY/XkDn1q6TCL4ZPY2sRA7hM3uiPOmwWvGawfEzgdqPjcPaXc7bgXgJd7XtsWdzJV8UDb54IFR2qLaon1mpyJe8jnMvjYNTSRuDfUD3bNGn31Wkxo3k2DpGVOfZnD3iJzxl6mBgxUux9I248MIODHn18KSfzd7kpIWTumaKJ4LRts3XqHjyFhLOz9JoWgzfdLu6C0iI91G6sat2nScOZAINnzmhwQ/tHXoBOoFeeg9egHTKZ9mGhztl1YKqBqaBst8yRvauNizDBv+owbAiAux0YvvkW6bl2pwMHlpN0+XZ6bUE95hA70vI2eVDzfB/sTZog==\"&gt;link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxhsi/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxhsi", "created":
        1733031126.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lztxhxi", "id": "lztxhxi", "parent_id":
        "t1_lztxhsi", "depth": 1, "children": ["lztxhxi"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733031595.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztxn9m", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "_drftgy",
        "can_mod_post": false, "created_utc": 1733031204.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_17v7mcdg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Elixir\\]\n\n    defmodule AOC2024.Day1 do\n      def parse_lists(lines)
        do\n        lines\n        |&gt; Enum.map(fn line -&gt;\n          Regex.split(~r/\\s+/,
        line)\n          |&gt; Enum.map(&amp;String.to_integer/1)\n          |&gt;
        List.to_tuple()\n        end)\n        |&gt; Enum.unzip()\n      end\n    end\n    \n    defmodule
        AOC2024.Day1.Part1 do\n      def sum_distance({left, right}) do\n        [left,
        right]\n        |&gt; Enum.map(&amp;Enum.sort/1)\n        |&gt; Enum.zip()\n        |&gt;
        Enum.map(fn {a, b} -&gt; abs(a - b) end)\n        |&gt; Enum.sum()\n      end\n    end\n    \n    defmodule
        AOC2024.Day1.Part2 do\n      def similarity_score({left, right}) do\n        left\n        |&gt;
        Enum.map(fn el -&gt;\n          el * Enum.count(right, &amp;(&amp;1 == el))\n        end)\n        |&gt;
        Enum.sum()\n      end\n    end", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        AOC2024.Day1 do\n  def parse_lists(lines) do\n    lines\n    |&amp;gt; Enum.map(fn
        line -&amp;gt;\n      Regex.split(~r/\\s+/, line)\n      |&amp;gt; Enum.map(&amp;amp;String.to_integer/1)\n      |&amp;gt;
        List.to_tuple()\n    end)\n    |&amp;gt; Enum.unzip()\n  end\nend\n\ndefmodule
        AOC2024.Day1.Part1 do\n  def sum_distance({left, right}) do\n    [left, right]\n    |&amp;gt;
        Enum.map(&amp;amp;Enum.sort/1)\n    |&amp;gt; Enum.zip()\n    |&amp;gt; Enum.map(fn
        {a, b} -&amp;gt; abs(a - b) end)\n    |&amp;gt; Enum.sum()\n  end\nend\n\ndefmodule
        AOC2024.Day1.Part2 do\n  def similarity_score({left, right}) do\n    left\n    |&amp;gt;
        Enum.map(fn el -&amp;gt;\n      el * Enum.count(right, &amp;amp;(&amp;amp;1
        == el))\n    end)\n    |&amp;gt; Enum.sum()\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxn9m/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxn9m", "created":
        1733031204.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lztxnch", "id": "lztxnch", "parent_id":
        "t1_lztxn9m", "depth": 1, "children": ["lztxnch", "lztya3s"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733114779.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztxp3z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "jaccomoc",
        "can_mod_post": false, "created_utc": 1733031232.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_8mzcbozf5",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Jactl\\]\n\n[Jactl](https://github.com/jaccomoc/jactl)\n\nPart
        1:\n\n    def data = stream(nextLine).map{ [$1,$2] if /(\\d*) +(\\d*)/n }\n    [data.map{it[0]}.sort(),
        data.map{it[1]}.sort()].transpose()\n                                                    .map{
        (it[0] - it[1]).abs() }\n                                                    .sum()\nEdit:\n\nBetter
        version with everything done by one statement:\n\n    stream(nextLine).map{
        [$1,$2] if /(\\d*) +(\\d*)/n }\n                    .transpose().map{ it.sort()
        }.transpose()\n                    .map{ (it[0] - it[1]).abs() }\n                    .sum()\n\n\nPart
        2:\n\nUsed the built-in groupBy method to create a map of entries of the right
        hand list and could then just use the size of each map entry as the number
        of times the entry occurred:\n\n    def data = stream(nextLine).map{ it.split(/
        +/) }\n    Map rhs = data.map{ it[1] }.groupBy{ it }\n    data.map{ (rhs[it[0]]?.size()
        ?: 0) * (it[0] as int) }.sum()", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Jactl]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/jaccomoc/jactl\"&gt;Jactl&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def data = stream(nextLine).map{ [$1,$2]
        if /(\\d*) +(\\d*)/n }\n[data.map{it[0]}.sort(), data.map{it[1]}.sort()].transpose()\n                                                .map{
        (it[0] - it[1]).abs() }\n                                                .sum()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit:&lt;/p&gt;\n\n&lt;p&gt;Better
        version with everything done by one statement:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;stream(nextLine).map{
        [$1,$2] if /(\\d*) +(\\d*)/n }\n                .transpose().map{ it.sort()
        }.transpose()\n                .map{ (it[0] - it[1]).abs() }\n                .sum()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;p&gt;Used the built-in groupBy method to create a map
        of entries of the right hand list and could then just use the size of each
        map entry as the number of times the entry occurred:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        data = stream(nextLine).map{ it.split(/ +/) }\nMap rhs = data.map{ it[1] }.groupBy{
        it }\ndata.map{ (rhs[it[0]]?.size() ?: 0) * (it[0] as int) }.sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxp3z/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxp3z", "created":
        1733031232.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztxsbu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "InfantAlpaca",
        "can_mod_post": false, "created_utc": 1733031279.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_4ecwt0ab", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Java\\]\n\n[GitHub](https://github.com/imisaacwu/AdventOfCode2024/blob/main/src/day01.java)\n\nTook
        way too long forgetting how PriorityQueues work T-T", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Java]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/imisaacwu/AdventOfCode2024/blob/main/src/day01.java\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Took
        way too long forgetting how PriorityQueues work T-T&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztxsbu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztxsbu", "created":
        1733031279.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztycnp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ShraddhaAg",
        "can_mod_post": false, "created_utc": 1733031572.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_8hxc6dg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Golang\\]\\[Language: Go\\]\n\n[https://github.com/shraddhaag/aoc/blob/main/2024/day1/main.go](https://github.com/shraddhaag/aoc/blob/main/2024/day1/main.go)
        simple enough!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Golang][Language: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/shraddhaag/aoc/blob/main/2024/day1/main.go\"&gt;https://github.com/shraddhaag/aoc/blob/main/2024/day1/main.go&lt;/a&gt;
        simple enough!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztycnp/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztycnp", "created":
        1733031572.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_m0hnzhd", "id": "m0hnzhd", "parent_id":
        "t1_lztycnp", "depth": 1, "children": ["m0hnzhd"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733031850.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztyism", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "stefanogallotti",
        "can_mod_post": false, "created_utc": 1733031662.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_2s1a9jy9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: python\\]\n\nPart1: order the 2 lists and zip them. I used abs
        for the distance, but was probably unnecessary\n\nPart2: python Counter (with
        default 0) does the trick!\n\n[https://github.com/Stegallo/adventofcode/blob/master/y\\_2024/day1.py](https://github.com/Stegallo/adventofcode/blob/master/y_2024/day1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: python]&lt;/p&gt;\n\n&lt;p&gt;Part1:
        order the 2 lists and zip them. I used abs for the distance, but was probably
        unnecessary&lt;/p&gt;\n\n&lt;p&gt;Part2: python Counter (with default 0) does
        the trick!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Stegallo/adventofcode/blob/master/y_2024/day1.py\"&gt;https://github.com/Stegallo/adventofcode/blob/master/y_2024/day1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztyism/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztyism", "created":
        1733031662.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lztyiut", "id": "lztyiut", "parent_id":
        "t1_lztyism", "depth": 1, "children": ["lztyiut"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztypfi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "atgotreaux",
        "can_mod_post": false, "created_utc": 1733031760.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_g43ru96ow",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: Java]\n\n[Solution](https://github.com/atgotreaux/advent-of-code/blob/main/src/main/java/com/gotreaux/aoc/puzzles/year2024/day1/HistorianHysteriaPuzzle.java)\n\n[Commit](https://github.com/atgotreaux/advent-of-code/commit/f430c5e4ae89f2110248db12f3cafb5afd72d11c)\n\nOver-complicated
        it due to bad reading comprehension in part 2 and decided to leave it as is.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Java]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/atgotreaux/advent-of-code/blob/main/src/main/java/com/gotreaux/aoc/puzzles/year2024/day1/HistorianHysteriaPuzzle.java\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/atgotreaux/advent-of-code/commit/f430c5e4ae89f2110248db12f3cafb5afd72d11c\"&gt;Commit&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Over-complicated
        it due to bad reading comprehension in part 2 and decided to leave it as is.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztypfi/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztypfi", "created":
        1733031760.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztzho4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "1234abcdcba4321",
        "can_mod_post": false, "created_utc": 1733032174.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_fwjol", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: JavaScript] 418/536\n\n[paste](https://topaz.github.io/paste/#XQAAAQCIAgAAAAAAAAAzHUn/qWH7EwabLbUYZcbAOWYrsIHfawc2xdomJKJZ7d0oskikhivZTMk6ng1PHLw8dF/3uwhzWzmZM7NQPz3BV6Cbh81uy8KDrkmhOoFruLJ6dqTeDhXo/z+ngppTARdlnOaIWNmnOsbcNyargLJKHkjXaZiNWfZ7LSStAbhX2TWX71xEY9SOURr0Jkxu/fipznModnDe+PRNBpsRsI1D+w2CaLv/Sv0Vl4x1FphkF6EDjjuZLIqUOjLkN49nq3SJkzrozAQW8rOovW0qayxqX0eXHOa5il5wkdlp596eI0h2wl6N9nFKQArUR9I+ccqc2Umf5bo1tWfrA97/diqL+AFPRpjexscyAXzDEvjgUlbdubPRyHnNp/roISBuPBaXsF0KBVoXqohM+z9vGJFgq1J7KypT5artc5Fg34/xckH1hjNeBAj/P4LwW5G7eUp8Pidl7yaNr9gHinZaWf73lcG4)
        (significantly cleaned from first completion)\n\nNothing out of the ordinary
        here, though like usual I find myself wanting a default dict (I didn''t feel
        like figuring out a good way to do the count the O(n) way, though now that
        i think about it it''s really easy). I should really build one myself, but
        JS has no operator overloading.\n\nMain timeloss today was ~20s from making
        a mistake in my copypaste boilerplate template and not noticing until my program
        errored.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        JavaScript] 418/536&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCIAgAAAAAAAAAzHUn/qWH7EwabLbUYZcbAOWYrsIHfawc2xdomJKJZ7d0oskikhivZTMk6ng1PHLw8dF/3uwhzWzmZM7NQPz3BV6Cbh81uy8KDrkmhOoFruLJ6dqTeDhXo/z+ngppTARdlnOaIWNmnOsbcNyargLJKHkjXaZiNWfZ7LSStAbhX2TWX71xEY9SOURr0Jkxu/fipznModnDe+PRNBpsRsI1D+w2CaLv/Sv0Vl4x1FphkF6EDjjuZLIqUOjLkN49nq3SJkzrozAQW8rOovW0qayxqX0eXHOa5il5wkdlp596eI0h2wl6N9nFKQArUR9I+ccqc2Umf5bo1tWfrA97/diqL+AFPRpjexscyAXzDEvjgUlbdubPRyHnNp/roISBuPBaXsF0KBVoXqohM+z9vGJFgq1J7KypT5artc5Fg34/xckH1hjNeBAj/P4LwW5G7eUp8Pidl7yaNr9gHinZaWf73lcG4\"&gt;paste&lt;/a&gt;
        (significantly cleaned from first completion)&lt;/p&gt;\n\n&lt;p&gt;Nothing
        out of the ordinary here, though like usual I find myself wanting a default
        dict (I didn&amp;#39;t feel like figuring out a good way to do the count the
        O(n) way, though now that i think about it it&amp;#39;s really easy). I should
        really build one myself, but JS has no operator overloading.&lt;/p&gt;\n\n&lt;p&gt;Main
        timeloss today was ~20s from making a mistake in my copypaste boilerplate
        template and not noticing until my program errored.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztzho4/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztzho4", "created":
        1733032174.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztzpt7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Responsible_You_6039",
        "can_mod_post": false, "created_utc": 1733032294.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1cx75w826b",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: python\\]\n\n[github code](https://github.com/kanakOS01/AdventOfCode/blob/main/2024/1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/kanakOS01/AdventOfCode/blob/main/2024/1.py\"&gt;github
        code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztzpt7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztzpt7", "created":
        1733032294.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733032524.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztzrhe", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "radulfr2",
        "can_mod_post": false, "created_utc": 1733032319.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1wqtesyh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nI was so tired yesterday that although I remembered
        to remind others of AoC, I forgot to set the alarm for just before the puzzle
        opens.\n\n[Paste](https://topaz.github.io/paste/#XQAAAQAeAQAAAAAAAAA2GUkF5MQe5G44S2wn1yfnSt9HYmbZF2klh6wHbums0kZg6wDDY82NB6Gsufm9LKnEAZIKeYdLmQIC2DGolvYOFKHGC6yfzAhk7FmShzgswb5cwC7CCtoBf7ravxjoquwwVXu4t6VIQ2MkENAtJgij7D9BIv9nde+OMn1T+iTIIS3JWQ50sOK1EY50kT0BXMhTk5alLyElHMqIiXXWP5IXTF5rALpaCu8JW+zLAakr+7LBFA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;I
        was so tired yesterday that although I remembered to remind others of AoC,
        I forgot to set the alarm for just before the puzzle opens.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQAeAQAAAAAAAAA2GUkF5MQe5G44S2wn1yfnSt9HYmbZF2klh6wHbums0kZg6wDDY82NB6Gsufm9LKnEAZIKeYdLmQIC2DGolvYOFKHGC6yfzAhk7FmShzgswb5cwC7CCtoBf7ravxjoquwwVXu4t6VIQ2MkENAtJgij7D9BIv9nde+OMn1T+iTIIS3JWQ50sOK1EY50kT0BXMhTk5alLyElHMqIiXXWP5IXTF5rALpaCu8JW+zLAakr+7LBFA==\"&gt;Paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztzrhe/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztzrhe", "created":
        1733032319.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu0358",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "PotentialStyx",
        "can_mod_post": false, "created_utc": 1733032493.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ebo25af58",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: scratch\\]\n\n[https://scratch.mit.edu/projects/1104378434/](https://scratch.mit.edu/projects/1104378434/)
        (Just part one though)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        scratch]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://scratch.mit.edu/projects/1104378434/\"&gt;https://scratch.mit.edu/projects/1104378434/&lt;/a&gt;
        (Just part one though)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu0358/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu0358", "created":
        1733032493.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu08md",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "davepb",
        "can_mod_post": false, "created_utc": 1733032575.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_as2ql", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Go\\]\n\n[https://github.com/atlas-editor/aoc/blob/main/2024/d01/x.go](https://github.com/atlas-editor/aoc/blob/main/2024/d01/x.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/atlas-editor/aoc/blob/main/2024/d01/x.go\"&gt;https://github.com/atlas-editor/aoc/blob/main/2024/d01/x.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu08md/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu08md", "created":
        1733032575.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu09x9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Illustrious_Fortune7",
        "can_mod_post": false, "created_utc": 1733032595.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_6h9tvrkj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Kotlin\\]\n\n[https://github.com/ritesh-singh/aoc-2024/blob/main/src/day01/Day01.kt](https://github.com/ritesh-singh/aoc-2024/blob/main/src/day01/Day01.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ritesh-singh/aoc-2024/blob/main/src/day01/Day01.kt\"&gt;https://github.com/ritesh-singh/aoc-2024/blob/main/src/day01/Day01.kt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu09x9/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu09x9", "created":
        1733032595.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu0lc6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "manninosi",
        "can_mod_post": false, "created_utc": 1733032768.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_4pcmf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nI like to use numpy. Appreciate the more stripped
        down Python solutions! Happy coding all!\n\n[Day 1 Solution](https://github.com/manninosi/AdventofCode/blob/main/2024/day%201/day1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;I
        like to use numpy. Appreciate the more stripped down Python solutions! Happy
        coding all!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/manninosi/AdventofCode/blob/main/2024/day%201/day1.py\"&gt;Day
        1 Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu0lc6/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu0lc6", "created":
        1733032768.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu1m7y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "michaelquinlan",
        "can_mod_post": false, "created_utc": 1733033330.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_326mx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: C#]\n\n    namespace Day01A;\n\n    internal static class Program\n    {\n        private
        const string InputFile = \"../../../Data.txt\";\n        \n        private
        static void Main()\n        {\n            var input = File.ReadAllLines(InputFile)\n                .Select(line
        =&gt; line.Split('' '', StringSplitOptions.RemoveEmptyEntries)).ToList();\n            var
        left = input.Select(line =&gt; int.Parse(line[0])).OrderBy(x =&gt; x).ToList();\n            var
        right = input.Select(line =&gt; int.Parse(line[1])).OrderBy(x =&gt; x).ToList();\n            var
        distance = 0;\n            for (var i = 0; i &lt; left.Count; i++)\n            {\n                distance
        += Math.Abs(left[i] - right[i]);\n            }\n            Console.WriteLine($\"Distance:
        {distance}\");\n\n            var score = (from l in left let count = right.Count(x
        =&gt; x == l) select l * count).Sum();\n            Console.WriteLine($\"Score:
        {score}\");\n        }\n    }", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;namespace
        Day01A;\n\ninternal static class Program\n{\n    private const string InputFile
        = &amp;quot;../../../Data.txt&amp;quot;;\n\n    private static void Main()\n    {\n        var
        input = File.ReadAllLines(InputFile)\n            .Select(line =&amp;gt; line.Split(&amp;#39;
        &amp;#39;, StringSplitOptions.RemoveEmptyEntries)).ToList();\n        var
        left = input.Select(line =&amp;gt; int.Parse(line[0])).OrderBy(x =&amp;gt;
        x).ToList();\n        var right = input.Select(line =&amp;gt; int.Parse(line[1])).OrderBy(x
        =&amp;gt; x).ToList();\n        var distance = 0;\n        for (var i = 0;
        i &amp;lt; left.Count; i++)\n        {\n            distance += Math.Abs(left[i]
        - right[i]);\n        }\n        Console.WriteLine($&amp;quot;Distance: {distance}&amp;quot;);\n\n        var
        score = (from l in left let count = right.Count(x =&amp;gt; x == l) select
        l * count).Sum();\n        Console.WriteLine($&amp;quot;Score: {score}&amp;quot;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu1m7y/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu1m7y", "created":
        1733033330.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzu2a4s", "id": "lzu2a4s", "parent_id":
        "t1_lzu1m7y", "depth": 1, "children": ["lzu2a4s"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu1tvt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "RF960",
        "can_mod_post": false, "created_utc": 1733033451.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_yv9bwjm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\nThought it started an hour later so was a bit late,
        lol.  \n[Solution here.](https://github.com/coolguy1842/adventofcode/blob/master/2024/days/Day1/src/Day.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;Thought
        it started an hour later so was a bit late, lol.&lt;br/&gt;\n&lt;a href=\"https://github.com/coolguy1842/adventofcode/blob/master/2024/days/Day1/src/Day.cpp\"&gt;Solution
        here.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu1tvt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu1tvt", "created":
        1733033451.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu1uyi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "rabuf",
        "can_mod_post": false, "created_utc": 1733033468.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_38xc9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n    def part1(left, right):\n        return sum(abs(l
        - r) for (l,r) in zip(left, right))\n\n    def part2(left, right):\n        counts
        = Counter(right)\n        return sum(l * counts[l] for l in left)\n\n`left`
        and `right` were pre-sorted since that was helpful to keep part 1 shorter
        and didn''t impact part 2.\n\n[LANGUAGE: Common Lisp]\n\n[LANGUAGE: CL]\n\n    ;;
        Part 1\n    (defun distance (a b) (abs (- a b)))\n    (defun part-1 (l r)\n      (loop
        for a in l\n            for b in r\n            sum (distance a b)))\n    ;;
        Part 2\n    (defun similarity (l r)\n      (loop for a in l\n            for
        c = (count a r)\n            sum (* a c)))\n\nPart 1 (and 2) could have been
        a map-reduce but this is the first code that came to mind so what I''m showing.
        Part 2 repeats the counts unlike the Python version. There is no built-in
        counter but making one isn''t hard. I use straight CL and haven''t (despite
        doing all years but 2023 in CL) created a library of utility functions and
        classes. I really should.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def part1(left, right):\n    return
        sum(abs(l - r) for (l,r) in zip(left, right))\n\ndef part2(left, right):\n    counts
        = Counter(right)\n    return sum(l * counts[l] for l in left)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;left&lt;/code&gt;
        and &lt;code&gt;right&lt;/code&gt; were pre-sorted since that was helpful
        to keep part 1 shorter and didn&amp;#39;t impact part 2.&lt;/p&gt;\n\n&lt;p&gt;[LANGUAGE:
        Common Lisp]&lt;/p&gt;\n\n&lt;p&gt;[LANGUAGE: CL]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;;;
        Part 1\n(defun distance (a b) (abs (- a b)))\n(defun part-1 (l r)\n  (loop
        for a in l\n        for b in r\n        sum (distance a b)))\n;; Part 2\n(defun
        similarity (l r)\n  (loop for a in l\n        for c = (count a r)\n        sum
        (* a c)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 1 (and 2) could have
        been a map-reduce but this is the first code that came to mind so what I&amp;#39;m
        showing. Part 2 repeats the counts unlike the Python version. There is no
        built-in counter but making one isn&amp;#39;t hard. I use straight CL and
        haven&amp;#39;t (despite doing all years but 2023 in CL) created a library
        of utility functions and classes. I really should.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu1uyi/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu1uyi", "created":
        1733033468.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzu74hd", "id": "lzu74hd", "parent_id":
        "t1_lzu1uyi", "depth": 1, "children": ["lzu74hd"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu2xei",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "anthonybrice",
        "can_mod_post": false, "created_utc": 1733034076.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_118xkufhgq",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Zig\\]  [Code on GitHub](https://github.com/anthonybrice/aoc2024/tree/master/src/day1)\n\nOn
        my desktop, part 1 takes \\~1.5ms and part 2 takes \\~3ms.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Zig]  &lt;a href=\"https://github.com/anthonybrice/aoc2024/tree/master/src/day1\"&gt;Code
        on GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;On my desktop, part 1 takes ~1.5ms
        and part 2 takes ~3ms.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu2xei/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu2xei", "created":
        1733034076.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu37j5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "nitekat1124",
        "can_mod_post": false, "created_utc": 1733034238.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_heztz12e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[GitHub](https://github.com/nitekat1124/advent-of-code-2024/blob/main/solutions/day01.py)\n\nThe
        power of zip", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/nitekat1124/advent-of-code-2024/blob/main/solutions/day01.py\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The
        power of zip&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu37j5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu37j5", "created":
        1733034238.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733039905.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu3arz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "FunInflation3972",
        "can_mod_post": false, "created_utc": 1733034288.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_acgtdkkm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[**LANGUAGE: JAVA**\\]  \nYes, it''s not dead yet!\n\n**Part - 2**\n\n    Map&lt;Integer,
        Integer&gt; frequencyMap = new HashMap&lt;&gt;();\n    for (int num : rightList)
        {\n        frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);\n    }\n    for
        (int num : leftList) {\n        int count = frequencyMap.getOrDefault(num,
        0);\n        sum2 += count * num;\n    }\n    System.out.println(\"Part 2
        Answer:\" + sum2);\n\nCheck out my code on \\[[Github](https://github.com/haseeb-xd/advent-of-code-2024/blob/master/src/main/java/com/ansari/haseeb/problems_2024/Day1/Day1.java)\\]\n\nMeowwww,
        happy coding!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[&lt;strong&gt;LANGUAGE:
        JAVA&lt;/strong&gt;]&lt;br/&gt;\nYes, it&amp;#39;s not dead yet!&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        - 2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Map&amp;lt;Integer,
        Integer&amp;gt; frequencyMap = new HashMap&amp;lt;&amp;gt;();\nfor (int num
        : rightList) {\n    frequencyMap.put(num, frequencyMap.getOrDefault(num, 0)
        + 1);\n}\nfor (int num : leftList) {\n    int count = frequencyMap.getOrDefault(num,
        0);\n    sum2 += count * num;\n}\nSystem.out.println(&amp;quot;Part 2 Answer:&amp;quot;
        + sum2);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Check out my code on [&lt;a
        href=\"https://github.com/haseeb-xd/advent-of-code-2024/blob/master/src/main/java/com/ansari/haseeb/problems_2024/Day1/Day1.java\"&gt;Github&lt;/a&gt;]&lt;/p&gt;\n\n&lt;p&gt;Meowwww,
        happy coding!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu3arz/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu3arz", "created":
        1733034288.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 7, "name": "t1_lzu44o9", "id": "lzu44o9", "parent_id":
        "t1_lzu3arz", "depth": 1, "children": ["lzu44o9", "lzuf9fc", "lzubwtl", "lzu3ask"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu3ne8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "jahinzee",
        "can_mod_post": false, "created_utc": 1733034490.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_76rmv9sb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nhttps://github.com/jahinzee/aoc/blob/main/2024/1.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jahinzee/aoc/blob/main/2024/1.py\"&gt;https://github.com/jahinzee/aoc/blob/main/2024/1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu3ne8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu3ne8", "created":
        1733034490.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu40h0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ObjectNo809",
        "can_mod_post": false, "created_utc": 1733034699.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_nlx2idm7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Golang\\]  \n[Part 1](https://github.com/DebadityaMalakar/AdventOfCode-2024/blob/main/Day1/part1/main.go)  \n[Part
        2](https://github.com/DebadityaMalakar/AdventOfCode-2024/blob/main/Day1/part2/main.go)  \n(Each
        file is a self-contained solution)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Golang]&lt;br/&gt;\n&lt;a href=\"https://github.com/DebadityaMalakar/AdventOfCode-2024/blob/main/Day1/part1/main.go\"&gt;Part
        1&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://github.com/DebadityaMalakar/AdventOfCode-2024/blob/main/Day1/part2/main.go\"&gt;Part
        2&lt;/a&gt;&lt;br/&gt;\n(Each file is a self-contained solution)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu40h0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu40h0", "created":
        1733034699.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 478, "name": "t1_lzu4arc", "id": "lzu4arc", "parent_id":
        "t3_1h3vp6n", "depth": 0, "children": ["lzu4arc", "lzu5vwv", "lzu4v0v", "lzua5pk",
        "lzub3gm", "lzuaoj8", "lzufy8k", "lzuatf2", "lzubp9n", "lzubafx", "lzud5mh",
        "lzuk8y5", "lzuhkm0", "lzugfkv", "lzuhysu", "lzubpt1", "lzul07q", "lzuclrz",
        "lzuc95m", "lzuh31k", "lzuhzeh", "lzuhdck", "lzv77ab", "lzv1j4u", "lzutgq2",
        "lzulx1l", "lzxb6wy", "lzuj69d", "lzunlr8", "lzuob92", "lzukmkn", "lzurqvp",
        "lzufzy7", "lzupjwe", "lzury9n", "lzumum1", "lzui3bt", "lzupl7p", "lzuluvw",
        "lzujvaw", "lzuin6w", "lzurdle", "lzut77l", "lzv0sma", "lzurrwf", "lzwbgg6",
        "lzx3r49", "lzv85jl", "lzvfewi", "lzw6jj7", "lzwbpkj", "lzupmws", "lzuorbh",
        "lzxr1ct", "lzxzre1", "lzv0mhf", "lzuqnrn", "lzunnlt", "lzuxuz5", "lzv0aq2",
        "lzut10v", "lzunco8", "lzwhlfw", "lzv5do7", "lzurxqm", "lzuq6jl", "lzumwlo",
        "lzux5eu", "lzuxln2", "lzv4kze", "lzwggfd", "lzwq5rw", "lzxv1io", "lzunjwq",
        "lzuzxk9", "lzvei7r", "lzuqiqy", "lzunhiy", "lzv6lu7", "lzv1amu", "lzupu7v",
        "lzxnxu5", "lzukqyb", "lzv3ssf", "lzy1vi1", "lzvlpzh", "lzv7dn6", "lzy0ubn",
        "lzutcrs", "lzuve9o", "lzyopak", "lzydt95", "lzyplnw", "lzwr1gt", "lzyi596",
        "lzw8s3t", "lzy50rj", "lzwpi7i", "lzyegbz", "lzz88li", "lzxni8y", "lzydegd",
        "lzusxwa", "lzxey3q", "lzwkspk", "lzu6fxr", "lzxd4fq", "lzwlnw1", "lzuiprd",
        "lzuqoee", "lzvqw9h", "lzuxu2f", "lzuorux", "lzvehvx", "lzwefd0", "lzw747s",
        "lzv69w1", "lzy5ev5", "lzv9bgi", "lzxiyqj", "lztyu01", "lzx5fi8", "lzvo53h",
        "lzyas3y", "lzx663l", "lzv0600", "lzv48yt", "lzvkpuj", "lzunwxv", "lzv0kiu",
        "lzv06w0", "lzyioa0", "lzx5ceh", "lzxvf32", "lzxwxer", "lzvgzl2", "lzybcds",
        "lzx7rcg", "lzx9tmj", "lzx7z9q", "lzuqgpm", "lzv5f36", "lzwwa0j", "lztzjk2",
        "lzufves", "lzy3w4z", "lzvbe25", "lzw1gq7", "lzyoxpn", "lzvuxar", "lzw82qi",
        "lzvb8mz", "lzurrr3", "lzv3mfg", "lzuqa28", "lzuyau3", "lzxjjz7", "lztx6do",
        "lzy3l4s", "lzxvj9k", "lzw9xv7", "lzuzoao", "lzuwuer", "lzu253p", "lzv9vah",
        "lzxped4", "lzudmaa", "lzuim0s", "lzufdi1", "lzvnk10", "lzuw204", "lzv76ku",
        "lzwtcbu", "lzwp0s1", "lzvljq9", "lzuuqlz", "lzu16p9", "lzv1h7j", "lzxcran",
        "lztz5jj", "lzuywc7", "lzz0m22", "lzur90m", "lzwcpug", "lztxifk", "lzv20jv",
        "lzxd7g7", "lzuegf5", "lzv1l81", "lzwwfi2", "lzyzbv8", "lzue4xp", "lzwpqqx",
        "lzv11tu", "lzvv2gw", "lzyitqc", "lzwve2u", "lzuuc24", "lzudkem", "lzw0s5r",
        "lzuksqn", "lzv83r3", "lzxpqjn", "lzvwrb4", "lzwf2n3", "lzw0bbp", "lzvjwvq",
        "lzy1ie6", "lzvijc3", "lzvny74", "lzxlypv", "lzyu3xo", "lzyip3j", "lzwqcgt",
        "lzup0wo", "lzvl48t", "lzwhsbr", "lzwih8i", "lzw0r7p", "lzyahn2", "lzvwbmb",
        "lztx3fc", "lzwfu9m", "lzw21qf", "lztwpd7", "lzxqfih", "lzulkpq", "lzvbkq0",
        "lztv294", "lztz227", "lzva6dl", "lzuo7jw", "lzx5ew6", "lzv0jmg", "lzu4jyf",
        "lzu257r", "lzuqymy", "lzumhc5", "lztwqd9", "lzyoaka", "lzxbuz2", "lzuztdp",
        "lzv1dp2", "lzx4yw1", "lzw7wbc", "lzv14mo", "lzuj683", "lzufa75", "lzw590b",
        "lzuiq49", "lztx0gs", "lzup10n", "lzww2ia", "lzyxsyp", "lzwlzli", "lzu0iw8",
        "lzwjr08", "lzwh5rt", "lzudln3", "lzw0gx8", "lzvl8xt", "lzw05v2", "lzymhbq",
        "lzufzih", "lzuduwc", "lzxc1gg", "lzy4wiu", "lzv6h6u"]}}], true]], [0, 12,
        "attr", "things"], [12, 13, "call", ["t1_lzw3rc4"]], [13, 14, "attr", "focus"],
        [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call", ["None"]],
        [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]], [19, 20,
        "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:40 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:41 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=hu5feXcesTBcIq8Za8; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:41 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzu4arc,lzu5vwv,lzu4v0v,lzua5pk,lzub3gm,lzuaoj8,lzufy8k,lzuatf2,lzubp9n,lzubafx,lzud5mh,lzuk8y5,lzuhkm0,lzugfkv,lzuhysu,lzubpt1,lzul07q,lzuclrz,lzuc95m,lzuh31k,lzuhzeh,lzuhdck,lzv77ab,lzv1j4u,lzutgq2,lzulx1l,lzxb6wy,lzuj69d,lzunlr8,lzuob92,lzukmkn,lzurqvp,lzufzy7,lzupjwe,lzury9n,lzumum1,lzui3bt,lzupl7p,lzuluvw,lzujvaw,lzuin6w,lzurdle,lzut77l,lzv0sma,lzurrwf,lzwbgg6,lzx3r49,lzv85jl,lzvfewi,lzw6jj7,lzwbpkj,lzupmws,lzuorbh,lzxr1ct,lzxzre1,lzv0mhf,lzuqnrn,lzunnlt,lzuxuz5,lzv0aq2,lzut10v,lzunco8,lzwhlfw,lzv5do7,lzurxqm,lzuq6jl,lzumwlo,lzux5eu,lzuxln2,lzv4kze,lzwggfd,lzwq5rw,lzxv1io,lzunjwq,lzuzxk9,lzvei7r,lzuqiqy,lzunhiy,lzv6lu7,lzv1amu,lzupu7v,lzxnxu5,lzukqyb,lzv3ssf,lzy1vi1,lzvlpzh,lzv7dn6,lzy0ubn,lzutcrs,lzuve9o,lzyopak,lzydt95,lzyplnw,lzwr1gt,lzyi596,lzw8s3t,lzy50rj,lzwpi7i,lzyegbz,lzz88li,lzxni8y,lzydegd,lzusxwa,lzxey3q,lzwkspk,lzu6fxr,lzxd4fq,lzwlnw1,lzuiprd,lzuqoee,lzvqw9h,lzuxu2f,lzuorux,lzvehvx,lzwefd0,lzw747s,lzv69w1,lzy5ev5,lzv9bgi,lzxiyqj,lztyu01,lzx5fi8,lzvo53h,lzyas3y,lzx663l,lzv0600,lzv48yt,lzvkpuj,lzunwxv,lzv0kiu,lzv06w0,lzyioa0,lzx5ceh,lzxvf32,lzxwxer,lzvgzl2,lzybcds,lzx7rcg,lzx9tmj,lzx7z9q,lzuqgpm,lzv5f36,lzwwa0j,lztzjk2,lzufves,lzy3w4z,lzvbe25,lzw1gq7,lzyoxpn,lzvuxar,lzw82qi,lzvb8mz,lzurrr3,lzv3mfg,lzuqa28,lzuyau3,lzxjjz7,lztx6do,lzy3l4s,lzxvj9k,lzw9xv7,lzuzoao,lzuwuer,lzu253p,lzv9vah,lzxped4,lzudmaa,lzuim0s,lzufdi1,lzvnk10,lzuw204,lzv76ku,lzwtcbu,lzwp0s1,lzvljq9,lzuuqlz,lzu16p9,lzv1h7j,lzxcran,lztz5jj,lzuywc7,lzz0m22,lzur90m,lzwcpug,lztxifk,lzv20jv,lzxd7g7,lzuegf5,lzv1l81,lzwwfi2,lzyzbv8,lzue4xp,lzwpqqx,lzv11tu,lzvv2gw,lzyitqc,lzwve2u,lzuuc24,lzudkem,lzw0s5r,lzuksqn,lzv83r3,lzxpqjn,lzvwrb4,lzwf2n3,lzw0bbp,lzvjwvq,lzy1ie6,lzvijc3,lzvny74,lzxlypv,lzyu3xo,lzyip3j,lzwqcgt,lzup0wo,lzvl48t,lzwhsbr,lzwih8i,lzw0r7p,lzyahn2,lzvwbmb,lztx3fc,lzwfu9m,lzw21qf,lztwpd7,lzxqfih,lzulkpq,lzvbkq0,lztv294,lztz227,lzva6dl,lzuo7jw,lzx5ew6,lzv0jmg,lzu4jyf,lzu257r,lzuqymy,lzumhc5,lztwqd9,lzyoaka,lzxbuz2,lzuztdp,lzv1dp2,lzx4yw1,lzw7wbc,lzv14mo,lzuj683,lzufa75,lzw590b,lzuiq49,lztx0gs,lzup10n,lzww2ia,lzyxsyp,lzwlzli,lzu0iw8,lzwjr08,lzwh5rt,lzudln3,lzw0gx8,lzvl8xt,lzw05v2,lzymhbq,lzufzih,lzuduwc,lzxc1gg,lzy4wiu,lzv6h6u
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '34947'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksemp6ww5.2.1741471481662.Z0FBQUFBQm56TDc2NkkzXzlhNWxGSmlqTW1pN2EySFBFNjBfU0V6ejIxdm9GM3ZPeEhGdTJIT01DLUlsOEpmOXBfeFl2UjZvVjJ0UTJiSXI2aElUS2pTVjVoYjFNdHFObVFpa0plOEFNdjBuZVhjeGp6aGdGc3p3dmpOMW9mZnd1RW1va2JKOVBpUGc;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:42
        GMT; secure, session_tracker=ignpjcdcnngfkoafpq.0.1741471481673.Z0FBQUFBQm56TDc2dUFac1l2RzJfRGZ6NExDYWN6NktmR0EyLU5rUW00QjhxVlF1ZjVMX20zTW80N204RWZIOHBzQjlNWTUtWkFiQkdCLWplenBoUEZiMTZSYl9aLWt0U2Z4em9vUE00cGtmc2xSRjZORUZ5UE16WWhWY0pGcENjVVFQbFpFZjdVbGQ;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:42
        GMT; secure, edgebucket=nDEH90ZtYbCRHmKm6W; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '8'
      x-ratelimit-remaining:
      - '92.0'
      x-ratelimit-reset:
      - '318'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:42 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu4arc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "wowguildfinder",
        "can_mod_post": false, "created_utc": 1733034864.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_abm27gin", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]  \n  \n[Solution](https://github.com/Zeke-MA/AdventOfCode2024/tree/main/2024/Day1)\n\n[](https://github.com/Zeke-MA/AdventOfCode2024/tree/main/2024/Day1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]  &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Zeke-MA/AdventOfCode2024/tree/main/2024/Day1\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Zeke-MA/AdventOfCode2024/tree/main/2024/Day1\"&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu4arc/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu4arc", "created":
        1733034864.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu4v0v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "WilkoTom",
        "can_mod_post": false, "created_utc": 1733035190.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_90ypf105", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n    fn answer (col_a: &amp;[i64], col_b: &amp;[i64])
        -&gt; (i64, i64) {\n        let mut nums_a = col_a.iter().collect::&lt;BinaryHeap&lt;_&gt;&gt;();\n        let
        mut nums_b = col_b.iter().collect::&lt;BinaryHeap&lt;_&gt;&gt;();\n        let
        ans1 = nums_a.drain_sorted().map(|a| (a - nums_b.pop().unwrap()).abs()).sum();\n        let
        ans2 = col_a.iter().map(|(a)| a*  col_b.iter().filter(|b| *b == a).count()
        as i64).sum();\n        (ans1, ans2)\n    }\n\nFull code on [Github](https://github.com/wilkotom/AdventOfCode/blob/main/rust/2024/day01/src/main.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        answer (col_a: &amp;amp;[i64], col_b: &amp;amp;[i64]) -&amp;gt; (i64, i64)
        {\n    let mut nums_a = col_a.iter().collect::&amp;lt;BinaryHeap&amp;lt;_&amp;gt;&amp;gt;();\n    let
        mut nums_b = col_b.iter().collect::&amp;lt;BinaryHeap&amp;lt;_&amp;gt;&amp;gt;();\n    let
        ans1 = nums_a.drain_sorted().map(|a| (a - nums_b.pop().unwrap()).abs()).sum();\n    let
        ans2 = col_a.iter().map(|(a)| a*  col_b.iter().filter(|b| *b == a).count()
        as i64).sum();\n    (ans1, ans2)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Full
        code on &lt;a href=\"https://github.com/wilkotom/AdventOfCode/blob/main/rust/2024/day01/src/main.rs\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu4v0v/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu4v0v", "created":
        1733035190.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu5vwv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Valletta6789",
        "can_mod_post": false, "created_utc": 1733035791.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_7q2qlx6r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n    def part1(left, right):\n        total = sum(abs(num_left
        - num_right) for num_left, num_right in zip(sorted(left), sorted(right)))\n        return
        total\n    \n    \n    def part2(left, right):\n        right_counter = Counter(right)\n        total
        = sum(left_num * right_counter.get(left_num, 0) for left_num in left)\n        return
        total", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def part1(left, right):\n    total
        = sum(abs(num_left - num_right) for num_left, num_right in zip(sorted(left),
        sorted(right)))\n    return total\n\n\ndef part2(left, right):\n    right_counter
        = Counter(right)\n    total = sum(left_num * right_counter.get(left_num, 0)
        for left_num in left)\n    return total\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu5vwv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu5vwv", "created":
        1733035791.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733040749.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzua5pk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Parzival_Perce",
        "can_mod_post": false, "created_utc": 1733038451.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_p3mpiigp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]  \nI''m decent at coding but still not great so yeah.
        Although this was pretty easy not much to be had here.\n\nEDIT: Realised sorted()
        exists.\n\n    puzzleInput=[i.strip().split() for i in open(r''/home/jay/Documents/Python/AoC_2024/d1.txt'',
        ''r'').readlines()]\n    list1=sorted([int(i[0]) for i in puzzleInput])\n    list2=sorted([int(i[1])
        for i in puzzleInput])\n    \n    def part1():\n        sum=0\n        for
        i in range(len(puzzleInput)):\n            sum+=abs(list1[i-1]-list2[i-1])\n        return
        sum\n    \n    def part2():\n        sum=0\n        for i in list1:\n            sum+=(i*list2.count(i))\n        return
        sum\n    \n    print(part1())", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;br/&gt;\nI&amp;#39;m decent
        at coding but still not great so yeah. Although this was pretty easy not much
        to be had here.&lt;/p&gt;\n\n&lt;p&gt;EDIT: Realised sorted() exists.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;puzzleInput=[i.strip().split()
        for i in open(r&amp;#39;/home/jay/Documents/Python/AoC_2024/d1.txt&amp;#39;,
        &amp;#39;r&amp;#39;).readlines()]\nlist1=sorted([int(i[0]) for i in puzzleInput])\nlist2=sorted([int(i[1])
        for i in puzzleInput])\n\ndef part1():\n    sum=0\n    for i in range(len(puzzleInput)):\n        sum+=abs(list1[i-1]-list2[i-1])\n    return
        sum\n\ndef part2():\n    sum=0\n    for i in list1:\n        sum+=(i*list2.count(i))\n    return
        sum\n\nprint(part1())\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzua5pk/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzua5pk", "created": 1733038451.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuaoj8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Ok-Apple-5691",
        "can_mod_post": false, "created_utc": 1733038791.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_7j9enq3u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Zig\\]\n\n[Day 01 GitHub](https://github.com/gdavidmassey/AOC_2024/blob/main/src/day01.zig)\n\nTrying
        to learn zig and be more organized!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Zig]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gdavidmassey/AOC_2024/blob/main/src/day01.zig\"&gt;Day
        01 GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Trying to learn zig and be more
        organized!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuaoj8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuaoj8", "created":
        1733038791.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuatf2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "blacai",
        "can_mod_post": false, "created_utc": 1733038876.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_gnlzn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: F#\\]  \nThanks for another AoC! And also, another year with
        F# :)\n\n    let parseContent (lines: string array) =\n        let pairs =\n            lines\n            |&gt;
        Array.map(fun line -&gt; \n                ((int)(line.Split(\" \", StringSplitOptions.RemoveEmptyEntries)[0]),\n                    (int)(line.Split(\"
        \", StringSplitOptions.RemoveEmptyEntries)[1])))\n        pairs\n    \n    let
        countTimes (element: int*int) (searchlist: (int*int) array) =\n        match
        searchlist |&gt; Array.tryFind(fun a -&gt; fst element = fst a) with\n        |
        Some(result) -&gt; (fst element) * (snd element)  * (snd result)\n        |
        None -&gt; 0\n    \n    let execute =\n        let path = \"day01/day01_input.txt\"\n        let
        content = LocalHelper.GetLinesFromFile path\n        let pairs = parseContent
        content    \n    \n        // Part 1\n        let lefts = pairs |&gt; Array.map(fun
        p -&gt; fst p) |&gt; Array.sort\n        let rights = pairs |&gt; Array.map(fun
        p-&gt; snd p) |&gt; Array.sort\n        let pairs = (lefts, rights)\n        let
        result_1 = Array.zip(fst pairs) (snd pairs) |&gt;  Array.sumBy(fun a -&gt;
        abs((fst a) - (snd a)))\n        // Part 2\n        let groupLeft = pairs
        |&gt; Array.countBy(fun a -&gt; fst a)\n        let groupRight = pairs |&gt;
        Array.countBy(fun a -&gt; snd a)\n        let result_2 = groupLeft |&gt; Array.sumBy(fun
        l -&gt; countTimes l groupRight)\n    \n        (result_1, result_2)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: F#]&lt;br/&gt;\nThanks for another
        AoC! And also, another year with F# :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        parseContent (lines: string array) =\n    let pairs =\n        lines\n        |&amp;gt;
        Array.map(fun line -&amp;gt; \n            ((int)(line.Split(&amp;quot; &amp;quot;,
        StringSplitOptions.RemoveEmptyEntries)[0]),\n                (int)(line.Split(&amp;quot;
        &amp;quot;, StringSplitOptions.RemoveEmptyEntries)[1])))\n    pairs\n\nlet
        countTimes (element: int*int) (searchlist: (int*int) array) =\n    match searchlist
        |&amp;gt; Array.tryFind(fun a -&amp;gt; fst element = fst a) with\n    | Some(result)
        -&amp;gt; (fst element) * (snd element)  * (snd result)\n    | None -&amp;gt;
        0\n\nlet execute =\n    let path = &amp;quot;day01/day01_input.txt&amp;quot;\n    let
        content = LocalHelper.GetLinesFromFile path\n    let pairs = parseContent
        content    \n\n    // Part 1\n    let lefts = pairs |&amp;gt; Array.map(fun
        p -&amp;gt; fst p) |&amp;gt; Array.sort\n    let rights = pairs |&amp;gt;
        Array.map(fun p-&amp;gt; snd p) |&amp;gt; Array.sort\n    let pairs = (lefts,
        rights)\n    let result_1 = Array.zip(fst pairs) (snd pairs) |&amp;gt;  Array.sumBy(fun
        a -&amp;gt; abs((fst a) - (snd a)))\n    // Part 2\n    let groupLeft = pairs
        |&amp;gt; Array.countBy(fun a -&amp;gt; fst a)\n    let groupRight = pairs
        |&amp;gt; Array.countBy(fun a -&amp;gt; snd a)\n    let result_2 = groupLeft
        |&amp;gt; Array.sumBy(fun l -&amp;gt; countTimes l groupRight)\n\n    (result_1,
        result_2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuatf2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuatf2", "created":
        1733038876.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzunr41", "id": "lzunr41", "parent_id":
        "t1_lzuatf2", "depth": 1, "children": ["lzunr41"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzub3gm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ExitingBear",
        "can_mod_post": false, "created_utc": 1733039054.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_12jhby0d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: R\\]\n\n[Link](https://exitingbear.github.io/AdventOfCode2024/Day-1.nb.html)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: R]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://exitingbear.github.io/AdventOfCode2024/Day-1.nb.html\"&gt;Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzub3gm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzub3gm", "created":
        1733039054.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzubafx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "RumbleJack56",
        "can_mod_post": false, "created_utc": 1733039178.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_cbkbtl8h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\n\n\\[LANGUAGE: Python\\]  \nTried to make it as short as possible. \n\n    from
        collections import Counter\n    with open(''2024/1.txt'', ''r'') as f:\n        a
        , b = list(zip(*[[int(v) for v in t.split(''   '')] for t in f.readlines()]))\n        qty
        = Counter(b)\n        print(f\"Part 1 : {sum([abs(p-q) for p,q in zip(sorted(a),sorted(b))])}\\\n                Part
        2 : {sum([v*qty.get(v,0) for v in a])}\")", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;br/&gt;\nTried to make it as
        short as possible. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from collections import
        Counter\nwith open(&amp;#39;2024/1.txt&amp;#39;, &amp;#39;r&amp;#39;) as f:\n    a
        , b = list(zip(*[[int(v) for v in t.split(&amp;#39;   &amp;#39;)] for t in
        f.readlines()]))\n    qty = Counter(b)\n    print(f&amp;quot;Part 1 : {sum([abs(p-q)
        for p,q in zip(sorted(a),sorted(b))])}\\\n            Part 2 : {sum([v*qty.get(v,0)
        for v in a])}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzubafx/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzubafx", "created": 1733039178.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_lzubagd", "id": "lzubagd", "parent_id":
        "t1_lzubafx", "depth": 1, "children": ["lzubagd", "lzug07v", "lzue87a", "lzudb39"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzubp9n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ponycelebration",
        "can_mod_post": false, "created_utc": 1733039443.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_14nc5d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Elixir\\]\n\n    \u00a0 def diff(%{left: l, right: r}),\n    \u00a0
        do: l\n    \u00a0 |&gt; Enum.zip(r)\n    \u00a0 |&gt; Enum.map(fn {a, b} -&gt;
        abs(a - b) end)\n    \n    \u00a0 def part_one(source_file),\n    \u00a0 do:
        source_file\n    \u00a0 |&gt; FileUtils.parse_lines()\n    \u00a0 |&gt; Stream.map(fn
        line -&gt; Regex.scan(~r/\\d+/, line) |&gt; List.flatten() |&gt; Enum.map(&amp;String.to_integer/1)
        end)\n    \u00a0 |&gt; Enum.reduce(%{}, fn [left, right], acc -&gt;\n    \u00a0
        \u00a0 Map.update(acc, :left, [left], fn existing -&gt; existing ++ [left]
        end)\n    \u00a0 \u00a0 |&gt; Map.update(:right, [right], fn existing -&gt;
        existing ++ [right] end)\n    \u00a0 end)\n    \u00a0 |&gt; Map.update(:left,
        [], &amp;Enum.sort/1)\n    \u00a0 |&gt; Map.update(:right, [], &amp;Enum.sort/1)\n    \u00a0
        |&gt; diff()\n    \u00a0 |&gt; Enum.sum()\n    \n    \u00a0 def similarity(%{left:
        options, right: counts}),\n    \u00a0 do: options\n    \u00a0 |&gt; Enum.map(fn
        key -&gt; Map.get(counts, key, 0) * key end)\n    \n    \u00a0 def part_two(source_file),\n    \u00a0
        do: source_file\n    \u00a0 |&gt; FileUtils.parse_lines()\n    \u00a0 |&gt;
        Stream.map(fn line -&gt; Regex.scan(~r/\\d+/, line) |&gt; List.flatten() |&gt;
        Enum.map(&amp;String.to_integer/1) end)\n    \u00a0 |&gt; Enum.reduce(%{},
        fn [left, right], acc -&gt;\n    \u00a0 \u00a0 Map.update(acc, :left, [left],
        fn existing -&gt; existing ++ [left] end)\n    \u00a0 \u00a0 |&gt; Map.update(:right,
        %{right =&gt; 1}, fn counts -&gt; Map.update(counts, right, 1,fn i -&gt; i
        + 1 end) end)\n    \u00a0 end)\n    \u00a0 |&gt; similarity()\n    \u00a0
        |&gt; Enum.sum()", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Elixir]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u00a0 def diff(%{left: l, right:
        r}),\n\u00a0 do: l\n\u00a0 |&amp;gt; Enum.zip(r)\n\u00a0 |&amp;gt; Enum.map(fn
        {a, b} -&amp;gt; abs(a - b) end)\n\n\u00a0 def part_one(source_file),\n\u00a0
        do: source_file\n\u00a0 |&amp;gt; FileUtils.parse_lines()\n\u00a0 |&amp;gt;
        Stream.map(fn line -&amp;gt; Regex.scan(~r/\\d+/, line) |&amp;gt; List.flatten()
        |&amp;gt; Enum.map(&amp;amp;String.to_integer/1) end)\n\u00a0 |&amp;gt; Enum.reduce(%{},
        fn [left, right], acc -&amp;gt;\n\u00a0 \u00a0 Map.update(acc, :left, [left],
        fn existing -&amp;gt; existing ++ [left] end)\n\u00a0 \u00a0 |&amp;gt; Map.update(:right,
        [right], fn existing -&amp;gt; existing ++ [right] end)\n\u00a0 end)\n\u00a0
        |&amp;gt; Map.update(:left, [], &amp;amp;Enum.sort/1)\n\u00a0 |&amp;gt; Map.update(:right,
        [], &amp;amp;Enum.sort/1)\n\u00a0 |&amp;gt; diff()\n\u00a0 |&amp;gt; Enum.sum()\n\n\u00a0
        def similarity(%{left: options, right: counts}),\n\u00a0 do: options\n\u00a0
        |&amp;gt; Enum.map(fn key -&amp;gt; Map.get(counts, key, 0) * key end)\n\n\u00a0
        def part_two(source_file),\n\u00a0 do: source_file\n\u00a0 |&amp;gt; FileUtils.parse_lines()\n\u00a0
        |&amp;gt; Stream.map(fn line -&amp;gt; Regex.scan(~r/\\d+/, line) |&amp;gt;
        List.flatten() |&amp;gt; Enum.map(&amp;amp;String.to_integer/1) end)\n\u00a0
        |&amp;gt; Enum.reduce(%{}, fn [left, right], acc -&amp;gt;\n\u00a0 \u00a0
        Map.update(acc, :left, [left], fn existing -&amp;gt; existing ++ [left] end)\n\u00a0
        \u00a0 |&amp;gt; Map.update(:right, %{right =&amp;gt; 1}, fn counts -&amp;gt;
        Map.update(counts, right, 1,fn i -&amp;gt; i + 1 end) end)\n\u00a0 end)\n\u00a0
        |&amp;gt; similarity()\n\u00a0 |&amp;gt; Enum.sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzubp9n/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzubp9n", "created":
        1733039443.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1735574778.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzubpt1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "TiCoinCoin",
        "can_mod_post": false, "created_utc": 1733039453.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1cpam0ao22",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Python 3\\]\n\nSooo it begins!  \n[Day 01 - Github](https://github.com/PetitCoinCoin/advent-of-code/blob/main/2024/day_01.py)\n\nNothing
        fancy here, but I like that it starts slowly. See you tomorrow!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python 3]&lt;/p&gt;\n\n&lt;p&gt;Sooo
        it begins!&lt;br/&gt;\n&lt;a href=\"https://github.com/PetitCoinCoin/advent-of-code/blob/main/2024/day_01.py\"&gt;Day
        01 - Github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nothing fancy here, but I like
        that it starts slowly. See you tomorrow!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzubpt1/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzubpt1", "created": 1733039453.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzuf687", "id": "lzuf687", "parent_id":
        "t1_lzubpt1", "depth": 1, "children": ["lzuf687"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuc95m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "vbe-elvis",
        "can_mod_post": false, "created_utc": 1733039793.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_bz6dyxth", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Kotlin\\]\n\nTime to get things sorted out:\n\n    fun findDifference(input:
        String): Int {\n        val firstList = input.lines().map { it.split(\"   \").first()
        }.map(String::toInt).sorted()\n        val secondList = input.lines().map
        { it.split(\"   \").last() }.map(String::toInt).sorted()\n        return firstList.mapIndexed
        { index, i -&gt; abs(i - secondList[index])  }.sum()\n    }\n\n    fun similarityScore(input:
        String): Int {\n        val firstList = input.lines().map { it.split(\"   \").first()
        }.map(String::toInt)\n        val secondList = input.lines().map { it.split(\"   \").last()
        }\n            .map(String::toInt).groupBy { it }.mapValues { it.value.size
        }\n        return firstList.sumOf { it * (secondList[it] ?: 0) }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin]&lt;/p&gt;\n\n&lt;p&gt;Time
        to get things sorted out:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun findDifference(input:
        String): Int {\n    val firstList = input.lines().map { it.split(&amp;quot;   &amp;quot;).first()
        }.map(String::toInt).sorted()\n    val secondList = input.lines().map { it.split(&amp;quot;   &amp;quot;).last()
        }.map(String::toInt).sorted()\n    return firstList.mapIndexed { index, i
        -&amp;gt; abs(i - secondList[index])  }.sum()\n}\n\nfun similarityScore(input:
        String): Int {\n    val firstList = input.lines().map { it.split(&amp;quot;   &amp;quot;).first()
        }.map(String::toInt)\n    val secondList = input.lines().map { it.split(&amp;quot;   &amp;quot;).last()
        }\n        .map(String::toInt).groupBy { it }.mapValues { it.value.size }\n    return
        firstList.sumOf { it * (secondList[it] ?: 0) }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuc95m/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuc95m", "created":
        1733039793.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuhnmo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Infamous-Average-389",
        "can_mod_post": false, "created_utc": 1733043372.0, "send_replies": true,
        "parent_id": "t1_lzuc95m", "score": 3, "author_fullname": "t2_cjsbhm9x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    .\n    groupingBy \n    { it }.\n    eachCount\n    ()", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;.\ngroupingBy \n{ it }.\neachCount\n()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuhnmo/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuhnmo", "created":
        1733043372.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_m003qzm", "id": "m003qzm", "parent_id":
        "t1_lzuhnmo", "depth": 2, "children": ["m003qzm"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733304277.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuclrz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Xyhop",
        "can_mod_post": false, "created_utc": 1733040020.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_qt8af", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C#\\]\n\nA bit of a funky TDD approach\n\n[GitHub link](https://github.com/HunorTotBagi/advent-of-code/blob/master/advent-of-code-2023/2024/Day01/Day01.Src/CodeSolution.cs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;p&gt;A
        bit of a funky TDD approach&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/HunorTotBagi/advent-of-code/blob/master/advent-of-code-2023/2024/Day01/Day01.Src/CodeSolution.cs\"&gt;GitHub
        link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuclrz/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuclrz", "created":
        1733040020.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzud5mh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "xHyroM",
        "can_mod_post": false, "created_utc": 1733040377.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_3sjt6la8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[repository](https://github.com/xhyrom/aoc/tree/main/2024/01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/xhyrom/aoc/tree/main/2024/01\"&gt;repository&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzud5mh/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzud5mh", "created":
        1733040377.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzueqes", "id": "lzueqes", "parent_id":
        "t1_lzud5mh", "depth": 1, "children": ["lzueqes"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzufy8k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Kayzels",
        "can_mod_post": false, "created_utc": 1733042222.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_4tbduwb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n  \n[Day 1 Solution](https://github.com/Kayzels/aoc-2024/tree/main/day1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Kayzels/aoc-2024/tree/main/day1\"&gt;Day 1 Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzufy8k/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzufy8k", "created":
        1733042222.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzufzy7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[LANGUAGE: Rust]\n\n[Parts 1 &amp; 2](https://topaz.github.io/paste/#XQAAAQB1BgAAAAAAAAA6nMjJFMpQiatRZcHeSa9QCfq2XKCi+rQgSSMMZBjAYcAcjbcroEOjeFPtubclligq/wksqn67GpJ7ygcScguMRU6WynE1x71DjfVnZoObqzfQpq/aPPB8X1oRq1XAfB677+ti5Uv5Mbvp2VBqOZlEuosKI4ABCBjFNMr2fVTcD4HcKVW4jBJcJf3q909jLokc4UgABzY5c+9QCmeqX2MvRLZnqDyLiWiiO6RszxgDvcIt5B8Rhk0R2kBzIZUQmyfLxIR3GXpFMkbOe33CRSaIubkRzevGLIOhJ2mcWENjfnhgj+OSxrRp98Kn3BpnjWu1J7kn1LqoeJPqnAM/q7sIeRfH9alAJgUYBminyIhUgIVwkU2AgtSdWP+n6ZPlcMwIQ/j4v6KfLnb3q4VdWXBwZEyJ+itrD3+5MCGXOvfVz5+b7H2MARwi/Lex4T0uu4tmeDWta3qCaEKZQD1sNdILRe+75BBTLMZ3WhXvf+9ABPIH4wCqin+460sRD1s9m5TJEsG9sLrLD/BvgyIegzK+id+CuMQm2u28trHFjly+gcS1krhj95IuOxr0H54tvS5eDwgtuKN1cyoYAOdAFtc/akmNvkGZHJw7HstJ6JZYcle01NoFGu+fTgJQ+PTR7U43y2MUIgIwmT1hJ15Fl+Yn0rtTU6OQ+RtGxiTQ+mRcBSK9knMa/517V2VvnFkdy2ip4io8T02p3gpgovAetdAgFQZTAD+NwcRDxB2P25A0G1GUIA8LRoI1rTR2edaRAWjlBz7veJv/a+BmAA==)\n\nDisclaimer:
        I only started learning Rust last week, so this probably isn''t  _good_ Rust
        code. I _am_ enjoying the language, though, and it''s great looking at the
        rest of the Rust solutions to see what I could have done better.", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_lzufzy7", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQB1BgAAAAAAAAA6nMjJFMpQiatRZcHeSa9QCfq2XKCi+rQgSSMMZBjAYcAcjbcroEOjeFPtubclligq/wksqn67GpJ7ygcScguMRU6WynE1x71DjfVnZoObqzfQpq/aPPB8X1oRq1XAfB677+ti5Uv5Mbvp2VBqOZlEuosKI4ABCBjFNMr2fVTcD4HcKVW4jBJcJf3q909jLokc4UgABzY5c+9QCmeqX2MvRLZnqDyLiWiiO6RszxgDvcIt5B8Rhk0R2kBzIZUQmyfLxIR3GXpFMkbOe33CRSaIubkRzevGLIOhJ2mcWENjfnhgj+OSxrRp98Kn3BpnjWu1J7kn1LqoeJPqnAM/q7sIeRfH9alAJgUYBminyIhUgIVwkU2AgtSdWP+n6ZPlcMwIQ/j4v6KfLnb3q4VdWXBwZEyJ+itrD3+5MCGXOvfVz5+b7H2MARwi/Lex4T0uu4tmeDWta3qCaEKZQD1sNdILRe+75BBTLMZ3WhXvf+9ABPIH4wCqin+460sRD1s9m5TJEsG9sLrLD/BvgyIegzK+id+CuMQm2u28trHFjly+gcS1krhj95IuOxr0H54tvS5eDwgtuKN1cyoYAOdAFtc/akmNvkGZHJw7HstJ6JZYcle01NoFGu+fTgJQ+PTR7U43y2MUIgIwmT1hJ15Fl+Yn0rtTU6OQ+RtGxiTQ+mRcBSK9knMa/517V2VvnFkdy2ip4io8T02p3gpgovAetdAgFQZTAD+NwcRDxB2P25A0G1GUIA8LRoI1rTR2edaRAWjlBz7veJv/a+BmAA==\"&gt;Parts
        1 &amp;amp; 2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Disclaimer: I only started learning
        Rust last week, so this probably isn&amp;#39;t  &lt;em&gt;good&lt;/em&gt;
        Rust code. I &lt;em&gt;am&lt;/em&gt; enjoying the language, though, and it&amp;#39;s
        great looking at the rest of the Rust solutions to see what I could have done
        better.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "can_gild":
        false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzufzy7/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1733042254.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1733042254.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzuok94", "id": "lzuok94", "parent_id":
        "t1_lzufzy7", "depth": 1, "children": ["lzuok94"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzugfkv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "shmoodla",
        "can_mod_post": false, "created_utc": 1733042547.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_xvmdj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: TypeScript\\]\n\nNice and easy one for the beginning :) [Link](https://github.com/radekBednarik/aoc_2024/blob/main/day01/solution.ts)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: TypeScript]&lt;/p&gt;\n\n&lt;p&gt;Nice
        and easy one for the beginning :) &lt;a href=\"https://github.com/radekBednarik/aoc_2024/blob/main/day01/solution.ts\"&gt;Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzugfkv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzugfkv", "created":
        1733042547.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733043219.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuh31k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Derailed_Dash",
        "can_mod_post": false, "created_utc": 1733042989.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_2yc8i1wi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nTwo trivial solutions with Python. One using plain
        old Python lists, and one using Numpy.\n\n- See Day 1 code and walkthrough
        in my [2024 Jupyter Notebook](https://github.com/derailed-dash/Advent-of-Code/blob/master/src/AoC_2024/Dazbo''s_Advent_of_Code_2024.ipynb)\n-
        Run the notebook with no setup in [Google Colab](https://colab.research.google.com/github/derailed-dash/Advent-of-Code/blob/master/src/AoC_2024/Dazbo''s_Advent_of_Code_2024.ipynb#scrollTo=v8FWc-ibZ1iq)\n-
        See my [Learning Python with Advent of Code site](https://aoc.just2good.co.uk/)\n-
        See guide [Advent of Code: the Best Way to Learn to Code!](https://python.plainenglish.io/advent-of-code-the-best-way-to-learn-to-code-d86c6478d484)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Two
        trivial solutions with Python. One using plain old Python lists, and one using
        Numpy.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;See Day 1 code and walkthrough in
        my &lt;a href=\"https://github.com/derailed-dash/Advent-of-Code/blob/master/src/AoC_2024/Dazbo&amp;#x27;s_Advent_of_Code_2024.ipynb\"&gt;2024
        Jupyter Notebook&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Run the notebook with no
        setup in &lt;a href=\"https://colab.research.google.com/github/derailed-dash/Advent-of-Code/blob/master/src/AoC_2024/Dazbo&amp;#x27;s_Advent_of_Code_2024.ipynb#scrollTo=v8FWc-ibZ1iq\"&gt;Google
        Colab&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;See my &lt;a href=\"https://aoc.just2good.co.uk/\"&gt;Learning
        Python with Advent of Code site&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;See guide
        &lt;a href=\"https://python.plainenglish.io/advent-of-code-the-best-way-to-learn-to-code-d86c6478d484\"&gt;Advent
        of Code: the Best Way to Learn to Code!&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuh31k/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuh31k", "created":
        1733042989.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuhdck",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "xxchaitanyaxx",
        "can_mod_post": false, "created_utc": 1733043182.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_be2xpwj9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[repository](https://github.com/chaitanya44444/AdventOfCode/blob/main/2024/day1/main.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/chaitanya44444/AdventOfCode/blob/main/2024/day1/main.py\"&gt;repository&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuhdck/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuhdck", "created":
        1733043182.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuhkm0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "bakibol",
        "can_mod_post": false, "created_utc": 1733043317.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_65j2sn03y",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[Language: Python\\]\n\n[topaz paste tool](https://topaz.github.io/paste/#XQAAAQDLAgAAAAAAAAAzHIoib6pXbueH4X9F244lVRDcOZab5q16fMXrmVEJ7EgTnJtBVZZLcQXeSw5l4AfaNl9wyjVgQKeV8eGT4J1uVfSfiNLhDGQzVYVB4ZqxJ6+PXTIC2HGivY6hrDZZFefp1gbY2uod7OVN5YpjkRYPoSJiz+iaRGcER4OJ7KBx9eNCLTMpuOiyM7hNWu3lw5jBLjURgSYdtdl/f3ituuDpxJ+wFB3D4Gu23gk+MGRB+vn7C/qPHM5qsHWXMtKCGxdefziC7QJxf0x41k3VRIfTSJOvmnT4DpqC9UJceBCoDEpfjoSsKZ3JvlaLSoztp0Yjux15xUxmsxLYzgP/Hp+knqHiyu0JW4o4wC2L/sm0pOap2GddM4rdIpzLiWriV8tx48eux6gO4xAhFlTHWvgF9EsBF7vPcMhY/BL/nxyeA67MytaMg4FDOXISb6fJkGW8CP7XTM05iGb/Hx95PdXrEkNNWkhExtWB2n/+luIh)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDLAgAAAAAAAAAzHIoib6pXbueH4X9F244lVRDcOZab5q16fMXrmVEJ7EgTnJtBVZZLcQXeSw5l4AfaNl9wyjVgQKeV8eGT4J1uVfSfiNLhDGQzVYVB4ZqxJ6+PXTIC2HGivY6hrDZZFefp1gbY2uod7OVN5YpjkRYPoSJiz+iaRGcER4OJ7KBx9eNCLTMpuOiyM7hNWu3lw5jBLjURgSYdtdl/f3ituuDpxJ+wFB3D4Gu23gk+MGRB+vn7C/qPHM5qsHWXMtKCGxdefziC7QJxf0x41k3VRIfTSJOvmnT4DpqC9UJceBCoDEpfjoSsKZ3JvlaLSoztp0Yjux15xUxmsxLYzgP/Hp+knqHiyu0JW4o4wC2L/sm0pOap2GddM4rdIpzLiWriV8tx48eux6gO4xAhFlTHWvgF9EsBF7vPcMhY/BL/nxyeA67MytaMg4FDOXISb6fJkGW8CP7XTM05iGb/Hx95PdXrEkNNWkhExtWB2n/+luIh\"&gt;topaz
        paste tool&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuhkm0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuhkm0", "created":
        1733043317.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuhysu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "TheScown",
        "can_mod_post": false, "created_utc": 1733043584.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_7ze089", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Scala\\]\n\n[Code](https://github.com/TheScown/advent-of-code/blob/main/src/main/scala/advent2024/Day1.scala)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Scala]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/TheScown/advent-of-code/blob/main/src/main/scala/advent2024/Day1.scala\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuhysu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuhysu", "created":
        1733043584.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuhzeh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "vlone310",
        "can_mod_post": false, "created_utc": 1733043595.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_5jxrkvdx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Go\\]\n\n[Full day 1 link](https://github.com/vlone310/advent-of-code/blob/master/year2024/day1/day1.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/vlone310/advent-of-code/blob/master/year2024/day1/day1.go\"&gt;Full
        day 1 link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuhzeh/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuhzeh", "created":
        1733043595.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzui3bt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Ordinary-Drag3233",
        "can_mod_post": false, "created_utc": 1733043670.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_czoxln2j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: TypeScript\\]\n\n\\- [Parse input](https://github.com/davidivad96/advent-of-code-2024/blob/main/src/solutions/01/index.ts):
        Generate two arrays, `firstColumn` and `secondColumn`\n\n\\- [Part 1](https://github.com/davidivad96/advent-of-code-2024/blob/main/src/solutions/01/partOne.ts):
        Sort both arrays in ascending order. Iterate through them to compute the sum
        of differences between corresponding elements\n\n\\- [Part 2](https://github.com/davidivad96/advent-of-code-2024/blob/main/src/solutions/01/partTwo.ts):
        Iterate through the first array and, for each element, count its occurrences
        in the second array. Sum up the counts", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: TypeScript]&lt;/p&gt;\n\n&lt;p&gt;- &lt;a
        href=\"https://github.com/davidivad96/advent-of-code-2024/blob/main/src/solutions/01/index.ts\"&gt;Parse
        input&lt;/a&gt;: Generate two arrays, &lt;code&gt;firstColumn&lt;/code&gt;
        and &lt;code&gt;secondColumn&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;- &lt;a href=\"https://github.com/davidivad96/advent-of-code-2024/blob/main/src/solutions/01/partOne.ts\"&gt;Part
        1&lt;/a&gt;: Sort both arrays in ascending order. Iterate through them to
        compute the sum of differences between corresponding elements&lt;/p&gt;\n\n&lt;p&gt;-
        &lt;a href=\"https://github.com/davidivad96/advent-of-code-2024/blob/main/src/solutions/01/partTwo.ts\"&gt;Part
        2&lt;/a&gt;: Iterate through the first array and, for each element, count
        its occurrences in the second array. Sum up the counts&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzui3bt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzui3bt", "created":
        1733043670.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733044449.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuin6w", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "pinkwar",
        "can_mod_post": false, "created_utc": 1733044043.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_dzzwq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\nrepo: [2024 JavaScript](https://github.com/alexisNorthcoders/adventCode2023/tree/main/JavaScript/2024)\n\n    const
        { readFile } = require(\"fs/promises\");\n    \n    const path = process.argv.includes(\"sample\")
        ? \"./inputs/sample_day1.txt\" : \"./inputs/day1.txt\";\n    \n    async function
        day1() {\n    \n    \u00a0 \u00a0 const file = await readFile(path, ''utf8'')\n    \u00a0
        \u00a0 const lines = file.split(''\\n'')\n    \u00a0 \u00a0 console.time(''Total
        Time'');\n    \u00a0 \u00a0 console.log(''\ud83c\udf1f --- Day 1 Results ---
        \ud83c\udf1f'');\n    \u00a0 \u00a0 console.log(''\ud83d\udccc Part 1: '',
        part1(lines));\n    \u00a0 \u00a0 console.log(''\ud83d\udccc Part 2: '', part2(lines));\n    \u00a0
        \u00a0 console.timeEnd(''Total Time'');\n    }\n    \n    function part1(input)
        {\n    \u00a0 \u00a0 let result = 0\n    \u00a0 \u00a0 const [leftList, rightList]
        = [[], []]\n    \u00a0 \u00a0 input.forEach(line =&gt; {\n    \u00a0 \u00a0
        \u00a0 \u00a0 const [left, right] = line.split(/\\s+/)\n    \u00a0 \u00a0
        \u00a0 \u00a0 leftList.push(Number(left))\n    \u00a0 \u00a0 \u00a0 \u00a0
        rightList.push(Number(right))\n    \u00a0 \u00a0 })\n    \u00a0 \u00a0 leftList.sort((a,
        b) =&gt; a - b)\n    \u00a0 \u00a0 rightList.sort((a, b) =&gt; a - b)\n    \n    \u00a0
        \u00a0 leftList.forEach((value, i) =&gt; result += Math.abs(value - rightList[i]))\n    \u00a0
        \u00a0 return result\n    }\n    \n    function part2(input) {\n    \u00a0
        \u00a0 let result = 0\n    \u00a0 \u00a0 const leftListMap = {}\n    \u00a0
        \u00a0 const rightListMap = {}\n    \u00a0 \u00a0 input.forEach(line =&gt;
        {\n    \u00a0 \u00a0 \u00a0 \u00a0 const [left, right] = line.split(/\\s+/)\n    \u00a0
        \u00a0 \u00a0 \u00a0 leftListMap[left] ? leftListMap[left]++ : leftListMap[left]
        = 1\n    \u00a0 \u00a0 \u00a0 \u00a0 rightListMap[right] ? rightListMap[right]++
        : rightListMap[right] = 1\n    \u00a0 \u00a0 })\n    \n    \u00a0 \u00a0 for
        (value in leftListMap) {\n    \u00a0 \u00a0 \u00a0 \u00a0 result += leftListMap[value]
        * value * (rightListMap[value] ?? 0)\n    \u00a0 \u00a0 }\n    \u00a0 \u00a0
        return result\n    }\n    \n    day1()", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;repo:
        &lt;a href=\"https://github.com/alexisNorthcoders/adventCode2023/tree/main/JavaScript/2024\"&gt;2024
        JavaScript&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const { readFile
        } = require(&amp;quot;fs/promises&amp;quot;);\n\nconst path = process.argv.includes(&amp;quot;sample&amp;quot;)
        ? &amp;quot;./inputs/sample_day1.txt&amp;quot; : &amp;quot;./inputs/day1.txt&amp;quot;;\n\nasync
        function day1() {\n\n\u00a0 \u00a0 const file = await readFile(path, &amp;#39;utf8&amp;#39;)\n\u00a0
        \u00a0 const lines = file.split(&amp;#39;\\n&amp;#39;)\n\u00a0 \u00a0 console.time(&amp;#39;Total
        Time&amp;#39;);\n\u00a0 \u00a0 console.log(&amp;#39;\ud83c\udf1f --- Day 1
        Results --- \ud83c\udf1f&amp;#39;);\n\u00a0 \u00a0 console.log(&amp;#39;\ud83d\udccc
        Part 1: &amp;#39;, part1(lines));\n\u00a0 \u00a0 console.log(&amp;#39;\ud83d\udccc
        Part 2: &amp;#39;, part2(lines));\n\u00a0 \u00a0 console.timeEnd(&amp;#39;Total
        Time&amp;#39;);\n}\n\nfunction part1(input) {\n\u00a0 \u00a0 let result =
        0\n\u00a0 \u00a0 const [leftList, rightList] = [[], []]\n\u00a0 \u00a0 input.forEach(line
        =&amp;gt; {\n\u00a0 \u00a0 \u00a0 \u00a0 const [left, right] = line.split(/\\s+/)\n\u00a0
        \u00a0 \u00a0 \u00a0 leftList.push(Number(left))\n\u00a0 \u00a0 \u00a0 \u00a0
        rightList.push(Number(right))\n\u00a0 \u00a0 })\n\u00a0 \u00a0 leftList.sort((a,
        b) =&amp;gt; a - b)\n\u00a0 \u00a0 rightList.sort((a, b) =&amp;gt; a - b)\n\n\u00a0
        \u00a0 leftList.forEach((value, i) =&amp;gt; result += Math.abs(value - rightList[i]))\n\u00a0
        \u00a0 return result\n}\n\nfunction part2(input) {\n\u00a0 \u00a0 let result
        = 0\n\u00a0 \u00a0 const leftListMap = {}\n\u00a0 \u00a0 const rightListMap
        = {}\n\u00a0 \u00a0 input.forEach(line =&amp;gt; {\n\u00a0 \u00a0 \u00a0 \u00a0
        const [left, right] = line.split(/\\s+/)\n\u00a0 \u00a0 \u00a0 \u00a0 leftListMap[left]
        ? leftListMap[left]++ : leftListMap[left] = 1\n\u00a0 \u00a0 \u00a0 \u00a0
        rightListMap[right] ? rightListMap[right]++ : rightListMap[right] = 1\n\u00a0
        \u00a0 })\n\n\u00a0 \u00a0 for (value in leftListMap) {\n\u00a0 \u00a0 \u00a0
        \u00a0 result += leftListMap[value] * value * (rightListMap[value] ?? 0)\n\u00a0
        \u00a0 }\n\u00a0 \u00a0 return result\n}\n\nday1()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuin6w/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuin6w", "created":
        1733044043.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuj69d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ayoubzulfiqar",
        "can_mod_post": false, "created_utc": 1733044403.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_igm7gs6h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n[LANGUAGE: Go]\n\n[Go](https://github.com/ayoubzulfiqar/advent-of-code/tree/main/2024/Go)\n\n[Python](https://github.com/ayoubzulfiqar/advent-of-code/tree/main/2024/Python)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]\n[LANGUAGE:
        Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ayoubzulfiqar/advent-of-code/tree/main/2024/Go\"&gt;Go&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ayoubzulfiqar/advent-of-code/tree/main/2024/Python\"&gt;Python&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuj69d/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuj69d", "created":
        1733044403.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733045096.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzujvaw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "glebm",
        "can_mod_post": false, "created_utc": 1733044875.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_bup9r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n    import fileinput\n    import jax.numpy as jnp\n\n    a
        = jnp.array([list(map(int, s.split())) for s in fileinput.input()], dtype=jnp.int32)\n    a
        = a.transpose().sort(axis=1)\n    print(jnp.sum(jnp.abs(a[0] - a[1])))\n    left
        = jnp.searchsorted(a[1], a[0], side=\"left\")\n    right = jnp.searchsorted(a[1],
        a[0], side=\"right\")\n    print(jnp.sum((right - left) * a[0]))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        fileinput\nimport jax.numpy as jnp\n\na = jnp.array([list(map(int, s.split()))
        for s in fileinput.input()], dtype=jnp.int32)\na = a.transpose().sort(axis=1)\nprint(jnp.sum(jnp.abs(a[0]
        - a[1])))\nleft = jnp.searchsorted(a[1], a[0], side=&amp;quot;left&amp;quot;)\nright
        = jnp.searchsorted(a[1], a[0], side=&amp;quot;right&amp;quot;)\nprint(jnp.sum((right
        - left) * a[0]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzujvaw/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzujvaw", "created": 1733044875.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuk8y5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "leftfish123",
        "can_mod_post": false, "created_utc": 1733045128.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_9ciykfw3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Python\\]\n\nIt took me 30 minutes to solve part 1 because apparently
        I decided not to read the description and just guess what the puzzle was.
        I managed to solve the puzzle in which the distances were between the **positions**
        of the integers, so for a moment my code also calculated the minimum distance
        between the same numbers in the left and right column. Sigh. Anyway, after
        I figured out that reading is a usefull tool, it took only a moment, and the
        second part was even faster thanks to Counter.\n\nAnd [this is what I ended
        up with](https://github.com/Leftfish/Advent-of-Code-2024/blob/main/01/d01.py).
        Let''s see how long I last this year.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[Language: Python]&lt;/p&gt;\n\n&lt;p&gt;It took
        me 30 minutes to solve part 1 because apparently I decided not to read the
        description and just guess what the puzzle was. I managed to solve the puzzle
        in which the distances were between the &lt;strong&gt;positions&lt;/strong&gt;
        of the integers, so for a moment my code also calculated the minimum distance
        between the same numbers in the left and right column. Sigh. Anyway, after
        I figured out that reading is a usefull tool, it took only a moment, and the
        second part was even faster thanks to Counter.&lt;/p&gt;\n\n&lt;p&gt;And &lt;a
        href=\"https://github.com/Leftfish/Advent-of-Code-2024/blob/main/01/d01.py\"&gt;this
        is what I ended up with&lt;/a&gt;. Let&amp;#39;s see how long I last this
        year.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuk8y5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuk8y5", "created":
        1733045128.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733056152.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzukmkn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Western_Park_1318",
        "can_mod_post": false, "created_utc": 1733045387.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_13xzjh23ot",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: KDB\\]\n\n[blank newline]\n[space space space
        space] data:(asc'')(\"J\u00a0 J\";\" \")0: \\`:1.txt\n[space space space space]
        f:sum abs(\\-/) ::\n[space space space space] f2:{sum x\\[1\\](&amp;)(in)
        .(|:)x}\n[space space space space] f2:{sum y(&amp;)y in x}]\n[blank newline]",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: KDB]&lt;/p&gt;\n\n&lt;p&gt;[blank
        newline]\n[space space space space] data:(asc&amp;#39;)(&amp;quot;J\u00a0
        J&amp;quot;;&amp;quot; &amp;quot;)0: `:1.txt\n[space space space space] f:sum
        abs(-/) ::\n[space space space space] f2:{sum x[1](&amp;amp;)(in) .(|:)x}\n[space
        space space space] f2:{sum y(&amp;amp;)y in x}]\n[blank newline]&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzukmkn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzukmkn", "created":
        1733045387.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzukrxk", "id": "lzukrxk", "parent_id":
        "t1_lzukmkn", "depth": 1, "children": ["lzukrxk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzukqyb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "frerich",
        "can_mod_post": false, "created_utc": 1733045471.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_tagtm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Elixir\\]\n\n[https://github.com/frerich/aoc2024/blob/main/elixir/day01/day01.exs](https://github.com/frerich/aoc2024/blob/main/elixir/day01/day01.exs)\n\nA
        use case for \\`Enum.count/2\\` which takes a predicate selecting the elements
        count!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Elixir]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/frerich/aoc2024/blob/main/elixir/day01/day01.exs\"&gt;https://github.com/frerich/aoc2024/blob/main/elixir/day01/day01.exs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A
        use case for `Enum.count/2` which takes a predicate selecting the elements
        count!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzukqyb/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzukqyb", "created":
        1733045471.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzumd41", "id": "lzumd41", "parent_id":
        "t1_lzukqyb", "depth": 1, "children": ["lzumd41"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzul07q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mkinkela",
        "can_mod_post": false, "created_utc": 1733045648.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_16k7q3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]  \n[https://pastebin.com/A8HZQp0S](https://pastebin.com/A8HZQp0S)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;br/&gt;\n&lt;a
        href=\"https://pastebin.com/A8HZQp0S\"&gt;https://pastebin.com/A8HZQp0S&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzul07q/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzul07q", "created":
        1733045648.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzunjag", "id": "lzunjag", "parent_id":
        "t1_lzul07q", "depth": 1, "children": ["lzunjag"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuluvw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "IlliterateJedi",
        "can_mod_post": false, "created_utc": 1733046223.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_2keby", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\n[Straight forward Python solution](https://pastebin.com/NdR8FW5x)
        using out of the box Counter and re to process and solve the problem.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/NdR8FW5x\"&gt;Straight forward Python solution&lt;/a&gt;
        using out of the box Counter and re to process and solve the problem.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuluvw/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuluvw", "created":
        1733046223.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzuluw8", "id": "lzuluw8", "parent_id":
        "t1_lzuluvw", "depth": 1, "children": ["lzuluw8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzulx1l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "CClairvoyantt",
        "can_mod_post": false, "created_utc": 1733046262.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_4duowiqc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n&lt;30 sparse lines: [https://github.com/anviks/AOC/blob/master/2024/day\\_1/solution.py](https://github.com/anviks/AOC/blob/master/2024/day_1/solution.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&amp;lt;30
        sparse lines: &lt;a href=\"https://github.com/anviks/AOC/blob/master/2024/day_1/solution.py\"&gt;https://github.com/anviks/AOC/blob/master/2024/day_1/solution.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzulx1l/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzulx1l", "created":
        1733046262.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733052495.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzumum1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mazedlx",
        "can_mod_post": false, "created_utc": 1733046889.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_t5wv1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: PHP]\n\n[Both solutions (with Laravel''s Collections)](https://topaz.github.io/paste/#XQAAAQBIAwAAAAAAAAAeD8qHAhQB6IffluXsti/gZrNpnod2XYv6AOmzOfkC2crhwf9SAZ8/pSdbj3DIYn2cYWNHbEtT1Oxr/hqiHDN1v2lFNybY5Xt69jDdgIhw4uFYPFopWh8kCsr+xe9Sw75rzaSoGZBnFtMUrPnqYkHw/kJIop5QyXpwbio53X7B5xnsmbxEcVjmAmkfj/JNh4LbdS8kpPSI0S7YYgqum57TSAnQJ6dZRH+LcB2HO4hPwKlxDbqgVwVR4VLoNvegapC8U1EJUSzfBP3VnaoVzwx+Hv5xnJY43LvrRuF/HE/m2nNl5WDNf5Lf5FlOAZ/rXs/kB0BjHZBwbIB8KlwhvF0k9lh+bGebBvF5iGF7T3Kgbglsxq/YlqciCWabMBhzX/4lZE8=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: PHP]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBIAwAAAAAAAAAeD8qHAhQB6IffluXsti/gZrNpnod2XYv6AOmzOfkC2crhwf9SAZ8/pSdbj3DIYn2cYWNHbEtT1Oxr/hqiHDN1v2lFNybY5Xt69jDdgIhw4uFYPFopWh8kCsr+xe9Sw75rzaSoGZBnFtMUrPnqYkHw/kJIop5QyXpwbio53X7B5xnsmbxEcVjmAmkfj/JNh4LbdS8kpPSI0S7YYgqum57TSAnQJ6dZRH+LcB2HO4hPwKlxDbqgVwVR4VLoNvegapC8U1EJUSzfBP3VnaoVzwx+Hv5xnJY43LvrRuF/HE/m2nNl5WDNf5Lf5FlOAZ/rXs/kB0BjHZBwbIB8KlwhvF0k9lh+bGebBvF5iGF7T3Kgbglsxq/YlqciCWabMBhzX/4lZE8=\"&gt;Both
        solutions (with Laravel&amp;#39;s Collections)&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzumum1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzumum1", "created":
        1733046889.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzumumg", "id": "lzumumg", "parent_id":
        "t1_lzumum1", "depth": 1, "children": ["lzumumg"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzumwlo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "jochenderroch3n",
        "can_mod_post": false, "created_utc": 1733046927.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_7zwgdl14", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Rust\\]\n\n    use std::fs::read_to_string;\n    \n    fn main()
        {\n        let filename = \"input.txt\";\n        let mut totalSum = 0;\n        let
        mut similarityScore = 0;\n        let mut intNumbersLeft = Vec::&lt;i32&gt;::new();\n        let
        mut intNumbersRight = Vec::&lt;i32&gt;::new();\n        let lines = read_to_string(filename).unwrap();\n        for
        line in lines.lines() {\n            let l = line.to_string();\n            let
        numbers:Vec&lt;&amp;str&gt; = l.split(\"   \").collect();\n            intNumbersLeft.push(numbers[0].parse::&lt;i32&gt;().unwrap());\n            intNumbersRight.push(numbers[1].parse::&lt;i32&gt;().unwrap());\n        }\n    \n        intNumbersLeft.sort();\n        intNumbersRight.sort();\n        for
        i in 0..intNumbersLeft.len() {\n            totalSum += (intNumbersRight[i]
        - intNumbersLeft[i]).abs()\n        }\n    \n        for left in intNumbersLeft
        {\n            let mut times = 0;\n            for right in intNumbersRight.clone()
        {\n                if left == right {\n                    times += 1;\n                }\n            }\n            similarityScore
        += times * left;\n        }\n        println!(\"Part 1 = {}\", totalSum);\n        println!(\"Part
        2 = {}\", similarityScore);\n    }\n\nDid it way too complicated in the beginning
        and then remembered using sort()... First time coding in rust so I''m thankful
        for tips.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Rust]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::fs::read_to_string;\n\nfn
        main() {\n    let filename = &amp;quot;input.txt&amp;quot;;\n    let mut totalSum
        = 0;\n    let mut similarityScore = 0;\n    let mut intNumbersLeft = Vec::&amp;lt;i32&amp;gt;::new();\n    let
        mut intNumbersRight = Vec::&amp;lt;i32&amp;gt;::new();\n    let lines = read_to_string(filename).unwrap();\n    for
        line in lines.lines() {\n        let l = line.to_string();\n        let numbers:Vec&amp;lt;&amp;amp;str&amp;gt;
        = l.split(&amp;quot;   &amp;quot;).collect();\n        intNumbersLeft.push(numbers[0].parse::&amp;lt;i32&amp;gt;().unwrap());\n        intNumbersRight.push(numbers[1].parse::&amp;lt;i32&amp;gt;().unwrap());\n    }\n\n    intNumbersLeft.sort();\n    intNumbersRight.sort();\n    for
        i in 0..intNumbersLeft.len() {\n        totalSum += (intNumbersRight[i] -
        intNumbersLeft[i]).abs()\n    }\n\n    for left in intNumbersLeft {\n        let
        mut times = 0;\n        for right in intNumbersRight.clone() {\n            if
        left == right {\n                times += 1;\n            }\n        }\n        similarityScore
        += times * left;\n    }\n    println!(&amp;quot;Part 1 = {}&amp;quot;, totalSum);\n    println!(&amp;quot;Part
        2 = {}&amp;quot;, similarityScore);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Did
        it way too complicated in the beginning and then remembered using sort()...
        First time coding in rust so I&amp;#39;m thankful for tips.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzumwlo/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzumwlo", "created":
        1733046927.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzvds9n", "id": "lzvds9n", "parent_id":
        "t1_lzumwlo", "depth": 1, "children": ["lzvds9n", "lzuooun"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733047444.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzunco8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "amsterjoxter",
        "can_mod_post": false, "created_utc": 1733047232.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ri4u5i57", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\nBoth parts. Quick advent solutions, and optimized
        variants for the second part.\n\nOne solution is with **sorted arrays and
        two counters**. This solution is written with Claude with several prompts
        where I explicitly explain the idea (it did a binary search and O(n\\^2) solutions
        for the first time). The last iteration was a bit **slower** than my optimized
        variant, after manual fixes it becomes a bit faster.\n\nOptimized version:
        100 iterations in 14ms   \nOptimized Claude+manual variant: 100 iterations
        in 10ms (raw Claude was 18ms)\n\n[https://github.com/Joxter/advent-of-code/blob/master/2024/js/day01.js](https://github.com/Joxter/advent-of-code/blob/master/2024/js/day01.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;Both
        parts. Quick advent solutions, and optimized variants for the second part.&lt;/p&gt;\n\n&lt;p&gt;One
        solution is with &lt;strong&gt;sorted arrays and two counters&lt;/strong&gt;.
        This solution is written with Claude with several prompts where I explicitly
        explain the idea (it did a binary search and O(n^2) solutions for the first
        time). The last iteration was a bit &lt;strong&gt;slower&lt;/strong&gt; than
        my optimized variant, after manual fixes it becomes a bit faster.&lt;/p&gt;\n\n&lt;p&gt;Optimized
        version: 100 iterations in 14ms&lt;br/&gt;\nOptimized Claude+manual variant:
        100 iterations in 10ms (raw Claude was 18ms)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Joxter/advent-of-code/blob/master/2024/js/day01.js\"&gt;https://github.com/Joxter/advent-of-code/blob/master/2024/js/day01.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzunco8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzunco8", "created":
        1733047232.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733047522.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzunhiy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Vegetable_Radish_859",
        "can_mod_post": false, "created_utc": 1733047323.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_fshcmwh1d",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[Language: Go\\]  \n[solution](https://topaz.github.io/paste/#XQAAAQALBQAAAAAAAAA4GEiZzRd1JAgz+whYRQxSFI7XvmlfhtGDinguAj8sFy4GpPBv/eV0FMgYQr/JTPmo9LTKfj0/L8DYMIkAidaoTO71V7lagYarvssIEskTUISpQ/nGfACULdwhh5edoQhlSrpAMN1UtQEZ67mFi101ywGqPlEdO3j7cXmzXjs3FSjKkZn4qeGOIcYTVdYcUI4WOEYxLuOUBBCw3DNmlZEzAHMYRpgzSdqABVxz+HV+H/6mSW/MaOAm2A6qMwOdQz6NMqGCkXCxO41ARGJOQOXhs+s/qDJHZg9J1jRxEWh2gxSg7ZtExHFiQxBCrZMVHT/8wXs+txnXRuJcg/2tSMTaKv95ObNTjxOZmu5FwKWF4pm5y44lfDXiXHMg19gYnBS5Ea9+t/dYoAIIu/TTd7YULTlScYc4cfe870AB96cRT44Pw/qc/XHaqnt3+xpmN899csrPoanF+KSgSXYvVp7hcTpqiGAu0lJRE3+Y7LEvwS7ygyANlWxTqdJVDZjWAwvPPOI+wFuOd3aMbdORPgm3GbchVgAzKE3bgfc0JQ91MNwFJEeY5QJUFfkOr59d0GU+JOV7lzqY3SBzaozV0sK7/PmCstHYAiBv32Luew4g8TWxqs3TSmJ6OsH/Lvuyoc+OdWf/38TbVNpVumex/KLp3grmd22SJrOrVWMD/7qDlLG2VDcjv/NF+HS/GJ7tJ+5vhZYaIcnfmJK/+/5AhA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Go]&lt;br/&gt;\n&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQALBQAAAAAAAAA4GEiZzRd1JAgz+whYRQxSFI7XvmlfhtGDinguAj8sFy4GpPBv/eV0FMgYQr/JTPmo9LTKfj0/L8DYMIkAidaoTO71V7lagYarvssIEskTUISpQ/nGfACULdwhh5edoQhlSrpAMN1UtQEZ67mFi101ywGqPlEdO3j7cXmzXjs3FSjKkZn4qeGOIcYTVdYcUI4WOEYxLuOUBBCw3DNmlZEzAHMYRpgzSdqABVxz+HV+H/6mSW/MaOAm2A6qMwOdQz6NMqGCkXCxO41ARGJOQOXhs+s/qDJHZg9J1jRxEWh2gxSg7ZtExHFiQxBCrZMVHT/8wXs+txnXRuJcg/2tSMTaKv95ObNTjxOZmu5FwKWF4pm5y44lfDXiXHMg19gYnBS5Ea9+t/dYoAIIu/TTd7YULTlScYc4cfe870AB96cRT44Pw/qc/XHaqnt3+xpmN899csrPoanF+KSgSXYvVp7hcTpqiGAu0lJRE3+Y7LEvwS7ygyANlWxTqdJVDZjWAwvPPOI+wFuOd3aMbdORPgm3GbchVgAzKE3bgfc0JQ91MNwFJEeY5QJUFfkOr59d0GU+JOV7lzqY3SBzaozV0sK7/PmCstHYAiBv32Luew4g8TWxqs3TSmJ6OsH/Lvuyoc+OdWf/38TbVNpVumex/KLp3grmd22SJrOrVWMD/7qDlLG2VDcjv/NF+HS/GJ7tJ+5vhZYaIcnfmJK/+/5AhA==\"&gt;solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzunhiy/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzunhiy", "created":
        1733047323.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733649976.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzunjwq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "YeahMF",
        "can_mod_post": false, "created_utc": 1733047367.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_6kn2k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Elixir\\]\n\nWill use this year to learn elixir. Really enjoyed
        the list to tuple to list capabilities for today\u2019s challenge. Zip unzip
        is great!\n\n[day1.ex](https://github.com/MinchoVelev/Advent-of-Code/blob/master/elixir/y2024/day1.ex)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;p&gt;Will
        use this year to learn elixir. Really enjoyed the list to tuple to list capabilities
        for today\u2019s challenge. Zip unzip is great!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/MinchoVelev/Advent-of-Code/blob/master/elixir/y2024/day1.ex\"&gt;day1.ex&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzunjwq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzunjwq", "created":
        1733047367.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzunlr8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "radio_hx",
        "can_mod_post": false, "created_utc": 1733047402.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_lcelgzti8",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: C++\\]\n\n[C++](https://github.com/BitsBob/aoc24/blob/main/d1/main.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/BitsBob/aoc24/blob/main/d1/main.cpp\"&gt;C++&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzunlr8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzunlr8", "created":
        1733047402.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzunnlt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "not-the-the",
        "can_mod_post": false, "created_utc": 1733047438.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_8qrlgjvvw",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: JavaScript\\]\n\n    const data = require(''./data.json'');
        // formatted into [[3,4,2,1,3,3],[4,3,5,3,9,3]] with find-replacery\n    data[0].sort((a,b)=&gt;a-b);\n    data[1].sort((a,b)=&gt;a-b);\n    const
        p1 = data[0].reduce((a,v,i)=&gt;(\n      a + Math.abs(v - data[1][i])\n    ),0);\n    const
        p2 = data[0].reduce((a,v,i)=&gt;(\n      a + v*(data[1].filter(x=&gt;x===v)).length\n    ),0);\n    console.log(p1,
        p2);\n\nman i love reduce it can be literally any other Array.prototype method
        or multiple of them combined", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        JavaScript]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const data = require(&amp;#39;./data.json&amp;#39;);
        // formatted into [[3,4,2,1,3,3],[4,3,5,3,9,3]] with find-replacery\ndata[0].sort((a,b)=&amp;gt;a-b);\ndata[1].sort((a,b)=&amp;gt;a-b);\nconst
        p1 = data[0].reduce((a,v,i)=&amp;gt;(\n  a + Math.abs(v - data[1][i])\n),0);\nconst
        p2 = data[0].reduce((a,v,i)=&amp;gt;(\n  a + v*(data[1].filter(x=&amp;gt;x===v)).length\n),0);\nconsole.log(p1,
        p2);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;man i love reduce it can be literally
        any other Array.prototype method or multiple of them combined&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzunnlt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzunnlt", "created":
        1733047438.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzunwxv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "tuijnman",
        "can_mod_post": false, "created_utc": 1733047614.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_p7cevstoh",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Go\\]\n\nFirst time ever trying Go, so it''s
        probably not great \ud83d\ude05\n\n[https://github.com/bastuijnman/adventofcode/blob/master/2024/01-12/main.go](https://github.com/bastuijnman/adventofcode/blob/master/2024/01-12/main.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;First
        time ever trying Go, so it&amp;#39;s probably not great \ud83d\ude05&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/bastuijnman/adventofcode/blob/master/2024/01-12/main.go\"&gt;https://github.com/bastuijnman/adventofcode/blob/master/2024/01-12/main.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzunwxv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzunwxv", "created":
        1733047614.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzuykrt", "id": "lzuykrt", "parent_id":
        "t1_lzunwxv", "depth": 1, "children": ["lzuykrt"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuob92",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AlexTelon",
        "can_mod_post": false, "created_utc": 1733047885.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_73fqngs7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: python\\]\n\n**numpy**, **5 lines of code**. \n\n    \u00a0
        \u00a0 import numpy as np\n    \u00a0 \u00a0 from collections import Counter\n    \n    \u00a0
        \u00a0 left, right = map(np.sort, np.loadtxt(''in.txt'', dtype=int, unpack=True))\n    \u00a0
        \u00a0 print(''p1'', sum(np.abs(left - right)))\n    \u00a0 \u00a0 print(''p2'',
        sum((a * Counter(right).get(a, 0)) for a in left))\n\nofc doing \\`Counter\\`
        inline is inefficent so this would be 6 lines if one did that properly.  \n\n\n**vanilla
        python**, **6 lines of code**.\n\n    \u00a0 \u00a0 import bisect\n    \u00a0
        \u00a0 left, right = [], []\n    \n    \u00a0 \u00a0 for i, x in enumerate(open(''in.txt'').read().split()):\n    \u00a0
        \u00a0 \u00a0 \u00a0 bisect.insort(left if i%2 else right, int(x))\n    \n    \u00a0
        \u00a0 print(''p1'', sum(abs(a - b) for a,b in zip(left, right)))\n    \u00a0
        \u00a0 print(''p2'', sum(a * right.count(a) for a in left))\n\nHere I use
        bisect to avoid having to sort after insertion. Again p2 would be more efficient
        with a single \\`Counter\\` call over \\`.count\\`.\n\nMy goal this year is
        to look into numpy and pandas this year.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: python]&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;numpy&lt;/strong&gt;,
        &lt;strong&gt;5 lines of code&lt;/strong&gt;. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u00a0
        \u00a0 import numpy as np\n\u00a0 \u00a0 from collections import Counter\n\n\u00a0
        \u00a0 left, right = map(np.sort, np.loadtxt(&amp;#39;in.txt&amp;#39;, dtype=int,
        unpack=True))\n\u00a0 \u00a0 print(&amp;#39;p1&amp;#39;, sum(np.abs(left -
        right)))\n\u00a0 \u00a0 print(&amp;#39;p2&amp;#39;, sum((a * Counter(right).get(a,
        0)) for a in left))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;ofc doing `Counter`
        inline is inefficent so this would be 6 lines if one did that properly.  &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;vanilla
        python&lt;/strong&gt;, &lt;strong&gt;6 lines of code&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u00a0
        \u00a0 import bisect\n\u00a0 \u00a0 left, right = [], []\n\n\u00a0 \u00a0
        for i, x in enumerate(open(&amp;#39;in.txt&amp;#39;).read().split()):\n\u00a0
        \u00a0 \u00a0 \u00a0 bisect.insort(left if i%2 else right, int(x))\n\n\u00a0
        \u00a0 print(&amp;#39;p1&amp;#39;, sum(abs(a - b) for a,b in zip(left, right)))\n\u00a0
        \u00a0 print(&amp;#39;p2&amp;#39;, sum(a * right.count(a) for a in left))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here
        I use bisect to avoid having to sort after insertion. Again p2 would be more
        efficient with a single `Counter` call over `.count`.&lt;/p&gt;\n\n&lt;p&gt;My
        goal this year is to look into numpy and pandas this year.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuob92/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuob92", "created":
        1733047885.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzutrby", "id": "lzutrby", "parent_id":
        "t1_lzuob92", "depth": 1, "children": ["lzutrby"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuorbh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "educators-r-learners",
        "can_mod_post": false, "created_utc": 1733048189.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_fm5t21e8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Python\\]\n\nI''m trying to learn Polars this year and failed
        to even load the data in it''s default form \\*sigh\\*.\n\nAs such, I had
        to add a comma to get the files to load properly. Once I did that, it was
        all a matter of breaking things up into lists, getting value counts, and multiplying.
        \n\n[Solution](https://github.com/educatorsRlearners/aoc_2024/blob/main/Scripts/01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python]&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        trying to learn Polars this year and failed to even load the data in it&amp;#39;s
        default form *sigh*.&lt;/p&gt;\n\n&lt;p&gt;As such, I had to add a comma to
        get the files to load properly. Once I did that, it was all a matter of breaking
        things up into lists, getting value counts, and multiplying. &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/educatorsRlearners/aoc_2024/blob/main/Scripts/01.py\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuorbh/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuorbh", "created":
        1733048189.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuorux",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "henriupton99",
        "can_mod_post": false, "created_utc": 1733048199.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ltcnumm96",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: python\\]\n\nPart 1&amp;2 : featuring chaotic
        variable names, accidental bubble sort, and a festive sprinkle of brute force;
        roast me or join the madness! \ud83c\udf85\ud83d\udc0d  \n[https://github.com/henriupton99/AdventOfCode/blob/main/2024/day\\_1/solution.py](https://github.com/henriupton99/AdventOfCode/blob/main/2024/day_1/solution.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: python]&lt;/p&gt;\n\n&lt;p&gt;Part
        1&amp;amp;2 : featuring chaotic variable names, accidental bubble sort, and
        a festive sprinkle of brute force; roast me or join the madness! \ud83c\udf85\ud83d\udc0d&lt;br/&gt;\n&lt;a
        href=\"https://github.com/henriupton99/AdventOfCode/blob/main/2024/day_1/solution.py\"&gt;https://github.com/henriupton99/AdventOfCode/blob/main/2024/day_1/solution.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuorux/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuorux", "created":
        1733048199.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxf2ic", "id": "lzxf2ic", "parent_id":
        "t1_lzuorux", "depth": 1, "children": ["lzxf2ic"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzupjwe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Ryanhardiman",
        "can_mod_post": false, "created_utc": 1733048727.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_2oc4npw8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: R]\n\n[Github-Link](https://github.com/Ryan-Hardiman/Advent_Of_Code/blob/master/2024/day%201.R)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: R]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Ryan-Hardiman/Advent_Of_Code/blob/master/2024/day%201.R\"&gt;Github-Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzupjwe/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzupjwe", "created":
        1733048727.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzuqyv1", "id": "lzuqyv1", "parent_id":
        "t1_lzupjwe", "depth": 1, "children": ["lzuqyv1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzupl7p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ropecrawler",
        "can_mod_post": false, "created_utc": 1733048753.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_bih7f", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[https://github.com/ropewalker/advent_of_code_2024/blob/master/src/day01.rs](https://github.com/ropewalker/advent_of_code_2024/blob/master/src/day01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ropewalker/advent_of_code_2024/blob/master/src/day01.rs\"&gt;https://github.com/ropewalker/advent_of_code_2024/blob/master/src/day01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzupl7p/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzupl7p", "created":
        1733048753.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 7, "name": "t1_lzupl80", "id": "lzupl80", "parent_id":
        "t1_lzupl7p", "depth": 1, "children": ["lzupl80", "lzuqbbm"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzupmws",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Illustrious_Dog4716",
        "can_mod_post": false, "created_utc": 1733048784.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1ct7qxf2oa",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Dart\\]\n\n[Part1](https://github.com/bajszosbandi/AdventOfCodeSolutions/blob/main/2024/2024solution1_part1.dart)
        and [Part2](https://github.com/bajszosbandi/AdventOfCodeSolutions/blob/main/2024/2024solution1_part2.dart)\n\nProbably
        not the most efficient solution, but it works.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Dart]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/bajszosbandi/AdventOfCodeSolutions/blob/main/2024/2024solution1_part1.dart\"&gt;Part1&lt;/a&gt;
        and &lt;a href=\"https://github.com/bajszosbandi/AdventOfCodeSolutions/blob/main/2024/2024solution1_part2.dart\"&gt;Part2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Probably
        not the most efficient solution, but it works.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzupmws/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzupmws", "created": 1733048784.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733059200.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzupu7v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ymihaylov",
        "can_mod_post": false, "created_utc": 1733048920.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_3e40mwf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: TypeScript\\]\n\n**My solution so far. I\u2019m planning to
        add some tests.** \ud83e\udd13\n\n[https://github.com/ymihaylov/advent-of-code/tree/main/src/01\\_historian\\_hysteria](https://github.com/ymihaylov/advent-of-code/tree/main/src/01_historian_hysteria)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: TypeScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;My
        solution so far. I\u2019m planning to add some tests.&lt;/strong&gt; \ud83e\udd13&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ymihaylov/advent-of-code/tree/main/src/01_historian_hysteria\"&gt;https://github.com/ymihaylov/advent-of-code/tree/main/src/01_historian_hysteria&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzupu7v/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzupu7v", "created":
        1733048920.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxe69p", "id": "lzxe69p", "parent_id":
        "t1_lzupu7v", "depth": 1, "children": ["lzxe69p"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuq6jl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "keriati",
        "can_mod_post": false, "created_utc": 1733049154.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_21zi74mh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: TypeScript\\]\n\n[Both Parts](https://github.com/keriati/aoc/blob/master/2024/day01.ts),
        still with TDD.\n\nHandy to have the defaultDict for part 2.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: TypeScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/keriati/aoc/blob/master/2024/day01.ts\"&gt;Both
        Parts&lt;/a&gt;, still with TDD.&lt;/p&gt;\n\n&lt;p&gt;Handy to have the defaultDict
        for part 2.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuq6jl/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuq6jl", "created":
        1733049154.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733049431.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuqa28", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "spyr01d",
        "can_mod_post": false, "created_utc": 1733049221.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_cjheazgd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Kotlin\\]\n\n    fun HistorianHysteria(input: List&lt;String&gt;):
        Any {\n        val a1 = mutableListOf&lt;Int&gt;()\n        val a2 = mutableListOf&lt;Int&gt;()\n        input.map
        { it.split(\"\\\\s+\".toRegex()).map(String::toInt) }.forEach { (a, b) -&gt;
        a1.add(a); a2.add(b) }\n        val p1 = a1.sorted().zip(a2.sorted()).sumOf
        { (a, b) -&gt; abs(a - b) }\n        val map = a2.groupingBy { it }.eachCount()\n        val
        p2 = a1.sumOf { map.getOrElse(it) { 0 } * it }\n        return p1 to p2\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun
        HistorianHysteria(input: List&amp;lt;String&amp;gt;): Any {\n    val a1 =
        mutableListOf&amp;lt;Int&amp;gt;()\n    val a2 = mutableListOf&amp;lt;Int&amp;gt;()\n    input.map
        { it.split(&amp;quot;\\\\s+&amp;quot;.toRegex()).map(String::toInt) }.forEach
        { (a, b) -&amp;gt; a1.add(a); a2.add(b) }\n    val p1 = a1.sorted().zip(a2.sorted()).sumOf
        { (a, b) -&amp;gt; abs(a - b) }\n    val map = a2.groupingBy { it }.eachCount()\n    val
        p2 = a1.sumOf { map.getOrElse(it) { 0 } * it }\n    return p1 to p2\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuqa28/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuqa28", "created":
        1733049221.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzuqfo7", "id": "lzuqfo7", "parent_id":
        "t1_lzuqa28", "depth": 1, "children": ["lzuqfo7"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuqgpm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "0re5ama",
        "can_mod_post": false, "created_utc": 1733049345.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ixaiv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Bash\\]\n\n  \n`paste &lt;(awk ''{print $1}'' inputs/1 | sort
        -n) &lt;(awk ''{print $2}'' inputs/1 | sort -n) | awk '' { sum += ($1 &gt;
        $2) ? $1 - $2 : $2 - $1 } END { print sum } ''`\n\n\n\n`paste &lt;(awk ''{
        print $1 }'' inputs/1) &lt;(awk ''{ print $1 }'' inputs/1 | while read value;
        do rg \"^$value\\$\" &lt;(awk ''{ print $2}'' inputs/1) | wc -l; done) | awk
        ''{ sum += $1 * $2 } END { print sum }''`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Bash]&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;paste
        &amp;lt;(awk &amp;#39;{print $1}&amp;#39; inputs/1 | sort -n) &amp;lt;(awk
        &amp;#39;{print $2}&amp;#39; inputs/1 | sort -n) | awk &amp;#39; { sum +=
        ($1 &amp;gt; $2) ? $1 - $2 : $2 - $1 } END { print sum } &amp;#39;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;paste
        &amp;lt;(awk &amp;#39;{ print $1 }&amp;#39; inputs/1) &amp;lt;(awk &amp;#39;{
        print $1 }&amp;#39; inputs/1 | while read value; do rg &amp;quot;^$value\\$&amp;quot;
        &amp;lt;(awk &amp;#39;{ print $2}&amp;#39; inputs/1) | wc -l; done) | awk
        &amp;#39;{ sum += $1 * $2 } END { print sum }&amp;#39;&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuqgpm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuqgpm", "created":
        1733049345.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxdzvk", "id": "lzxdzvk", "parent_id":
        "t1_lzuqgpm", "depth": 1, "children": ["lzxdzvk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuqiqy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "oreo3494",
        "can_mod_post": false, "created_utc": 1733049383.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_dnio49wr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n* [Day 1](https://github.com/thenil3sh/aoc2024/tree/main/Day%201%20-%20Historian%20Hysteria)\n   *
        [Part\\_first](https://github.com/thenil3sh/aoc2024/blob/main/Day%201%20-%20Historian%20Hysteria/part_first.rs)\n   *
        [Part\\_second](https://github.com/thenil3sh/aoc2024/blob/main/Day%201%20-%20Historian%20Hysteria/part_second.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a
        href=\"https://github.com/thenil3sh/aoc2024/tree/main/Day%201%20-%20Historian%20Hysteria\"&gt;Day
        1&lt;/a&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/thenil3sh/aoc2024/blob/main/Day%201%20-%20Historian%20Hysteria/part_first.rs\"&gt;Part_first&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a
        href=\"https://github.com/thenil3sh/aoc2024/blob/main/Day%201%20-%20Historian%20Hysteria/part_second.rs\"&gt;Part_second&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuqiqy/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuqiqy", "created":
        1733049383.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733077928.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuqnrn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Naturage",
        "can_mod_post": false, "created_utc": 1733049478.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ov1hq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: R]\n\n[Code here!](https://github.com/Naturage/Advent-of-code-2024/blob/main/Day%2001/Scripts/Day%201.R)\n\nFrankly,
        probably more use to spend the day doublechecking packages and last year''s
        functions, and making sure it reads data from 2024 and not 2023.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: R]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Naturage/Advent-of-code-2024/blob/main/Day%2001/Scripts/Day%201.R\"&gt;Code
        here!&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Frankly, probably more use to spend
        the day doublechecking packages and last year&amp;#39;s functions, and making
        sure it reads data from 2024 and not 2023.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuqnrn/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzuqnrn", "created": 1733049478.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuqoee",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "gessiomori",
        "can_mod_post": false, "created_utc": 1733049489.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_a35onr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: C#]\n\nhttps://github.com/GessioMori/aoc-2024/blob/solutions/src/Solutions/Solution01.cs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/GessioMori/aoc-2024/blob/solutions/src/Solutions/Solution01.cs\"&gt;https://github.com/GessioMori/aoc-2024/blob/solutions/src/Solutions/Solution01.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuqoee/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuqoee", "created":
        1733049489.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733097729.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzurdle", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Ugvx_dev",
        "can_mod_post": false, "created_utc": 1733049963.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1dm7bmh6qa",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Rust\\]\u00a0\n\n\n[https://ugvx.dev/advent/2024/1](https://ugvx.dev/advent/2024/1)
        Solution is explained, compiled and executable in one page!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]\u00a0&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://ugvx.dev/advent/2024/1\"&gt;https://ugvx.dev/advent/2024/1&lt;/a&gt;
        Solution is explained, compiled and executable in one page!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzurdle/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzurdle", "created":
        1733049963.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxduj9", "id": "lzxduj9", "parent_id":
        "t1_lzurdle", "depth": 1, "children": ["lzxduj9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733061702.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzurqvp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "bigboots50",
        "can_mod_post": false, "created_utc": 1733050215.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_3x0w5xqp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\n    // load + prepare\n    const lines = loadLines(\"input.txt\")\n    const
        [left, right] = rows2cols(lines.map(l=&gt;l.split(/\\s+/g))).map(l =&gt; l.sort())\n    \n    //
        part 1 + 2\n    const solution = { part1: 0, part2: 0 };\n    for(let i =
        0; i &lt; left.length; i++){\n    \u00a0 solution.part1 += Math.abs(left[i]
        - right[i]);\n    \u00a0 solution.part2 += left[i] * right.filter(v =&gt;
        v == left[i]).length;\n    }\n    console.log(solution) // { part1: 2430334,
        part2: 28786472 }\n    \n    // helper function\n    function rows2cols(arr){\n    \u00a0
        return Array.from({ length: arr[0].length }, (_, col) =&gt; arr.map(row =&gt;
        row[col]));\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        JavaScript]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// load + prepare\nconst lines
        = loadLines(&amp;quot;input.txt&amp;quot;)\nconst [left, right] = rows2cols(lines.map(l=&amp;gt;l.split(/\\s+/g))).map(l
        =&amp;gt; l.sort())\n\n// part 1 + 2\nconst solution = { part1: 0, part2:
        0 };\nfor(let i = 0; i &amp;lt; left.length; i++){\n\u00a0 solution.part1
        += Math.abs(left[i] - right[i]);\n\u00a0 solution.part2 += left[i] * right.filter(v
        =&amp;gt; v == left[i]).length;\n}\nconsole.log(solution) // { part1: 2430334,
        part2: 28786472 }\n\n// helper function\nfunction rows2cols(arr){\n\u00a0
        return Array.from({ length: arr[0].length }, (_, col) =&amp;gt; arr.map(row
        =&amp;gt; row[col]));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzurqvp/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzurqvp", "created": 1733050215.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuwqfp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Mats56",
        "can_mod_post": false, "created_utc": 1733053493.0, "send_replies": true,
        "parent_id": "t1_lzurqvp", "score": 3, "author_fullname": "t2_a7kz2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "are you sorting the list for every iteration? \ud83d\ude05", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;are you sorting the list for every iteration?
        \ud83d\ude05&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuwqfp/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuwqfp", "created":
        1733053493.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzurrwf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "matheusstutzel",
        "can_mod_post": false, "created_utc": 1733050234.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_33s4wxi3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE:  python]\n\nLink to [commit](https://github.com/matheusstutzel/adventOfCode/commit/fa8199ecdf5480aa629b9a9021a15a806c3ec0f9)\n\nNaive
        solution to secure the stars\u2026 I wanna try later on another language",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:  python]&lt;/p&gt;\n\n&lt;p&gt;Link
        to &lt;a href=\"https://github.com/matheusstutzel/adventOfCode/commit/fa8199ecdf5480aa629b9a9021a15a806c3ec0f9\"&gt;commit&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Naive
        solution to secure the stars\u2026 I wanna try later on another language&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzurrwf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzurrwf", "created":
        1733050234.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733070559.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzurxqm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "hgwxx7_",
        "can_mod_post": false, "created_utc": 1733050342.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_7ukhi4zx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\nLink to [both parts](https://github.com/nindalf/advent-2024/blob/master/src/day01/mod.rs).\n\nPart
        1 runs in 48\u03bcs, Part 2 in 44\u03bcs on an M1 Pro.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Link to &lt;a
        href=\"https://github.com/nindalf/advent-2024/blob/master/src/day01/mod.rs\"&gt;both
        parts&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Part 1 runs in 48\u03bcs, Part 2 in
        44\u03bcs on an M1 Pro.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzurxqm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzurxqm", "created":
        1733050342.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzury9n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Due_Scar_5134",
        "can_mod_post": false, "created_utc": 1733050352.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_uw4qp7ur", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\n[https://github.com/onlyroz/AdventOfCode2024/tree/main/day1](https://github.com/onlyroz/AdventOfCode2024/tree/main/day1)\n\nNot
        too tricksy today", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        JavaScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/onlyroz/AdventOfCode2024/tree/main/day1\"&gt;https://github.com/onlyroz/AdventOfCode2024/tree/main/day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Not
        too tricksy today&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzury9n/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzury9n", "created":
        1733050352.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzusxwa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "guy-732",
        "can_mod_post": false, "created_utc": 1733051026.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_seez406p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[https://github.com/guy-732/aoc-2024/blob/master/src/day01.rs](https://github.com/guy-732/aoc-2024/blob/master/src/day01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/guy-732/aoc-2024/blob/master/src/day01.rs\"&gt;https://github.com/guy-732/aoc-2024/blob/master/src/day01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzusxwa/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzusxwa", "created":
        1733051026.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzut10v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "careyi4",
        "can_mod_post": false, "created_utc": 1733051085.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_hu46v6a9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Ruby\\]\n\n[https://github.com/careyi3/aoc\\_2024/tree/master/solutions/1](https://github.com/careyi3/aoc_2024/tree/master/solutions/1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ruby]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/careyi3/aoc_2024/tree/master/solutions/1\"&gt;https://github.com/careyi3/aoc_2024/tree/master/solutions/1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzut10v/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzut10v", "created":
        1733051085.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzut77l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "sinsworth",
        "can_mod_post": false, "created_utc": 1733051201.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_gf55olu3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nNumpy felt like [major overkill](https://gitlab.com/olegsson/aoc/-/blob/main/2024/01.py?ref_type=heads)
        for this, it is what it is.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;p&gt;Numpy felt like &lt;a href=\"https://gitlab.com/olegsson/aoc/-/blob/main/2024/01.py?ref_type=heads\"&gt;major
        overkill&lt;/a&gt; for this, it is what it is.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzut77l/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzut77l", "created": 1733051201.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1739626256.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzutcrs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzutcrs", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzutcrs/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733051304.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733051304.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzuyagq", "id": "lzuyagq", "parent_id":
        "t1_lzutcrs", "depth": 1, "children": ["lzuyagq"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzutgq2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "izahariev96",
        "can_mod_post": false, "created_utc": 1733051378.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1acpshvt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Kotlin\\]\n\n  \n[GitHub](https://github.com/ivzb/playground/blob/master/src/main/kotlin/advent_of_code/_2024/Task01.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ivzb/playground/blob/master/src/main/kotlin/advent_of_code/_2024/Task01.kt\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzutgq2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzutgq2", "created":
        1733051378.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzv37kw", "id": "lzv37kw", "parent_id":
        "t1_lzutgq2", "depth": 1, "children": ["lzv37kw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuuc24",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "starboigg",
        "can_mod_post": false, "created_utc": 1733051949.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_2k0n27bs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Java\\]\n\n[Link](https://topaz.github.io/paste/#XQAAAQAXBwAAAAAAAAA4HUhobBw1MA7Jk3hz/cdpPY8dASEZfUTs2obf2RDzlcSE+2zSv6RofxezhVHJ/erC5OdPidvFMNbvcmJt7DuP9eMSqXpeY1emcYVmms1wTYf2pdVPj+0dRSGf7r8rfm6aWEwX+trQkEbcXaWsNUEoz8YIOnV9B7gJiAnvzRPeBIh2KUtxKbDa1pE64KsWqKYgEu6kjb1GBte29ow8Ue7UjBbyXbaZ7g3GS2S/uIp+Ht2eVne1nHsZ6q0CyvP3qtGya88vrwFc6IqWtVjPr/bGezDyy5zmm1AHjL7TRH24YVR3IBBUk2kKYzpNbqwovVaEnw80EQvbkRH7rVZ5HVxcc6f4aUeQK8r1/d/kei1zHg+DFiBtKE7n+wCF57eRJNuQ8QulkmADp0NpidMrF4bRFoGCcKQk7fQCJebEESFCxee1NDwsecYvnA+gF9hu6CGZLG7zb/A3acj7uUOtNLQ0028AFUHrfZzRm5Rocw6F4ybXf8VGPGPRdN3z8jsLlmZJ5G6idqBd+/AnI/xtpwjo0scJBv/eRFLhCTidBoehBB6wBkUJ1e5fbx7+p4+PUIGhJn6C5lq9wX8qc/JtbPnq8bwOMtmqaVMmqGge+JPj/nXpL/TC88UrzacmSzx+E3jM+TkGdW4/V7VTq3hojR6fSZYlyhrCgxLFJ+wkJGCX3P5ZNbVPpV7HtTNFEedaWEaxLg7NmXrMeraszW4HBi9UWKdT3ssQ9h9c2ZBuJiRWv4pmJnSx3lQ5YSfF4gx2fykVhEI5soxevGPRGL+FaCvuytSUS9USnGbD24fHSCmKhPrE69KBLFmsOBYhjQFZ187whcgMOckZMAEVyl5chmFl8lP/+fLAvA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Java]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQAXBwAAAAAAAAA4HUhobBw1MA7Jk3hz/cdpPY8dASEZfUTs2obf2RDzlcSE+2zSv6RofxezhVHJ/erC5OdPidvFMNbvcmJt7DuP9eMSqXpeY1emcYVmms1wTYf2pdVPj+0dRSGf7r8rfm6aWEwX+trQkEbcXaWsNUEoz8YIOnV9B7gJiAnvzRPeBIh2KUtxKbDa1pE64KsWqKYgEu6kjb1GBte29ow8Ue7UjBbyXbaZ7g3GS2S/uIp+Ht2eVne1nHsZ6q0CyvP3qtGya88vrwFc6IqWtVjPr/bGezDyy5zmm1AHjL7TRH24YVR3IBBUk2kKYzpNbqwovVaEnw80EQvbkRH7rVZ5HVxcc6f4aUeQK8r1/d/kei1zHg+DFiBtKE7n+wCF57eRJNuQ8QulkmADp0NpidMrF4bRFoGCcKQk7fQCJebEESFCxee1NDwsecYvnA+gF9hu6CGZLG7zb/A3acj7uUOtNLQ0028AFUHrfZzRm5Rocw6F4ybXf8VGPGPRdN3z8jsLlmZJ5G6idqBd+/AnI/xtpwjo0scJBv/eRFLhCTidBoehBB6wBkUJ1e5fbx7+p4+PUIGhJn6C5lq9wX8qc/JtbPnq8bwOMtmqaVMmqGge+JPj/nXpL/TC88UrzacmSzx+E3jM+TkGdW4/V7VTq3hojR6fSZYlyhrCgxLFJ+wkJGCX3P5ZNbVPpV7HtTNFEedaWEaxLg7NmXrMeraszW4HBi9UWKdT3ssQ9h9c2ZBuJiRWv4pmJnSx3lQ5YSfF4gx2fykVhEI5soxevGPRGL+FaCvuytSUS9USnGbD24fHSCmKhPrE69KBLFmsOBYhjQFZ187whcgMOckZMAEVyl5chmFl8lP/+fLAvA==\"&gt;Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuuc24/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuuc24", "created":
        1733051949.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733085541.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuve9o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "gwpmad",
        "can_mod_post": false, "created_utc": 1733052636.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_h9wu87rg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: python\\]\n\n[Code](https://github.com/gwpmad/advent-of-code-2024/blob/main/day_1/main.py)\n\nUsing
        as few loops as possible - only one in part two, using algebra during the
        loop instead of summing at the end.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gwpmad/advent-of-code-2024/blob/main/day_1/main.py\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Using
        as few loops as possible - only one in part two, using algebra during the
        loop instead of summing at the end.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuve9o/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzuve9o", "created": 1733052636.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733055106.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuwuer", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "MoatazProAtAll",
        "can_mod_post": false, "created_utc": 1733053562.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_3pxb5x4v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: python\\]\n\n[Still new to programming, wanted to make code
        as clear as possible.](https://github.com/MizoWNA/AOC2024)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/MizoWNA/AOC2024\"&gt;Still new to programming, wanted
        to make code as clear as possible.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuwuer/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzuwuer", "created": 1733053562.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzux5eu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Freder1ckSchmidt",
        "can_mod_post": false, "created_utc": 1733053755.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_19wxuef9kb",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Go\\]\n\nNothing fancy I would say, just boring
        GO... \ud83c\udf32 I will try with ZIG next days \n\n[Day 01](https://github.com/LinuxFanboy/advent-of-code/tree/main/aoc_2024/Day_01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;Nothing
        fancy I would say, just boring GO... \ud83c\udf32 I will try with ZIG next
        days &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/LinuxFanboy/advent-of-code/tree/main/aoc_2024/Day_01\"&gt;Day
        01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzux5eu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzux5eu", "created":
        1733053755.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuxln2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AugustusLego",
        "can_mod_post": false, "created_utc": 1733054032.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_13imev", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]  \nCould definitely have sorted the lists for part 2
        and manually counted instead of using `right_side.into_iter().filter(|right_num|right_num==left_num).count()`
        or used a hashmap but I couldn''t be bothered.\n\n[Day 01](https://github.com/Bryntet/Advent-of-code-2024/blob/main/src/bin/01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;br/&gt;\nCould
        definitely have sorted the lists for part 2 and manually counted instead of
        using &lt;code&gt;right_side.into_iter().filter(|right_num|right_num==left_num).count()&lt;/code&gt;
        or used a hashmap but I couldn&amp;#39;t be bothered.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Bryntet/Advent-of-code-2024/blob/main/src/bin/01.rs\"&gt;Day
        01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuxln2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuxln2", "created":
        1733054032.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuxu2f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "rakkie20",
        "can_mod_post": false, "created_utc": 1733054178.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_66rd8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\nNice and easy, used a HashMap to keep frequency counts
        for part 2\n\n    use itertools::Itertools;\n    use std::collections::HashMap;\n    \n    fn
        main() {\n        let input = include_str!(\"../../inputs/day01.txt\");\n        let
        mut freqs: HashMap&lt;usize, usize&gt; = HashMap::new();\n    \n        let
        (mut left, mut right): (Vec&lt;_&gt;, Vec&lt;_&gt;) = input\n            .lines()\n            .flat_map(|line|
        {\n                line.split_whitespace()\n                    .map(|elem|
        elem.parse().unwrap())\n                    .collect_tuple()\n                    .inspect(|&amp;(_,
        right)| {\n                        *freqs.entry(right).or_default() += 1;\n                    })\n            })\n            .unzip();\n    \n        left.sort_unstable();\n        right.sort_unstable();\n    \n        println!(\n            \"Part
        1: {}\",\n            left.iter()\n                .zip(right.iter())\n                .map(|(&amp;l,
        &amp;r)| l.abs_diff(r))\n                .sum::&lt;usize&gt;()\n        );\n        println!(\n            \"Part
        2: {}\",\n            left.iter()\n                .map(|&amp;val| val * freqs.get(&amp;val).unwrap_or(&amp;0))\n                .sum::&lt;usize&gt;()\n        );\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Nice
        and easy, used a HashMap to keep frequency counts for part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        itertools::Itertools;\nuse std::collections::HashMap;\n\nfn main() {\n    let
        input = include_str!(&amp;quot;../../inputs/day01.txt&amp;quot;);\n    let
        mut freqs: HashMap&amp;lt;usize, usize&amp;gt; = HashMap::new();\n\n    let
        (mut left, mut right): (Vec&amp;lt;_&amp;gt;, Vec&amp;lt;_&amp;gt;) = input\n        .lines()\n        .flat_map(|line|
        {\n            line.split_whitespace()\n                .map(|elem| elem.parse().unwrap())\n                .collect_tuple()\n                .inspect(|&amp;amp;(_,
        right)| {\n                    *freqs.entry(right).or_default() += 1;\n                })\n        })\n        .unzip();\n\n    left.sort_unstable();\n    right.sort_unstable();\n\n    println!(\n        &amp;quot;Part
        1: {}&amp;quot;,\n        left.iter()\n            .zip(right.iter())\n            .map(|(&amp;amp;l,
        &amp;amp;r)| l.abs_diff(r))\n            .sum::&amp;lt;usize&amp;gt;()\n    );\n    println!(\n        &amp;quot;Part
        2: {}&amp;quot;,\n        left.iter()\n            .map(|&amp;amp;val| val
        * freqs.get(&amp;amp;val).unwrap_or(&amp;amp;0))\n            .sum::&amp;lt;usize&amp;gt;()\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuxu2f/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuxu2f", "created":
        1733054178.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733056412.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuxuz5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Fyvaproldje",
        "can_mod_post": false, "created_utc": 1733054194.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_2h7zn9ro", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Rust\\] \\[GSGA\\]\n\n[https://github.com/DarthGandalf/advent-of-code/blob/master/2024/src/day01.rs](https://github.com/DarthGandalf/advent-of-code/blob/master/2024/src/day01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Rust] [GSGA]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/DarthGandalf/advent-of-code/blob/master/2024/src/day01.rs\"&gt;https://github.com/DarthGandalf/advent-of-code/blob/master/2024/src/day01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuxuz5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuxuz5", "created":
        1733054194.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzx9vl3", "id": "lzx9vl3", "parent_id":
        "t1_lzuxuz5", "depth": 1, "children": ["lzx9vl3"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuyau3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "National_Cat_1162",
        "can_mod_post": false, "created_utc": 1733054459.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ta2h9ruc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[https://github.com/AlesiRowland/aoc\\_2024\\_rust/blob/main/src/day\\_01.rs](https://github.com/AlesiRowland/aoc_2024_rust/blob/main/src/day_01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AlesiRowland/aoc_2024_rust/blob/main/src/day_01.rs\"&gt;https://github.com/AlesiRowland/aoc_2024_rust/blob/main/src/day_01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuyau3/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuyau3", "created":
        1733054459.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuzxk9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Stano95",
        "can_mod_post": false, "created_utc": 1733055427.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_igo1d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Haskell\\]\n\n    module Day1 where\n    \n    import Data.List
        (sort, transpose)\n    import qualified Data.Map as M\n    import Data.Maybe
        (fromMaybe)\n    \n    part1 :: IO Int\n    part1 = solvePart1 &lt;$&gt; getInput
        \"./fixtures/input1.txt\"\n    \n    part2 :: IO Int\n    part2 = solvePart2
        &lt;$&gt; getInput \"./fixtures/input1.txt\"\n    \n    solvePart1 :: ([Int],
        [Int]) -&gt; Int\n    solvePart1 (xs, ys) = sum distances\n      where\n        getDist
        x y = abs (x - y)\n        distances = zipWith getDist (sort xs) (sort ys)\n    \n    solvePart2
        :: ([Int], [Int]) -&gt; Int\n    solvePart2 (xs, ys) = sum . map getScore
        $ xs\n      where\n        lookupMap = frequencies ys\n        getScore x
        = (* x) . fromMaybe 0 . M.lookup x $ lookupMap\n    \n    frequencies :: (Ord
        a) =&gt; [a] -&gt; M.Map a Int\n    frequencies = foldr incrementMap M.empty\n      where\n        incrementMap
        x = M.insertWith (+) x 1\n    \n    getInput :: FilePath -&gt; IO ([Int],
        [Int])\n    getInput filePath = toTuple . map (map read) . transpose . map
        words . lines &lt;$&gt; \n    readFile filePath\n      where\n        toTuple
        :: [a] -&gt; (a, a)\n        toTuple [x, y] = (x, y)\n        toTuple _ =
        undefined\n\nAlso on [github](https://github.com/stanosphere/advent-of-code/blob/main/src/2024/Day1.hs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Haskell]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module
        Day1 where\n\nimport Data.List (sort, transpose)\nimport qualified Data.Map
        as M\nimport Data.Maybe (fromMaybe)\n\npart1 :: IO Int\npart1 = solvePart1
        &amp;lt;$&amp;gt; getInput &amp;quot;./fixtures/input1.txt&amp;quot;\n\npart2
        :: IO Int\npart2 = solvePart2 &amp;lt;$&amp;gt; getInput &amp;quot;./fixtures/input1.txt&amp;quot;\n\nsolvePart1
        :: ([Int], [Int]) -&amp;gt; Int\nsolvePart1 (xs, ys) = sum distances\n  where\n    getDist
        x y = abs (x - y)\n    distances = zipWith getDist (sort xs) (sort ys)\n\nsolvePart2
        :: ([Int], [Int]) -&amp;gt; Int\nsolvePart2 (xs, ys) = sum . map getScore
        $ xs\n  where\n    lookupMap = frequencies ys\n    getScore x = (* x) . fromMaybe
        0 . M.lookup x $ lookupMap\n\nfrequencies :: (Ord a) =&amp;gt; [a] -&amp;gt;
        M.Map a Int\nfrequencies = foldr incrementMap M.empty\n  where\n    incrementMap
        x = M.insertWith (+) x 1\n\ngetInput :: FilePath -&amp;gt; IO ([Int], [Int])\ngetInput
        filePath = toTuple . map (map read) . transpose . map words . lines &amp;lt;$&amp;gt;
        \nreadFile filePath\n  where\n    toTuple :: [a] -&amp;gt; (a, a)\n    toTuple
        [x, y] = (x, y)\n    toTuple _ = undefined\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also
        on &lt;a href=\"https://github.com/stanosphere/advent-of-code/blob/main/src/2024/Day1.hs\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuzxk9/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuzxk9", "created":
        1733055427.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv0600",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "suncowsounds",
        "can_mod_post": false, "created_utc": 1733055563.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_14lym8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\] \n\n    # 2024 Advent of Code: --- Day 1: Historian
        Hysteria ---\n    \n    def open_input(location) -&gt; list:\n        input
        = open(location)\n        content = input.readlines()\n        input.close()\n        return
        content\n    \n    # part 1\n    \n    a_list = []\n    b_list = []\n    content
        = open_input(''../input.txt'')\n    \n    for line in content:\n        a,
        b = line.split(\"   \")\n        a = int(a.strip())\n        b = int(b.strip())\n        a_list.append(a)\n        b_list.append(b)\n    \n    a_list.sort()\n    b_list.sort()\n    \n    i
        = 0\n    sum_dist = 0\n    while i &lt; len(a_list):\n        distance = abs(a_list[i]
        - b_list[i])\n        sum_dist += distance\n        i += 1\n    \n    print(\"part
        I:\", sum_dist)\n    \n    # part 2\n    \n    sim_score = 0\n    \n    for
        num in b_list:\n        if num in a_list:\n            sim_score += num\n    \n    print(\"Part
        II:\", sim_score)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python] &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# 2024 Advent of Code: --- Day
        1: Historian Hysteria ---\n\ndef open_input(location) -&amp;gt; list:\n    input
        = open(location)\n    content = input.readlines()\n    input.close()\n    return
        content\n\n# part 1\n\na_list = []\nb_list = []\ncontent = open_input(&amp;#39;../input.txt&amp;#39;)\n\nfor
        line in content:\n    a, b = line.split(&amp;quot;   &amp;quot;)\n    a =
        int(a.strip())\n    b = int(b.strip())\n    a_list.append(a)\n    b_list.append(b)\n\na_list.sort()\nb_list.sort()\n\ni
        = 0\nsum_dist = 0\nwhile i &amp;lt; len(a_list):\n    distance = abs(a_list[i]
        - b_list[i])\n    sum_dist += distance\n    i += 1\n\nprint(&amp;quot;part
        I:&amp;quot;, sum_dist)\n\n# part 2\n\nsim_score = 0\n\nfor num in b_list:\n    if
        num in a_list:\n        sim_score += num\n\nprint(&amp;quot;Part II:&amp;quot;,
        sim_score)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv0600/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv0600", "created":
        1733055563.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv06w0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "cbrnr",
        "can_mod_post": false, "created_utc": 1733055577.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_4udoumrm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Julia]\n\n[https://github.com/cbrnr/aoc2024/blob/main/01.jl](https://github.com/cbrnr/aoc2024/blob/main/01.jl)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Julia]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/cbrnr/aoc2024/blob/main/01.jl\"&gt;https://github.com/cbrnr/aoc2024/blob/main/01.jl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv06w0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv06w0", "created":
        1733055577.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv0aq2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "DevSway",
        "can_mod_post": false, "created_utc": 1733055637.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_zwaj7fciz",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Go\\]\n\n[https://github.com/JosueMolinaMorales/advent-of-code/blob/main/2024/internal/days/one/day\\_1.go](https://github.com/JosueMolinaMorales/advent-of-code/blob/main/2024/internal/days/one/day_1.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/JosueMolinaMorales/advent-of-code/blob/main/2024/internal/days/one/day_1.go\"&gt;https://github.com/JosueMolinaMorales/advent-of-code/blob/main/2024/internal/days/one/day_1.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv0aq2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv0aq2", "created":
        1733055637.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733056680.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzv0kiu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "DaddyArc",
        "can_mod_post": false, "created_utc": 1733055792.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1ic4nrz3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python + Pandas\\]\n\n[https://github.com/ShadowArc147/AdventOfCode2024/tree/main/Day1](https://github.com/ShadowArc147/AdventOfCode2024/tree/main/Day1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python +
        Pandas]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ShadowArc147/AdventOfCode2024/tree/main/Day1\"&gt;https://github.com/ShadowArc147/AdventOfCode2024/tree/main/Day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv0kiu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv0kiu", "created":
        1733055792.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv0mhf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "therouterguy",
        "can_mod_post": false, "created_utc": 1733055822.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_q2hu8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        " [LANGUAGE: Python]\nhttps://gitlab.com/NetTinkerer/aoc2024/-/raw/main/day1.py?ref_type=heads\n\nNothing
        fancy.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]\n&lt;a href=\"https://gitlab.com/NetTinkerer/aoc2024/-/raw/main/day1.py?ref_type=heads\"&gt;https://gitlab.com/NetTinkerer/aoc2024/-/raw/main/day1.py?ref_type=heads&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nothing
        fancy.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv0mhf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv0mhf", "created":
        1733055822.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzv0mhw", "id": "lzv0mhw", "parent_id":
        "t1_lzv0mhf", "depth": 1, "children": ["lzv0mhw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv0sma",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "j4nd8r",
        "can_mod_post": false, "created_utc": 1733055918.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_43w46rey", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Scala3\\] [https://github.com/dr-jerry/aoc-scala3/blob/main/src/main/scala/nl/itjer/aoc/2024/Day01.scala](https://github.com/dr-jerry/aoc-scala3/blob/main/src/main/scala/nl/itjer/aoc/2024/Day01.scala)\n\nthanks
        for unzip &amp; zip", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Scala3] &lt;a href=\"https://github.com/dr-jerry/aoc-scala3/blob/main/src/main/scala/nl/itjer/aoc/2024/Day01.scala\"&gt;https://github.com/dr-jerry/aoc-scala3/blob/main/src/main/scala/nl/itjer/aoc/2024/Day01.scala&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;thanks
        for unzip &amp;amp; zip&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv0sma/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv0sma", "created":
        1733055918.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv1amu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "sanraith",
        "can_mod_post": false, "created_utc": 1733056199.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_5yook", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Scala 3\\]  \nSources are available on my github: [Day01.scala](https://github.com/sanraith/aoc2024/blob/520fda70ee36533ae64dd7f7d40206b56c5931eb/shared/src/main/scala/hu/sanraith/aoc2024/solution/Day01.scala)\n\n    override
        def part1(ctx: Context): Int = \n      val (seq1, seq2) = parseInput(ctx)
        \n      seq1.sorted().zip(seq2.sorted()).map { case (a, b) =&gt; Math.abs(a
        - b) }.sum\n    \n    override def part2(ctx: Context): Int =\n      val (seq1,
        seq2) = parseInput(ctx)\n      seq1.map(x =&gt; x * seq2.count(_ == x)).sum\n    \n    def
        parseInput(ctx: Context): (Seq[Int], Seq[Int]) =\n      val numberPairRegex
        = Regex(\"\"\"(\\d+)\\s+(\\d+)\"\"\")\n      ctx.input.linesIterator\n        .collect
        { case numberPairRegex(a, b) =&gt; (a.toInt, b.toInt) }\n        .toSeq\n        .unzip",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Scala 3]&lt;br/&gt;\nSources
        are available on my github: &lt;a href=\"https://github.com/sanraith/aoc2024/blob/520fda70ee36533ae64dd7f7d40206b56c5931eb/shared/src/main/scala/hu/sanraith/aoc2024/solution/Day01.scala\"&gt;Day01.scala&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;override
        def part1(ctx: Context): Int = \n  val (seq1, seq2) = parseInput(ctx) \n  seq1.sorted().zip(seq2.sorted()).map
        { case (a, b) =&amp;gt; Math.abs(a - b) }.sum\n\noverride def part2(ctx: Context):
        Int =\n  val (seq1, seq2) = parseInput(ctx)\n  seq1.map(x =&amp;gt; x * seq2.count(_
        == x)).sum\n\ndef parseInput(ctx: Context): (Seq[Int], Seq[Int]) =\n  val
        numberPairRegex = Regex(&amp;quot;&amp;quot;&amp;quot;(\\d+)\\s+(\\d+)&amp;quot;&amp;quot;&amp;quot;)\n  ctx.input.linesIterator\n    .collect
        { case numberPairRegex(a, b) =&amp;gt; (a.toInt, b.toInt) }\n    .toSeq\n    .unzip\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv1amu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv1amu", "created":
        1733056199.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv1j4u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "wowisthatreal",
        "can_mod_post": false, "created_utc": 1733056330.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_6xwdkhex", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[https://github.com/Surasia/aoc24/blob/master/src/day1.rs](https://github.com/Surasia/aoc24/blob/master/src/day1.rs)\n\nsome
        small optimizations too", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Surasia/aoc24/blob/master/src/day1.rs\"&gt;https://github.com/Surasia/aoc24/blob/master/src/day1.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;some
        small optimizations too&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv1j4u/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv1j4u", "created":
        1733056330.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733166697.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzv20jv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mirrori",
        "can_mod_post": false, "created_utc": 1733056599.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_6p0qg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\nLearning Rust!\n\n[Link](https://github.com/mikkomattila/aoc-rust/blob/main/src/year_2024/day_1.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Learning
        Rust!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/mikkomattila/aoc-rust/blob/main/src/year_2024/day_1.rs\"&gt;Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv20jv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv20jv", "created":
        1733056599.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733058042.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzv3ssf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "NonchalantFossa",
        "can_mod_post": false, "created_utc": 1733057559.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1078h1ogtp",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: Elixir]\n\n    data =\n      File.read!(\"d01.input.txt\")\n      |&gt;
        String.split(\"\\n\", trim: true)\n      |&gt; Enum.map(fn line -&gt;\n        String.split(line)
        |&gt; Enum.map(&amp;String.to_integer/1)\n      end)\n      |&gt; Enum.zip()\n      |&gt;
        Enum.map(&amp;Tuple.to_list/1)\n    \n    part1 =\n      data\n      |&gt;
        Enum.map(&amp;Enum.sort/1)\n      |&gt; Enum.zip_reduce(0, fn [l, r], acc
        -&gt;\n        acc + abs(l - r)\n      end)\n    \n    part2 =\n      with
        [left, right] = Enum.map(data, &amp;Enum.frequencies/1) do\n        Enum.map(left,
        fn {k, v} -&gt;\n          k * v * Map.get(right, k, 0)\n        end)\n        |&gt;
        Enum.sum()\n      end\n    \n    IO.puts(\"part1: #{part1}\\npart2: #{part2}\")",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data
        =\n  File.read!(&amp;quot;d01.input.txt&amp;quot;)\n  |&amp;gt; String.split(&amp;quot;\\n&amp;quot;,
        trim: true)\n  |&amp;gt; Enum.map(fn line -&amp;gt;\n    String.split(line)
        |&amp;gt; Enum.map(&amp;amp;String.to_integer/1)\n  end)\n  |&amp;gt; Enum.zip()\n  |&amp;gt;
        Enum.map(&amp;amp;Tuple.to_list/1)\n\npart1 =\n  data\n  |&amp;gt; Enum.map(&amp;amp;Enum.sort/1)\n  |&amp;gt;
        Enum.zip_reduce(0, fn [l, r], acc -&amp;gt;\n    acc + abs(l - r)\n  end)\n\npart2
        =\n  with [left, right] = Enum.map(data, &amp;amp;Enum.frequencies/1) do\n    Enum.map(left,
        fn {k, v} -&amp;gt;\n      k * v * Map.get(right, k, 0)\n    end)\n    |&amp;gt;
        Enum.sum()\n  end\n\nIO.puts(&amp;quot;part1: #{part1}\\npart2: #{part2}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv3ssf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv3ssf", "created":
        1733057559.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzv3ssw", "id": "lzv3ssw", "parent_id":
        "t1_lzv3ssf", "depth": 1, "children": ["lzv3ssw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv48yt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "IvanR3D",
        "can_mod_post": false, "created_utc": 1733057793.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_q3zxe4o4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\] My solutions:\u00a0[https://ivanr3d.com/blog/adventofcode2024.html](https://ivanr3d.com/blog/adventofcode2024.html)\n\nMy
        solution (to run directly in the input page using the DevTools console).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]
        My solutions:\u00a0&lt;a href=\"https://ivanr3d.com/blog/adventofcode2024.html\"&gt;https://ivanr3d.com/blog/adventofcode2024.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        solution (to run directly in the input page using the DevTools console).&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv48yt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv48yt", "created":
        1733057793.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv4kze",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "tausiqsamantaray",
        "can_mod_post": false, "created_utc": 1733057962.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ov023boe", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]  \nJust doing for fun.  \n[https://github.com/tausiq2003/aoc/blob/master/2024/day1.py](https://github.com/tausiq2003/aoc/blob/master/2024/day1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;br/&gt;\nJust
        doing for fun.&lt;br/&gt;\n&lt;a href=\"https://github.com/tausiq2003/aoc/blob/master/2024/day1.py\"&gt;https://github.com/tausiq2003/aoc/blob/master/2024/day1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv4kze/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv4kze", "created":
        1733057962.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv5do7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Future_Pie5235",
        "can_mod_post": false, "created_utc": 1733058358.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_li56tnof", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Elixir\\]\n\n[https://github.com/SwannHERRERA/advent-of-code-2024/blob/main/ex/lib/day\\_1.ex](https://github.com/SwannHERRERA/advent-of-code-2024/blob/main/ex/lib/day_1.ex)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/SwannHERRERA/advent-of-code-2024/blob/main/ex/lib/day_1.ex\"&gt;https://github.com/SwannHERRERA/advent-of-code-2024/blob/main/ex/lib/day_1.ex&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv5do7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv5do7", "created":
        1733058358.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzvks0s", "id": "lzvks0s", "parent_id":
        "t1_lzv5do7", "depth": 1, "children": ["lzvks0s"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv5f36",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ich-bin-jade",
        "can_mod_post": false, "created_utc": 1733058377.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_9xg46lqt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nJust doing this for a bit of fun and brushing up on
        my Python knowledge!\n\nhttps://github.com/IchBinJade/advent-of-code-python/blob/main/2024%2Fday01.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Just
        doing this for a bit of fun and brushing up on my Python knowledge!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/IchBinJade/advent-of-code-python/blob/main/2024%2Fday01.py\"&gt;https://github.com/IchBinJade/advent-of-code-python/blob/main/2024%2Fday01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv5f36/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv5f36", "created":
        1733058377.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv69w1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Infidel-Art",
        "can_mod_post": false, "created_utc": 1733058789.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_fzdnxha2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C#\\]\n\n    using System.IO;\n    class Day1 {\n    \n        static
        readonly string inputFile = \"data/Day 1 Input.txt\";\n    \n        static
        void Main(string[] args) {\n            string fullInputPath = Path.GetFullPath(inputFile);\n            string[]
        inputLines = File.ReadAllLines(fullInputPath);\n    \n            // Split
        inputLines into listA and listB, convert to integer values\n            int[]
        listA = new int[inputLines.Length];\n            int[] listB = new int[inputLines.Length];\n            for
        (int i = 0; i &lt; inputLines.Length; i++) {\n                string[] locationIDs
        = inputLines[i].Split('' '', StringSplitOptions.RemoveEmptyEntries);\n                listA[i]
        = Int32.Parse(locationIDs[0]);\n                listB[i] = Int32.Parse(locationIDs[1]);\n            }\n            Array.Sort(listA);\n            Array.Sort(listB);
        \n    \n            int totalDifference = 0;\n            for (int i = 0;
        i &lt; inputLines.Length; i++) {\n                totalDifference += (int)Math.Abs(listA[i]
        - listB[i]);\n            }\n            Console.WriteLine(\"Total difference
        score: \" + totalDifference);\n    \n            // Part two, getting the
        similarity score\n            int totalSimilarityScore = 0;\n    \n            int
        lastBIndex = 0; // Since both lists are sorted, we can avoid looping through
        the already scanned elements of listB with this\n            // For locationIDs
        that don''t appear in listB, we won''t update the last index.\n            \n            foreach(int
        locationID in listA) {\n                int appearences = 0;\n                for
        (int i = lastBIndex; i &lt; inputLines.Length; i++) {\n                    if
        (locationID == listB[i]) {\n                        appearences++;\n                        lastBIndex
        = i;\n                    } \n                    else if (locationID &lt;
        listB[i]) {\n                         break; // We know we won''t be finding
        more instances of it - again, since the list is sorted\n                    }\n                }\n                totalSimilarityScore
        += locationID * appearences;\n            }\n            Console.WriteLine(\"Total
        similarity score: \" + totalSimilarityScore);\n        }\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;using
        System.IO;\nclass Day1 {\n\n    static readonly string inputFile = &amp;quot;data/Day
        1 Input.txt&amp;quot;;\n\n    static void Main(string[] args) {\n        string
        fullInputPath = Path.GetFullPath(inputFile);\n        string[] inputLines
        = File.ReadAllLines(fullInputPath);\n\n        // Split inputLines into listA
        and listB, convert to integer values\n        int[] listA = new int[inputLines.Length];\n        int[]
        listB = new int[inputLines.Length];\n        for (int i = 0; i &amp;lt; inputLines.Length;
        i++) {\n            string[] locationIDs = inputLines[i].Split(&amp;#39; &amp;#39;,
        StringSplitOptions.RemoveEmptyEntries);\n            listA[i] = Int32.Parse(locationIDs[0]);\n            listB[i]
        = Int32.Parse(locationIDs[1]);\n        }\n        Array.Sort(listA);\n        Array.Sort(listB);
        \n\n        int totalDifference = 0;\n        for (int i = 0; i &amp;lt; inputLines.Length;
        i++) {\n            totalDifference += (int)Math.Abs(listA[i] - listB[i]);\n        }\n        Console.WriteLine(&amp;quot;Total
        difference score: &amp;quot; + totalDifference);\n\n        // Part two, getting
        the similarity score\n        int totalSimilarityScore = 0;\n\n        int
        lastBIndex = 0; // Since both lists are sorted, we can avoid looping through
        the already scanned elements of listB with this\n        // For locationIDs
        that don&amp;#39;t appear in listB, we won&amp;#39;t update the last index.\n\n        foreach(int
        locationID in listA) {\n            int appearences = 0;\n            for
        (int i = lastBIndex; i &amp;lt; inputLines.Length; i++) {\n                if
        (locationID == listB[i]) {\n                    appearences++;\n                    lastBIndex
        = i;\n                } \n                else if (locationID &amp;lt; listB[i])
        {\n                     break; // We know we won&amp;#39;t be finding more
        instances of it - again, since the list is sorted\n                }\n            }\n            totalSimilarityScore
        += locationID * appearences;\n        }\n        Console.WriteLine(&amp;quot;Total
        similarity score: &amp;quot; + totalSimilarityScore);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv69w1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv69w1", "created":
        1733058789.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv6lu7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ChaiTRex",
        "can_mod_post": false, "created_utc": 1733058946.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_12hsah", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\n    static TIMING: bool = false;\n\n    fn main() {\n        static
        INPUT: &amp;str = include_str!(\"../../../day01.txt\");\n\n        let start
        = std::time::Instant::now();\n\n        let mut left = [0_u32; 1000];\n        let
        mut right = [0_u32; 1000];\n        for (i, (l, r)) in INPUT\n            .lines()\n            .map(|line|
        {\n                let (l, r) = line.split_once(\"   \").unwrap();\n                (l.parse::&lt;u32&gt;().unwrap(),
        r.parse::&lt;u32&gt;().unwrap())\n            })\n            .enumerate()\n        {\n            left[i]
        = l;\n            right[i] = r;\n        }\n        left.sort_unstable();\n        right.sort_unstable();\n\n        let
        part1 = left\n            .iter()\n            .copied()\n            .zip(right.iter().copied())\n            .map(|(left,
        right)| left.abs_diff(right))\n            .sum::&lt;u32&gt;();\n\n        if
        TIMING {\n            core::hint::black_box(part1);\n        } else {\n            println!(\"{part1}\");\n        }\n\n        let
        mut part2 = 0;\n\n        let mut left = left.into_iter().peekable();\n        let
        mut right = right.into_iter().peekable();\n\n        while let Some(l) = left.next()
        {\n            let mut left_product = l;\n            while left.peek().copied()
        == Some(l) {\n                left.next();\n                left_product +=
        l;\n            }\n\n            while right.peek().copied().map_or(false,
        |r| r &lt; l) {\n                right.next();\n            }\n\n            while
        right.peek().copied().map_or(false, |r| r == l) {\n                right.next();\n                part2
        += left_product;\n            }\n        }\n\n        if TIMING {\n            core::hint::black_box(part2);\n            let
        end = std::time::Instant::now();\n            println!(\"{:?}\", end - start);\n        }
        else {\n            println!(\"{part2}\");\n        }\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;static
        TIMING: bool = false;\n\nfn main() {\n    static INPUT: &amp;amp;str = include_str!(&amp;quot;../../../day01.txt&amp;quot;);\n\n    let
        start = std::time::Instant::now();\n\n    let mut left = [0_u32; 1000];\n    let
        mut right = [0_u32; 1000];\n    for (i, (l, r)) in INPUT\n        .lines()\n        .map(|line|
        {\n            let (l, r) = line.split_once(&amp;quot;   &amp;quot;).unwrap();\n            (l.parse::&amp;lt;u32&amp;gt;().unwrap(),
        r.parse::&amp;lt;u32&amp;gt;().unwrap())\n        })\n        .enumerate()\n    {\n        left[i]
        = l;\n        right[i] = r;\n    }\n    left.sort_unstable();\n    right.sort_unstable();\n\n    let
        part1 = left\n        .iter()\n        .copied()\n        .zip(right.iter().copied())\n        .map(|(left,
        right)| left.abs_diff(right))\n        .sum::&amp;lt;u32&amp;gt;();\n\n    if
        TIMING {\n        core::hint::black_box(part1);\n    } else {\n        println!(&amp;quot;{part1}&amp;quot;);\n    }\n\n    let
        mut part2 = 0;\n\n    let mut left = left.into_iter().peekable();\n    let
        mut right = right.into_iter().peekable();\n\n    while let Some(l) = left.next()
        {\n        let mut left_product = l;\n        while left.peek().copied() ==
        Some(l) {\n            left.next();\n            left_product += l;\n        }\n\n        while
        right.peek().copied().map_or(false, |r| r &amp;lt; l) {\n            right.next();\n        }\n\n        while
        right.peek().copied().map_or(false, |r| r == l) {\n            right.next();\n            part2
        += left_product;\n        }\n    }\n\n    if TIMING {\n        core::hint::black_box(part2);\n        let
        end = std::time::Instant::now();\n        println!(&amp;quot;{:?}&amp;quot;,
        end - start);\n    } else {\n        println!(&amp;quot;{part2}&amp;quot;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv6lu7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv6lu7", "created":
        1733058946.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv77ab",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "----Miguel----",
        "can_mod_post": false, "created_utc": 1733059226.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_5kxfz1y5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Kotlin\\]\n\n    import kotlin.math.abs\n    \n    fun main()
        {\n        val part1 = { input: List&lt;Pair&lt;Int, Int&gt;&gt; -&gt;  input.sumOf
        {(lv, rv) -&gt; abs(lv-rv)} }\n        val part2 = { input: List&lt;Pair&lt;Int,
        Int&gt;&gt; -&gt; input.sumOf { (lv, _) -&gt; lv * input.count { it.second
        == lv } }}\n        fun parseInput(input: List&lt;String&gt;): List&lt;Pair&lt;Int,
        Int&gt;&gt; {\n            val (l,r) = input\n                .map { line
        -&gt; line.split(\" \").filter { it.isNotEmpty() } }.map { Pair(it[0].toInt(),
        it[1].toInt()) }\n                .unzip()\n            return l.sorted().zip(r.sorted())\n        }\n    \n        val
        input = parseInput(readInput(\"Day01\"))\n        part1(input)\n        part2(input)\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        kotlin.math.abs\n\nfun main() {\n    val part1 = { input: List&amp;lt;Pair&amp;lt;Int,
        Int&amp;gt;&amp;gt; -&amp;gt;  input.sumOf {(lv, rv) -&amp;gt; abs(lv-rv)}
        }\n    val part2 = { input: List&amp;lt;Pair&amp;lt;Int, Int&amp;gt;&amp;gt;
        -&amp;gt; input.sumOf { (lv, _) -&amp;gt; lv * input.count { it.second ==
        lv } }}\n    fun parseInput(input: List&amp;lt;String&amp;gt;): List&amp;lt;Pair&amp;lt;Int,
        Int&amp;gt;&amp;gt; {\n        val (l,r) = input\n            .map { line
        -&amp;gt; line.split(&amp;quot; &amp;quot;).filter { it.isNotEmpty() } }.map
        { Pair(it[0].toInt(), it[1].toInt()) }\n            .unzip()\n        return
        l.sorted().zip(r.sorted())\n    }\n\n    val input = parseInput(readInput(&amp;quot;Day01&amp;quot;))\n    part1(input)\n    part2(input)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv77ab/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv77ab", "created":
        1733059226.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv7dn6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "pkusensei",
        "can_mod_post": false, "created_utc": 1733059307.0, "send_replies": false,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_wya1k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\nSetting things up took longer I ponder. [Code](https://github.com/pkusensei/adventofcode2024/blob/6b9db1fb288619ae5f454cde9ad7918d39e7430e/d01/src/lib.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Setting
        things up took longer I ponder. &lt;a href=\"https://github.com/pkusensei/adventofcode2024/blob/6b9db1fb288619ae5f454cde9ad7918d39e7430e/d01/src/lib.rs\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv7dn6/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv7dn6", "created":
        1733059307.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv83r3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Artraxes",
        "can_mod_post": false, "created_utc": 1733059641.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_7iof9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Kotlin]\n\n    private typealias IntPair = Pair&lt;Int, Int&gt;\n    private
        typealias IntListPair = Pair&lt;List&lt;Int&gt;, List&lt;Int&gt;&gt;\n    \n    private
        fun String.toIntPair(): IntPair {\n        val parts = split(\"   \")\n        return
        parts[0].toInt() to parts[1].toInt()\n    }\n    \n    private fun IntPair.difference():
        Int {\n        return abs(first - second)\n    }\n    \n    private fun &lt;T&gt;
        Iterable&lt;T&gt;.countOf(element: T): Int = count { other -&gt;\n        element
        == other\n    }\n    \n    private fun List&lt;Int&gt;.similarityScore(element:
        Int): Int {\n        return element * countOf(element)\n    }\n    \n    object
        Day1 : Puzzle&lt;IntListPair, Int&gt;(day = 1) {\n    \n        override fun
        parse(lines: Sequence&lt;String&gt;): IntListPair {\n            val pairs
        = lines.map(String::toIntPair).toList()\n            val left = pairs.map(IntPair::first).sorted()\n            val
        right = pairs.map(IntPair::second).sorted()\n            return left to right\n        }\n    \n        override
        fun solutions() = listOf(\n            ::part1,\n            ::part2,\n        )\n    \n        fun
        part1(input: IntListPair): Int {\n            val (left, right) = input\n    \n            return
        left.zip(right).sumOf(IntPair::difference)\n        }\n    \n        fun part2(input:
        IntListPair): Int {\n            val (left, right) = input\n    \n            return
        left.sumOf(right::similarityScore)\n        }\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private
        typealias IntPair = Pair&amp;lt;Int, Int&amp;gt;\nprivate typealias IntListPair
        = Pair&amp;lt;List&amp;lt;Int&amp;gt;, List&amp;lt;Int&amp;gt;&amp;gt;\n\nprivate
        fun String.toIntPair(): IntPair {\n    val parts = split(&amp;quot;   &amp;quot;)\n    return
        parts[0].toInt() to parts[1].toInt()\n}\n\nprivate fun IntPair.difference():
        Int {\n    return abs(first - second)\n}\n\nprivate fun &amp;lt;T&amp;gt;
        Iterable&amp;lt;T&amp;gt;.countOf(element: T): Int = count { other -&amp;gt;\n    element
        == other\n}\n\nprivate fun List&amp;lt;Int&amp;gt;.similarityScore(element:
        Int): Int {\n    return element * countOf(element)\n}\n\nobject Day1 : Puzzle&amp;lt;IntListPair,
        Int&amp;gt;(day = 1) {\n\n    override fun parse(lines: Sequence&amp;lt;String&amp;gt;):
        IntListPair {\n        val pairs = lines.map(String::toIntPair).toList()\n        val
        left = pairs.map(IntPair::first).sorted()\n        val right = pairs.map(IntPair::second).sorted()\n        return
        left to right\n    }\n\n    override fun solutions() = listOf(\n        ::part1,\n        ::part2,\n    )\n\n    fun
        part1(input: IntListPair): Int {\n        val (left, right) = input\n\n        return
        left.zip(right).sumOf(IntPair::difference)\n    }\n\n    fun part2(input:
        IntListPair): Int {\n        val (left, right) = input\n\n        return left.sumOf(right::similarityScore)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv83r3/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv83r3", "created":
        1733059641.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv85jl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ninevolt",
        "can_mod_post": false, "created_utc": 1733059664.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_qzfb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\nDoing it this year to refresh my C++ knowledge...\n\n[https://github.com/roadswitcher/AOC\\_2024/blob/main/Day\\_1/day1.cpp](https://github.com/roadswitcher/AOC_2024/blob/main/Day_1/day1.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;Doing
        it this year to refresh my C++ knowledge...&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/roadswitcher/AOC_2024/blob/main/Day_1/day1.cpp\"&gt;https://github.com/roadswitcher/AOC_2024/blob/main/Day_1/day1.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv85jl/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv85jl", "created":
        1733059664.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv9bgi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Pillippatty",
        "can_mod_post": false, "created_utc": 1733060184.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_9sl20", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n  \nDid this initially in base Python but using
        numpy was so satisfying. Part 1 took 0.37s over 1000 runs and part 2 took
        0.51s over 1000 runs.\n\n    def part_1_np(lv, rv):\n    \u00a0 \u00a0 return
        np.sum(np.abs(np.sort(lv) - np.sort(rv)))\n    \n    def part_2_np(lv, rv):\n        left
        = np.array(lv)\n        right = np.array(rv)\n        unique, counts = np.unique(right,
        return_counts=True)\n        freq_dict = dict(zip(unique, counts))  # Dict/hash
        map for fast lookup\n        return np.sum(left * np.array([freq_dict.get(num,
        0) for num in left]))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;p&gt;Did this initially in base Python but using
        numpy was so satisfying. Part 1 took 0.37s over 1000 runs and part 2 took
        0.51s over 1000 runs.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def part_1_np(lv,
        rv):\n\u00a0 \u00a0 return np.sum(np.abs(np.sort(lv) - np.sort(rv)))\n\ndef
        part_2_np(lv, rv):\n    left = np.array(lv)\n    right = np.array(rv)\n    unique,
        counts = np.unique(right, return_counts=True)\n    freq_dict = dict(zip(unique,
        counts))  # Dict/hash map for fast lookup\n    return np.sum(left * np.array([freq_dict.get(num,
        0) for num in left]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv9bgi/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzv9bgi", "created": 1733060184.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvb8mz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "SwampThingTom",
        "can_mod_post": false, "created_utc": 1733061020.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_zy2vn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Julia\\]\n\n[GitHub](https://github.com/SwampThingTom/AdventOfCode/blob/main/2024/01-HistorianHysteria/HistorianHysteria.jl)\n\nUsing
        this opportunity to try out Julia, a language I''ve never used before. I''m
        hoping it gets me the benefits of Python without the things I hate about Python.
        So far, so good. My main stumbling block today was that Julia''s compiler
        error messages can be a bit cryptic.\n\nThe solution is how I would have done
        it in Python. Not sure if there are some Julia-specific features I could have
        taken advantage of.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Julia]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/SwampThingTom/AdventOfCode/blob/main/2024/01-HistorianHysteria/HistorianHysteria.jl\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Using
        this opportunity to try out Julia, a language I&amp;#39;ve never used before.
        I&amp;#39;m hoping it gets me the benefits of Python without the things I
        hate about Python. So far, so good. My main stumbling block today was that
        Julia&amp;#39;s compiler error messages can be a bit cryptic.&lt;/p&gt;\n\n&lt;p&gt;The
        solution is how I would have done it in Python. Not sure if there are some
        Julia-specific features I could have taken advantage of.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvb8mz/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvb8mz", "created":
        1733061020.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733073412.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvbe25", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Immediate_Form7831",
        "can_mod_post": false, "created_utc": 1733061084.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_dqitnnu1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Erlang]\n\nSince the input was all 5-digit integers separated
        by 3 spaces, I could avoid time-consuming integer-parsing. Runtime ~280\u03bcs.\n\n    -module(day1).\n\n    -export([solve/1]).\n\n    solve(Input)
        -&gt;\n    {ok, Bin} = file:read_file(Input),\n    {List1, List2} = lists:unzip(parse(Bin,
        [])),\n\n    P1 =\n        lists:foldl(fun({A, B}, Acc) -&gt;\n                        abs(A
        - B) + Acc\n                    end, 0, lists:zip(lists:sort(List1), lists:sort(List2))),\n\n    FreqTable
        = lists:foldl(\n                    fun(N, Acc) -&gt;\n                        maps:update_with(N,
        fun(Old) -&gt; Old + 1 end, 1, Acc)\n                    end, #{}, List2),\n\n    P2
        = lists:foldl(fun(N, Acc) -&gt;\n                    N * maps:get(N, FreqTable,
        0) + Acc\n                    end, 0, List1),\n\n    {P1, P2}.\n\n    %% The
        numbers are 5-digit decimal numbers separated by three spaces,\n    %% so
        do some speedy parsing using binary matching.\n    parse(&lt;&lt;&gt;&gt;,
        Acc) -&gt; Acc;\n    parse(&lt;&lt;X1,X2,X3,X4,X5,32,32,32,Y1,Y2,Y3,Y4,Y5,$\\n,Rest/binary&gt;&gt;,
        Acc) -&gt;\n    parse(Rest, [{(X1 - $0) * 10000 +\n                    (X2
        - $0) * 1000 +\n                    (X3 - $0) * 100 +\n                    (X4
        - $0) * 10 +\n                    (X5 - $0),\n                    (Y1 - $0)
        * 10000 +\n                    (Y2 - $0) * 1000 +\n                    (Y3
        - $0) * 100 +\n                    (Y4 - $0) * 10 +\n                    (Y5
        - $0)}|Acc]).\n\nEdit: squeezed some more performance by avoiding double parsing
        the input, down to 225\u03bcs.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Erlang]&lt;/p&gt;\n\n&lt;p&gt;Since the
        input was all 5-digit integers separated by 3 spaces, I could avoid time-consuming
        integer-parsing. Runtime ~280\u03bcs.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-module(day1).\n\n-export([solve/1]).\n\nsolve(Input)
        -&amp;gt;\n{ok, Bin} = file:read_file(Input),\n{List1, List2} = lists:unzip(parse(Bin,
        [])),\n\nP1 =\n    lists:foldl(fun({A, B}, Acc) -&amp;gt;\n                    abs(A
        - B) + Acc\n                end, 0, lists:zip(lists:sort(List1), lists:sort(List2))),\n\nFreqTable
        = lists:foldl(\n                fun(N, Acc) -&amp;gt;\n                    maps:update_with(N,
        fun(Old) -&amp;gt; Old + 1 end, 1, Acc)\n                end, #{}, List2),\n\nP2
        = lists:foldl(fun(N, Acc) -&amp;gt;\n                N * maps:get(N, FreqTable,
        0) + Acc\n                end, 0, List1),\n\n{P1, P2}.\n\n%% The numbers are
        5-digit decimal numbers separated by three spaces,\n%% so do some speedy parsing
        using binary matching.\nparse(&amp;lt;&amp;lt;&amp;gt;&amp;gt;, Acc) -&amp;gt;
        Acc;\nparse(&amp;lt;&amp;lt;X1,X2,X3,X4,X5,32,32,32,Y1,Y2,Y3,Y4,Y5,$\\n,Rest/binary&amp;gt;&amp;gt;,
        Acc) -&amp;gt;\nparse(Rest, [{(X1 - $0) * 10000 +\n                (X2 - $0)
        * 1000 +\n                (X3 - $0) * 100 +\n                (X4 - $0) * 10
        +\n                (X5 - $0),\n                (Y1 - $0) * 10000 +\n                (Y2
        - $0) * 1000 +\n                (Y3 - $0) * 100 +\n                (Y4 - $0)
        * 10 +\n                (Y5 - $0)}|Acc]).\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit:
        squeezed some more performance by avoiding double parsing the input, down
        to 225\u03bcs.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvbe25/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvbe25", "created":
        1733061084.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzvbe2n", "id": "lzvbe2n", "parent_id":
        "t1_lzvbe25", "depth": 1, "children": ["lzvbe2n"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733070555.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvehvx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Dagur",
        "can_mod_post": false, "created_utc": 1733062386.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1ooc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: JavaScript]\n\nIf you''re using a fairly recent browser or version
        of Node you can use Object.groupBy. Part 2 becomes quite trivial\n\n    const
        frequency = Object.groupBy(b, (val) =&gt; val);\n    return a.reduce(\n      (sum,
        val) =&gt; (sum += val * (frequency[val]?.length ?? 0)),  \n      0\n    );\n\n\nHere''s
        my full solution https://github.com/Dagur/AdventOfCode/blob/master/2024/1.js",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;If
        you&amp;#39;re using a fairly recent browser or version of Node you can use
        Object.groupBy. Part 2 becomes quite trivial&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        frequency = Object.groupBy(b, (val) =&amp;gt; val);\nreturn a.reduce(\n  (sum,
        val) =&amp;gt; (sum += val * (frequency[val]?.length ?? 0)),  \n  0\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&amp;#39;s
        my full solution &lt;a href=\"https://github.com/Dagur/AdventOfCode/blob/master/2024/1.js\"&gt;https://github.com/Dagur/AdventOfCode/blob/master/2024/1.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvehvx/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvehvx", "created":
        1733062386.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzvehwf", "id": "lzvehwf", "parent_id":
        "t1_lzvehvx", "depth": 1, "children": ["lzvehwf"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733091075.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvei7r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mothibault",
        "can_mod_post": false, "created_utc": 1733062389.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_166wor", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\nJust copy-paste the code in the browser''s
        dev console.  \n[https://github.com/yolocheezwhiz/adventofcode/blob/main/2024/day01.js](https://github.com/yolocheezwhiz/adventofcode/blob/main/2024/day01.js)\n\nThe
        only catch here is in part 1 where &gt;!the right-hand side value can be smaller
        than the left-hand side value!&lt; which is not the case in the example input.
        So we need to &gt;!calculate the absolute distance between the two values!&lt;.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;Just
        copy-paste the code in the browser&amp;#39;s dev console.&lt;br/&gt;\n&lt;a
        href=\"https://github.com/yolocheezwhiz/adventofcode/blob/main/2024/day01.js\"&gt;https://github.com/yolocheezwhiz/adventofcode/blob/main/2024/day01.js&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The
        only catch here is in part 1 where &lt;span class=\"md-spoiler-text\"&gt;the
        right-hand side value can be smaller than the left-hand side value&lt;/span&gt;
        which is not the case in the example input. So we need to &lt;span class=\"md-spoiler-text\"&gt;calculate
        the absolute distance between the two values&lt;/span&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvei7r/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvei7r", "created":
        1733062389.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzx85zq", "id": "lzx85zq", "parent_id":
        "t1_lzvei7r", "depth": 1, "children": ["lzx85zq"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvfewi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "-stab-",
        "can_mod_post": false, "created_utc": 1733062764.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_107kzkxijx",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Julia\\]\n\n    # Get file content\n    file
        = open(\"numbers.txt\", \"r\")\n    \n    content = split.(readlines(file))\n    get_sorted(n)
        = sort(parse.(Int, getindex.(content, n)))\n    A, B = get_sorted.([1,2])
        # get sorted integer vectors of both columns\n    \n    # Part 1: distance
        between lists\n    distance = sum(abs.(A - B))\n    println(\"Distance between
        lists: $(distance)\")\n\nFor the second part, I used the sorted vectors to
        easily reuse already counted numbers. Also, the counting can be done faster
        in sorted vectors, since not every number has to be checked. (could be improved
        further)\n\n    # Part 2: similarity score\n    function similarity_score(A,
        B)\n        score, a_previous, count_previous = 0, 0, 0\n        for a in
        A\n            if a == a_previous \n                count = count_previous\n            else
        \n                count = 0\n                for b in B\n                    if
        a == b\n                        count += 1\n                    elseif b &gt;
        a\n                        break \n                    end\n                end\n            end\n            \n            score
        += a * count\n            count_previous, a_previous = count, a\n        end\n        return
        score\n    end\n    \n    println(\"Similarity score: $(similarity_score(A,
        B))\")", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Julia]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Get file content\nfile = open(&amp;quot;numbers.txt&amp;quot;,
        &amp;quot;r&amp;quot;)\n\ncontent = split.(readlines(file))\nget_sorted(n)
        = sort(parse.(Int, getindex.(content, n)))\nA, B = get_sorted.([1,2]) # get
        sorted integer vectors of both columns\n\n# Part 1: distance between lists\ndistance
        = sum(abs.(A - B))\nprintln(&amp;quot;Distance between lists: $(distance)&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For
        the second part, I used the sorted vectors to easily reuse already counted
        numbers. Also, the counting can be done faster in sorted vectors, since not
        every number has to be checked. (could be improved further)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Part 2: similarity score\nfunction similarity_score(A, B)\n    score, a_previous,
        count_previous = 0, 0, 0\n    for a in A\n        if a == a_previous \n            count
        = count_previous\n        else \n            count = 0\n            for b
        in B\n                if a == b\n                    count += 1\n                elseif
        b &amp;gt; a\n                    break \n                end\n            end\n        end\n\n        score
        += a * count\n        count_previous, a_previous = count, a\n    end\n    return
        score\nend\n\nprintln(&amp;quot;Similarity score: $(similarity_score(A, B))&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvfewi/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvfewi", "created":
        1733062764.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvgzl2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "edbond",
        "can_mod_post": false, "created_utc": 1733063400.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_42qi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]  \n\n\nMy solutions here - [https://github.com/edbond/advent-of-code-2024](https://github.com/edbond/advent-of-code-2024)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]  &lt;/p&gt;\n\n&lt;p&gt;My
        solutions here - &lt;a href=\"https://github.com/edbond/advent-of-code-2024\"&gt;https://github.com/edbond/advent-of-code-2024&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvgzl2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvgzl2", "created":
        1733063400.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzvmkdp", "id": "lzvmkdp", "parent_id":
        "t1_lzvgzl2", "depth": 1, "children": ["lzvmkdp"]}}, {"kind": "more", "data":
        {"count": 318, "name": "t1_lzvkpuj", "id": "lzvkpuj", "parent_id": "t3_1h3vp6n",
        "depth": 0, "children": ["lzvkpuj", "lzvqw9h", "lzvlpzh", "lzvuxar", "lzvv2gw",
        "lzvo53h", "lzw0gx8", "lzvwrb4", "lzw0s5r", "lzwefd0", "lzwr1gt", "lzw6jj7",
        "lzwbpkj", "lzw0r7p", "lzwwfi2", "lzw1gq7", "lzwbgg6", "lzw747s", "lzw8s3t",
        "lzwpi7i", "lzx7z9q", "lzxiyqj", "lzx5ceh", "lzwfu9m", "lzw82qi", "lzwhlfw",
        "lzwhsbr", "lzw9xv7", "lzwih8i", "lzxjjz7", "lztwpd7", "lzy5ev5", "lzxd7g7",
        "lzx3r49", "lzz88li", "lzxvj9k", "lzxvf32", "lzxni8y", "lzwggfd", "lzxlypv",
        "lzufves", "lzy3w4z", "lzxr1ct", "lzyoxpn", "lzy1vi1", "lzx9tmj", "lzy3l4s",
        "lzwwa0j", "lzwlnw1", "lzx5fi8", "lzxb6wy", "lzxzre1", "lzyas3y", "lzwjr08",
        "lzyzbv8", "lzwqcgt", "lzwq5rw", "lzv76ku", "lzyxsyp", "lzw05v2", "lzyplnw",
        "lztx3fc", "lzvjwvq", "lzyitqc", "lzvl8xt", "lzyopak", "lzvljq9", "lzufzih",
        "lzyi596", "lzu6fxr", "lzxwxer", "lzvnk10", "lztxifk", "lzx663l", "lzymhbq",
        "lzuiprd", "lzv1dp2", "lzx4yw1", "lzvijc3", "lztv294", "lzuuqlz", "lzvbkq0",
        "lzz0m22", "lztyu01", "lzyahn2", "lzuywc7", "lzyegbz", "lzvwbmb", "lzybcds",
        "lzxcran", "lzulkpq", "lzv11tu", "lzydt95", "lzuztdp", "lzy0ubn", "lztx6do",
        "lzyip3j", "lzufdi1", "lzup0wo", "lzydegd", "lzv9vah", "lzw21qf", "lzxv1io",
        "lzy4wiu", "lzxnxu5", "lzxqfih", "lzuw204", "lzva6dl", "lzuksqn", "lzxped4",
        "lzudln3", "lzwh5rt", "lzuegf5", "lzufa75", "lzv6h6u", "lzu16p9", "lzxpqjn",
        "lzu257r", "lzuzoao", "lzuj683", "lzwve2u", "lzvny74", "lzv0jmg", "lzyu3xo",
        "lztzjk2", "lzuqymy", "lzudkem", "lzy50rj", "lzw590b", "lzxey3q", "lzwp0s1",
        "lzwtcbu", "lzx7rcg", "lzv1h7j", "lzudmaa", "lzue4xp", "lzx5ew6", "lzxbuz2",
        "lzumhc5", "lzuim0s", "lzu253p", "lzv3mfg", "lzwpqqx", "lzw0bbp", "lzw7wbc",
        "lztz227", "lzy1ie6", "lzwkspk", "lzvl48t", "lzv14mo", "lzup10n", "lzuo7jw",
        "lzv1l81", "lzww2ia", "lzwcpug", "lzu4jyf", "lztx0gs", "lztwqd9", "lzu0iw8",
        "lzwlzli", "lzurrr3", "lzxd4fq", "lzuduwc", "lzyoaka", "lztz5jj", "lzuiq49",
        "lzxc1gg", "lzwf2n3", "lzyioa0", "lzur90m"]}}], true]], [0, 12, "attr", "things"],
        [12, 13, "call", ["t1_lzu4arc"]], [13, 14, "attr", "focus"], [14, 15, "call",
        []], [0, 16, "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr",
        "filter"], [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"],
        [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:42 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:42 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=5iSezGwloewMccnJMd; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:42 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzvkpuj,lzvqw9h,lzvlpzh,lzvuxar,lzvv2gw,lzvo53h,lzw0gx8,lzvwrb4,lzw0s5r,lzwefd0,lzwr1gt,lzw6jj7,lzwbpkj,lzw0r7p,lzwwfi2,lzw1gq7,lzwbgg6,lzw747s,lzw8s3t,lzwpi7i,lzx7z9q,lzxiyqj,lzx5ceh,lzwfu9m,lzw82qi,lzwhlfw,lzwhsbr,lzw9xv7,lzwih8i,lzxjjz7,lztwpd7,lzy5ev5,lzxd7g7,lzx3r49,lzz88li,lzxvj9k,lzxvf32,lzxni8y,lzwggfd,lzxlypv,lzufves,lzy3w4z,lzxr1ct,lzyoxpn,lzy1vi1,lzx9tmj,lzy3l4s,lzwwa0j,lzwlnw1,lzx5fi8,lzxb6wy,lzxzre1,lzyas3y,lzwjr08,lzyzbv8,lzwqcgt,lzwq5rw,lzv76ku,lzyxsyp,lzw05v2,lzyplnw,lztx3fc,lzvjwvq,lzyitqc,lzvl8xt,lzyopak,lzvljq9,lzufzih,lzyi596,lzu6fxr,lzxwxer,lzvnk10,lztxifk,lzx663l,lzymhbq,lzuiprd,lzv1dp2,lzx4yw1,lzvijc3,lztv294,lzuuqlz,lzvbkq0,lzz0m22,lztyu01,lzyahn2,lzuywc7,lzyegbz,lzvwbmb,lzybcds,lzxcran,lzulkpq,lzv11tu,lzydt95,lzuztdp,lzy0ubn,lztx6do,lzyip3j,lzufdi1,lzup0wo,lzydegd,lzv9vah,lzw21qf,lzxv1io,lzy4wiu,lzxnxu5,lzxqfih,lzuw204,lzva6dl,lzuksqn,lzxped4,lzudln3,lzwh5rt,lzuegf5,lzufa75,lzv6h6u,lzu16p9,lzxpqjn,lzu257r,lzuzoao,lzuj683,lzwve2u,lzvny74,lzv0jmg,lzyu3xo,lztzjk2,lzuqymy,lzudkem,lzy50rj,lzw590b,lzxey3q,lzwp0s1,lzwtcbu,lzx7rcg,lzv1h7j,lzudmaa,lzue4xp,lzx5ew6,lzxbuz2,lzumhc5,lzuim0s,lzu253p,lzv3mfg,lzwpqqx,lzw0bbp,lzw7wbc,lztz227,lzy1ie6,lzwkspk,lzvl48t,lzv14mo,lzup10n,lzuo7jw,lzv1l81,lzww2ia,lzwcpug,lzu4jyf,lztx0gs,lztwqd9,lzu0iw8,lzwlzli,lzurrr3,lzxd4fq,lzuduwc,lzyoaka,lztz5jj,lzuiq49,lzxc1gg,lzwf2n3,lzyioa0,lzur90m
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '37375'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksempg005.2.1741471482998.Z0FBQUFBQm56TDc3R1JUaXJ3N004cHRoODQzMmdfQjRmamU0UmNRNWpYOWNOcEc5N3NuMEFzcTJoTE9RV1FxWkVlVVhheUVlQkdyNE5vWmFfMGlRckU0bHNqbFBnWk5XSGNNR05lMG5PLVlOVU1rT2Q5LU11Qk1RVmczN1pxSXo5ZFNnZTJfZkl0X2c;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:43
        GMT; secure, session_tracker=hlmcmhlnnnlhqhjjic.0.1741471483009.Z0FBQUFBQm56TDc3RWxpZklLVkJjbHlzbmV1em1aYlZFcXVIZHJPQ2tzRjhHRktmRnlDTkk2cUNJY3ZOSmRnUThxUWgzeldoellfcm1TRnZCeXFqOHQzSmJ1Tm9tOXVidFlwamVWaGtjamgxU1VfSW5kVmFZeU5uR2lMY3ItWFlOWXNIdmlVc0ZwOG4;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:43
        GMT; secure, edgebucket=DtMWmAkMDOhjPk1pQE; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '9'
      x-ratelimit-remaining:
      - '91.0'
      x-ratelimit-reset:
      - '316'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:43 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733094208.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvkpuj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "thedjotaku",
        "can_mod_post": false, "created_utc": 1733064856.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_d7b8t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nI didn''t expect today''s part 1 to be tricky.
        It''s only day 1!\n\n[https://github.com/djotaku/adventofcode/blob/1f13d1b233e66e2d95e975361495cc6bd9ca29f1/2024/Day\\_01/Python/day\\_01.py](https://github.com/djotaku/adventofcode/blob/1f13d1b233e66e2d95e975361495cc6bd9ca29f1/2024/Day_01/Python/day_01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;I
        didn&amp;#39;t expect today&amp;#39;s part 1 to be tricky. It&amp;#39;s only
        day 1!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/djotaku/adventofcode/blob/1f13d1b233e66e2d95e975361495cc6bd9ca29f1/2024/Day_01/Python/day_01.py\"&gt;https://github.com/djotaku/adventofcode/blob/1f13d1b233e66e2d95e975361495cc6bd9ca29f1/2024/Day_01/Python/day_01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvkpuj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvkpuj", "created":
        1733064856.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733074365.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvlpzh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "kerry_gold_butter",
        "can_mod_post": false, "created_utc": 1733065228.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_h3w9sdl57",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Python\\]\n\n Told myself I would do it in Rust
        this year so going converting it over now and hopefully can stick with Rust
        for the remainder.\n\n    from collections import Counter\n    \n    \n    def
        main() -&gt; None:\n        l1, l2 = read_input()\n        print(f\"Part 1:
        {compute_total_distance(l1, l2)}\")\n        print(f\"Part 2: {similarity_score(l1,
        l2)}\")\n    \n    \n    def compute_total_distance(left_list: list[int],
        right_list: list[int]) -&gt; int:\n        left_list.sort()\n        right_list.sort()\n        total
        = 0\n        for left, right in zip(left_list, right_list):\n            total
        += abs(left - right)\n        return total\n    \n    \n    def similarity_score(left_list:
        list[int], right_list: list[int]) -&gt; int:\n        counts = Counter(right_list)\n        def
        helper(n: int, counter=counts) -&gt; int:\n            return n * counter.get(n,
        0)\n        return sum(map(helper, left_list))\n    \n    \n    def read_input()
        -&gt; tuple[list[int], list[int]]:\n        left_list = []\n        right_list
        = []\n        with open(\"./input/day01.txt\") as file:\n            for line
        in file.readlines():\n                left, right = line.split()\n                left_list.append(int(left))\n                right_list.append(int(right))\n        return
        left_list, right_list\n    \n    if __name__ == \"__main__\":\n        main()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Told
        myself I would do it in Rust this year so going converting it over now and
        hopefully can stick with Rust for the remainder.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        collections import Counter\n\n\ndef main() -&amp;gt; None:\n    l1, l2 = read_input()\n    print(f&amp;quot;Part
        1: {compute_total_distance(l1, l2)}&amp;quot;)\n    print(f&amp;quot;Part
        2: {similarity_score(l1, l2)}&amp;quot;)\n\n\ndef compute_total_distance(left_list:
        list[int], right_list: list[int]) -&amp;gt; int:\n    left_list.sort()\n    right_list.sort()\n    total
        = 0\n    for left, right in zip(left_list, right_list):\n        total +=
        abs(left - right)\n    return total\n\n\ndef similarity_score(left_list: list[int],
        right_list: list[int]) -&amp;gt; int:\n    counts = Counter(right_list)\n    def
        helper(n: int, counter=counts) -&amp;gt; int:\n        return n * counter.get(n,
        0)\n    return sum(map(helper, left_list))\n\n\ndef read_input() -&amp;gt;
        tuple[list[int], list[int]]:\n    left_list = []\n    right_list = []\n    with
        open(&amp;quot;./input/day01.txt&amp;quot;) as file:\n        for line in
        file.readlines():\n            left, right = line.split()\n            left_list.append(int(left))\n            right_list.append(int(right))\n    return
        left_list, right_list\n\nif __name__ == &amp;quot;__main__&amp;quot;:\n    main()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvlpzh/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvlpzh", "created":
        1733065228.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzvlq09", "id": "lzvlq09", "parent_id":
        "t1_lzvlpzh", "depth": 1, "children": ["lzvlq09"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733066354.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvo53h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ZeroTerabytes",
        "can_mod_post": false, "created_utc": 1733066108.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_lgev5sqa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Go]\n\n    import (\n        \"adventOfCode/util\"\n        \"adventOfCode/util/conv\"\n        _
        \"embed\"\n        \"fmt\"\n        \"math\"\n        \"sort\"\n        \"strings\"\n    )\n    \n    \n    func
        parseInput(input string) [][]int {\n        lines := strings.Split(input,
        \"\\n\")\n        mtx := make([][]int, len(lines))\n        for i, ln := range
        lines {\n            parts := util.SplitSpace(ln)\n            mtx[i] = []int{\n                conv.ToInt(parts[0]),
        conv.ToInt(parts[1]),\n            }\n        }\n    \n        \n    // now
        the columns will be rows.\n        \n    // https://gist.github.com/tanaikech/5cb41424ff8be0fdf19e78d375b6adb8\n        \n    mtx
        = util.Transpose(mtx)\n        return mtx\n    }\n    \n    func part1(input
        string) string {\n        mtx := parseInput(input)\n        sort.Ints(mtx[0])\n        sort.Ints(mtx[1])\n        sum
        := 0\n        for i := range mtx[0] {\n            diff := mtx[0][i] - mtx[1][i]\n            absDiff
        := int(math.Abs(float64(diff)))\n    \n            \n    sum += absDiff\n        }\n        return
        conv.ToString(sum) \n    }\n    \n    func part2(input string) string {\n        mtx
        := parseInput(input)\n        appearances := make(map[int]int)\n        for
        _, v := range mtx[1] {\n            if _, ok := appearances[v]; !ok {\n                appearances[v]
        = 0\n            }\n            appearances[v]++\n        }\n    \n        simScore
        := 0\n        for _, v := range mtx[0] {\n            if apps, ok := appearances[v];
        ok {\n                simScore += v * apps\n            }\n        }\n        return
        conv.ToString(simScore)\n    }\n    \n    // you can find the util stuff on
        https://github.com/racecraftr/advent-of-code", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        (\n    &amp;quot;adventOfCode/util&amp;quot;\n    &amp;quot;adventOfCode/util/conv&amp;quot;\n    _
        &amp;quot;embed&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;math&amp;quot;\n    &amp;quot;sort&amp;quot;\n    &amp;quot;strings&amp;quot;\n)\n\n\nfunc
        parseInput(input string) [][]int {\n    lines := strings.Split(input, &amp;quot;\\n&amp;quot;)\n    mtx
        := make([][]int, len(lines))\n    for i, ln := range lines {\n        parts
        := util.SplitSpace(ln)\n        mtx[i] = []int{\n            conv.ToInt(parts[0]),
        conv.ToInt(parts[1]),\n        }\n    }\n\n\n// now the columns will be rows.\n\n//
        https://gist.github.com/tanaikech/5cb41424ff8be0fdf19e78d375b6adb8\n\nmtx
        = util.Transpose(mtx)\n    return mtx\n}\n\nfunc part1(input string) string
        {\n    mtx := parseInput(input)\n    sort.Ints(mtx[0])\n    sort.Ints(mtx[1])\n    sum
        := 0\n    for i := range mtx[0] {\n        diff := mtx[0][i] - mtx[1][i]\n        absDiff
        := int(math.Abs(float64(diff)))\n\n\nsum += absDiff\n    }\n    return conv.ToString(sum)
        \n}\n\nfunc part2(input string) string {\n    mtx := parseInput(input)\n    appearances
        := make(map[int]int)\n    for _, v := range mtx[1] {\n        if _, ok :=
        appearances[v]; !ok {\n            appearances[v] = 0\n        }\n        appearances[v]++\n    }\n\n    simScore
        := 0\n    for _, v := range mtx[0] {\n        if apps, ok := appearances[v];
        ok {\n            simScore += v * apps\n        }\n    }\n    return conv.ToString(simScore)\n}\n\n//
        you can find the util stuff on https://github.com/racecraftr/advent-of-code\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvo53h/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvo53h", "created":
        1733066108.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzvo54h", "id": "lzvo54h", "parent_id":
        "t1_lzvo53h", "depth": 1, "children": ["lzvo54h"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvqw9h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "TrueHooorse",
        "can_mod_post": false, "created_utc": 1733067076.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_cjh6dakc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Java\\]\n\n[https://pastebin.com/njZrcLGg](https://pastebin.com/njZrcLGg)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Java]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/njZrcLGg\"&gt;https://pastebin.com/njZrcLGg&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvqw9h/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvqw9h", "created":
        1733067076.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvuxar",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Acceptable_Hall_4809",
        "can_mod_post": false, "created_utc": 1733068452.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_19bqkxjdii",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: JavaScript\\]\n\n    const fs = require(''fs'').promises;\n    \n    let
        arr = [];\n    \n    const getData = async() =&gt; {\n        const data =
        await fs.readFile(''./day_1/input.txt'', {encoding: ''utf-8''})\n        arr
        = data.split(\"\\n\").reduce((acc, c) =&gt; {\n            const [l, r] =
        c.split(''   '');\n            acc.left.push(Number(l));\n            acc.right.push(Number(r));\n            return
        acc;\n        }, {left: [], right: []})\n    }\n    \n    (async() =&gt; {\n        await
        getData();\n        //partOne();\n        partTwo();\n    })()\n    \n    \n    function
        partOne() {\n        const sortedLeft = arr.left.sort();\n        const sortedRight
        = arr.right.sort();\n    \n        let sum = 0;\n        let i = 0;\n        while
        (i &lt; sortedLeft.length) {\n            sum += Math.abs(sortedLeft[i] -
        sortedRight[i])\n            i += 1;\n        }\n        console.log(sum)\n    }\n    \n    \n    function
        partTwo() {\n        let sum = 0;\n        let i = 0;\n    \n        while
        (i &lt; arr.left.length) {\n            let x = 0;\n            let occurs
        = 0;\n    \n            const leftVal = arr.left[i];    \n            while(x
        &lt; arr.right.length) {\n                if (arr.right[x] == leftVal) occurs
        += 1;\n                x += 1;\n            }\n            sum += leftVal
        * occurs;\n            i += 1;\n        }\n        console.log(sum)\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        fs = require(&amp;#39;fs&amp;#39;).promises;\n\nlet arr = [];\n\nconst getData
        = async() =&amp;gt; {\n    const data = await fs.readFile(&amp;#39;./day_1/input.txt&amp;#39;,
        {encoding: &amp;#39;utf-8&amp;#39;})\n    arr = data.split(&amp;quot;\\n&amp;quot;).reduce((acc,
        c) =&amp;gt; {\n        const [l, r] = c.split(&amp;#39;   &amp;#39;);\n        acc.left.push(Number(l));\n        acc.right.push(Number(r));\n        return
        acc;\n    }, {left: [], right: []})\n}\n\n(async() =&amp;gt; {\n    await
        getData();\n    //partOne();\n    partTwo();\n})()\n\n\nfunction partOne()
        {\n    const sortedLeft = arr.left.sort();\n    const sortedRight = arr.right.sort();\n\n    let
        sum = 0;\n    let i = 0;\n    while (i &amp;lt; sortedLeft.length) {\n        sum
        += Math.abs(sortedLeft[i] - sortedRight[i])\n        i += 1;\n    }\n    console.log(sum)\n}\n\n\nfunction
        partTwo() {\n    let sum = 0;\n    let i = 0;\n\n    while (i &amp;lt; arr.left.length)
        {\n        let x = 0;\n        let occurs = 0;\n\n        const leftVal =
        arr.left[i];    \n        while(x &amp;lt; arr.right.length) {\n            if
        (arr.right[x] == leftVal) occurs += 1;\n            x += 1;\n        }\n        sum
        += leftVal * occurs;\n        i += 1;\n    }\n    console.log(sum)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvuxar/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvuxar", "created":
        1733068452.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvv2gw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "No-Calligrapher6269",
        "can_mod_post": false, "created_utc": 1733068502.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_hnpa1xa1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: R/RLang]\n\n    #Part 1\n    df &lt;- read.delim(\"input.txt\",
        header = FALSE)\n    df &lt;- separate(df, V1, c(\"X\", \"Y\"), convert =
        TRUE)\n    X &lt;- sort(as.integer(df$X))\n    Y &lt;- sort(as.integer(df$Y))\n    sum(abs(X
        - Y))\n    \n    #Part 2\n    df2 &lt;- as.data.frame(table(merge(\n      data.frame(X),\n      (data.frame(Y)),\n      by.x
        = \"X\",\n      by.y = \"Y\"\n    )))\n    sum(as.numeric(levels(df2$X)) *
        df2$Freq)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        R/RLang]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#Part 1\ndf &amp;lt;- read.delim(&amp;quot;input.txt&amp;quot;,
        header = FALSE)\ndf &amp;lt;- separate(df, V1, c(&amp;quot;X&amp;quot;, &amp;quot;Y&amp;quot;),
        convert = TRUE)\nX &amp;lt;- sort(as.integer(df$X))\nY &amp;lt;- sort(as.integer(df$Y))\nsum(abs(X
        - Y))\n\n#Part 2\ndf2 &amp;lt;- as.data.frame(table(merge(\n  data.frame(X),\n  (data.frame(Y)),\n  by.x
        = &amp;quot;X&amp;quot;,\n  by.y = &amp;quot;Y&amp;quot;\n)))\nsum(as.numeric(levels(df2$X))
        * df2$Freq)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvv2gw/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvv2gw", "created":
        1733068502.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvwrb4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "CnegAsuy",
        "can_mod_post": false, "created_utc": 1733069077.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_guaz4hqh8",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Rust\\]  \n[https://github.com/CnegAsuy/adventofcode/tree/main/day1](https://github.com/CnegAsuy/adventofcode/tree/main/day1)\n\nI
        did this on bus.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;br/&gt;\n&lt;a href=\"https://github.com/CnegAsuy/adventofcode/tree/main/day1\"&gt;https://github.com/CnegAsuy/adventofcode/tree/main/day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        did this on bus.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvwrb4/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvwrb4", "created":
        1733069077.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwh4k6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "sergiosgc",
        "can_mod_post": false, "created_utc": 1733075527.0, "send_replies": true,
        "parent_id": "t1_lzvwrb4", "score": 2, "author_fullname": "t2_adshw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please don''t publish real inputs. Eric Wastl asked for them not to be published.
        If you want to keep the input in your repo, do like I did and encrypt it.
        Have a look at my repo for inspiration: https://github.com/sergiosgc/AdventOfCode/tree/master/2024/day01",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please don&amp;#39;t
        publish real inputs. Eric Wastl asked for them not to be published. If you
        want to keep the input in your repo, do like I did and encrypt it. Have a
        look at my repo for inspiration: &lt;a href=\"https://github.com/sergiosgc/AdventOfCode/tree/master/2024/day01\"&gt;https://github.com/sergiosgc/AdventOfCode/tree/master/2024/day01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwh4k6/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwh4k6", "created":
        1733075527.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_lzx6924", "id": "lzx6924", "parent_id":
        "t1_lzvwrb4", "depth": 1, "children": ["lzx6924"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw0gx8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "kyle-dickeyy",
        "can_mod_post": false, "created_utc": 1733070297.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_3erenfiu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Go\\]\n\n[Day 1 code](https://github.com/dickeyy/adventofcode/blob/main/2024/day-1/main.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/dickeyy/adventofcode/blob/main/2024/day-1/main.go\"&gt;Day
        1 code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw0gx8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw0gx8", "created":
        1733070297.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733071019.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzw0r7p", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "IngenuityDry",
        "can_mod_post": false, "created_utc": 1733070391.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_5kj0u5gk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: javascript\\]\n\n    const response = await fetch(''https://adventofcode.com/2024/day/1/input'')\n    const
        raw = await response.text();\n    const pairs = raw.split(''\\n'').map(row
        =&gt; row.split(''   ''))\n    \n    leftRowSorted = pairs.map(row =&gt; row[0]).filter(Boolean).sort();\n    rightRowSorted
        = pairs.map(row =&gt; row[1]).filter(Boolean).sort();\n    \n    // part one\n    let
        distanceSum = 0;\n    \n    leftRowSorted.forEach((left, index)=&gt;{\n        let
        right = rightRowSorted[index];\n        let distance = Math.abs(left - right);\n        distanceSum
        += distance;\n    });\n    \n    console.log(distanceSum)\n    \n    // part
        2\n    let simularities = 0;\n    \n    leftRowSorted.forEach((left, index)=&gt;{    \n      let
        res = rightRowSorted.filter(x =&gt; left === x);\n      if(res.length) {\n          simularities
        += (left * res.length)\n      }\n    });\n    \n    console.log(simularities)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: javascript]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        response = await fetch(&amp;#39;https://adventofcode.com/2024/day/1/input&amp;#39;)\nconst
        raw = await response.text();\nconst pairs = raw.split(&amp;#39;\\n&amp;#39;).map(row
        =&amp;gt; row.split(&amp;#39;   &amp;#39;))\n\nleftRowSorted = pairs.map(row
        =&amp;gt; row[0]).filter(Boolean).sort();\nrightRowSorted = pairs.map(row
        =&amp;gt; row[1]).filter(Boolean).sort();\n\n// part one\nlet distanceSum
        = 0;\n\nleftRowSorted.forEach((left, index)=&amp;gt;{\n    let right = rightRowSorted[index];\n    let
        distance = Math.abs(left - right);\n    distanceSum += distance;\n});\n\nconsole.log(distanceSum)\n\n//
        part 2\nlet simularities = 0;\n\nleftRowSorted.forEach((left, index)=&amp;gt;{    \n  let
        res = rightRowSorted.filter(x =&amp;gt; left === x);\n  if(res.length) {\n      simularities
        += (left * res.length)\n  }\n});\n\nconsole.log(simularities)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw0r7p/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw0r7p", "created":
        1733070391.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzw0r87", "id": "lzw0r87", "parent_id":
        "t1_lzw0r7p", "depth": 1, "children": ["lzw0r87"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw0s5r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "jlogan54",
        "can_mod_post": false, "created_utc": 1733070400.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1e4h3fa82n",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Python\\]\n\n[Day 1 solution](https://github.com/LoganJaySwenson/advent-of-code-2024/blob/main/01/01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/LoganJaySwenson/advent-of-code-2024/blob/main/01/01.py\"&gt;Day
        1 solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw0s5r/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw0s5r", "created":
        1733070400.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzx5y93", "id": "lzx5y93", "parent_id":
        "t1_lzw0s5r", "depth": 1, "children": ["lzx5y93", "lzw4n54"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw1gq7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mmersic",
        "can_mod_post": false, "created_utc": 1733070623.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_nckjxm8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Java\\]\n\n[Day 1 solution](https://github.com/mmersic/advent2024/blob/main/src/main/org/mersic/Day01.java)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Java]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mmersic/advent2024/blob/main/src/main/org/mersic/Day01.java\"&gt;Day
        1 solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw1gq7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw1gq7", "created":
        1733070623.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw6jj7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "wasi0013",
        "can_mod_post": false, "created_utc": 1733072250.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_imfe0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Elixir\\]\n\n    defmodule Aoc.Y2024.Day01 do\n      def solve_part1(data)
        do\n        data\n        |&gt; rotate90()\n        |&gt; Enum.map(&amp;Enum.sort/1)\n        |&gt;
        Enum.zip()\n        |&gt; Enum.map(&amp;Tuple.to_list/1)\n        |&gt; Enum.map(fn
        [a, b] -&gt; abs(a - b) end)\n        |&gt; Enum.sum()\n      end\n    \n      def
        solve_part2(data) do\n        data\n        |&gt; rotate90()\n        |&gt;
        then(fn [list1, list2] -&gt; Enum.map(list1, fn a -&gt; a * Enum.count(list2,
        &amp;(a == &amp;1)) end) |&gt; Enum.sum() end)\n      end\n    \n      def
        get_input() do\n        get_string_input(\"2024\", \"01\")\n        |&gt;
        String.split(\"\\n\")\n        |&gt; Enum.map(fn string -&gt; string |&gt;
        String.split(\"   \") |&gt; Enum.map(&amp;String.to_integer/1) end)\n      end\n      \n      def
        rotate90(matrix), do: matrix |&gt; Enum.zip() |&gt; Enum.reverse() |&gt; Enum.map(&amp;Tuple.to_list/1)\n      def
        get_string_input(year, day),\n        do: File.read!(\"priv/resources/#{year}/day#{day}.txt\")
        |&gt; String.trim()\n    end", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Elixir]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule Aoc.Y2024.Day01 do\n  def
        solve_part1(data) do\n    data\n    |&amp;gt; rotate90()\n    |&amp;gt; Enum.map(&amp;amp;Enum.sort/1)\n    |&amp;gt;
        Enum.zip()\n    |&amp;gt; Enum.map(&amp;amp;Tuple.to_list/1)\n    |&amp;gt;
        Enum.map(fn [a, b] -&amp;gt; abs(a - b) end)\n    |&amp;gt; Enum.sum()\n  end\n\n  def
        solve_part2(data) do\n    data\n    |&amp;gt; rotate90()\n    |&amp;gt; then(fn
        [list1, list2] -&amp;gt; Enum.map(list1, fn a -&amp;gt; a * Enum.count(list2,
        &amp;amp;(a == &amp;amp;1)) end) |&amp;gt; Enum.sum() end)\n  end\n\n  def
        get_input() do\n    get_string_input(&amp;quot;2024&amp;quot;, &amp;quot;01&amp;quot;)\n    |&amp;gt;
        String.split(&amp;quot;\\n&amp;quot;)\n    |&amp;gt; Enum.map(fn string -&amp;gt;
        string |&amp;gt; String.split(&amp;quot;   &amp;quot;) |&amp;gt; Enum.map(&amp;amp;String.to_integer/1)
        end)\n  end\n\n  def rotate90(matrix), do: matrix |&amp;gt; Enum.zip() |&amp;gt;
        Enum.reverse() |&amp;gt; Enum.map(&amp;amp;Tuple.to_list/1)\n  def get_string_input(year,
        day),\n    do: File.read!(&amp;quot;priv/resources/#{year}/day#{day}.txt&amp;quot;)
        |&amp;gt; String.trim()\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw6jj7/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzw6jj7", "created": 1733072250.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzw6jk6", "id": "lzw6jk6", "parent_id":
        "t1_lzw6jj7", "depth": 1, "children": ["lzw6jk6"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw747s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "_Phoenix_75",
        "can_mod_post": false, "created_utc": 1733072426.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_16eesiovnv",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "[LANGUAGE: Python 3] \nhttps://github.com/Phoenix7557/adven-of-code-2024/tree/main/day1\n\nPart
        1 + Part 2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python 3] \n&lt;a href=\"https://github.com/Phoenix7557/adven-of-code-2024/tree/main/day1\"&gt;https://github.com/Phoenix7557/adven-of-code-2024/tree/main/day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1 + Part 2&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw747s/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw747s", "created":
        1733072426.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw9pb8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "whatyoucallmetoday",
        "can_mod_post": false, "created_utc": 1733073249.0, "send_replies": true,
        "parent_id": "t1_lzw747s", "score": 2, "author_fullname": "t2_rqo8u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You shouldn\u2019t publish the input.txt contents as there are only a few
        different inputs available to everyone. I have them listed in my .gitignore",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You shouldn\u2019t publish
        the input.txt contents as there are only a few different inputs available
        to everyone. I have them listed in my .gitignore&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw9pb8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw9pb8", "created":
        1733073249.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwc09u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "_Phoenix_75",
        "can_mod_post": false, "created_utc": 1733073963.0, "send_replies": true,
        "parent_id": "t1_lzw9pb8", "score": 2, "author_fullname": "t2_16eesiovnv",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "Oh, sorry! I\u2019ll remove it instantly. \nIt\u2019s my first
        time participating, thanks for the advice!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Oh, sorry! I\u2019ll remove it instantly. \nIt\u2019s
        my first time participating, thanks for the advice!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwc09u/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwc09u", "created":
        1733073963.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx5646",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733082831.0, "send_replies": true,
        "parent_id": "t1_lzwc09u", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "/u/whatyoucallmetoday is correct, [do not share your puzzle input](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        which also means [do not commit puzzle inputs to your repo](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        without a `.gitignore` or the like.  [Do not share the puzzle text](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts)
        either.\n\nI see you''ve scrubbed all puzzle text and puzzle input files from
        your repo, so thanks :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"/u/whatyoucallmetoday\"&gt;/u/whatyoucallmetoday&lt;/a&gt; is correct,
        &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not share your puzzle input&lt;/a&gt; which also means &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not commit puzzle inputs to your repo&lt;/a&gt; without a &lt;code&gt;.gitignore&lt;/code&gt;
        or the like.  &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts\"&gt;Do
        not share the puzzle text&lt;/a&gt; either.&lt;/p&gt;\n\n&lt;p&gt;I see you&amp;#39;ve
        scrubbed all puzzle text and puzzle input files from your repo, so thanks
        :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx5646/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx5646", "created":
        1733082831.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzw82qi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Cheswick32",
        "can_mod_post": false, "created_utc": 1733072730.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_6kjqa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Ruby]\n\nThe first day always feels like a test of \"So how much
        thought we putting into running this thing?\". \n\nI was going to use [aoc_rb](https://github.com/pacso/aoc_rb)
        but I can''t bring myself to write spec tests this early in the month\n\n\n[Paste](https://topaz.github.io/paste/#XQAAAQA1BQAAAAAAAAA5GUqKNoFH6SMqgz5/p0SQOJLmsq1ZB0a/1piD4YtOTl2yryMSPb8yt+HzPgs17kMK3qa5Pt4XB0i+P157YAYOjqPnnUayVBdNcP2YpHcA4r3Y+MR8fkwdqbk0WawDRDBeQKH/SQvLD4n5TgrbeiQ/D4eTIWxM62dZwygva6quKx2/9Uyy7AZBhywh5jp5z5L03KUMCcbXBCpAj7raYZaeBrU/ABVkIUOL4vo5b26uNY8YphcqbCWnmSktj3KUqxUFxqRzk1tnEawkklHFBTy9qP7wRZSC7ZAPqxZpAvJgqUWsz3nPJSNOmGSUj8xIst85XDJv1YojTeG6YIGzJCIsFTvmpE++CfYzEmsCjhct2EAixl3SPSOSJmpjNa1T7ojdJeZLsdzM19XbycmPJ1ndMUeJMsA0KZu7dZZZuW1M+jC4icyESt5m7D4lUJdHy4SPrzgI9C1SUxkM13YNcnGA8UPyqOXtespj1ltgM1AnHpKbkuEoETy/LRGGPuEH4K5dfGGFlb9jRS9NPe1ix5HeQdoEwYHbPFU/mH/odgPP6//lQ3jvSbqkxxTaKRvMvmEWWGmmBUSbmwvpTjtlnPr7YEar767MJoAONUBzHxY67Nu4zXlVVfnzfKQHT/CXvARSNBZJf8EkJStTB507isAwz9wFlZUxZ9uPXyS7BG6asaHjPmVHW+wmSTgnPFkGiZXeusyi44je3g0cEEZXA5kbKyBwN7Nip79YTaNDAcPrqUUeJzPY1L/gdZhIKi3vS6QK8+V2rx0g6xcR6uEO+82kf01Aw8hO3CdDAwr9pwqNBYgBGZYuoaraAD6DppkjnyOH/mo9RA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ruby]&lt;/p&gt;\n\n&lt;p&gt;The
        first day always feels like a test of &amp;quot;So how much thought we putting
        into running this thing?&amp;quot;. &lt;/p&gt;\n\n&lt;p&gt;I was going to
        use &lt;a href=\"https://github.com/pacso/aoc_rb\"&gt;aoc_rb&lt;/a&gt; but
        I can&amp;#39;t bring myself to write spec tests this early in the month&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQA1BQAAAAAAAAA5GUqKNoFH6SMqgz5/p0SQOJLmsq1ZB0a/1piD4YtOTl2yryMSPb8yt+HzPgs17kMK3qa5Pt4XB0i+P157YAYOjqPnnUayVBdNcP2YpHcA4r3Y+MR8fkwdqbk0WawDRDBeQKH/SQvLD4n5TgrbeiQ/D4eTIWxM62dZwygva6quKx2/9Uyy7AZBhywh5jp5z5L03KUMCcbXBCpAj7raYZaeBrU/ABVkIUOL4vo5b26uNY8YphcqbCWnmSktj3KUqxUFxqRzk1tnEawkklHFBTy9qP7wRZSC7ZAPqxZpAvJgqUWsz3nPJSNOmGSUj8xIst85XDJv1YojTeG6YIGzJCIsFTvmpE++CfYzEmsCjhct2EAixl3SPSOSJmpjNa1T7ojdJeZLsdzM19XbycmPJ1ndMUeJMsA0KZu7dZZZuW1M+jC4icyESt5m7D4lUJdHy4SPrzgI9C1SUxkM13YNcnGA8UPyqOXtespj1ltgM1AnHpKbkuEoETy/LRGGPuEH4K5dfGGFlb9jRS9NPe1ix5HeQdoEwYHbPFU/mH/odgPP6//lQ3jvSbqkxxTaKRvMvmEWWGmmBUSbmwvpTjtlnPr7YEar767MJoAONUBzHxY67Nu4zXlVVfnzfKQHT/CXvARSNBZJf8EkJStTB507isAwz9wFlZUxZ9uPXyS7BG6asaHjPmVHW+wmSTgnPFkGiZXeusyi44je3g0cEEZXA5kbKyBwN7Nip79YTaNDAcPrqUUeJzPY1L/gdZhIKi3vS6QK8+V2rx0g6xcR6uEO+82kf01Aw8hO3CdDAwr9pwqNBYgBGZYuoaraAD6DppkjnyOH/mo9RA==\"&gt;Paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw82qi/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw82qi", "created":
        1733072730.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw8s3t",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "chai_biscut",
        "can_mod_post": false, "created_utc": 1733072957.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1e4nozxu8v",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: GO\\]  \n[Solution](https://bin.bloerg.net/N3uRza.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: GO]&lt;br/&gt;\n&lt;a
        href=\"https://bin.bloerg.net/N3uRza.go\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw8s3t/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw8s3t", "created":
        1733072957.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzw9xv7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "icub3d",
        "can_mod_post": false, "created_utc": 1733073324.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_8v1oz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: rust\\]\n\nSolution: [https://gist.github.com/icub3d/c00cdef9c03a118758ddbadfb37e4e41](https://gist.github.com/icub3d/c00cdef9c03a118758ddbadfb37e4e41)\n\nLive
        Solve: [https://youtu.be/SGx2DKNjm\\_U](https://youtu.be/SGx2DKNjm_U)\n\n  \nDefinitely
        was a bit rusty. It was good to get back into it though.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: rust]&lt;/p&gt;\n\n&lt;p&gt;Solution:
        &lt;a href=\"https://gist.github.com/icub3d/c00cdef9c03a118758ddbadfb37e4e41\"&gt;https://gist.github.com/icub3d/c00cdef9c03a118758ddbadfb37e4e41&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Live
        Solve: &lt;a href=\"https://youtu.be/SGx2DKNjm_U\"&gt;https://youtu.be/SGx2DKNjm_U&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Definitely
        was a bit rusty. It was good to get back into it though.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw9xv7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw9xv7", "created":
        1733073324.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwkjlj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Chasar1",
        "can_mod_post": false, "created_utc": 1733076580.0, "send_replies": true,
        "parent_id": "t1_lzw9xv7", "score": 2, "author_fullname": "t2_mtyel", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "As someone who is new to Rust, I''m really impressed how small the code is
        compared to mine. Yours was faster than mine even though I preallocated my
        vectors and performed sort in two threads.\n\n  \nOn further research, multithreading
        only seems to make it slower on this data size.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;As someone who is new to Rust, I&amp;#39;m really
        impressed how small the code is compared to mine. Yours was faster than mine
        even though I preallocated my vectors and performed sort in two threads.&lt;/p&gt;\n\n&lt;p&gt;On
        further research, multithreading only seems to make it slower on this data
        size.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwkjlj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwkjlj", "created":
        1733076580.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzzgi6h", "id": "lzzgi6h", "parent_id":
        "t1_lzwkjlj", "depth": 2, "children": ["lzzgi6h"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwbgg6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "gwpmad",
        "can_mod_post": false, "created_utc": 1733073791.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_h9wu87rg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nSolution that does part 2 in a single pass over
        the input, using arithmetic: [https://github.com/gwpmad/advent-of-code-2024/blob/main/day\\_1/main.py](https://github.com/gwpmad/advent-of-code-2024/blob/main/day_1/main.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Solution
        that does part 2 in a single pass over the input, using arithmetic: &lt;a
        href=\"https://github.com/gwpmad/advent-of-code-2024/blob/main/day_1/main.py\"&gt;https://github.com/gwpmad/advent-of-code-2024/blob/main/day_1/main.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwbgg6/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwbgg6", "created":
        1733073791.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwbpkj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "aazz190",
        "can_mod_post": false, "created_utc": 1733073870.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_12z2ororhc",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Python\\] - badly written\n\n    # https://adventofcode.com/2024/day/1
        \n    \n    def solution1(\n    input\n    : \n    str\n    ) -&gt; \n    int\n    :
        # \n    \u00a0 \u00a0 num1L = []\n    \u00a0 \u00a0 num2L = []\n    \u00a0
        \u00a0 inputL = input.splitlines() \n    \u00a0 \u00a0 \n    \u00a0 \u00a0
        for line in inputL: \n    \u00a0 \u00a0 \u00a0 \u00a0 linesP = line.split()
        \n    \u00a0 \u00a0 \u00a0 \u00a0 num1L.append(\n    int\n    (linesP[0]))\n    \u00a0
        \u00a0 \u00a0 \u00a0 num2L.append(\n    int\n    (linesP[1]))\n    \u00a0
        \u00a0 \n    \u00a0 \u00a0 num1L.sort()\n    \u00a0 \u00a0 num2L.sort()\n    \u00a0
        \u00a0 \n    \u00a0 \u00a0 totalDistance = 0\n    \u00a0 \u00a0 for i in range(len(num1L)):
        \u00a0\n    \u00a0 \u00a0 \u00a0 \u00a0 totalDistance += abs(num1L[i] - num2L[i])\n    \u00a0
        \u00a0 \n    \u00a0 \u00a0 return totalDistance\n    \n    def solution2(\n    input\n    :\n    str\n    )
        -&gt; \n    int\n    :\n    \u00a0 \u00a0 num1L = []\n    \u00a0 \u00a0 num2L
        = []\n    \u00a0 \u00a0 inputL = input.splitlines() \n    \u00a0 \u00a0 \n    \u00a0
        \u00a0 for line in inputL: \n    \u00a0 \u00a0 \u00a0 \u00a0 linesP = line.split()
        \n    \u00a0 \u00a0 \u00a0 \u00a0 num1L.append(\n    int\n    (linesP[0]))\n    \u00a0
        \u00a0 \u00a0 \u00a0 num2L.append(\n    int\n    (linesP[1])) \u00a0# copied
        from solution 1\n    \u00a0 \u00a0 num1L.sort()\n    \u00a0 \u00a0 num2L.sort()\n    \n    \u00a0
        \u00a0 similarity_score_totalL = []\n    \u00a0 \u00a0 for i in num2L:\n    \u00a0
        \u00a0 \u00a0 \u00a0 num_time_in_L1 = num1L.count(i)\n    \u00a0 \u00a0 \u00a0
        \u00a0 similarity_score = i * num_time_in_L1\n    \u00a0 \u00a0 \u00a0 \u00a0
        similarity_score_totalL.append(similarity_score)\n    \u00a0 \u00a0 \n    \u00a0
        \u00a0 return sum(similarity_score_totalL)\n    \n    \u00a0 \u00a0 \u00a0
        \u00a0 \n    \n    \u00a0 \u00a0 \n    \n    with open(\"1.txt\", \"r\") as
        file:\n    \u00a0 \u00a0 input_data = file.read()\n    \n    solution1_ans
        = solution1(input_data)\n    print(solution1_ans)\n    solution2_ans = solution2(input_data)\n    print(solution2_ans)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python] -
        badly written&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# https://adventofcode.com/2024/day/1
        \n\ndef solution1(\ninput\n: \nstr\n) -&amp;gt; \nint\n: # \n\u00a0 \u00a0
        num1L = []\n\u00a0 \u00a0 num2L = []\n\u00a0 \u00a0 inputL = input.splitlines()
        \n\u00a0 \u00a0 \n\u00a0 \u00a0 for line in inputL: \n\u00a0 \u00a0 \u00a0
        \u00a0 linesP = line.split() \n\u00a0 \u00a0 \u00a0 \u00a0 num1L.append(\nint\n(linesP[0]))\n\u00a0
        \u00a0 \u00a0 \u00a0 num2L.append(\nint\n(linesP[1]))\n\u00a0 \u00a0 \n\u00a0
        \u00a0 num1L.sort()\n\u00a0 \u00a0 num2L.sort()\n\u00a0 \u00a0 \n\u00a0 \u00a0
        totalDistance = 0\n\u00a0 \u00a0 for i in range(len(num1L)): \u00a0\n\u00a0
        \u00a0 \u00a0 \u00a0 totalDistance += abs(num1L[i] - num2L[i])\n\u00a0 \u00a0
        \n\u00a0 \u00a0 return totalDistance\n\ndef solution2(\ninput\n:\nstr\n) -&amp;gt;
        \nint\n:\n\u00a0 \u00a0 num1L = []\n\u00a0 \u00a0 num2L = []\n\u00a0 \u00a0
        inputL = input.splitlines() \n\u00a0 \u00a0 \n\u00a0 \u00a0 for line in inputL:
        \n\u00a0 \u00a0 \u00a0 \u00a0 linesP = line.split() \n\u00a0 \u00a0 \u00a0
        \u00a0 num1L.append(\nint\n(linesP[0]))\n\u00a0 \u00a0 \u00a0 \u00a0 num2L.append(\nint\n(linesP[1]))
        \u00a0# copied from solution 1\n\u00a0 \u00a0 num1L.sort()\n\u00a0 \u00a0
        num2L.sort()\n\n\u00a0 \u00a0 similarity_score_totalL = []\n\u00a0 \u00a0
        for i in num2L:\n\u00a0 \u00a0 \u00a0 \u00a0 num_time_in_L1 = num1L.count(i)\n\u00a0
        \u00a0 \u00a0 \u00a0 similarity_score = i * num_time_in_L1\n\u00a0 \u00a0
        \u00a0 \u00a0 similarity_score_totalL.append(similarity_score)\n\u00a0 \u00a0
        \n\u00a0 \u00a0 return sum(similarity_score_totalL)\n\n\u00a0 \u00a0 \u00a0
        \u00a0 \n\n\u00a0 \u00a0 \n\nwith open(&amp;quot;1.txt&amp;quot;, &amp;quot;r&amp;quot;)
        as file:\n\u00a0 \u00a0 input_data = file.read()\n\nsolution1_ans = solution1(input_data)\nprint(solution1_ans)\nsolution2_ans
        = solution2(input_data)\nprint(solution2_ans)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwbpkj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwbpkj", "created":
        1733073870.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwefd0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "NotTreeFiddy",
        "can_mod_post": false, "created_utc": 1733074710.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_dj58v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Elixir]\n\nI''m late to the party, as usual. Damned timezones.\nThis
        year I''m going to tackle with a small handful of languages, but primarily
        Elixir and Gleam. This is my first time trying this languages in earnest,
        so expect some terrible, inefficient and totally unidiomatic code!  \nHere''s
        day one:\n    \n    part_one =\n      File.read!(\"input.in\")\n      |&gt;
        String.split(\"\\n\", trim: true)\n      |&gt; Enum.map(fn line -&gt;\n        line\n        |&gt;
        String.split()\n        |&gt; Enum.map(&amp;String.to_integer/1)\n      end)\n      |&gt;
        Enum.reduce({[], []}, fn [first, second], {list1, list2} -&gt;\n        {[first
        | list1], [second | list2]}\n      end)\n      |&gt; then(fn {list1, list2}
        -&gt;\n        {Enum.sort(list1), Enum.sort(list2)}\n      end)\n      |&gt;
        then(fn {list1, list2} -&gt;\n        Enum.zip(list1, list2)\n        |&gt;
        Enum.map(fn {x, y} -&gt; abs(x - y) end)\n      end)\n      |&gt; Enum.sum()\n    \n    part_two
        =\n      File.read!(\"input.in\")\n      |&gt; String.split(\"\\n\", trim:
        true)\n      |&gt; Enum.map(fn line -&gt;\n        line\n        |&gt; String.split()\n        |&gt;
        Enum.map(&amp;String.to_integer/1)\n      end)\n      |&gt; Enum.reduce({[],
        []}, fn [first, second], {list1, list2} -&gt;\n        {[first | list1], [second
        | list2]}\n      end)\n      |&gt; then(fn {list1, list2} -&gt;\n        Enum.map(list1,
        fn line -&gt;\n          line * Enum.count(list2, fn x -&gt; x === line end)\n        end)\n        |&gt;
        Enum.sum()\n      end)\n    \n    IO.inspect(part_one)\n    IO.inspect(part_two)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Elixir]&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        late to the party, as usual. Damned timezones.\nThis year I&amp;#39;m going
        to tackle with a small handful of languages, but primarily Elixir and Gleam.
        This is my first time trying this languages in earnest, so expect some terrible,
        inefficient and totally unidiomatic code!&lt;br/&gt;\nHere&amp;#39;s day one:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part_one
        =\n  File.read!(&amp;quot;input.in&amp;quot;)\n  |&amp;gt; String.split(&amp;quot;\\n&amp;quot;,
        trim: true)\n  |&amp;gt; Enum.map(fn line -&amp;gt;\n    line\n    |&amp;gt;
        String.split()\n    |&amp;gt; Enum.map(&amp;amp;String.to_integer/1)\n  end)\n  |&amp;gt;
        Enum.reduce({[], []}, fn [first, second], {list1, list2} -&amp;gt;\n    {[first
        | list1], [second | list2]}\n  end)\n  |&amp;gt; then(fn {list1, list2} -&amp;gt;\n    {Enum.sort(list1),
        Enum.sort(list2)}\n  end)\n  |&amp;gt; then(fn {list1, list2} -&amp;gt;\n    Enum.zip(list1,
        list2)\n    |&amp;gt; Enum.map(fn {x, y} -&amp;gt; abs(x - y) end)\n  end)\n  |&amp;gt;
        Enum.sum()\n\npart_two =\n  File.read!(&amp;quot;input.in&amp;quot;)\n  |&amp;gt;
        String.split(&amp;quot;\\n&amp;quot;, trim: true)\n  |&amp;gt; Enum.map(fn
        line -&amp;gt;\n    line\n    |&amp;gt; String.split()\n    |&amp;gt; Enum.map(&amp;amp;String.to_integer/1)\n  end)\n  |&amp;gt;
        Enum.reduce({[], []}, fn [first, second], {list1, list2} -&amp;gt;\n    {[first
        | list1], [second | list2]}\n  end)\n  |&amp;gt; then(fn {list1, list2} -&amp;gt;\n    Enum.map(list1,
        fn line -&amp;gt;\n      line * Enum.count(list2, fn x -&amp;gt; x === line
        end)\n    end)\n    |&amp;gt; Enum.sum()\n  end)\n\nIO.inspect(part_one)\nIO.inspect(part_two)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwefd0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwefd0", "created":
        1733074710.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzweff5", "id": "lzweff5", "parent_id":
        "t1_lzwefd0", "depth": 1, "children": ["lzweff5"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwfu9m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "zaniwoop",
        "can_mod_post": false, "created_utc": 1733075136.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_798za", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Ruby\\]\n\n    #\u00a0part 1\n    list_1 = values.map(&amp;:first).sort\n    list_2
        = values.map(&amp;:last).sort\n    \n    differences = list_1.map.with_index
        do |value, index|\n        difference = value - list_2[index]\n        difference
        = -difference if difference &lt; 0\n        [value, list_2[index], difference]\n    end\n    \n    puts
        differences.map{ |value| value[2] }.sum\n    \n    # part 2\n    occurances
        = list_1.map.with_index do |value, index|\n        occurance = value * list_2.select{
        |a| a == value }.count\n        [value, list_2[index], occurance]\n    end\n    \n    puts
        occurances.map{ |value| value[2] }.sum", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ruby]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#\u00a0part
        1\nlist_1 = values.map(&amp;amp;:first).sort\nlist_2 = values.map(&amp;amp;:last).sort\n\ndifferences
        = list_1.map.with_index do |value, index|\n    difference = value - list_2[index]\n    difference
        = -difference if difference &amp;lt; 0\n    [value, list_2[index], difference]\nend\n\nputs
        differences.map{ |value| value[2] }.sum\n\n# part 2\noccurances = list_1.map.with_index
        do |value, index|\n    occurance = value * list_2.select{ |a| a == value }.count\n    [value,
        list_2[index], occurance]\nend\n\nputs occurances.map{ |value| value[2] }.sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwfu9m/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwfu9m", "created":
        1733075136.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzwfuaj", "id": "lzwfuaj", "parent_id":
        "t1_lzwfu9m", "depth": 1, "children": ["lzwfuaj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwggfd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Select_From",
        "can_mod_post": false, "created_utc": 1733075322.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_f9pbxbd6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nSolution for part 1 [Advent\\_of\\_Code/2024/Day
        1/d01-easy.py at main \u00b7 SixFiveMil/Advent\\_of\\_Code](https://github.com/SixFiveMil/Advent_of_Code/blob/main/2024/Day%201/d01-easy.py)\n\nSolution
        for part 2 [Advent\\_of\\_Code/2024/Day 1/d01-hard.py at main \u00b7 SixFiveMil/Advent\\_of\\_Code](https://github.com/SixFiveMil/Advent_of_Code/blob/main/2024/Day%201/d01-hard.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Solution
        for part 1 &lt;a href=\"https://github.com/SixFiveMil/Advent_of_Code/blob/main/2024/Day%201/d01-easy.py\"&gt;Advent_of_Code/2024/Day
        1/d01-easy.py at main \u00b7 SixFiveMil/Advent_of_Code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Solution
        for part 2 &lt;a href=\"https://github.com/SixFiveMil/Advent_of_Code/blob/main/2024/Day%201/d01-hard.py\"&gt;Advent_of_Code/2024/Day
        1/d01-hard.py at main \u00b7 SixFiveMil/Advent_of_Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwggfd/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwggfd", "created":
        1733075322.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwhlfw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "grayshanks",
        "can_mod_post": false, "created_utc": 1733075670.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_3a1s0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nNothing too tricky on Day 1.\n\n[part 1](https://github.com/mathwolf/advent2024/blob/main/day1part1.py),
        [part 2](https://github.com/mathwolf/advent2024/blob/main/day1part2.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Nothing
        too tricky on Day 1.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/mathwolf/advent2024/blob/main/day1part1.py\"&gt;part
        1&lt;/a&gt;, &lt;a href=\"https://github.com/mathwolf/advent2024/blob/main/day1part2.py\"&gt;part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwhlfw/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwhlfw", "created":
        1733075670.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733401414.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwhsbr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Robowiko123",
        "can_mod_post": false, "created_utc": 1733075728.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_6zs3nur", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Ruby]\n\n    # Part 1\n    p File.open(\"input\").read.split(\"\\n\").map
        { |x| x.split.reject(&amp;:empty?).map &amp;:to_i }.transpose.map(&amp;:sort).transpose.map
        { |x| (x[0]-x[1]).abs }.sum\n    # Part 2\n    left, right = File.open(\"input\").read.split(\"\\n\").map
        { |x| x.split.reject(&amp;:empty?).map &amp;:to_i }.transpose\n    p left.map
        { |x| x * right.count(x) }.sum", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ruby]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Part 1\np File.open(&amp;quot;input&amp;quot;).read.split(&amp;quot;\\n&amp;quot;).map
        { |x| x.split.reject(&amp;amp;:empty?).map &amp;amp;:to_i }.transpose.map(&amp;amp;:sort).transpose.map
        { |x| (x[0]-x[1]).abs }.sum\n# Part 2\nleft, right = File.open(&amp;quot;input&amp;quot;).read.split(&amp;quot;\\n&amp;quot;).map
        { |x| x.split.reject(&amp;amp;:empty?).map &amp;amp;:to_i }.transpose\np left.map
        { |x| x * right.count(x) }.sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwhsbr/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwhsbr", "created":
        1733075728.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzwhsed", "id": "lzwhsed", "parent_id":
        "t1_lzwhsbr", "depth": 1, "children": ["lzwhsed", "lzxkt83"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwih8i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "maitre_lld",
        "can_mod_post": false, "created_utc": 1733075934.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_y0tlx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\nhttps://github.com/MeisterLLD/aoc2024/blob/main/1.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]\n&lt;a
        href=\"https://github.com/MeisterLLD/aoc2024/blob/main/1.py\"&gt;https://github.com/MeisterLLD/aoc2024/blob/main/1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwih8i/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwih8i", "created":
        1733075934.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733153151.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwjr08", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Shoox",
        "can_mod_post": false, "created_utc": 1733076330.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_5w4uw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Go]\n\nBetter late than never. I''m a bit rusty as I became a
        full time yaml engineer. Looking forward to learn a thing or twenty this year!\n\n#
        internal/util\n    \n    func StreamFile(filePath string, callback func(string))
        {\n    \tf, err := os.OpenFile(filePath, os.O_RDONLY, os.ModePerm)\n    \tif
        err != nil {\n    \t\tlog.Fatalf(\"open file error: %v\", err)\n    \t\treturn\n    \t}\n    \tdefer
        f.Close()\n    \n    \tsc := bufio.NewScanner(f)\n    \tfor sc.Scan() {\n    \t\tcallback(sc.Text())\n    \t}\n    \tif
        err := sc.Err(); err != nil {\n    \t\tlog.Fatalf(\"scan file error: %v\",
        err)\n    \t\treturn\n    \t}\n    }\n\n# part1\n\n    func main() {\n    \tarr0
        := []int{}\n    \tarr1 := []int{}\n    \tutil.StreamFile(\"input\", func(line
        string) {\n    \t\tvar val0, val1 int\n    \t\tfmt.Sscanf(line, \"%d   %d\",
        &amp;val0, &amp;val1)\n    \t\tarr0 = append(arr0, val0)\n    \t\tarr1 = append(arr1,
        val1)\n    \t})\n    \tsort.Ints(arr0)\n    \tsort.Ints(arr1)\n    \tsumDistance
        := 0\n    \tfor index, val := range arr0 {\n    \t\tdistance := arr1[index]
        - val\n    \t\tif distance &lt; 0 {\n    \t\t\tdistance = -distance\n    \t\t}\n    \t\tsumDistance
        += distance\n    \t}\n    \tfmt.Println(sumDistance)\n    }\n\n# part2\n\n    func
        main() {\n    \tarr0 := []int{}\n        dict1 := make(map[int]int)\n    \tutil.StreamFile(\"input\",
        func(line string) {\n    \t\tvar val0, val1 int\n    \t\tfmt.Sscanf(line,
        \"%d   %d\", &amp;val0, &amp;val1)\n    \t\tarr0 = append(arr0, val0)\n            dict1[val1]
        = dict1[val1] + 1\n    \t})\n    \tsumSimilarity := 0\n    \tfor _, val0 :=
        range arr0 {\n            sumSimilarity += dict1[val0] * val0\n    \t}\n    \tfmt.Println(sumSimilarity)\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;Better
        late than never. I&amp;#39;m a bit rusty as I became a full time yaml engineer.
        Looking forward to learn a thing or twenty this year!&lt;/p&gt;\n\n&lt;h1&gt;internal/util&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;func
        StreamFile(filePath string, callback func(string)) {\n    f, err := os.OpenFile(filePath,
        os.O_RDONLY, os.ModePerm)\n    if err != nil {\n        log.Fatalf(&amp;quot;open
        file error: %v&amp;quot;, err)\n        return\n    }\n    defer f.Close()\n\n    sc
        := bufio.NewScanner(f)\n    for sc.Scan() {\n        callback(sc.Text())\n    }\n    if
        err := sc.Err(); err != nil {\n        log.Fatalf(&amp;quot;scan file error:
        %v&amp;quot;, err)\n        return\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;part1&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;func
        main() {\n    arr0 := []int{}\n    arr1 := []int{}\n    util.StreamFile(&amp;quot;input&amp;quot;,
        func(line string) {\n        var val0, val1 int\n        fmt.Sscanf(line,
        &amp;quot;%d   %d&amp;quot;, &amp;amp;val0, &amp;amp;val1)\n        arr0 =
        append(arr0, val0)\n        arr1 = append(arr1, val1)\n    })\n    sort.Ints(arr0)\n    sort.Ints(arr1)\n    sumDistance
        := 0\n    for index, val := range arr0 {\n        distance := arr1[index]
        - val\n        if distance &amp;lt; 0 {\n            distance = -distance\n        }\n        sumDistance
        += distance\n    }\n    fmt.Println(sumDistance)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;part2&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;func
        main() {\n    arr0 := []int{}\n    dict1 := make(map[int]int)\n    util.StreamFile(&amp;quot;input&amp;quot;,
        func(line string) {\n        var val0, val1 int\n        fmt.Sscanf(line,
        &amp;quot;%d   %d&amp;quot;, &amp;amp;val0, &amp;amp;val1)\n        arr0 =
        append(arr0, val0)\n        dict1[val1] = dict1[val1] + 1\n    })\n    sumSimilarity
        := 0\n    for _, val0 := range arr0 {\n        sumSimilarity += dict1[val0]
        * val0\n    }\n    fmt.Println(sumSimilarity)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwjr08/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwjr08", "created":
        1733076330.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwlnw1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "zacko9zt",
        "can_mod_post": false, "created_utc": 1733076921.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_hkyak", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nKinda brute forced i guess, but .075s run time
        so im not complaining!\n\nCode: [https://github.com/ZackTarantinoWoolson/AdventOfCode2024/blob/main/Day1/Day1.py](https://github.com/ZackTarantinoWoolson/AdventOfCode2024/blob/main/Day1/Day1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Kinda
        brute forced i guess, but .075s run time so im not complaining!&lt;/p&gt;\n\n&lt;p&gt;Code:
        &lt;a href=\"https://github.com/ZackTarantinoWoolson/AdventOfCode2024/blob/main/Day1/Day1.py\"&gt;https://github.com/ZackTarantinoWoolson/AdventOfCode2024/blob/main/Day1/Day1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwlnw1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwlnw1", "created":
        1733076921.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwpi7i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "DualGlitch",
        "can_mod_post": false, "created_utc": 1733078090.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_iwg5npqr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\nWill probably refactor a bit when I can but
        this is my joint solution for both parts of Day 1:\n\n[https://github.com/marta-vilaseca/adventofcode-2024/blob/main/01/01.js](https://github.com/marta-vilaseca/adventofcode-2024/blob/main/01/01.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;Will
        probably refactor a bit when I can but this is my joint solution for both
        parts of Day 1:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/marta-vilaseca/adventofcode-2024/blob/main/01/01.js\"&gt;https://github.com/marta-vilaseca/adventofcode-2024/blob/main/01/01.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwpi7i/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwpi7i", "created":
        1733078090.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 9, "name": "t1_lzx1s6v", "id": "lzx1s6v", "parent_id":
        "t1_lzwpi7i", "depth": 1, "children": ["lzx1s6v", "lzwuc8l"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwq5rw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "RearDude",
        "can_mod_post": false, "created_utc": 1733078287.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ijwryql9d",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: JavaScript\\]\n\nI''m trying to learn JavaScript
        this year (sadly)\n\n[repo](https://github.com/DearRude/advent-of-code/tree/main/2024/day-01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        trying to learn JavaScript this year (sadly)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/DearRude/advent-of-code/tree/main/2024/day-01\"&gt;repo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwq5rw/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwq5rw", "created":
        1733078287.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxh69q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "trevdak2",
        "can_mod_post": false, "created_utc": 1733086492.0, "send_replies": true,
        "parent_id": "t1_lzwq5rw", "score": 2, "author_fullname": "t2_32ecf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nice! If you want some advice, I''d say replace your for loop in part 1 with
        reduce(). In fact, I almost never use for loops on arrays anymore\n\nLearning
        JavaScript array functions will be very, very helpful for the AoC", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Nice! If you want some advice, I&amp;#39;d
        say replace your for loop in part 1 with reduce(). In fact, I almost never
        use for loops on arrays anymore&lt;/p&gt;\n\n&lt;p&gt;Learning JavaScript
        array functions will be very, very helpful for the AoC&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxh69q/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxh69q", "created":
        1733086492.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwqcgt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "onyx_and_iris",
        "can_mod_post": false, "created_utc": 1733078343.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1a50fy4g19",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Go\\] \n\n  \n[https://git.onyxandiris.online/onyx\\_online/aoc2024/src/branch/main/day-01](https://git.onyxandiris.online/onyx_online/aoc2024/src/branch/main/day-01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go] &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://git.onyxandiris.online/onyx_online/aoc2024/src/branch/main/day-01\"&gt;https://git.onyxandiris.online/onyx_online/aoc2024/src/branch/main/day-01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwqcgt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwqcgt", "created":
        1733078343.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwr1gt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "MarvelousShade",
        "can_mod_post": false, "created_utc": 1733078552.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_hfkpxvt9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: C#]\n\n\nFor part 1, I just sorted the lists and then checked
        the difference. For part 2, I counted all numbers using dictionaries.\n\nYou
        can find my solutions on: \nhttps://github.com/messcheg/advent-of-code/tree/main/AdventOfCode2024%2FDay01",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;p&gt;For
        part 1, I just sorted the lists and then checked the difference. For part
        2, I counted all numbers using dictionaries.&lt;/p&gt;\n\n&lt;p&gt;You can
        find my solutions on: \n&lt;a href=\"https://github.com/messcheg/advent-of-code/tree/main/AdventOfCode2024%2FDay01\"&gt;https://github.com/messcheg/advent-of-code/tree/main/AdventOfCode2024%2FDay01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwr1gt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwr1gt", "created":
        1733078552.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxkkao",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "vmaskmovps",
        "can_mod_post": false, "created_utc": 1733087528.0, "send_replies": true,
        "parent_id": "t1_lzwr1gt", "score": 2, "author_fullname": "t2_1binuwn4tm",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "You might benefit from CollectionExtensions.GetValueOrDefault
        instead of using TryGetValue.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;You might benefit from CollectionExtensions.GetValueOrDefault
        instead of using TryGetValue.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxkkao/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzxkkao", "created": 1733087528.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxvdbt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "MarvelousShade",
        "can_mod_post": false, "created_utc": 1733090981.0, "send_replies": true,
        "parent_id": "t1_lzxkkao", "score": 2, "author_fullname": "t2_hfkpxvt9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thank you for the tip. In this case that would work since the default of
        a long is 0.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank
        you for the tip. In this case that would work since the default of a long
        is 0.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxvdbt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxvdbt", "created":
        1733090981.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733080703.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwwa0j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "keriati",
        "can_mod_post": false, "created_utc": 1733080125.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_21zi74mh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\nPretty fast (if not the fastest) part2: [https://github.com/keriati/aocpp/blob/main/2024/01/day01.cpp](https://github.com/keriati/aocpp/blob/main/2024/01/day01.cpp)\n\nI
        only included part2 in my C++ solution, as there was a chance to use the \"bucket\"
        approach for counting occurrences and have a pretty fast implementation.\n\nMy
        original TypeScript solutions for both parts, also using an Array to count
        occurrences are here:\n\n[https://github.com/keriati/aoc/blob/master/2024/day01.ts](https://github.com/keriati/aoc/blob/master/2024/day01.ts)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;Pretty
        fast (if not the fastest) part2: &lt;a href=\"https://github.com/keriati/aocpp/blob/main/2024/01/day01.cpp\"&gt;https://github.com/keriati/aocpp/blob/main/2024/01/day01.cpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        only included part2 in my C++ solution, as there was a chance to use the &amp;quot;bucket&amp;quot;
        approach for counting occurrences and have a pretty fast implementation.&lt;/p&gt;\n\n&lt;p&gt;My
        original TypeScript solutions for both parts, also using an Array to count
        occurrences are here:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/keriati/aoc/blob/master/2024/day01.ts\"&gt;https://github.com/keriati/aoc/blob/master/2024/day01.ts&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwwa0j/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwwa0j", "created":
        1733080125.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwwfi2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "daic0r",
        "can_mod_post": false, "created_utc": 1733080170.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_8fbe9nsl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[https://github.com/daic0r/advent\\_of\\_code\\_2024/blob/main/rust/day1/src/main.rs](https://github.com/daic0r/advent_of_code_2024/blob/main/rust/day1/src/main.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/daic0r/advent_of_code_2024/blob/main/rust/day1/src/main.rs\"&gt;https://github.com/daic0r/advent_of_code_2024/blob/main/rust/day1/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwwfi2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwwfi2", "created":
        1733080170.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx2ime",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "derkusherkus",
        "can_mod_post": false, "created_utc": 1733082017.0, "send_replies": true,
        "parent_id": "t1_lzwwfi2", "score": 4, "author_fullname": "t2_e7nuqvdz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You might find \\`unzip\\` helpful :)  \n[https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.unzip](https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.unzip)\n\nedit:
        and also, \\`split\\_once\\`: [https://doc.rust-lang.org/std/primitive.str.html#method.split\\_once](https://doc.rust-lang.org/std/primitive.str.html#method.split_once)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You might find `unzip`
        helpful :)&lt;br/&gt;\n&lt;a href=\"https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.unzip\"&gt;https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.unzip&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;edit:
        and also, `split_once`: &lt;a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.split_once\"&gt;https://doc.rust-lang.org/std/primitive.str.html#method.split_once&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx2ime/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx2ime", "created":
        1733082017.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzx56yr", "id": "lzx56yr", "parent_id":
        "t1_lzx2ime", "depth": 2, "children": ["lzx56yr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx3r49",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Kfimenepah",
        "can_mod_post": false, "created_utc": 1733082395.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_rfz3ej2y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[Code](https://github.com/SubNet32/AoC2024_PY/tree/main/days/day01)\n\nGoing
        with python this year, since I always wanted to learn it, but never had the
        necessity to do so", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/SubNet32/AoC2024_PY/tree/main/days/day01\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Going
        with python this year, since I always wanted to learn it, but never had the
        necessity to do so&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx3r49/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx3r49", "created":
        1733082395.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx80pl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "FCBStar-of-the-South",
        "can_mod_post": false, "created_utc": 1733083687.0, "send_replies": true,
        "parent_id": "t1_lzx3r49", "score": 2, "author_fullname": "t2_8zh1pc7y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I don''t think this is a PEP 8 style recommendation exactly but I think most
        would prefer `line.split()` over `str.split(line, \"   \")`.\n\nAlso, not
        sure if you are just doing it for readability but the `.split` method splits
        on any number of whitespace so you can omit it in this case\n\nLook into `collections.Counter`!
        You''ll need it again for sure", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t think this is a PEP 8 style recommendation
        exactly but I think most would prefer &lt;code&gt;line.split()&lt;/code&gt;
        over &lt;code&gt;str.split(line, &amp;quot;   &amp;quot;)&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Also,
        not sure if you are just doing it for readability but the &lt;code&gt;.split&lt;/code&gt;
        method splits on any number of whitespace so you can omit it in this case&lt;/p&gt;\n\n&lt;p&gt;Look
        into &lt;code&gt;collections.Counter&lt;/code&gt;! You&amp;#39;ll need it
        again for sure&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx80pl/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx80pl", "created":
        1733083687.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxae20", "id": "lzxae20", "parent_id":
        "t1_lzx80pl", "depth": 2, "children": ["lzxae20"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733089653.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzx5ceh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "tallsamurai",
        "can_mod_post": false, "created_utc": 1733082884.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_11prudp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]  \nUsing multiset for part 1, map and vector for part
        2:  \n[https://github.com/lucasomigli/adventofcode/blob/main/adventofcode2024/day01/day01.h](https://github.com/lucasomigli/adventofcode/blob/main/adventofcode2024/day01/day01.h)\n\n    #ifndef
        DAY01_2024_H\n    #define DAY01_2024_H\n    \n    #ifndef UTILS_H\n    #include
        \"../utils2024.h\"\n    #endif\n    \n    inline int Solver::Solve_Day01_part1()
        {\n        std::string line;\n        int differences = 0;\n        std::multiset&lt;int&gt;
        left;\n        std::multiset&lt;int&gt; right;\n    \n        // insert numbers
        into two sets (left and right) in order.\n        while (std::getline(file,
        line)) {\n            std::istringstream iss(line);\n            std::string
        token;\n    \n            // insert number into the left multiset\n            iss
        &gt;&gt; token;\n            left.insert(std::stoi(token));\n    \n            //
        insert number into the right multiset\n            iss &gt;&gt; token;\n            right.insert(std::stoi(token));\n        }\n    \n        //
        calculate differences\n        int index = 0;\n        for (auto it = left.begin();
        it != left.end(); ++it) {\n            index = std::distance(left.begin(),
        it);\n            auto it2 = std::next(right.begin(), index);\n            differences
        += std::abs(*it - *it2);\n        }\n    \n        return differences;\n    }\n    \n    inline
        int Solver::Solve_Day01_part2() {\n        std::string line;\n        int
        differences = 0;\n        std::vector&lt;int&gt; left;\n        std::map&lt;int,
        int&gt; right;\n    \n        // insert numbers into two sets (left and right)
        in order.\n        while (std::getline(file, line)) {\n            std::istringstream
        iss(line);\n            std::string token;\n    \n            // insert number
        into the left vector\n            iss &gt;&gt; token;\n            left.push_back(std::stoi(token));\n    \n            //
        insert number into the right map\n            iss &gt;&gt; token;\n            right[std::stoi(token)]
        += 1;\n        }\n    \n        // increase similarity score for each item
        in the left vector\n        for (auto it = left.begin(); it != left.end();
        ++it) {\n            differences += right[*it] * *it;\n        }\n    \n        return
        differences;\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        C++]&lt;br/&gt;\nUsing multiset for part 1, map and vector for part 2:&lt;br/&gt;\n&lt;a
        href=\"https://github.com/lucasomigli/adventofcode/blob/main/adventofcode2024/day01/day01.h\"&gt;https://github.com/lucasomigli/adventofcode/blob/main/adventofcode2024/day01/day01.h&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#ifndef
        DAY01_2024_H\n#define DAY01_2024_H\n\n#ifndef UTILS_H\n#include &amp;quot;../utils2024.h&amp;quot;\n#endif\n\ninline
        int Solver::Solve_Day01_part1() {\n    std::string line;\n    int differences
        = 0;\n    std::multiset&amp;lt;int&amp;gt; left;\n    std::multiset&amp;lt;int&amp;gt;
        right;\n\n    // insert numbers into two sets (left and right) in order.\n    while
        (std::getline(file, line)) {\n        std::istringstream iss(line);\n        std::string
        token;\n\n        // insert number into the left multiset\n        iss &amp;gt;&amp;gt;
        token;\n        left.insert(std::stoi(token));\n\n        // insert number
        into the right multiset\n        iss &amp;gt;&amp;gt; token;\n        right.insert(std::stoi(token));\n    }\n\n    //
        calculate differences\n    int index = 0;\n    for (auto it = left.begin();
        it != left.end(); ++it) {\n        index = std::distance(left.begin(), it);\n        auto
        it2 = std::next(right.begin(), index);\n        differences += std::abs(*it
        - *it2);\n    }\n\n    return differences;\n}\n\ninline int Solver::Solve_Day01_part2()
        {\n    std::string line;\n    int differences = 0;\n    std::vector&amp;lt;int&amp;gt;
        left;\n    std::map&amp;lt;int, int&amp;gt; right;\n\n    // insert numbers
        into two sets (left and right) in order.\n    while (std::getline(file, line))
        {\n        std::istringstream iss(line);\n        std::string token;\n\n        //
        insert number into the left vector\n        iss &amp;gt;&amp;gt; token;\n        left.push_back(std::stoi(token));\n\n        //
        insert number into the right map\n        iss &amp;gt;&amp;gt; token;\n        right[std::stoi(token)]
        += 1;\n    }\n\n    // increase similarity score for each item in the left
        vector\n    for (auto it = left.begin(); it != left.end(); ++it) {\n        differences
        += right[*it] * *it;\n    }\n\n    return differences;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx5ceh/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx5ceh", "created":
        1733082884.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzxjoo8", "id": "lzxjoo8", "parent_id":
        "t1_lzx5ceh", "depth": 1, "children": ["lzxjoo8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733096321.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzx5fi8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Expensive-Type2132",
        "can_mod_post": false, "created_utc": 1733082911.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_fs2sofe1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\n    #include &lt;algorithm&gt;\n    #include &lt;fstream&gt;\n    #include
        &lt;iostream&gt;\n    #include &lt;unordered_map&gt;\n    #include &lt;vector&gt;\n    \n    int
        main() {\n        std::vector&lt;int&gt; a;\n        std::vector&lt;int&gt;
        b;\n    \n        int x = 0;\n        int y = 0;\n    \n        std::unordered_map&lt;int,
        int&gt; z;\n    \n        std::ifstream input_stream(\"./Day01.txt\");\n    \n        int
        m;\n        int n;\n    \n        while (input_stream &gt;&gt; m &gt;&gt;
        n) {\n            a.push_back(m);\n            b.push_back(n);\n        }\n    \n        std::ranges::sort(a);\n        std::ranges::sort(b);\n    \n        for
        (std::size_t i = 0; i &lt; a.size(); i++) x += std::abs(a[i] - b[i]);\n    \n        for
        (const auto &amp;j : b) z[j]++;\n    \n        for (const auto &amp;k : a)
        y += k * z[k];\n    \n        std::cout &lt;&lt; x &lt;&lt; std::endl;\n        std::cout
        &lt;&lt; y &lt;&lt; std::endl;\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;algorithm&amp;gt;\n#include &amp;lt;fstream&amp;gt;\n#include &amp;lt;iostream&amp;gt;\n#include
        &amp;lt;unordered_map&amp;gt;\n#include &amp;lt;vector&amp;gt;\n\nint main()
        {\n    std::vector&amp;lt;int&amp;gt; a;\n    std::vector&amp;lt;int&amp;gt;
        b;\n\n    int x = 0;\n    int y = 0;\n\n    std::unordered_map&amp;lt;int,
        int&amp;gt; z;\n\n    std::ifstream input_stream(&amp;quot;./Day01.txt&amp;quot;);\n\n    int
        m;\n    int n;\n\n    while (input_stream &amp;gt;&amp;gt; m &amp;gt;&amp;gt;
        n) {\n        a.push_back(m);\n        b.push_back(n);\n    }\n\n    std::ranges::sort(a);\n    std::ranges::sort(b);\n\n    for
        (std::size_t i = 0; i &amp;lt; a.size(); i++) x += std::abs(a[i] - b[i]);\n\n    for
        (const auto &amp;amp;j : b) z[j]++;\n\n    for (const auto &amp;amp;k : a)
        y += k * z[k];\n\n    std::cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; std::endl;\n    std::cout
        &amp;lt;&amp;lt; y &amp;lt;&amp;lt; std::endl;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx5fi8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx5fi8", "created":
        1733082911.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx663l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Herman_Melville55",
        "can_mod_post": false, "created_utc": 1733083132.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_9lfos8te", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Bash\\]\n\n    #!/bin/bash\n    \n    # part 1\n    \n    a=()\n    b=()\n    \n    while
        IFS= read -r line; do\n        read -r word1 word2 &lt;&lt;&lt; \"$line\"\n        a+=(\"$word1\")\n        b+=(\"$word2\")\n    done
        &lt; 1.txt\n    \n    sorted_a=($(printf \"%s\\n\" \"${a[@]}\" | sort -n))\n    sorted_b=($(printf
        \"%s\\n\" \"${b[@]}\" | sort -n))\n    \n    abs() {\n        if (( $1 &lt;
        0 )); then\n            echo $(( -1 * $1 ))\n        else\n            echo
        $1\n        fi\n    }\n    \n    sum=0\n    for i in \"${!sorted_a[@]}\";
        do\n      diff=$((sorted_a[i] - sorted_b[i]))\n      abs_diff=$(abs diff)\n      sum=$((sum
        + abs_diff))\n    done\n    \n    echo \"$sum\"\n    \n    # part 2\n    \n    a=()\n    b=()\n    \n    while
        IFS= read -r line; do\n        read -r word1 word2 &lt;&lt;&lt; \"$line\"\n        a+=(\"$word1\")\n        b+=(\"$word2\")\n    done
        &lt; 1.txt\n    \n    score=0\n    \n    for item in \"${a[@]}\"; do\n      count=$(echo
        \"${b[@]}\" | grep -o \"$item\" | wc -l)\n      score=$((count * item + score))\n    done\n    \n    echo
        \"$score\"", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Bash]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/bash\n\n# part 1\n\na=()\nb=()\n\nwhile
        IFS= read -r line; do\n    read -r word1 word2 &amp;lt;&amp;lt;&amp;lt; &amp;quot;$line&amp;quot;\n    a+=(&amp;quot;$word1&amp;quot;)\n    b+=(&amp;quot;$word2&amp;quot;)\ndone
        &amp;lt; 1.txt\n\nsorted_a=($(printf &amp;quot;%s\\n&amp;quot; &amp;quot;${a[@]}&amp;quot;
        | sort -n))\nsorted_b=($(printf &amp;quot;%s\\n&amp;quot; &amp;quot;${b[@]}&amp;quot;
        | sort -n))\n\nabs() {\n    if (( $1 &amp;lt; 0 )); then\n        echo $((
        -1 * $1 ))\n    else\n        echo $1\n    fi\n}\n\nsum=0\nfor i in &amp;quot;${!sorted_a[@]}&amp;quot;;
        do\n  diff=$((sorted_a[i] - sorted_b[i]))\n  abs_diff=$(abs diff)\n  sum=$((sum
        + abs_diff))\ndone\n\necho &amp;quot;$sum&amp;quot;\n\n# part 2\n\na=()\nb=()\n\nwhile
        IFS= read -r line; do\n    read -r word1 word2 &amp;lt;&amp;lt;&amp;lt; &amp;quot;$line&amp;quot;\n    a+=(&amp;quot;$word1&amp;quot;)\n    b+=(&amp;quot;$word2&amp;quot;)\ndone
        &amp;lt; 1.txt\n\nscore=0\n\nfor item in &amp;quot;${a[@]}&amp;quot;; do\n  count=$(echo
        &amp;quot;${b[@]}&amp;quot; | grep -o &amp;quot;$item&amp;quot; | wc -l)\n  score=$((count
        * item + score))\ndone\n\necho &amp;quot;$score&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx663l/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx663l", "created":
        1733083132.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzx664h", "id": "lzx664h", "parent_id":
        "t1_lzx663l", "depth": 1, "children": ["lzx664h"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx7rcg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "citrus_toothpaste",
        "can_mod_post": false, "created_utc": 1733083611.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_y34l3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Typescript (Deno)\\]\n\nFirst time using deno. Didn''t at all
        try to golf it, lol\n\ncode: [https://github.com/Matt0Hara/advent\\_of\\_code\\_2024\\_tsd/tree/master/day1](https://github.com/Matt0Hara/advent_of_code_2024_tsd/tree/master/day1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Typescript
        (Deno)]&lt;/p&gt;\n\n&lt;p&gt;First time using deno. Didn&amp;#39;t at all
        try to golf it, lol&lt;/p&gt;\n\n&lt;p&gt;code: &lt;a href=\"https://github.com/Matt0Hara/advent_of_code_2024_tsd/tree/master/day1\"&gt;https://github.com/Matt0Hara/advent_of_code_2024_tsd/tree/master/day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx7rcg/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx7rcg", "created":
        1733083611.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx7z9q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "red_shifter",
        "can_mod_post": false, "created_utc": 1733083675.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_n75u8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nI have been learning Pandas recently, so I will unreasonably
        try to apply it to as many puzzles as possible. It turned out to be well suited
        for Day 1: Part 1 since it was basically comparing cells between columns.
        For Part 2 I had to use an ordinary loop, though. Any dataframe-based suggestions
        for an alternative solution are welcome.\n\nPart 1 &amp; Part 2\n\n    import
        pandas as pd\n    \n    # Input\n    input_df = pd.read_csv(\"aoc_2024_day1_input.csv\",
        header=None, sep=\"   \")\n    input_df.columns = [\"list1\", \"list2\"]\n    \n    #
        Part 1\n    input_df = input_df.apply(lambda col: col.sort_values().reset_index(drop=True),
        axis=0)\n    input_df[\"offset\"] = abs(input_df[\"list1\"] - input_df[\"list2\"])\n\n    part1_solution
        = input_df[\"offset\"].sum()\n    print(part1_solution)\n\n    # Part 2\n    list2_counts
        = input_df[\"list2\"].value_counts()\n    list1_in_list2_counts = []\n\n    for
        val in input_df[\"list1\"]:\n        if val in list2_counts:\n            list1_in_list2_counts.append(list2_counts[val])\n        else:\n            list1_in_list2_counts.append(0)\n    \n    input_df[\"counts\"]
        = list1_in_list2_counts\n    input_df[\"similarity\"] = input_df[\"list1\"]
        * input_df[\"counts\"]\n    \n    part2_solution = input_df[\"similarity\"].sum()\n    print(part2_solution)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;I
        have been learning Pandas recently, so I will unreasonably try to apply it
        to as many puzzles as possible. It turned out to be well suited for Day 1:
        Part 1 since it was basically comparing cells between columns. For Part 2
        I had to use an ordinary loop, though. Any dataframe-based suggestions for
        an alternative solution are welcome.&lt;/p&gt;\n\n&lt;p&gt;Part 1 &amp;amp;
        Part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import pandas as pd\n\n# Input\ninput_df
        = pd.read_csv(&amp;quot;aoc_2024_day1_input.csv&amp;quot;, header=None, sep=&amp;quot;   &amp;quot;)\ninput_df.columns
        = [&amp;quot;list1&amp;quot;, &amp;quot;list2&amp;quot;]\n\n# Part 1\ninput_df
        = input_df.apply(lambda col: col.sort_values().reset_index(drop=True), axis=0)\ninput_df[&amp;quot;offset&amp;quot;]
        = abs(input_df[&amp;quot;list1&amp;quot;] - input_df[&amp;quot;list2&amp;quot;])\n\npart1_solution
        = input_df[&amp;quot;offset&amp;quot;].sum()\nprint(part1_solution)\n\n# Part
        2\nlist2_counts = input_df[&amp;quot;list2&amp;quot;].value_counts()\nlist1_in_list2_counts
        = []\n\nfor val in input_df[&amp;quot;list1&amp;quot;]:\n    if val in list2_counts:\n        list1_in_list2_counts.append(list2_counts[val])\n    else:\n        list1_in_list2_counts.append(0)\n\ninput_df[&amp;quot;counts&amp;quot;]
        = list1_in_list2_counts\ninput_df[&amp;quot;similarity&amp;quot;] = input_df[&amp;quot;list1&amp;quot;]
        * input_df[&amp;quot;counts&amp;quot;]\n\npart2_solution = input_df[&amp;quot;similarity&amp;quot;].sum()\nprint(part2_solution)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx7z9q/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx7z9q", "created":
        1733083675.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxc31g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "singing_squirrel",
        "can_mod_post": false, "created_utc": 1733084933.0, "send_replies": true,
        "parent_id": "t1_lzx7z9q", "score": 2, "author_fullname": "t2_4u0pzfk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Fairly new to python myself, but for part 2 using pandas I would:\n\n\\*
        Aggregate your initial table to create a table of list2 and the counts\n\n\\*
        Join the initial table with your new aggregated sub-table to look up the counts\n\n\\*
        Multiply and sum accordingly", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fairly
        new to python myself, but for part 2 using pandas I would:&lt;/p&gt;\n\n&lt;p&gt;*
        Aggregate your initial table to create a table of list2 and the counts&lt;/p&gt;\n\n&lt;p&gt;*
        Join the initial table with your new aggregated sub-table to look up the counts&lt;/p&gt;\n\n&lt;p&gt;*
        Multiply and sum accordingly&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxc31g/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxc31g", "created":
        1733084933.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_m0975qb", "id": "m0975qb", "parent_id":
        "t1_lzxc31g", "depth": 2, "children": ["m0975qb"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxdfn8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "MissingSnail",
        "can_mod_post": false, "created_utc": 1733085355.0, "send_replies": true,
        "parent_id": "t1_lzx7z9q", "score": 2, "author_fullname": "t2_8hdb92qb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You should try part 2 with [https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.value\\_counts.html](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.value_counts.html)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You should try part
        2 with &lt;a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.value_counts.html\"&gt;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.value_counts.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxdfn8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxdfn8", "created":
        1733085355.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzzg7kx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mosqueteiro",
        "can_mod_post": false, "created_utc": 1733111369.0, "send_replies": true,
        "parent_id": "t1_lzx7z9q", "score": 2, "author_fullname": "t2_orsu4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nice!\nNow, Part 3 (python): remove all for loops \ud83d\ude09\nWith pandas
        you''ll almost always be faster using pandas functions and avoiding `for`
        loops", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice!\nNow,
        Part 3 (python): remove all for loops \ud83d\ude09\nWith pandas you&amp;#39;ll
        almost always be faster using pandas functions and avoiding &lt;code&gt;for&lt;/code&gt;
        loops&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzg7kx/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzzg7kx", "created":
        1733111369.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx9tmj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "vanZuider",
        "can_mod_post": false, "created_utc": 1733084242.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_a5k3o1oz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: bash]\n\n    #!/bin/bash\n    declare -a first second firstsort
        secondsort\n    declare -i i=0 sum=0 score=0\n    \n    while true ; do\n        read
        -p ''Enter a pair of numbers '' first[i] second[i]\n        if ! [ ${first[i]}
        ]; then break; fi\n        let ++i\n    done\n    \n    firstsort=(`echo ${first[@]}
        | sed -n -e ''y/ /\\n/;p'' | sort `)\n    secondsort=(`echo ${second[@]} |
        sed -n -e ''y/ /\\n/;p'' | sort `)\n\n    for (( i=${#firstsort[@]} ; i+1
        ; i-- )) ; do\n        declare -i diff\n        let diff=firstsort[i]-secondsort[i]\n        let
        sum+=$((diff&gt;0?diff:-diff))\n        let score+=firstsort[i]*$(echo ${secondsort[@]}
        | sed -n -e ''y/ /\\n/;p''| grep -c \"${firstsort[$i]}\" - )\n    done\n\n    echo
        \"sum: \" $sum\n    echo \"score: \" $score", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: bash]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/bash\ndeclare
        -a first second firstsort secondsort\ndeclare -i i=0 sum=0 score=0\n\nwhile
        true ; do\n    read -p &amp;#39;Enter a pair of numbers &amp;#39; first[i]
        second[i]\n    if ! [ ${first[i]} ]; then break; fi\n    let ++i\ndone\n\nfirstsort=(`echo
        ${first[@]} | sed -n -e &amp;#39;y/ /\\n/;p&amp;#39; | sort `)\nsecondsort=(`echo
        ${second[@]} | sed -n -e &amp;#39;y/ /\\n/;p&amp;#39; | sort `)\n\nfor ((
        i=${#firstsort[@]} ; i+1 ; i-- )) ; do\n    declare -i diff\n    let diff=firstsort[i]-secondsort[i]\n    let
        sum+=$((diff&amp;gt;0?diff:-diff))\n    let score+=firstsort[i]*$(echo ${secondsort[@]}
        | sed -n -e &amp;#39;y/ /\\n/;p&amp;#39;| grep -c &amp;quot;${firstsort[$i]}&amp;quot;
        - )\ndone\n\necho &amp;quot;sum: &amp;quot; $sum\necho &amp;quot;score: &amp;quot;
        $score\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx9tmj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx9tmj", "created":
        1733084242.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxb6wy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "SimonHRD",
        "can_mod_post": false, "created_utc": 1733084657.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_82dmxr7m2",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Python\\]\n\nEasy start to the challenge! \ud83c\udf89
        Here\u2019s my solution for Day 1:\n\n[https://github.com/SimonHRD/advent-of-code/blob/main/2024/day\\_01.py](https://github.com/SimonHRD/advent-of-code/blob/main/2024/day_01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Easy
        start to the challenge! \ud83c\udf89 Here\u2019s my solution for Day 1:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/SimonHRD/advent-of-code/blob/main/2024/day_01.py\"&gt;https://github.com/SimonHRD/advent-of-code/blob/main/2024/day_01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxb6wy/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxb6wy", "created":
        1733084657.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxcran",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Dense-Virus-1692",
        "can_mod_post": false, "created_utc": 1733085142.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_rv5ycpvn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Ceylon\\]\n\nI screwed up a couple times but the examples still
        worked. Very weird...\n\n[paste](https://topaz.github.io/paste/#XQAAAQD/EQAAAAAAAAAX7g4KgCER6jLVE99x57ZQSTZ+XYRYYrnrtZUs7KlC0hsYsZX5rHOJE8koanatIYSmZLptFvmSzFh28c+uTVqs3NYHlU3sRR+Eu8cBJf8KFPv6YaoKpq+l3EbS27/n5uXUb5/iFfy8XZzREgORMI358koK9HKB59DlVPjViV8EC9zi1WO6e7VrVFGWbuEkgAbpK2MJJ+yM5gEW3/1CUiRy+uGkk7insgfZb+fsto7DhFOu+idOzPdfFM5fom8Hz+N9pjToTGOUFEwUVzRL/dQo7H3Q2uloMUd/cRvFY1uC8kjFLx2U7TkKKnftrGJuIEMExpR8TTi/6W0gkcFPXaZHqFr7cR7Znaxihzw/qpaeQVW1j5cQOXZZy0UxSElFquWjC9IqCa5ADqW5J2I97x0VFmqdpgfqYOLqJQUh31ryjW34tIc5dzD+QLz5lFlqbIsUxoiWzsJzl903ha1HUA2eeddYcBB5HijnhA1ctoDtFux/LtTUuBcOdeeo2CfGRBXjQryKk4hvXnJGAbxkiXeFCtEPsQ2BB15kUAWTyTC54T0iXwgEy1gmCso00U0DK6dPxXLX0x2N9PrAzu3V0M3ILGm2XJ8z1Sb6ijGzxkjLuOx/PW1iuw0a5fDBAHYNkZSCASoYSTxmZn23i4uDB+t6bajJ+jb08CD4M7NQW8OfEY5R+6eoKztCwaehhGbyEsXhyPYDGGQRCYXhw0/VdRzy9THi7iWr1Losg56uhyVU0g4hpGOqzK7kAfpGq0TTQq0UhA2mCOJNYNvvvy/wqFFdIx9OO+Dl7shwt2h+jqPKaffpNp9AW55xH6cIgaLV3Nq1SLUDACY4YFrxHPyKWbSyhlBUR0uJ7DR6V49Tp+3Xha0CJFBniDNv8aZK5OkGcbOsP0UdjK6NMyT/1xJ4nBRMeY8wkvLgeJuYWbTsw9Egs2KT+aGfb5yE8QfuZ02h4s3mDiv/841yQBE+zfw5i9SCpv1kPPn7msLn8MLE7jFabny2inB0eOkfI2YBM0XcD2+gdVerNhZkTrVQMezN/ry7BfVHyIGehmoepOnifVxl12MrVN9DnbQ6eqXGa8B++58yj2GFAK4kF96RahamUKqkLp8OSNrFZIY8sdnSGaJFsZzhC0YHOoSsMDSbMbATK/cO7uMc2U+UrG52G54jzk3f1pGRLJ61A71eiVY0Z6bNL0VNtXfgWGzoaEXE57UAv6HXyEVjrWR2l2MBTM2U0FmI5VeUvA72qbsDHsU1+die9FWgacwpuUCzX1c7u5OU4spQSNXi/chIlL0vLShjg333zaXME33fXPUXlXvuwuLvf4QqlmfwBKkT/UNLceUatqak0yCihveGghK7rc8/72GWCcDhO528M6ebHG779lZ8hQKTMFdRioQ7D6tS2+pk+pd2yJIp4BqdzNTyHFNbCzOYyFpYtzxufGTbhX+OziS2oqgH/iYKVUJkwp90RmXLM3vpAGvwLTwQlptBW2W1igXIYiRDmxkzJ+Z9caehLLyYwnmxOrs7TXrimuearvC4qsQOghYvu1NTl9asKgU1VjoVTaZZ7ZrZw/csmByyNUaToic9bTnY62ss2wwsgj38qMS9CVms1f/tPUmaLw2ianwZB2DDDLpjRI+7A+twT13IXCKH2iit9xgM5Dm5ldUBVvJ7KUyOqF5ZUXE8O28BAKKqxI97dk/7gtMLZgWWy/fRKFVFiFWarR1VWUgwL8jhj1V2DGeI0KdATPriu2JFEEDFzbcMCKj7PDABfPLsKAEeNJcCVXAO19TYG86ml2x1f0ZN+NNmWetqLeGJCPJ03M3OGeO0xpghItVXBXFMdrnfRRlvrpY9SExpfyg3T7iPIQuGGsd66pu16l68Gwqcb5LqqGrt/HNpmUfw1mZOpEcMIQZ+kLVcGS17eNbuyW2abIC2YryFFpWpxTtSt56kfCi7YsVDWQFrta8g+FGRH15OC4OCN/7Rw47A0p8Qf1C35J+eGszVkCzs7D2ARt87K/sogMvb//MdRHA=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Ceylon]&lt;/p&gt;\n\n&lt;p&gt;I
        screwed up a couple times but the examples still worked. Very weird...&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQD/EQAAAAAAAAAX7g4KgCER6jLVE99x57ZQSTZ+XYRYYrnrtZUs7KlC0hsYsZX5rHOJE8koanatIYSmZLptFvmSzFh28c+uTVqs3NYHlU3sRR+Eu8cBJf8KFPv6YaoKpq+l3EbS27/n5uXUb5/iFfy8XZzREgORMI358koK9HKB59DlVPjViV8EC9zi1WO6e7VrVFGWbuEkgAbpK2MJJ+yM5gEW3/1CUiRy+uGkk7insgfZb+fsto7DhFOu+idOzPdfFM5fom8Hz+N9pjToTGOUFEwUVzRL/dQo7H3Q2uloMUd/cRvFY1uC8kjFLx2U7TkKKnftrGJuIEMExpR8TTi/6W0gkcFPXaZHqFr7cR7Znaxihzw/qpaeQVW1j5cQOXZZy0UxSElFquWjC9IqCa5ADqW5J2I97x0VFmqdpgfqYOLqJQUh31ryjW34tIc5dzD+QLz5lFlqbIsUxoiWzsJzl903ha1HUA2eeddYcBB5HijnhA1ctoDtFux/LtTUuBcOdeeo2CfGRBXjQryKk4hvXnJGAbxkiXeFCtEPsQ2BB15kUAWTyTC54T0iXwgEy1gmCso00U0DK6dPxXLX0x2N9PrAzu3V0M3ILGm2XJ8z1Sb6ijGzxkjLuOx/PW1iuw0a5fDBAHYNkZSCASoYSTxmZn23i4uDB+t6bajJ+jb08CD4M7NQW8OfEY5R+6eoKztCwaehhGbyEsXhyPYDGGQRCYXhw0/VdRzy9THi7iWr1Losg56uhyVU0g4hpGOqzK7kAfpGq0TTQq0UhA2mCOJNYNvvvy/wqFFdIx9OO+Dl7shwt2h+jqPKaffpNp9AW55xH6cIgaLV3Nq1SLUDACY4YFrxHPyKWbSyhlBUR0uJ7DR6V49Tp+3Xha0CJFBniDNv8aZK5OkGcbOsP0UdjK6NMyT/1xJ4nBRMeY8wkvLgeJuYWbTsw9Egs2KT+aGfb5yE8QfuZ02h4s3mDiv/841yQBE+zfw5i9SCpv1kPPn7msLn8MLE7jFabny2inB0eOkfI2YBM0XcD2+gdVerNhZkTrVQMezN/ry7BfVHyIGehmoepOnifVxl12MrVN9DnbQ6eqXGa8B++58yj2GFAK4kF96RahamUKqkLp8OSNrFZIY8sdnSGaJFsZzhC0YHOoSsMDSbMbATK/cO7uMc2U+UrG52G54jzk3f1pGRLJ61A71eiVY0Z6bNL0VNtXfgWGzoaEXE57UAv6HXyEVjrWR2l2MBTM2U0FmI5VeUvA72qbsDHsU1+die9FWgacwpuUCzX1c7u5OU4spQSNXi/chIlL0vLShjg333zaXME33fXPUXlXvuwuLvf4QqlmfwBKkT/UNLceUatqak0yCihveGghK7rc8/72GWCcDhO528M6ebHG779lZ8hQKTMFdRioQ7D6tS2+pk+pd2yJIp4BqdzNTyHFNbCzOYyFpYtzxufGTbhX+OziS2oqgH/iYKVUJkwp90RmXLM3vpAGvwLTwQlptBW2W1igXIYiRDmxkzJ+Z9caehLLyYwnmxOrs7TXrimuearvC4qsQOghYvu1NTl9asKgU1VjoVTaZZ7ZrZw/csmByyNUaToic9bTnY62ss2wwsgj38qMS9CVms1f/tPUmaLw2ianwZB2DDDLpjRI+7A+twT13IXCKH2iit9xgM5Dm5ldUBVvJ7KUyOqF5ZUXE8O28BAKKqxI97dk/7gtMLZgWWy/fRKFVFiFWarR1VWUgwL8jhj1V2DGeI0KdATPriu2JFEEDFzbcMCKj7PDABfPLsKAEeNJcCVXAO19TYG86ml2x1f0ZN+NNmWetqLeGJCPJ03M3OGeO0xpghItVXBXFMdrnfRRlvrpY9SExpfyg3T7iPIQuGGsd66pu16l68Gwqcb5LqqGrt/HNpmUfw1mZOpEcMIQZ+kLVcGS17eNbuyW2abIC2YryFFpWpxTtSt56kfCi7YsVDWQFrta8g+FGRH15OC4OCN/7Rw47A0p8Qf1C35J+eGszVkCzs7D2ARt87K/sogMvb//MdRHA=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxcran/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxcran", "created":
        1733085142.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxd7g7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Dependent_Cap5918",
        "can_mod_post": false, "created_utc": 1733085284.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_a1lwai43", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python] \n\nThat one felt a bit easier than day 1 last year\u2026
        or maybe I\u2019ve improved, who knows! \n\nhttps://github.com/chonalchendo/AdventofCode/blob/main/2024/day1/day1_answer.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python] &lt;/p&gt;\n\n&lt;p&gt;That
        one felt a bit easier than day 1 last year\u2026 or maybe I\u2019ve improved,
        who knows! &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/chonalchendo/AdventofCode/blob/main/2024/day1/day1_answer.py\"&gt;https://github.com/chonalchendo/AdventofCode/blob/main/2024/day1/day1_answer.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxd7g7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxd7g7", "created":
        1733085284.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxiyqj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "daic0r",
        "can_mod_post": false, "created_utc": 1733087043.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_8fbe9nsl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\n[https://github.com/daic0r/advent\\_of\\_code\\_2024/blob/main/cpp/day1/main.cpp](https://github.com/daic0r/advent_of_code_2024/blob/main/cpp/day1/main.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/daic0r/advent_of_code_2024/blob/main/cpp/day1/main.cpp\"&gt;https://github.com/daic0r/advent_of_code_2024/blob/main/cpp/day1/main.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxiyqj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxiyqj", "created":
        1733087043.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733091244.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxjjz7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "omegablazar",
        "can_mod_post": false, "created_utc": 1733087222.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_sx33r89w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]  \n[https://github.com/wrightdylan/advent-of-code-2024/blob/main/src/day01.rs](https://github.com/wrightdylan/advent-of-code-2024/blob/main/src/day01.rs)\n\nPart
        1: 60.3\u00b5s\n\nPart 2: 66.5\u00b5s", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;br/&gt;\n&lt;a href=\"https://github.com/wrightdylan/advent-of-code-2024/blob/main/src/day01.rs\"&gt;https://github.com/wrightdylan/advent-of-code-2024/blob/main/src/day01.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1: 60.3\u00b5s&lt;/p&gt;\n\n&lt;p&gt;Part 2: 66.5\u00b5s&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxjjz7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxjjz7", "created":
        1733087222.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxjjzy", "id": "lzxjjzy", "parent_id":
        "t1_lzxjjz7", "depth": 1, "children": ["lzxjjzy"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxlypv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "micod",
        "can_mod_post": false, "created_utc": 1733087966.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_13860o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Common Lisp\\]  \n[Day 1](https://gitlab.com/micod/advent-of-code/-/blob/main/2024/day-01.lisp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Common Lisp]&lt;br/&gt;\n&lt;a
        href=\"https://gitlab.com/micod/advent-of-code/-/blob/main/2024/day-01.lisp\"&gt;Day
        1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxlypv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxlypv", "created":
        1733087966.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxni8y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "bazar92",
        "can_mod_post": false, "created_utc": 1733088453.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_b7tmrhfi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Kotlin\\]\n\n[Day 1](https://github.com/chezbazar/adventofcode/blob/main/src/main/kotlin/fr/chezbazar/aoc24/day1/Day1.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Kotlin]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/chezbazar/adventofcode/blob/main/src/main/kotlin/fr/chezbazar/aoc24/day1/Day1.kt\"&gt;Day
        1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxni8y/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxni8y", "created":
        1733088453.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxnxu5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Freecelebritypics",
        "can_mod_post": false, "created_utc": 1733088592.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_3xqdqdpn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Typescript\\]\n\n[Day 1](https://github.com/TheDongle/aoc2024)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Typescript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/TheDongle/aoc2024\"&gt;Day 1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxnxu5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxnxu5", "created":
        1733088592.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxr1ct",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "JustLikeHomelander",
        "can_mod_post": false, "created_utc": 1733089580.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_tbi1f6cq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Go\\]\n\n[Github repo](https://github.com/BeyramTaglietti/advent_of_code/blob/master/2024/day1/solution.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/BeyramTaglietti/advent_of_code/blob/master/2024/day1/solution.go\"&gt;Github
        repo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxr1ct/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxr1ct", "created":
        1733089580.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733091263.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxv1io", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "RookBe",
        "can_mod_post": false, "created_utc": 1733090875.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_84q5m", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: all, Rust\\]\n\n- [Blogpost with explanation + sample code in
        Rust](https://nickymeuleman.netlify.app/blog/aoc2024-day01/)  \n- [GitHub
        link to the Rust that compiles to WASM (used in a solver on my website)](https://github.com/NickyMeuleman/scrapyard/blob/main/advent_of_code/2024/solutions/src/day_01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: all, Rust]&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a
        href=\"https://nickymeuleman.netlify.app/blog/aoc2024-day01/\"&gt;Blogpost
        with explanation + sample code in Rust&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a
        href=\"https://github.com/NickyMeuleman/scrapyard/blob/main/advent_of_code/2024/solutions/src/day_01.rs\"&gt;GitHub
        link to the Rust that compiles to WASM (used in a solver on my website)&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxv1io/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxv1io", "created":
        1733090875.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxvf32",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "euidzero",
        "can_mod_post": false, "created_utc": 1733090998.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_b50hb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[https://github.com/stevekay/advent2024/blob/main/01/01.py](https://github.com/stevekay/advent2024/blob/main/01/01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/stevekay/advent2024/blob/main/01/01.py\"&gt;https://github.com/stevekay/advent2024/blob/main/01/01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxvf32/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxvf32", "created":
        1733090998.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxvj9k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "jmd-dk",
        "can_mod_post": false, "created_utc": 1733091036.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_v6fwf29e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++\\]\n\n[GitHub repo](https://github.com/jmd-dk/advent-of-code/blob/main/2024/solution/01/solve.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jmd-dk/advent-of-code/blob/main/2024/solution/01/solve.cpp\"&gt;GitHub
        repo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxvj9k/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxvj9k", "created":
        1733091036.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxwxer",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "unsane_",
        "can_mod_post": false, "created_utc": 1733091497.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_fnedz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\nNot the most elegant, but it works.\n\n    use std::fs;\n    use
        std::iter::zip;\n    \n    fn main() {\n        let mut left_list: Vec&lt;i32&gt;
        = vec![];\n        let mut right_list:Vec&lt;i32&gt; = vec![];\n    \n        for
        line in fs::read_to_string(\"./data/input.dat\").unwrap().lines() {\n            let
        (left, right) = line.split_once(\"   \").unwrap();\n            left_list.push(left.parse().unwrap());\n            right_list.push(right.parse().unwrap());\n        }\n    \n        left_list.sort();\n        right_list.sort();\n    \n        let
        total_distance: i32 = zip(&amp;left_list, &amp;right_list)\n            .map(|(left_item,
        right_item)| (left_item - right_item).abs())\n            .sum::&lt;i32&gt;();\n    \n        println!(\"Part
        1 - Total Distance: {}\", total_distance);\n    \n        let mut similarity_score:
        i32 = 0;\n        for left_item in left_list {\n            let match_count:
        i32 = right_list.iter().filter(|&amp;&amp;right_item| right_item == left_item).count()
        as i32;\n            similarity_score += left_item * match_count;\n        }\n    \n        println!(\"Part
        2 - Similarity Score: {}\", similarity_score);\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Not the most
        elegant, but it works.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::fs;\nuse
        std::iter::zip;\n\nfn main() {\n    let mut left_list: Vec&amp;lt;i32&amp;gt;
        = vec![];\n    let mut right_list:Vec&amp;lt;i32&amp;gt; = vec![];\n\n    for
        line in fs::read_to_string(&amp;quot;./data/input.dat&amp;quot;).unwrap().lines()
        {\n        let (left, right) = line.split_once(&amp;quot;   &amp;quot;).unwrap();\n        left_list.push(left.parse().unwrap());\n        right_list.push(right.parse().unwrap());\n    }\n\n    left_list.sort();\n    right_list.sort();\n\n    let
        total_distance: i32 = zip(&amp;amp;left_list, &amp;amp;right_list)\n        .map(|(left_item,
        right_item)| (left_item - right_item).abs())\n        .sum::&amp;lt;i32&amp;gt;();\n\n    println!(&amp;quot;Part
        1 - Total Distance: {}&amp;quot;, total_distance);\n\n    let mut similarity_score:
        i32 = 0;\n    for left_item in left_list {\n        let match_count: i32 =
        right_list.iter().filter(|&amp;amp;&amp;amp;right_item| right_item == left_item).count()
        as i32;\n        similarity_score += left_item * match_count;\n    }\n\n    println!(&amp;quot;Part
        2 - Similarity Score: {}&amp;quot;, similarity_score);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxwxer/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxwxer", "created":
        1733091497.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxzre1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "MathieuAvec1T",
        "can_mod_post": false, "created_utc": 1733092448.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_1e57obtrq6",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Javascript\\]\n\nFirst Advent of code ! [repo
        link](https://github.com/MathieuAvec1T-dev/AdventOfCode2024/tree/main/01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Javascript]&lt;/p&gt;\n\n&lt;p&gt;First
        Advent of code ! &lt;a href=\"https://github.com/MathieuAvec1T-dev/AdventOfCode2024/tree/main/01\"&gt;repo
        link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxzre1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxzre1", "created":
        1733092448.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzy2e09", "id": "lzy2e09", "parent_id":
        "t1_lzxzre1", "depth": 1, "children": ["lzy2e09"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy0ubn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "marx38",
        "can_mod_post": false, "created_utc": 1733092812.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_2q8qyahv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Lean\\]\n\n[Day 1](https://github.com/mfornet/advent-of-code-2024/blob/main/Aoc2024/Day01.lean)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Lean]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mfornet/advent-of-code-2024/blob/main/Aoc2024/Day01.lean\"&gt;Day
        1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy0ubn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy0ubn", "created":
        1733092812.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy1vi1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AirRevolutionary7216",
        "can_mod_post": false, "created_utc": 1733093154.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_rb0gou2m", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: OCaml\\]\n\n[https://github.com/nduvalhall/aoc2024/tree/main/day1](https://github.com/nduvalhall/aoc2024/tree/main/day1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: OCaml]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/nduvalhall/aoc2024/tree/main/day1\"&gt;https://github.com/nduvalhall/aoc2024/tree/main/day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy1vi1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy1vi1", "created":
        1733093154.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzydvhn", "id": "lzydvhn", "parent_id":
        "t1_lzy1vi1", "depth": 1, "children": ["lzydvhn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy3l4s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ppalisade",
        "can_mod_post": false, "created_utc": 1733093739.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_37zogni8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nFeedback always welcome! I liked this year''s day
        1 better than last years. \n\n    # Part 1\n    from input import input\n    \n    input_list
        = input.split(\"\\n\")\n    \n    comparison_list = [item.split(\"   \") for
        item in input_list]\n    \n    left_list = []\n    right_list = []\n    for
        pair in comparison_list:\n        left_list.append(int(pair[0]))\n        right_list.append(int(pair[1]))\n    \n    left_list.sort()\n    right_list.sort()\n    \n    total_difference
        = 0\n    \n    for index in range(len(left_list)):\n        difference = left_list[index]
        - right_list[index]\n        total_difference += abs(difference)\n    \n    print(total_difference)\n\n    #
        Part 2\n    from input import input\n    \n    input_list = input.split(\"\\n\")\n    \n    comparison_list
        = [item.split(\"   \") for item in input_list]\n    \n    left_list = []\n    right_list
        = []\n    for pair in comparison_list:\n        left_list.append(int(pair[0]))\n        right_list.append(int(pair[1]))\n    \n    occurrence_count_dict
        = {}\n    \n    similarity_score = 0\n    \n    for num in left_list:\n        if
        num not in occurrence_count_dict:\n            occurrence_count_dict[num]
        = right_list.count(num)\n        similarity_score += num * occurrence_count_dict[num]\n    \n    print(similarity_score)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Feedback
        always welcome! I liked this year&amp;#39;s day 1 better than last years.
        &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Part 1\nfrom input import input\n\ninput_list
        = input.split(&amp;quot;\\n&amp;quot;)\n\ncomparison_list = [item.split(&amp;quot;   &amp;quot;)
        for item in input_list]\n\nleft_list = []\nright_list = []\nfor pair in comparison_list:\n    left_list.append(int(pair[0]))\n    right_list.append(int(pair[1]))\n\nleft_list.sort()\nright_list.sort()\n\ntotal_difference
        = 0\n\nfor index in range(len(left_list)):\n    difference = left_list[index]
        - right_list[index]\n    total_difference += abs(difference)\n\nprint(total_difference)\n\n#
        Part 2\nfrom input import input\n\ninput_list = input.split(&amp;quot;\\n&amp;quot;)\n\ncomparison_list
        = [item.split(&amp;quot;   &amp;quot;) for item in input_list]\n\nleft_list
        = []\nright_list = []\nfor pair in comparison_list:\n    left_list.append(int(pair[0]))\n    right_list.append(int(pair[1]))\n\noccurrence_count_dict
        = {}\n\nsimilarity_score = 0\n\nfor num in left_list:\n    if num not in occurrence_count_dict:\n        occurrence_count_dict[num]
        = right_list.count(num)\n    similarity_score += num * occurrence_count_dict[num]\n\nprint(similarity_score)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy3l4s/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy3l4s", "created":
        1733093739.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyafp3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "TrySimplifying",
        "can_mod_post": false, "created_utc": 1733096147.0, "send_replies": true,
        "parent_id": "t1_lzy3l4s", "score": 3, "author_fullname": "t2_37eisoh6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Since you asked for feedback, one thing that stands out in part 2 is that
        you are walking the second list over and over again, which if the lists were
        very large is extremely inefficient. You could make this a lot more efficient
        if you can think of a way to do it with a single pass through the second list...",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Since you asked for
        feedback, one thing that stands out in part 2 is that you are walking the
        second list over and over again, which if the lists were very large is extremely
        inefficient. You could make this a lot more efficient if you can think of
        a way to do it with a single pass through the second list...&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyafp3/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyafp3", "created":
        1733096147.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzycr89", "id": "lzycr89", "parent_id":
        "t1_lzyafp3", "depth": 2, "children": ["lzycr89"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_lzycrln", "id": "lzycrln", "parent_id": "t1_lzy3l4s",
        "depth": 1, "children": ["lzycrln"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy3w4z",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "matheusstutzel",
        "can_mod_post": false, "created_utc": 1733093845.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_33s4wxi3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: elixir]\n\n[Day 1](https://github.com/matheusstutzel/adventOfCode/commit/48609e8f7e8ef11516476df1f7ff9630ee09621a)\n\nSecond
        solution today ([first](https://www.reddit.com/r/adventofcode/s/GPS6n6wFiQ)),
        now in elixir. Trying it for the first time on competitive programming", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: elixir]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/matheusstutzel/adventOfCode/commit/48609e8f7e8ef11516476df1f7ff9630ee09621a\"&gt;Day
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Second solution today (&lt;a href=\"https://www.reddit.com/r/adventofcode/s/GPS6n6wFiQ\"&gt;first&lt;/a&gt;),
        now in elixir. Trying it for the first time on competitive programming&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy3w4z/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy3w4z", "created":
        1733093845.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzzby4f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "StephenBall-Elixir",
        "can_mod_post": false, "created_utc": 1733109688.0, "send_replies": true,
        "parent_id": "t1_lzy3w4z", "score": 2, "author_fullname": "t2_mbi1ft8b", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Small tip: String.split can take a \u201ctrim: true\u201d option to automatically
        discard empty strings from the results.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Small tip: String.split can take a \u201ctrim: true\u201d
        option to automatically discard empty strings from the results.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzby4f/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzzby4f", "created":
        1733109688.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_m00tvcn", "id": "m00tvcn", "parent_id":
        "t1_lzzby4f", "depth": 2, "children": ["m00tvcn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy4wiu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "thedjotaku",
        "can_mod_post": false, "created_utc": 1733094199.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_d7b8t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Golang\\]\n\nHere: \n\n[https://github.com/djotaku/adventofcode/blob/1f6a3dcf738ed55ede1931847db2dbeee5e9fac6/2024/Day\\_01/Go/day\\_01.go](https://github.com/djotaku/adventofcode/blob/1f6a3dcf738ed55ede1931847db2dbeee5e9fac6/2024/Day_01/Go/day_01.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Golang]&lt;/p&gt;\n\n&lt;p&gt;Here:
        &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/djotaku/adventofcode/blob/1f6a3dcf738ed55ede1931847db2dbeee5e9fac6/2024/Day_01/Go/day_01.go\"&gt;https://github.com/djotaku/adventofcode/blob/1f6a3dcf738ed55ede1931847db2dbeee5e9fac6/2024/Day_01/Go/day_01.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy4wiu/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy4wiu", "created":
        1733094199.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy50rj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "thedjotaku",
        "can_mod_post": false, "created_utc": 1733094241.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_d7b8t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[https://github.com/djotaku/adventofcode/blob/1f6a3dcf738ed55ede1931847db2dbeee5e9fac6/2024/Day\\_01/Rust/solution/src/main.rs](https://github.com/djotaku/adventofcode/blob/1f6a3dcf738ed55ede1931847db2dbeee5e9fac6/2024/Day_01/Rust/solution/src/main.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/djotaku/adventofcode/blob/1f6a3dcf738ed55ede1931847db2dbeee5e9fac6/2024/Day_01/Rust/solution/src/main.rs\"&gt;https://github.com/djotaku/adventofcode/blob/1f6a3dcf738ed55ede1931847db2dbeee5e9fac6/2024/Day_01/Rust/solution/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy50rj/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy50rj", "created":
        1733094241.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzy5ev5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "tlareg",
        "can_mod_post": false, "created_utc": 1733094380.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_rei6d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\n[github](https://github.com/tlareg/advent-of-code/blob/master/src/2024/day01/index.ts)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/tlareg/advent-of-code/blob/master/src/2024/day01/index.ts\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzy5ev5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzy5ev5", "created":
        1733094380.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_lzyas5h", "id": "lzyas5h", "parent_id":
        "t1_lzy5ev5", "depth": 1, "children": ["lzyas5h", "m004862"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733096565.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzyahn2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "atweddle",
        "can_mod_post": false, "created_utc": 1733096166.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_h86yiw6a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[GitHub - Part 1](https://github.com/AndrewTweddle/CodingExercises/blob/master/AdventOfCode/aoc2024_rs/src/bin/day1_part1.rs)
        \\- 191\u00b5s, excluding I/O\n\n[GitHub - Part 2](https://github.com/AndrewTweddle/CodingExercises/blob/master/AdventOfCode/aoc2024_rs/src/bin/day1_part2.rs)
        \\- 174\u00b5s, excluding I/O.\n\n    fn solve(contents: &amp;str) -&gt; i64
        {\n        let mut counts: HashMap&lt;i64, (i64, i64)&gt; = HashMap::new();\n        contents.lines().for_each(|line|
        {\n            let (lval_str, rval_str) = line.split_once('' '').unwrap();\n            let
        left = lval_str.trim().parse::&lt;i64&gt;().unwrap();\n            let right
        = rval_str.trim().parse::&lt;i64&gt;().unwrap();\n            counts.entry(left).or_default().0
        += 1;\n            counts.entry(right).or_default().1 += 1;\n        });\n        counts\n            .iter()\n            .map(|(&amp;num,
        &amp;(left_count, right_count))| left_count * right_count * num)\n            .sum::&lt;i64&gt;()\n    }\n\n*NB:
        These timings are on my 7 year old i7-6700 PC. They are averaged over many
        runs using utility methods in* [*lib.rs*](https://github.com/AndrewTweddle/CodingExercises/blob/master/AdventOfCode/aoc2024_rs/src/lib.rs)*.*",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AndrewTweddle/CodingExercises/blob/master/AdventOfCode/aoc2024_rs/src/bin/day1_part1.rs\"&gt;GitHub
        - Part 1&lt;/a&gt; - 191\u00b5s, excluding I/O&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AndrewTweddle/CodingExercises/blob/master/AdventOfCode/aoc2024_rs/src/bin/day1_part2.rs\"&gt;GitHub
        - Part 2&lt;/a&gt; - 174\u00b5s, excluding I/O.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        solve(contents: &amp;amp;str) -&amp;gt; i64 {\n    let mut counts: HashMap&amp;lt;i64,
        (i64, i64)&amp;gt; = HashMap::new();\n    contents.lines().for_each(|line|
        {\n        let (lval_str, rval_str) = line.split_once(&amp;#39; &amp;#39;).unwrap();\n        let
        left = lval_str.trim().parse::&amp;lt;i64&amp;gt;().unwrap();\n        let
        right = rval_str.trim().parse::&amp;lt;i64&amp;gt;().unwrap();\n        counts.entry(left).or_default().0
        += 1;\n        counts.entry(right).or_default().1 += 1;\n    });\n    counts\n        .iter()\n        .map(|(&amp;amp;num,
        &amp;amp;(left_count, right_count))| left_count * right_count * num)\n        .sum::&amp;lt;i64&amp;gt;()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;NB:
        These timings are on my 7 year old i7-6700 PC. They are averaged over many
        runs using utility methods in&lt;/em&gt; &lt;a href=\"https://github.com/AndrewTweddle/CodingExercises/blob/master/AdventOfCode/aoc2024_rs/src/lib.rs\"&gt;&lt;em&gt;lib.rs&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyahn2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyahn2", "created":
        1733096166.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyas3y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Botskiitto",
        "can_mod_post": false, "created_utc": 1733096264.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_15hye7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Vim script]\n\n\n[Paste1](https://topaz.github.io/paste/#XQAAAQBnAwAAAAAAAAA2GUrqJXiUfbiJsq7luKxhGSjzgX2TGTrg7VepkrD95285nYc1Tk+u13bTqHr9ykV5a/XtPiwmBWhg8ging9i5OsvZsx8uPiEV77CNZeZLt9YJB5rwILNjIp43LIk1QXqmfSvlmgQO2diHpbrS0uhuU42QFXb2PQKAPRUXc3eY4R39Vi7lvQjSaS3jOlidNCHOj01lp8LJpVL01XcDdnW6ZAqQh0rK09e3iiF7bmpZ0RysEFOKXOZYB8UlKF3yDdyUtzCLnWTG29oUz/tbGnDZz41ljsc/YbPblXCB//e0xHw=)\n\n[Paste2](https://topaz.github.io/paste/#XQAAAQC2AQAAAAAAAAA2GUrqJXiUfbiJsq7luKxhGSjzgX2TGTrg7chtyC03hJlv4E/oVYJ+o58uBecnhJcCLa3UWmS+VpRcLzq+T6106NgfpxscBuupTpL8EnDlk/hCfSgmmp9ueXOH8hPfCu13yd59bnuHwhiq6M92vhFaTAYNMkS4IpEtFeg62+3q0NUrgaSkYSJumWUp4Smevk97Yo21Gq4o/93IHBAG+9DnVpfR3BKj05qE+xDXFFti14NDSsSaf7tXnyIZ29zu5XgPVeSdC723T0Mg//ATfJg=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Vim script]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBnAwAAAAAAAAA2GUrqJXiUfbiJsq7luKxhGSjzgX2TGTrg7VepkrD95285nYc1Tk+u13bTqHr9ykV5a/XtPiwmBWhg8ging9i5OsvZsx8uPiEV77CNZeZLt9YJB5rwILNjIp43LIk1QXqmfSvlmgQO2diHpbrS0uhuU42QFXb2PQKAPRUXc3eY4R39Vi7lvQjSaS3jOlidNCHOj01lp8LJpVL01XcDdnW6ZAqQh0rK09e3iiF7bmpZ0RysEFOKXOZYB8UlKF3yDdyUtzCLnWTG29oUz/tbGnDZz41ljsc/YbPblXCB//e0xHw=\"&gt;Paste1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQC2AQAAAAAAAAA2GUrqJXiUfbiJsq7luKxhGSjzgX2TGTrg7chtyC03hJlv4E/oVYJ+o58uBecnhJcCLa3UWmS+VpRcLzq+T6106NgfpxscBuupTpL8EnDlk/hCfSgmmp9ueXOH8hPfCu13yd59bnuHwhiq6M92vhFaTAYNMkS4IpEtFeg62+3q0NUrgaSkYSJumWUp4Smevk97Yo21Gq4o/93IHBAG+9DnVpfR3BKj05qE+xDXFFti14NDSsSaf7tXnyIZ29zu5XgPVeSdC723T0Mg//ATfJg=\"&gt;Paste2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyas3y/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyas3y", "created":
        1733096264.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzybcds",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "willkill07",
        "can_mod_post": false, "created_utc": 1733096458.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_7j0ca", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: C++23]\n\n[GitHub Both Parts](https://github.com/willkill07/AdventOfCode2024/blob/c98c8a2c156d5b81925fca6183bd8a5973cd1896/advent.cpp#L19-L75)\n\nTiming
        varies between 100\u00b5s cold or 17\u00b5s hot (both parts across M4 Max
        or Ryzen 7950X) including I/O.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++23]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/willkill07/AdventOfCode2024/blob/c98c8a2c156d5b81925fca6183bd8a5973cd1896/advent.cpp#L19-L75\"&gt;GitHub
        Both Parts&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Timing varies between 100\u00b5s
        cold or 17\u00b5s hot (both parts across M4 Max or Ryzen 7950X) including
        I/O.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzybcds/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzybcds", "created":
        1733096458.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733097527.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzydegd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "MarkJans",
        "can_mod_post": false, "created_utc": 1733097188.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_7am9dyzw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[My code on GitHub](https://github.com/markjansnl/aoc2024/blob/main/src/days/day01/mod.rs)\n\nPart
        1: 30 \u03bcs  \nPart 2: 32 \u03bcs\n\nI sort the input for both part 1 and
        part 2. For part 2 I align the sorted vectors. When they are both the same
        I count how many there are and multiply the counts together with the number.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/markjansnl/aoc2024/blob/main/src/days/day01/mod.rs\"&gt;My
        code on GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part 1: 30 \u03bcs&lt;br/&gt;\nPart
        2: 32 \u03bcs&lt;/p&gt;\n\n&lt;p&gt;I sort the input for both part 1 and part
        2. For part 2 I align the sorted vectors. When they are both the same I count
        how many there are and multiply the counts together with the number.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzydegd/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzydegd", "created":
        1733097188.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzydt95",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "DeadlyRedCube",
        "can_mod_post": false, "created_utc": 1733097332.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_a1z93", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: C++23\\]\n\n[Parts 1 &amp; 2](https://github.com/DeadlyRedCube/AdventOfCode/blob/main/2024/D01.h)\n\nI''m
        using AoC this year as an excuse to get better at using some of the std::ranges/std::ranges::views
        functionality (specifically all the view transforms), which means a lot of
        writing it the naive way the night of the solve and then going back and trying
        to ranges it up after the fact so that I can see where I could use them more
        later - probably pushing it too far in that direction for readability''s sake,
        but I want to find that line.\n\n\n\nFor part1, I used a set of view transforms
        to turn each line of text into a tuple of l, r values, added them into individual
        lists, then sorted, then used zip\\_transform to get the abs(difference) of
        them.\n\nFor part 2 I did what a lot of others did and made maps of how many
        times each value appeared on the left and right then used those to generate
        the final sum.\n\nNothing super fancy here today.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C++23]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/DeadlyRedCube/AdventOfCode/blob/main/2024/D01.h\"&gt;Parts
        1 &amp;amp; 2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m using AoC this year
        as an excuse to get better at using some of the std::ranges/std::ranges::views
        functionality (specifically all the view transforms), which means a lot of
        writing it the naive way the night of the solve and then going back and trying
        to ranges it up after the fact so that I can see where I could use them more
        later - probably pushing it too far in that direction for readability&amp;#39;s
        sake, but I want to find that line.&lt;/p&gt;\n\n&lt;p&gt;For part1, I used
        a set of view transforms to turn each line of text into a tuple of l, r values,
        added them into individual lists, then sorted, then used zip_transform to
        get the abs(difference) of them.&lt;/p&gt;\n\n&lt;p&gt;For part 2 I did what
        a lot of others did and made maps of how many times each value appeared on
        the left and right then used those to generate the final sum.&lt;/p&gt;\n\n&lt;p&gt;Nothing
        super fancy here today.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzydt95/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzydt95", "created":
        1733097332.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzz0msf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733105453.0, "send_replies": true,
        "parent_id": "t1_lzydt95", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You''re back :D  It''s good to see you again this year!\n\nJust remember:
        YOU HAD ONE JOB XD", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You&amp;#39;re
        back :D  It&amp;#39;s good to see you again this year!&lt;/p&gt;\n\n&lt;p&gt;Just
        remember: YOU HAD ONE JOB XD&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzz0msf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzz0msf", "created":
        1733105453.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzz0pr5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "DeadlyRedCube",
        "can_mod_post": false, "created_utc": 1733105484.0, "send_replies": true,
        "parent_id": "t1_lzz0msf", "score": 2, "author_fullname": "t2_a1z93", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hahaha I will never forget \ud83e\udd23", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Hahaha I will never forget \ud83e\udd23&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzz0pr5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzz0pr5", "created":
        1733105484.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733097884.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzyegbz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "vi777x",
        "can_mod_post": false, "created_utc": 1733097561.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_zoxsm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Nix\\]\n\nLearning Nix was quite fun, although the language
        wasn''t designed for this use-case. Attending functional programming course
        at my Uni definitely made it less painful.\n\npart1.nix:\n\n        with builtins;\n        with
        (import ./common.nix);\n        data: data\n        |&gt; parse\n        |&gt;
        mapAttrs (name: val:  (map lib.toInt val) |&gt; (sort lessThan))\n        |&gt;
        ({ l, r }: lib.zipListsWith sub l r)\n        |&gt; foldl'' (acc: x: if x
        &lt; 0 then acc - x else acc + x) 0\n\npart 2:\n\n        with builtins;\n        with
        (import ./common.nix);\n        data: parse data |&gt; ({ l, r }: map (similarityScore
        (collect r)) l) |&gt; foldl'' add 0\n\ncommon.nix:\n\n        with builtins;\n        let\n          lib
        = import &lt;nixpkgs/lib&gt;;\n          trans =\n            { l, r }:\n            x:
        {\n              l = l ++ [ (head x) ];\n              r = r ++ [ (builtins.elemAt
        x 1) ];\n            };\n          acc = {\n            l = [ ];\n            r
        = [ ];\n          };\n          regex = \"([[:digit:]]+)[[:space:]]+([[:digit:]]+)\\n*\";\n        in\n        {\n          lib
        = lib;\n          collect = foldl'' (acc: x: acc // { ${x} = (acc.${x} or
        0) + 1; }) { };\n          similarityScore = c: (x: (c.${x} or 0) * (lib.toInt
        x));\n          parse = s: split regex s |&gt; filter isList |&gt; foldl''
        trans acc;\n        }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Nix]&lt;/p&gt;\n\n&lt;p&gt;Learning Nix was quite fun, although the language
        wasn&amp;#39;t designed for this use-case. Attending functional programming
        course at my Uni definitely made it less painful.&lt;/p&gt;\n\n&lt;p&gt;part1.nix:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    with
        builtins;\n    with (import ./common.nix);\n    data: data\n    |&amp;gt;
        parse\n    |&amp;gt; mapAttrs (name: val:  (map lib.toInt val) |&amp;gt; (sort
        lessThan))\n    |&amp;gt; ({ l, r }: lib.zipListsWith sub l r)\n    |&amp;gt;
        foldl&amp;#39; (acc: x: if x &amp;lt; 0 then acc - x else acc + x) 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    with builtins;\n    with (import
        ./common.nix);\n    data: parse data |&amp;gt; ({ l, r }: map (similarityScore
        (collect r)) l) |&amp;gt; foldl&amp;#39; add 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;common.nix:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    with
        builtins;\n    let\n      lib = import &amp;lt;nixpkgs/lib&amp;gt;;\n      trans
        =\n        { l, r }:\n        x: {\n          l = l ++ [ (head x) ];\n          r
        = r ++ [ (builtins.elemAt x 1) ];\n        };\n      acc = {\n        l =
        [ ];\n        r = [ ];\n      };\n      regex = &amp;quot;([[:digit:]]+)[[:space:]]+([[:digit:]]+)\\n*&amp;quot;;\n    in\n    {\n      lib
        = lib;\n      collect = foldl&amp;#39; (acc: x: acc // { ${x} = (acc.${x}
        or 0) + 1; }) { };\n      similarityScore = c: (x: (c.${x} or 0) * (lib.toInt
        x));\n      parse = s: split regex s |&amp;gt; filter isList |&amp;gt; foldl&amp;#39;
        trans acc;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyegbz/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzyegbz", "created": 1733097561.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzyegd0", "id": "lzyegd0", "parent_id":
        "t1_lzyegbz", "depth": 1, "children": ["lzyegd0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyi596",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "toastedstapler",
        "can_mod_post": false, "created_utc": 1733098848.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ck238", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[language: Rust]\n\nfound out it was december 1st with just enough time to
        solve the problem!\n\n    pub fn solve(input: &amp;str) -&gt; anyhow::Result&lt;DayResult&gt;
        {\n        let (mut a, mut b) = parse_inputs(input)?;\n    \n        a.sort_unstable();\n        b.sort_unstable();\n    \n        let
        p1: usize = a\n            .iter()\n            .cloned()\n            .zip(b.iter().cloned())\n            .map(|(a,
        b)| a.abs_diff(b))\n            .sum();\n    \n        let counts = {\n            let
        mut counts = HashMap::&lt;usize, usize&gt;::default();\n            for b
        in b {\n                *counts.entry(b).or_default() += 1_usize;\n            }\n            counts\n        };\n    \n        let
        p2: usize = a\n            .into_iter()\n            .map(|a| a * counts.get(&amp;a).cloned().unwrap_or_default())\n            .sum();\n    \n        (p1,
        p2).into_result()\n    }\n    \n    fn parse_inputs(s: &amp;str) -&gt; anyhow::Result&lt;(Vec&lt;usize&gt;,
        Vec&lt;usize&gt;)&gt; {\n        s.lines()\n            .try_fold((vec![],
        vec![]), |(mut a, mut b), line| {\n                let mut line = line.split_whitespace();\n                a.push(\n                    line.next()\n                        .context(\"failed
        to get next from split\")?\n                        .parse()\n                        .context(\"failed
        to parse usize\")?,\n                );\n                b.push(\n                    line.next()\n                        .context(\"failed
        to get next from split\")?\n                        .parse()\n                        .context(\"failed
        to parse usize\")?,\n                );\n    \n                Ok::&lt;_,
        anyhow::Error&gt;((a, b))\n            })\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[language: Rust]&lt;/p&gt;\n\n&lt;p&gt;found out
        it was december 1st with just enough time to solve the problem!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn solve(input: &amp;amp;str) -&amp;gt; anyhow::Result&amp;lt;DayResult&amp;gt;
        {\n    let (mut a, mut b) = parse_inputs(input)?;\n\n    a.sort_unstable();\n    b.sort_unstable();\n\n    let
        p1: usize = a\n        .iter()\n        .cloned()\n        .zip(b.iter().cloned())\n        .map(|(a,
        b)| a.abs_diff(b))\n        .sum();\n\n    let counts = {\n        let mut
        counts = HashMap::&amp;lt;usize, usize&amp;gt;::default();\n        for b
        in b {\n            *counts.entry(b).or_default() += 1_usize;\n        }\n        counts\n    };\n\n    let
        p2: usize = a\n        .into_iter()\n        .map(|a| a * counts.get(&amp;amp;a).cloned().unwrap_or_default())\n        .sum();\n\n    (p1,
        p2).into_result()\n}\n\nfn parse_inputs(s: &amp;amp;str) -&amp;gt; anyhow::Result&amp;lt;(Vec&amp;lt;usize&amp;gt;,
        Vec&amp;lt;usize&amp;gt;)&amp;gt; {\n    s.lines()\n        .try_fold((vec![],
        vec![]), |(mut a, mut b), line| {\n            let mut line = line.split_whitespace();\n            a.push(\n                line.next()\n                    .context(&amp;quot;failed
        to get next from split&amp;quot;)?\n                    .parse()\n                    .context(&amp;quot;failed
        to parse usize&amp;quot;)?,\n            );\n            b.push(\n                line.next()\n                    .context(&amp;quot;failed
        to get next from split&amp;quot;)?\n                    .parse()\n                    .context(&amp;quot;failed
        to parse usize&amp;quot;)?,\n            );\n\n            Ok::&amp;lt;_,
        anyhow::Error&amp;gt;((a, b))\n        })\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyi596/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyi596", "created":
        1733098848.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyioa0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ThePurifier14",
        "can_mod_post": false, "created_utc": 1733099034.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_59cvsb3r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Go]\n\n[repo](https://github.com/hvieira512/aoc2024)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/hvieira512/aoc2024\"&gt;repo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyioa0/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyioa0", "created":
        1733099034.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyip3j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "dannywinrow",
        "can_mod_post": false, "created_utc": 1733099042.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_i33i5qe8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Excel\\]\n\n[https://github.com/dannywinrow/adventofcode/blob/main/2024/src/1.xlsx](https://github.com/dannywinrow/adventofcode/blob/main/2024/src/1.xlsx)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Excel]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/dannywinrow/adventofcode/blob/main/2024/src/1.xlsx\"&gt;https://github.com/dannywinrow/adventofcode/blob/main/2024/src/1.xlsx&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyip3j/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyip3j", "created":
        1733099042.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyitqc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "frsuin",
        "can_mod_post": false, "created_utc": 1733099089.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_z4hlo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\n    pub fn part_one(input: &amp;str) -&gt; Option&lt;u32&gt;
        {\n        let mut first: Vec&lt;u32&gt; = vec![];\n        let mut second:
        Vec&lt;u32&gt; = vec![];\n    \n        for line in input.lines() {\n            let
        (left, right)  = line.split_once(\"   \").unwrap();\n            first.push(left.parse::&lt;u32&gt;().unwrap());\n            second.push(right.parse::&lt;u32&gt;().unwrap());\n        }\n    \n        first.sort();\n        second.sort();\n    \n        let
        mut total_distance = 0;\n    \n        for (first, second) in first.into_iter().zip(second)
        {\n            let distance = first.abs_diff(second);\n            total_distance
        += distance;\n        }\n    \n        Some(total_distance)\n    }\n    \n    pub
        fn part_two(input: &amp;str) -&gt; Option&lt;u32&gt; {\n        let mut map:
        HashMap&lt;u32, u32&gt; = HashMap::new();\n    \n        let mut left: Vec&lt;u32&gt;
        = vec![];\n    \n        for line in input.lines() {\n            let (first,
        second)  = line.split_once(\"   \").unwrap();\n            left.push(first.parse().unwrap());\n    \n            map.entry(second.parse().unwrap()).and_modify(|e|
        *e += 1).or_insert(1);\n        }\n    \n        let mut similarity = 0;\n    \n        for
        i in left {\n            match map.get(&amp;i) {\n                None =&gt;
        {}\n                Some(freq) =&gt; {\n                    similarity +=
        i * freq;\n                }\n            }\n        }\n    \n        Some(similarity)\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn part_one(input: &amp;amp;str) -&amp;gt; Option&amp;lt;u32&amp;gt; {\n    let
        mut first: Vec&amp;lt;u32&amp;gt; = vec![];\n    let mut second: Vec&amp;lt;u32&amp;gt;
        = vec![];\n\n    for line in input.lines() {\n        let (left, right)  =
        line.split_once(&amp;quot;   &amp;quot;).unwrap();\n        first.push(left.parse::&amp;lt;u32&amp;gt;().unwrap());\n        second.push(right.parse::&amp;lt;u32&amp;gt;().unwrap());\n    }\n\n    first.sort();\n    second.sort();\n\n    let
        mut total_distance = 0;\n\n    for (first, second) in first.into_iter().zip(second)
        {\n        let distance = first.abs_diff(second);\n        total_distance
        += distance;\n    }\n\n    Some(total_distance)\n}\n\npub fn part_two(input:
        &amp;amp;str) -&amp;gt; Option&amp;lt;u32&amp;gt; {\n    let mut map: HashMap&amp;lt;u32,
        u32&amp;gt; = HashMap::new();\n\n    let mut left: Vec&amp;lt;u32&amp;gt;
        = vec![];\n\n    for line in input.lines() {\n        let (first, second)  =
        line.split_once(&amp;quot;   &amp;quot;).unwrap();\n        left.push(first.parse().unwrap());\n\n        map.entry(second.parse().unwrap()).and_modify(|e|
        *e += 1).or_insert(1);\n    }\n\n    let mut similarity = 0;\n\n    for i
        in left {\n        match map.get(&amp;amp;i) {\n            None =&amp;gt;
        {}\n            Some(freq) =&amp;gt; {\n                similarity += i *
        freq;\n            }\n        }\n    }\n\n    Some(similarity)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyitqc/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyitqc", "created":
        1733099089.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzymhbq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "dethnight",
        "can_mod_post": false, "created_utc": 1733100362.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_97uak", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: TypeScript]\n\nhttps://github.com/mnannola/AOC_2024/blob/main/day1/day1.ts",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: TypeScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mnannola/AOC_2024/blob/main/day1/day1.ts\"&gt;https://github.com/mnannola/AOC_2024/blob/main/day1/day1.ts&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzymhbq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzymhbq", "created":
        1733100362.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyopak",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Dullstar",
        "can_mod_post": false, "created_utc": 1733101150.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_oty64", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: D]\n\n[Code](https://github.com/Dullstar/Advent_Of_Code/blob/main/D/source/year2024/day01.d)\n\nDeceptively
        long since it has 3 different implementations for Part 2; it can be fun to
        compare the performance of different approaches sometimes. The lists were
        already sorted for Part 1, so there''s a hand-rolled Part 2 implementation
        that takes advantage of it that runs the fastest despite taking the most lines
        of code -- you might intuitively expect the shortest code to be faster, but
        sometimes those function calls are hiding some expensive* operations in a
        deceptively tiny space.\n\n---\n\n^(*Relatively speaking; even the slowest
        thing I tried was acceptably performant even without compiler optimizations
        turned on.)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        D]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Dullstar/Advent_Of_Code/blob/main/D/source/year2024/day01.d\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Deceptively
        long since it has 3 different implementations for Part 2; it can be fun to
        compare the performance of different approaches sometimes. The lists were
        already sorted for Part 1, so there&amp;#39;s a hand-rolled Part 2 implementation
        that takes advantage of it that runs the fastest despite taking the most lines
        of code -- you might intuitively expect the shortest code to be faster, but
        sometimes those function calls are hiding some expensive* operations in a
        deceptively tiny space.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;sup&gt;*Relatively
        speaking; even the slowest thing I tried was acceptably performant even without
        compiler optimizations turned on.&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyopak/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzyopak", "created": 1733101150.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733105131.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzyoxpn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "dumChickenBiryani",
        "can_mod_post": false, "created_utc": 1733101235.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_4kp3rm8j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "  \n\\[LANGUAGE: Python\\]\n\nNot the prettiest, but it works! Just the methods.
        parsing logic in later block\n\n    \u00a0def part1(self, parsed_input):\n    \u00a0
        \u00a0 \u00a0 \u00a0 # TODO: Implement Part 1 solution\n    \u00a0 \u00a0
        \u00a0 \u00a0 final_sum = 0\n    \u00a0 \u00a0 \u00a0 \u00a0 first_list, second_list
        = parsed_input\n    \u00a0 \u00a0 \u00a0 \u00a0 first_list.sort()\n    \u00a0
        \u00a0 \u00a0 \u00a0 second_list.sort()\n    \u00a0 \u00a0 \u00a0 \u00a0 for
        i, num in enumerate(first_list):\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        final_sum += (abs(num-second_list[i]))\n    \u00a0 \u00a0 \u00a0 \u00a0 print(final_sum)\n    \u00a0
        \u00a0 \u00a0 \u00a0 pass\n    \n    \u00a0 \u00a0 def part2(self, parsed_input):\n    \u00a0
        \u00a0 \u00a0 \u00a0 # TODO: Implement Part 2 solution\n    \u00a0 \u00a0
        \u00a0 \u00a0 final_sum = 0\n    \u00a0 \u00a0 \u00a0 \u00a0 first_list, second_list
        = parsed_input\n    \u00a0 \u00a0 \u00a0 \u00a0 first_map = collections.defaultdict(int)\n    \u00a0
        \u00a0 \u00a0 \u00a0 for num in first_list:\n    \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 first_map[num] = 0\n    \n    \u00a0 \u00a0 \u00a0 \u00a0 for
        snum in second_list:\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 first_map[snum]
        += 1\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \n    \u00a0
        \u00a0 \u00a0 \u00a0 for num in first_list:\n    \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 final_sum += (num*first_map[num])\n    \u00a0 \u00a0 \u00a0
        \u00a0 \n    \u00a0 \u00a0 \u00a0 \u00a0 print(final_sum)\n    \u00a0 \u00a0
        \u00a0 \u00a0 pass\n    \n        \n    \n\n    def parse_input(self, input_data):\n    \u00a0
        \u00a0 \u00a0 \u00a0 # TODO: Implement your parsing logic here\n    \u00a0
        \u00a0 \u00a0 \u00a0 # This method should convert raw input to a format you''ll
        use in part1 and part2\n    \u00a0 \u00a0 \u00a0 \u00a0 \"\"\"\n    \u00a0
        \u00a0 \u00a0 \u00a0 Parse input into two lists:\n    \u00a0 \u00a0 \u00a0
        \u00a0 - First list: First column values\n    \u00a0 \u00a0 \u00a0 \u00a0
        - Second list: Second column values\n    \u00a0 \u00a0 \u00a0 \u00a0 \"\"\"\n    \u00a0
        \u00a0 \u00a0 \u00a0 first_column = []\n    \u00a0 \u00a0 \u00a0 \u00a0 second_column
        = []\n    \u00a0 \u00a0 \u00a0 \u00a0 \n    \u00a0 \u00a0 \u00a0 \u00a0 for
        line in input_data.splitlines():\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        # Split the line and convert to integers\n    \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 a, b = map(int, line.split())\n    \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 first_column.append(a)\n    \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 second_column.append(b)\n    \u00a0 \u00a0 \u00a0 \u00a0 \n    \u00a0
        \u00a0 \u00a0 \u00a0 return first_column, second_column", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Not
        the prettiest, but it works! Just the methods. parsing logic in later block&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u00a0def
        part1(self, parsed_input):\n\u00a0 \u00a0 \u00a0 \u00a0 # TODO: Implement
        Part 1 solution\n\u00a0 \u00a0 \u00a0 \u00a0 final_sum = 0\n\u00a0 \u00a0
        \u00a0 \u00a0 first_list, second_list = parsed_input\n\u00a0 \u00a0 \u00a0
        \u00a0 first_list.sort()\n\u00a0 \u00a0 \u00a0 \u00a0 second_list.sort()\n\u00a0
        \u00a0 \u00a0 \u00a0 for i, num in enumerate(first_list):\n\u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 final_sum += (abs(num-second_list[i]))\n\u00a0 \u00a0
        \u00a0 \u00a0 print(final_sum)\n\u00a0 \u00a0 \u00a0 \u00a0 pass\n\n\u00a0
        \u00a0 def part2(self, parsed_input):\n\u00a0 \u00a0 \u00a0 \u00a0 # TODO:
        Implement Part 2 solution\n\u00a0 \u00a0 \u00a0 \u00a0 final_sum = 0\n\u00a0
        \u00a0 \u00a0 \u00a0 first_list, second_list = parsed_input\n\u00a0 \u00a0
        \u00a0 \u00a0 first_map = collections.defaultdict(int)\n\u00a0 \u00a0 \u00a0
        \u00a0 for num in first_list:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 first_map[num]
        = 0\n\n\u00a0 \u00a0 \u00a0 \u00a0 for snum in second_list:\n\u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 first_map[snum] += 1\n\u00a0 \u00a0 \u00a0 \u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \n\u00a0 \u00a0 \u00a0 \u00a0 for num in first_list:\n\u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 final_sum += (num*first_map[num])\n\u00a0
        \u00a0 \u00a0 \u00a0 \n\u00a0 \u00a0 \u00a0 \u00a0 print(final_sum)\n\u00a0
        \u00a0 \u00a0 \u00a0 pass\n\n\n\n\ndef parse_input(self, input_data):\n\u00a0
        \u00a0 \u00a0 \u00a0 # TODO: Implement your parsing logic here\n\u00a0 \u00a0
        \u00a0 \u00a0 # This method should convert raw input to a format you&amp;#39;ll
        use in part1 and part2\n\u00a0 \u00a0 \u00a0 \u00a0 &amp;quot;&amp;quot;&amp;quot;\n\u00a0
        \u00a0 \u00a0 \u00a0 Parse input into two lists:\n\u00a0 \u00a0 \u00a0 \u00a0
        - First list: First column values\n\u00a0 \u00a0 \u00a0 \u00a0 - Second list:
        Second column values\n\u00a0 \u00a0 \u00a0 \u00a0 &amp;quot;&amp;quot;&amp;quot;\n\u00a0
        \u00a0 \u00a0 \u00a0 first_column = []\n\u00a0 \u00a0 \u00a0 \u00a0 second_column
        = []\n\u00a0 \u00a0 \u00a0 \u00a0 \n\u00a0 \u00a0 \u00a0 \u00a0 for line in
        input_data.splitlines():\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Split
        the line and convert to integers\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0
        a, b = map(int, line.split())\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 first_column.append(a)\n\u00a0
        \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 second_column.append(b)\n\u00a0 \u00a0
        \u00a0 \u00a0 \n\u00a0 \u00a0 \u00a0 \u00a0 return first_column, second_column\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyoxpn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyoxpn", "created":
        1733101235.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzyoxqc", "id": "lzyoxqc", "parent_id":
        "t1_lzyoxpn", "depth": 1, "children": ["lzyoxqc", "lzyxm7h"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyplnw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Dope-pope69420",
        "can_mod_post": false, "created_utc": 1733101475.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_qnmzjc5k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: C#]\n\nI decided to use C# to get familiar with it for work. Open
        to suggestions for improvements!\n\n[code](https://topaz.github.io/paste/#XQAAAQBSBgAAAAAAAAAQaJgOpjQ2Cmmd/UVA29f6438HGVPDqUQZsr+xYypvSltztGWBEyA5CZciny88Yfk4YuiWcZRd5csX0EMGY7sdbBacYRrtng1CfP+yNVe633ILjWbIMqYeg9eBaederuD1U4Q3qgaNgCy0frriTEiroQa9Ar9QPciwAZIHo7NYKSWUm2cO4ac+fhSsy6bnVHH+1TSGv4HeMB1Rp++dgz3l0ghqQ7o6Ux49HwKfb0+ZQMUnLs3fzAdAOtuJIl2aYekor2h8z40gcklI8gWVljtEmn+SAqd72JkjVX9OKIeiuH0rhq8LLZs0mM26Xs43zA046IQgonL0w2O718Ukt89H8BMP9JYFIDTs0neehA8qmy9akcKz4aHvSPRX72QtIxuUA4t/FaBYk0SnRgUAglhE+8Lbax50A/IyNMpjn/bXzC2lhwH+oR2ulHKBEkS5drdTsgCqETNxP8ybw/zS7M1BvzpRqZhG51zp3uJae+m4u24s5sjRnuCEhcgNyJt/b9xaSNQPDEBJheakisoVADfA4wD7ZTQ6WADhHR7OemfG17PVAix0Vjm+IaK7ToBueLdjHQurm8T5SKQahIUmdBPXGBj52Z2KfUKr/8ro90k=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: C#]&lt;/p&gt;\n\n&lt;p&gt;I
        decided to use C# to get familiar with it for work. Open to suggestions for
        improvements!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBSBgAAAAAAAAAQaJgOpjQ2Cmmd/UVA29f6438HGVPDqUQZsr+xYypvSltztGWBEyA5CZciny88Yfk4YuiWcZRd5csX0EMGY7sdbBacYRrtng1CfP+yNVe633ILjWbIMqYeg9eBaederuD1U4Q3qgaNgCy0frriTEiroQa9Ar9QPciwAZIHo7NYKSWUm2cO4ac+fhSsy6bnVHH+1TSGv4HeMB1Rp++dgz3l0ghqQ7o6Ux49HwKfb0+ZQMUnLs3fzAdAOtuJIl2aYekor2h8z40gcklI8gWVljtEmn+SAqd72JkjVX9OKIeiuH0rhq8LLZs0mM26Xs43zA046IQgonL0w2O718Ukt89H8BMP9JYFIDTs0neehA8qmy9akcKz4aHvSPRX72QtIxuUA4t/FaBYk0SnRgUAglhE+8Lbax50A/IyNMpjn/bXzC2lhwH+oR2ulHKBEkS5drdTsgCqETNxP8ybw/zS7M1BvzpRqZhG51zp3uJae+m4u24s5sjRnuCEhcgNyJt/b9xaSNQPDEBJheakisoVADfA4wD7ZTQ6WADhHR7OemfG17PVAix0Vjm+IaK7ToBueLdjHQurm8T5SKQahIUmdBPXGBj52Z2KfUKr/8ro90k=\"&gt;code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyplnw/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyplnw", "created":
        1733101475.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyz2am",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "SirWyvern1",
        "can_mod_post": false, "created_utc": 1733104888.0, "send_replies": true,
        "parent_id": "t1_lzyplnw", "score": 2, "author_fullname": "t2_5rz8sf4e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "small tip, you can do\n\n    inputData.Split(\"\\n\", StringSplitOptions.RemoveEmptyEntries);\n\nwhich
        makes the  if line == \"\" not needed, as it removes any empty entries,  \nLooks
        good otherwise :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;small
        tip, you can do&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;inputData.Split(&amp;quot;\\n&amp;quot;,
        StringSplitOptions.RemoveEmptyEntries);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which
        makes the  if line == &amp;quot;&amp;quot; not needed, as it removes any empty
        entries,&lt;br/&gt;\nLooks good otherwise :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyz2am/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzyz2am", "created": 1733104888.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzyzzj4", "id": "lzyzzj4", "parent_id":
        "t1_lzyz2am", "depth": 2, "children": ["lzyzzj4"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyu3xo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "RadioEven2609",
        "can_mod_post": false, "created_utc": 1733103107.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_9frzzq4k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python]\n\nPart 1:\n\n    # Get lines of data from file\n    lines
        = open(''in.txt'').readlines()\n    \n    # Get each line as a pair of number
        strings\n    pairs = map(str.split, lines)\n    \n    # Get each column as
        a collection of number strings\n    columns = zip(*pairs)\n    \n    # Get
        each column as a sorted collection of integers\n    sort_ints = lambda l:
        sorted(map(int, l))\n    sorted_int_columns = map(sort_ints, columns)\n    \n    #
        Get the distance collections\n    find_distance = lambda a, b: abs(a-b)\n    distances
        = map(find_distance, *sorted_int_columns)\n    \n    # Prints the total of
        the distances\n    total_distance = sum(distances)\n    print(total_distance)\n\nPart
        2:\n\n    from collections import Counter\n    \n    # Get lines of data from
        file\n    lines = open(''in.txt'').readlines()\n    \n    # Get each line
        as a pair of number strings\n    pairs = map(str.split, lines)\n    \n    #
        Get each column as a collection of number strings\n    columns = zip(*pairs)\n    \n    #
        Convert the columns to integers\n    cast_column = lambda l: map(int, l)\n    column1,
        column2 = map(cast_column, columns)\n    \n    # Get the number of times each
        number occurred in column 2\n    column_2_counts = Counter(column2)\n    \n    #
        Calculate the products of the number in column 1 by how many instances of
        that number are in column 2\n    calculate_product = lambda num: num * column_2_counts[num]\n    products
        = map(calculate_product, column1)\n    \n    # Print the total of the products\n    total
        = sum(products)\n    print(total)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Get lines of data from file\nlines = open(&amp;#39;in.txt&amp;#39;).readlines()\n\n#
        Get each line as a pair of number strings\npairs = map(str.split, lines)\n\n#
        Get each column as a collection of number strings\ncolumns = zip(*pairs)\n\n#
        Get each column as a sorted collection of integers\nsort_ints = lambda l:
        sorted(map(int, l))\nsorted_int_columns = map(sort_ints, columns)\n\n# Get
        the distance collections\nfind_distance = lambda a, b: abs(a-b)\ndistances
        = map(find_distance, *sorted_int_columns)\n\n# Prints the total of the distances\ntotal_distance
        = sum(distances)\nprint(total_distance)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from collections import Counter\n\n#
        Get lines of data from file\nlines = open(&amp;#39;in.txt&amp;#39;).readlines()\n\n#
        Get each line as a pair of number strings\npairs = map(str.split, lines)\n\n#
        Get each column as a collection of number strings\ncolumns = zip(*pairs)\n\n#
        Convert the columns to integers\ncast_column = lambda l: map(int, l)\ncolumn1,
        column2 = map(cast_column, columns)\n\n# Get the number of times each number
        occurred in column 2\ncolumn_2_counts = Counter(column2)\n\n# Calculate the
        products of the number in column 1 by how many instances of that number are
        in column 2\ncalculate_product = lambda num: num * column_2_counts[num]\nproducts
        = map(calculate_product, column1)\n\n# Print the total of the products\ntotal
        = sum(products)\nprint(total)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyu3xo/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzyu3xo", "created": 1733103107.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzyxsyp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "DASPRiD",
        "can_mod_post": false, "created_utc": 1733104438.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ewp4x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\nNot the prettiest, but it works!\n\n    #[allow(dead_code)]\n    fn
        part_one(mut left_ids: Vec&lt;u32&gt;, mut right_ids: Vec&lt;u32&gt;) {\n        left_ids.sort();\n        right_ids.sort();\n    \n        let
        mut distance = 0;\n    \n        for pair in left_ids.iter().zip(right_ids.iter())
        {\n            distance += pair.0.abs_diff(*pair.1)\n        }\n    \n        println!(\"Distance:
        {}\", distance);\n    }\n    \n    #[allow(dead_code)]\n    fn part_two(left_ids:
        Vec&lt;u32&gt;, right_ids: Vec&lt;u32&gt;) {\n        let mut score = 0;\n    \n        for
        id in left_ids {\n            score += id * right_ids.iter().filter(|&amp;right_id|
        *right_id == id).count() as u32;\n        }\n    \n        println!(\"Score:
        {}\", score);\n    }\n    \n    fn main() {\n        let mut left_ids = Vec::new();\n        let
        mut right_ids = Vec::new();\n    \n        for line in std::fs::read_to_string(\"input.txt\").unwrap().lines()
        {\n            let mut ids = line.split_whitespace();\n            left_ids.push(ids.next().unwrap().parse::&lt;u32&gt;().unwrap());\n            right_ids.push(ids.next().unwrap().parse::&lt;u32&gt;().unwrap());\n        }\n    \n        //
        part_one(mut left_ids, mut right_ids);\n        part_two(left_ids, right_ids);\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Not
        the prettiest, but it works!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#[allow(dead_code)]\nfn
        part_one(mut left_ids: Vec&amp;lt;u32&amp;gt;, mut right_ids: Vec&amp;lt;u32&amp;gt;)
        {\n    left_ids.sort();\n    right_ids.sort();\n\n    let mut distance = 0;\n\n    for
        pair in left_ids.iter().zip(right_ids.iter()) {\n        distance += pair.0.abs_diff(*pair.1)\n    }\n\n    println!(&amp;quot;Distance:
        {}&amp;quot;, distance);\n}\n\n#[allow(dead_code)]\nfn part_two(left_ids:
        Vec&amp;lt;u32&amp;gt;, right_ids: Vec&amp;lt;u32&amp;gt;) {\n    let mut
        score = 0;\n\n    for id in left_ids {\n        score += id * right_ids.iter().filter(|&amp;amp;right_id|
        *right_id == id).count() as u32;\n    }\n\n    println!(&amp;quot;Score: {}&amp;quot;,
        score);\n}\n\nfn main() {\n    let mut left_ids = Vec::new();\n    let mut
        right_ids = Vec::new();\n\n    for line in std::fs::read_to_string(&amp;quot;input.txt&amp;quot;).unwrap().lines()
        {\n        let mut ids = line.split_whitespace();\n        left_ids.push(ids.next().unwrap().parse::&amp;lt;u32&amp;gt;().unwrap());\n        right_ids.push(ids.next().unwrap().parse::&amp;lt;u32&amp;gt;().unwrap());\n    }\n\n    //
        part_one(mut left_ids, mut right_ids);\n    part_two(left_ids, right_ids);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyxsyp/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyxsyp", "created":
        1733104438.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733105195.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzyzbv8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "thecircleisround",
        "can_mod_post": false, "created_utc": 1733104984.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_dwlo1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nAlmost forgot to do this!\n\n    from aocd import
        get_data\n    \n    data = get_data(day=1, year=2024).split(''\\n'')\n    left
        = sorted([int(x) for y in data for x in y.split()][::2])\n    right = sorted([int(x)
        for y in data for x in y.split()][1::2])\n    \n    print(f''Answer to part
        1: {sum([abs(x-y) for x,y in zip(left,right)])}'')\n    print(f''Answer to
        part 2: {sum([right.count(x)*x for x in left])}'')", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;Almost forgot
        to do this!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from aocd import get_data\n\ndata
        = get_data(day=1, year=2024).split(&amp;#39;\\n&amp;#39;)\nleft = sorted([int(x)
        for y in data for x in y.split()][::2])\nright = sorted([int(x) for y in data
        for x in y.split()][1::2])\n\nprint(f&amp;#39;Answer to part 1: {sum([abs(x-y)
        for x,y in zip(left,right)])}&amp;#39;)\nprint(f&amp;#39;Answer to part 2:
        {sum([right.count(x)*x for x in left])}&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzyzbv8/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzyzbv8", "created":
        1733104984.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzyzbvn", "id": "lzyzbvn", "parent_id":
        "t1_lzyzbv8", "depth": 1, "children": ["lzyzbvn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzz0m22",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "CapricornRaven-777",
        "can_mod_post": false, "created_utc": 1733105445.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_v21iwzps", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Enso\\]\n\n  \nI solved the probelm again using a enso tool\n\n  \n[https://imgur.com/a/9lBz9A9](https://imgur.com/a/9lBz9A9)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Enso]&lt;/p&gt;\n\n&lt;p&gt;I
        solved the probelm again using a enso tool&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://imgur.com/a/9lBz9A9\"&gt;https://imgur.com/a/9lBz9A9&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzz0m22/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzz0m22", "created":
        1733105445.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzz88li",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "earl_linwood",
        "can_mod_post": false, "created_utc": 1733108278.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_ry62bw2mp",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[LANGUAGE: Rust\\]  \n[Solutions for every day](https://github.com/demidko/aoc-2024)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;br/&gt;\n&lt;a
        href=\"https://github.com/demidko/aoc-2024\"&gt;Solutions for every day&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzz88li/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzz88li", "created":
        1733108278.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztz227",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "_rabbitfarm_",
        "can_mod_post": false, "created_utc": 1733031943.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_9igejt8n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Perl\\]\n\nPart 1 [https://adamcrussell.livejournal.com/54907.html](https://adamcrussell.livejournal.com/54907.html)\n\nPart
        2 [https://adamcrussell.livejournal.com/55250.html](https://adamcrussell.livejournal.com/55250.html)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Perl]&lt;/p&gt;\n\n&lt;p&gt;Part
        1 &lt;a href=\"https://adamcrussell.livejournal.com/54907.html\"&gt;https://adamcrussell.livejournal.com/54907.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2 &lt;a href=\"https://adamcrussell.livejournal.com/55250.html\"&gt;https://adamcrussell.livejournal.com/55250.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztz227/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztz227", "created":
        1733031943.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_lztz22k", "id": "lztz22k", "parent_id":
        "t1_lztz227", "depth": 1, "children": ["lztz22k", "lzujau0"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzup0wo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "mstksg",
        "can_mod_post": false, "created_utc": 1733048369.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 3, "author_fullname": "t2_5cbmr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: haskell\\]\n\nDay 1 is always a Haskell warmup :)\n\nOne nice
        way to get both lists is to parse `[(Int, Int)]` and use `unzip :: [(a,b)]
        -&gt; ([a], [b])]`, getting a list of pairs into a pair of lists.\n\nOnce
        we have our two `[Int]`s, part 1 is a zip:\n\n    part1 :: [Int] -&gt; [Int]
        -&gt; Int\n    part1 xs ys = sum $ map abs (zipWith subtract xs ys)\n\nPart
        2 we can build a frequency map and then map a lookup:\n\n    import qualified
        Data.Map as M\n    \n    part2 :: [Int] -&gt; [Int] -&gt; Int\n    part2 xs
        ys = sum $ map (\\x -&gt; x * M.findWithDefault 0 x freqMap) xs\n      where\n        freqMap
        :: M.Map Int Int\n        freqMap = M.fromListWith (+) (map (,1) ys)\n\nMy
        solutions repo is here this year: [https://github.com/mstksg/advent-of-code/wiki/Reflections-2024#day-1](https://github.com/mstksg/advent-of-code/wiki/Reflections-2024#day-1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: haskell]&lt;/p&gt;\n\n&lt;p&gt;Day
        1 is always a Haskell warmup :)&lt;/p&gt;\n\n&lt;p&gt;One nice way to get
        both lists is to parse &lt;code&gt;[(Int, Int)]&lt;/code&gt; and use &lt;code&gt;unzip
        :: [(a,b)] -&amp;gt; ([a], [b])]&lt;/code&gt;, getting a list of pairs into
        a pair of lists.&lt;/p&gt;\n\n&lt;p&gt;Once we have our two &lt;code&gt;[Int]&lt;/code&gt;s,
        part 1 is a zip:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part1 :: [Int] -&amp;gt;
        [Int] -&amp;gt; Int\npart1 xs ys = sum $ map abs (zipWith subtract xs ys)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 we can build a frequency map and then map a lookup:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        qualified Data.Map as M\n\npart2 :: [Int] -&amp;gt; [Int] -&amp;gt; Int\npart2
        xs ys = sum $ map (\\x -&amp;gt; x * M.findWithDefault 0 x freqMap) xs\n  where\n    freqMap
        :: M.Map Int Int\n    freqMap = M.fromListWith (+) (map (,1) ys)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My
        solutions repo is here this year: &lt;a href=\"https://github.com/mstksg/advent-of-code/wiki/Reflections-2024#day-1\"&gt;https://github.com/mstksg/advent-of-code/wiki/Reflections-2024#day-1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzup0wo/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzup0wo", "created":
        1733048369.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztx6do",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "IndieBret",
        "can_mod_post": false, "created_utc": 1733030961.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_j9b0n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: **JavaScript**\\] 858/629\n\n    const pairs = input\n    \t.split(''\\n'')\n    \t.map((line)
        =&gt; line.split(/\\s+/g).map(Number));\n    \n    const list1 = pairs.map(([v])
        =&gt; v).sort((a, b) =&gt; a - b);\n    const list2 = pairs.map(([_, v]) =&gt;
        v).sort((a, b) =&gt; a - b);\n    \n    answers[0] = list1\n    \t.map((v,
        i) =&gt; Math.abs(v - list2[i]))\n    \t.reduce((a, v) =&gt; a + v);\n    answers[1]
        = list1\n    \t.map((v) =&gt; v * list2.filter((o) =&gt; o === v).length)\n    \t.reduce((a,
        v) =&gt; a + v);\n\nA nice easy one to start the year!\n\nAnyone know what''s
        up with \\`qianxyz\\` \"solving\" both parts in 9 seconds on the leaderboard?
        \ud83e\udd14", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        &lt;strong&gt;JavaScript&lt;/strong&gt;] 858/629&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        pairs = input\n    .split(&amp;#39;\\n&amp;#39;)\n    .map((line) =&amp;gt;
        line.split(/\\s+/g).map(Number));\n\nconst list1 = pairs.map(([v]) =&amp;gt;
        v).sort((a, b) =&amp;gt; a - b);\nconst list2 = pairs.map(([_, v]) =&amp;gt;
        v).sort((a, b) =&amp;gt; a - b);\n\nanswers[0] = list1\n    .map((v, i) =&amp;gt;
        Math.abs(v - list2[i]))\n    .reduce((a, v) =&amp;gt; a + v);\nanswers[1]
        = list1\n    .map((v) =&amp;gt; v * list2.filter((o) =&amp;gt; o === v).length)\n    .reduce((a,
        v) =&amp;gt; a + v);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A nice easy one
        to start the year!&lt;/p&gt;\n\n&lt;p&gt;Anyone know what&amp;#39;s up with
        `qianxyz` &amp;quot;solving&amp;quot; both parts in 9 seconds on the leaderboard?
        \ud83e\udd14&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztx6do/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztx6do", "created":
        1733030961.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_lzty26t", "id": "lzty26t", "parent_id":
        "t1_lztx6do", "depth": 1, "children": ["lzty26t", "lztyl3b", "lzty3t4"]}},
        {"kind": "more", "data": {"count": 158, "name": "t1_lzuiprd", "id": "lzuiprd",
        "parent_id": "t3_1h3vp6n", "depth": 0, "children": ["lzuiprd", "lzu6fxr",
        "lzva6dl", "lzulkpq", "lzv1dp2", "lzuywc7", "lzu0iw8", "lzufves", "lzu16p9",
        "lztz5jj", "lztwqd9", "lzv3mfg", "lztyu01", "lztv294", "lzue4xp", "lzudln3",
        "lzuim0s", "lzuzoao", "lzvjwvq", "lzurrr3", "lztzjk2", "lzudkem", "lztxifk",
        "lztx3fc", "lzvljq9", "lzv6h6u", "lzv0jmg", "lzv1l81", "lztwpd7", "lzwf2n3",
        "lzuztdp", "lzur90m", "lzufzih", "lzwlzli", "lzvwbmb", "lzyoaka", "lzwve2u",
        "lzw0bbp", "lzv11tu", "lzv9vah", "lzxped4", "lzuqymy", "lzw590b", "lzw05v2",
        "lzufdi1", "lzvl8xt", "lzw21qf", "lzvbkq0", "lzvny74", "lzw7wbc", "lzv14mo",
        "lzvnk10", "lzvijc3", "lzuuqlz", "lzup10n", "lzuegf5", "lzv1h7j", "lzuiq49",
        "lzwkspk", "lzwcpug", "lzwh5rt", "lzwtcbu", "lzudmaa", "lzxqfih", "lztx0gs",
        "lzx5ew6", "lzuo7jw", "lzuw204", "lzuj683", "lzuduwc", "lzu4jyf", "lzxey3q",
        "lzwp0s1", "lzu257r", "lzvl48t", "lzuksqn", "lzufa75", "lzumhc5", "lzx4yw1",
        "lzwpqqx", "lzu253p", "lzxbuz2", "lzy1ie6", "lzxc1gg", "lzww2ia", "lzv76ku",
        "lzxpqjn", "lzxd4fq"]}}], true]], [0, 12, "attr", "things"], [12, 13, "call",
        ["t1_lzvkpuj"]], [13, 14, "attr", "focus"], [14, 15, "call", []], [0, 16,
        "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr", "filter"],
        [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"], [20, 21,
        "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:43 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:43 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=v5ev0BLI4HOpDr54gJ; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:43 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzuiprd,lzu6fxr,lzva6dl,lzulkpq,lzv1dp2,lzuywc7,lzu0iw8,lzufves,lzu16p9,lztz5jj,lztwqd9,lzv3mfg,lztyu01,lztv294,lzue4xp,lzudln3,lzuim0s,lzuzoao,lzvjwvq,lzurrr3,lztzjk2,lzudkem,lztxifk,lztx3fc,lzvljq9,lzv6h6u,lzv0jmg,lzv1l81,lztwpd7,lzwf2n3,lzuztdp,lzur90m,lzufzih,lzwlzli,lzvwbmb,lzyoaka,lzwve2u,lzw0bbp,lzv11tu,lzv9vah,lzxped4,lzuqymy,lzw590b,lzw05v2,lzufdi1,lzvl8xt,lzw21qf,lzvbkq0,lzvny74,lzw7wbc,lzv14mo,lzvnk10,lzvijc3,lzuuqlz,lzup10n,lzuegf5,lzv1h7j,lzuiq49,lzwkspk,lzwcpug,lzwh5rt,lzwtcbu,lzudmaa,lzxqfih,lztx0gs,lzx5ew6,lzuo7jw,lzuw204,lzuj683,lzuduwc,lzu4jyf,lzxey3q,lzwp0s1,lzu257r,lzvl48t,lzuksqn,lzufa75,lzumhc5,lzx4yw1,lzwpqqx,lzu253p,lzxbuz2,lzy1ie6,lzxc1gg,lzww2ia,lzv76ku,lzxpqjn,lzxd4fq
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '9789'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksempm740.2.1741471483808.Z0FBQUFBQm56TDc4YWdlLU5tTXhyYk96MmZubzhkREZDSlgtZkNrZmdTSHBPQWI0a1JSUGdNUllCOVFsSjBTYUJvV2Z2cU5rYThiYVFrSEdRQlFoX1VHRC1oVS00eU9Kd0RxVHVPMGJyM011SjhwMTZPZDA4a2E4OU9ZaThxeFpBN21MNmVLaXNKRVY;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:44
        GMT; secure, session_tracker=afmgbnlqlocrrohkji.0.1741471483820.Z0FBQUFBQm56TDc4RmJMV0VqalJfd2RVZnNPVG8xWVVONy1lUXMyUVlvVzFVc0xaRnQycmRiOGd4WnI1YzJodnhKcldwSGMxZzV3eGFtclFQRUkyRHk3dlFuSmR3QmVYVkVRUGs1SzBCMDUxVnBhWEliZGJJbXRSNzNyQTJFdjYxaTM3VlVUOWpXQ0E;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:44
        GMT; secure, edgebucket=Gjlj7Pj4jnYR6rCxju; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '10'
      x-ratelimit-remaining:
      - '90.0'
      x-ratelimit-reset:
      - '316'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:44 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu6fxr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "DJTFace",
        "can_mod_post": false, "created_utc": 1733036127.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_lhwznh9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Go\\]\n\n[part one](https://github.com/TimFanelle/AdventOfCode/blob/main/2024/1-partOne.go)\n[part
        two](https://github.com/TimFanelle/AdventOfCode/blob/main/2024/1-partTwo.go)\n\nFirst
        time going deeper into Go than just tutorials so almost definitely not the
        cleanest and almost definitely not using all the tools available.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Go]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/TimFanelle/AdventOfCode/blob/main/2024/1-partOne.go\"&gt;part
        one&lt;/a&gt;\n&lt;a href=\"https://github.com/TimFanelle/AdventOfCode/blob/main/2024/1-partTwo.go\"&gt;part
        two&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;First time going deeper into Go than just
        tutorials so almost definitely not the cleanest and almost definitely not
        using all the tools available.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu6fxr/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzu6fxr", "created": 1733036127.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733044938.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuiprd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "SuperSmurfen",
        "can_mod_post": false, "created_utc": 1733044092.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_5nvuo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\n[Link to full solution](https://github.com/AxlLind/AdventOfCode2024/blob/main/src/bin/01.rs)\n\nAnd
        we''re back! Fun month ahead.\n\nFor part 1: parse the data and split columns
        into two lists that you sort, then just sum the abs difference. [`unzip`](https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.unzip)
        is quite nice here.\n\n    let (mut l1, mut l2): (Vec&lt;_&gt;, Vec&lt;_&gt;)
        = input.split(''\\n'').map(|l| {\n        let (a, b) = l.split_once('' '').unwrap();\n        (a.trim().parse::&lt;i64&gt;().unwrap(),
        b.trim().parse::&lt;i64&gt;().unwrap())\n    }).unzip();\n    l1.sort();\n    l2.sort();\n\n    let
        p1 = l1.iter().zip(&amp;l2).map(|(a, b)| (a - b).abs()).sum();\n\nFor part
        2, I used a hashmap to count the occurences:\n\n    let mut count = HashMap::new();\n    for
        &amp;b in &amp;l2 {\n        *count.entry(b).or_insert(0) += 1;\n    }\n    let
        p2 = l1.iter().map(|&amp;a| a * count.get(&amp;a).unwrap_or(&amp;0)).sum();",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AxlLind/AdventOfCode2024/blob/main/src/bin/01.rs\"&gt;Link
        to full solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;And we&amp;#39;re back! Fun
        month ahead.&lt;/p&gt;\n\n&lt;p&gt;For part 1: parse the data and split columns
        into two lists that you sort, then just sum the abs difference. &lt;a href=\"https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.unzip\"&gt;&lt;code&gt;unzip&lt;/code&gt;&lt;/a&gt;
        is quite nice here.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let (mut l1, mut l2):
        (Vec&amp;lt;_&amp;gt;, Vec&amp;lt;_&amp;gt;) = input.split(&amp;#39;\\n&amp;#39;).map(|l|
        {\n    let (a, b) = l.split_once(&amp;#39; &amp;#39;).unwrap();\n    (a.trim().parse::&amp;lt;i64&amp;gt;().unwrap(),
        b.trim().parse::&amp;lt;i64&amp;gt;().unwrap())\n}).unzip();\nl1.sort();\nl2.sort();\n\nlet
        p1 = l1.iter().zip(&amp;amp;l2).map(|(a, b)| (a - b).abs()).sum();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For
        part 2, I used a hashmap to count the occurences:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        mut count = HashMap::new();\nfor &amp;amp;b in &amp;amp;l2 {\n    *count.entry(b).or_insert(0)
        += 1;\n}\nlet p2 = l1.iter().map(|&amp;amp;a| a * count.get(&amp;amp;a).unwrap_or(&amp;amp;0)).sum();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuiprd/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuiprd", "created":
        1733044092.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733046408.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzulkpq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "aBMania",
        "can_mod_post": false, "created_utc": 1733046033.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_et1e5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\nhttps://github.com/aBMania/advent-of-code-2024/blob/main/src/bin/01.rs\n\nPart
        1: 158.4\u00b5s @ 2350 samples\n\nPart 2: 221.9\u00b5s @ 3132 samples", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/aBMania/advent-of-code-2024/blob/main/src/bin/01.rs\"&gt;https://github.com/aBMania/advent-of-code-2024/blob/main/src/bin/01.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1: 158.4\u00b5s @ 2350 samples&lt;/p&gt;\n\n&lt;p&gt;Part 2: 221.9\u00b5s
        @ 3132 samples&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzulkpq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzulkpq", "created":
        1733046033.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733055603.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuywc7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Bluefizzy363725",
        "can_mod_post": false, "created_utc": 1733054817.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_utnopf2y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[AOC2024/AOC2024/day1.py at master \u00b7 Bluefizzy363725/AOC2024](https://github.com/Bluefizzy363725/AOC2024/blob/master/AOC2024/day1.py)\n\n  \nEdit:
        Still learning so code is far from good but nonetheless works.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Bluefizzy363725/AOC2024/blob/master/AOC2024/day1.py\"&gt;AOC2024/AOC2024/day1.py
        at master \u00b7 Bluefizzy363725/AOC2024&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        Still learning so code is far from good but nonetheless works.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuywc7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuywc7", "created":
        1733054817.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv1dp2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Siddhu33",
        "can_mod_post": false, "created_utc": 1733056246.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_c1gwc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[https://github.com/siddhu33/advent2024/blob/master/src/day1/mod.rs](https://github.com/siddhu33/advent2024/blob/master/src/day1/mod.rs)\n\nGod
        knows if this is the best way or not, but I''m just a little Rusty :P", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/siddhu33/advent2024/blob/master/src/day1/mod.rs\"&gt;https://github.com/siddhu33/advent2024/blob/master/src/day1/mod.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;God
        knows if this is the best way or not, but I&amp;#39;m just a little Rusty
        :P&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv1dp2/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv1dp2", "created":
        1733056246.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733060957.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzva6dl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "ai_prof",
        "can_mod_post": false, "created_utc": 1733060557.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 2, "author_fullname": "t2_5wvmt0jg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nA lovely, gentle start. First put the data into
        two lists of integers, left and right, then Part 1 is\n\n`sum(abs(l-r) for
        (l,r) in zip(left,right))`\n\nand Part 2 is\n\n`sum([l * len([r for r in right
        if r == l]) for l in left])`\n\n(or a loop or two - but love those list comprehensions
        :).\n\n[Click here for the code.](https://topaz.github.io/paste/#XQAAAQBUAQAAAAAAAAA2G8iOdDvX2ANZp+1QzxQGbZUvtJC7oSvB7zmym+LdUODT/aR1yzEPopcpC8HMlZ/1qOVb0/NM2yWHFmJ9yLyqAGU7JSxYYc8hrv4hglyVYEq7/sn33hiDlD5+gRChVUagSi+ZdDuXJp7SSBxxyfnR50VTrfFHutzETOIGc81roB/OSXWOMFWpY/17xSheyMjHcL03LfRsyTX8xmTZ+2yGRwduyH1dxdGesYmnPbgyKtwHsujP58scPEVAAoH3NU9FMoqkIpojYj7ZEzH18MZW//ZVMU4=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;A
        lovely, gentle start. First put the data into two lists of integers, left
        and right, then Part 1 is&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sum(abs(l-r) for
        (l,r) in zip(left,right))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;and Part 2 is&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sum([l
        * len([r for r in right if r == l]) for l in left])&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;(or
        a loop or two - but love those list comprehensions :).&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBUAQAAAAAAAAA2G8iOdDvX2ANZp+1QzxQGbZUvtJC7oSvB7zmym+LdUODT/aR1yzEPopcpC8HMlZ/1qOVb0/NM2yWHFmJ9yLyqAGU7JSxYYc8hrv4hglyVYEq7/sn33hiDlD5+gRChVUagSi+ZdDuXJp7SSBxxyfnR50VTrfFHutzETOIGc81roB/OSXWOMFWpY/17xSheyMjHcL03LfRsyTX8xmTZ+2yGRwduyH1dxdGesYmnPbgyKtwHsujP58scPEVAAoH3NU9FMoqkIpojYj7ZEzH18MZW//ZVMU4=\"&gt;Click
        here for the code.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzva6dl/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzva6dl", "created":
        1733060557.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzveu3c",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "MariaKeks",
        "can_mod_post": false, "created_utc": 1733062524.0, "send_replies": true,
        "parent_id": "t1_lzva6dl", "score": 2, "author_fullname": "t2_1a26pmhglp",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "Note you don''t need to materialize the lists in part 2. A
        generator expression suffices:\n\n    print(\"Stage 2 total: \", sum(l * sum(r
        == l for r in right) for l in left))\n\nBut note that Python also has a list
        method called count, which allows further simplifying to:\n\n    print(\"Stage
        2 total: \", sum(l * right.count(l) for l in left))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Note you don&amp;#39;t need to materialize the lists
        in part 2. A generator expression suffices:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(&amp;quot;Stage
        2 total: &amp;quot;, sum(l * sum(r == l for r in right) for l in left))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But
        note that Python also has a list method called count, which allows further
        simplifying to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(&amp;quot;Stage
        2 total: &amp;quot;, sum(l * right.count(l) for l in left))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzveu3c/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzveu3c", "created":
        1733062524.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_m01jw7m", "id": "m01jw7m", "parent_id":
        "t1_lzveu3c", "depth": 2, "children": ["m01jw7m"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733072965.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztyu01", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "x3mcj",
        "can_mod_post": false, "created_utc": 1733031827.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_6bvqzpb1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Python\\]\n\nretaking python, so my solution might be crude,
        but working. hopefully i''ll look into other Python solution to improve myself\n\n[https://github.com/CJX3M/AdventOfCode/blob/master/2024/day1.py](https://github.com/CJX3M/AdventOfCode/blob/master/2024/day1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Python]&lt;/p&gt;\n\n&lt;p&gt;retaking
        python, so my solution might be crude, but working. hopefully i&amp;#39;ll
        look into other Python solution to improve myself&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/CJX3M/AdventOfCode/blob/master/2024/day1.py\"&gt;https://github.com/CJX3M/AdventOfCode/blob/master/2024/day1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztyu01/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztyu01", "created":
        1733031827.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztyu0g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733031827.0, "send_replies": false,
        "parent_id": "t1_lztyu01", "score": 1, "author_fullname": "t2_6l4z3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required &lt;code&gt;[LANGUAGE:
        xyz]&lt;/code&gt; string literal at the beginning of your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your comment to &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztyu0g/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztyu0g", "created":
        1733031827.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_1h3vp6n",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "lztz5jj", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": false, "collapsed_reason_code": "DELETED",
        "no_follow": false, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_1h3vp6n", "score": 1, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "[deleted]",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_lztz5jj",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztz5jj/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733031994.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733031994.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu0iw8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzu0iw8", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu0iw8/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733032731.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733032731.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1739679335.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu16p9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "NeonGamerBot",
        "can_mod_post": false, "created_utc": 1733033093.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_e1tkc4ch7",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": " [LANGUAGE: JAVASCRIPT]\n\nfirst time :D\nhttps://github.com/NeonGamerBot-QK/advent-of-code-2024/blob/master/days/1/code.js",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JAVASCRIPT]&lt;/p&gt;\n\n&lt;p&gt;first
        time :D\n&lt;a href=\"https://github.com/NeonGamerBot-QK/advent-of-code-2024/blob/master/days/1/code.js\"&gt;https://github.com/NeonGamerBot-QK/advent-of-code-2024/blob/master/days/1/code.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu16p9/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu16p9", "created":
        1733033093.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu16pm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733033093.0, "send_replies": false,
        "parent_id": "t1_lzu16p9", "score": 1, "author_fullname": "t2_6l4z3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required &lt;code&gt;[LANGUAGE:
        xyz]&lt;/code&gt; string literal at the beginning of your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your comment to &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu16pm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu16pm", "created":
        1733033093.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu2rsv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733033987.0, "send_replies": true,
        "parent_id": "t1_lzu16p9", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Welcome!  Please [read the rules for posting in megathreads](https://old.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29)
        and fix your language string:\n\n&gt; - Use the full name of the language
        e.g. `JavaScript` not just `JS`", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Welcome!  Please
        &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;read
        the rules for posting in megathreads&lt;/a&gt; and fix your language string:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;ul&gt;\n&lt;li&gt;Use
        the full name of the language e.g. &lt;code&gt;JavaScript&lt;/code&gt; not
        just &lt;code&gt;JS&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu2rsv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu2rsv", "created":
        1733033987.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_1h3vp6n",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "lzudkem", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": false, "collapsed_reason_code": "DELETED",
        "no_follow": false, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_1h3vp6n", "score": 1, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "[deleted]",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_lzudkem",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzudkem/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733040645.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733040645.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzufdi1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzufdi1", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzufdi1/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733041838.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733041838.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzufzih", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzufzih", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzufzih/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733042245.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733042245.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuhgdb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733043237.0, "send_replies": true,
        "parent_id": "t1_lzufzih", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Do not share your puzzle input](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        which also means [do not commit puzzle inputs to your repo](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        without a `.gitignore` or the like.\n\nPlease remove (or .gitignore) all puzzle
        input files from your repo and scrub them from your commit history.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;Do
        not share your puzzle input&lt;/a&gt; which also means &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not commit puzzle inputs to your repo&lt;/a&gt; without a &lt;code&gt;.gitignore&lt;/code&gt;
        or the like.&lt;/p&gt;\n\n&lt;p&gt;Please remove (or .gitignore) all puzzle
        input files from your repo and scrub them from your commit history.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuhgdb/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuhgdb", "created":
        1733043237.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_1h3vp6n",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "lzuim0s", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": false, "collapsed_reason_code": "DELETED",
        "no_follow": false, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_1h3vp6n", "score": 1, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "[deleted]",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_lzuim0s",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuim0s/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733044021.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733044021.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuim19",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733044021.0, "send_replies": false,
        "parent_id": "t1_lzuim0s", "score": 1, "author_fullname": "t2_6l4z3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required &lt;code&gt;[LANGUAGE:
        xyz]&lt;/code&gt; string literal at the beginning of your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your comment to &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuim19/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuim19", "created":
        1733044021.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_1h3vp6n",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "lzup10n", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": false, "collapsed_reason_code": "DELETED",
        "no_follow": false, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_1h3vp6n", "score": 1, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "[deleted]",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_lzup10n",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzup10n/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733048372.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733048372.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzup10s", "id": "lzup10s", "parent_id":
        "t1_lzup10n", "depth": 1, "children": ["lzup10s"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuuqlz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzuuqlz", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuuqlz/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733052209.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733052209.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv3mfg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Eric_HH",
        "can_mod_post": false, "created_utc": 1733057467.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_k24dpe32", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\n[Aoc2024/Day1/HistorianHysteria.ipynb at main \u00b7
        yiruiHH/Aoc2024](https://github.com/yiruiHH/Aoc2024/blob/main/Day1/HistorianHysteria.ipynb)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/yiruiHH/Aoc2024/blob/main/Day1/HistorianHysteria.ipynb\"&gt;Aoc2024/Day1/HistorianHysteria.ipynb
        at main \u00b7 yiruiHH/Aoc2024&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv3mfg/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzv3mfg", "created": 1733057467.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvbdjs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Oryphax",
        "can_mod_post": false, "created_utc": 1733061079.0, "send_replies": true,
        "parent_id": "t1_lzv3mfg", "score": 5, "author_fullname": "t2_yg060", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Just a heads up, you''re not supposed to share your input file\n\nhttps://adventofcode.com/2024/about",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just a heads up, you&amp;#39;re
        not supposed to share your input file&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://adventofcode.com/2024/about\"&gt;https://adventofcode.com/2024/about&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvbdjs/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvbdjs", "created":
        1733061079.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx9c80",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733084093.0, "send_replies": true,
        "parent_id": "t1_lzv3mfg", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "/u/Oryphax is correct - [do not share your puzzle input](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        which also means [do not commit puzzle inputs to your repo](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        without a `.gitignore` or the like.  [Do not share the puzzle text](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts)
        either.\n\nPlease remove (or .gitignore) all puzzle text and puzzle input
        files from your repo and scrub them from your commit history.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"/u/Oryphax\"&gt;/u/Oryphax&lt;/a&gt;
        is correct - &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not share your puzzle input&lt;/a&gt; which also means &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not commit puzzle inputs to your repo&lt;/a&gt; without a &lt;code&gt;.gitignore&lt;/code&gt;
        or the like.  &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts\"&gt;Do
        not share the puzzle text&lt;/a&gt; either.&lt;/p&gt;\n\n&lt;p&gt;Please remove
        (or .gitignore) all puzzle text and puzzle input files from your repo and
        scrub them from your commit history.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx9c80/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzx9c80", "created": 1733084093.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzv6h6u", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "CodingTaitep",
        "can_mod_post": false, "created_utc": 1733058885.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_j0l7u8ss", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Python\\]\n\nyes i know its part 1 when i made the file i misremembered
        it as part a and b\n\n[https://github.com/taitep/aoc/tree/main/2024/day01](https://github.com/taitep/aoc/tree/main/2024/day01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python]&lt;/p&gt;\n\n&lt;p&gt;yes
        i know its part 1 when i made the file i misremembered it as part a and b&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/taitep/aoc/tree/main/2024/day01\"&gt;https://github.com/taitep/aoc/tree/main/2024/day01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv6h6u/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv6h6u", "created":
        1733058885.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvay29",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Oryphax",
        "can_mod_post": false, "created_utc": 1733060893.0, "send_replies": true,
        "parent_id": "t1_lzv6h6u", "score": 2, "author_fullname": "t2_yg060", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Just a heads up, you''re not supposed to share your input file\n\nhttps://adventofcode.com/2024/about",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just a heads up, you&amp;#39;re
        not supposed to share your input file&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://adventofcode.com/2024/about\"&gt;https://adventofcode.com/2024/about&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvay29/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvay29", "created":
        1733060893.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzvdk4h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "CodingTaitep",
        "can_mod_post": false, "created_utc": 1733061997.0, "send_replies": true,
        "parent_id": "t1_lzvay29", "score": 3, "author_fullname": "t2_j0l7u8ss", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "ok thank you, ill fix it as soon as I''m at my pc again", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;ok thank you, ill fix it as soon as I&amp;#39;m
        at my pc again&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvdk4h/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzvdk4h", "created":
        1733061997.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzx8sdd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733083925.0, "send_replies": true,
        "parent_id": "t1_lzv6h6u", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "/u/Oryphax is correct - [do not share your puzzle input](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        which also means [do not commit puzzle inputs to your repo](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        without a `.gitignore` or the like.  [Do not share the puzzle text](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts)
        either.\n\nPlease remove (or .gitignore) all puzzle text and puzzle input
        files from your repo and scrub them from your commit history.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"/u/Oryphax\"&gt;/u/Oryphax&lt;/a&gt;
        is correct - &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not share your puzzle input&lt;/a&gt; which also means &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not commit puzzle inputs to your repo&lt;/a&gt; without a &lt;code&gt;.gitignore&lt;/code&gt;
        or the like.  &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts\"&gt;Do
        not share the puzzle text&lt;/a&gt; either.&lt;/p&gt;\n\n&lt;p&gt;Please remove
        (or .gitignore) all puzzle text and puzzle input files from your repo and
        scrub them from your commit history.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx8sdd/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzx8sdd", "created": 1733083925.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxb9e7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "CodingTaitep",
        "can_mod_post": false, "created_utc": 1733084677.0, "send_replies": true,
        "parent_id": "t1_lzx8sdd", "score": 2, "author_fullname": "t2_j0l7u8ss", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Does this also include the examlple input file? I have cleared out main input
        and puzzle description.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Does
        this also include the examlple input file? I have cleared out main input and
        puzzle description.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxb9e7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxb9e7", "created":
        1733084677.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxcol9", "id": "lzxcol9", "parent_id":
        "t1_lzxb9e7", "depth": 3, "children": ["lzxcol9"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzv9vah", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzv9vah", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv9vah/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733060424.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733060424.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvl8xt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzvl8xt", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvl8xt/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733065050.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733065050.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzvljq9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzvljq9", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzvljq9/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733065162.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733065162.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzw0bbp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzw0bbp", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw0bbp/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733070247.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733070247.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzw590b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzw590b", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw590b/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733071850.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733071850.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733073721.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzw7wbc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "Snoo58183",
        "can_mod_post": false, "created_utc": 1733072672.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_71rohpcn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "languge: python  \n  \nUsing numpy like a BOSS  \n(you need to replaced three
        space with one)\n\n    inp = Path(\"inp.txt\").read_text()\n    lines = inp.split(\"\\n\")\n    inp_arr
        = np.array([l.split() for l in lines],dtype=int)\n    L,R = inp_arr.T\n    #
        part-1\n    L.sort()\n    R.sort()\n    print(np.abs(L==R).sum())\n    # part-2\n    print((L*(L[:,None]
        == R[None,:]).sum(1)).sum())", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;languge:
        python  &lt;/p&gt;\n\n&lt;p&gt;Using numpy like a BOSS&lt;br/&gt;\n(you need
        to replaced three space with one)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;inp
        = Path(&amp;quot;inp.txt&amp;quot;).read_text()\nlines = inp.split(&amp;quot;\\n&amp;quot;)\ninp_arr
        = np.array([l.split() for l in lines],dtype=int)\nL,R = inp_arr.T\n# part-1\nL.sort()\nR.sort()\nprint(np.abs(L==R).sum())\n#
        part-2\nprint((L*(L[:,None] == R[None,:]).sum(1)).sum())\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzw7wbc/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzw7wbc", "created":
        1733072672.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzw7wc4", "id": "lzw7wc4", "parent_id":
        "t1_lzw7wbc", "depth": 1, "children": ["lzw7wc4", "lzxkk0g"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733149357.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwcpug", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzwcpug", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwcpug/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733074187.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733074187.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_lzwcpvq", "id": "lzwcpvq", "parent_id":
        "t1_lzwcpug", "depth": 1, "children": ["lzwcpvq", "lzwcpwk", "lzx3ykg"]}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_1h3vp6n",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "lzwf2n3", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": false, "collapsed_reason_code": "DELETED",
        "no_follow": false, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_1h3vp6n", "score": 1, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "[deleted]",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_lzwf2n3",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwf2n3/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733074907.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733074907.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzwf2pu", "id": "lzwf2pu", "parent_id":
        "t1_lzwf2n3", "depth": 1, "children": ["lzwf2pu", "lzx3jsp"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwkspk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzwkspk", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwkspk/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733076659.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733076659.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzwksqe", "id": "lzwksqe", "parent_id":
        "t1_lzwkspk", "depth": 1, "children": ["lzwksqe"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwlzli", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzwlzli", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwlzli/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733077020.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733077020.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzwlzmf", "id": "lzwlzmf", "parent_id":
        "t1_lzwlzli", "depth": 1, "children": ["lzwlzmf"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733091292.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwpqqx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzwpqqx", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwpqqx/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733078162.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733078162.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_lzwqy1x", "id": "lzwqy1x", "parent_id":
        "t1_lzwpqqx", "depth": 1, "children": ["lzwqy1x", "lzx0mu7"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwtcbu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzwtcbu", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwtcbu/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733079251.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733079251.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwzv81",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733081207.0, "send_replies": true,
        "parent_id": "t1_lzwtcbu", "score": 3, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "The triple-backticks code fence (`` `\u200b`\u200b` ``) only works on new.reddit.  Please
        edit your comment to use the [four-spaces Markdown syntax](https://old.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks)
        for a code block so your code is easier to read inside a scrollable box that
        preserves whitespace and indentation.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;The triple-backticks code fence (&lt;code&gt;`\u200b`\u200b`&lt;/code&gt;)
        only works on new.reddit.  Please edit your comment to use the &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a scrollable box that preserves whitespace and indentation.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwzv81/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwzv81", "created":
        1733081207.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 1, "name": "t1_lzwtccr", "id": "lzwtccr",
        "parent_id": "t1_lzwtcbu", "depth": 1, "children": ["lzwtccr"]}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxc1gg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzxc1gg", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxc1gg/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733084919.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733084919.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxf9dh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1733085916.0, "send_replies": true,
        "parent_id": "t1_lzxc1gg", "score": 3, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "How does that work? I can''t see any `ORDER BY ID ASC` which would sort the
        lists, and they don''t seem to be sorted?", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;How does that work? I can&amp;#39;t see any &lt;code&gt;ORDER
        BY ID ASC&lt;/code&gt; which would sort the lists, and they don&amp;#39;t
        seem to be sorted?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxf9dh/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxf9dh", "created":
        1733085916.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxfbgv", "id": "lzxfbgv", "parent_id":
        "t1_lzxf9dh", "depth": 2, "children": ["lzxfbgv"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_lzxioxm", "id": "lzxioxm", "parent_id": "t1_lzxc1gg",
        "depth": 1, "children": ["lzxioxm"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxd4fq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "pipdibble",
        "can_mod_post": false, "created_utc": 1733085257.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_e52h3rrx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]  \nMy first Advent of Code!  \n[https://github.com/pipdibble/aoc2024/tree/main/day01](https://github.com/pipdibble/aoc2024/tree/main/day01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;br/&gt;\nMy
        first Advent of Code!&lt;br/&gt;\n&lt;a href=\"https://github.com/pipdibble/aoc2024/tree/main/day01\"&gt;https://github.com/pipdibble/aoc2024/tree/main/day01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxd4fq/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxd4fq", "created":
        1733085257.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxlarn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "JustLikeHomelander",
        "can_mod_post": false, "created_utc": 1733087755.0, "send_replies": true,
        "parent_id": "t1_lzxd4fq", "score": 3, "author_fullname": "t2_tbi1f6cq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "In part 2 you can use a number that you keep increasing instead of a list
        that you have to reduce", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In
        part 2 you can use a number that you keep increasing instead of a list that
        you have to reduce&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxlarn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxlarn", "created":
        1733087755.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxhp3f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733086650.0, "send_replies": true,
        "parent_id": "t1_lzxd4fq", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; My first Advent of Code!\n\nWelcome!  We''re happy to have you!\n\n---\n\nFYI:
        [Do not share your puzzle input](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        which also means [do not commit puzzle inputs to your repo](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs)
        without a `.gitignore` or the like.  [Do not share the puzzle text](https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts)
        either.\n\nPlease remove (or .gitignore) all puzzle text and puzzle input
        files from your repo and scrub them from your commit history.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;My first Advent of Code!&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Welcome!  We&amp;#39;re
        happy to have you!&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;FYI: &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;Do
        not share your puzzle input&lt;/a&gt; which also means &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/inputs\"&gt;do
        not commit puzzle inputs to your repo&lt;/a&gt; without a &lt;code&gt;.gitignore&lt;/code&gt;
        or the like.  &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/copyright/puzzle_texts\"&gt;Do
        not share the puzzle text&lt;/a&gt; either.&lt;/p&gt;\n\n&lt;p&gt;Please remove
        (or .gitignore) all puzzle text and puzzle input files from your repo and
        scrub them from your commit history.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxhp3f/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzxhp3f", "created": 1733086650.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 1, "name": "t1_lzxkkrx", "id": "lzxkkrx",
        "parent_id": "t1_lzxd4fq", "depth": 1, "children": ["lzxkkrx"]}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxey3q", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzxey3q", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxey3q/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733085823.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733085823.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxey4r", "id": "lzxey4r", "parent_id":
        "t1_lzxey3q", "depth": 1, "children": ["lzxey4r"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_1h3vp6n", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzxpqjn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_1h3vp6n", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_lzxpqjn", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxpqjn/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733089167.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733089167.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_lzxpqkb", "id": "lzxpqkb", "parent_id":
        "t1_lzxpqjn", "depth": 1, "children": ["lzxpqkb"]}}, {"kind": "more", "data":
        {"count": 37, "name": "t1_lzudmaa", "id": "lzudmaa", "parent_id": "t3_1h3vp6n",
        "depth": 0, "children": ["lzudmaa", "lzuiq49", "lzu257r", "lztx0gs", "lzu4jyf",
        "lzwp0s1", "lzuksqn", "lzuw204", "lzumhc5", "lzufa75", "lzwh5rt", "lzv1h7j",
        "lzuduwc", "lzuegf5", "lzu253p", "lzuj683", "lzuo7jw"]}}], true]], [0, 12,
        "attr", "things"], [12, 13, "call", ["t1_lzu6fxr"]], [13, 14, "attr", "focus"],
        [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call", ["None"]],
        [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]], [19, 20,
        "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:44 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:44 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=RXZnlvlHXie0SpmHSl; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:44 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzudmaa,lzuiq49,lzu257r,lztx0gs,lzu4jyf,lzwp0s1,lzuksqn,lzuw204,lzumhc5,lzufa75,lzwh5rt,lzv1h7j,lzuduwc,lzuegf5,lzu253p,lzuj683,lzuo7jw
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '10681'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksemppwly.2.1741471484427.Z0FBQUFBQm56TDc4SU9jNWpyYkhpYmlyOVVNNnA4V1E2eEVjaG5WS0pCV0hfZDZSdUZwTDhTN0ZyTXhMcGNHampUMXpXaGstdmJ3UkJTQmQ4alFQT3VwSXNoYnFES2NjcnJYWDlEbDVBaUVQYUMydXVxQVFQNUlZR0loNEhFc2d5R2pFUW9NOUswZHk;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:44
        GMT; secure, session_tracker=haodgbcnkcflbndbnl.0.1741471484437.Z0FBQUFBQm56TDc4QXZ3aFEwUTBtMFZaUTVsWXZYWTJYbFdmTUYyVVZzUUR3U1poOENIdVFPMllhQnkzWDhseWNiVkRjTHpkaE95anpfZnlqbFF4Rnh5ek5IRzRaQVZzQll1eEkwYTIyd3h1ekFRb21kdHBnVE5LYW9RYUJfTFhfVUFudURCTGp1VDA;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:44
        GMT; secure, edgebucket=kYVhUurSI5Yco5efFD; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '11'
      x-ratelimit-remaining:
      - '89.0'
      x-ratelimit-reset:
      - '315'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:44 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733031152.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lztx0gs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "thekwoka",
        "can_mod_post": false, "created_utc": 1733030877.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_w1eg5d2h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Rust]\n\nQuick and filthy Rust solution\n\nhttps://github.com/ekwoka/advent-of-code/blob/main/2024/01/main.rs\n\nI
        almost started to optimize part 2 to like, count the numbers in a way that
        is cached and memoized as it went, then I was like \"screw that\" and just
        do a brute force search to count for each, and it was faster than part one
        as is.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;Quick and filthy Rust solution&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ekwoka/advent-of-code/blob/main/2024/01/main.rs\"&gt;https://github.com/ekwoka/advent-of-code/blob/main/2024/01/main.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        almost started to optimize part 2 to like, count the numbers in a way that
        is cached and memoized as it went, then I was like &amp;quot;screw that&amp;quot;
        and just do a brute force search to count for each, and it was faster than
        part one as is.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztx0gs/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztx0gs", "created":
        1733030877.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lztx0h9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733030877.0, "send_replies": false,
        "parent_id": "t1_lztx0gs", "score": 1, "author_fullname": "t2_6l4z3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required &lt;code&gt;[LANGUAGE:
        xyz]&lt;/code&gt; string literal at the beginning of your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your comment to &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lztx0h9/",
        "subreddit_type": "public", "locked": false, "name": "t1_lztx0h9", "created":
        1733030877.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzu1xyp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "wjholden",
        "can_mod_post": false, "created_utc": 1733033514.0, "send_replies": true,
        "parent_id": "t1_lztx0gs", "score": 1, "author_fullname": "t2_pbiewcp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ugh, I haven''t learned regular expressions in Rust yet. Looks like it''s
        going to take some effort to master.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Ugh, I haven&amp;#39;t learned regular expressions
        in Rust yet. Looks like it&amp;#39;s going to take some effort to master.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu1xyp/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu1xyp", "created":
        1733033514.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzzyxn7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "thekwoka",
        "can_mod_post": false, "created_utc": 1733120382.0, "send_replies": true,
        "parent_id": "t1_lzu1xyp", "score": 1, "author_fullname": "t2_w1eg5d2h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "It''s not unlike normal regex.\n\nBut yeah like captures captures iter...lifespane
        of the captures against the initial value, etc.\n\nHere apparently split_whitespace
        would be better. I just was going quick and also didn''t know if the whitespace
        gap would be constant size. So regex is sensible.\n\nAnd so many problems
        will benefit a \"get all numbers\" regex so it''s useful to refresh.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s not unlike normal regex.&lt;/p&gt;\n\n&lt;p&gt;But
        yeah like captures captures iter...lifespane of the captures against the initial
        value, etc.&lt;/p&gt;\n\n&lt;p&gt;Here apparently split_whitespace would be
        better. I just was going quick and also didn&amp;#39;t know if the whitespace
        gap would be constant size. So regex is sensible.&lt;/p&gt;\n\n&lt;p&gt;And
        so many problems will benefit a &amp;quot;get all numbers&amp;quot; regex
        so it&amp;#39;s useful to refresh.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzzyxn7/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzzyxn7", "created": 1733120382.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu253p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "MizKyosia",
        "can_mod_post": false, "created_utc": 1733033625.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_e9wlmdje", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[Language: Rust\\] \\\n[Code on GitHub](https://github.com/mizkyosia/aoc2024/blob/master/src/calendar/day1.rs)
        \\\nTime : ~10.157691ms (varying)\n\nA tad slow, but still a pretty good time
        overall. \\\nA performance issue could come from the fact that the program
        creates a `Vec` of `Vec`s while parsing the data, or from the rather naive
        implementation of the part 2 solver\n\nI tried to add some caching of the
        values for the 2nd part, but it seemed to only slow down the process, so i
        dropped it", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language:
        Rust] \\\n&lt;a href=\"https://github.com/mizkyosia/aoc2024/blob/master/src/calendar/day1.rs\"&gt;Code
        on GitHub&lt;/a&gt; \\\nTime : ~10.157691ms (varying)&lt;/p&gt;\n\n&lt;p&gt;A
        tad slow, but still a pretty good time overall. \\\nA performance issue could
        come from the fact that the program creates a &lt;code&gt;Vec&lt;/code&gt;
        of &lt;code&gt;Vec&lt;/code&gt;s while parsing the data, or from the rather
        naive implementation of the part 2 solver&lt;/p&gt;\n\n&lt;p&gt;I tried to
        add some caching of the values for the 2nd part, but it seemed to only slow
        down the process, so i dropped it&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu253p/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzu253p", "created": 1733033625.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuh7tv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "hgwxx7_",
        "can_mod_post": false, "created_utc": 1733043078.0, "send_replies": true,
        "parent_id": "t1_lzu253p", "score": 1, "author_fullname": "t2_7ukhi4zx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "If you''re looking for a way to speed it up, \n\n- `sort_unstable()` is faster
        than `sort()`.\n- running in `--release` mode, if you weren''t already.\n-
        Caching the counts for the second does help IMO. If you like I could take
        a look at your code.\n\nMy solutions completed in 54\u03bcs and 76\u03bcs.
        Not the fastest by any means, but it shows that Rust can be faster.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re looking for a way to speed
        it up, &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;sort_unstable()&lt;/code&gt;
        is faster than &lt;code&gt;sort()&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;running
        in &lt;code&gt;--release&lt;/code&gt; mode, if you weren&amp;#39;t already.&lt;/li&gt;\n&lt;li&gt;Caching
        the counts for the second does help IMO. If you like I could take a look at
        your code.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;My solutions completed in 54\u03bcs
        and 76\u03bcs. Not the fastest by any means, but it shows that Rust can be
        faster.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuh7tv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuh7tv", "created":
        1733043078.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzudmaa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "dhruvmanila",
        "can_mod_post": false, "created_utc": 1733040679.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_9a2ym6n8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\nGitHub link: https://github.com/dhruvmanila/advent-of-code/blob/master/rust/crates/year2024/src/day01.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;GitHub
        link: &lt;a href=\"https://github.com/dhruvmanila/advent-of-code/blob/master/rust/crates/year2024/src/day01.rs\"&gt;https://github.com/dhruvmanila/advent-of-code/blob/master/rust/crates/year2024/src/day01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzudmaa/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzudmaa", "created":
        1733040679.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuduwc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "nilgoun",
        "can_mod_post": false, "created_utc": 1733040834.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_50n9zz22", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\nNice starting problem! \n\nPretty standard solution
        I guess. Would have loved coming out without collecting at any point but oh
        well. Have not used a frequency map because in my rudimentary measurements
        it was slower than just filtering again and again.\n\n[Solution on paste](https://topaz.github.io/paste/#XQAAAQBABAAAAAAAAAA6nMjJFD6Qz6l42wPnwN2pT342vOnq8+8016BvPrIGSh3hgRL1rVXs9vcAwLUQYK6raIMjhreK7y4HTLPFDaGaNuYW0vcVz+r8K5jYao+OOtHgW4LWPTaFMo69lCmrBmuwk/QAnvWMihZ02bFKD5J1SfNQb5nwmx6WPJ/RST5MM17qK42a9rHNNz8w1HBSOmerPpaQDFYVPazbpw9qC4J893rJ2G7rcjw39k9DoJfJn5NdzXpNgevWNkGinB+8GLThWO07o96MJPZeW49solJioUTJolqyZiX3aApSqlOUhOD/DCjxFpAJZyFh8fDC0aPeLGPPuxY6a6vtJhjVn+YKteLqSSiX8pz/ZT6B86HKNJL/gs1kv16C6xqB+H7w8v6vhkMjb140QjYe/M1YtYSl9Lavq1TcB3AHBHYNr3dfKVY9I+DdTfbQQuO5X+4eDsGzqe4d+hE3o6icbn/oOxhhucxbJuMNX77NokwivLIgclRA7BH1eLXlakU70wMeGRq+8I/UGHGIG+AbcJZaIImnSa833pmjlom65W9fbCVmoVAf3A347y/3q2qWPpAbEy42/Su+AqBdqly6OspEJ2RuvWcVltcp8K4UaF4+gxZT0bLgtfFB/8U7sVw=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;Nice
        starting problem! &lt;/p&gt;\n\n&lt;p&gt;Pretty standard solution I guess.
        Would have loved coming out without collecting at any point but oh well. Have
        not used a frequency map because in my rudimentary measurements it was slower
        than just filtering again and again.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBABAAAAAAAAAA6nMjJFD6Qz6l42wPnwN2pT342vOnq8+8016BvPrIGSh3hgRL1rVXs9vcAwLUQYK6raIMjhreK7y4HTLPFDaGaNuYW0vcVz+r8K5jYao+OOtHgW4LWPTaFMo69lCmrBmuwk/QAnvWMihZ02bFKD5J1SfNQb5nwmx6WPJ/RST5MM17qK42a9rHNNz8w1HBSOmerPpaQDFYVPazbpw9qC4J893rJ2G7rcjw39k9DoJfJn5NdzXpNgevWNkGinB+8GLThWO07o96MJPZeW49solJioUTJolqyZiX3aApSqlOUhOD/DCjxFpAJZyFh8fDC0aPeLGPPuxY6a6vtJhjVn+YKteLqSSiX8pz/ZT6B86HKNJL/gs1kv16C6xqB+H7w8v6vhkMjb140QjYe/M1YtYSl9Lavq1TcB3AHBHYNr3dfKVY9I+DdTfbQQuO5X+4eDsGzqe4d+hE3o6icbn/oOxhhucxbJuMNX77NokwivLIgclRA7BH1eLXlakU70wMeGRq+8I/UGHGIG+AbcJZaIImnSa833pmjlom65W9fbCVmoVAf3A347y/3q2qWPpAbEy42/Su+AqBdqly6OspEJ2RuvWcVltcp8K4UaF4+gxZT0bLgtfFB/8U7sVw=\"&gt;Solution
        on paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuduwc/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuduwc", "created":
        1733040834.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzupeb5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "fenrock369",
        "can_mod_post": false, "created_utc": 1733048621.0, "send_replies": true,
        "parent_id": "t1_lzuduwc", "score": 2, "author_fullname": "t2_kvjjd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I did similar in mine, but refactoring with a hashmap of frequencies brought
        solution time down from 7000\u03bcs to 1200\u03bcs", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I did similar in mine, but refactoring with a hashmap
        of frequencies brought solution time down from 7000\u03bcs to 1200\u03bcs&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzupeb5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzupeb5", "created":
        1733048621.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzutrdz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "nilgoun",
        "can_mod_post": false, "created_utc": 1733051576.0, "send_replies": true,
        "parent_id": "t1_lzupeb5", "score": 1, "author_fullname": "t2_50n9zz22", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Interesting. Mine is (optimized build) currently at \\~0.25ms without Hashmap
        and was \\~0.3ms with hashmap. So not a huge difference but definitely not
        an improvement.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interesting.
        Mine is (optimized build) currently at ~0.25ms without Hashmap and was ~0.3ms
        with hashmap. So not a huge difference but definitely not an improvement.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzutrdz/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzutrdz", "created":
        1733051576.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzufa75",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Micah_Bell_is_dead",
        "can_mod_post": false, "created_utc": 1733041778.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_3riu4jgc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[Nice little starter problem](https://github.com/1Capito1/advent-of-code-2024)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/1Capito1/advent-of-code-2024\"&gt;Nice little starter
        problem&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzufa75/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzufa75", "created":
        1733041778.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuiq49",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "ziriuz84",
        "can_mod_post": false, "created_utc": 1733044098.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_38hls", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: Rust\\]\n\n[Part 1 &amp; 2](https://github.com/ziriuz84/AoC-2024/blob/main/src/bin/01.rs)\n\nBenchmarks
        are\n\nPart 1: 2264607 (180.8\u00b5s @ 4824 samples)\n\nPart 2: 19457120 (905.0\u00b5s
        @ 1003 samples)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ziriuz84/AoC-2024/blob/main/src/bin/01.rs\"&gt;Part
        1 &amp;amp; 2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Benchmarks are&lt;/p&gt;\n\n&lt;p&gt;Part
        1: 2264607 (180.8\u00b5s @ 4824 samples)&lt;/p&gt;\n\n&lt;p&gt;Part 2: 19457120
        (905.0\u00b5s @ 1003 samples)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuiq49/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzuiq49", "created": 1733044098.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuj683",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "D0nt3v3nA5k",
        "can_mod_post": false, "created_utc": 1733044402.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_5449gbuu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n\n[Day 1 Solution Part 1 &amp; 2](https://github.com/sapphiregaze/advent-of-code-24/blob/main/src/days/day_01.rs)\n\nmy
        first solution was naive, so i went back and optimized a bit, i\u2019m also
        basically learning rust from scratch right now so my solution might not be
        perfect", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE:
        Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/sapphiregaze/advent-of-code-24/blob/main/src/days/day_01.rs\"&gt;Day
        1 Solution Part 1 &amp;amp; 2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;my first solution
        was naive, so i went back and optimized a bit, i\u2019m also basically learning
        rust from scratch right now so my solution might not be perfect&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuj683/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuj683", "created":
        1733044402.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuksqn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Ouitos",
        "can_mod_post": false, "created_utc": 1733045505.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_fubff", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Python &amp; pandas]\n\nTried to implement one liners using chained
        methods in pandas\n\n    import pandas as pd\n    \n    a = pd.read_csv(\"input.txt\",
        sep=\"   \", header=None)\n    # Q1\n    print(\n        (\n            a[1].sort_values().reset_index(drop=True)\n            -
        a[0].sort_values().reset_index(drop=True)\n        )\n        .abs()\n        .sum()\n    )\n    \n    #
        Q2\n    print(\n        a[1]\n        .value_counts()\n        .reindex(a[0].unique())\n        .fillna(0)\n        .astype(int)\n        .loc[a[0]]\n        .reset_index()\n        .prod(axis=1)\n        .sum()\n    )\n\n\nFun
        exercise, but I do concede that numpy would have been cleaner except for data
        loading, indexes get in the way here and add unnecessary verbose", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Python &amp;amp; pandas]&lt;/p&gt;\n\n&lt;p&gt;Tried
        to implement one liners using chained methods in pandas&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        pandas as pd\n\na = pd.read_csv(&amp;quot;input.txt&amp;quot;, sep=&amp;quot;   &amp;quot;,
        header=None)\n# Q1\nprint(\n    (\n        a[1].sort_values().reset_index(drop=True)\n        -
        a[0].sort_values().reset_index(drop=True)\n    )\n    .abs()\n    .sum()\n)\n\n#
        Q2\nprint(\n    a[1]\n    .value_counts()\n    .reindex(a[0].unique())\n    .fillna(0)\n    .astype(int)\n    .loc[a[0]]\n    .reset_index()\n    .prod(axis=1)\n    .sum()\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Fun
        exercise, but I do concede that numpy would have been cleaner except for data
        loading, indexes get in the way here and add unnecessary verbose&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuksqn/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuksqn", "created":
        1733045505.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzull2a",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "CClairvoyantt",
        "can_mod_post": false, "created_utc": 1733046040.0, "send_replies": true,
        "parent_id": "t1_lzuksqn", "score": 1, "author_fullname": "t2_4duowiqc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Post guidelines say, that you should not paste your code directly here, if
        it''s longer than 5 lines.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Post
        guidelines say, that you should not paste your code directly here, if it&amp;#39;s
        longer than 5 lines.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzull2a/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzull2a", "created":
        1733046040.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzumhc5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "CarRadio7737",
        "can_mod_post": false, "created_utc": 1733046642.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_8bj2rd6bk",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[Language: Rust\\]  \n[Day 1 Solution to both parts](https://github.com/Caelan27/advent-of-code-2024/tree/main/rust/day-01).[](https://github.com/Caelan27/advent-of-code-2024/tree/main/rust/day-01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Rust]&lt;br/&gt;\n&lt;a
        href=\"https://github.com/Caelan27/advent-of-code-2024/tree/main/rust/day-01\"&gt;Day
        1 Solution to both parts&lt;/a&gt;.&lt;a href=\"https://github.com/Caelan27/advent-of-code-2024/tree/main/rust/day-01\"&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzumhc5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzumhc5", "created":
        1733046642.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733053285.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuw204", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "velikiy_dan",
        "can_mod_post": false, "created_utc": 1733053061.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 1, "author_fullname": "t2_xl7b2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[LANGUAGE: JavaScript\\]\n\n[Part 1 Link](https://github.com/Pyroarsonist/advent-of-code-2024/tree/master/src/day1-1)\n\n[Part
        2 Link](https://github.com/Pyroarsonist/advent-of-code-2024/tree/master/src/day1-2)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: JavaScript]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Pyroarsonist/advent-of-code-2024/tree/master/src/day1-1\"&gt;Part
        1 Link&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Pyroarsonist/advent-of-code-2024/tree/master/src/day1-2\"&gt;Part
        2 Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuw204/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuw204", "created":
        1733053061.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": -1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwh5rt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "_I_do_not_",
        "can_mod_post": false, "created_utc": 1733075537.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": -1, "author_fullname": "t2_j4ptd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: Rust]\n[paste](https://topaz.github.io/paste/#XQAAAQDbBAAAAAAAAAA6nMjJFMpQiatRg5tMnpmeD/f/eUdcIIR+rTUPggXUwyusj+iitAUbJtol46VMj9ryQQxHAvlXXJmRd2ddBIjYFg2oow1HHYWPH8ZDBCqLiZVMjTU90VirvFQzsYcY8hOmGBqtEwjkZmYj3mY4Xin2xETj0baarG0xDDKeY852yATM0sMMhbZ7z+Lc+vWwxI1OAmx7TkogU3mb/JoLLcZLr9dwOh2Bga+kQbeGqXmOaXTChLtNAYTuJb4bnIgH1chs27vU2UyBp170BcPE8ADCofIUsblUR9LLdgqxqtOrFcb4Sh6T0dpul89hQ79UzsG8bqMl5dXBy6WmBNypZn3CYEOaHp4xT/NyNEfQLljTxrubN6sE9ViQJnC6VIny9SE7f0kLVbbgxEFMp5JhOo9rSeIf61Wj/2QaJ7AdnRQUtR1eHezqWQXiBZLyDbPrhZyVEnSV/qoDKttw8Z/eRmuijk74rWSpNKa9toLdYy3fwGRym+DkvfP1RaEJHEq+6YVA9KnBxVuN9Nayco406juPu/Jj2sLZ6Uy71yZapzfqqhj/BlGiaxpbQjouzfRlIq7ie1TXvyzCg8wHzZP1NphfvNRLx5wxmJ+hN+ICp2PgRSLrUrpi5T/oSJqOCLWgA2wGUDrGLxMpZsDp8H+XlKgHS3OGuuyUS1nQZ0tl+yKqUCweJZkLr/DS/22UdKWrljF7z/v+GFE=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: Rust]\n&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDbBAAAAAAAAAA6nMjJFMpQiatRg5tMnpmeD/f/eUdcIIR+rTUPggXUwyusj+iitAUbJtol46VMj9ryQQxHAvlXXJmRd2ddBIjYFg2oow1HHYWPH8ZDBCqLiZVMjTU90VirvFQzsYcY8hOmGBqtEwjkZmYj3mY4Xin2xETj0baarG0xDDKeY852yATM0sMMhbZ7z+Lc+vWwxI1OAmx7TkogU3mb/JoLLcZLr9dwOh2Bga+kQbeGqXmOaXTChLtNAYTuJb4bnIgH1chs27vU2UyBp170BcPE8ADCofIUsblUR9LLdgqxqtOrFcb4Sh6T0dpul89hQ79UzsG8bqMl5dXBy6WmBNypZn3CYEOaHp4xT/NyNEfQLljTxrubN6sE9ViQJnC6VIny9SE7f0kLVbbgxEFMp5JhOo9rSeIf61Wj/2QaJ7AdnRQUtR1eHezqWQXiBZLyDbPrhZyVEnSV/qoDKttw8Z/eRmuijk74rWSpNKa9toLdYy3fwGRym+DkvfP1RaEJHEq+6YVA9KnBxVuN9Nayco406juPu/Jj2sLZ6Uy71yZapzfqqhj/BlGiaxpbQjouzfRlIq7ie1TXvyzCg8wHzZP1NphfvNRLx5wxmJ+hN+ICp2PgRSLrUrpi5T/oSJqOCLWgA2wGUDrGLxMpZsDp8H+XlKgHS3OGuuyUS1nQZ0tl+yKqUCweJZkLr/DS/22UdKWrljF7z/v+GFE=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwh5rt/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwh5rt", "created":
        1733075537.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu257r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "riffraff",
        "can_mod_post": false, "created_utc": 1733033627.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 0, "author_fullname": "t2_1vf8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Language: Elixir] I am trying to learn the language, luckily this one was
        easy enough, tho it seems there''s no built-in transpose function\n \n    defmodule
        Day do\n      def today() do\n        String.replace(__ENV__.file, \".ex\",
        \".input\")\n      end\n\n      def parse(stream) do\n        stream |&gt;
        Enum.map(&amp;String.trim/1) |&gt; Enum.to_list()\n      end\n\n      def
        daily_input do\n        File.stream!(today()) |&gt; parse()\n      end\n\n      def
        test_input do\n        \"\"\"\n        3   4\n        4   3\n        2   5\n        1   3\n        3   9\n        3   3\n        \"\"\"\n        |&gt;
        String.split(\"\\n\", trim: true)\n        |&gt; parse()\n      end\n\n      def
        main(_args) do\n        test_input() |&gt; Day.Easy.solve() |&gt; IO.inspect(label:
        \"test easy\")\n        daily_input() |&gt; Day.Easy.solve() |&gt; IO.inspect(label:
        \"easy\")\n        test_input() |&gt; Day.Hard.solve() |&gt; IO.inspect(label:
        \"test hard\")\n        daily_input() |&gt; Day.Hard.solve() |&gt; IO.inspect(label:
        \"hard\")\n      end\n\n      def transposort(list) do\n        Enum.zip_with(list,
        &amp;Function.identity/1) |&gt; Enum.map(&amp;Enum.sort/1)\n      end\n\n      def
        line_to_ints(line) do\n        String.split(line, \" \", trim: true) |&gt;
        Enum.map(&amp;String.to_integer/1)\n      end\n\n      defmodule Easy do\n        def
        solve(enum) do\n          Enum.map(enum, &amp;Day.line_to_ints/1)\n          |&gt;
        Day.transposort()\n          |&gt; Enum.zip_with(&amp;diff/1)\n          |&gt;
        Enum.sum()\n        end\n\n        def diff([a, b]) do\n          abs(a -
        b)\n        end\n      end\n\n      defmodule Hard do\n        def solve(enum)
        do\n          [a, b] = Enum.map(enum, &amp;Day.line_to_ints/1) |&gt; Day.transposort()\n          frequency
        = Enum.frequencies(b)\n          Enum.map(a, &amp;(Map.get(frequency, &amp;1,
        0)*&amp;1)) |&gt; Enum.sum()\n        end\n      end\n    end\n\n    # This
        part is executed when the script is run directly\n    Day.main(System.argv())",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Elixir] I
        am trying to learn the language, luckily this one was easy enough, tho it
        seems there&amp;#39;s no built-in transpose function&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        Day do\n  def today() do\n    String.replace(__ENV__.file, &amp;quot;.ex&amp;quot;,
        &amp;quot;.input&amp;quot;)\n  end\n\n  def parse(stream) do\n    stream |&amp;gt;
        Enum.map(&amp;amp;String.trim/1) |&amp;gt; Enum.to_list()\n  end\n\n  def
        daily_input do\n    File.stream!(today()) |&amp;gt; parse()\n  end\n\n  def
        test_input do\n    &amp;quot;&amp;quot;&amp;quot;\n    3   4\n    4   3\n    2   5\n    1   3\n    3   9\n    3   3\n    &amp;quot;&amp;quot;&amp;quot;\n    |&amp;gt;
        String.split(&amp;quot;\\n&amp;quot;, trim: true)\n    |&amp;gt; parse()\n  end\n\n  def
        main(_args) do\n    test_input() |&amp;gt; Day.Easy.solve() |&amp;gt; IO.inspect(label:
        &amp;quot;test easy&amp;quot;)\n    daily_input() |&amp;gt; Day.Easy.solve()
        |&amp;gt; IO.inspect(label: &amp;quot;easy&amp;quot;)\n    test_input() |&amp;gt;
        Day.Hard.solve() |&amp;gt; IO.inspect(label: &amp;quot;test hard&amp;quot;)\n    daily_input()
        |&amp;gt; Day.Hard.solve() |&amp;gt; IO.inspect(label: &amp;quot;hard&amp;quot;)\n  end\n\n  def
        transposort(list) do\n    Enum.zip_with(list, &amp;amp;Function.identity/1)
        |&amp;gt; Enum.map(&amp;amp;Enum.sort/1)\n  end\n\n  def line_to_ints(line)
        do\n    String.split(line, &amp;quot; &amp;quot;, trim: true) |&amp;gt; Enum.map(&amp;amp;String.to_integer/1)\n  end\n\n  defmodule
        Easy do\n    def solve(enum) do\n      Enum.map(enum, &amp;amp;Day.line_to_ints/1)\n      |&amp;gt;
        Day.transposort()\n      |&amp;gt; Enum.zip_with(&amp;amp;diff/1)\n      |&amp;gt;
        Enum.sum()\n    end\n\n    def diff([a, b]) do\n      abs(a - b)\n    end\n  end\n\n  defmodule
        Hard do\n    def solve(enum) do\n      [a, b] = Enum.map(enum, &amp;amp;Day.line_to_ints/1)
        |&amp;gt; Day.transposort()\n      frequency = Enum.frequencies(b)\n      Enum.map(a,
        &amp;amp;(Map.get(frequency, &amp;amp;1, 0)*&amp;amp;1)) |&amp;gt; Enum.sum()\n    end\n  end\nend\n\n#
        This part is executed when the script is run directly\nDay.main(System.argv())\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu257r/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu257r", "created":
        1733033627.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzu4jyf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "Gueltir",
        "can_mod_post": false, "created_utc": 1733035012.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 0, "author_fullname": "t2_pe8frmckq",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "\\[Language: Rust\\]\n\n[Link to github](https://github.com/filippixavier/AoC2024/blob/481b5a1f17491f6acc79b3d0cefa3e5fc7cd2acb/src/days/day1.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Language: Rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/filippixavier/AoC2024/blob/481b5a1f17491f6acc79b3d0cefa3e5fc7cd2acb/src/days/day1.rs\"&gt;Link
        to github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzu4jyf/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzu4jyf", "created":
        1733035012.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733045315.0, "mod_reason_by": null,
        "banned_by": null, "ups": 0, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzuegf5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "aptacode",
        "can_mod_post": false, "created_utc": 1733041226.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 0, "author_fullname": "t2_7j3mal8a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Excited for the month ahead!  \nWill be trying out Rust this year\n\n[LANGUAGE:
        rust]\n\n[Part 1: ](https://github.com/Timmoth/AdventofCode/blob/main/2024/src/solution_01_part1.rs)700us\n\n[Part
        2:](https://github.com/Timmoth/AdventofCode/blob/main/2024/src/solution_01_part2.rs)
        900us", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excited
        for the month ahead!&lt;br/&gt;\nWill be trying out Rust this year&lt;/p&gt;\n\n&lt;p&gt;[LANGUAGE:
        rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Timmoth/AdventofCode/blob/main/2024/src/solution_01_part1.rs\"&gt;Part
        1: &lt;/a&gt;700us&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Timmoth/AdventofCode/blob/main/2024/src/solution_01_part2.rs\"&gt;Part
        2:&lt;/a&gt; 900us&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuegf5/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuegf5", "created":
        1733041226.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuegfh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733041226.0, "send_replies": false,
        "parent_id": "t1_lzuegf5", "score": 2, "author_fullname": "t2_6l4z3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required &lt;code&gt;[LANGUAGE:
        xyz]&lt;/code&gt; string literal at the beginning of your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your comment to &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuegfh/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuegfh", "created":
        1733041226.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzugbk7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "hgwxx7_",
        "can_mod_post": false, "created_utc": 1733042472.0, "send_replies": true,
        "parent_id": "t1_lzuegf5", "score": 2, "author_fullname": "t2_7ukhi4zx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Try the `include_str!` macro. That reads the file at compile time so you''re
        measuring the actual execution of your code instead of file reading.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Try the &lt;code&gt;include_str!&lt;/code&gt;
        macro. That reads the file at compile time so you&amp;#39;re measuring the
        actual execution of your code instead of file reading.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzugbk7/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzugbk7", "created":
        1733042472.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzukffm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "aptacode",
        "can_mod_post": false, "created_utc": 1733045250.0, "send_replies": true,
        "parent_id": "t1_lzugbk7", "score": 1, "author_fullname": "t2_7j3mal8a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thanks for pointing that out!  \nBrings the times down to 550us &amp; 700us",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for pointing
        that out!&lt;br/&gt;\nBrings the times down to 550us &amp;amp; 700us&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzukffm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzukffm", "created":
        1733045250.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuqqoz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "hgwxx7_",
        "can_mod_post": false, "created_utc": 1733049533.0, "send_replies": true,
        "parent_id": "t1_lzukffm", "score": 1, "author_fullname": "t2_7ukhi4zx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You could get a boost by pre-allocating the vector capacity like `Vector::with_capacity(1000)`.
        This speeds it up by avoiding re-allocations.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;You could get a boost by pre-allocating the vector
        capacity like &lt;code&gt;Vector::with_capacity(1000)&lt;/code&gt;. This speeds
        it up by avoiding re-allocations.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuqqoz/", "subreddit_type":
        "public", "locked": false, "name": "t1_lzuqqoz", "created": 1733049533.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_1h3vp6n",
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1733121101.0, "mod_reason_by": null,
        "banned_by": null, "ups": 0, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzwp0s1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "guerinoni",
        "can_mod_post": false, "created_utc": 1733077943.0, "send_replies": true,
        "parent_id": "t3_1h3vp6n", "score": 0, "author_fullname": "t2_1za717wu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[LANGUAGE: rust]\n\n[https://github.com/guerinoni/exercises/blob/main/advent-of-code-2024/src/day01.rs](https://github.com/guerinoni/exercises/blob/main/advent-of-code-2024/src/day01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[LANGUAGE: rust]&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/guerinoni/exercises/blob/main/advent-of-code-2024/src/day01.rs\"&gt;https://github.com/guerinoni/exercises/blob/main/advent-of-code-2024/src/day01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwp0s1/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwp0s1", "created":
        1733077943.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzwp0t3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733077943.0, "send_replies": false,
        "parent_id": "t1_lzwp0s1", "score": 2, "author_fullname": "t2_6l4z3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "AutoModerator did not detect the required `[LANGUAGE: xyz]` string literal
        at the beginning of your solution submission.\n\nPlease edit your comment
        to [state your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).\n\n***\n\n\n*I
        am a bot, and this action was performed automatically. Please [contact the
        moderators of this subreddit](/message/compose/?to=/r/adventofcode) if you
        have any questions or concerns.*", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;AutoModerator did not detect the required &lt;code&gt;[LANGUAGE:
        xyz]&lt;/code&gt; string literal at the beginning of your solution submission.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your comment to &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        your programming language&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzwp0t3/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzwp0t3", "created":
        1733077943.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzx31bw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733082176.0, "send_replies": true,
        "parent_id": "t1_lzwp0s1", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please add the required language tag as AutoModerator requested.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Please add the required language tag as
        AutoModerator requested.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx31bw/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx31bw", "created":
        1733082176.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_1h3vp6n",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "lzv1h7j", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": false, "collapsed_reason_code": "DELETED",
        "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_1h3vp6n", "score": -1, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "[deleted]",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_lzv1h7j",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv1h7j/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1733056300.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733056300.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": -1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzv1h7z",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "AutoModerator",
        "can_mod_post": false, "created_utc": 1733056301.0, "send_replies": false,
        "parent_id": "t1_lzv1h7j", "score": 1, "author_fullname": "t2_6l4z3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "AutoModerator has detected [fenced code block](https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/fenced_code_blocks)
        (&amp;#96;&amp;#96;&amp;#96;) syntax which only works on new.reddit.\n\nPlease
        review our wiki article on [code formatting](https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting)
        then edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks)
        instead.\n\n***\n\n\n*I am a bot, and this action was performed automatically.
        Please [contact the moderators of this subreddit](/message/compose/?to=/r/adventofcode)
        if you have any questions or concerns.*", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;AutoModerator has detected &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/fenced_code_blocks\"&gt;fenced
        code block&lt;/a&gt; (&amp;#96;&amp;#96;&amp;#96;) syntax which only works
        on new.reddit.&lt;/p&gt;\n\n&lt;p&gt;Please review our wiki article on &lt;a
        href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting\"&gt;code
        formatting&lt;/a&gt; then edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; instead.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;I
        am a bot, and this action was performed automatically. Please &lt;a href=\"/message/compose/?to=/r/adventofcode\"&gt;contact
        the moderators of this subreddit&lt;/a&gt; if you have any questions or concerns.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzv1h7z/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzv1h7z", "created":
        1733056301.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "lzx9l6z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733084170.0, "send_replies": true,
        "parent_id": "t1_lzv1h7j", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "The triple-backticks code fence (`` `\u200b`\u200b` ``) only works on new.reddit.  Please
        edit your comment to use the [four-spaces Markdown syntax](https://old.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks)
        for a code block so your code is easier to read inside a scrollable box that
        preserves whitespace and indentation.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;The triple-backticks code fence (&lt;code&gt;`\u200b`\u200b`&lt;/code&gt;)
        only works on new.reddit.  Please edit your comment to use the &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a scrollable box that preserves whitespace and indentation.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzx9l6z/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzx9l6z", "created":
        1733084170.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_1h3vp6n",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "lzuo7jw", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": false, "collapsed_reason_code": "DELETED",
        "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_1h3vp6n", "score": -5, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "[removed]",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_lzuo7jw",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuo7jw/", "num_reports":
        null, "locked": true, "report_reasons": null, "created": 1733047816.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1733047816.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": -5}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuobfe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "glebm",
        "can_mod_post": false, "created_utc": 1733047888.0, "send_replies": true,
        "parent_id": "t1_lzuo7jw", "score": 4, "author_fullname": "t2_bup9r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    abs(x1 - x2)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;abs(x1
        - x2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuobfe/",
        "subreddit_type": "public", "locked": true, "name": "t1_lzuobfe", "created":
        1733047888.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzup5lo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "GunnarBGermany",
        "can_mod_post": false, "created_utc": 1733048457.0, "send_replies": true,
        "parent_id": "t1_lzuo7jw", "score": 2, "author_fullname": "t2_9wk4gajbg",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "Please consider reading the posting rules and use the the
        other thread.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please
        consider reading the posting rules and use the the other thread.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzup5lo/",
        "subreddit_type": "public", "locked": true, "name": "t1_lzup5lo", "created":
        1733048457.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxfujm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1733086088.0, "send_replies": true,
        "parent_id": "t1_lzuo7jw", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Comment removed.  [Top-level comments in `Solution Megathread`s are for *code
        solutions* only](https://old.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_top-level_posts_are_for_code_solutions_only).\n\n[Create
        your own individual `Help/Question` post](https://old.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_incomplete_solutions)
        in /r/adventofcode.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Comment
        removed.  &lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_top-level_posts_are_for_code_solutions_only\"&gt;Top-level
        comments in &lt;code&gt;Solution Megathread&lt;/code&gt;s are for &lt;em&gt;code
        solutions&lt;/em&gt; only&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://old.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_incomplete_solutions\"&gt;Create
        your own individual &lt;code&gt;Help/Question&lt;/code&gt; post&lt;/a&gt;
        in &lt;a href=\"/r/adventofcode\"&gt;/r/adventofcode&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxfujm/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxfujm", "created":
        1733086088.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}}],
        true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_lztx0gs"]], [13,
        14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16,
        17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:44 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:44 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=uvmvY0WrsmwqUchmHE; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:44 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzuqguv
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1204'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksemptlui.2.1741471485074.Z0FBQUFBQm56TDc5VFkwUEFONmsxVnczdC1BVkhlSmMyRU1KQjJ3U3ZWRGUyNzY3bnRYMUZPMVhTSURlZFhPVjAtUnloMmxoVWxGQTAwcFRJV3NJU096QlRwTkxxMi16X2k2aFktQnZvcnNrUWZuS2p0aG1lNEdub2dKdzl4djJlUHBzVWRDMXp3QWM;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:45
        GMT; secure, session_tracker=gndhblemaehoobhbla.0.1741471485084.Z0FBQUFBQm56TDc5VHljNGZSR0FPS0xqX0ZSTnZ4UjlGYjQwSVZFRXlsRXBwUWoyMXk5SElXbERRSDBzd0c4V2VyRThtVUFfTHBsMEE4XzVzNXVJRmRRMmNmRjhMZF9qNlhMRXNRdUgybHVtTHIwY3JtODYxUmJUZVRsaTRmS0kzNE5YNkU2N1RnRjk;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:45
        GMT; secure, edgebucket=MYufuENTCWyhapaTz3; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '12'
      x-ratelimit-remaining:
      - '88.0'
      x-ratelimit-reset:
      - '314'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:45 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuqguv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "stellar_opossum",
        "can_mod_post": false, "created_utc": 1733049347.0, "send_replies": true,
        "parent_id": "t1_lzunulz", "score": 1, "author_fullname": "t2_tzw1l7qqy",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "`left_element * right_list.count(left_element)`. Now that''s
        `lazy`", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;left_element
        * right_list.count(left_element)&lt;/code&gt;. Now that&amp;#39;s &lt;code&gt;lazy&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuqguv/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuqguv", "created":
        1733049347.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzuzfy6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": true, "author": "glebm",
        "can_mod_post": false, "created_utc": 1733055137.0, "send_replies": true,
        "parent_id": "t1_lzuqguv", "score": 1, "author_fullname": "t2_bup9r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "That''s quadratic, you''re making the computer do all the work, so inconsiderate!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s quadratic,
        you&amp;#39;re making the computer do all the work, so inconsiderate!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzuzfy6/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzuzfy6", "created":
        1733055137.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_lzuqguv"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:45 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:45 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=4sB7fKJ0ejYRu1dwBo; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:45 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzwfuaj
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksempw8p1.2.1741471485507.Z0FBQUFBQm56TDc5cUQ0SjNQVmY2cWNidWlMQXBlUUw5LUFkOGFiWEtFU2k1b0VqT0lJUXFzMDgwTGxxQ2hVTE5lZElMSzdxblVJTkRjd0djWmU0ZWY4akpHTXI5UHlwdl81Zk1FNmpHclFqZ3NfYmF2dWpmaUVuc3JfRy1Xcjg1T1pfcGJnWWgtRnk;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:45
        GMT; secure, session_tracker=rpcagohmdhlborhooc.0.1741471485521.Z0FBQUFBQm56TDc5RVB4ckNtQlVaY3VmTGJ6dFh2NEJ1WHdYZFhWQlBXQ3lmblhBNUI3MHNvNDZndkZKVE15NkRWdEFZUHpESEQxQkpjWmtMNk5rWEtZc2lvOW9kOWc2RUNiM2tCdDd6SmpSdHBlSTdJWXlZcnA4MHJuSENDRlFrRkpYc1IwMUpUbDk;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:45
        GMT; secure, edgebucket=lcJAZQxOV7UsECHOcW; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      x-ratelimit-used:
      - '13'
      x-ratelimit-remaining:
      - '87.0'
      x-ratelimit-reset:
      - '314'
      content-encoding:
      - gzip
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:45 GMT
      via:
      - 1.1 varnish
      vary:
      - Accept-Encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
      transfer-encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[], true]], [0, 12, "attr",
        "things"], [12, 13, "call", ["None"]], [13, 14, "attr", "next"], [14, 15,
        "call", []], [15, 16, "attr", "focus"], [16, 17, "call", []], [0, 18, "attr",
        "things"], [18, 19, "call", ["None"]], [19, 20, "attr", "filter"], [20, 21,
        "call", [".morechildren"]], [21, 22, "attr", "remove"], [22, 23, "call", []]],
        "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:45 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:45 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=ABTTz0jRItNHY7ntM3; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:04:45 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_1h3vp6n&children=lzwhsed,lzxkt83
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1030'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksempzmca.2.1741471485938.Z0FBQUFBQm56TDc5eDRFQm94Y1RVZVZncnZRQzItM2lvR19Cdzc3SE1ocjZRc0dublZOVUZJRGdGT1hQUE9tS2wtWWhWNzMtRkFHQ1ZJWl9qcGZmYXFKUHBha1N4WW9OLTJ5NTA2OUhCVjdIOG94SS03WjAtQTd1RWtqRkFaTHFzOXVNcHZ0bUZxbmc;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:04:45
        GMT; secure, session_tracker=bpdemlngqhcbfnlijn.0.1741471485948.Z0FBQUFBQm56TDc5eUNOenJVNklXN19ZZEJHZFMxbHdjbjk5OEF3THpkbGFLblJzRDV5VTQ0d2F6Ri1DOHdTUVlKY0ptVlVEMDZ6b2hrZnlDYnJaZUgtU1RvVGNMNmkyS2tsRVF4MXE2ZlpWZlBTRUdWNmJxVDlYQjc2V2tSVGpEeVo3cjlPVFJobFc;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:04:45
        GMT; secure, edgebucket=R7nwbT05FvDAOplfYV; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '14'
      x-ratelimit-remaining:
      - '86.0'
      x-ratelimit-reset:
      - '314'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:04:46 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "lzxkt83",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        false, "collapsed_reason_code": null, "no_follow": false, "author": "vmaskmovps",
        "can_mod_post": false, "created_utc": 1733087605.0, "send_replies": true,
        "parent_id": "t1_lzwhsbr", "score": 1, "author_fullname": "t2_1binuwn4tm",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "Check your post, right now everything is a code block, including
        the Language header", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Check
        your post, right now everything is a code block, including the Language header&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/1h3vp6n/2024_day_1_solutions/lzxkt83/",
        "subreddit_type": "public", "locked": false, "name": "t1_lzxkt83", "created":
        1733087605.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_1h3vp6n", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_lzxkt83"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:04:45 GMT
recorded_with: VCR 6.3.1
