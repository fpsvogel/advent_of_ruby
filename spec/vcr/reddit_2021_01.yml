---
http_interactions:
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:13 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=Ix8yA3ydgx1A6NaPGp; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:13 GMT
- request:
    method: get
    uri: https://oauth.reddit.com/r/adventofcode/comments/r66vow/2021_day_1_solutions.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '73637'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      access-control-allow-origin:
      - "*"
      access-control-expose-headers:
      - X-Moose
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '57'
      x-ratelimit-remaining:
      - '43.0'
      x-ratelimit-reset:
      - '45'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:14 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - loid=000000001ksg61s0zy.2.1741472953999.Z0FBQUFBQm56TVM2SkpJZ0h3eXIybWFfQVVGUk96dEI0bkpvT0pMN1pmc0RXaGc4UE5NNXZ6S3N0U3RpR2o4ZGpnRVFvRTVBb24tYUpvWGViM0xjd09TQjZhUUg1M18wQ3ZkWUpvZUo3eGFrUVhobmQwM2xlXzRDVU01dV81MmVUenN5QVp0S2ZtVVE;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:14
        GMT; secure; SameSite=None; Secure, session_tracker=dqalhbqpebagegqjal.0.1741472954017.Z0FBQUFBQm56TVM2MTkwX3NTS21PZmFlY2JLcTFta0ZZbFNCYmc3WDhhTU5lVEk2S0tRa0g5OFBFa2l3ZGRseTFoTjZqNGJZaGRndTRSTlJYLVFGOFV2RzN6TFdkeUVpYmNNZm41NFRwOUJ2ZHo1ZUFqdkV2UGVLd3dDSnUybnlUeG9pUi14ZVVlVGg;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:14
        GMT; secure; SameSite=None; Secure, csv=2; Max-Age=63072000; Domain=.reddit.com;
        Path=/; Secure; SameSite=None, edgebucket=dhqCHbs3MY2Xo4rD70; Domain=reddit.com;
        Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '[{"kind": "Listing", "data": {"after": null, "dist": 1, "modhash":
        "", "geo_filter": "", "children": [{"kind": "t3", "data": {"approved_at_utc":
        null, "subreddit": "adventofcode", "selftext": "If you participated in a previous
        year, welcome back, and if you''re new this year, we hope you have fun and
        learn lots!\n\nWe''re following the same general format as previous years''
        megathreads, so make sure to read the full description in the wiki ([How Do
        the Daily Megathreads Work?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_the_daily_megathreads_work.3F))
        before you post!  Make sure to mention somewhere in your post which language(s)
        your solution is written in.  If you have any questions, please create your
        own thread and ask!\n\nAbove all, remember, AoC is all about having fun and
        learning more about the wonderful world of programming!\n\nTo steal a song
        from Olaf:\n\n&gt; Oh, happy, merry, muletide barrels, faithful glass of cheer  \n&gt;
        Thanks for sharing what you do  \n&gt; At that time of year  \n&gt; Thank
        you!\n\n***\n\n## NEW AND NOTEWORTHY THIS YEAR\n\n* Last year''s rule regarding
        `Visualization`s has now been [codified in the wiki](https://www.reddit.com/r/adventofcode/wiki/visualizations)\n
        * tl;dr: If your Visualization contains rapidly-flashing animations of any
        color(s), put a seizure warning in the title and/or very prominently displayed
        as the first line of text (*not* as a comment!)\n* Livestreamers: /u/topaz2078
        has a new rule for this year on his website: AoC &gt; About &gt; [FAQ # Streaming](https://adventofcode.com/about#faq_streaming)\n\n##
        COMMUNITY NEWS\n\n**Advent of Code Community Fun 2021:** [Adventure Time!](/r/adventofcode/w/adventuretime)\n\nSometimes
        you just need a break from it all.  This year, try something new\u2026 or
        at least in a new place!  We want to see your adventures!\n\n+ Your newest
        AoC-related project\n * The Internet is a [series of tubes](https://adventofcode.com/2017/day/19),
        after all\n+ Push hardware and/or software well past its limit and make it
        do things it wasn''t designed to do\n * e.g. solve puzzles [on a TI-89](/7lnm7h)
        or [inside video games](https://www.reddit.com/r/adventofcode/comments/e7ylwd/i_solved_day_8_entirely_in_minecraft/),
        etc.\n+ An [AoC mug](https://advent-of-code.creator-spring.com/listing/adventofcode-2019?product=658)
        filled with the latest results from your attempts to develop the [ultimate
        hot chocolate recipe](https://adventofcode.com/2018/day/14)\n+ A picture of
        your laptop showing AoC while you''re on a well-deserved vacation at [a nice
        resort on a tropical island](https://adventofcode.com/2020/day/1)\n\nMore
        ideas, full details, rules, timeline, templates, etc. are in the [Submissions
        Megathread](/r66wgb).\n\n***\n\n#--- Day 1: Sonar Sweep ---\n\n***\n\nPost
        your code solution in this megathread.\n\n+ Include what language(s) your
        solution uses! \n+ Here''s a [quick link to /u/topaz2078''s `paste`](https://topaz.github.io/paste/)
        if you need it for longer code blocks.\n+ The full posting rules are detailed
        in the wiki under [How Do The Daily Megathreads Work?](/r/adventofcode/wiki/index#wiki_how_do_the_daily_megathreads_work.3F).\n\n**Reminder:**
        Top-level posts in Solution Megathreads are for *code solutions* only. If
        you have questions, please post your own thread and make sure to flair it
        with `Help`.\n\n***\n\n###~~This thread will be unlocked when there are a
        significant number of people on the global leaderboard with gold stars for
        today''s puzzle.~~\n###*EDIT:* Global leaderboard gold cap reached, thread
        unlocked at 00:02:44!", "user_reports": [], "saved": false, "mod_reason_title":
        null, "gilded": 0, "clicked": false, "title": "-\ud83c\udf84- 2021 Day 1 Solutions
        -\ud83c\udf84-", "link_flair_richtext": [], "subreddit_name_prefixed": "r/adventofcode",
        "hidden": false, "pwls": 6, "link_flair_css_class": "flair-solutionmegathread",
        "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_r66vow",
        "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.99,
        "author_flair_background_color": null, "subreddit_type": "public", "ups":
        190, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id":
        null, "is_original_content": false, "author_fullname": "t2_60niu", "secure_media":
        null, "is_reddit_media_domain": false, "is_meta": false, "category": null,
        "secure_media_embed": {}, "link_flair_text": "SOLUTION MEGATHREAD", "can_mod_post":
        false, "score": 190, "approved_by": null, "is_created_from_ads_ui": false,
        "author_premium": false, "thumbnail": "", "edited": 1638337596.0, "author_flair_css_class":
        null, "author_flair_richtext": [], "gildings": {}, "content_categories": null,
        "is_self": true, "mod_note": null, "created": 1638334812.0, "link_flair_type":
        "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type":
        "text", "domain": "self.adventofcode", "allow_live_comments": true, "selftext_html":
        "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If you participated
        in a previous year, welcome back, and if you&amp;#39;re new this year, we
        hope you have fun and learn lots!&lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;re following
        the same general format as previous years&amp;#39; megathreads, so make sure
        to read the full description in the wiki (&lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_the_daily_megathreads_work.3F\"&gt;How
        Do the Daily Megathreads Work?&lt;/a&gt;) before you post!  Make sure to mention
        somewhere in your post which language(s) your solution is written in.  If
        you have any questions, please create your own thread and ask!&lt;/p&gt;\n\n&lt;p&gt;Above
        all, remember, AoC is all about having fun and learning more about the wonderful
        world of programming!&lt;/p&gt;\n\n&lt;p&gt;To steal a song from Olaf:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Oh,
        happy, merry, muletide barrels, faithful glass of cheer&lt;br/&gt;\nThanks
        for sharing what you do&lt;br/&gt;\nAt that time of year&lt;br/&gt;\nThank
        you!&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;NEW AND NOTEWORTHY
        THIS YEAR&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Last year&amp;#39;s rule regarding
        &lt;code&gt;Visualization&lt;/code&gt;s has now been &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/visualizations\"&gt;codified
        in the wiki&lt;/a&gt;\n\n&lt;ul&gt;\n&lt;li&gt;tl;dr: If your Visualization
        contains rapidly-flashing animations of any color(s), put a seizure warning
        in the title and/or very prominently displayed as the first line of text (&lt;em&gt;not&lt;/em&gt;
        as a comment!)&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Livestreamers:
        &lt;a href=\"/u/topaz2078\"&gt;/u/topaz2078&lt;/a&gt; has a new rule for this
        year on his website: AoC &amp;gt; About &amp;gt; &lt;a href=\"https://adventofcode.com/about#faq_streaming\"&gt;FAQ
        # Streaming&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;COMMUNITY NEWS&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;Advent
        of Code Community Fun 2021:&lt;/strong&gt; &lt;a href=\"/r/adventofcode/w/adventuretime\"&gt;Adventure
        Time!&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Sometimes you just need a break from
        it all.  This year, try something new\u2026 or at least in a new place!  We
        want to see your adventures!&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Your newest
        AoC-related project\n\n&lt;ul&gt;\n&lt;li&gt;The Internet is a &lt;a href=\"https://adventofcode.com/2017/day/19\"&gt;series
        of tubes&lt;/a&gt;, after all&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Push
        hardware and/or software well past its limit and make it do things it wasn&amp;#39;t
        designed to do\n\n&lt;ul&gt;\n&lt;li&gt;e.g. solve puzzles &lt;a href=\"/7lnm7h\"&gt;on
        a TI-89&lt;/a&gt; or &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/e7ylwd/i_solved_day_8_entirely_in_minecraft/\"&gt;inside
        video games&lt;/a&gt;, etc.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;An
        &lt;a href=\"https://advent-of-code.creator-spring.com/listing/adventofcode-2019?product=658\"&gt;AoC
        mug&lt;/a&gt; filled with the latest results from your attempts to develop
        the &lt;a href=\"https://adventofcode.com/2018/day/14\"&gt;ultimate hot chocolate
        recipe&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;A picture of your laptop showing AoC
        while you&amp;#39;re on a well-deserved vacation at &lt;a href=\"https://adventofcode.com/2020/day/1\"&gt;a
        nice resort on a tropical island&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;More
        ideas, full details, rules, timeline, templates, etc. are in the &lt;a href=\"/r66wgb\"&gt;Submissions
        Megathread&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h1&gt;--- Day 1: Sonar
        Sweep ---&lt;/h1&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Post your code solution in
        this megathread.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Include what language(s)
        your solution uses! &lt;/li&gt;\n&lt;li&gt;Here&amp;#39;s a &lt;a href=\"https://topaz.github.io/paste/\"&gt;quick
        link to /u/topaz2078&amp;#39;s &lt;code&gt;paste&lt;/code&gt;&lt;/a&gt; if
        you need it for longer code blocks.&lt;/li&gt;\n&lt;li&gt;The full posting
        rules are detailed in the wiki under &lt;a href=\"/r/adventofcode/wiki/index#wiki_how_do_the_daily_megathreads_work.3F\"&gt;How
        Do The Daily Megathreads Work?&lt;/a&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Reminder:&lt;/strong&gt;
        Top-level posts in Solution Megathreads are for &lt;em&gt;code solutions&lt;/em&gt;
        only. If you have questions, please post your own thread and make sure to
        flair it with &lt;code&gt;Help&lt;/code&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h3&gt;&lt;del&gt;This
        thread will be unlocked when there are a significant number of people on the
        global leaderboard with gold stars for today&amp;#39;s puzzle.&lt;/del&gt;&lt;/h3&gt;\n\n&lt;h3&gt;&lt;em&gt;EDIT:&lt;/em&gt;
        Global leaderboard gold cap reached, thread unlocked at 00:02:44!&lt;/h3&gt;\n&lt;/div&gt;&lt;!--
        SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null,
        "view_count": null, "archived": true, "no_follow": false, "is_crosspostable":
        false, "pinned": false, "over_18": false, "all_awardings": [], "awarders":
        [], "media_only": false, "link_flair_template_id": "caf5e484-9c70-11e5-aa5d-0e1abaa211ff",
        "can_gild": false, "spoiler": false, "locked": false, "author_flair_text":
        null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports":
        null, "distinguished": "moderator", "subreddit_id": "t5_3b3wa", "author_is_blocked":
        false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color":
        "#000000", "id": "r66vow", "is_robot_indexable": true, "num_duplicates": 0,
        "report_reasons": null, "author": "daggerdragon", "discussion_type": null,
        "num_comments": 1838, "send_replies": false, "media": null, "contest_mode":
        false, "author_patreon_flair": false, "author_flair_text_color": null, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/", "stickied": false,
        "url": "https://www.reddit.com/r/adventofcode/comments/r66vow/2021_day_1_solutions/",
        "subreddit_subscribers": 131311, "created_utc": 1638334812.0, "num_crossposts":
        0, "mod_reports": [], "is_video": false}}], "before": null}}, {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "ia20x3q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "DimoTheBest",
        "can_mod_post": false, "created_utc": 1653567211.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_69ojxb0j", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Go
        solution\n\n```go\npackage main\n\nimport (\n\t\"encoding/csv\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"strconv\"\n)\n\nfunc
        main() {\n\tfile, err := os.Open(\"/home/me/Documents/learning-go/1 - sonar-sweep/data.csv\")\n\n\tif
        err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tcsvReader := csv.NewReader(file)\n\n\tdata,
        err := csvReader.ReadAll()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tvar
        prev int\n\tvar count int\n\n\tfor i, val := range data {\n\t\tval_int, err
        := strconv.Atoi(val[0])\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\tif
        i != 0 &amp;&amp; prev &lt; val_int {\n\n\t\t\tcount += 1\n\t\t}\n\t\tprev
        = val_int\n\n\t}\n\n\tfmt.Println(count)\n\n}\n\n```", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_ia20x3q", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go solution&lt;/p&gt;\n\n&lt;p&gt;```go\npackage
        main&lt;/p&gt;\n\n&lt;p&gt;import (\n    &amp;quot;encoding/csv&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;log&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;strconv&amp;quot;\n)&lt;/p&gt;\n\n&lt;p&gt;func
        main() {\n    file, err := os.Open(&amp;quot;/home/me/Documents/learning-go/1
        - sonar-sweep/data.csv&amp;quot;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if err
        != nil {\n    log.Fatal(err)\n}\n\ncsvReader := csv.NewReader(file)\n\ndata,
        err := csvReader.ReadAll()\nif err != nil {\n    log.Fatal(err)\n}\n\nvar
        prev int\nvar count int\n\nfor i, val := range data {\n    val_int, err :=
        strconv.Atoi(val[0])\n    if err != nil {\n        log.Fatal(err)\n    }\n    if
        i != 0 &amp;amp;&amp;amp; prev &amp;lt; val_int {\n\n        count += 1\n    }\n    prev
        = val_int\n\n}\n\nfmt.Println(count)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ia20x3q/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1653567211.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hpwm6c0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "aslamdoctor", "can_mod_post": false, "created_utc":
        1640428696.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_i5gam", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "PHP Solution:\n\nhttps://github.com/aslamdoctor/advent-of-code-2021/tree/main/day1",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hpwm6c0", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP
        Solution:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/aslamdoctor/advent-of-code-2021/tree/main/day1\"&gt;https://github.com/aslamdoctor/advent-of-code-2021/tree/main/day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpwm6c0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640428696.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hpw3irr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Scarecroweman", "can_mod_post": false,
        "created_utc": 1640412026.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_9klq1nq8", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "As i started my programming
        life on an Amiga 600, i thought it was fitting to try and complete some days
        on the Amiga this year.\n\n[https://imgur.com/a/TPUxIru](https://imgur.com/a/TPUxIru)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hpw3irr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As
        i started my programming life on an Amiga 600, i thought it was fitting to
        try and complete some days on the Amiga this year.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://imgur.com/a/TPUxIru\"&gt;https://imgur.com/a/TPUxIru&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpw3irr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640412026.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hps3c2i", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "MarcoServetto", "can_mod_post": false,
        "created_utc": 1640326431.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_ghrvvdei", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "I''m solving the advent
        of code in [42](https://L42.is)\nThe main selling point of 42 is that it enforces
        modular security,\nthat is not very relevant for the advent of code.\nI''ve
        done a video explanation for the [First Week](https://www.youtube.com/watch?v=tSTDJlICst8)\nand
        I''ve posted individual solutions on dev.to: Solution for [Day 1](https://dev.to/marcoservetto/adventofcode-in-42-3dc9)\nFell
        free to contact me if you to know more about the language.", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hps3c2i",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m solving
        the advent of code in &lt;a href=\"https://L42.is\"&gt;42&lt;/a&gt;\nThe main
        selling point of 42 is that it enforces modular security,\nthat is not very
        relevant for the advent of code.\nI&amp;#39;ve done a video explanation for
        the &lt;a href=\"https://www.youtube.com/watch?v=tSTDJlICst8\"&gt;First Week&lt;/a&gt;\nand
        I&amp;#39;ve posted individual solutions on dev.to: Solution for &lt;a href=\"https://dev.to/marcoservetto/adventofcode-in-42-3dc9\"&gt;Day
        1&lt;/a&gt;\nFell free to contact me if you to know more about the language.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hps3c2i/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640326431.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hplttpm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "melikecoding", "can_mod_post": false,
        "created_utc": 1640208331.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_bdourct0", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "javascript/typescript
        solution\n\npart1:\n\n    const increasedTimes = input.reduce((acc, curr,
        index, arr) =&gt; (curr &gt; arr[index - 1] ? acc + 1 : acc),0);\n\npart2:\n\n      const
        windows = (windowSize: number, arr: number[]) =&gt;  \n          arr.flatMap((_,
        i) =&gt;  \n        i &lt;= arr.length - windowSize ? [arr.slice(i, i + windowSize)]
        : []  \n          );  \n        const timesWindowsIncreased = windows(3, input).reduce(  \n          (acc,
        curr, index, arr) =&gt; {  \n        const currentSum = sumUp(curr);  \n        const
        prevSum = arr[index - 1] ? sumUp(arr[index - 1]) : 0;  \n        return prevSum
        &amp;&amp; currentSum &gt; prevSum ? acc + 1 : acc;  \n          },  \n          0  \n        );",
        "edited": 1640210180.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hplttpm", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;javascript/typescript
        solution&lt;/p&gt;\n\n&lt;p&gt;part1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        increasedTimes = input.reduce((acc, curr, index, arr) =&amp;gt; (curr &amp;gt;
        arr[index - 1] ? acc + 1 : acc),0);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  const
        windows = (windowSize: number, arr: number[]) =&amp;gt;  \n      arr.flatMap((_,
        i) =&amp;gt;  \n    i &amp;lt;= arr.length - windowSize ? [arr.slice(i, i
        + windowSize)] : []  \n      );  \n    const timesWindowsIncreased = windows(3,
        input).reduce(  \n      (acc, curr, index, arr) =&amp;gt; {  \n    const currentSum
        = sumUp(curr);  \n    const prevSum = arr[index - 1] ? sumUp(arr[index - 1])
        : 0;  \n    return prevSum &amp;amp;&amp;amp; currentSum &amp;gt; prevSum
        ? acc + 1 : acc;  \n      },  \n      0  \n    );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hplttpm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640208331.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hqqdkgp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "FBones173", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_hqnssoi", "score": 2, "author_fullname": "t2_13zub9",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Thanks so much for elaborating!  \nHope you
        have a merry and safe holiday!", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_hqqdkgp", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks so much for elaborating!&lt;br/&gt;\nHope
        you have a merry and safe holiday!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hqqdkgp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640987284.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1640987284.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hqnssoi", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Jack_Spearrow", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_hqnomm0", "score": 1, "author_fullname":
        "t2_dumm00x1", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "Sorry for the incomplete information! Here is
        the implement for the Avent trait. It is implemented in [main.rs](https://github.com/cpea2506/avent-of-code-2021/blob/main/src/main.rs)\n\n    pub
        trait Avent {\n        fn new(data: Vec&lt;String&gt;) -&gt; Self\n        where\n            Self:
        Sized;\n        fn part1(&amp;self) -&gt; usize;\n        fn part2(&amp;self)
        -&gt; usize;\n    }\n\nIt was here because i want to write and read all solutions
        from one program (Do not need to create another program for another day).
        For that to be done, I need a type to represent all days to use with match
        because match arm must return the same type.\n\n    let solution = match day
        {\n        1 =&gt; Solution::new::&lt;day1::SonarSweep&gt;(content),\n        2
        =&gt; Solution::new::&lt;day2::Dive&gt;(content),\n        _ =&gt; unreachable!(),\n    };\n\nAs
        you can see from the struct Solution, the new function receives an Event which
        implement Avent trait with static lifetime.\n\n    struct Solution {\n        event:
        Box&lt;dyn Avent&gt;,\n    }\n    \n    impl Solution { \n        fn new&lt;Event:
        Avent + ''static&gt;(content: Vec&lt;String&gt;) -&gt; Self {      \n            let
        event = Event::new(content);\n            Solution {\n                event:
        Box::new(event),\n            }\n        }\n    }\n\nAnd the line below say
        that the trait Avent is implemented for SonarSweep so that it can be passed
        to the new function of Solution.\n\n    impl crate::Avent for SonarSweep",
        "edited": 1640954953.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_hqnssoi", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sorry
        for the incomplete information! Here is the implement for the Avent trait.
        It is implemented in &lt;a href=\"https://github.com/cpea2506/avent-of-code-2021/blob/main/src/main.rs\"&gt;main.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        trait Avent {\n    fn new(data: Vec&amp;lt;String&amp;gt;) -&amp;gt; Self\n    where\n        Self:
        Sized;\n    fn part1(&amp;amp;self) -&amp;gt; usize;\n    fn part2(&amp;amp;self)
        -&amp;gt; usize;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It was here because
        i want to write and read all solutions from one program (Do not need to create
        another program for another day). For that to be done, I need a type to represent
        all days to use with match because match arm must return the same type.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        solution = match day {\n    1 =&amp;gt; Solution::new::&amp;lt;day1::SonarSweep&amp;gt;(content),\n    2
        =&amp;gt; Solution::new::&amp;lt;day2::Dive&amp;gt;(content),\n    _ =&amp;gt;
        unreachable!(),\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As you can see
        from the struct Solution, the new function receives an Event which implement
        Avent trait with static lifetime.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;struct
        Solution {\n    event: Box&amp;lt;dyn Avent&amp;gt;,\n}\n\nimpl Solution {
        \n    fn new&amp;lt;Event: Avent + &amp;#39;static&amp;gt;(content: Vec&amp;lt;String&amp;gt;)
        -&amp;gt; Self {      \n        let event = Event::new(content);\n        Solution
        {\n            event: Box::new(event),\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And
        the line below say that the trait Avent is implemented for SonarSweep so that
        it can be passed to the new function of Solution.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;impl
        crate::Avent for SonarSweep\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hqnssoi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640939497.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1640939497.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hqnomm0", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "FBones173", "can_mod_post": false, "created_utc":
        1640936379.0, "send_replies": true, "parent_id": "t1_hpj2j12", "score": 2,
        "author_fullname": "t2_13zub9", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "&gt;impl crate::Avent for
        SonarSweep \n\nI''m just starting to learn Rust, and am having trouble determining
        from the language reference what the above does. Could you explain what is
        going on here?", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hqnomm0", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;impl
        crate::Avent for SonarSweep &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m
        just starting to learn Rust, and am having trouble determining from the language
        reference what the above does. Could you explain what is going on here?&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hqnomm0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640936379.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hpj2j12", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Jack_Spearrow", "can_mod_post": false,
        "created_utc": 1640156077.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 1, "author_fullname": "t2_dumm00x1", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Rust solution\n\n        pub
        struct SonarSweep {\n            data: Vec&lt;usize&gt;,\n        }\n    \n        impl
        crate::Avent for SonarSweep {\n            fn new(data: Vec&lt;String&gt;)
        -&gt; Self {\n                SonarSweep {\n                    data: data.iter().filter_map(|l|
        l.parse().ok()).collect(),\n                }\n            }\n    \n            fn
        part1(&amp;self) -&gt; usize {\n                self.data.windows(3).filter(|d|
        d[0] &lt; d[1]).count()\n            }\n    \n            fn part2(&amp;self)
        -&gt; usize {\n                self.data\n                    .windows(3)\n                    .zip(self.data.windows(3).skip(1))\n                    .filter(|(a,
        b)| a.iter().sum::&lt;usize&gt;() &lt; b.iter().sum())\n                    .count()\n            }\n        }",
        "edited": 1640290813.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hpj2j12", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust
        solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    pub struct SonarSweep {\n        data:
        Vec&amp;lt;usize&amp;gt;,\n    }\n\n    impl crate::Avent for SonarSweep {\n        fn
        new(data: Vec&amp;lt;String&amp;gt;) -&amp;gt; Self {\n            SonarSweep
        {\n                data: data.iter().filter_map(|l| l.parse().ok()).collect(),\n            }\n        }\n\n        fn
        part1(&amp;amp;self) -&amp;gt; usize {\n            self.data.windows(3).filter(|d|
        d[0] &amp;lt; d[1]).count()\n        }\n\n        fn part2(&amp;amp;self)
        -&amp;gt; usize {\n            self.data\n                .windows(3)\n                .zip(self.data.windows(3).skip(1))\n                .filter(|(a,
        b)| a.iter().sum::&amp;lt;usize&amp;gt;() &amp;lt; b.iter().sum())\n                .count()\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpj2j12/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640156077.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hpijlw8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[Python - Video Explanation](https://www.youtube.com/watch?v=D25_S2cWjl0&amp;t=14s)",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://www.youtube.com/watch?v=D25_S2cWjl0&amp;amp;t=14s\"&gt;Python
        - Video Explanation&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpijlw8/",
        "num_reports": null, "locked": false, "name": "t1_hpijlw8", "created": 1640145009.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1640145009.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hph6pz1", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "iskypitts", "can_mod_post": false, "created_utc":
        1640123123.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_13hx11", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Julia](https://github.com/iskyd/advent-of-code-julia/blob/main/2021/day1/main.jl)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hph6pz1", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/iskyd/advent-of-code-julia/blob/main/2021/day1/main.jl\"&gt;Julia&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hph6pz1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640123123.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hpctq6n", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "arthurno1", "can_mod_post": false, "created_utc":
        1640042423.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_13zo3p", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[**Emacs Lisp**](https://github.com/amno1/advent-of-code-2021/blob/main/day1.el)\n\nSolved
        (mostly) in functional style.\n\n    (with-temp-buffer\n      (insert-file-contents-literally
        \"./input1\")\n      (let* ((list (map ''list #''string-to-number (split-string
        (buffer-string))))\n             (parts (cl-maplist #''(lambda (p)\n                                    (and
        p (cdr p) (cddr p)\n                                         (list (car p)
        (cadr p) (caddr p)))) list))\n             (sums (cl-mapcar #''(lambda (p)
        (apply #''+ p)) parts)))\n        (message \"P1: %s\" (cl-count ''t (cl-mapcar
        ''&lt; list (cdr list))))\n        (message \"P2: %s\" (cl-count ''t (cl-mapcar
        #''&lt; sums (cdr sums))))))", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_hpctq6n", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/amno1/advent-of-code-2021/blob/main/day1.el\"&gt;&lt;strong&gt;Emacs
        Lisp&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Solved (mostly) in functional
        style.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(with-temp-buffer\n  (insert-file-contents-literally
        &amp;quot;./input1&amp;quot;)\n  (let* ((list (map &amp;#39;list #&amp;#39;string-to-number
        (split-string (buffer-string))))\n         (parts (cl-maplist #&amp;#39;(lambda
        (p)\n                                (and p (cdr p) (cddr p)\n                                     (list
        (car p) (cadr p) (caddr p)))) list))\n         (sums (cl-mapcar #&amp;#39;(lambda
        (p) (apply #&amp;#39;+ p)) parts)))\n    (message &amp;quot;P1: %s&amp;quot;
        (cl-count &amp;#39;t (cl-mapcar &amp;#39;&amp;lt; list (cdr list))))\n    (message
        &amp;quot;P2: %s&amp;quot; (cl-count &amp;#39;t (cl-mapcar #&amp;#39;&amp;lt;
        sums (cdr sums))))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpctq6n/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640042423.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hpy9nvq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "brianReddits",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hpwecja", "score":
        1, "author_fullname": "t2_q18l3", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Trust haha", "edited": false,
        "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "name":
        "t1_hpy9nvq", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Trust
        haha&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "link_id": "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpy9nvq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640465288.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1640465288.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hpwecja", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Scarecroweman", "can_mod_post": false,
        "created_utc": 1640421104.0, "send_replies": true, "parent_id": "t1_hpbb8ay",
        "score": 2, "author_fullname": "t2_9klq1nq8", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Hahah run\\_my\\_boy()
        similar to me coding a function called DoThyBidding() :D", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hpwecja",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hahah run_my_boy() similar
        to me coding a function called DoThyBidding() :D&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpwecja/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640421104.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hpbb8ay", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "brianReddits", "can_mod_post": false,
        "created_utc": 1640019728.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_q18l3", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Hi guys,\n\nLanguage
        : Python\n\nLink : [Github Link](https://github.com/BrianMwangi21/aoc2021/tree/main/day1)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hpbb8ay", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hi
        guys,&lt;/p&gt;\n\n&lt;p&gt;Language : Python&lt;/p&gt;\n\n&lt;p&gt;Link :
        &lt;a href=\"https://github.com/BrianMwangi21/aoc2021/tree/main/day1\"&gt;Github
        Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpbb8ay/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1640019728.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hpb4ocb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "qualia91",
        "can_mod_post": false, "created_utc": 1640017007.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4diwwkl0", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Language:
        Lua\n\n\r  \n[Github Solution](https://github.com/Qualia91/AdventOfCode2021/tree/master/Day1)\n\n&amp;#x200B;\n\nDay
        one of code roulette!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hpb4ocb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Language:
        Lua&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Qualia91/AdventOfCode2021/tree/master/Day1\"&gt;Github
        Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Day
        one of code roulette!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpb4ocb/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1640017007.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hpakt28",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "capulet2kx",
        "can_mod_post": false, "created_utc": 1640007744.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_3cmhy7xo", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Unreal
        Engine c++ VR project.\n\nI''ve made Computers with buttons (actors) and ComputerPrograms
        (uobjects) that run on them.  Each day''s solution is a different  computer
        program  \nhttps://github.com/capulet2kx/AdventOfCode2021/tree/Day1", "edited":
        1640018958.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_hpakt28", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Unreal
        Engine c++ VR project.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve made Computers with
        buttons (actors) and ComputerPrograms (uobjects) that run on them.  Each day&amp;#39;s
        solution is a different  computer program&lt;br/&gt;\n&lt;a href=\"https://github.com/capulet2kx/AdventOfCode2021/tree/Day1\"&gt;https://github.com/capulet2kx/AdventOfCode2021/tree/Day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpakt28/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640007744.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hp7kfdc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "j2lo", "can_mod_post": false, "created_utc":
        1639945884.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_1uq9vd", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Language: JavaScript.\n\n    // part 1\n    (()
        =&gt; {\n        let numIncreases = 0;\n    \n        for (let i = 1; i &lt;
        data.length; i++) {\n            const prev = data[i - 1];\n            const
        current = data[i];\n            \n            if (current &gt; prev) numIncreases
        += 1;\n        }\n        \n        console.log(numIncreases);\n    })();\n    \n    //
        part 2\n    (() =&gt; {\n        let numIncreases = 0;\n        let prev =
        0;\n    \n        for (let i = 2; i &lt; data.length; i += 1) {\n            const
        curr = data[i-2] + data[i-1] + data[i];\n    \n            if (!!prev &amp;&amp;
        curr &gt; prev) numIncreases += 1;\n    \n            prev = curr;\n        }\n    \n        console.log(numIncreases);\n    })();",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hp7kfdc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Language:
        JavaScript.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// part 1\n(() =&amp;gt; {\n    let
        numIncreases = 0;\n\n    for (let i = 1; i &amp;lt; data.length; i++) {\n        const
        prev = data[i - 1];\n        const current = data[i];\n\n        if (current
        &amp;gt; prev) numIncreases += 1;\n    }\n\n    console.log(numIncreases);\n})();\n\n//
        part 2\n(() =&amp;gt; {\n    let numIncreases = 0;\n    let prev = 0;\n\n    for
        (let i = 2; i &amp;lt; data.length; i += 1) {\n        const curr = data[i-2]
        + data[i-1] + data[i];\n\n        if (!!prev &amp;amp;&amp;amp; curr &amp;gt;
        prev) numIncreases += 1;\n\n        prev = curr;\n    }\n\n    console.log(numIncreases);\n})();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hp7kfdc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639945884.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 0, "removal_reason": null, "link_id": "t3_r66vow",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hpqmpsq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hpqmlw1", "score":
        1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Nope,
        still not fixed, now there''s *four* backticks.  Read the wiki article I posted,
        please.  You need to switch the editor to Markdown mode.", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hpqmpsq",
        "is_submitter": true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nope, still not fixed,
        now there&amp;#39;s &lt;em&gt;four&lt;/em&gt; backticks.  Read the wiki article
        I posted, please.  You need to switch the editor to Markdown mode.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpqmpsq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640299828.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1640299828.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hpqmlw1", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "created_utc": 1640299779.0, "send_replies": true, "parent_id": "t1_hppynu1",
        "score": 0, "approved_by": null, "report_reasons": null, "all_awardings":
        [], "subreddit_id": "t5_3b3wa", "body": "[deleted]", "edited": false, "author_flair_css_class":
        null, "downs": 0, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpqmlw1/",
        "num_reports": null, "locked": false, "name": "t1_hpqmlw1", "created": 1640299779.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "collapsed": false, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "hppynu1", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1640289282.0, "send_replies": true, "parent_id": "t1_hp2sf7f",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Triple backticks do
        not work on old.reddit.  Please edit your post to use the four-spaces code
        block Markdown as per our posting guidelines in the wiki: [How do I format
        code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hppynu1", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Triple
        backticks do not work on old.reddit.  Please edit your post to use the four-spaces
        code block Markdown as per our posting guidelines in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hppynu1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640289282.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hp2sf7f", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_r66vow", "score": 1, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": 1640299772.0, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hp2sf7f/",
        "num_reports": null, "locked": false, "name": "t1_hp2sf7f", "created": 1639853490.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1639853490.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hp0fbgz", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ThreadsOfCode", "can_mod_post": false,
        "created_utc": 1639801134.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_86ydms1g", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Python. I like list
        comprehensions.\n\n    numbers = [int(x) for x in open(''input01.txt'', ''r'').readlines()]\n\n    #
        part 1, with zip\n    pairs = zip(numbers, numbers[1:])\n    increases = [b
        - a for a,b in pairs if b - a &gt; 0]\n    print(''part 1:'', len(increases))\n\n    #
        part 2, with zip\n    windows = [sum(w) for w in zip(numbers, numbers[1:],
        numbers[2:])]\n    pairs = zip(windows, windows[1:])\n    increases = [b -
        a for a,b in pairs if b - a &gt; 0]\n    print(''part 2:'', len(increases))",
        "edited": 1639801952.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hp0fbgz", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python.
        I like list comprehensions.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;numbers =
        [int(x) for x in open(&amp;#39;input01.txt&amp;#39;, &amp;#39;r&amp;#39;).readlines()]\n\n#
        part 1, with zip\npairs = zip(numbers, numbers[1:])\nincreases = [b - a for
        a,b in pairs if b - a &amp;gt; 0]\nprint(&amp;#39;part 1:&amp;#39;, len(increases))\n\n#
        part 2, with zip\nwindows = [sum(w) for w in zip(numbers, numbers[1:], numbers[2:])]\npairs
        = zip(windows, windows[1:])\nincreases = [b - a for a,b in pairs if b - a
        &amp;gt; 0]\nprint(&amp;#39;part 2:&amp;#39;, len(increases))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hp0fbgz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639801134.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hoz9jsm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "cdbob", "can_mod_post": false, "created_utc":
        1639781166.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_8h5o8", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My day one solution in CPP (C++)\n\nhttps://github.com/thecdbob/AOC_2021_CPP/tree/master/day_01",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hoz9jsm", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        day one solution in CPP (C++)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/thecdbob/AOC_2021_CPP/tree/master/day_01\"&gt;https://github.com/thecdbob/AOC_2021_CPP/tree/master/day_01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoz9jsm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639781166.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "howd81k", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "qzyki", "can_mod_post": false, "created_utc":
        1639733967.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_9wlcu", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Julia** [solution](https://topaz.github.io/paste/#XQAAAQCSAQAAAAAAAAAzHUn/qWH7EwabQRdhvtUHVgU596v8ybLLT7rgbIAd8daFhy/ifr0MJ58WaYIORNyb9EPpGZjbeOSoodSFnyx9IzZsT7wfLU7vNtGTPGApdr/PNyi5i+Bq1jzLI62RlUsOiIK1oIMP/vw5jgAla0WG9t6g1jQMktnvbM1tZ/+I79W8Smsfssj3OGfDP8Wg+PXYfOmD7eS4LSqHXfZpEA2R2VWn817hfemAsNHpZ0uTQVzPNVqDF4wscF953Jft39ZtWPTcTElGLc4KpvA/oZzwczSl/xMxWAA=)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_howd81k", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Julia&lt;/strong&gt;
        &lt;a href=\"https://topaz.github.io/paste/#XQAAAQCSAQAAAAAAAAAzHUn/qWH7EwabQRdhvtUHVgU596v8ybLLT7rgbIAd8daFhy/ifr0MJ58WaYIORNyb9EPpGZjbeOSoodSFnyx9IzZsT7wfLU7vNtGTPGApdr/PNyi5i+Bq1jzLI62RlUsOiIK1oIMP/vw5jgAla0WG9t6g1jQMktnvbM1tZ/+I79W8Smsfssj3OGfDP8Wg+PXYfOmD7eS4LSqHXfZpEA2R2VWn817hfemAsNHpZ0uTQVzPNVqDF4wscF953Jft39ZtWPTcTElGLc4KpvA/oZzwczSl/xMxWAA=\"&gt;solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/howd81k/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639733967.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "houdnal", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "chadbaldwin", "can_mod_post": false, "created_utc":
        1639695933.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_u0kc6", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Solution in SQL Server T-SQL\n\nAll of my
        solutions are end to end runnable without any other dependencies other than
        SQL Server and the ability to create temp tables.\n\n[SQL](https://github.com/chadbaldwin/practice/blob/main/Advent%20of%20Code/2021/SQL/Day%2001.sql)\n\nGeneral
        note: For the input data, I''m doing no pre-processing other than encapsulating
        the values in quotes and parenthesis for ingesting into a table. From there
        I use SQL to parse and split strings.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_houdnal", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution in SQL Server T-SQL&lt;/p&gt;\n\n&lt;p&gt;All
        of my solutions are end to end runnable without any other dependencies other
        than SQL Server and the ability to create temp tables.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/chadbaldwin/practice/blob/main/Advent%20of%20Code/2021/SQL/Day%2001.sql\"&gt;SQL&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;General
        note: For the input data, I&amp;#39;m doing no pre-processing other than encapsulating
        the values in quotes and parenthesis for ingesting into a table. From there
        I use SQL to parse and split strings.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/houdnal/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639695933.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hori1ef", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "WillC5", "can_mod_post": false, "created_utc":
        1639649140.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_1kjcbt1a", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "C++, requires `#include` of `string` and
        `iostream` of course. Part one:\n\n    int prev, i, increases = 0;\n    for
        ( cin &gt;&gt; prev; cin &gt;&gt; i; prev = i )\n        if ( i &gt; prev
        )\n            ++increases;\n    cout &lt;&lt; increases &lt;&lt; endl;\n\nand
        part two:\n\n    int p[3], i = 0, next, increases = 0;\n    for ( cin &gt;&gt;
        p[0] &gt;&gt; p[1] &gt;&gt; p[2]; cin &gt;&gt; next; p[i++] = next, i %= 3
        )\n        if ( next &gt; p[i] )\n            ++increases;\n    cout &lt;&lt;
        increases &lt;&lt; endl;", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hori1ef", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++,
        requires &lt;code&gt;#include&lt;/code&gt; of &lt;code&gt;string&lt;/code&gt;
        and &lt;code&gt;iostream&lt;/code&gt; of course. Part one:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        prev, i, increases = 0;\nfor ( cin &amp;gt;&amp;gt; prev; cin &amp;gt;&amp;gt;
        i; prev = i )\n    if ( i &amp;gt; prev )\n        ++increases;\ncout &amp;lt;&amp;lt;
        increases &amp;lt;&amp;lt; endl;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and
        part two:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int p[3], i = 0, next, increases
        = 0;\nfor ( cin &amp;gt;&amp;gt; p[0] &amp;gt;&amp;gt; p[1] &amp;gt;&amp;gt;
        p[2]; cin &amp;gt;&amp;gt; next; p[i++] = next, i %= 3 )\n    if ( next &amp;gt;
        p[i] )\n        ++increases;\ncout &amp;lt;&amp;lt; increases &amp;lt;&amp;lt;
        endl;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hori1ef/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1639649140.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "horg42m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "YokiDiabeu",
        "can_mod_post": false, "created_utc": 1639647528.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_8sy3uc0n", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Solution
        in Python\n\n[GitHub Day 1](https://github.com/YokiDiabeul/advent_of_code/blob/a296b7efc58d309722048667b978ad5f87edd770/day%201/1.py)\n\n    def
        load_int_inputs(filename: str) -&gt; List[int]: \n        return [int(line)
        for line in load_inputs(filename)]\n    \n    def count_bigger_in_list(inputs:
        List[int]) -&gt; int: \n        return sum([inputs[i - 1] &lt; inputs[i] for
        i in range(1, len(inputs))])\n    \n    def day_1(): \n        inputs = load_int_inputs(\"1.txt\")
        \n        # inputs = [199, 200, 208, 210, 200, 207, 240, 269, 260, 263] \n        print(count_bigger_in_list(inputs))
        \n        new_inputs = [inputs[i - 2] + inputs[i - 1] + inputs[i] for i in
        range(2, len(inputs))] \n        print(count_bigger_in_list(new_inputs))",
        "edited": 1639648703.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_horg42m", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution
        in Python&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/YokiDiabeul/advent_of_code/blob/a296b7efc58d309722048667b978ad5f87edd770/day%201/1.py\"&gt;GitHub
        Day 1&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def load_int_inputs(filename:
        str) -&amp;gt; List[int]: \n    return [int(line) for line in load_inputs(filename)]\n\ndef
        count_bigger_in_list(inputs: List[int]) -&amp;gt; int: \n    return sum([inputs[i
        - 1] &amp;lt; inputs[i] for i in range(1, len(inputs))])\n\ndef day_1(): \n    inputs
        = load_int_inputs(&amp;quot;1.txt&amp;quot;) \n    # inputs = [199, 200, 208,
        210, 200, 207, 240, 269, 260, 263] \n    print(count_bigger_in_list(inputs))
        \n    new_inputs = [inputs[i - 2] + inputs[i - 1] + inputs[i] for i in range(2,
        len(inputs))] \n    print(count_bigger_in_list(new_inputs))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/horg42m/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639647528.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hoqpjoo", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jstruburn", "can_mod_post": false, "created_utc":
        1639629391.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_6bdue3cn", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Playing catchup\n\n**Language:** JavaScript\n\n**Visualization:**
        [Codepen](https://codepen.io/truburn/pen/qBPrRQj)\n\n# Part 1:\n\n    const
        depthChanges = (depths = []) =&gt; {\n      const changes = [];\n      let
        currentDepth;\n    \n      depths.forEach((dep, idx) =&gt; {\n        if (currentDepth)\n          changes.push(dep
        &gt; currentDepth ? ''inc'' : ''dec'');    \n        currentDepth = dep;\n      });\n    \n      const
        incCount = changes.filter(ch =&gt; ch === ''inc'').length;\n      const decCount
        = changes.filter(ch =&gt; ch === ''dec'').length;\n    \n      return { incCount,
        decCount, depths };\n    };\n\n# Part 2:\n\n    const depthWindowChanges =
        (list = []) =&gt; {\n      const changes = {};\n      let grp = 0;\n    \n      list.forEach(dep
        =&gt; {\n        Array(3).fill().forEach((_, idx) =&gt; {\n          const
        tmpGroup = grp - idx;\n          if (tmpGroup &gt;= 0) {\n            if (!changes[tmpGroup])
        changes[tmpGroup] = [];\n            changes[tmpGroup].push(dep);\n          }\n        });\n        grp
        += 1;\n      });\n    \n      const differences = [];\n      let currentDepth;\n    \n      const
        depths = Object.values(changes)\n        .filter(deps =&gt; deps.length ===
        3)\n        .map(deps =&gt; {\n          const total = deps.reduce((a,b) =&gt;
        a + b, 0);\n          if (currentDepth)\n            differences.push(total
        &gt; currentDepth ? ''inc'' : ''dec'');\n          currentDepth = total;\n          return
        deps;\n        });\n    \n      const incCount = differences.filter(ch =&gt;
        ch === ''inc'').length;\n      const decCount = differences.filter(ch =&gt;
        ch === ''dec'').length;\n    \n      return { incCount, decCount, depths };\n    };",
        "edited": 1639630411.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hoqpjoo", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Playing
        catchup&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Language:&lt;/strong&gt; JavaScript&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Visualization:&lt;/strong&gt;
        &lt;a href=\"https://codepen.io/truburn/pen/qBPrRQj\"&gt;Codepen&lt;/a&gt;&lt;/p&gt;\n\n&lt;h1&gt;Part
        1:&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;const depthChanges = (depths = [])
        =&amp;gt; {\n  const changes = [];\n  let currentDepth;\n\n  depths.forEach((dep,
        idx) =&amp;gt; {\n    if (currentDepth)\n      changes.push(dep &amp;gt; currentDepth
        ? &amp;#39;inc&amp;#39; : &amp;#39;dec&amp;#39;);    \n    currentDepth =
        dep;\n  });\n\n  const incCount = changes.filter(ch =&amp;gt; ch === &amp;#39;inc&amp;#39;).length;\n  const
        decCount = changes.filter(ch =&amp;gt; ch === &amp;#39;dec&amp;#39;).length;\n\n  return
        { incCount, decCount, depths };\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Part
        2:&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;const depthWindowChanges = (list =
        []) =&amp;gt; {\n  const changes = {};\n  let grp = 0;\n\n  list.forEach(dep
        =&amp;gt; {\n    Array(3).fill().forEach((_, idx) =&amp;gt; {\n      const
        tmpGroup = grp - idx;\n      if (tmpGroup &amp;gt;= 0) {\n        if (!changes[tmpGroup])
        changes[tmpGroup] = [];\n        changes[tmpGroup].push(dep);\n      }\n    });\n    grp
        += 1;\n  });\n\n  const differences = [];\n  let currentDepth;\n\n  const
        depths = Object.values(changes)\n    .filter(deps =&amp;gt; deps.length ===
        3)\n    .map(deps =&amp;gt; {\n      const total = deps.reduce((a,b) =&amp;gt;
        a + b, 0);\n      if (currentDepth)\n        differences.push(total &amp;gt;
        currentDepth ? &amp;#39;inc&amp;#39; : &amp;#39;dec&amp;#39;);\n      currentDepth
        = total;\n      return deps;\n    });\n\n  const incCount = differences.filter(ch
        =&amp;gt; ch === &amp;#39;inc&amp;#39;).length;\n  const decCount = differences.filter(ch
        =&amp;gt; ch === &amp;#39;dec&amp;#39;).length;\n\n  return { incCount, decCount,
        depths };\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoqpjoo/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639629391.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hoqgdq7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Late to the party. Did mine in PowerShell.\n\n    &lt;#
        PART 1 #&gt;\n    \n    $puzzleInput = [System.IO.File]::ReadAllLines(\"$PWD\\input.txt\")\n    \n    $larger
        = 0\n    $i = 1 #start evaluating at second item in array\n    while ($i -le
        $($puzzleInput.count -1)) {\n        if ([int]$puzzleInput[$i] -gt [int]$puzzleInput[$i-1])
        { $larger++ }\n        $i++\n    }\n    \n    Write-Host \"Number of items
        considered for part 1: $i\"\n    Write-Host \"Number of measurements that
        are larger than the previous measurement: $larger\"\n    \n    &lt;# PART
        2 #&gt;\n    \n    $i = 2\n    $larger = 0\n    $previousSum = [int]$puzzleInput[$i]
        + [int]$puzzleInput[$i-1] + [int]$puzzleInput[$i-2]\n    while ($i -le $($puzzleInput.count
        -1)) {\n        [int]$currentSum = [int]$puzzleInput[$i] + [int]$puzzleInput[$i-1]
        + [int]$puzzleInput[$i-2]\n        if ($currentSum -gt $previousSum) { $larger++
        }\n        $previousSum = $currentSum\n        $i++\n    }\n    \n    Write-Host
        \"Number of items considered for part 2: $i\"\n    Write-Host \"Number of
        sums that are larger than the previous sum: $larger\"", "edited": 1639625232.0,
        "downs": 0, "author_flair_css_class": null, "collapsed": false, "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Late to the party. Did
        mine in PowerShell.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;# PART 1 #&amp;gt;\n\n$puzzleInput
        = [System.IO.File]::ReadAllLines(&amp;quot;$PWD\\input.txt&amp;quot;)\n\n$larger
        = 0\n$i = 1 #start evaluating at second item in array\nwhile ($i -le $($puzzleInput.count
        -1)) {\n    if ([int]$puzzleInput[$i] -gt [int]$puzzleInput[$i-1]) { $larger++
        }\n    $i++\n}\n\nWrite-Host &amp;quot;Number of items considered for part
        1: $i&amp;quot;\nWrite-Host &amp;quot;Number of measurements that are larger
        than the previous measurement: $larger&amp;quot;\n\n&amp;lt;# PART 2 #&amp;gt;\n\n$i
        = 2\n$larger = 0\n$previousSum = [int]$puzzleInput[$i] + [int]$puzzleInput[$i-1]
        + [int]$puzzleInput[$i-2]\nwhile ($i -le $($puzzleInput.count -1)) {\n    [int]$currentSum
        = [int]$puzzleInput[$i] + [int]$puzzleInput[$i-1] + [int]$puzzleInput[$i-2]\n    if
        ($currentSum -gt $previousSum) { $larger++ }\n    $previousSum = $currentSum\n    $i++\n}\n\nWrite-Host
        &amp;quot;Number of items considered for part 2: $i&amp;quot;\nWrite-Host
        &amp;quot;Number of sums that are larger than the previous sum: $larger&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoqgdq7/",
        "num_reports": null, "locked": false, "name": "t1_hoqgdq7", "created": 1639624940.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1639624940.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "honxkpc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ainwood87", "can_mod_post": false, "created_utc":
        1639587587.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_3p5y4pfg", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Folders Language](https://danieltemkin.com/Esolangs/Folders/)\n\n[Part1
        solution](https://topaz.github.io/paste/#XQAAAQABJQAAAAAAAAAhjoHArF9deB+94021LEFEtI1K7uznC8Hz8vCu5mUtp27YcumiLHfvadpsW17En5/RNBHNGjzFPGRaO2pj7NkEt3xC1En923Xl3hHrUj9NBzJjd35MO22dShbxKWvI5X43NwLtJjJvdVhRFhxWo1ardy78K2kua3q82TYRcVJLh4PkwOEcQFR38GClhETVCOSYQ1kBYuPN47X55IhIZKXOEV7WXOx0Uue6wggRfQ7tgy4cX1E6iCd6BL3KPlo5zx4rOhNNELzsLGxi38dQo/NU3d+FaeAaCEMIaxMH0eyNX0xvmhrbCMSMr7zYSEl1POX2XxuttZdq8MRI+vRAhVLoTXWkZuW7MBqUYn7Kh/BlmDrhCMs1BEOSgtvbvaLRyHpJ1yF6OBbfNgwU6L1k0qFbj/RSliXKHVzFde7f1BooOFZn8ZxBK5fqhMyt791zDpjlcVdNA9QVB75S3s7UBr4I/UcBmCtZXJ15k7kvtIFOVhhBBDN92ZeI4nM2Ih74Zaqfu08BN8vK2MWoxuQK4IBol6PA2NY/xlu/oxgsceQFsGFo1nGhthMYwsHPDFYS9NqLGDT+6ngs+6FJe26p1UAZWFVaI5yvfAwQbuoSG7X/HJqFYDVrXj0DcVhAuuupi3FYT8wQdPCmUnotACaDQbOg1bH2e599gW3bxOt6Y0fxYaOIv93qhuexVmroPVWflCmrlpkIzj86CLXbhb3lJtylYy7c1t+4m0sfV9hUA+hvbdBe3v34C7bYOrCEW07knhPUwIE3FEbvqUY2uzOt4QkTWFAROWyhcPVRchiMSReF532EhNah/4EIH4Gc10sufhfdl0p1jliWes2RZhQk7AioGLi6Pti0qFlmXWXgYkdAVaS9elMVvG7BFsmi8hkh9LNuwyS+joaPlqF+btxcVu1+JWVohSMtSK1Bu626YjnHttZYmDLCU1QYxBpvV16s5lSrzXQBqnEM7Uz8TS7ON78hN4r5+tRpqWlUW3Gyf4hv6eQnYFVrFy20PVIqrYrHWI8OvgpgAF3+H//kMavf)\n\nCompiles
        to the following equivalent python:\n\n    var_0 = input()\n    if var_0.isdigit():\n        var_0
        = int(var_0)\n    else:\n        var_0 = var_0\n    var_1 = 0\n    var_2 =
        (200) * (10)\n    while ((var_2) &gt; (1)):\n        var_3 = input()\n        if
        var_3.isdigit():\n            var_3 = int(var_3)\n        else:\n            var_3
        = var_3\n        if ((var_3) &gt; (var_0)):\n            var_1 = (var_1) +
        (1)\n\n        var_0 = var_3\n        var_2 = (var_2) - (1)\n\n    print(var_1,
        end='''', flush=True)\n\nI hardcoded the input size as 2000 values because
        I didn''t know how to handle EOF. Also literal integers in Folders seem limited
        to 8-bit values, which is why I computed 2000 as 200 \\* 10.", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_honxkpc",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://danieltemkin.com/Esolangs/Folders/\"&gt;Folders
        Language&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQABJQAAAAAAAAAhjoHArF9deB+94021LEFEtI1K7uznC8Hz8vCu5mUtp27YcumiLHfvadpsW17En5/RNBHNGjzFPGRaO2pj7NkEt3xC1En923Xl3hHrUj9NBzJjd35MO22dShbxKWvI5X43NwLtJjJvdVhRFhxWo1ardy78K2kua3q82TYRcVJLh4PkwOEcQFR38GClhETVCOSYQ1kBYuPN47X55IhIZKXOEV7WXOx0Uue6wggRfQ7tgy4cX1E6iCd6BL3KPlo5zx4rOhNNELzsLGxi38dQo/NU3d+FaeAaCEMIaxMH0eyNX0xvmhrbCMSMr7zYSEl1POX2XxuttZdq8MRI+vRAhVLoTXWkZuW7MBqUYn7Kh/BlmDrhCMs1BEOSgtvbvaLRyHpJ1yF6OBbfNgwU6L1k0qFbj/RSliXKHVzFde7f1BooOFZn8ZxBK5fqhMyt791zDpjlcVdNA9QVB75S3s7UBr4I/UcBmCtZXJ15k7kvtIFOVhhBBDN92ZeI4nM2Ih74Zaqfu08BN8vK2MWoxuQK4IBol6PA2NY/xlu/oxgsceQFsGFo1nGhthMYwsHPDFYS9NqLGDT+6ngs+6FJe26p1UAZWFVaI5yvfAwQbuoSG7X/HJqFYDVrXj0DcVhAuuupi3FYT8wQdPCmUnotACaDQbOg1bH2e599gW3bxOt6Y0fxYaOIv93qhuexVmroPVWflCmrlpkIzj86CLXbhb3lJtylYy7c1t+4m0sfV9hUA+hvbdBe3v34C7bYOrCEW07knhPUwIE3FEbvqUY2uzOt4QkTWFAROWyhcPVRchiMSReF532EhNah/4EIH4Gc10sufhfdl0p1jliWes2RZhQk7AioGLi6Pti0qFlmXWXgYkdAVaS9elMVvG7BFsmi8hkh9LNuwyS+joaPlqF+btxcVu1+JWVohSMtSK1Bu626YjnHttZYmDLCU1QYxBpvV16s5lSrzXQBqnEM7Uz8TS7ON78hN4r5+tRpqWlUW3Gyf4hv6eQnYFVrFy20PVIqrYrHWI8OvgpgAF3+H//kMavf\"&gt;Part1
        solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Compiles to the following equivalent
        python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var_0 = input()\nif var_0.isdigit():\n    var_0
        = int(var_0)\nelse:\n    var_0 = var_0\nvar_1 = 0\nvar_2 = (200) * (10)\nwhile
        ((var_2) &amp;gt; (1)):\n    var_3 = input()\n    if var_3.isdigit():\n        var_3
        = int(var_3)\n    else:\n        var_3 = var_3\n    if ((var_3) &amp;gt; (var_0)):\n        var_1
        = (var_1) + (1)\n\n    var_0 = var_3\n    var_2 = (var_2) - (1)\n\nprint(var_1,
        end=&amp;#39;&amp;#39;, flush=True)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        hardcoded the input size as 2000 values because I didn&amp;#39;t know how
        to handle EOF. Also literal integers in Folders seem limited to 8-bit values,
        which is why I computed 2000 as 200 * 10.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/honxkpc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639587587.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hoy1owj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "-WorstWizard-",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hoxxeuj", "score":
        1, "author_fullname": "t2_8hnk3zf7", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "This day 1 solution
        actually happens to be the only one I''ve done for which I got inspired by
        someone else on this thread, so I can''t actually take credit for it :P\n\nOriginally
        solved both parts with for loops, and part 2 did the whole summing up and
        such to make a new vector, wasn''t that good. After browsing here, I rewrote
        both to use iterators, and then rewrote part 2 to be much smarter. The iterator-version
        of my original part 2 solution are in there in comments still.", "edited":
        false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null,
        "name": "t1_hoy1owj", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        day 1 solution actually happens to be the only one I&amp;#39;ve done for which
        I got inspired by someone else on this thread, so I can&amp;#39;t actually
        take credit for it :P&lt;/p&gt;\n\n&lt;p&gt;Originally solved both parts with
        for loops, and part 2 did the whole summing up and such to make a new vector,
        wasn&amp;#39;t that good. After browsing here, I rewrote both to use iterators,
        and then rewrote part 2 to be much smarter. The iterator-version of my original
        part 2 solution are in there in comments still.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoy1owj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639763655.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1639763655.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hoxxeuj", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "portfoliogoat", "can_mod_post": false,
        "created_utc": 1639762014.0, "send_replies": true, "parent_id": "t1_hoksu43",
        "score": 1, "author_fullname": "t2_rq8y7", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Haven''t looked at the
        other ones but this solution is really clean!", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hoxxeuj", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haven&amp;#39;t looked at the
        other ones but this solution is really clean!&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoxxeuj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639762014.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hoksu43", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "-WorstWizard-", "can_mod_post": false,
        "created_utc": 1639525589.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_8hnk3zf7", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[Rust Solution](https://topaz.github.io/paste/#XQAAAQDCAgAAAAAAAAA6nMjJFIj2ze+dGEQGVsnW0MvHUawi2v6FTVrSiamUSClN5byFXJ+qnjO3j4C+hC/vLB7bSTgBxS60UK8PGEf/CxBiST1hUHbgFlcqfevjY/pGNoD5ofpbIy8SqVPeahdRWdCdjVdiAWGCKUfVwD0p0puj65RR8WCZQ1FSGWZ0y+CAUmxQQZpO4yhFAjLizPZjNiLlFlYwQX1BNOcfwyIsE3NH22kfRmxSixdLOLwziXsGuMV8Dn5RBV5k0grIIOYJqxs34itMio5KtaGQ1Prbr0fJkFTn5psahnrOz18xKCfR3tlF89rjUQ5F248BX4fDgCSCqHxaKHacRePx7R8JmWo18JLVzLAB0JN8Q2JTImER97g9rEMHsVzo+9JHYhmP1nVpAidr4Jrj3gSi+bF7Kf+Se535)\n\nLearning
        Rust this year! The library at the top is some convenience functions for taking
        input, nothing magic.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hoksu43", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDCAgAAAAAAAAA6nMjJFIj2ze+dGEQGVsnW0MvHUawi2v6FTVrSiamUSClN5byFXJ+qnjO3j4C+hC/vLB7bSTgBxS60UK8PGEf/CxBiST1hUHbgFlcqfevjY/pGNoD5ofpbIy8SqVPeahdRWdCdjVdiAWGCKUfVwD0p0puj65RR8WCZQ1FSGWZ0y+CAUmxQQZpO4yhFAjLizPZjNiLlFlYwQX1BNOcfwyIsE3NH22kfRmxSixdLOLwziXsGuMV8Dn5RBV5k0grIIOYJqxs34itMio5KtaGQ1Prbr0fJkFTn5psahnrOz18xKCfR3tlF89rjUQ5F248BX4fDgCSCqHxaKHacRePx7R8JmWo18JLVzLAB0JN8Q2JTImER97g9rEMHsVzo+9JHYhmP1nVpAidr4Jrj3gSi+bF7Kf+Se535\"&gt;Rust
        Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Learning Rust this year! The library
        at the top is some convenience functions for taking input, nothing magic.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoksu43/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639525589.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hok9b83", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "sk1talets", "can_mod_post": false, "created_utc":
        1639517286.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_47isrk1b", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Node.js [solution](https://github.com/sk1talets/advent-of-code/blob/main/2021/1/script.js)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hok9b83", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Node.js
        &lt;a href=\"https://github.com/sk1talets/advent-of-code/blob/main/2021/1/script.js\"&gt;solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hok9b83/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639517286.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hoiptiy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "wevrem", "can_mod_post": false, "created_utc":
        1639495395.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_392lqth5", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "## Clojure\n\n    (ns advent-of-code.2021.day-01\n      (:require
        [advent-of-code.common :refer [parse-longs]]))\n\n    ;; --- Day 1: Sonar
        Sweep ---\n    ;; https://adventofcode.com/2021/day/1\n\n    (defn count-incr-pairs\n      \"Return
        count of increasing pairs.\"\n      [depths]\n      (-&gt;&gt;\n      (partition
        2 1 depths)\n      (filter #(apply &lt; %))\n      count))\n\n    (defn sum-of-triples\n      \"Return
        sums of triplets.\"\n      [depths]\n      (-&gt;&gt;\n      (partition 3
        1 depths)\n      (map #(apply + %))))\n\n    (comment\n      ;; puzzle 1\n      (count-incr-pairs
        (parse-longs (slurp \"input/2021/1-depths.txt\")))\n\n      ;; puzzle 2\n      (count-incr-pairs
        (sum-of-triples (parse-longs (slurp \"input/2021/1-depths.txt\"))))\n      )\n\n[source
        code](https://github.com/wevre/advent-of-code/blob/master/src/advent_of_code/2021/day_01.clj)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hoiptiy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Clojure&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns
        advent-of-code.2021.day-01\n  (:require [advent-of-code.common :refer [parse-longs]]))\n\n;;
        --- Day 1: Sonar Sweep ---\n;; https://adventofcode.com/2021/day/1\n\n(defn
        count-incr-pairs\n  &amp;quot;Return count of increasing pairs.&amp;quot;\n  [depths]\n  (-&amp;gt;&amp;gt;\n  (partition
        2 1 depths)\n  (filter #(apply &amp;lt; %))\n  count))\n\n(defn sum-of-triples\n  &amp;quot;Return
        sums of triplets.&amp;quot;\n  [depths]\n  (-&amp;gt;&amp;gt;\n  (partition
        3 1 depths)\n  (map #(apply + %))))\n\n(comment\n  ;; puzzle 1\n  (count-incr-pairs
        (parse-longs (slurp &amp;quot;input/2021/1-depths.txt&amp;quot;)))\n\n  ;;
        puzzle 2\n  (count-incr-pairs (sum-of-triples (parse-longs (slurp &amp;quot;input/2021/1-depths.txt&amp;quot;))))\n  )\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/wevre/advent-of-code/blob/master/src/advent_of_code/2021/day_01.clj\"&gt;source
        code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoiptiy/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1639495395.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hoia3c4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "e4ds",
        "can_mod_post": false, "created_utc": 1639487892.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_empiv8dh", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Python
        day 1 solution. Also [answers to other days are available in this repo](https://github.com/julian-west/adventofcode/tree/master/2021)
        (GitHub)\n\n    \"\"\"Day 1 Solution\"\"\"\n    import numpy as np\n    \n    \n    def
        part_1(measurements: list[int]) -&gt; int:\n        \"\"\"Count number of
        measurements larger than previous\"\"\"\n        result = [i2 &gt; i1 for
        i1, i2 in zip(measurements, measurements[1:])]\n        return sum(result)\n    \n    \n    def
        part_2(measurements: list[int], window: int) -&gt; int:\n        \"\"\"Count
        number of time sliding window sum is greater than previous\"\"\"\n        sliding_window_sum
        = np.convolve(measurements, np.ones(window, dtype=int), \"valid\")\n        return
        part_1(list(sliding_window_sum))\n    \n    \n    if __name__ == \"__main__\":\n        with
        open(\"input.txt\", \"r\") as input:\n            input_values = [int(x) for
        x in input.read().split()]\n    \n        part_1_ans = part_1(input_values)\n        print(part_1_ans)\n    \n        part_2_ans
        = part_2(input_values, window=3)\n        print(part_2_ans)", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hoia3c4",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python day 1 solution.
        Also &lt;a href=\"https://github.com/julian-west/adventofcode/tree/master/2021\"&gt;answers
        to other days are available in this repo&lt;/a&gt; (GitHub)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;Day
        1 Solution&amp;quot;&amp;quot;&amp;quot;\nimport numpy as np\n\n\ndef part_1(measurements:
        list[int]) -&amp;gt; int:\n    &amp;quot;&amp;quot;&amp;quot;Count number
        of measurements larger than previous&amp;quot;&amp;quot;&amp;quot;\n    result
        = [i2 &amp;gt; i1 for i1, i2 in zip(measurements, measurements[1:])]\n    return
        sum(result)\n\n\ndef part_2(measurements: list[int], window: int) -&amp;gt;
        int:\n    &amp;quot;&amp;quot;&amp;quot;Count number of time sliding window
        sum is greater than previous&amp;quot;&amp;quot;&amp;quot;\n    sliding_window_sum
        = np.convolve(measurements, np.ones(window, dtype=int), &amp;quot;valid&amp;quot;)\n    return
        part_1(list(sliding_window_sum))\n\n\nif __name__ == &amp;quot;__main__&amp;quot;:\n    with
        open(&amp;quot;input.txt&amp;quot;, &amp;quot;r&amp;quot;) as input:\n        input_values
        = [int(x) for x in input.read().split()]\n\n    part_1_ans = part_1(input_values)\n    print(part_1_ans)\n\n    part_2_ans
        = part_2(input_values, window=3)\n    print(part_2_ans)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoia3c4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639487892.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hoggamf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "qaraq",
        "can_mod_post": false, "created_utc": 1639446751.0, "send_replies": true,
        "parent_id": "t1_hofxxgq", "score": 1, "author_fullname": "t2_gxa8r", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Rockstar\n\nStack-based rework of 1B. I probably should have gone for Christmas
        carol than submarine-themed rock, but that was the creativity I had.\n\n    The
        pressure is invincible\n    The sea is deep\n    Rock the sonar\n    \n    Listen
        to the sea\n    Until the sea is mysterious\n    Burn the sea\n    Rock the
        sonar with the sea\n    Listen to the sea\n    \n    Roll the sonar into the
        message\n    Roll the sonar into the deep\n    Roll the sonar into the abyss\n    Roll
        the sonar into the reply\n    \n    Until the reply is mysterious\n    If
        the reply is greater than the message\n    Build the pressure  up\n    \n    let
        the message be the deep\n    let the deep be the abyss\n    let the abyss
        be the reply\n    roll the sonar into the reply\n    \n    Shout the pressure",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hoggamf", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rockstar&lt;/p&gt;\n\n&lt;p&gt;Stack-based
        rework of 1B. I probably should have gone for Christmas carol than submarine-themed
        rock, but that was the creativity I had.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;The
        pressure is invincible\nThe sea is deep\nRock the sonar\n\nListen to the sea\nUntil
        the sea is mysterious\nBurn the sea\nRock the sonar with the sea\nListen to
        the sea\n\nRoll the sonar into the message\nRoll the sonar into the deep\nRoll
        the sonar into the abyss\nRoll the sonar into the reply\n\nUntil the reply
        is mysterious\nIf the reply is greater than the message\nBuild the pressure  up\n\nlet
        the message be the deep\nlet the deep be the abyss\nlet the abyss be the reply\nroll
        the sonar into the reply\n\nShout the pressure\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoggamf/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639446751.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hofxxgq", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "qaraq", "can_mod_post": false, "created_utc":
        1639437979.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 5,
        "author_fullname": "t2_gxa8r", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# [Rockstar](https://codewithrockstar.com/)\n\nBecause
        why the heck not.\n\nI could have done better with my variable naming and
        poetic constants, but eh, at least it actually works.\n\nPart 1:\n\n    Christmas
        was submarined\n    My view is underwater\n    The sea is going down down
        down\n    \n    Until the sea is mysterious\n    Listen to the sea\n    If
        the sea is stronger than my view\n    Build Christmas up\n    \n    Let my
        view be the sea\n    \n    \n    Shout Christmas\n\nPart 2:\n\n    Rock the
        sonar\n    The ping is 3\n    The count is 0\n    The sea is deep\n    \n    Listen
        to the sea\n    Until the sea is mysterious\n    Burn the sea\n    Rock the
        sonar with the sea\n    Listen to the sea\n    \n    While the ping is weaker
        than the sonar\n    Let the pong be the ping\n    Knock the pong down, down,
        down\n    Let the echo be the sonar at the ping\n    Let the reply be the
        sonar at the pong\n    Build the ping up\n    If the echo is stronger than
        the reply\n    Build the count up\n    \n    \n    Shout the count", "edited":
        1639507311.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_hofxxgq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://codewithrockstar.com/\"&gt;Rockstar&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;Because
        why the heck not.&lt;/p&gt;\n\n&lt;p&gt;I could have done better with my variable
        naming and poetic constants, but eh, at least it actually works.&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Christmas was submarined\nMy view is
        underwater\nThe sea is going down down down\n\nUntil the sea is mysterious\nListen
        to the sea\nIf the sea is stronger than my view\nBuild Christmas up\n\nLet
        my view be the sea\n\n\nShout Christmas\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Rock the sonar\nThe ping is 3\nThe
        count is 0\nThe sea is deep\n\nListen to the sea\nUntil the sea is mysterious\nBurn
        the sea\nRock the sonar with the sea\nListen to the sea\n\nWhile the ping
        is weaker than the sonar\nLet the pong be the ping\nKnock the pong down, down,
        down\nLet the echo be the sonar at the ping\nLet the reply be the sonar at
        the pong\nBuild the ping up\nIf the echo is stronger than the reply\nBuild
        the count up\n\n\nShout the count\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hofxxgq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639437979.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 5}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hoehjnz", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "greycat70", "can_mod_post": false, "created_utc":
        1639416565.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_il9cr", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Bash**\n\n[part 1](https://wooledge.org/~greg/advent/2021/1a),
        [part 2](https://wooledge.org/~greg/advent/2021/1b)", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hoehjnz", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Bash&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://wooledge.org/%7Egreg/advent/2021/1a\"&gt;part 1&lt;/a&gt;,
        &lt;a href=\"https://wooledge.org/%7Egreg/advent/2021/1b\"&gt;part 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoehjnz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639416565.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hobdzvg", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kuqumi", "can_mod_post": false, "created_utc":
        1639354705.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_1ujr", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**JavaScript (golfed)**\n\nTweet-sized, to
        be run in the browser console on your input page.\n\n    d=$(''pre'').innerText.trim().split`\\n`;[1,3].map(n=&gt;d.reduce((a,x,i)=&gt;a+(+x&gt;d[i-n]),0))\n\nIt
        should output `[part1, part2]`.", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_hobdzvg", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;JavaScript (golfed)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Tweet-sized,
        to be run in the browser console on your input page.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d=$(&amp;#39;pre&amp;#39;).innerText.trim().split`\\n`;[1,3].map(n=&amp;gt;d.reduce((a,x,i)=&amp;gt;a+(+x&amp;gt;d[i-n]),0))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It
        should output &lt;code&gt;[part1, part2]&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hobdzvg/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639354705.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "ho5u91e",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "scarebaer",
        "can_mod_post": false, "created_utc": 1639254423.0, "send_replies": true,
        "parent_id": "t1_ho5jgbn", "score": 2, "author_fullname": "t2_lfgpb", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "&gt;triplet\\_list = \\[lst\\[i:i+3\\] for i in range(0, len(lst), 1)\\]\n\nInteresting...I
        like it.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_ho5u91e", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;triplet_list
        = [lst[i:i+3] for i in range(0, len(lst), 1)]&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Interesting...I
        like it.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "link_id": "t3_r66vow", "unrepliable_reason": null,
        "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho5u91e/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639254423.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "ho5jgbn", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kyleekol", "can_mod_post": false, "created_utc":
        1639249704.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_2jt645n", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "New to the AOC/coding world! - **Python**\n\nPart
        1\n\n    def counter() -&gt; int:\n    \n        with open(''input.txt'')
        as data:\n            lines = [x.strip() for x in data.readlines()]\n\n        count
        = 0\n    \n        lst = []\n        for i in lines:\n            lst.append(int(i))\n\n        for
        i, j in enumerate(lst[:-1]):\n            if j &lt; lst[i+1]:\n                count
        += 1\n    \n        print(count)\n            \n    counter()\n\nPart 2\n\n    def
        counter() -&gt; int:\n    \n        with open(''input.txt'') as data:\n            lines
        = [x.strip() for x in data.readlines()]\n\n        count = 0\n    \n        lst
        = []\n        for i in lines:\n            lst.append(int(i))\n            \n        triplet_list
        = [lst[i:i+3] for i in range(0, len(lst), 1)]\n    \n        sum_list = []\n    \n        for
        i in triplet_list:\n            sum_list.append(sum(i))\n\n        for i,
        j in enumerate(sum_list[:-1]):\n            if j &lt; sum_list[i+1]:\n                count
        += 1\n    \n        print(count)\n\n    counter()", "edited": 1639250057.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_ho5jgbn",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;New to the AOC/coding
        world! - &lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Part 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        counter() -&amp;gt; int:\n\n    with open(&amp;#39;input.txt&amp;#39;) as
        data:\n        lines = [x.strip() for x in data.readlines()]\n\n    count
        = 0\n\n    lst = []\n    for i in lines:\n        lst.append(int(i))\n\n    for
        i, j in enumerate(lst[:-1]):\n        if j &amp;lt; lst[i+1]:\n            count
        += 1\n\n    print(count)\n\ncounter()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def counter() -&amp;gt; int:\n\n    with
        open(&amp;#39;input.txt&amp;#39;) as data:\n        lines = [x.strip() for
        x in data.readlines()]\n\n    count = 0\n\n    lst = []\n    for i in lines:\n        lst.append(int(i))\n\n    triplet_list
        = [lst[i:i+3] for i in range(0, len(lst), 1)]\n\n    sum_list = []\n\n    for
        i in triplet_list:\n        sum_list.append(sum(i))\n\n    for i, j in enumerate(sum_list[:-1]):\n        if
        j &amp;lt; sum_list[i+1]:\n            count += 1\n\n    print(count)\n\ncounter()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho5jgbn/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639249704.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "ho53bqb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "j-a-martins", "can_mod_post": false, "created_utc":
        1639242963.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_hgkd0xs0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Matlab** (Part 1 &amp; 2)\n\nhttps://github.com/j-a-martins/Advent-of-Code-2021/blob/main/day01/day1.m",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_ho53bqb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Matlab&lt;/strong&gt;
        (Part 1 &amp;amp; 2)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/j-a-martins/Advent-of-Code-2021/blob/main/day01/day1.m\"&gt;https://github.com/j-a-martins/Advent-of-Code-2021/blob/main/day01/day1.m&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho53bqb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639242963.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "ho4ajh8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "tuisto_mannus", "can_mod_post": false,
        "created_utc": 1639229612.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_5zy9073q", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**Golang**\n\nhttps://github.com/c-kk/aoc/blob/master/2021-go/day01/solve.go",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_ho4ajh8", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Golang&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/c-kk/aoc/blob/master/2021-go/day01/solve.go\"&gt;https://github.com/c-kk/aoc/blob/master/2021-go/day01/solve.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho4ajh8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639229612.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "ho2b8uv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "yoyo604", "can_mod_post": false, "created_utc":
        1639185990.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_hfufqi6r", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Late to the party with a bit of old school
        C\n\n    int countincreases(int *d) {\n      int c = 0;\n      for (++d; *d;
        ++d)\n        c += *d &gt; *(d-1);\n      return c;\n    }", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_ho2b8uv",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Late to the party with
        a bit of old school C&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int countincreases(int
        *d) {\n  int c = 0;\n  for (++d; *d; ++d)\n    c += *d &amp;gt; *(d-1);\n  return
        c;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho2b8uv/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1639185990.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "ho20tvm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "itayzithyro",
        "can_mod_post": false, "created_utc": 1639181360.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_7jhkikfw", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "A
        short, functional-style solution in python, using [gamla](https://gamla.readthedocs.io/en/latest/README.html),
        a performant functional programming library.\n\n    import gamla\n    PART
        = 1\n    \n    with open(filename, \"r\") as f:\n        result = gamla.pipe(\n            f.readlines(),\n            gamla.map(int),\n            gamla.sliding_window(1
        if PART == 1 else 3),\n            gamla.map(sum),\n            gamla.sliding_window(2),\n            gamla.reduce(lambda
        sum_so_far, window: sum_so_far + int(window[1] &gt; window[0]), 0),\n        )\n    \n    print(result)\n\n&amp;#x200B;\n\nalso
        here: [https://gist.github.com/itayzit/710e6d65ca4c886ac81725a23d4df1a0](https://gist.github.com/itayzit/710e6d65ca4c886ac81725a23d4df1a0)",
        "edited": 1639181603.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_ho20tvm", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A
        short, functional-style solution in python, using &lt;a href=\"https://gamla.readthedocs.io/en/latest/README.html\"&gt;gamla&lt;/a&gt;,
        a performant functional programming library.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        gamla\nPART = 1\n\nwith open(filename, &amp;quot;r&amp;quot;) as f:\n    result
        = gamla.pipe(\n        f.readlines(),\n        gamla.map(int),\n        gamla.sliding_window(1
        if PART == 1 else 3),\n        gamla.map(sum),\n        gamla.sliding_window(2),\n        gamla.reduce(lambda
        sum_so_far, window: sum_so_far + int(window[1] &amp;gt; window[0]), 0),\n    )\n\nprint(result)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;also
        here: &lt;a href=\"https://gist.github.com/itayzit/710e6d65ca4c886ac81725a23d4df1a0\"&gt;https://gist.github.com/itayzit/710e6d65ca4c886ac81725a23d4df1a0&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho20tvm/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639181360.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "ho1joji", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "commandlineluser", "can_mod_post": false,
        "created_utc": 1639174050.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 0, "author_fullname": "t2_dqm6u", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Python - part 2 -
        `print()`\n\n    print(\n        sum(\n            windows[i] &gt; windows[i
        - 1]\n            for windows in [[\n                sum(window)\n                for
        lines in [[\n                    int(n) for n in\n                    __import__(''sys'').stdin\n                ]]\n                for
        i in range(len(lines))\n                for window in [lines[i:i+3]]\n                if
        len(window) == 3\n            ]]\n            for i in range(1, len(windows))\n        )\n    )",
        "edited": 1639211351.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_ho1joji", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        - part 2 - &lt;code&gt;print()&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(\n    sum(\n        windows[i]
        &amp;gt; windows[i - 1]\n        for windows in [[\n            sum(window)\n            for
        lines in [[\n                int(n) for n in\n                __import__(&amp;#39;sys&amp;#39;).stdin\n            ]]\n            for
        i in range(len(lines))\n            for window in [lines[i:i+3]]\n            if
        len(window) == 3\n        ]]\n        for i in range(1, len(windows))\n    )\n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho1joji/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639174050.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "ho11wop", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "x3mcj", "can_mod_post": false, "created_utc":
        1639166997.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_6bvqzpb1", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Better late than never\n\nPython\n\n    import
        os\n\n    import sys\n\n    data = \"\"\n\n    strPath = os.path.join(sys.path\\[0\\],
        \"day1Input.txt\")         \n    with open(strPath) as fileObject: data =
        \n    fileObject.read().split(''\\\\n'')\n\n    # Part 1\n\n    def part1(data):
        \n        current = 0 \n        previous = 0 \n        increased = 0 \n        for
        number in data: \n            current = int(number) \n            if previous
        != 0: \n                if current &gt; previous: \n                    increased
        += 1 previous = current\n\n    print(increased)\n\n    # Part 2\n\n    def
        part2(data): \n        startIndex = 0 \n        endIndex = 3 \n        chunks
        = \\[\\] \n        while endIndex &lt;= len(data) and startIndex &lt;= endIndex:
        \n            chunks.append(data\\[startIndex:endIndex\\])             \n            startIndex
        += 1 \n            if endIndex &lt; len(data): \n                endIndex
        += 1\n\n    current = 0\n    previous = 0\n    increased = 0\n    for chunk
        in chunks:\n        current = sum(int(item) for item in chunk)\n        if
        previous != 0:\n            if current &gt; previous:\n                increased
        += 1\n        previous = current\n    print(increased)\n\n    part1(data)
        \n    part2(data)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_ho11wop", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Better
        late than never&lt;/p&gt;\n\n&lt;p&gt;Python&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        os\n\nimport sys\n\ndata = &amp;quot;&amp;quot;\n\nstrPath = os.path.join(sys.path\\[0\\],
        &amp;quot;day1Input.txt&amp;quot;)         \nwith open(strPath) as fileObject:
        data = \nfileObject.read().split(&amp;#39;\\\\n&amp;#39;)\n\n# Part 1\n\ndef
        part1(data): \n    current = 0 \n    previous = 0 \n    increased = 0 \n    for
        number in data: \n        current = int(number) \n        if previous != 0:
        \n            if current &amp;gt; previous: \n                increased +=
        1 previous = current\n\nprint(increased)\n\n# Part 2\n\ndef part2(data): \n    startIndex
        = 0 \n    endIndex = 3 \n    chunks = \\[\\] \n    while endIndex &amp;lt;=
        len(data) and startIndex &amp;lt;= endIndex: \n        chunks.append(data\\[startIndex:endIndex\\])             \n        startIndex
        += 1 \n        if endIndex &amp;lt; len(data): \n            endIndex += 1\n\ncurrent
        = 0\nprevious = 0\nincreased = 0\nfor chunk in chunks:\n    current = sum(int(item)
        for item in chunk)\n    if previous != 0:\n        if current &amp;gt; previous:\n            increased
        += 1\n    previous = current\nprint(increased)\n\npart1(data) \npart2(data)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho11wop/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639166997.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "distinguished": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hq9sn2v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "yschaeff",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hq935b3", "score":
        1, "author_fullname": "t2_r1pmf", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": ":-o I don''t know what happened.
        This is my day 10 solution!", "edited": false, "author_flair_css_class": null,
        "name": "t1_hq9sn2v", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;:-o
        I don&amp;#39;t know what happened. This is my day 10 solution!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "link_id": "t3_r66vow", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": null, "treatment_tags":
        [], "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hq9sn2v/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640695765.0, "author_flair_text": null, "collapsed": false, "created_utc":
        1640695765.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hq935b3", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_ho3dmpc", "score": 1, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": true, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hq935b3/",
        "num_reports": null, "locked": false, "name": "t1_hq935b3", "created": 1640675978.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1640675978.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 3, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "ho3dmpc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "yschaeff", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_ho11syv", "score": 1, "author_fullname": "t2_r1pmf",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "It builds a stack where in pushes on the open brackets. If it
        encounters a close bracket it will check if the top of the stack has the matching
        opening bracket. If it matches the opening bracket is consumed. Otherwise
        we stop processing this line en we can add the offending bracket to the score
        and mark this line as ''mismatch error''.\n\nNow after processing of a line
        and we detect this is a ''incomplete error''. We simply need to calculate
        the points from anything left on the stack.", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_ho3dmpc", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It builds a stack where
        in pushes on the open brackets. If it encounters a close bracket it will check
        if the top of the stack has the matching opening bracket. If it matches the
        opening bracket is consumed. Otherwise we stop processing this line en we
        can add the offending bracket to the score and mark this line as &amp;#39;mismatch
        error&amp;#39;.&lt;/p&gt;\n\n&lt;p&gt;Now after processing of a line and we
        detect this is a &amp;#39;incomplete error&amp;#39;. We simply need to calculate
        the points from anything left on the stack.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho3dmpc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639205827.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1639205827.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "ho11syv", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "x3mcj", "can_mod_post": false, "created_utc":
        1639166956.0, "send_replies": true, "parent_id": "t1_hnyy2ps", "score": 1,
        "author_fullname": "t2_6bvqzpb1", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I also made it in python,
        as Im learning and trying to improve, but, do you think you could explain
        to me your code? I get you are using array selectors, yet, I can''t finish
        to understand your code", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_ho11syv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        also made it in python, as Im learning and trying to improve, but, do you
        think you could explain to me your code? I get you are using array selectors,
        yet, I can&amp;#39;t finish to understand your code&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho11syv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639166956.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hnyy2ps", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "yschaeff", "can_mod_post": false, "created_utc":
        1639130433.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_r1pmf", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python\n\n        from functools import reduce\n    pts
        = {'']'':(57, 2), '')'':(3, 1), ''}'':(1197, 3), ''&gt;'':(25137,4)}\n    get_ctag
        = {''['':'']'', ''('':'')'', ''{'':''}'', ''&lt;'':''&gt;''}\n    open_tags
        = set(get_ctag.keys())\n    pointsA = 0\n    pointsB = []\n    for line in
        open(''puzzle10.input'').readlines():\n        stack = []\n        incomplete
        = True\n        for tag in line.strip():\n            if tag in open_tags:\n                stack.append(tag)\n            else:\n                otag
        = stack.pop()\n                if get_ctag[otag] != tag:\n                    pointsA
        += pts[tag][0]\n                    incomplete = False\n                    break\n        if
        incomplete: ##unwind the stack for incomplete entries\n            points_per_tag
        = [pts[get_ctag[t]][1] for t in reversed(stack)]\n            pointsB.append(reduce(lambda
        a,b: a*5+b, points_per_tag))\n    print(\"part A\", pointsA)\n    print(\"part
        B\", sorted(pointsB)[len(pointsB)//2])", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hnyy2ps", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    from
        functools import reduce\npts = {&amp;#39;]&amp;#39;:(57, 2), &amp;#39;)&amp;#39;:(3,
        1), &amp;#39;}&amp;#39;:(1197, 3), &amp;#39;&amp;gt;&amp;#39;:(25137,4)}\nget_ctag
        = {&amp;#39;[&amp;#39;:&amp;#39;]&amp;#39;, &amp;#39;(&amp;#39;:&amp;#39;)&amp;#39;,
        &amp;#39;{&amp;#39;:&amp;#39;}&amp;#39;, &amp;#39;&amp;lt;&amp;#39;:&amp;#39;&amp;gt;&amp;#39;}\nopen_tags
        = set(get_ctag.keys())\npointsA = 0\npointsB = []\nfor line in open(&amp;#39;puzzle10.input&amp;#39;).readlines():\n    stack
        = []\n    incomplete = True\n    for tag in line.strip():\n        if tag
        in open_tags:\n            stack.append(tag)\n        else:\n            otag
        = stack.pop()\n            if get_ctag[otag] != tag:\n                pointsA
        += pts[tag][0]\n                incomplete = False\n                break\n    if
        incomplete: ##unwind the stack for incomplete entries\n        points_per_tag
        = [pts[get_ctag[t]][1] for t in reversed(stack)]\n        pointsB.append(reduce(lambda
        a,b: a*5+b, points_per_tag))\nprint(&amp;quot;part A&amp;quot;, pointsA)\nprint(&amp;quot;part
        B&amp;quot;, sorted(pointsB)[len(pointsB)//2])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnyy2ps/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639130433.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnws6vj", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Meldanor", "can_mod_post": false, "created_utc":
        1639089079.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_i1h8z", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Elixir\n\nGithub: [https://github.com/Meldanor/AdventOfCode2021/blob/master/lib/d01/challenge.ex](https://github.com/Meldanor/AdventOfCode2021/blob/master/lib/d01/challenge.ex)\n\n(Part1
        = run(1), Part2 = run(2). The input is read using a Util function which is
        inside the GitHub repo. The structure is to run the program \\`mix aoc 1 1\\`
        to run the first day first part)", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_hnws6vj", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Elixir&lt;/p&gt;\n\n&lt;p&gt;Github: &lt;a
        href=\"https://github.com/Meldanor/AdventOfCode2021/blob/master/lib/d01/challenge.ex\"&gt;https://github.com/Meldanor/AdventOfCode2021/blob/master/lib/d01/challenge.ex&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(Part1
        = run(1), Part2 = run(2). The input is read using a Util function which is
        inside the GitHub repo. The structure is to run the program `mix aoc 1 1`
        to run the first day first part)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnws6vj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639089079.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnvx869", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Factknowhow", "can_mod_post": false, "created_utc":
        1639076576.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_cvhhv", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "cobol: [part 1](https://topaz.github.io/paste/#XQAAAQC7BAAAAAAAAAAQao5IhF7X3d46qtY2/o2ZPox9BHBVbP6HKWoL7FI3QmTGMlcTAk5tfnQIJW5yX6ZbfdpQMaOi8NbFZA094jcKETc1Wwo9MiSii3uxoPslUf8/Xm5vjyiop/F8wBJpRb5/xom4T34TM+aoI7oyvNyNMS1WoeUX28j2RD4rMLt6CY8oKR1U+eUVEnjyHRtNclQCxYtiqvqHLYT+KTUTq2xLmty14QYop4o7KfBWkg4tEvUNzRP8Qkx7zQTxR+kxgNnzQYXvVfd9O9j+dZOx3n9wBhZmpDpA8lLozkSRDxpHj0YNYG43wKYHaGS1jth+8bOcUj5XDoS5J0HvpDcnENIMfFEtIqlHjizZRvVO2OzjDdhbTyes3OrdiG5bIMS2vVO2SLXhJj75Bo3QoFkQ+mlCvPk5sDvDvrqjpf6KBFafQk15qfep+3iYD5Dq4psa7dJQLl/NKBp4JWwtjNnkHt32e3OBrn4STWnM6DNBn5AWG8vF5n6RTgEIovHDpLmrNnS2Ycsh5D8Duhz47bc56i11PemACbREiV5NJR0nzG18xllOcSuXYnCymKapA/OK4Ut8rXzi6z8H1D72jytcQtqTj4ASxtdr0F94GEOv92w+9PWBOGPk3LPiKS+hgg+t3lru2v2dzsY=)\n[part
        2](https://topaz.github.io/paste/#XQAAAQBtCgAAAAAAAAAQao5IhF7X3d46qtY2/o2ZPox9BHBVbP6HKWoL7FI3QmTGMlcTAk5tfnQIJW5yX6ZbfdpQMaOi8NbFZA094jcKETc1Wwo9MiSii3uxoPslUf8/Xm5vjyiop/F8wBJpRb5/xom4T34TM+aoI7oyvNyNMS1WoeUX28j2RD4rMLt6CY8oKR1U+eUVEnjyHRtNclQCxYtiqvqHLYT+KTUTq2xLmty14QYop4o7KfBWkg4tEvUNzRP8Qkx7zQTxR+kxgNnzQYXvVfd9O9j+dZOx3n9wBhZmpDpA8lLozkSRDxpHj0YNYG43wKYHaGS1jth+8bOcUj5XDoS5J0IKcR3afnwr/YgxBFZRYx8Xp5f9oEnbXDqZsGxTwWqlHW12Eyc6l0x2PJt7Q1llAiV909C4H7QpkEkjY4SD+avyfoJRoQPi26vF8RiMOyzhcHl/cU+hh7r5m5mtdd4A3OyT46+x7FrV5igBx+VyaWKvmiWFb1ybuGd1ctPoLl1QVCDHD/J/NUrRoiEL4ydYdW1zqai4HJKe5DQMFuAuAZ8ma4S8GpusnIVhy1NdF2gFGjhuLzJtm5a2rZBvqqJ26eF2sBHPiIuu830yT/UzxRyG5muLfIoi3//teu4gMvGxHsguW70+xLiIa+our5vzUAPKt+A/mJ2MPSuu7lcRE6pXzb4eT9dYEn3fgccRfIUXs91C7unfn4JgwLLpTNh3m/LVCJ54oumJFcAb+8dwsv1n6KO4FgOEO5tzNBZTz2rUV85kO+Z2dPYH3b0ZWUP6JrTHM0yd5utJwuHu0cuRm5om7Sy+W0KuFDM/4+7XpNeWPAOiplR17bM1QmvJm+PK66GeqG5ntyj7mC6dN8F/BawXsDZ7psS9rc76zR9h+87h/e1F7zCI+pzvf8XBIf8wB9BfYtDRWMQKEkdfiHdymqmND+5kP7f/KXYpnvPvBEGzpzqyyXBHRQF+Y9o+GNYHdCSnPWWB+Mbofj/dnnzG6xBY4MG8CVgHHkgvhowFx8QbSHUdewYCMjPMN0WpSvxeuwJwnB7/56GTeg==)\n\ngo:
        [part 1](https://topaz.github.io/paste/#XQAAAQBsAgAAAAAAAAA4GEiZzRd1JAgz+whYRQxSFI7XvmlfhtGDinguAj8sFyd/fs4fcP3B6Imi/tk3ZYXTnbDzSiSN4G9mb66Ik+YPjZ3KSVOwI9wGH8Lj81O3j4tiQssY9YHd9dJHGjEIZpPH57qySC+U8JRocTpGdCi/cBJVpZjtMCZKsUyuFNtdEw3LiIeKRCHa89AxC+XnklP8evXSmpZh0MHInHiqmyvEhh+kadKlVEDbp8J07ii3Wm2KrU6ECDL/9iBjZjS3KxJMHKGrmy02SEJOThlLy/+nSclC/aYgqGpzl5m4IdlXP/bUFsMrj4e58KuZw+3neTJ9YUQteQsijoo1mIntI9OjfkF0jfAo7FQ9NQKGAF1CVJlzn4pRXHuTKJahjlpjfOzIewbqiGCdp7Y0ARyfnu+WYA04FLfJj00BpSO0KViYrWpIb2TN54gKleOlpEe0aVpIhLxed762TOOQTtvWy9eMiX2vqS9fLkhP8rKlQ6c9JETBFf+dfF3j)\n[part
        2](https://topaz.github.io/paste/#XQAAAQCOAwAAAAAAAAA4GEiZzRd1JAgz+whYRQxSFI7XvmlfhtGDinguAj8sFyd/fs4fcP3B6Imi/tk3ZYXTnbDzSiSN4G9mb66Ik+YPjZ3KSVOwI9wGH8Lj81O3j4tiQssY9YHd9dJHGjEIZpPH57qySC+U8JRocURXV7E7fK4/wV1SfE9kJ8RVXWaV+JMknI6ZSq8r8ke3P3oE9lfN9gFPZKvJ+wzmDNSPa+FNuxKy/rdJVZjDrU1KzfqxIu2uz0kA2RaloUhHcucfzmUm7G1dUzu1V8bOdXGo1VyyX7h4ajGDYJwpm+svlfcdi5YmaAjppoSRW2JFbbO5xRoxGUwGz3odEJrtXgtbwrVR2f752s2PBSpgqsvy5zpenCkGTh4b0ynRkOo9NjO3CuF8izkKFiTf44gx/bFRS9VBsT6RaDR8ALJiCYdfq01DMKrH/AfVPpF3TwoH/AhhFnPsPiAO0LRc8gfq1w6mMNers+0HdwaoLFs+63834gqUtsC2jwhSS8l8kFCrKF6Y0TYdoikhNMbjWqoZ3AsqZbUOXOTAeFNzNI6ecS+uqCV4FtjXUnSKIu+SwGIKGL5JeGzVOwq1Otwa7UeTzT4hmf20CJo9P/a2J6hKjnboadFCUO/0DWIog+KcX38cdpbCcRaKdoxoqOn/3PBLMQ==)\n\nI''m
        essentially new to both languages, haven''t done cobol in at least two years
        and before that didn''t have much experience with it to begin with.\nFor second
        part, I transformed the data by just squishing each moving window down to
        its sum and having a separate list of those.\n\nEdit: I''ve simplified my
        cobol implementation for part 2 to O(n):\n\n        IDENTIFICATION DIVISION.\n        PROGRAM-ID.
        advent-of-code-day-1.\n        ENVIRONMENT DIVISION.\n        INPUT-OUTPUT
        SECTION.\n        FILE-CONTROL.\n           SELECT input-file ASSIGN TO input-file-name\n           ORGANIZATION
        IS LINE SEQUENTIAL.\n        DATA DIVISION.\n        FILE SECTION.\n        fd
        input-file.\n        01 file-data.\n           05 file-datum PIC X(4).\n        WORKING-STORAGE
        SECTION.\n        01 input-file-name PIC X(25).\n\n        77 eof PIC X VALUE
        ''N''.\n        77 chunk-size PIC 9(1) VALUE 3.\n        77 ndata PIC 9(4)
        VALUE 2000.\n\n        01 idx PIC 9(4) VALUE 1.\n        01 c-idx PIC 9 VALUE
        1.\n        01 sub-idx PIC 9(4).\n        01 last-sum PIC 9(5).\n        01
        cur-sum PIC 9(5).\n        01 datum PIC 9(4).\n        01 cnt PIC 9(4).\n\n        01
        input-data.\n          02 input-datum PIC 9(4) OCCURS 1 TO 9999 TIMES\n          DEPENDING
        ON ndata.\n        PROCEDURE DIVISION.\n           ACCEPT input-file-name
        FROM COMMAND-LINE.\n           OPEN INPUT input-file.\n           PERFORM
        UNTIL eof = ''Y''\n               READ input-file\n                  AT END
        MOVE ''Y'' TO eof\n                  NOT AT END MOVE file-datum TO datum\n                  ADD
        cur-sum datum GIVING cur-sum\n                  MOVE datum TO input-datum
        OF input-data (idx)\n                  IF idx &gt; chunk-size \n                     SUBTRACT
        chunk-size FROM idx GIVING sub-idx\n                     SUBTRACT input-datum
        OF input-data (sub-idx) \n                     FROM cur-sum GIVING cur-sum\n                     IF
        cur-sum &gt; last-sum\n                        ADD 1 TO cnt\n                     END-IF\n                     MOVE
        cur-sum TO last-sum\n                  END-IF\n                  ADD 1 TO
        idx\n               END-READ\n           END-PERFORM.\n           CLOSE input-file.\n           DISPLAY
        ''result: '' cnt\n           STOP RUN.", "edited": 1639109309.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hnvx869", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;cobol: &lt;a href=\"https://topaz.github.io/paste/#XQAAAQC7BAAAAAAAAAAQao5IhF7X3d46qtY2/o2ZPox9BHBVbP6HKWoL7FI3QmTGMlcTAk5tfnQIJW5yX6ZbfdpQMaOi8NbFZA094jcKETc1Wwo9MiSii3uxoPslUf8/Xm5vjyiop/F8wBJpRb5/xom4T34TM+aoI7oyvNyNMS1WoeUX28j2RD4rMLt6CY8oKR1U+eUVEnjyHRtNclQCxYtiqvqHLYT+KTUTq2xLmty14QYop4o7KfBWkg4tEvUNzRP8Qkx7zQTxR+kxgNnzQYXvVfd9O9j+dZOx3n9wBhZmpDpA8lLozkSRDxpHj0YNYG43wKYHaGS1jth+8bOcUj5XDoS5J0HvpDcnENIMfFEtIqlHjizZRvVO2OzjDdhbTyes3OrdiG5bIMS2vVO2SLXhJj75Bo3QoFkQ+mlCvPk5sDvDvrqjpf6KBFafQk15qfep+3iYD5Dq4psa7dJQLl/NKBp4JWwtjNnkHt32e3OBrn4STWnM6DNBn5AWG8vF5n6RTgEIovHDpLmrNnS2Ycsh5D8Duhz47bc56i11PemACbREiV5NJR0nzG18xllOcSuXYnCymKapA/OK4Ut8rXzi6z8H1D72jytcQtqTj4ASxtdr0F94GEOv92w+9PWBOGPk3LPiKS+hgg+t3lru2v2dzsY=\"&gt;part
        1&lt;/a&gt;\n&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBtCgAAAAAAAAAQao5IhF7X3d46qtY2/o2ZPox9BHBVbP6HKWoL7FI3QmTGMlcTAk5tfnQIJW5yX6ZbfdpQMaOi8NbFZA094jcKETc1Wwo9MiSii3uxoPslUf8/Xm5vjyiop/F8wBJpRb5/xom4T34TM+aoI7oyvNyNMS1WoeUX28j2RD4rMLt6CY8oKR1U+eUVEnjyHRtNclQCxYtiqvqHLYT+KTUTq2xLmty14QYop4o7KfBWkg4tEvUNzRP8Qkx7zQTxR+kxgNnzQYXvVfd9O9j+dZOx3n9wBhZmpDpA8lLozkSRDxpHj0YNYG43wKYHaGS1jth+8bOcUj5XDoS5J0IKcR3afnwr/YgxBFZRYx8Xp5f9oEnbXDqZsGxTwWqlHW12Eyc6l0x2PJt7Q1llAiV909C4H7QpkEkjY4SD+avyfoJRoQPi26vF8RiMOyzhcHl/cU+hh7r5m5mtdd4A3OyT46+x7FrV5igBx+VyaWKvmiWFb1ybuGd1ctPoLl1QVCDHD/J/NUrRoiEL4ydYdW1zqai4HJKe5DQMFuAuAZ8ma4S8GpusnIVhy1NdF2gFGjhuLzJtm5a2rZBvqqJ26eF2sBHPiIuu830yT/UzxRyG5muLfIoi3//teu4gMvGxHsguW70+xLiIa+our5vzUAPKt+A/mJ2MPSuu7lcRE6pXzb4eT9dYEn3fgccRfIUXs91C7unfn4JgwLLpTNh3m/LVCJ54oumJFcAb+8dwsv1n6KO4FgOEO5tzNBZTz2rUV85kO+Z2dPYH3b0ZWUP6JrTHM0yd5utJwuHu0cuRm5om7Sy+W0KuFDM/4+7XpNeWPAOiplR17bM1QmvJm+PK66GeqG5ntyj7mC6dN8F/BawXsDZ7psS9rc76zR9h+87h/e1F7zCI+pzvf8XBIf8wB9BfYtDRWMQKEkdfiHdymqmND+5kP7f/KXYpnvPvBEGzpzqyyXBHRQF+Y9o+GNYHdCSnPWWB+Mbofj/dnnzG6xBY4MG8CVgHHkgvhowFx8QbSHUdewYCMjPMN0WpSvxeuwJwnB7/56GTeg==\"&gt;part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;go: &lt;a href=\"https://topaz.github.io/paste/#XQAAAQBsAgAAAAAAAAA4GEiZzRd1JAgz+whYRQxSFI7XvmlfhtGDinguAj8sFyd/fs4fcP3B6Imi/tk3ZYXTnbDzSiSN4G9mb66Ik+YPjZ3KSVOwI9wGH8Lj81O3j4tiQssY9YHd9dJHGjEIZpPH57qySC+U8JRocTpGdCi/cBJVpZjtMCZKsUyuFNtdEw3LiIeKRCHa89AxC+XnklP8evXSmpZh0MHInHiqmyvEhh+kadKlVEDbp8J07ii3Wm2KrU6ECDL/9iBjZjS3KxJMHKGrmy02SEJOThlLy/+nSclC/aYgqGpzl5m4IdlXP/bUFsMrj4e58KuZw+3neTJ9YUQteQsijoo1mIntI9OjfkF0jfAo7FQ9NQKGAF1CVJlzn4pRXHuTKJahjlpjfOzIewbqiGCdp7Y0ARyfnu+WYA04FLfJj00BpSO0KViYrWpIb2TN54gKleOlpEe0aVpIhLxed762TOOQTtvWy9eMiX2vqS9fLkhP8rKlQ6c9JETBFf+dfF3j\"&gt;part
        1&lt;/a&gt;\n&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCOAwAAAAAAAAA4GEiZzRd1JAgz+whYRQxSFI7XvmlfhtGDinguAj8sFyd/fs4fcP3B6Imi/tk3ZYXTnbDzSiSN4G9mb66Ik+YPjZ3KSVOwI9wGH8Lj81O3j4tiQssY9YHd9dJHGjEIZpPH57qySC+U8JRocURXV7E7fK4/wV1SfE9kJ8RVXWaV+JMknI6ZSq8r8ke3P3oE9lfN9gFPZKvJ+wzmDNSPa+FNuxKy/rdJVZjDrU1KzfqxIu2uz0kA2RaloUhHcucfzmUm7G1dUzu1V8bOdXGo1VyyX7h4ajGDYJwpm+svlfcdi5YmaAjppoSRW2JFbbO5xRoxGUwGz3odEJrtXgtbwrVR2f752s2PBSpgqsvy5zpenCkGTh4b0ynRkOo9NjO3CuF8izkKFiTf44gx/bFRS9VBsT6RaDR8ALJiCYdfq01DMKrH/AfVPpF3TwoH/AhhFnPsPiAO0LRc8gfq1w6mMNers+0HdwaoLFs+63834gqUtsC2jwhSS8l8kFCrKF6Y0TYdoikhNMbjWqoZ3AsqZbUOXOTAeFNzNI6ecS+uqCV4FtjXUnSKIu+SwGIKGL5JeGzVOwq1Otwa7UeTzT4hmf20CJo9P/a2J6hKjnboadFCUO/0DWIog+KcX38cdpbCcRaKdoxoqOn/3PBLMQ==\"&gt;part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m essentially new to both languages,
        haven&amp;#39;t done cobol in at least two years and before that didn&amp;#39;t
        have much experience with it to begin with.\nFor second part, I transformed
        the data by just squishing each moving window down to its sum and having a
        separate list of those.&lt;/p&gt;\n\n&lt;p&gt;Edit: I&amp;#39;ve simplified
        my cobol implementation for part 2 to O(n):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    IDENTIFICATION
        DIVISION.\n    PROGRAM-ID. advent-of-code-day-1.\n    ENVIRONMENT DIVISION.\n    INPUT-OUTPUT
        SECTION.\n    FILE-CONTROL.\n       SELECT input-file ASSIGN TO input-file-name\n       ORGANIZATION
        IS LINE SEQUENTIAL.\n    DATA DIVISION.\n    FILE SECTION.\n    fd input-file.\n    01
        file-data.\n       05 file-datum PIC X(4).\n    WORKING-STORAGE SECTION.\n    01
        input-file-name PIC X(25).\n\n    77 eof PIC X VALUE &amp;#39;N&amp;#39;.\n    77
        chunk-size PIC 9(1) VALUE 3.\n    77 ndata PIC 9(4) VALUE 2000.\n\n    01
        idx PIC 9(4) VALUE 1.\n    01 c-idx PIC 9 VALUE 1.\n    01 sub-idx PIC 9(4).\n    01
        last-sum PIC 9(5).\n    01 cur-sum PIC 9(5).\n    01 datum PIC 9(4).\n    01
        cnt PIC 9(4).\n\n    01 input-data.\n      02 input-datum PIC 9(4) OCCURS
        1 TO 9999 TIMES\n      DEPENDING ON ndata.\n    PROCEDURE DIVISION.\n       ACCEPT
        input-file-name FROM COMMAND-LINE.\n       OPEN INPUT input-file.\n       PERFORM
        UNTIL eof = &amp;#39;Y&amp;#39;\n           READ input-file\n              AT
        END MOVE &amp;#39;Y&amp;#39; TO eof\n              NOT AT END MOVE file-datum
        TO datum\n              ADD cur-sum datum GIVING cur-sum\n              MOVE
        datum TO input-datum OF input-data (idx)\n              IF idx &amp;gt; chunk-size
        \n                 SUBTRACT chunk-size FROM idx GIVING sub-idx\n                 SUBTRACT
        input-datum OF input-data (sub-idx) \n                 FROM cur-sum GIVING
        cur-sum\n                 IF cur-sum &amp;gt; last-sum\n                    ADD
        1 TO cnt\n                 END-IF\n                 MOVE cur-sum TO last-sum\n              END-IF\n              ADD
        1 TO idx\n           END-READ\n       END-PERFORM.\n       CLOSE input-file.\n       DISPLAY
        &amp;#39;result: &amp;#39; cnt\n       STOP RUN.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnvx869/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639076576.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnur9xx", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "WarriorKatHun", "can_mod_post": false,
        "created_utc": 1639059684.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 1, "author_fullname": "t2_ubuh9", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Java submarine building:\n\n[GitHub/DepthSweeper.java](https://github.com/Sycix-HK/Advent-of-Code-2021/blob/main/Java/submarine/equipment/sonar/DepthSweeper.java)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnur9xx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java
        submarine building:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Sycix-HK/Advent-of-Code-2021/blob/main/Java/submarine/equipment/sonar/DepthSweeper.java\"&gt;GitHub/DepthSweeper.java&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnur9xx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639059684.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnu2x4h", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "nardeas", "can_mod_post": false, "created_utc":
        1639043719.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_15upi1", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python with Numpy\n\n    import numpy as
        np\n    x = np.asarray(puzzle_input_string.splitlines(), float)\n\npart 1:\n\n    (np.convolve(x,
        [1, -1]) &gt; 0).sum() - 1\n\npart 2:\n\n    (np.convolve(np.convolve(x, np.ones(3))[2:-2],
        [1, -1]) &gt; 0).sum() - 1", "edited": 1639043968.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_hnu2x4h", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python with Numpy&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        numpy as np\nx = np.asarray(puzzle_input_string.splitlines(), float)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(np.convolve(x, [1, -1]) &amp;gt; 0).sum()
        - 1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(np.convolve(np.convolve(x,
        np.ones(3))[2:-2], [1, -1]) &amp;gt; 0).sum() - 1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnu2x4h/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639043719.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hntsh0x", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "BluePsychoRanger", "can_mod_post": false,
        "created_utc": 1639034972.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 1, "author_fullname": "t2_qa0ch", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "mcfunction (Minecraft)  \n\n\n[https://github.com/BluePsychoRanger/Advent-of-Code-2021/blob/main/advent_of_code_2021/data/aoc_2021/functions/day_1.mcfunction](https://github.com/BluePsychoRanger/Advent-of-Code-2021/blob/main/advent_of_code_2021/data/aoc_2021/functions/day_1.mcfunction)",
        "edited": 1639036249.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hntsh0x", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;mcfunction
        (Minecraft)  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/BluePsychoRanger/Advent-of-Code-2021/blob/main/advent_of_code_2021/data/aoc_2021/functions/day_1.mcfunction\"&gt;https://github.com/BluePsychoRanger/Advent-of-Code-2021/blob/main/advent_of_code_2021/data/aoc_2021/functions/day_1.mcfunction&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hntsh0x/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639034972.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnt6z26", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "minichado", "can_mod_post": false, "created_utc":
        1639021888.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_76b3a", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Excel\n\n[Part 1 and 2](https://i.imgur.com/IeDiR0n.png)\n\nSheet
        available [here](https://github.com/minichado/Advent_of_Code_2021/blob/main/AoC2021%20D1.xlsx)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnt6z26", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excel&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://i.imgur.com/IeDiR0n.png\"&gt;Part 1 and 2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Sheet
        available &lt;a href=\"https://github.com/minichado/Advent_of_Code_2021/blob/main/AoC2021%20D1.xlsx\"&gt;here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnt6z26/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639021888.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnt64lv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "filch-argus", "can_mod_post": false, "created_utc":
        1639021470.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_9g0n8wgd", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Java**\n\n    package day1;\n\n    import
        java.io.File;\n    import java.io.FileNotFoundException;\n    import java.util.Scanner;\n\n    public
        class SonarSweep {\n\n        public static void main(String[] args) throws
        FileNotFoundException {\n\n            Scanner scanner = new Scanner(new File(\"day1/input.txt\"));\n\n            int
        count = 0;\n            int[] currentWindow = { scanner.nextInt(), scanner.nextInt(),
        scanner.nextInt() };\n            while (scanner.hasNextInt()) {\n                int
        next = scanner.nextInt();\n                if (next &gt; currentWindow[0])
        {\n                    count++;\n                }\n                currentWindow[0]
        = currentWindow[1];\n                currentWindow[1] = currentWindow[2];\n                currentWindow[2]
        = next;\n            }\n            System.out.println(count);\n        }\n\n    }",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnt64lv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        day1;\n\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport
        java.util.Scanner;\n\npublic class SonarSweep {\n\n    public static void
        main(String[] args) throws FileNotFoundException {\n\n        Scanner scanner
        = new Scanner(new File(&amp;quot;day1/input.txt&amp;quot;));\n\n        int
        count = 0;\n        int[] currentWindow = { scanner.nextInt(), scanner.nextInt(),
        scanner.nextInt() };\n        while (scanner.hasNextInt()) {\n            int
        next = scanner.nextInt();\n            if (next &amp;gt; currentWindow[0])
        {\n                count++;\n            }\n            currentWindow[0] =
        currentWindow[1];\n            currentWindow[1] = currentWindow[2];\n            currentWindow[2]
        = next;\n        }\n        System.out.println(count);\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnt64lv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639021470.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnt5g4z", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TheRemyD", "can_mod_post": false, "created_utc":
        1639021140.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_we6kq", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python List comprehension (Part 1):\n\n    sonar_sweeps
        = [input list]\n    \n    entries = len(sonar_sweeps)\n    \n    print(len([sonar_sweeps[index]\n        for
        index in range(0, entries)\n        if index + 1 &lt; entries\n        and
        sonar_sweeps[index] &lt; sonar_sweeps[index + 1]]))", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hnt5g4z", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python List comprehension (Part
        1):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sonar_sweeps = [input list]\n\nentries
        = len(sonar_sweeps)\n\nprint(len([sonar_sweeps[index]\n    for index in range(0,
        entries)\n    if index + 1 &amp;lt; entries\n    and sonar_sweeps[index] &amp;lt;
        sonar_sweeps[index + 1]]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnt5g4z/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639021140.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hptbdef", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "green-raven", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_hpso1o0", "score": 1, "author_fullname": "t2_p26aul8",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Thanks! I was able to solve day 2 based on
        your day 1. I\u2019m actually doing AOC in Go but it\u2019s an excellent way
        to learn a new language. Also Elixir takes about 90% less lines of code!",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hptbdef", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks!
        I was able to solve day 2 based on your day 1. I\u2019m actually doing AOC
        in Go but it\u2019s an excellent way to learn a new language. Also Elixir
        takes about 90% less lines of code!&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hptbdef/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640358264.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1640358264.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hpso1o0", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "RewrittenCodeA", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_hpp5s1d", "score": 1, "author_fullname":
        "t2_93gyrgef", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "Check https://github.com/brainch-dev/aoc.ex",
        "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_hpso1o0", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Check
        &lt;a href=\"https://github.com/brainch-dev/aoc.ex\"&gt;https://github.com/brainch-dev/aoc.ex&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpso1o0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640342904.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1640342904.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hpqszge", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "RewrittenCodeA", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_hpp5s1d", "score": 1, "author_fullname":
        "t2_93gyrgef", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "Yes. It\u2019s under the `brainch-dev` organization
        account so I can use codespaces if I need to.", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_hpqszge", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes. It\u2019s under
        the &lt;code&gt;brainch-dev&lt;/code&gt; organization account so I can use
        codespaces if I need to.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_r66vow", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpqszge/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1640302742.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1640302742.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hpp5s1d", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "green-raven", "can_mod_post": false, "created_utc":
        1640277167.0, "send_replies": true, "parent_id": "t1_hnr5fxj", "score": 1,
        "author_fullname": "t2_p26aul8", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Are you keeping your AOC in
        GitHub? I could learn Elixir looking at solutions like this!", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hpp5s1d",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Are you keeping your
        AOC in GitHub? I could learn Elixir looking at solutions like this!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hpp5s1d/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1640277167.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hnr5fxj", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "RewrittenCodeA", "can_mod_post": false,
        "created_utc": 1638990981.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_93gyrgef", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Elixir\n\n    \"input/2021/1.txt\"\n    |&gt;
        File.read!()\n    |&gt; String.split()\n    |&gt; Enum.map(&amp;String.to_integer/1)\n    |&gt;
        Enum.chunk_every(2, 1, :discard)\n    |&gt; Enum.count(fn [x, y] -&gt; y &gt;
        x end)\n    |&gt; IO.inspect(label: \"part 1\")\n\n    \"input/2021/1.txt\"\n    |&gt;
        File.read!()\n    |&gt; String.split()\n    |&gt; Enum.map(&amp;String.to_integer/1)\n    |&gt;
        Enum.chunk_every(3, 1, :discard)\n    |&gt; Enum.map(&amp;Enum.sum/1)\n    |&gt;
        Enum.chunk_every(2, 1, :discard)\n    |&gt; Enum.count(fn [x, y] -&gt; y &gt;
        x end)\n    |&gt; IO.inspect(label: \"part 2\")", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hnr5fxj", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elixir&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;quot;input/2021/1.txt&amp;quot;\n|&amp;gt;
        File.read!()\n|&amp;gt; String.split()\n|&amp;gt; Enum.map(&amp;amp;String.to_integer/1)\n|&amp;gt;
        Enum.chunk_every(2, 1, :discard)\n|&amp;gt; Enum.count(fn [x, y] -&amp;gt;
        y &amp;gt; x end)\n|&amp;gt; IO.inspect(label: &amp;quot;part 1&amp;quot;)\n\n&amp;quot;input/2021/1.txt&amp;quot;\n|&amp;gt;
        File.read!()\n|&amp;gt; String.split()\n|&amp;gt; Enum.map(&amp;amp;String.to_integer/1)\n|&amp;gt;
        Enum.chunk_every(3, 1, :discard)\n|&amp;gt; Enum.map(&amp;amp;Enum.sum/1)\n|&amp;gt;
        Enum.chunk_every(2, 1, :discard)\n|&amp;gt; Enum.count(fn [x, y] -&amp;gt;
        y &amp;gt; x end)\n|&amp;gt; IO.inspect(label: &amp;quot;part 2&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnr5fxj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638990981.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_r66vow",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hoavdhv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kruvik",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_ho9krq0", "score":
        1, "author_fullname": "t2_mtst2", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Hey, sorry for the late reply.
        (num &gt; prev\\_num) is just a boolean with True value being 1, False being
        0. I can actually omit the 1 \\* part. counter adds True (1) if num &gt; prev\\_num
        is True.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_hoavdhv", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey,
        sorry for the late reply. (num &amp;gt; prev_num) is just a boolean with True
        value being 1, False being 0. I can actually omit the 1 * part. counter adds
        True (1) if num &amp;gt; prev_num is True.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoavdhv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639346600.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1639346600.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "ho9krq0", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_hnptyoq", "score": 1, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": false, "author_flair_css_class": null, "collapsed":
        true, "downs": 0, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/ho9krq0/",
        "num_reports": null, "locked": false, "name": "t1_ho9krq0", "created": 1639328228.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1639328228.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "hnptyoq", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kruvik", "can_mod_post": false, "created_utc":
        1638971759.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_mtst2", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Python day 1](https://github.com/DecemberDream/advent-of-code/tree/main/2021/day1)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnptyoq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/DecemberDream/advent-of-code/tree/main/2021/day1\"&gt;Python
        day 1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnptyoq/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1638971759.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hnt3ufi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1639020379.0, "send_replies": true,
        "parent_id": "t1_hnp4a13", "score": 2, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Your code is hard to read on old.reddit when everything is inlined like this.  Please
        edit it as per our posting guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnt3ufi", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your
        code is hard to read on old.reddit when everything is inlined like this.  Please
        edit it as per our posting guidelines in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnt3ufi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639020379.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hnp4a13", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "visokoo", "can_mod_post": false, "created_utc":
        1638953250.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_mywi1", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Part 1 in Python:\n\n```\ndef count_increased(input):\n    count,
        compare = 0, int(input[0])\n    for num in input[1:]:\n        if int(num)
        &gt; compare:\n            count += 1\n        compare = int(num)\n    return
        count\n```", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hnp4a13", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part
        1 in Python:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\ndef count_increased(input):\n    count,
        compare = 0, int(input[0])\n    for num in input[1:]:\n        if int(num)
        &amp;gt; compare:\n            count += 1\n        compare = int(num)\n    return
        count\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnp4a13/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1638953250.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_r66vow",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "hnmwis8", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        true, "author": "[deleted]", "can_mod_post": false, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "c++:\n\n    #include
        &lt;iostream&gt;\n    #include &lt;fstream&gt;\n    #include &lt;vector&gt;\n    #include
        &lt;string&gt;\n    \n    using namespace std;\n    \n    int main() {\n    \tvector&lt;string&gt;
        v;\n    \tifstream file(\"day1input.txt\");\n    \tif(file.is_open()) {\n    \t\tstring
        line;\n    \t\twhile(getline(file, line)) {\n    \t\t\tv.push_back(line);\n    \t\t}\n    \t}\n    \tfile.close();\n    \tint
        numincreased = 1;\n    \tfor(int i = 1; i &lt; v.size(); i++) {\n    \t\t//
        check item before\n    \t\tif(v[i] &gt; v[i - 1]) {\n    \t\t\tnumincreased++;\n    \t\t}\n    \t}\n    \tstd::cout
        &lt;&lt; numincreased &lt;&lt; std::endl;\n    \treturn 0;\n    }", "edited":
        1638976398.0, "downs": 0, "author_flair_css_class": null, "collapsed": false,
        "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;c++:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;fstream&amp;gt;\n#include &amp;lt;vector&amp;gt;\n#include
        &amp;lt;string&amp;gt;\n\nusing namespace std;\n\nint main() {\n    vector&amp;lt;string&amp;gt;
        v;\n    ifstream file(&amp;quot;day1input.txt&amp;quot;);\n    if(file.is_open())
        {\n        string line;\n        while(getline(file, line)) {\n            v.push_back(line);\n        }\n    }\n    file.close();\n    int
        numincreased = 1;\n    for(int i = 1; i &amp;lt; v.size(); i++) {\n        //
        check item before\n        if(v[i] &amp;gt; v[i - 1]) {\n            numincreased++;\n        }\n    }\n    std::cout
        &amp;lt;&amp;lt; numincreased &amp;lt;&amp;lt; std::endl;\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnmwis8/",
        "num_reports": null, "locked": false, "name": "t1_hnmwis8", "created": 1638909691.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638909691.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnmcfin", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "roufamatic", "can_mod_post": false, "created_utc":
        1638901050.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_h8mxsn29", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Scratch (just part 2): https://scratch.mit.edu/projects/609577711",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnmcfin", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Scratch
        (just part 2): &lt;a href=\"https://scratch.mit.edu/projects/609577711\"&gt;https://scratch.mit.edu/projects/609577711&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnmcfin/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638901050.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnl97du", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "JustinHuPrime", "can_mod_post": false,
        "created_utc": 1638883289.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 1, "author_fullname": "t2_1xbtco41", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "# x86_64 assembly\n\n[Part
        1](https://github.com/JustinHuPrime/AoC/blob/main/2021/1a.s) involved tracking
        the previous value and comparing against that - I didn''t even need an intermediate
        list storing all of the numbers.\n\n[Part 2](https://github.com/JustinHuPrime/AoC/blob/main/2021/1b.s)
        did require that list to set up the sliding window. I realized that the middle
        two elements of the sliding window are always the same, so I just had to compare
        elements three apart. Unlike my other solutions, I used the stack to store
        values here.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hnl97du", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;x86_64
        assembly&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/JustinHuPrime/AoC/blob/main/2021/1a.s\"&gt;Part
        1&lt;/a&gt; involved tracking the previous value and comparing against that
        - I didn&amp;#39;t even need an intermediate list storing all of the numbers.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/JustinHuPrime/AoC/blob/main/2021/1b.s\"&gt;Part
        2&lt;/a&gt; did require that list to set up the sliding window. I realized
        that the middle two elements of the sliding window are always the same, so
        I just had to compare elements three apart. Unlike my other solutions, I used
        the stack to store values here.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnl97du/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638883289.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hnngcdo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638918164.0, "send_replies": true,
        "parent_id": "t1_hnkper8", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1639020391.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hnngcdo", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your code is hard
        to read on old.reddit.  Please edit it as per our posting guidelines in the
        wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnngcdo/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638918164.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hnkper8", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "pistacchio", "can_mod_post": false, "created_utc":
        1638868908.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_32amy", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Typescript:\n\n\n    \n    function part1(input:
        number[]): number {\n      return input.reduce(\n        ([prev, sum], curr)
        =&gt; [curr, sum + (curr &gt; prev ? 1 : 0)],\n        [Number.MAX_SAFE_INTEGER,
        0],\n      )[1];\n    }\n    \n    function part2(input: number[]): number
        {\n      const WINDOW_SIZE = 3;\n    \n      return input.reduce(\n        ([prev,
        sum], _, idx) =&gt; {\n          const window = input.slice(idx, idx + WINDOW_SIZE);\n    \n          if
        (window.length &lt; WINDOW_SIZE) {\n            return [0, sum];\n          }\n    \n          const
        windowSum = window.reduce((a, c) =&gt; a + c, 0);\n    \n          return
        [windowSum, sum + (windowSum &gt; prev ? 1 : 0)];\n        },\n        [Number.MAX_SAFE_INTEGER,
        0],\n      )[1];\n    }", "edited": 1638975863.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_hnkper8", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Typescript:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        part1(input: number[]): number {\n  return input.reduce(\n    ([prev, sum],
        curr) =&amp;gt; [curr, sum + (curr &amp;gt; prev ? 1 : 0)],\n    [Number.MAX_SAFE_INTEGER,
        0],\n  )[1];\n}\n\nfunction part2(input: number[]): number {\n  const WINDOW_SIZE
        = 3;\n\n  return input.reduce(\n    ([prev, sum], _, idx) =&amp;gt; {\n      const
        window = input.slice(idx, idx + WINDOW_SIZE);\n\n      if (window.length &amp;lt;
        WINDOW_SIZE) {\n        return [0, sum];\n      }\n\n      const windowSum
        = window.reduce((a, c) =&amp;gt; a + c, 0);\n\n      return [windowSum, sum
        + (windowSum &amp;gt; prev ? 1 : 0)];\n    },\n    [Number.MAX_SAFE_INTEGER,
        0],\n  )[1];\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnkper8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638868908.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnkj2yt", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "JaegerMa", "can_mod_post": false, "created_utc":
        1638863592.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_2pi0nj51", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "ABAP\n\n[Github](https://github.com/JaegerMa/aoc2021-abap/blob/main/day1/day.abap)\n\nI
        saw no one doing it in ABAP, so let''s give it a try. ABAP is not a general
        purpose language as it''s built around database operations and can only be
        compiled and executed on a SAP application server.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hnkj2yt", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;ABAP&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/JaegerMa/aoc2021-abap/blob/main/day1/day.abap\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        saw no one doing it in ABAP, so let&amp;#39;s give it a try. ABAP is not a
        general purpose language as it&amp;#39;s built around database operations
        and can only be compiled and executed on a SAP application server.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnkj2yt/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638863592.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hqtjl57",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "waitingformsfs2020",
        "can_mod_post": false, "created_utc": 1641055221.0, "send_replies": true,
        "parent_id": "t1_hnjda1n", "score": 1, "author_fullname": "t2_4tm4q04t", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "why C gotta be so complicated.also how can you define SIZE 2000 without?",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hqtjl57", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;why
        C gotta be so complicated.also how can you define SIZE 2000 without?&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hqtjl57/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1641055221.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hnjda1n", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "NickOnTheSofa", "can_mod_post": false,
        "created_utc": 1638841252.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 1, "author_fullname": "t2_53bgnpcc", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[My C solution for
        day 1](https://topaz.github.io/paste/#XQAAAQB6BAAAAAAAAAARmknGRw8TogB3OyPPwW5K8Q8ohQvj8m6aOXY901m0n6+HFcC/PL4dyQFolhQTk9Z1T50Fzo4e+J1LdKVuVSnoZUWy9Rfkz3DgIjX4v7wvh9GJmojZAjkoHS+TZFgLroJgHbuT40w1Ae4MkvsV6GEXXLuZ9QC+ovBg1m4me8/EbAq5Y3LP/0vcT4EvFywK4/+HyX7c1q1QE81P9cJeFzKlJH8BZ423pcrwVoslGcYoK5/qTSz66VO3JU1j7X9vrqY3qKnojQsSDccfKnpNukfk4js1aTT+JTXOIwBZdnk1Zm9Af3z0H88RCXD8ORMCe/Gz+vNgB92zssI74lihbRH9lOmGj1urVWQ3AI6di0qyzAAkvqQm0ltagfSRJZ2bt29+ycs8234CFVFM+EQizvjmw67HvS9f8+vmfENW2w8mwnOKCedvVvsVYVOVH374k5FTHttyDnYElKZtxglLGIr+21xW1+5A5nXS4RRtuPZcvwRSvO/qmsVb8ZY8jVCrwva7FqMf+l2zoQJ8hlWgDX3Dz4gFrPNTQr1b/tbWR6r8sUVDXfvJ3ePAfzD0WE997PFHV/bh1+x/TZubLkivMsVaN0HIpZCj//uxVFo=)",
        "edited": 1638842767.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hnjda1n", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQB6BAAAAAAAAAARmknGRw8TogB3OyPPwW5K8Q8ohQvj8m6aOXY901m0n6+HFcC/PL4dyQFolhQTk9Z1T50Fzo4e+J1LdKVuVSnoZUWy9Rfkz3DgIjX4v7wvh9GJmojZAjkoHS+TZFgLroJgHbuT40w1Ae4MkvsV6GEXXLuZ9QC+ovBg1m4me8/EbAq5Y3LP/0vcT4EvFywK4/+HyX7c1q1QE81P9cJeFzKlJH8BZ423pcrwVoslGcYoK5/qTSz66VO3JU1j7X9vrqY3qKnojQsSDccfKnpNukfk4js1aTT+JTXOIwBZdnk1Zm9Af3z0H88RCXD8ORMCe/Gz+vNgB92zssI74lihbRH9lOmGj1urVWQ3AI6di0qyzAAkvqQm0ltagfSRJZ2bt29+ycs8234CFVFM+EQizvjmw67HvS9f8+vmfENW2w8mwnOKCedvVvsVYVOVH374k5FTHttyDnYElKZtxglLGIr+21xW1+5A5nXS4RRtuPZcvwRSvO/qmsVb8ZY8jVCrwva7FqMf+l2zoQJ8hlWgDX3Dz4gFrPNTQr1b/tbWR6r8sUVDXfvJ3ePAfzD0WE997PFHV/bh1+x/TZubLkivMsVaN0HIpZCj//uxVFo=\"&gt;My
        C solution for day 1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnjda1n/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638841252.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnhf9ba", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "yankdevil", "can_mod_post": false, "created_utc":
        1638812660.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_dmshl", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "This day and day 2 were ideal for awk.  My
        solutions to part 1 and 2:\n\n  * [part 1](https://gitlab.com/lyda/aoc2021/-/blob/dev/day-01/awk/part1.awk)\n  *
        [part 2](https://gitlab.com/lyda/aoc2021/-/blob/dev/day-01/awk/part2.awk)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnhf9ba", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        day and day 2 were ideal for awk.  My solutions to part 1 and 2:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a
        href=\"https://gitlab.com/lyda/aoc2021/-/blob/dev/day-01/awk/part1.awk\"&gt;part
        1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://gitlab.com/lyda/aoc2021/-/blob/dev/day-01/awk/part2.awk\"&gt;part
        2&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnhf9ba/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638812660.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hnj63gy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638838069.0, "send_replies": true,
        "parent_id": "t1_hngw00u", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1638918187.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hnj63gy", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your code is hard
        to read on old.reddit.  Please edit it as per our posting guidelines in the
        wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnj63gy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638838069.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hngw00u", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "egel-lang", "can_mod_post": false, "created_utc":
        1638805018.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_fz865g70", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# [Egel](https://github.com/egel-lang/aoc-2021/edit/main/day1/)\n\n
        \n    # Advent of Code (AoC) 2021 - day 1, task 2\n    \n    import \"prelude.eg\"\n    import
        \"os.ego\"\n    \n    using System\n    using OS\n    using List\n    \n    def
        input =\n        let L = read_line stdin in\n        if eof stdin then nil
        else cons L input\n    \n    def window =\n        [ (cons N0 (cons N1 (cons
        N2 NN))) -&gt; \n            cons (N0+N1+N2) (window (cons N1 (cons N2 NN)))
        \n        | _ -&gt; nil ]\n    \n    def pairs =\n        [ (cons N0 (cons
        N1 NN)) -&gt; cons (N0, N1) (pairs (cons N1 NN)) \n        | _ -&gt; nil ]\n    \n    def
        larger =\n        filter [ (N0, N1) -&gt; N0 &lt; N1 ]\n    \n    def main
        =\n        let II = map to_int input in length (larger (pairs (window II)))",
        "edited": 1638845012.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hngw00u", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://github.com/egel-lang/aoc-2021/edit/main/day1/\"&gt;Egel&lt;/a&gt;&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Advent of Code (AoC) 2021 - day 1, task 2\n\nimport &amp;quot;prelude.eg&amp;quot;\nimport
        &amp;quot;os.ego&amp;quot;\n\nusing System\nusing OS\nusing List\n\ndef input
        =\n    let L = read_line stdin in\n    if eof stdin then nil else cons L input\n\ndef
        window =\n    [ (cons N0 (cons N1 (cons N2 NN))) -&amp;gt; \n        cons
        (N0+N1+N2) (window (cons N1 (cons N2 NN))) \n    | _ -&amp;gt; nil ]\n\ndef
        pairs =\n    [ (cons N0 (cons N1 NN)) -&amp;gt; cons (N0, N1) (pairs (cons
        N1 NN)) \n    | _ -&amp;gt; nil ]\n\ndef larger =\n    filter [ (N0, N1) -&amp;gt;
        N0 &amp;lt; N1 ]\n\ndef main =\n    let II = map to_int input in length (larger
        (pairs (window II)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hngw00u/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638805018.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hnmm3r8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "e_blake",
        "can_mod_post": false, "created_utc": 1638905168.0, "send_replies": true,
        "parent_id": "t1_hngu1jk", "score": 1, "author_fullname": "t2_4tezwlii", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "m4 \\[-Dfile=input\\] [day1.m4](https://nopaste.ml/#XQAAAQAjBQAAAAAAAAAyGksy5FB9TGMxsNq5JQAuJRjP6PqEkC20GpBbonDYuA0BTjRPXcVxlEXNtz1IwpMqcBadF5ZzZxsPbO0TjiFbV7OR7qIswfS/KNhx6uJ1GtnKtFJNIDGSZ69aquvSPkAlLO/rgpen1A/TibN9AA0R4U0Ws6gs2hZ3NqomPH/sNfZolv8ItqdbehDN9TwLsUlI1GS2o1RbhBQDVHdlPLuZYXoB3StNoCg6km6xaBM6Fxa2uzYBhf/0lDDWSC5h2C7/jFOaSX/goqtLeyaaQwpGnA7ktTL3mmppgP64cshno2yUBOMlBf+DUsIuDOmHtAyKlNdhIO1Lp3/21qOuBM6n3FAAy8PAMqT9ftvYiMPpl9AJ7Bc99scFEk2MG3UKG5hCmk6RcM1ce5sGcmoq+CpfWDgC1Dfw2n8c4QDZbBgcnvZEr5AJW6hbhgQiCxbpX+x8vxRcwFR3mRFKxUNMyoCrmB/luUW5a40J9o8A551ROxNjBVo/sLxcD5jy+SdfPOXZjyhF8aPh/FGmHg9owust9zjwMX9ydMcBDYwM1DdBHbmH2abNovJL6RWgQVRcLFc4OGGzIZkWwJHJxASiCg0BLrNjI5Rs5Uf0LRjvJAeXrsBnbZNqqhJN9xqwSQzIFhMm/rpEMgknMA9PnbJzE0qJhfz/U2KjX6UDkGTWfRf0pYNbafKg0B7KqxpB7cOLMWIAdF7MVZUhhYs262y8TARlxXeX7W2ow0+P/dXxb8432ar+FdZvUxttXbbT200KuXtEUseU95u4Mn/9iTkA)\n\nSure
        enough, with the [common.m4](https://nopaste.ml/#XQAAAQCcDQAAAAAAAAAyGksy5FB9TGMxsNq5JQAuJRjP6PqEkC20GpAXwA97ruAshKbiUbgkbJMTg2qZdSBorb0CU52peNLruV4DEEJxF+HvxC/YF33OpDntnpU/PjnGXx7XU7ak4MsmWu8R7h7d5az2JXxElnsepG8yPyu+0WZ90BG9yXphbwOWA/m5AWEFSOL8TRZX4fyGNl6ZYbRxX0MwtzrmwTP3ZCwLSOKkvD2vMQFsbK0Pv9CzPhFNXMUbWnRV20jWLjL9qz2dDsFDBwhxgWIilEl91uswxrT4Czc+LRU3VuhNIo2S98VW0jArrVdv4HrsLhWkzx4z/UV3xnqJwPXcZRUiLtf3VRIzq62Pe+2jE3O+721Az9rfRa/fHtlANbmvslzMUCyU7cDoOKSMXBDF/06/PpMvs6vxaL5aJVYqJP4yz+R2M35hoNnGiZTNNMVEFTdnxnaE/KcJteBbiuVMpdfUswHQi4Kqsj3sInh7lyE+d50gGKtHOeWL5lMK7WXz4NElnzYWleBSN/HTOdsz0T2gnd25MADxNAVX8xQmagh2MymZ2sKDBw//WiNB0sWf5VYC5/TKKH3D6K/IOrIfWn6FZLKxlITFEp3VWKNuyF0xczNJufJdzSqd0hgdyryVzbn0so0U5NMN16jFF6IhqzGbAwwv7k8sts0OCgnCFBEhYVshIpsORjEJk4CnDgc9VUqvZtfIFPQ5Q2v7IR3sbPurex1IIUd2Nm1V7/GFN+r0im24aEOG6XpdqrPdF6pDZ4HwvNByqOEdpcObPXxlwfPFYIhwyDHGZCvxrFRgGEEFtfVQ7UVjfPJzWtrcZuGx8M3B1zw2xvgpHIWEHdqEF6Y6/6eFj2hLm8UXNeLNrJy1IC2sHlS8SRIifQvLkrOLLOOPtDK6DUPQrW3c0Rfmy9Td5gQw0+fZRZ5MBEG9+dTlinXtwExpHScKQk6ARk7Fb8fBYAnmh7/bq+471zAZGJ7dwNd5qE/63VhDz7mXLuXtGN7rSuRYIXvpkubLBZptSKZrkzSDJWHIZM8Fyrk0EZQFDujROjr87GZmTK1XKRWzGrhtQn0hkVyBaGPbA3iG45U4gIFHJLiuWU3hz1lv1Zb5Es9LCg1O7ecgsEP1xVhbx6bJhdLCon/Pr8z35xHQXT3NIgcoVg49JULnysvf/nPUgpq7o8uYYQ0j2oH/0dYCKk1utVBSrizH15mCiM0COGd4l2cKmKgCH1ovs+r+BxNJGzQ41mHH/El3T7kA37UrYuReQm7OF15bz4bt5XSgOX5Y/ixoF11yvC1q4aPUafkxDe6AH5b/Cy6Y4s2Yre8ZfJ8S/r3gdLSSeVrrX3kLV/hbzDc96zZPbaW3hP4iGIlR8dSmZsnzuwroB7C01oNMbukg4ajFFQlXlcsAJTQ0q7yC5PEpEg7cVr9Z9oXhiHv+rLfSgMA3jb7IFbvmL8m/3t97Ir88mywwtY4TBYRsfE9Om76qrm4V+mPetKwwLos0/NXH1rWHCDsgQz/D7xWtUAc/oVoCxwlcd2fU8H2bFQlCzhas7MlfBDYypxPj/N7PIw2NlyYfumiBCPDwheFRUC79Z648760eRowPmKOnAstpgu/a+X992arTksvkXFzdz2zd7ndjMmU517T0QudgDwefaxvOEVLMQK7vFaGA79bXh892YlFRSQBkbgP+yMcBdyAzJIgVpmDOrYmLxbuNz9cu+67X4XUu5lou8gfEFsCG0yrVMIM5vwsZJMlqk6FZgy29v938btoiQRAQoF9LXCSM1yoBseuh6xtcsqCfj/wQGqYFAoP4mmavj0AT0ekKNNDaBLWQqU6zevUk3V2s2PuF0rYEL2lcSyBxpbZiyCH+ZUPf64ba1yv1bfFHYz2s3RaGho4z/6ShUqXbCxeXvLm9+59NK/VAY8m0b/PXnDPqSXqruxENqIF7kYs82pcRoiCve+iYjGiVvXrGWsu+I0Dqu37iqZVNlayu3TWfWNS2lxESl36lj9YZ//f5+3g=)
        framework, I''ve optimized to an O(n log n) parse using just POSIX (or even
        O(n) using GNU extensions), speeding up execution to 50ms, over 6x faster.  Once
        parsed, maintaining the data in a stack means I only have to process four
        arguments per iteration, instead of an average of 1000 items.", "edited":
        1638926028.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_hnmm3r8", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;m4
        [-Dfile=input] &lt;a href=\"https://nopaste.ml/#XQAAAQAjBQAAAAAAAAAyGksy5FB9TGMxsNq5JQAuJRjP6PqEkC20GpBbonDYuA0BTjRPXcVxlEXNtz1IwpMqcBadF5ZzZxsPbO0TjiFbV7OR7qIswfS/KNhx6uJ1GtnKtFJNIDGSZ69aquvSPkAlLO/rgpen1A/TibN9AA0R4U0Ws6gs2hZ3NqomPH/sNfZolv8ItqdbehDN9TwLsUlI1GS2o1RbhBQDVHdlPLuZYXoB3StNoCg6km6xaBM6Fxa2uzYBhf/0lDDWSC5h2C7/jFOaSX/goqtLeyaaQwpGnA7ktTL3mmppgP64cshno2yUBOMlBf+DUsIuDOmHtAyKlNdhIO1Lp3/21qOuBM6n3FAAy8PAMqT9ftvYiMPpl9AJ7Bc99scFEk2MG3UKG5hCmk6RcM1ce5sGcmoq+CpfWDgC1Dfw2n8c4QDZbBgcnvZEr5AJW6hbhgQiCxbpX+x8vxRcwFR3mRFKxUNMyoCrmB/luUW5a40J9o8A551ROxNjBVo/sLxcD5jy+SdfPOXZjyhF8aPh/FGmHg9owust9zjwMX9ydMcBDYwM1DdBHbmH2abNovJL6RWgQVRcLFc4OGGzIZkWwJHJxASiCg0BLrNjI5Rs5Uf0LRjvJAeXrsBnbZNqqhJN9xqwSQzIFhMm/rpEMgknMA9PnbJzE0qJhfz/U2KjX6UDkGTWfRf0pYNbafKg0B7KqxpB7cOLMWIAdF7MVZUhhYs262y8TARlxXeX7W2ow0+P/dXxb8432ar+FdZvUxttXbbT200KuXtEUseU95u4Mn/9iTkA\"&gt;day1.m4&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Sure
        enough, with the &lt;a href=\"https://nopaste.ml/#XQAAAQCcDQAAAAAAAAAyGksy5FB9TGMxsNq5JQAuJRjP6PqEkC20GpAXwA97ruAshKbiUbgkbJMTg2qZdSBorb0CU52peNLruV4DEEJxF+HvxC/YF33OpDntnpU/PjnGXx7XU7ak4MsmWu8R7h7d5az2JXxElnsepG8yPyu+0WZ90BG9yXphbwOWA/m5AWEFSOL8TRZX4fyGNl6ZYbRxX0MwtzrmwTP3ZCwLSOKkvD2vMQFsbK0Pv9CzPhFNXMUbWnRV20jWLjL9qz2dDsFDBwhxgWIilEl91uswxrT4Czc+LRU3VuhNIo2S98VW0jArrVdv4HrsLhWkzx4z/UV3xnqJwPXcZRUiLtf3VRIzq62Pe+2jE3O+721Az9rfRa/fHtlANbmvslzMUCyU7cDoOKSMXBDF/06/PpMvs6vxaL5aJVYqJP4yz+R2M35hoNnGiZTNNMVEFTdnxnaE/KcJteBbiuVMpdfUswHQi4Kqsj3sInh7lyE+d50gGKtHOeWL5lMK7WXz4NElnzYWleBSN/HTOdsz0T2gnd25MADxNAVX8xQmagh2MymZ2sKDBw//WiNB0sWf5VYC5/TKKH3D6K/IOrIfWn6FZLKxlITFEp3VWKNuyF0xczNJufJdzSqd0hgdyryVzbn0so0U5NMN16jFF6IhqzGbAwwv7k8sts0OCgnCFBEhYVshIpsORjEJk4CnDgc9VUqvZtfIFPQ5Q2v7IR3sbPurex1IIUd2Nm1V7/GFN+r0im24aEOG6XpdqrPdF6pDZ4HwvNByqOEdpcObPXxlwfPFYIhwyDHGZCvxrFRgGEEFtfVQ7UVjfPJzWtrcZuGx8M3B1zw2xvgpHIWEHdqEF6Y6/6eFj2hLm8UXNeLNrJy1IC2sHlS8SRIifQvLkrOLLOOPtDK6DUPQrW3c0Rfmy9Td5gQw0+fZRZ5MBEG9+dTlinXtwExpHScKQk6ARk7Fb8fBYAnmh7/bq+471zAZGJ7dwNd5qE/63VhDz7mXLuXtGN7rSuRYIXvpkubLBZptSKZrkzSDJWHIZM8Fyrk0EZQFDujROjr87GZmTK1XKRWzGrhtQn0hkVyBaGPbA3iG45U4gIFHJLiuWU3hz1lv1Zb5Es9LCg1O7ecgsEP1xVhbx6bJhdLCon/Pr8z35xHQXT3NIgcoVg49JULnysvf/nPUgpq7o8uYYQ0j2oH/0dYCKk1utVBSrizH15mCiM0COGd4l2cKmKgCH1ovs+r+BxNJGzQ41mHH/El3T7kA37UrYuReQm7OF15bz4bt5XSgOX5Y/ixoF11yvC1q4aPUafkxDe6AH5b/Cy6Y4s2Yre8ZfJ8S/r3gdLSSeVrrX3kLV/hbzDc96zZPbaW3hP4iGIlR8dSmZsnzuwroB7C01oNMbukg4ajFFQlXlcsAJTQ0q7yC5PEpEg7cVr9Z9oXhiHv+rLfSgMA3jb7IFbvmL8m/3t97Ir88mywwtY4TBYRsfE9Om76qrm4V+mPetKwwLos0/NXH1rWHCDsgQz/D7xWtUAc/oVoCxwlcd2fU8H2bFQlCzhas7MlfBDYypxPj/N7PIw2NlyYfumiBCPDwheFRUC79Z648760eRowPmKOnAstpgu/a+X992arTksvkXFzdz2zd7ndjMmU517T0QudgDwefaxvOEVLMQK7vFaGA79bXh892YlFRSQBkbgP+yMcBdyAzJIgVpmDOrYmLxbuNz9cu+67X4XUu5lou8gfEFsCG0yrVMIM5vwsZJMlqk6FZgy29v938btoiQRAQoF9LXCSM1yoBseuh6xtcsqCfj/wQGqYFAoP4mmavj0AT0ekKNNDaBLWQqU6zevUk3V2s2PuF0rYEL2lcSyBxpbZiyCH+ZUPf64ba1yv1bfFHYz2s3RaGho4z/6ShUqXbCxeXvLm9+59NK/VAY8m0b/PXnDPqSXqruxENqIF7kYs82pcRoiCve+iYjGiVvXrGWsu+I0Dqu37iqZVNlayu3TWfWNS2lxESl36lj9YZ//f5+3g=\"&gt;common.m4&lt;/a&gt;
        framework, I&amp;#39;ve optimized to an O(n log n) parse using just POSIX
        (or even O(n) using GNU extensions), speeding up execution to 50ms, over 6x
        faster.  Once parsed, maintaining the data in a stack means I only have to
        process four arguments per iteration, instead of an average of 1000 items.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnmm3r8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638905168.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hngu1jk", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "e_blake", "can_mod_post": false, "created_utc":
        1638804200.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_4tezwlii", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**golfed m4**\n\nOh well - I''ve got a late
        start on my m4 solutions this year.  But I promise I came up with this solution
        before reading the megathread.\n\nPart 1\n\n    eval(define(_,`ifelse($2,,,+($2&gt;$1)`_(shift($@))'')'')_(translit(include(=),`''\n    ,`,'')))\n\nPart
        2\n\n    eval(define(_,`ifelse($4,,,+($4&gt;$1)`_(shift($@))'')'')_(translit(include(=),`''\n    ,`,'')))\n\nJust
        84 characters per answer (excluding the second newline shown above), with
        only two characters different between part 1 and part 2 (`sed s/2/4/g`).  Assumes
        your input file is named = (for any other input file name, you can do `sed
        s/=/f/g day1.m4 | m4 -Df=input`).  I particularly love that the only letters
        in the solution are the names of 6 distinct builtin macros, and I only had
        to define one other macro.  Running both parts in the same m4 file would require
        either additional quote characters or a second macro name.\n\nExecution time
        per part took over 0.3s on my machine.  Why? Because GNU m4''s handling of
        shift($@) for input recursion is inherently O(n\\^2) (2000 iterations \\*
        (2000+1)/2 arguments per iteration = \\~ 2 million arguments to scan).  So
        I will eventually be rewriting this using my same m4 framework I''ve used
        in previous years that vastly reduces execution time (O(n) if you rely on
        GNU m4 extensions, O(n log n) using just POSIX constructs).", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hngu1jk",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;golfed
        m4&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Oh well - I&amp;#39;ve got a late
        start on my m4 solutions this year.  But I promise I came up with this solution
        before reading the megathread.&lt;/p&gt;\n\n&lt;p&gt;Part 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;eval(define(_,`ifelse($2,,,+($2&amp;gt;$1)`_(shift($@))&amp;#39;)&amp;#39;)_(translit(include(=),`&amp;#39;\n,`,&amp;#39;)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;eval(define(_,`ifelse($4,,,+($4&amp;gt;$1)`_(shift($@))&amp;#39;)&amp;#39;)_(translit(include(=),`&amp;#39;\n,`,&amp;#39;)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Just
        84 characters per answer (excluding the second newline shown above), with
        only two characters different between part 1 and part 2 (&lt;code&gt;sed s/2/4/g&lt;/code&gt;).  Assumes
        your input file is named = (for any other input file name, you can do &lt;code&gt;sed
        s/=/f/g day1.m4 | m4 -Df=input&lt;/code&gt;).  I particularly love that the
        only letters in the solution are the names of 6 distinct builtin macros, and
        I only had to define one other macro.  Running both parts in the same m4 file
        would require either additional quote characters or a second macro name.&lt;/p&gt;\n\n&lt;p&gt;Execution
        time per part took over 0.3s on my machine.  Why? Because GNU m4&amp;#39;s
        handling of shift($@) for input recursion is inherently O(n^2) (2000 iterations
        * (2000+1)/2 arguments per iteration = ~ 2 million arguments to scan).  So
        I will eventually be rewriting this using my same m4 framework I&amp;#39;ve
        used in previous years that vastly reduces execution time (O(n) if you rely
        on GNU m4 extensions, O(n log n) using just POSIX constructs).&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hngu1jk/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638804200.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hngj2kt", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "StrangePerch", "can_mod_post": false,
        "created_utc": 1638799161.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_704l3ebs", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "JS PART 1\n\n    let
        arr = $0.innerText.split(\"\\n\");\n    let change = 0; \n    for(let i =
        1; i &lt; arr.length - 1; i++) { \n        if(arr[i] &gt; arr[i-1]) change+=
        1; \n    } \n    console.log(change);\n\nJS PART 2\n\n    let arr = $0.innerText.split(\"\\n\");
        \n    let change = -1; \n    let prevSum = 0;\n    for(let i = 2; i &lt; arr.length;
        i++) { \n        let sum = +arr[i] + +arr[i - 1] + +arr[i - 2]; \n        if(sum
        &gt; prevSum) \n            change++; \n        prevSum = sum; \n    } \n    console.log(change);",
        "edited": 1638800134.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hngj2kt", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JS
        PART 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let arr = $0.innerText.split(&amp;quot;\\n&amp;quot;);\nlet
        change = 0; \nfor(let i = 1; i &amp;lt; arr.length - 1; i++) { \n    if(arr[i]
        &amp;gt; arr[i-1]) change+= 1; \n} \nconsole.log(change);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;JS
        PART 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let arr = $0.innerText.split(&amp;quot;\\n&amp;quot;);
        \nlet change = -1; \nlet prevSum = 0;\nfor(let i = 2; i &amp;lt; arr.length;
        i++) { \n    let sum = +arr[i] + +arr[i - 1] + +arr[i - 2]; \n    if(sum &amp;gt;
        prevSum) \n        change++; \n    prevSum = sum; \n} \nconsole.log(change);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hngj2kt/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638799161.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hngfsqy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "cyberphine", "can_mod_post": false, "created_utc":
        1638797461.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_bff6f", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Rust:  [Part 1](https://topaz.github.io/paste/#XQAAAQDjAQAAAAAAAAA6nMjJFMpQiatRknmspceraLOJD2yfUUgkzdoiybegKB8UOzukNwTpr+9238Sm4tF8M9wV9HoYgZU58TkMUn4h7Eafhn5Z/bAXblXBZW0lMSmHGi8PZugsgHVXYhcqyupXXDtiHxlaZEk5iDjYl+avWCzB+rYgIehR/R5CifmeIlgfHJsTbwyErGzGX/hs/as10GvYzlaniTOunsKtADqeZ8+PL0DQj8PAoLqUPGrwtuW12M0CCiqeQxJIr0yzBxTVZABpQiYROpjWItqmKy2Ee/HfmzpF3Zi9TGToC8xBY+2j/5ni4pow4ETGvS2cNDUcC++glhCl9t5OpRTa5dNy/8YNh0VpuB4dKgIK1U+QXgKspgSfj+Xf/vlxwA==)\n\nRust:
        [Part 2](https://topaz.github.io/paste/#XQAAAQAJAgAAAAAAAAA6nMjJFMpQiatRknmsqEHUo42QRqx2wfagGa9Z9aSemxLEoyK9waowxr7c5gKhRUcBI7Qd5r8J0CIHk3vu+vbDAS971exWaktp/T3cX7NgxavXRdTpBcyuPJ6b3Kf4oLWCXOOdWM7xdGyl8BkYCEZOwGBO5rZPPrUtqH/LeDoe0eph6vfy8Y+UUX8W7Rdpals6Sm4NZJiFucrw1N1BnM2b2CFdKdGCZWEUaVZRMU0EBkyNR0ZoFEnqOuSgx7gNjeLkmJzoT8VsjncoctsQrjKSM/YHpMCbA9ZZo8TvGGSeiXZ+Jgpos7RHLb0m614iHQavRS5oSZAmIoZj30H+gfTibZ3Lgit7C6qKBWMe8BupKwdcw6J9wufASGHQLt3Pk7SBiTOK5OUNrBtKjQBZdm96B2ui3CP7U/9sl7EA)",
        "edited": 1638804234.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hngfsqy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust:  &lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDjAQAAAAAAAAA6nMjJFMpQiatRknmspceraLOJD2yfUUgkzdoiybegKB8UOzukNwTpr+9238Sm4tF8M9wV9HoYgZU58TkMUn4h7Eafhn5Z/bAXblXBZW0lMSmHGi8PZugsgHVXYhcqyupXXDtiHxlaZEk5iDjYl+avWCzB+rYgIehR/R5CifmeIlgfHJsTbwyErGzGX/hs/as10GvYzlaniTOunsKtADqeZ8+PL0DQj8PAoLqUPGrwtuW12M0CCiqeQxJIr0yzBxTVZABpQiYROpjWItqmKy2Ee/HfmzpF3Zi9TGToC8xBY+2j/5ni4pow4ETGvS2cNDUcC++glhCl9t5OpRTa5dNy/8YNh0VpuB4dKgIK1U+QXgKspgSfj+Xf/vlxwA==\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Rust: &lt;a href=\"https://topaz.github.io/paste/#XQAAAQAJAgAAAAAAAAA6nMjJFMpQiatRknmsqEHUo42QRqx2wfagGa9Z9aSemxLEoyK9waowxr7c5gKhRUcBI7Qd5r8J0CIHk3vu+vbDAS971exWaktp/T3cX7NgxavXRdTpBcyuPJ6b3Kf4oLWCXOOdWM7xdGyl8BkYCEZOwGBO5rZPPrUtqH/LeDoe0eph6vfy8Y+UUX8W7Rdpals6Sm4NZJiFucrw1N1BnM2b2CFdKdGCZWEUaVZRMU0EBkyNR0ZoFEnqOuSgx7gNjeLkmJzoT8VsjncoctsQrjKSM/YHpMCbA9ZZo8TvGGSeiXZ+Jgpos7RHLb0m614iHQavRS5oSZAmIoZj30H+gfTibZ3Lgit7C6qKBWMe8BupKwdcw6J9wufASGHQLt3Pk7SBiTOK5OUNrBtKjQBZdm96B2ui3CP7U/9sl7EA\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hngfsqy/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1638797461.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hnj64h8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638838083.0, "send_replies": true,
        "parent_id": "t1_hng9ne7", "score": 2, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnj64h8", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnj64h8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638838083.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hng9ne7", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "berbeflo", "can_mod_post": false, "created_utc":
        1638793876.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_3hpu765w", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "PHP: Part 1\n    &lt;?php\n    $numbers =
        file(__DIR__ . ''/../input/01-1.txt'', FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $latestNumber
        = (int) array_shift($numbers);\n\n    echo array_reduce($numbers, function
        (int $count, string $currentNumber) use (&amp;$latestNumber) {\n        $count
        += $currentNumber &gt; $latestNumber ? 1 : 0;\n        $latestNumber = $currentNumber;\n        \n        return
        $count;\n    }, 0);", "edited": 1638854999.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hng9ne7", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP:
        Part 1\n    &amp;lt;?php\n    $numbers = file(&lt;strong&gt;DIR&lt;/strong&gt;
        . &amp;#39;/../input/01-1.txt&amp;#39;, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $latestNumber
        = (int) array_shift($numbers);&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo array_reduce($numbers,
        function (int $count, string $currentNumber) use (&amp;amp;$latestNumber)
        {\n    $count += $currentNumber &amp;gt; $latestNumber ? 1 : 0;\n    $latestNumber
        = $currentNumber;\n\n    return $count;\n}, 0);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hng9ne7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638793876.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnfvdv8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ConstantGazelle", "can_mod_post": false,
        "created_utc": 1638782513.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_621xwdvt", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "python [p1](https://github.com/xmbgulmus/adventofcode2021/blob/master/day1.1.py)
        &amp; [p2](https://github.com/xmbgulmus/adventofcode2021/blob/master/day1.2.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnfvdv8", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;python
        &lt;a href=\"https://github.com/xmbgulmus/adventofcode2021/blob/master/day1.1.py\"&gt;p1&lt;/a&gt;
        &amp;amp; &lt;a href=\"https://github.com/xmbgulmus/adventofcode2021/blob/master/day1.2.py\"&gt;p2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnfvdv8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638782513.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hnfld4c", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Part 1 - JavaScript\n\n`var a=document.body.innerText.split(\"\\n\"),b=c=d=e=0;for(;b&lt;a.length;b++){c=a[b];if(c&gt;d)e++;d=c;}console.log(e);`",
        "edited": 1639432192.0, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part
        1 - JavaScript&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var a=document.body.innerText.split(&amp;quot;\\n&amp;quot;),b=c=d=e=0;for(;b&amp;lt;a.length;b++){c=a[b];if(c&amp;gt;d)e++;d=c;}console.log(e);&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnfld4c/",
        "num_reports": null, "locked": false, "name": "t1_hnfld4c", "created": 1638774386.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638774386.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnfla53", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "SESteve", "can_mod_post": false, "created_utc":
        1638774327.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_27pd8fn", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Assembly (ARM64)\n\n[paste](https://topaz.github.io/paste/#XQAAAQC3CgAAAAAAAAAX4HyCZDlA0DjWF7Uex1t2hvV6PgXFmsONLSMABOy+4LxicZDxgg/dpI5xcs8nHfmHnbV+uKzZwMHhLxq0R7LmhZCJ94eVDMtkhmHCAGWggkjm3bZV2Jb7FbzKxKxnRMBiVvoewIxdF9MoAL+SPwDZ8eb1r4bxT+Dn93BPw462x8FXT3oUEF50V9LRqZjkMg6srGVQbU31FGI7xJYWdduT/JiBLxsPl/whgTTH3yVB6r4AY4WEFL8ZNez2kddPABhazssadvVjAKDW6G6m9IHWj1D+bzKLAP5nqwkyiOVN5ZwuZkghFX5hmf2SR6kLyFDpnGr3+MYqYCVNBc8F5Tmxl0/8AKGiER8DD7vvKaV02lAUawu//tC7oC/EWCyJxenmo7xb90VYub5H21OLUTjhMXWXoL0InHjzQELYVKlXDmPWUNA/mSwKjnnigS8hTteRzvv3hJ5aWaV6B1ql8DV/hgEiCTEsVX8Dy9b0w5nu5G0fA3MojmQp0q3dNzqkOHXcJ42D3HiMIUMpcCv2/HpfqyB8IiqBI8U3Ce5kTQyO0oH0AMAXx6JFumMy+1aQN5yXUOKLJrBgxkB11MICTwgpdKn/m+RAjzRMmTatnMbulTonGSQXRtQ7E0pQAprL5Z0L75eLbQoNTmPtlcQR3oY471vogzczOBxlMTePDXCpL0fDo0kHRWiXsBS7ajj7kdN8i+2Aksfh2PBCRCbB8dP0WWe3EahTp9/l+ZYhm5CU37gCqifCQXPCArvkHXdqCxlU/7FK1bEz6xbQ756ruzTjgQtv/7Rv2B0a8nyQYOVuaOvqN43DPzTKePhPJSJKBNpsJZRlx4XmgoYg5TQYWj/SHBBNqhNLQ32UF+aSuNn1G6JWqcvsElbpIgsoscVVLQqXRb9N2/5tT2w+FwOMAHVpnnBr5x1mD18JH7qaw13t678zNSP16D8B03QcpYdkJTjwX7mfG7X5HPC9VlzDTd6ERQlzcSZJImbm1hyTOc1F8S4/cUtoNaUwvjbSiBLeDJBQ/+U4bThSeThJEJqTG0tBQI8FnTlaUg2iakCJ4Qc5gjZKk8dHLBS+VQ4nlDF7U5LPu4Fe8zzZ9fvwKPRs80h8TMYqO1lN958RLVFXqlYTsTWVeIzUcHYhXKS2NdpzfCo+NzWmm5DDU8Zb2KPlajj7P+zVziFrBKFkvE+mEm1RJFxXDOx7XCwwM7B/KJHx5Qa7rPk5ayUy5L9VTqsPk+sfJx7r97ezk5E9lS+bhxcADrwGzXdu99L3n/fqd0XLqhIEZqqumXxpakbiYKEjLPq6O8yjMFbLfLh6F9XgfZ9pg5KCKEzkymf+Fz/2jKKdSjrhnW8AvH8FOxCl1Z5Z7d2rNf15ALXAk3FNLzpqU5SYTIA5veTsPvO5hP9J5YKGpRNySFisS9MESFq6zcjXQaTrTj1A68atQDQxIXr1jjfkNRAzdoQh0b6oPlg+0bK61HvdZWrHbqRJd0EsHLWEAVfAfxIr9ajmiJPOe27xMh1fvtIE0tsrRYEc4Gc+O6GK3zefl29jwOWtL8PrZ/ISIGv41fn5Blwe0usbW0FYF6LeVtgrzKniHsHEMchfztpnlw0tmI+j4gmMr7rE2WplMKANNz3XOPzEKOdKnT9FJhf/7BkrRA==)",
        "edited": 1638811364.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hnfla53", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Assembly
        (ARM64)&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQC3CgAAAAAAAAAX4HyCZDlA0DjWF7Uex1t2hvV6PgXFmsONLSMABOy+4LxicZDxgg/dpI5xcs8nHfmHnbV+uKzZwMHhLxq0R7LmhZCJ94eVDMtkhmHCAGWggkjm3bZV2Jb7FbzKxKxnRMBiVvoewIxdF9MoAL+SPwDZ8eb1r4bxT+Dn93BPw462x8FXT3oUEF50V9LRqZjkMg6srGVQbU31FGI7xJYWdduT/JiBLxsPl/whgTTH3yVB6r4AY4WEFL8ZNez2kddPABhazssadvVjAKDW6G6m9IHWj1D+bzKLAP5nqwkyiOVN5ZwuZkghFX5hmf2SR6kLyFDpnGr3+MYqYCVNBc8F5Tmxl0/8AKGiER8DD7vvKaV02lAUawu//tC7oC/EWCyJxenmo7xb90VYub5H21OLUTjhMXWXoL0InHjzQELYVKlXDmPWUNA/mSwKjnnigS8hTteRzvv3hJ5aWaV6B1ql8DV/hgEiCTEsVX8Dy9b0w5nu5G0fA3MojmQp0q3dNzqkOHXcJ42D3HiMIUMpcCv2/HpfqyB8IiqBI8U3Ce5kTQyO0oH0AMAXx6JFumMy+1aQN5yXUOKLJrBgxkB11MICTwgpdKn/m+RAjzRMmTatnMbulTonGSQXRtQ7E0pQAprL5Z0L75eLbQoNTmPtlcQR3oY471vogzczOBxlMTePDXCpL0fDo0kHRWiXsBS7ajj7kdN8i+2Aksfh2PBCRCbB8dP0WWe3EahTp9/l+ZYhm5CU37gCqifCQXPCArvkHXdqCxlU/7FK1bEz6xbQ756ruzTjgQtv/7Rv2B0a8nyQYOVuaOvqN43DPzTKePhPJSJKBNpsJZRlx4XmgoYg5TQYWj/SHBBNqhNLQ32UF+aSuNn1G6JWqcvsElbpIgsoscVVLQqXRb9N2/5tT2w+FwOMAHVpnnBr5x1mD18JH7qaw13t678zNSP16D8B03QcpYdkJTjwX7mfG7X5HPC9VlzDTd6ERQlzcSZJImbm1hyTOc1F8S4/cUtoNaUwvjbSiBLeDJBQ/+U4bThSeThJEJqTG0tBQI8FnTlaUg2iakCJ4Qc5gjZKk8dHLBS+VQ4nlDF7U5LPu4Fe8zzZ9fvwKPRs80h8TMYqO1lN958RLVFXqlYTsTWVeIzUcHYhXKS2NdpzfCo+NzWmm5DDU8Zb2KPlajj7P+zVziFrBKFkvE+mEm1RJFxXDOx7XCwwM7B/KJHx5Qa7rPk5ayUy5L9VTqsPk+sfJx7r97ezk5E9lS+bhxcADrwGzXdu99L3n/fqd0XLqhIEZqqumXxpakbiYKEjLPq6O8yjMFbLfLh6F9XgfZ9pg5KCKEzkymf+Fz/2jKKdSjrhnW8AvH8FOxCl1Z5Z7d2rNf15ALXAk3FNLzpqU5SYTIA5veTsPvO5hP9J5YKGpRNySFisS9MESFq6zcjXQaTrTj1A68atQDQxIXr1jjfkNRAzdoQh0b6oPlg+0bK61HvdZWrHbqRJd0EsHLWEAVfAfxIr9ajmiJPOe27xMh1fvtIE0tsrRYEc4Gc+O6GK3zefl29jwOWtL8PrZ/ISIGv41fn5Blwe0usbW0FYF6LeVtgrzKniHsHEMchfztpnlw0tmI+j4gmMr7rE2WplMKANNz3XOPzEKOdKnT9FJhf/7BkrRA==\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnfla53/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638774327.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnegxyg", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "wzkx", "can_mod_post": false, "created_utc":
        1638753468.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_t1qbo", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**J** (Jlang)\n\n    m=: \".&amp;&gt; cutLF
        CR-.~fread''01.dat''\n    echo +/2&lt;/\\m\n    echo +/2&lt;/\\3+/\\m", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hnegxyg",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;J&lt;/strong&gt;
        (Jlang)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;m=: &amp;quot;.&amp;amp;&amp;gt;
        cutLF CR-.~fread&amp;#39;01.dat&amp;#39;\necho +/2&amp;lt;/\\m\necho +/2&amp;lt;/\\3+/\\m\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnegxyg/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638753468.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hndzoha", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "odnoletkov", "can_mod_post": false, "created_utc":
        1638746148.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_cziacar", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# [JQ](https://github.com/odnoletkov/advent-of-code-jq)\n\n    [inputs
        | tonumber]\n    | [., .[1:], .[2:]] | transpose[:-2]\n    | map(add)\n    |
        [., .[1:]] | transpose[:-1]\n    | map(select(last &gt; first)) | length",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hndzoha", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://github.com/odnoletkov/advent-of-code-jq\"&gt;JQ&lt;/a&gt;&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;[inputs
        | tonumber]\n| [., .[1:], .[2:]] | transpose[:-2]\n| map(add)\n| [., .[1:]]
        | transpose[:-1]\n| map(select(last &amp;gt; first)) | length\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hndzoha/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638746148.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hodqagg", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Expensive-Sleep-8532", "can_mod_post":
        false, "send_replies": true, "parent_id": "t1_hocuzyx", "score": 1, "author_fullname":
        "t2_8w0hf8oi", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "Ah clever! Thank you so
        much for that explanation!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hodqagg", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ah
        clever! Thank you so much for that explanation!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hodqagg/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639405208.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1639405208.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hocuzyx", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "quodponb", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_hocu8f8", "score": 1, "author_fullname": "t2_ffrz8lb2",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Right! Part 2 asks for when the average of three depths increases/decreases.
        So, the full check should be\n\n    (d_1 + d_2 + d_3) / 3   &lt;   (d_2 +
        d_3 + d_4) / 3\n\nBut, if you multiply both sides of that inequality by 3,
        you get\n\n    d_1 + d_2 + d_3   &lt;   d_2 + d_3 + d_4\n\nand from this new
        equivalent inequality, we can subtract `d_2 + d_3` from both sides, to get\n\n    d_1
        &lt; d_4\n\nSo it turns out, it was kind of a trick question to ask for when
        the average increases, since all you need to compare to know is the two numbers
        at the end.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_hocuzyx", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Right!
        Part 2 asks for when the average of three depths increases/decreases. So,
        the full check should be&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(d_1 + d_2 +
        d_3) / 3   &amp;lt;   (d_2 + d_3 + d_4) / 3\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But,
        if you multiply both sides of that inequality by 3, you get&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d_1
        + d_2 + d_3   &amp;lt;   d_2 + d_3 + d_4\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and
        from this new equivalent inequality, we can subtract &lt;code&gt;d_2 + d_3&lt;/code&gt;
        from both sides, to get&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d_1 &amp;lt; d_4\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So
        it turns out, it was kind of a trick question to ask for when the average
        increases, since all you need to compare to know is the two numbers at the
        end.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "link_id": "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hocuzyx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639383257.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1639383257.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hocu8f8", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Expensive-Sleep-8532", "can_mod_post":
        false, "created_utc": 1639382635.0, "send_replies": true, "parent_id": "t1_hndgo8j",
        "score": 1, "author_fullname": "t2_8w0hf8oi", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "This confuses me. Can
        you explain what happens in the return statement (when neighbour is 3:  \n`return
        sum(1 for d1, d2 in zip(depths, depths[neighbour:]) if d1 &lt; d2)`\n\nTo
        me it seems like it only compares two integers which shouldn''t work for part2
        (but it does :D)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hocu8f8", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        confuses me. Can you explain what happens in the return statement (when neighbour
        is 3:&lt;br/&gt;\n&lt;code&gt;return sum(1 for d1, d2 in zip(depths, depths[neighbour:])
        if d1 &amp;lt; d2)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;To me it seems like
        it only compares two integers which shouldn&amp;#39;t work for part2 (but
        it does :D)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_r66vow", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hocu8f8/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1639382635.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "hndgo8j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "quodponb",
        "can_mod_post": false, "created_utc": 1638738766.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_ffrz8lb2", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "#
        Python3\nI started these a couple of days late, so I''m just posting my solutions
        to the older days for completeness!\n\nDay 1 was a nice and easy start, one-ish
        liners, if I hadn''t used a function.\n\n    with open(\"input_1\", \"r\")
        as f:\n        data = [int(line) for line in f.readlines()]\n    \n    \n    def
        count_decreases(depths, neighbour=1):\n        return sum(1 for d1, d2 in
        zip(depths, depths[neighbour:]) if d1 &lt; d2)\n    \n    \n    # Part 1\n    print(count_decreases(data))\n    \n    \n    #
        Part 2\n    print(count_decreases(data, neighbour=3))", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hndgo8j", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python3&lt;/h1&gt;\n\n&lt;p&gt;I
        started these a couple of days late, so I&amp;#39;m just posting my solutions
        to the older days for completeness!&lt;/p&gt;\n\n&lt;p&gt;Day 1 was a nice
        and easy start, one-ish liners, if I hadn&amp;#39;t used a function.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;input_1&amp;quot;, &amp;quot;r&amp;quot;) as f:\n    data =
        [int(line) for line in f.readlines()]\n\n\ndef count_decreases(depths, neighbour=1):\n    return
        sum(1 for d1, d2 in zip(depths, depths[neighbour:]) if d1 &amp;lt; d2)\n\n\n#
        Part 1\nprint(count_decreases(data))\n\n\n# Part 2\nprint(count_decreases(data,
        neighbour=3))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hndgo8j/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638738766.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 5}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hndevus", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "nodejs (golf):\n\n    console.log(require(''fs'').readFileSync(0).toString().trim().split(''\\n'')\n    .map(x=&gt;x*1).reduce((p,c,i,a)=&gt;((x,s)=&gt;[p[0]+(c&gt;p[1]),c,p[2]+\n    (x.length==3&amp;&amp;s(x)&gt;s(p[3])),x])(a.slice(i,i+3),v=&gt;v.reduce((x,y)=&gt;x+y,0)),\n    [-1,0,-1,[]]))\n\nThis
        will write an array of length 4 to stdout; index 0 is the solution to part
        1, index 2 is the solution to part 2.", "edited": 1638738367.0, "downs": 0,
        "author_flair_css_class": null, "collapsed": false, "is_submitter": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;nodejs (golf):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;console.log(require(&amp;#39;fs&amp;#39;).readFileSync(0).toString().trim().split(&amp;#39;\\n&amp;#39;)\n.map(x=&amp;gt;x*1).reduce((p,c,i,a)=&amp;gt;((x,s)=&amp;gt;[p[0]+(c&amp;gt;p[1]),c,p[2]+\n(x.length==3&amp;amp;&amp;amp;s(x)&amp;gt;s(p[3])),x])(a.slice(i,i+3),v=&amp;gt;v.reduce((x,y)=&amp;gt;x+y,0)),\n[-1,0,-1,[]]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This
        will write an array of length 4 to stdout; index 0 is the solution to part
        1, index 2 is the solution to part 2.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "subreddit_type": "public", "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hndevus/", "num_reports":
        null, "locked": false, "name": "t1_hndevus", "created": 1638738097.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638738097.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnd5npa", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jf928ngl60g1", "can_mod_post": false,
        "created_utc": 1638734753.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_2pqam4rz", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**TypeScript**\n\nhttps://github.com/adrbin/aoc-typescript/blob/main/2021/1/puzzle.ts",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnd5npa", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/adrbin/aoc-typescript/blob/main/2021/1/puzzle.ts\"&gt;https://github.com/adrbin/aoc-typescript/blob/main/2021/1/puzzle.ts&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnd5npa/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638734753.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnbeck2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Julsten", "can_mod_post": false, "created_utc":
        1638706614.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_duv9m", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "R - tidyverse\n\n        #Day 1/1\n        \n        input
        &lt;- read.delim(\"day1_1.txt\",header=F, col.names = \"depth\")\n        library(tidyverse)\n        input$lag
        &lt;- lag(input$depth) #''shift'' depth measurement by one row below\n        input$diff
        &lt;- input$depth-input$lag # compute difference\n        input$deeper = input$diff
        &gt; 0 # see if measurement is deeper\n        sum(input$deeper, na.rm=T)\n        \n        #Day
        1/2\n        input$lead1 &lt;- lead(input$depth) # value n+1\n        input$lead2
        &lt;- lead(input$depth, n=2) # value n+2\n        input$window &lt;- input$depth+input$lead1+input$lead2
        # window: add value (n, n+1, n+2)\n        input$windowlag &lt;- lag(input$window)
        # proceed as above \n        input$windowdiff &lt;- input$window-input$windowlag\n        input$windowdeeper
        &lt;- input$windowdiff &gt; 0\n        sum(input$windowdeeper, na.rm=T)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnbeck2", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;R
        - tidyverse&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    #Day 1/1\n\n    input
        &amp;lt;- read.delim(&amp;quot;day1_1.txt&amp;quot;,header=F, col.names =
        &amp;quot;depth&amp;quot;)\n    library(tidyverse)\n    input$lag &amp;lt;-
        lag(input$depth) #&amp;#39;shift&amp;#39; depth measurement by one row below\n    input$diff
        &amp;lt;- input$depth-input$lag # compute difference\n    input$deeper = input$diff
        &amp;gt; 0 # see if measurement is deeper\n    sum(input$deeper, na.rm=T)\n\n    #Day
        1/2\n    input$lead1 &amp;lt;- lead(input$depth) # value n+1\n    input$lead2
        &amp;lt;- lead(input$depth, n=2) # value n+2\n    input$window &amp;lt;- input$depth+input$lead1+input$lead2
        # window: add value (n, n+1, n+2)\n    input$windowlag &amp;lt;- lag(input$window)
        # proceed as above \n    input$windowdiff &amp;lt;- input$window-input$windowlag\n    input$windowdeeper
        &amp;lt;- input$windowdiff &amp;gt; 0\n    sum(input$windowdeeper, na.rm=T)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnbeck2/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638706614.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hnb1fz8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "fish-n-chips-uk", "can_mod_post": false,
        "created_utc": 1638696051.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_56110w9t", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "F#\n\n[github link](https://github.com/cz-fish/advent-of-code/blob/e9de385c0c3aea2b58ba5cd4304947c851a445ce/2021-fs/01.fs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hnb1fz8", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;F#&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/cz-fish/advent-of-code/blob/e9de385c0c3aea2b58ba5cd4304947c851a445ce/2021-fs/01.fs\"&gt;github
        link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnb1fz8/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1638696051.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hnacc8l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "quappa",
        "can_mod_post": false, "created_utc": 1638679194.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_itjdk", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Bash\n\n(but
        not really, will work in any shell)\n\n    tail -n +2 input | paste -d- -
        input | bc | grep -c ''^[1-9]''\n\nPart 1 &amp; 2 only differ in the second
        arg to tail (+2 vs. +4).\n\nVery similar to what /u/obluff did.", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hnacc8l",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bash&lt;/p&gt;\n\n&lt;p&gt;(but
        not really, will work in any shell)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;tail
        -n +2 input | paste -d- - input | bc | grep -c &amp;#39;^[1-9]&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        1 &amp;amp; 2 only differ in the second arg to tail (+2 vs. +4).&lt;/p&gt;\n\n&lt;p&gt;Very
        similar to what &lt;a href=\"/u/obluff\"&gt;/u/obluff&lt;/a&gt; did.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnacc8l/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638679194.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn9lx60", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "bertimir", "can_mod_post": false, "created_utc":
        1638666772.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_6crnrvt1", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "In R.\n\nI am still on the growing end of
        learning curve (I also know, that there is a far easier solution using tidyverse,
        but I am not very comfortable using tidyverse yet). If you have any comments
        or suggestions, I would be very thankful! :)\n\n&amp;#x200B;\n\n    ## Part
        01 #Count how many datapoints increase in value compared to previous datapoint\n    data
        &lt;- scan(file.choose()) ### input01.txt\n    out &lt;- c()\n    count &lt;-
        0\n    for (i in 2:length(data)){\n    if (data[i]&gt;data[i-1]){\n    out[i]
        &lt;- \"increase\" count &lt;- count + 1 }\n    else { out[i] &lt;- \"decrease\"}}\n    ##
        Part 02\n    #create slinding window of 3 variables\n    slwi &lt;- c()\n    for
        (i in 1:length(data)){\n    if (i+2 &lt;= length(data)){\n    slwi[i] &lt;-
        data[i]+data[i+1]+data[i+2] }}#now count increases\n    count &lt;- 0\n    for
        (i in 2:length(slwi)){\n    if (slwi[i] &gt; slwi[i-1]){\n    count &lt;-
        count + 1 }\n    }", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn9lx60", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In
        R.&lt;/p&gt;\n\n&lt;p&gt;I am still on the growing end of learning curve (I
        also know, that there is a far easier solution using tidyverse, but I am not
        very comfortable using tidyverse yet). If you have any comments or suggestions,
        I would be very thankful! :)&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;##
        Part 01 #Count how many datapoints increase in value compared to previous
        datapoint\ndata &amp;lt;- scan(file.choose()) ### input01.txt\nout &amp;lt;-
        c()\ncount &amp;lt;- 0\nfor (i in 2:length(data)){\nif (data[i]&amp;gt;data[i-1]){\nout[i]
        &amp;lt;- &amp;quot;increase&amp;quot; count &amp;lt;- count + 1 }\nelse {
        out[i] &amp;lt;- &amp;quot;decrease&amp;quot;}}\n## Part 02\n#create slinding
        window of 3 variables\nslwi &amp;lt;- c()\nfor (i in 1:length(data)){\nif
        (i+2 &amp;lt;= length(data)){\nslwi[i] &amp;lt;- data[i]+data[i+1]+data[i+2]
        }}#now count increases\ncount &amp;lt;- 0\nfor (i in 2:length(slwi)){\nif
        (slwi[i] &amp;gt; slwi[i-1]){\ncount &amp;lt;- count + 1 }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn9lx60/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638666772.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn9aoyw", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "BaaBaaPinkSheep", "can_mod_post": false,
        "created_utc": 1638661867.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_ba7lz1", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**Python 3**\n\nhttps://github.com/SnoozeySleepy/AdventofCode/blob/main/day1.py",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn9aoyw", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python
        3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/SnoozeySleepy/AdventofCode/blob/main/day1.py\"&gt;https://github.com/SnoozeySleepy/AdventofCode/blob/main/day1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn9aoyw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638661867.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn91pdg", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TimGreller", "can_mod_post": false, "created_utc":
        1638658029.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_1iimtbdm", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "JavaScript (nodeJS) with dynamic block size:
        [GitHub](https://github.com/timlg07/AdventOfCode2021/tree/main/day01)\n\n    const
        fs = require(''fs/promises'')\n    const { argv } = require(''process'')\n    \n    function
        loadLines(file) {\n        return new Promise(async (resolve, reject) =&gt;
        {\n            fs.readFile(file, { encoding: ''utf-8'' })\n                .then(text
        =&gt; resolve(text.split(''\\n'')))    \n                .catch(reject)\n        })\n    }\n    \n    function
        countLargerThanPrev(values, blockSize = 1) {\n        let largerThanPrev =
        0\n    \n        for (let i = blockSize; i &lt; values.length; i++) {        \n            const
        prev = Number(values[i - blockSize])\n            const curr = Number(values[I])\n            const
        diff = curr - prev\n            if (diff &gt; 0) largerThanPrev++\n        }\n    \n        return
        largerThanPrev\n    }\n    \n    loadLines(argv[2])\n        .then(values
        =&gt; {\n            const res = countLargerThanPrev(values, 3)\n            console.log(res)\n        })\n        .catch(console.error)",
        "edited": 1638658217.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn91pdg", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript
        (nodeJS) with dynamic block size: &lt;a href=\"https://github.com/timlg07/AdventOfCode2021/tree/main/day01\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        fs = require(&amp;#39;fs/promises&amp;#39;)\nconst { argv } = require(&amp;#39;process&amp;#39;)\n\nfunction
        loadLines(file) {\n    return new Promise(async (resolve, reject) =&amp;gt;
        {\n        fs.readFile(file, { encoding: &amp;#39;utf-8&amp;#39; })\n            .then(text
        =&amp;gt; resolve(text.split(&amp;#39;\\n&amp;#39;)))    \n            .catch(reject)\n    })\n}\n\nfunction
        countLargerThanPrev(values, blockSize = 1) {\n    let largerThanPrev = 0\n\n    for
        (let i = blockSize; i &amp;lt; values.length; i++) {        \n        const
        prev = Number(values[i - blockSize])\n        const curr = Number(values[I])\n        const
        diff = curr - prev\n        if (diff &amp;gt; 0) largerThanPrev++\n    }\n\n    return
        largerThanPrev\n}\n\nloadLines(argv[2])\n    .then(values =&amp;gt; {\n        const
        res = countLargerThanPrev(values, 3)\n        console.log(res)\n    })\n    .catch(console.error)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn91pdg/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638658029.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn91ne2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "em-q", "can_mod_post": false, "created_utc":
        1638658005.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_4djnxei0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "chunky memory different follow mountainous
        sloppy wine rich direction screw\n\n *This post was mass deleted and anonymized
        with [Redact](https://redact.dev)*", "edited": 1720812605.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hn91ne2", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;chunky memory different follow
        mountainous sloppy wine rich direction screw&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;This
        post was mass deleted and anonymized with &lt;a href=\"https://redact.dev\"&gt;Redact&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn91ne2/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638658005.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn8zooc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "bsholden", "can_mod_post": false, "created_utc":
        1638657176.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 5,
        "author_fullname": "t2_6xer0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My C++ solution with the input as a vector
        of ints\n\n    std::cout &lt;&lt; \"Part 1: \" &lt;&lt; std::inner_product(std::begin(nums),
        std::end(nums) - 1, std::begin(nums) + 1, 0, std::plus&lt;&gt;(), std::less&lt;int&gt;())
        &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Part 2: \" &lt;&lt; std::inner_product(std::begin(nums),
        std::end(nums) - 3, std::begin(nums) + 3, 0, std::plus&lt;&gt;(), std::less&lt;int&gt;())
        &lt;&lt; std::endl;", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn8zooc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        C++ solution with the input as a vector of ints&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;std::cout
        &amp;lt;&amp;lt; &amp;quot;Part 1: &amp;quot; &amp;lt;&amp;lt; std::inner_product(std::begin(nums),
        std::end(nums) - 1, std::begin(nums) + 1, 0, std::plus&amp;lt;&amp;gt;(),
        std::less&amp;lt;int&amp;gt;()) &amp;lt;&amp;lt; std::endl;\nstd::cout &amp;lt;&amp;lt;
        &amp;quot;Part 2: &amp;quot; &amp;lt;&amp;lt; std::inner_product(std::begin(nums),
        std::end(nums) - 3, std::begin(nums) + 3, 0, std::plus&amp;lt;&amp;gt;(),
        std::less&amp;lt;int&amp;gt;()) &amp;lt;&amp;lt; std::endl;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn8zooc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638657176.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 5}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hna8bl1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638677180.0, "send_replies": true,
        "parent_id": "t1_hn8t2pw", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Please follow the [posting guidelines](https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines)
        and edit your post to add what language(s) you used.  This makes it easier
        for folks who Ctrl-F the megathreads looking for a specific language.\n\n(looks
        like Google Sheets?)\n\nAlso, post the sheet itself or at least the formulas
        you used.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hna8bl1", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please
        follow the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines\"&gt;posting
        guidelines&lt;/a&gt; and edit your post to add what language(s) you used.  This
        makes it easier for folks who Ctrl-F the megathreads looking for a specific
        language.&lt;/p&gt;\n\n&lt;p&gt;(looks like Google Sheets?)&lt;/p&gt;\n\n&lt;p&gt;Also,
        post the sheet itself or at least the formulas you used.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hna8bl1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638677180.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hn8t2pw", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "zzzmx", "can_mod_post": false, "created_utc":
        1638654342.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 0,
        "author_fullname": "t2_a0zm8ese", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Am I the only One? :)\n\nhttps://ibb.co/GQDpgbL\r  \nhttps://ibb.co/cr6Zy9X",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn8t2pw", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Am
        I the only One? :)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://ibb.co/GQDpgbL\"&gt;https://ibb.co/GQDpgbL&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://ibb.co/cr6Zy9X\"&gt;https://ibb.co/cr6Zy9X&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn8t2pw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638654342.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 0}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn87s4v", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "micod", "can_mod_post": false, "created_utc":
        1638645192.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_13860o", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Smalltalk**\n\nstill learning how to write
        more idiomatic code, later days look better\n\nPart 1:\n\n    solveA\r\n        |
        data lastDepth count |\n        data := self loadInput.\n        count :=
        0.\n        lastDepth := data at: 1.\n        data do: [ :each |\n            each
        &gt; lastDepth ifTrue: [ count := count+1 ].\n            lastDepth := each\n        ].\n        ^count\n\nPart
        2:\n\n    solveB\n        | data lastDepth count |\n        data := self loadInput.\n        count
        := 0.\n        lastDepth := (data at: 1) + (data at: 2) + (data at: 3).\n        4
        to: (data size - 2) do: [ :i |\n            | sum |\n            sum := (data
        at: i) + (data at: i+1) + (data at: i+2).\n            sum &gt; lastDepth
        ifTrue: [ count := count+1 ].\n            lastDepth := sum\n        ].\n        ^count",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn87s4v", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Smalltalk&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;still
        learning how to write more idiomatic code, later days look better&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;solveA\n    | data lastDepth count
        |\n    data := self loadInput.\n    count := 0.\n    lastDepth := data at:
        1.\n    data do: [ :each |\n        each &amp;gt; lastDepth ifTrue: [ count
        := count+1 ].\n        lastDepth := each\n    ].\n    ^count\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;solveB\n    | data lastDepth count
        |\n    data := self loadInput.\n    count := 0.\n    lastDepth := (data at:
        1) + (data at: 2) + (data at: 3).\n    4 to: (data size - 2) do: [ :i |\n        |
        sum |\n        sum := (data at: i) + (data at: i+1) + (data at: i+2).\n        sum
        &amp;gt; lastDepth ifTrue: [ count := count+1 ].\n        lastDepth := sum\n    ].\n    ^count\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn87s4v/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638645192.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn7ubfr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "BeamMeUpBiscotti", "can_mod_post": false,
        "created_utc": 1638639737.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 1, "author_fullname": "t2_13i16q", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "# ReScript\n\n[code](https://github.com/yangdanny97/advent-of-code/blob/main/src/day1.res)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn7ubfr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;ReScript&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/yangdanny97/advent-of-code/blob/main/src/day1.res\"&gt;code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn7ubfr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638639737.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn7n58u", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "s195t", "can_mod_post": false, "created_utc":
        1638636766.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_6w3kera", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Bash\n\n\nI might be a little late to the
        party but here is my bash solution:\n\n\n    #!/bin/bash\n    \n    file=\"in.txt\"\n    temp=0\n    counter=0\n    \n    while
        read line; do\n            if (( line &gt; temp));\n        then\n                counter=$((counter+1))\n    \n        fi\n        temp=$line\n    done
        &lt; \"$file\"\n\n    counter=$((counter-1))\n    echo \"$counter\"\n\n    temp1=0\n    temp2=0\n    temp3=0\n    sum1=0\n    sum2=0\n    counter1=0\n    \n    while
        read line; do\n            sum1=$((temp1 + temp2 +temp3))\n            sum2=$((line
        + temp2 + temp3))\n    \n    \n            if (( sum2 &gt; sum1));\n        then\n                counter1=$((counter1+1))\n    \n        fi\n\n        temp1=$temp2\n        temp2=$temp3\n        temp3=$line\n        sum1=$sum2\n\n    done
        &lt; \"$file\"\n    counter1=$((counter1-3))\n    echo \"$counter1\"\n    exit
        1", "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn7n58u", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bash&lt;/p&gt;\n\n&lt;p&gt;I
        might be a little late to the party but here is my bash solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/bash\n\nfile=&amp;quot;in.txt&amp;quot;\ntemp=0\ncounter=0\n\nwhile
        read line; do\n        if (( line &amp;gt; temp));\n    then\n            counter=$((counter+1))\n\n    fi\n    temp=$line\ndone
        &amp;lt; &amp;quot;$file&amp;quot;\n\ncounter=$((counter-1))\necho &amp;quot;$counter&amp;quot;\n\ntemp1=0\ntemp2=0\ntemp3=0\nsum1=0\nsum2=0\ncounter1=0\n\nwhile
        read line; do\n        sum1=$((temp1 + temp2 +temp3))\n        sum2=$((line
        + temp2 + temp3))\n\n\n        if (( sum2 &amp;gt; sum1));\n    then\n            counter1=$((counter1+1))\n\n    fi\n\n    temp1=$temp2\n    temp2=$temp3\n    temp3=$line\n    sum1=$sum2\n\ndone
        &amp;lt; &amp;quot;$file&amp;quot;\ncounter1=$((counter1-3))\necho &amp;quot;$counter1&amp;quot;\nexit
        1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn7n58u/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1638636766.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hn8o27n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638652163.0, "send_replies": true,
        "parent_id": "t1_hn7flau", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1638747037.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hn8o27n", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your code is hard
        to read on old.reddit.  Please edit it as per our posting guidelines in the
        wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn8o27n/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638652163.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hn7flau", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "encse", "can_mod_post": false, "created_utc":
        1638633481.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_bidtz", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "C#\n\nI discovered three way 3 zip in .Net
        6:\n\n[https://github.com/encse/adventofcode/blob/master/2021/Day01/Solution.cs](https://github.com/encse/adventofcode/blob/master/2021/Day01/Solution.cs)",
        "edited": 1638684834.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn7flau", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;p&gt;I
        discovered three way 3 zip in .Net 6:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/encse/adventofcode/blob/master/2021/Day01/Solution.cs\"&gt;https://github.com/encse/adventofcode/blob/master/2021/Day01/Solution.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn7flau/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638633481.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn7e5m5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kmb5", "can_mod_post": false, "created_utc":
        1638632833.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_7l8co", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My \"production-ready\" (at least that is
        the intention) [solution for day 1 in Python](https://github.com/kmb5/advent-of-code-2021/blob/main/day_1.py)
        (part1+part2)", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn7e5m5", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        &amp;quot;production-ready&amp;quot; (at least that is the intention) &lt;a
        href=\"https://github.com/kmb5/advent-of-code-2021/blob/main/day_1.py\"&gt;solution
        for day 1 in Python&lt;/a&gt; (part1+part2)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn7e5m5/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638632833.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hn8p5d4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638652651.0, "send_replies": true,
        "parent_id": "t1_hn757yb", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1638747048.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hn8p5d4", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your code is hard
        to read on old.reddit.  Please edit it as per our posting guidelines in the
        wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn8p5d4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638652651.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hn757yb", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ElektroKotte", "can_mod_post": false,
        "created_utc": 1638628507.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_12e0oc", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "# Guile/Scheme\n\n    (define
        (solve-part1 input)\n      (apply +\n             (map bool-&gt;number\n                  (map
        (\u03bb (ab) (apply &lt; ab))\n                       (windows 2 input)))))\n    \n    (define
        (solve-part2 input)\n      (let [(filtered (map (\u03bb (l) (apply + l))\n                           (windows
        3 input)))]\n        (apply +\n               (map bool-&gt;number\n                    (map
        (\u03bb (ab) (apply &lt; ab))\n                         (windows 2 filtered))))))\n\nWhere
        `windows` is defined in a helper library. Full code is [here](https://github.com/EmilOhlsson/advent-of-code/blob/main/scheme/2021/01-sonar-sweep/sonar-sweep.scm)\n\nedit:
        format according to guidelines, I hope :-)", "edited": 1638702353.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hn757yb", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Guile/Scheme&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;(define
        (solve-part1 input)\n  (apply +\n         (map bool-&amp;gt;number\n              (map
        (\u03bb (ab) (apply &amp;lt; ab))\n                   (windows 2 input)))))\n\n(define
        (solve-part2 input)\n  (let [(filtered (map (\u03bb (l) (apply + l))\n                       (windows
        3 input)))]\n    (apply +\n           (map bool-&amp;gt;number\n                (map
        (\u03bb (ab) (apply &amp;lt; ab))\n                     (windows 2 filtered))))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Where
        &lt;code&gt;windows&lt;/code&gt; is defined in a helper library. Full code
        is &lt;a href=\"https://github.com/EmilOhlsson/advent-of-code/blob/main/scheme/2021/01-sonar-sweep/sonar-sweep.scm\"&gt;here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;edit:
        format according to guidelines, I hope :-)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn757yb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638628507.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn709to", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "soodssr", "can_mod_post": false, "created_utc":
        1638625844.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_gxmh3y8i", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[PHP](https://github.com/soodssr/aoc-2021/tree/main/day_01)\n\n[Kotlin](https://github.com/soodssr/aoc-2021-kotlin/blob/main/src/Day01.kt)",
        "edited": 1638770811.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn709to", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/soodssr/aoc-2021/tree/main/day_01\"&gt;PHP&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/soodssr/aoc-2021-kotlin/blob/main/src/Day01.kt\"&gt;Kotlin&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn709to/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638625844.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hn8p71h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638652671.0, "send_replies": true,
        "parent_id": "t1_hn63dzp", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "~~As per our posting guidelines in the wiki under [How Do the Daily Megathreads
        Work?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_the_daily_megathreads_work.3F),
        please edit your post to put your oversized code in a [`paste`](https://topaz.github.io/paste/)
        or other external link.~~\n\nEdit: thanks for fixing it!  &lt;3", "edited":
        1638677204.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_hn8p71h", "is_submitter": true, "downs": 0, "author_flair_richtext": [],
        "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;As
        per our posting guidelines in the wiki under &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_the_daily_megathreads_work.3F\"&gt;How
        Do the Daily Megathreads Work?&lt;/a&gt;, please edit your post to put your
        oversized code in a &lt;a href=\"https://topaz.github.io/paste/\"&gt;&lt;code&gt;paste&lt;/code&gt;&lt;/a&gt;
        or other external link.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks for
        fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn8p71h/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638652671.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hn63dzp", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "pmwals09", "can_mod_post": false, "created_utc":
        1638600429.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_dsrxb", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Dual solutions in JavaScript and in C# as
        I''m learning the latter.\n\n[**JavaScript**](https://topaz.github.io/paste/#XQAAAQCpAwAAAAAAAAAxm8oZxjYXowvKgC/I5EqZWshb8t/aD9Z0Ae6fdjZY+U8jJcQBdSs1fUIuxdOkt7t7rSeC5UuH/QQjaBi8Qg11LYF+SvotOhu40DOO7p/OohF2QWnIwjYXWm9uxuuU0iWKlS8rnYMbjfiVdoNda2y8tfMawD1/qiUz2smxrqLlxGp2Zc8sgwHCqYlTHkFuyEHbH0Jtttikcz7qTrgwGFoUT8Q4JETO9pQOlI4xFcu4QPEKnDOnC9QOBZBlAiU7f6+DOIRw36+5F3xCNaGbGWiOqC7Jv5JekV7KBRX82vge5Gn+DajqlZ/UkchNa5LQSRns0mPdK9MrgHKYinOGrJ71/OQDTTbyoqn0UxpsM3yTw3eN0+lvZO6ZGfhO36JeU/Vpf3uAhuWDQrYtMrFK1UfCcP2TkFKITOb4Z1f+SHVDzfo4AQrgWocpwCAbZQ03GI91Z4a+xD6qbtmT+Ip92Izz5Sit9Mh9b5D2ysJgdNndfuLyNConPY4O75tioxr8q75LDpG/PeIFSgLvBBYRm87mEjqcba992n5lQUnl2zu/7U85d9Yqdsz8Kx4AW6L9sCtM8p4xeXmbbIeXaP/po3Bh)\n\n[**C#**](https://topaz.github.io/paste/#XQAAAQARBwAAAAAAAAA6nMlWi076alCx9N1TtsVNiXecUoGeYT6aP6mR8mlULJpnBWlkXihEzE0F8KDM3cX38jPq+UTIph1iscW80cIqH72aWY4qYzv+nJc34B04eTXGP6rvGZgl4xQjaU/l8GA7ENA8fELXhB0bSnTf25qzx8bTZa/GFZlo8o7fHQoZAtUMcY3WFncELEQzPyUVAHAcfU7tz7s1Tr7wmCG8bOXAbYkiJMMgvpcmdhwS84MMFrduuEwEQwvkvREhzMGzSjWFcOIhfUpUkX9j+yPYWRPjFEWqfmgGT4LvBPbk9SPsmO+G3ZWwCVCeUOp7h4FHvhyBZuAClb1aZZRLf7UzHfn8SOHr7LTtAm7B8dafCpz8Zkdprjm9hoDtL8lC2ogp1LneB4X/m4ehJT10PZ7damgliyEfv1n+vNAMBzC5nU2LPCV/8MXemX/1c5Tx+ZSjSQiLgtZfNU57/9Np2gO4i9GSNWeadq8lQkGyBaPRODviY4j1LRVCQvblnn75a/GVZIUjJTW9GqgXnSej/VBPQZNDYR0cIVZPV/yE2n5bGC41juUcOQ5oPTimLpnoULpyogSa3PT4NlQX7VHcsG0TgcUqOcH5LBM7NH9N9k4cOh9O8/Z/EP6bo19ewMVT55oLSJ9XAI2CpuFViA1SGM9cjycpa3GcWlXUNB0fgT1UMPMu53vF8aiPjCfKAMw+p3sulSS1i3iDJQOXUCeJ1xsQKwzKnXkOtaWcGPTueGBJCYAZP530GYG2rMwOvsYqM1MuylUZ9FTd50PNugGwZO69Kp4bR39z1P4MUsxcVIDeyF1OLj4eEPYcJN0b/glt/08hLQA=)",
        "edited": 1638669545.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn63dzp", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dual
        solutions in JavaScript and in C# as I&amp;#39;m learning the latter.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCpAwAAAAAAAAAxm8oZxjYXowvKgC/I5EqZWshb8t/aD9Z0Ae6fdjZY+U8jJcQBdSs1fUIuxdOkt7t7rSeC5UuH/QQjaBi8Qg11LYF+SvotOhu40DOO7p/OohF2QWnIwjYXWm9uxuuU0iWKlS8rnYMbjfiVdoNda2y8tfMawD1/qiUz2smxrqLlxGp2Zc8sgwHCqYlTHkFuyEHbH0Jtttikcz7qTrgwGFoUT8Q4JETO9pQOlI4xFcu4QPEKnDOnC9QOBZBlAiU7f6+DOIRw36+5F3xCNaGbGWiOqC7Jv5JekV7KBRX82vge5Gn+DajqlZ/UkchNa5LQSRns0mPdK9MrgHKYinOGrJ71/OQDTTbyoqn0UxpsM3yTw3eN0+lvZO6ZGfhO36JeU/Vpf3uAhuWDQrYtMrFK1UfCcP2TkFKITOb4Z1f+SHVDzfo4AQrgWocpwCAbZQ03GI91Z4a+xD6qbtmT+Ip92Izz5Sit9Mh9b5D2ysJgdNndfuLyNConPY4O75tioxr8q75LDpG/PeIFSgLvBBYRm87mEjqcba992n5lQUnl2zu/7U85d9Yqdsz8Kx4AW6L9sCtM8p4xeXmbbIeXaP/po3Bh\"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQARBwAAAAAAAAA6nMlWi076alCx9N1TtsVNiXecUoGeYT6aP6mR8mlULJpnBWlkXihEzE0F8KDM3cX38jPq+UTIph1iscW80cIqH72aWY4qYzv+nJc34B04eTXGP6rvGZgl4xQjaU/l8GA7ENA8fELXhB0bSnTf25qzx8bTZa/GFZlo8o7fHQoZAtUMcY3WFncELEQzPyUVAHAcfU7tz7s1Tr7wmCG8bOXAbYkiJMMgvpcmdhwS84MMFrduuEwEQwvkvREhzMGzSjWFcOIhfUpUkX9j+yPYWRPjFEWqfmgGT4LvBPbk9SPsmO+G3ZWwCVCeUOp7h4FHvhyBZuAClb1aZZRLf7UzHfn8SOHr7LTtAm7B8dafCpz8Zkdprjm9hoDtL8lC2ogp1LneB4X/m4ehJT10PZ7damgliyEfv1n+vNAMBzC5nU2LPCV/8MXemX/1c5Tx+ZSjSQiLgtZfNU57/9Np2gO4i9GSNWeadq8lQkGyBaPRODviY4j1LRVCQvblnn75a/GVZIUjJTW9GqgXnSej/VBPQZNDYR0cIVZPV/yE2n5bGC41juUcOQ5oPTimLpnoULpyogSa3PT4NlQX7VHcsG0TgcUqOcH5LBM7NH9N9k4cOh9O8/Z/EP6bo19ewMVT55oLSJ9XAI2CpuFViA1SGM9cjycpa3GcWlXUNB0fgT1UMPMu53vF8aiPjCfKAMw+p3sulSS1i3iDJQOXUCeJ1xsQKwzKnXkOtaWcGPTueGBJCYAZP530GYG2rMwOvsYqM1MuylUZ9FTd50PNugGwZO69Kp4bR39z1P4MUsxcVIDeyF1OLj4eEPYcJN0b/glt/08hLQA=\"&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn63dzp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638600429.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn60izq", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dizzyhobbes", "can_mod_post": false, "created_utc":
        1638598492.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_1yhucx86", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Go\nhttps://github.com/alexchao26/advent-of-code-go/blob/main/2021/day01/main.go",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn60izq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go\n&lt;a
        href=\"https://github.com/alexchao26/advent-of-code-go/blob/main/2021/day01/main.go\"&gt;https://github.com/alexchao26/advent-of-code-go/blob/main/2021/day01/main.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn60izq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638598492.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn5smii", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "rukke", "can_mod_post": false, "created_utc":
        1638593819.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_4917m", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "JavaScript\n\n    export const part1 = lines
        =&gt;\n      lines\n        .map(Number)\n        .map((line, i) =&gt; line
        - lines[i - 1])\n        .slice(1)\n        .filter(v =&gt; v &gt; 0).length;\n    \n    export
        const part2 = lines =&gt;\n      part1(\n        lines\n          .map(Number)\n          .map((line,
        i, arr) =&gt; line + arr[i + 1] + arr[i + 2])\n          .slice(0, lines.length
        - 2)\n      );", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn5smii", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export
        const part1 = lines =&amp;gt;\n  lines\n    .map(Number)\n    .map((line,
        i) =&amp;gt; line - lines[i - 1])\n    .slice(1)\n    .filter(v =&amp;gt;
        v &amp;gt; 0).length;\n\nexport const part2 = lines =&amp;gt;\n  part1(\n    lines\n      .map(Number)\n      .map((line,
        i, arr) =&amp;gt; line + arr[i + 1] + arr[i + 2])\n      .slice(0, lines.length
        - 2)\n  );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn5smii/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638593819.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn4xkbk", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "oantolin", "can_mod_post": false, "created_utc":
        1638578308.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_3fxjo", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Awk:\n\n    {a &amp;&amp; $1&gt;a &amp;&amp;
        i1++; c &amp;&amp; $1&gt;c &amp;&amp; i3++; c=b; b=a; a=$1}\n    END {printf
        \"Part 1: %d. Part 2: %d.\", i1, i3}", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hn4xkbk", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Awk:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{a
        &amp;amp;&amp;amp; $1&amp;gt;a &amp;amp;&amp;amp; i1++; c &amp;amp;&amp;amp;
        $1&amp;gt;c &amp;amp;&amp;amp; i3++; c=b; b=a; a=$1}\nEND {printf &amp;quot;Part
        1: %d. Part 2: %d.&amp;quot;, i1, i3}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn4xkbk/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638578308.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn4nxxu", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TopSpaceCat", "can_mod_post": false, "created_utc":
        1638573788.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_r8dda", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Golang\n\n    package day1\n    \n    import
        (\n    \t\"fmt\"\n    \t\"io\"\n    \t\"log\"\n    \t\"os\"\n    )\n    \n    func
        readInputNumber(inputFile string) ([]int, error) {\n    \t// Open file\n    \tfile,
        err := os.Open(inputFile)\n    \tif err != nil {\n    \t\tlog.Fatal(err)\n    \t}\n    \tdefer
        file.Close()\n    \n    \tvar perline int\n    \tvar nums []int\n    \n    \tfor
        {\n    \t\t_, err := fmt.Fscanf(file, \"%d\\n\", &amp;perline)\n    \t\tif
        err != nil {\n    \t\t\tif err == io.EOF {\n    \t\t\t\tbreak // stop reading
        the file\n    \t\t\t}\n    \t\t\tfmt.Println(err)\n    \t\t\tos.Exit(1)\n    \t\t}\n    \n    \t\tnums
        = append(nums, perline)\n    \t}\n    \n    \treturn nums, err\n    }\n    \n    func
        getSummedValues(data []int, windowsSize int) ([]int, error) {\n    \tvar result
        []int\n    \tfor i := windowsSize - 1; i &lt; len(data); i++ {\n    \t\tsum
        := 0\n    \t\tfor p := 0; p &lt; windowsSize; p++ {\n    \t\t\tsum = sum +
        data[i-p]\n    \t\t}\n    \n    \t\tresult = append(result, sum)\n    \t}\n    \n    \treturn
        result, nil\n    }\n    \n    func getNumberOfPositiveGradients(data []int)
        (int, error) {\n    \tcount := 0\n    \tfor i := 1; i &lt; len(data); i++
        {\n    \t\tif data[i-1] &lt; data[i] {\n    \t\t\tcount++\n    \t\t}\n    \t}\n    \n    \treturn
        count, nil\n    }\n    \n    func Solve() {\n    \t// Read input\n    \tdeeps,
        err := readInputNumber(\"day1/input.txt\")\n    \tif err != nil {\n    \t\tlog.Fatal(err)\n    \t}\n    \n    \t//
        Part One\n    \tfmt.Print(\"Day 1 - Part One: How many measurements are larger
        than the previous measurement? \")\n    \n    \tanswer1, _ := getNumberOfPositiveGradients(deeps)\n    \tfmt.Println(fmt.Sprintf(\"Answer:
        [%d]\", answer1))\n    \n    \t// Part Two\n    \tfmt.Print(\"Day 1 - Part
        Two: How many sums are larger than the previous sum? \")\n    \n    \tsummedDeeps,
        _ := getSummedValues(deeps, 3)\n    \n    \tanswer2, _ := getNumberOfPositiveGradients(summedDeeps)\n    \tfmt.Println(fmt.Sprintf(\"Answer:
        [%d]\", answer2))\n    }", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn4nxxu", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Golang&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        day1\n\nimport (\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;io&amp;quot;\n    &amp;quot;log&amp;quot;\n    &amp;quot;os&amp;quot;\n)\n\nfunc
        readInputNumber(inputFile string) ([]int, error) {\n    // Open file\n    file,
        err := os.Open(inputFile)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer
        file.Close()\n\n    var perline int\n    var nums []int\n\n    for {\n        _,
        err := fmt.Fscanf(file, &amp;quot;%d\\n&amp;quot;, &amp;amp;perline)\n        if
        err != nil {\n            if err == io.EOF {\n                break // stop
        reading the file\n            }\n            fmt.Println(err)\n            os.Exit(1)\n        }\n\n        nums
        = append(nums, perline)\n    }\n\n    return nums, err\n}\n\nfunc getSummedValues(data
        []int, windowsSize int) ([]int, error) {\n    var result []int\n    for i
        := windowsSize - 1; i &amp;lt; len(data); i++ {\n        sum := 0\n        for
        p := 0; p &amp;lt; windowsSize; p++ {\n            sum = sum + data[i-p]\n        }\n\n        result
        = append(result, sum)\n    }\n\n    return result, nil\n}\n\nfunc getNumberOfPositiveGradients(data
        []int) (int, error) {\n    count := 0\n    for i := 1; i &amp;lt; len(data);
        i++ {\n        if data[i-1] &amp;lt; data[i] {\n            count++\n        }\n    }\n\n    return
        count, nil\n}\n\nfunc Solve() {\n    // Read input\n    deeps, err := readInputNumber(&amp;quot;day1/input.txt&amp;quot;)\n    if
        err != nil {\n        log.Fatal(err)\n    }\n\n    // Part One\n    fmt.Print(&amp;quot;Day
        1 - Part One: How many measurements are larger than the previous measurement?
        &amp;quot;)\n\n    answer1, _ := getNumberOfPositiveGradients(deeps)\n    fmt.Println(fmt.Sprintf(&amp;quot;Answer:
        [%d]&amp;quot;, answer1))\n\n    // Part Two\n    fmt.Print(&amp;quot;Day
        1 - Part Two: How many sums are larger than the previous sum? &amp;quot;)\n\n    summedDeeps,
        _ := getSummedValues(deeps, 3)\n\n    answer2, _ := getNumberOfPositiveGradients(summedDeeps)\n    fmt.Println(fmt.Sprintf(&amp;quot;Answer:
        [%d]&amp;quot;, answer2))\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn4nxxu/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638573788.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn4nscs", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ffrkAnonymous", "can_mod_post": false,
        "created_utc": 1638573718.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_nxf5l", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[python] [day 1 part
        1] with tests as I work through the problem\n\n    \"\"\"\n    Advent of Code
        2021 day 1\n    Sonic Sonar\n    \"\"\"\n    \n    import logging\n    logging.basicConfig(level=logging.DEBUG)\n    \n    example
        = \"\"\"\n    199\n    200\n    208\n    210\n    200\n    207\n    240\n    269\n    260\n    263\n    \"\"\"\n    \n    #
        skip the first empty line due to cut-paste text block\n    example = example.splitlines()[1:]\n    \n    def
        part1(all_lines: [\"string\"]) -&gt; int:\n        \"\"\"\n    \n        &gt;&gt;&gt;
        part1(example)\n        7\n        &gt;&gt;&gt; part1([\"199\"])\n        0\n        &gt;&gt;&gt;
        part1([\"199\", \"200\"])\n        1\n        \"\"\"\n    \n        depths
        = parse(all_lines)\n        logging.debug(f\"{depths}\")\n        num_increases
        = 0\n        for i in range(len(depths)-1):\n            if depths[i+1] and
        depths[i] &lt; depths[i+1]:\n                num_increases+=1\n                logging.debug(f\"{depths[i]}
        {depths[i+1]}\")\n        return num_increases\n    \n    def parse(all_lines:
        [\"string\"]) -&gt; [int]:\n        \"\"\"\n        &gt;&gt;&gt; parse([\"199\"])\n        [199]\n        &gt;&gt;&gt;
        parse([\"199\", \"200\"])\n        [199, 200]\n        &gt;&gt;&gt; parse(example)\n        [199,
        200, 208, 210, 200, 207, 240, 269, 260, 263]\n        \"\"\"\n        depths
        = []\n        for depth in all_lines:\n            depth = int(depth)\n            depths.append(depth)\n            \n        return
        depths\n    \n    if __name__ == \"__main__\":\n        import doctest\n        doctest.testmod()\n    \n        from
        sys import stdin\n        lines = stdin.read().splitlines()\n    #    logging.info(f\"{lines}EOF\")\n        logging.info(f\"part1:
        {part1(lines)}\")\n    #    logging.info(f\"part2: {part2(lines)}\")", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hn4nscs",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[python] [day 1 part
        1] with tests as I work through the problem&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;\nAdvent
        of Code 2021 day 1\nSonic Sonar\n&amp;quot;&amp;quot;&amp;quot;\n\nimport
        logging\nlogging.basicConfig(level=logging.DEBUG)\n\nexample = &amp;quot;&amp;quot;&amp;quot;\n199\n200\n208\n210\n200\n207\n240\n269\n260\n263\n&amp;quot;&amp;quot;&amp;quot;\n\n#
        skip the first empty line due to cut-paste text block\nexample = example.splitlines()[1:]\n\ndef
        part1(all_lines: [&amp;quot;string&amp;quot;]) -&amp;gt; int:\n    &amp;quot;&amp;quot;&amp;quot;\n\n    &amp;gt;&amp;gt;&amp;gt;
        part1(example)\n    7\n    &amp;gt;&amp;gt;&amp;gt; part1([&amp;quot;199&amp;quot;])\n    0\n    &amp;gt;&amp;gt;&amp;gt;
        part1([&amp;quot;199&amp;quot;, &amp;quot;200&amp;quot;])\n    1\n    &amp;quot;&amp;quot;&amp;quot;\n\n    depths
        = parse(all_lines)\n    logging.debug(f&amp;quot;{depths}&amp;quot;)\n    num_increases
        = 0\n    for i in range(len(depths)-1):\n        if depths[i+1] and depths[i]
        &amp;lt; depths[i+1]:\n            num_increases+=1\n            logging.debug(f&amp;quot;{depths[i]}
        {depths[i+1]}&amp;quot;)\n    return num_increases\n\ndef parse(all_lines:
        [&amp;quot;string&amp;quot;]) -&amp;gt; [int]:\n    &amp;quot;&amp;quot;&amp;quot;\n    &amp;gt;&amp;gt;&amp;gt;
        parse([&amp;quot;199&amp;quot;])\n    [199]\n    &amp;gt;&amp;gt;&amp;gt;
        parse([&amp;quot;199&amp;quot;, &amp;quot;200&amp;quot;])\n    [199, 200]\n    &amp;gt;&amp;gt;&amp;gt;
        parse(example)\n    [199, 200, 208, 210, 200, 207, 240, 269, 260, 263]\n    &amp;quot;&amp;quot;&amp;quot;\n    depths
        = []\n    for depth in all_lines:\n        depth = int(depth)\n        depths.append(depth)\n\n    return
        depths\n\nif __name__ == &amp;quot;__main__&amp;quot;:\n    import doctest\n    doctest.testmod()\n\n    from
        sys import stdin\n    lines = stdin.read().splitlines()\n#    logging.info(f&amp;quot;{lines}EOF&amp;quot;)\n    logging.info(f&amp;quot;part1:
        {part1(lines)}&amp;quot;)\n#    logging.info(f&amp;quot;part2: {part2(lines)}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn4nscs/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638573718.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hn4c7sz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[My solution](https://github.com/Farbfetzen/Advent_of_Code/blob/main/python/2021/day01.py)
        in **Python**. At first I summed all three numbers for part 2 but then I saw
        the optimization in the comments and implemented that.", "edited": 1638818457.0,
        "downs": 0, "author_flair_css_class": null, "collapsed": false, "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/Farbfetzen/Advent_of_Code/blob/main/python/2021/day01.py\"&gt;My
        solution&lt;/a&gt; in &lt;strong&gt;Python&lt;/strong&gt;. At first I summed
        all three numbers for part 2 but then I saw the optimization in the comments
        and implemented that.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn4c7sz/",
        "num_reports": null, "locked": false, "name": "t1_hn4c7sz", "created": 1638568475.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638568475.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn3k3jv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TacosAlPastor92", "can_mod_post": false,
        "created_utc": 1638556563.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_b1a5lf9f", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[Python Jupyter Notebook](https://github.com/0x1010-dev/aoc/blob/main/2021/day1.ipynb)\n\nA
        nice little warmup!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn3k3jv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/0x1010-dev/aoc/blob/main/2021/day1.ipynb\"&gt;Python
        Jupyter Notebook&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A nice little warmup!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn3k3jv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638556563.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn32dqi", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Solarmew", "can_mod_post": false, "created_utc":
        1638549619.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_351u8", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python3\n\n    from urllib.request import
        urlopen\n    data = urlopen(''https://tinyurl.com/mtdw9yn'').read().decode().split(''\\n'')[:-1]\n    \n    data
        = [int(x) for x in data]\n    sum([y - x for x, y in zip(data, data[1:])])\n\n&amp;#x200B;\n\npart
        2:\n\n    t = 0\n    for i in range(1, len(data)-2): t += sum(data[i : i+3])
        &gt; sum(data[i-1 : i+2])\n    t", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_hn32dqi", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        urllib.request import urlopen\ndata = urlopen(&amp;#39;https://tinyurl.com/mtdw9yn&amp;#39;).read().decode().split(&amp;#39;\\n&amp;#39;)[:-1]\n\ndata
        = [int(x) for x in data]\nsum([y - x for x, y in zip(data, data[1:])])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;t = 0\nfor i in range(1, len(data)-2):
        t += sum(data[i : i+3]) &amp;gt; sum(data[i-1 : i+2])\nt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn32dqi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638549619.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn2ymh2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "brbdead", "can_mod_post": false, "created_utc":
        1638548130.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_b164e", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Javascript**  \nA pretty simple, one-liner
        solution.   \nYou can pass in an interval of 1 for the first part and an interval
        of 3 for the second part!\n\n    const { fileToNumArray } = require(''../utils.js'');\n    const
        data = fileToNumArray(''./1Data.txt'')\n    \n    // both parts \n    const
        getNoOfIncreases = (data, interval) =&gt; data.reduce( \n      (total, currVal,
        currIndex) =&gt; \n        (data[currIndex + interval] &gt; currVal) ? total
        + 1 : total, \n        0 // initial value of total \n    );\n    \n    console.log(\"Part
        1: \" + getNoOfIncreases(data, 1)) \n    console.log(\"Part 2: \" + getNoOfIncreases(data,
        3))", "edited": 1638548616.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn2ymh2", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Javascript&lt;/strong&gt;&lt;br/&gt;\nA
        pretty simple, one-liner solution.&lt;br/&gt;\nYou can pass in an interval
        of 1 for the first part and an interval of 3 for the second part!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        { fileToNumArray } = require(&amp;#39;../utils.js&amp;#39;);\nconst data =
        fileToNumArray(&amp;#39;./1Data.txt&amp;#39;)\n\n// both parts \nconst getNoOfIncreases
        = (data, interval) =&amp;gt; data.reduce( \n  (total, currVal, currIndex)
        =&amp;gt; \n    (data[currIndex + interval] &amp;gt; currVal) ? total + 1
        : total, \n    0 // initial value of total \n);\n\nconsole.log(&amp;quot;Part
        1: &amp;quot; + getNoOfIncreases(data, 1)) \nconsole.log(&amp;quot;Part 2:
        &amp;quot; + getNoOfIncreases(data, 3))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn2ymh2/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638548130.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn2pw4x", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "RJdaMoD", "can_mod_post": false, "created_utc":
        1638544555.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_dw17knl6", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Mathematica** Just functional. Part 1:\n\n    ReadList[\"aoc-input_1.txt\"]//\n    ToExpression/@#&amp;//\n    Differences//\n    Count[#,_?Positive]&amp;\n\nPart
        2 by adding a convolution in-between:\n\n    ReadList[\"aoc-input_1.txt\"]//\n    ToExpression/@#&amp;//\n    ListConvolve[{1,1,1},#]&amp;//\n    Differences//\n    Count[#,_?Positive]&amp;",
        "edited": 1643022260.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn2pw4x", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Mathematica&lt;/strong&gt;
        Just functional. Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ReadList[&amp;quot;aoc-input_1.txt&amp;quot;]//\nToExpression/@#&amp;amp;//\nDifferences//\nCount[#,_?Positive]&amp;amp;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 by adding a convolution in-between:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ReadList[&amp;quot;aoc-input_1.txt&amp;quot;]//\nToExpression/@#&amp;amp;//\nListConvolve[{1,1,1},#]&amp;amp;//\nDifferences//\nCount[#,_?Positive]&amp;amp;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn2pw4x/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638544555.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_r66vow",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hnoo4y3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "21ROCKY12",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hnlvwxt", "score":
        1, "author_fullname": "t2_69z340m0", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "sure, instead of how
        it is in part one, where the fuel cost is the difference between the ship
        and the location, in part2 however you burn an additional 1 for every spot
        the ship travels horizontally therefore I made a function called getcost which
        does it for me- since if I''m traveling 3 spots- it will cost 1 + 2 + 3 which
        is 6 compared to part1 where it would be 2...", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_hnoo4y3", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;sure, instead of how
        it is in part one, where the fuel cost is the difference between the ship
        and the location, in part2 however you burn an additional 1 for every spot
        the ship travels horizontally therefore I made a function called getcost which
        does it for me- since if I&amp;#39;m traveling 3 spots- it will cost 1 + 2
        + 3 which is 6 compared to part1 where it would be 2...&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnoo4y3/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638940638.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638940638.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hnlvwxt", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_hn2ax0g", "score": 1, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": false, "author_flair_css_class": null, "collapsed":
        true, "downs": 0, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnlvwxt/",
        "num_reports": null, "locked": false, "name": "t1_hnlvwxt", "created": 1638893773.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638893773.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "hn2ax0g", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "21ROCKY12", "can_mod_post": false, "created_utc":
        1638537484.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_69z340m0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Java**\n\n[Java solution of day 1](https://topaz.github.io/paste/#XQAAAQCtBAAAAAAAAAA0m0pnuFI8c9/wau+qtGVPyaqZd0m0oqd+WNK5FEOTExU/ASOFLgLNP5psw5/hebgIgLQ/9MQ8byhpSP8VD5cKe3jPy6omiN5TzLtVXeioZqf7AMIbT6LBjG9U0FD2U3lL4Cn+6JmldKlfKn9sTG2DuESkYMRfBWFtdm1tL3lHDu0sin/gq68WQ8D6qFmamXsUEnV5YrupGT2KuF5zvFOe3D7WYKyW1opyz71ziz0VFzAtCVmgf7pDzgv9vQ+1N/Fi/aGy9a57AhvnNKp8EcNiEclJ4GbM50aFoFcB/ePxupgAZSshxNCk7TYLrVFXoDRRnHJXS5w7cXjgkpmRvbkbEJ12xZph/svblKnFWAoNjeqR9n0w6hJrjY9IZFl/Mlmgtr17nqt397ibvm33lfhtxdGYSS1Zk8n/zRoEQ3yF48In+Orn11O7XdcnJ6AUAVmKxhHZOWuGqDLU2zQxXGpBSxBpSU7pBPeKIINOn7vpLIVWMh4byfszzSHG+g1RtN1v8CstO+raNHbCCSSPGqSggy5mEsmxOAMjoN7d/dOcBHyeatG4tu2JeoK3BaV8oDEXRBz9VQcbsK7pyjn7iP0vtj7cSmPIf+YeTgQEnWMbQ0BntzDDu6sGTw3TiZTzriOZCsrH0wBKqP4imPy6M4pynuCxF9uH5JCcrMenvMHjntbFBayCpKW2eVSPA/+GEc4A)\n\nor
        checkout my github:\n\nhttps://github.com/GilCaplan/AdventCode/blob/Advent2021/Javasolutions/day1solution.java",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn2ax0g", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCtBAAAAAAAAAA0m0pnuFI8c9/wau+qtGVPyaqZd0m0oqd+WNK5FEOTExU/ASOFLgLNP5psw5/hebgIgLQ/9MQ8byhpSP8VD5cKe3jPy6omiN5TzLtVXeioZqf7AMIbT6LBjG9U0FD2U3lL4Cn+6JmldKlfKn9sTG2DuESkYMRfBWFtdm1tL3lHDu0sin/gq68WQ8D6qFmamXsUEnV5YrupGT2KuF5zvFOe3D7WYKyW1opyz71ziz0VFzAtCVmgf7pDzgv9vQ+1N/Fi/aGy9a57AhvnNKp8EcNiEclJ4GbM50aFoFcB/ePxupgAZSshxNCk7TYLrVFXoDRRnHJXS5w7cXjgkpmRvbkbEJ12xZph/svblKnFWAoNjeqR9n0w6hJrjY9IZFl/Mlmgtr17nqt397ibvm33lfhtxdGYSS1Zk8n/zRoEQ3yF48In+Orn11O7XdcnJ6AUAVmKxhHZOWuGqDLU2zQxXGpBSxBpSU7pBPeKIINOn7vpLIVWMh4byfszzSHG+g1RtN1v8CstO+raNHbCCSSPGqSggy5mEsmxOAMjoN7d/dOcBHyeatG4tu2JeoK3BaV8oDEXRBz9VQcbsK7pyjn7iP0vtj7cSmPIf+YeTgQEnWMbQ0BntzDDu6sGTw3TiZTzriOZCsrH0wBKqP4imPy6M4pynuCxF9uH5JCcrMenvMHjntbFBayCpKW2eVSPA/+GEc4A\"&gt;Java
        solution of day 1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;or checkout my github:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/GilCaplan/AdventCode/blob/Advent2021/Javasolutions/day1solution.java\"&gt;https://github.com/GilCaplan/AdventCode/blob/Advent2021/Javasolutions/day1solution.java&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn2ax0g/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638537484.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn296r6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "OmarSalehAssadi", "can_mod_post": false,
        "created_utc": 1638536497.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_ano4915z", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**Java 17** *(with
        Lombok and Spring)*  \nCode: [Day1.java](https://github.com/OmarAssadi/advent-2021/blob/develop/src/main/java/com/omarassadi/adventofcode/day/day1/Day1.java)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn296r6", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Java
        17&lt;/strong&gt; &lt;em&gt;(with Lombok and Spring)&lt;/em&gt;&lt;br/&gt;\nCode:
        &lt;a href=\"https://github.com/OmarAssadi/advent-2021/blob/develop/src/main/java/com/omarassadi/adventofcode/day/day1/Day1.java\"&gt;Day1.java&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn296r6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638536497.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn25bmu", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "adamz01h", "can_mod_post": false, "created_utc":
        1638534077.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_7c42d", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "PHP \n\n[https://github.com/adamz01h/adventofcode\\_2021/tree/master/day\\_1](https://github.com/adamz01h/adventofcode_2021)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn25bmu", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP
        &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/adamz01h/adventofcode_2021\"&gt;https://github.com/adamz01h/adventofcode_2021/tree/master/day_1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn25bmu/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638534077.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn1zgk0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "FeetsTV", "can_mod_post": false, "created_utc":
        1638529793.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_h6hub036", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Python solution](https://github.com/feetstv/Advent-of-Code-2021/blob/main/1.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn1zgk0", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/feetstv/Advent-of-Code-2021/blob/main/1.py\"&gt;Python
        solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn1zgk0/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1638529793.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hn1qpyb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AlexAegis",
        "can_mod_post": false, "created_utc": 1638522456.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_gevlz", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "#
        TypeScript solutions!\n\n109/760\n\n[Part 1](https://github.com/AlexAegis/advent-of-code/blob/master/solutions/typescript/2021/01/part_one.ts)\n[Part
        2](https://github.com/AlexAegis/advent-of-code/blob/master/solutions/typescript/2021/01/part_two.ts)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn1qpyb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;TypeScript
        solutions!&lt;/h1&gt;\n\n&lt;p&gt;109/760&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/AlexAegis/advent-of-code/blob/master/solutions/typescript/2021/01/part_one.ts\"&gt;Part
        1&lt;/a&gt;\n&lt;a href=\"https://github.com/AlexAegis/advent-of-code/blob/master/solutions/typescript/2021/01/part_two.ts\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn1qpyb/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1638522456.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hn1kfi1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jagster247",
        "can_mod_post": false, "created_utc": 1638517360.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_49j02cc2", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Day
        1 in Go: [GitHub](https://github.com/jordangarrison/advent-of-code/blob/master/2021/go/day1/day1.go)",
        "edited": 1638593108.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn1kfi1", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day
        1 in Go: &lt;a href=\"https://github.com/jordangarrison/advent-of-code/blob/master/2021/go/day1/day1.go\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn1kfi1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638517360.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hn7uz1i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Pretty_Cockroach_204",
        "can_mod_post": false, "created_utc": 1638640006.0, "send_replies": true,
        "parent_id": "t1_hn18wn4", "score": 1, "author_fullname": "t2_edok1u7r", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "consider this solution as  masterpiece in compare to the beginner like me",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn7uz1i", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;consider
        this solution as  masterpiece in compare to the beginner like me&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn7uz1i/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638640006.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn5op55", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1638591716.0, "send_replies": true, "parent_id": "t1_hn18wn4",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "~~Please follow the
        [posting guidelines](https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines)
        and edit your post to add what language(s) you used.  This makes it easier
        for folks who Ctrl-F the megathreads looking for a specific language.~~\n\n~~(looks
        like Python?)~~\n\nEdit: thanks for adding the programming language! &lt;3",
        "edited": 1638652703.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn5op55", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Please
        follow the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines\"&gt;posting
        guidelines&lt;/a&gt; and edit your post to add what language(s) you used.  This
        makes it easier for folks who Ctrl-F the megathreads looking for a specific
        language.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;(looks like Python?)&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        thanks for adding the programming language! &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn5op55/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638591716.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hn18wn4", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "plan_x64", "can_mod_post": false, "created_utc":
        1638509580.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_e8jpyjdy", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My trash Python solution (compared to using
        zip like people way more clever than me): https://github.com/plan-x64/advent-of-code-2021/blob/main/advent/day01.py",
        "edited": 1639345069.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn18wn4", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        trash Python solution (compared to using zip like people way more clever than
        me): &lt;a href=\"https://github.com/plan-x64/advent-of-code-2021/blob/main/advent/day01.py\"&gt;https://github.com/plan-x64/advent-of-code-2021/blob/main/advent/day01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn18wn4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638509580.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn0nmgc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "elshize", "can_mod_post": false, "created_utc":
        1638499235.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_16e5ot", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python:\n\n    levels = list(map(int, open(\"input.txt\")))\n    count
        = lambda step: sum(lhs &lt; rhs for (lhs, rhs) in zip(levels[:-step], levels[step:]))\n    print(count(1),
        count(3))", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hn0nmgc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;levels
        = list(map(int, open(&amp;quot;input.txt&amp;quot;)))\ncount = lambda step:
        sum(lhs &amp;lt; rhs for (lhs, rhs) in zip(levels[:-step], levels[step:]))\nprint(count(1),
        count(3))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn0nmgc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638499235.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn1702i", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1638508476.0, "send_replies": true, "parent_id": "t1_hn0mip2",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Your code is hard to
        read on both old.reddit and new.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn1702i", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your
        code is hard to read on both old.reddit and new.reddit.  Please edit it as
        per our posting guidelines in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn1702i/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638508476.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hn0mip2", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_r66vow", "score": 2, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "**Python**\n\nI
        eventually got there with Part 1, after debugging the below for ages. Casting
        `int(line)` got the right answer eventually, but the below consistently output
        the right answer minus one. Resorted to using Excel to figure out the issue,
        and it fails when the input figures cross from 3-digits to 4-digits, the code
        misses that one increase.\n\nPart 2 completed by comparing two of the values
        from each triplet, easy.\n\nMy corrected code further below - yep, not succinct
        at all.\n\nCode for Part 1 that missed by -1:\n\n    with open(\"input.txt\")
        as file:\n    lines = file.readlines()\n    \n    first_line = 1\n\nnum\\_incs
        = 0 prev\\_val = 0\n\nfor line in lines: if first\\_line == 1: first\\_line
        = 0 else: if line &gt; prev\\_val: num\\_incs += 1 prev\\_val = line\n\nprint(num\\_incs)\n\nFinal
        Code:\n\n    with open(\"input.txt\") as file:\n    lines = file.readlines()\n\nfirst\\_line
        = 1 num\\_incs = 0 prev\\_val = 0\n\nfor line in lines: if first\\_line ==
        1: first\\_line = 0 else: if int(line) &gt; prev\\_val: num\\_incs += 1 prev\\_val
        = int(line)\n\nprint(num\\_incs)\n\n# Part 2\n\nnum\\_incs\\_pt2 = 0\n\nfor
        x in range(len(lines)): if x &gt; 2: if ((int(lines\\[x\\])) &gt; (int(lines\\[x-3\\]))):
        num\\_incs\\_pt2 += 1\n\nprint(num\\_incs\\_pt2)", "edited": false, "downs":
        0, "author_flair_css_class": null, "collapsed": false, "is_submitter": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        eventually got there with Part 1, after debugging the below for ages. Casting
        &lt;code&gt;int(line)&lt;/code&gt; got the right answer eventually, but the
        below consistently output the right answer minus one. Resorted to using Excel
        to figure out the issue, and it fails when the input figures cross from 3-digits
        to 4-digits, the code misses that one increase.&lt;/p&gt;\n\n&lt;p&gt;Part
        2 completed by comparing two of the values from each triplet, easy.&lt;/p&gt;\n\n&lt;p&gt;My
        corrected code further below - yep, not succinct at all.&lt;/p&gt;\n\n&lt;p&gt;Code
        for Part 1 that missed by -1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;quot;input.txt&amp;quot;)
        as file:\nlines = file.readlines()\n\nfirst_line = 1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;num_incs
        = 0 prev_val = 0&lt;/p&gt;\n\n&lt;p&gt;for line in lines: if first_line ==
        1: first_line = 0 else: if line &amp;gt; prev_val: num_incs += 1 prev_val
        = line&lt;/p&gt;\n\n&lt;p&gt;print(num_incs)&lt;/p&gt;\n\n&lt;p&gt;Final Code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;input.txt&amp;quot;) as file:\nlines = file.readlines()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;first_line
        = 1 num_incs = 0 prev_val = 0&lt;/p&gt;\n\n&lt;p&gt;for line in lines: if
        first_line == 1: first_line = 0 else: if int(line) &amp;gt; prev_val: num_incs
        += 1 prev_val = int(line)&lt;/p&gt;\n\n&lt;p&gt;print(num_incs)&lt;/p&gt;\n\n&lt;h1&gt;Part
        2&lt;/h1&gt;\n\n&lt;p&gt;num_incs_pt2 = 0&lt;/p&gt;\n\n&lt;p&gt;for x in range(len(lines)):
        if x &amp;gt; 2: if ((int(lines[x])) &amp;gt; (int(lines[x-3]))): num_incs_pt2
        += 1&lt;/p&gt;\n\n&lt;p&gt;print(num_incs_pt2)&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "subreddit_type": "public", "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn0mip2/", "num_reports":
        null, "locked": false, "name": "t1_hn0mip2", "created": 1638498756.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638498756.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 4, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hn0bm9e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        4, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "I went with the sliding window implementation from **python**''s
        more\\_itertools:\n\n[https://github.com/rbusquet/advent-of-code/blob/main/2021/01/day1.py](https://github.com/rbusquet/advent-of-code/blob/main/2021/01/day1.py)\n\nAfter
        reading a couple of implementations here, I wish I noticed that `a + b + c
        &lt; b + c + d` implies `a &lt; d` which makes a lot of solutions much simpler.
        Gotta try and turn on that math brain before the next puzzles!", "edited":
        false, "downs": 0, "author_flair_css_class": null, "collapsed": false, "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I went with the sliding
        window implementation from &lt;strong&gt;python&lt;/strong&gt;&amp;#39;s more_itertools:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/rbusquet/advent-of-code/blob/main/2021/01/day1.py\"&gt;https://github.com/rbusquet/advent-of-code/blob/main/2021/01/day1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;After
        reading a couple of implementations here, I wish I noticed that &lt;code&gt;a
        + b + c &amp;lt; b + c + d&lt;/code&gt; implies &lt;code&gt;a &amp;lt; d&lt;/code&gt;
        which makes a lot of solutions much simpler. Gotta try and turn on that math
        brain before the next puzzles!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn0bm9e/",
        "num_reports": null, "locked": false, "name": "t1_hn0bm9e", "created": 1638493948.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638493948.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn03pcx", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ozozzu", "can_mod_post": false, "created_utc":
        1638490344.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_3q353r5o", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Python 3. solution for 2nd part of 1st
        task.\n\n    \n    def compare_measurements(data):\n        subset = [sum(data[index:
        index + 3]) if len(data[index: index + 3]) == 3 else 0 for index in range(len(data))]\n        result
        = sum(\n                [1 for index in range(len(subset)) if len(subset)
        - 1  != index and subset[index] &lt; subset[index + 1]\n        ])\n        return
        result\n    \n    result = compare_measurements(converted)", "edited": 1638490790.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hn03pcx",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python 3. solution
        for 2nd part of 1st task.&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;def compare_measurements(data):\n    subset
        = [sum(data[index: index + 3]) if len(data[index: index + 3]) == 3 else 0
        for index in range(len(data))]\n    result = sum(\n            [1 for index
        in range(len(subset)) if len(subset) - 1  != index and subset[index] &amp;lt;
        subset[index + 1]\n    ])\n    return result\n\nresult = compare_measurements(converted)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn03pcx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638490344.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn01pgt", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "toastedstapler", "can_mod_post": false,
        "created_utc": 1638489445.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_ck238", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "# zig\n\nThis is version
        2.0, made some significant parsing improvements to get down to a whopping
        7us runtime on my 10850k\n\nhttps://github.com/jchevertonwynne/advent-of-code-2021/blob/bcc1485869323b8973c8bead4c9f3aa03d864b4b/src/days/day01.zig",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn01pgt", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;zig&lt;/h1&gt;\n\n&lt;p&gt;This
        is version 2.0, made some significant parsing improvements to get down to
        a whopping 7us runtime on my 10850k&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/jchevertonwynne/advent-of-code-2021/blob/bcc1485869323b8973c8bead4c9f3aa03d864b4b/src/days/day01.zig\"&gt;https://github.com/jchevertonwynne/advent-of-code-2021/blob/bcc1485869323b8973c8bead4c9f3aa03d864b4b/src/days/day01.zig&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn01pgt/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638489445.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 3, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hn2fy7a", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "gfldex", "can_mod_post": false, "created_utc":
        1638540090.0, "send_replies": true, "parent_id": "t1_hmzwbip", "score": 3,
        "author_fullname": "t2_sm64b", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "`&gt;&gt;.Int` is redundent
        because `&lt;` and thus `Z&lt;` coerces to `Real`.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hn2fy7a", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;.Int&lt;/code&gt;
        is redundent because &lt;code&gt;&amp;lt;&lt;/code&gt; and thus &lt;code&gt;Z&amp;lt;&lt;/code&gt;
        coerces to &lt;code&gt;Real&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn2fy7a/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638540090.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hmzwbip", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_r66vow", "score": 3, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": 1688189165.0, "downs": 0, "author_flair_css_class":
        null, "collapsed": true, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmzwbip/",
        "num_reports": null, "locked": false, "name": "t1_hmzwbip", "created": 1638487113.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638487113.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmzw2j5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "oantolin", "can_mod_post": false, "created_utc":
        1638487007.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_3fxjo", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "In Perl we don''t say `count`, we say `scalar
        grep` and I think that''s beautiful. :P\n\n    sub increases {my ($w,@x) =
        @_; scalar grep {$x[$_]&gt;$x[$_-$w]} ($w..$#x)}\n    my @depths = map(int,
        &lt;&gt;);\n    print increases(1,@depths), \" \", increases(3,@depths);",
        "edited": 1638488325.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hmzw2j5", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In
        Perl we don&amp;#39;t say &lt;code&gt;count&lt;/code&gt;, we say &lt;code&gt;scalar
        grep&lt;/code&gt; and I think that&amp;#39;s beautiful. :P&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sub
        increases {my ($w,@x) = @_; scalar grep {$x[$_]&amp;gt;$x[$_-$w]} ($w..$#x)}\nmy
        @depths = map(int, &amp;lt;&amp;gt;);\nprint increases(1,@depths), &amp;quot;
        &amp;quot;, increases(3,@depths);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmzw2j5/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638487007.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmzvzvs", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kaur_virunurm", "can_mod_post": false,
        "created_utc": 1638486974.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 3, "author_fullname": "t2_1uhvpnpf", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Python, 2021 day 1.\n\nThe
        first and second parts differ only in 2 characters - the difference of index
        that we need to compare the current element against.\nIn part-1, we compare
        against previous element, thus the index is -1.\nFor the sliding window it
        is the size of the window, ie -3. \n\n`data  = [int(x) for x in open(\"data\\\\01.txt\",
        \"r\")]`  \n`print(\"Part 1:\", sum([data[i] &gt; data[i-1] for i in range(1,
        len(data))]))`  \n`print(\"Part 2:\", sum([data[i] &gt; data[i-3] for i in
        range(3, len(data))]))`", "edited": 1638487204.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_hmzvzvs", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python, 2021 day 1.&lt;/p&gt;\n\n&lt;p&gt;The
        first and second parts differ only in 2 characters - the difference of index
        that we need to compare the current element against.\nIn part-1, we compare
        against previous element, thus the index is -1.\nFor the sliding window it
        is the size of the window, ie -3. &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;data  =
        [int(x) for x in open(&amp;quot;data\\\\01.txt&amp;quot;, &amp;quot;r&amp;quot;)]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;print(&amp;quot;Part
        1:&amp;quot;, sum([data[i] &amp;gt; data[i-1] for i in range(1, len(data))]))&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;print(&amp;quot;Part
        2:&amp;quot;, sum([data[i] &amp;gt; data[i-3] for i in range(3, len(data))]))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmzvzvs/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638486974.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmzh54m", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "JCarlesVilaseca", "can_mod_post": false,
        "created_utc": 1638481003.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_g554p", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Kotlin\n\n    fun
        part1(input: Iterable&lt;Int&gt;) =\n        input\n            .zip(input.drop(1))\n            .count
        { it.second &gt; it.first }\n    \n    fun part2(input: Iterable&lt;Int&gt;)
        =\n        part1(input\n            .zip(input\n                .drop(1))\n            .zip(input\n                .drop(2))\n            .map
        { it.first.first + it.first.second + it.second })", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hmzh54m", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun
        part1(input: Iterable&amp;lt;Int&amp;gt;) =\n    input\n        .zip(input.drop(1))\n        .count
        { it.second &amp;gt; it.first }\n\nfun part2(input: Iterable&amp;lt;Int&amp;gt;)
        =\n    part1(input\n        .zip(input\n            .drop(1))\n        .zip(input\n            .drop(2))\n        .map
        { it.first.first + it.first.second + it.second })\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmzh54m/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638481003.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "distinguished":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "distinguished": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hnhawle",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Baconrules21",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hnh4mfx", "score":
        1, "author_fullname": "t2_5spj7", "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Awesome! I learned what the map function does now. Thank you!",
        "edited": false, "gildings": {}, "downs": 0, "author_flair_css_class": null,
        "name": "t1_hnhawle", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Awesome!
        I learned what the map function does now. Thank you!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "link_id": "t3_r66vow",
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnhawle/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638810964.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638810964.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 5, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hnh4mfx", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "baer89", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_hngqg6n", "score": 1, "author_fullname": "t2_4a9mq",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Yeah it was a copy/paste error when I was refactoring part 1.
        It is:\n\nfor x in range(len(report)-1):\n\nsimilar to my part 2 code. Since
        I am using an x+1 in the loop I need to account for it with the -1 on the
        range or the loop will go out of bounds.", "edited": false, "author_flair_css_class":
        null, "name": "t1_hnh4mfx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah
        it was a copy/paste error when I was refactoring part 1. It is:&lt;/p&gt;\n\n&lt;p&gt;for
        x in range(len(report)-1):&lt;/p&gt;\n\n&lt;p&gt;similar to my part 2 code.
        Since I am using an x+1 in the loop I need to account for it with the -1 on
        the range or the loop will go out of bounds.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "link_id": "t3_r66vow", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": null, "treatment_tags":
        [], "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnh4mfx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638808498.0, "author_flair_text": null, "collapsed": false, "created_utc":
        1638808498.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hngqg6n", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Baconrules21", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_hngjpel", "score": 1, "author_fullname":
        "t2_5spj7", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "Yeah I feel like you need
        a range(len(x)+1))", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hngqg6n", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah
        I feel like you need a range(len(x)+1))&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hngqg6n/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638802635.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638802635.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hngjpel", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "baer89", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_hnfmzwk", "score": 1, "author_fullname": "t2_4a9mq",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "You know that might be a typo after I did formatting to paste
        here. It should probably be subtracted after the len function. I''ll check
        once I''m at my computer and let you know.", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_hngjpel", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You know that might
        be a typo after I did formatting to paste here. It should probably be subtracted
        after the len function. I&amp;#39;ll check once I&amp;#39;m at my computer
        and let you know.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_r66vow", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hngjpel/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1638799477.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1638799477.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hnfmzwk", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Baconrules21", "can_mod_post": false,
        "created_utc": 1638775617.0, "send_replies": true, "parent_id": "t1_hmzeaao",
        "score": 1, "author_fullname": "t2_5spj7", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "For part 1, how did
        you subtract -1 from the report? It keeps saying I can''t subtract an int
        from a list.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hnfmzwk", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For
        part 1, how did you subtract -1 from the report? It keeps saying I can&amp;#39;t
        subtract an int from a list.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_r66vow", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hnfmzwk/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1638775617.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "hmzeaao", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "baer89",
        "can_mod_post": false, "created_utc": 1638479929.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_4a9mq", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "**Python**\n\nKISS
        solution\n\nPart 1:\n\n    report_str = open(''report.txt'', ''r'').readlines()\n    report
        = list(map(int, report_str))\n    \n    count = 0\n    \n    for x in range(len(report)-1):\n        if
        report[x+1] &gt; report[x]:\n            count += 1\n    \n    print(count)\n\nPart
        2:\n\n    report_str = open(''report.txt'', ''r'').readlines()\n    report
        = list(map(int, report_str))\n    \n    count = 0\n    for x in range(len(report)-3):\n        if
        report[x+3] &gt; report[x]:\n            count += 1\n    \n    print(count)",
        "edited": 1638808394.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hmzeaao", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;KISS
        solution&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;report_str
        = open(&amp;#39;report.txt&amp;#39;, &amp;#39;r&amp;#39;).readlines()\nreport
        = list(map(int, report_str))\n\ncount = 0\n\nfor x in range(len(report)-1):\n    if
        report[x+1] &amp;gt; report[x]:\n        count += 1\n\nprint(count)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;report_str = open(&amp;#39;report.txt&amp;#39;,
        &amp;#39;r&amp;#39;).readlines()\nreport = list(map(int, report_str))\n\ncount
        = 0\nfor x in range(len(report)-3):\n    if report[x+3] &amp;gt; report[x]:\n        count
        += 1\n\nprint(count)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmzeaao/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638479929.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmzmqzb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638483176.0, "send_replies": true,
        "parent_id": "t1_hmze0jt", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1638508508.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hmzmqzb", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your code is hard
        to read on old.reddit.  Please edit it as per our posting guidelines in the
        wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmzmqzb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638483176.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hmze0jt", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "French__Canadian", "can_mod_post": false,
        "created_utc": 1638479825.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_kst0k", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Q solution. The sliding
        window is actually in a util file i wrote last year\n\n    / Sliding window
        function\n    / f is the function to apply on the window\n    / s is the size
        of the window\n    / z is the list on which we are sliding a window\n    sw:{[f;s;z]
        i:til (count z)-s-1; f each z i +\\:til s}\n\n    / part 1\n    (+/) 1_ (&gt;'':)
        \"I\" $ read0 `:input_1.txt\n    / part 2\n    (+/) 1_ (&gt;'':) sw[(+/);3;]
        \"I\" $ read0 `:input_1_2.txt", "edited": 1638490350.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hmze0jt", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Q solution. The sliding window
        is actually in a util file i wrote last year&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/
        Sliding window function\n/ f is the function to apply on the window\n/ s is
        the size of the window\n/ z is the list on which we are sliding a window\nsw:{[f;s;z]
        i:til (count z)-s-1; f each z i +\\:til s}\n\n/ part 1\n(+/) 1_ (&amp;gt;&amp;#39;:)
        &amp;quot;I&amp;quot; $ read0 `:input_1.txt\n/ part 2\n(+/) 1_ (&amp;gt;&amp;#39;:)
        sw[(+/);3;] &amp;quot;I&amp;quot; $ read0 `:input_1_2.txt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmze0jt/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638479825.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmzcc6f", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "AOC_2020", "can_mod_post": false, "created_utc":
        1638479191.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_6akyrpko", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "// KOTLIN  \n\n\n    fun day1() {\n    val
        input = File(\"in1.txt\").readLines().map { it.toInt() }\n\n    var res1 =
        0\n    input\n        .reduce { a, b -&gt; if (b &gt; a) res1++; b }\n        .also
        { println(\"sol1: $res1\") }\n\n    var res2 = 0\n    input.windowed(3, 1)\n        .map
        { it.sum() }\n        .reduce { a, b -&gt; if (b &gt; a) res2++; b }\n        .also
        { println(\"sol2: $res2\") }\n}", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_hmzcc6f", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;// KOTLIN  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun
        day1() {\nval input = File(&amp;quot;in1.txt&amp;quot;).readLines().map {
        it.toInt() }\n\nvar res1 = 0\ninput\n    .reduce { a, b -&amp;gt; if (b &amp;gt;
        a) res1++; b }\n    .also { println(&amp;quot;sol1: $res1&amp;quot;) }\n\nvar
        res2 = 0\ninput.windowed(3, 1)\n    .map { it.sum() }\n    .reduce { a, b
        -&amp;gt; if (b &amp;gt; a) res2++; b }\n    .also { println(&amp;quot;sol2:
        $res2&amp;quot;) }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmzcc6f/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638479191.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmz6csh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Bellanzz", "can_mod_post": false, "created_utc":
        1638476958.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_13ov1be9", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "C++ templates (problem solved at compile
        time) Part 1/2 (depending on the presence of FIRST)\n\n    #include &lt;cstdio&gt;\n    \n    #ifdef
        FIRST\n    template&lt;size_t acc, size_t a&gt; \n    #else\n    template&lt;size_t
        acc, size_t a, size_t b, size_t c&gt; \n    #endif\n    size_t depth() {  return
        acc;}\n    \n    #ifdef FIRST\n    template&lt;size_t acc, size_t a, size_t
        b, size_t ... args&gt;\n    #else\n    template&lt;size_t acc, size_t a, size_t
        b, size_t c, size_t d, size_t ... args&gt;\n    #endif\n    size_t depth()
        {\n    #ifdef FIRST\n      return depth&lt;acc + (b &gt; a), b, args...&gt;();\n    #else  \n      return
        depth&lt;acc + (d &gt; a), b, c, d, args...&gt;();\n    #endif\n    };\n    \n    int
        main() {  \n        printf(\"%zu\\n\", depth&lt;0,\n    #include \"input\"      \n        &gt;());  \n    return
        0;}\n\n&amp;#x200B;\n\nUnfortunately I needed to change slightly the input
        adding commas. See  [https://github.com/bellaz89/lolAOC](https://github.com/bellaz89/lolAOC)",
        "edited": 1638477222.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hmz6csh", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++
        templates (problem solved at compile time) Part 1/2 (depending on the presence
        of FIRST)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;cstdio&amp;gt;\n\n#ifdef
        FIRST\ntemplate&amp;lt;size_t acc, size_t a&amp;gt; \n#else\ntemplate&amp;lt;size_t
        acc, size_t a, size_t b, size_t c&amp;gt; \n#endif\nsize_t depth() {  return
        acc;}\n\n#ifdef FIRST\ntemplate&amp;lt;size_t acc, size_t a, size_t b, size_t
        ... args&amp;gt;\n#else\ntemplate&amp;lt;size_t acc, size_t a, size_t b, size_t
        c, size_t d, size_t ... args&amp;gt;\n#endif\nsize_t depth() {\n#ifdef FIRST\n  return
        depth&amp;lt;acc + (b &amp;gt; a), b, args...&amp;gt;();\n#else  \n  return
        depth&amp;lt;acc + (d &amp;gt; a), b, c, d, args...&amp;gt;();\n#endif\n};\n\nint
        main() {  \n    printf(&amp;quot;%zu\\n&amp;quot;, depth&amp;lt;0,\n#include
        &amp;quot;input&amp;quot;      \n    &amp;gt;());  \nreturn 0;}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Unfortunately
        I needed to change slightly the input adding commas. See  &lt;a href=\"https://github.com/bellaz89/lolAOC\"&gt;https://github.com/bellaz89/lolAOC&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmz6csh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638476958.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hn3gn2m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LadaOndris",
        "can_mod_post": false, "created_utc": 1638555191.0, "send_replies": true,
        "parent_id": "t1_hmz3ei7", "score": 2, "author_fullname": "t2_30blv432", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Nice and brief solution. I used NumPy as well. Check it out  \nhttps://github.com/LadaOndris/advent-of-code-2021/blob/main/days/day\\_01/day.py",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hn3gn2m", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice
        and brief solution. I used NumPy as well. Check it out&lt;br/&gt;\n&lt;a href=\"https://github.com/LadaOndris/advent-of-code-2021/blob/main/days/day%5C_01/day.py\"&gt;https://github.com/LadaOndris/advent-of-code-2021/blob/main/days/day\\_01/day.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn3gn2m/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638555191.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hmz3ei7", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "e4ds", "can_mod_post": false, "created_utc":
        1638475823.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 1,
        "author_fullname": "t2_empiv8dh", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python [day 1 solution (GitHub)](https://github.com/julian-west/adventofcode/blob/master/2021/day_01/d1_solution.py).
        Using Numpy''s convolve function for sliding window calculation", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hmz3ei7",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python &lt;a href=\"https://github.com/julian-west/adventofcode/blob/master/2021/day_01/d1_solution.py\"&gt;day
        1 solution (GitHub)&lt;/a&gt;. Using Numpy&amp;#39;s convolve function for
        sliding window calculation&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmz3ei7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638475823.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hquu30n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "brushbox",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hqtops0", "score":
        1, "author_fullname": "t2_lmhs", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "C may be complicated but it
        is worth learning for many reasons. Not least is that many other languages
        are implemented in C (including Ruby). It helps you appreciate the work that
        has been put in to make your favourite language so pleasant to use. \n\nGood
        luck in college!", "edited": false, "top_awarded_type": null, "downs": 0,
        "author_flair_css_class": null, "name": "t1_hquu30n", "is_submitter": false,
        "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C may be complicated but it
        is worth learning for many reasons. Not least is that many other languages
        are implemented in C (including Ruby). It helps you appreciate the work that
        has been put in to make your favourite language so pleasant to use. &lt;/p&gt;\n\n&lt;p&gt;Good
        luck in college!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_r66vow", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hquu30n/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1641074424.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1641074424.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hqtops0", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "waitingformsfs2020", "can_mod_post": false,
        "created_utc": 1641057406.0, "send_replies": true, "parent_id": "t1_hmyyybi",
        "score": 2, "author_fullname": "t2_4tm4q04t", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "I was learning ruby
        and now I will start college so i gotta learn C. I hate how complicated C
        is.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hqtops0", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        was learning ruby and now I will start college so i gotta learn C. I hate
        how complicated C is.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_r66vow", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hqtops0/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1641057406.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hoswr4d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "zloth",
        "can_mod_post": false, "created_utc": 1639675034.0, "send_replies": true,
        "parent_id": "t1_hmyyybi", "score": 2, "author_fullname": "t2_dd6ci", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "copy/paste typo perhaps?\n\n    select { |a, b| a &lt; b }", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_hoswr4d",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;copy/paste typo perhaps?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;select
        { |a, b| a &amp;lt; b }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_r66vow", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hoswr4d/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1639675034.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmz6k5d", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1638477033.0, "send_replies": true, "parent_id": "t1_hmyyybi",
        "score": 2, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "FYI: this post is fine
        for now without any formatting since your code is one-liners, but for the
        future, your code is hard to read on both old.reddit and new.reddit.  Next
        time format your code as per our posting guidelines in the wiki: [How do I
        format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_hmz6k5d", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FYI:
        this post is fine for now without any formatting since your code is one-liners,
        but for the future, your code is hard to read on both old.reddit and new.reddit.  Next
        time format your code as per our posting guidelines in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmz6k5d/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638477033.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hmyyybi", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "brushbox", "can_mod_post": false, "created_utc":
        1638474063.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 4,
        "author_fullname": "t2_lmhs", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Ruby\n\ninput = File.read(\u201cinput.txt\u201d).split(\u201c\\n\u201d).map(&amp;:to_i)\n\n#
        pt 1\ninput.each_cons(2).select { |a,b| a &lt; b }.count\n# pt 2\ninput.each_cons(3).map(&amp;:sum).each_cons(2).select
        { |a,b| a &lt; b }.count", "edited": 1641074193.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_hmyyybi", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Ruby&lt;/h1&gt;\n\n&lt;p&gt;input = File.read(\u201cinput.txt\u201d).split(\u201c\\n\u201d).map(&amp;amp;:to_i)&lt;/p&gt;\n\n&lt;h1&gt;pt
        1&lt;/h1&gt;\n\n&lt;p&gt;input.each_cons(2).select { |a,b| a &amp;lt; b }.count&lt;/p&gt;\n\n&lt;h1&gt;pt
        2&lt;/h1&gt;\n\n&lt;p&gt;input.each_cons(3).map(&amp;amp;:sum).each_cons(2).select
        { |a,b| a &amp;lt; b }.count&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyyybi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638474063.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 4}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmyw9z5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "prafster", "can_mod_post": false, "created_utc":
        1638473030.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_drdf4", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "## Julia\n\nI''ve never written a line of
        code in Julia or read anything about it. I''m, therefore, learning as each
        day''s puzzle is revealed and I attempt it. Day 1 code looks generically procedural
        but this will hopefully become more idiomatic.\n\n### Part 1\n    \n    function
        part1(input)\n      prev = Inf\n      result = 0\n      for i in input\n        if
        i &gt; prev\n          result += 1\n        end\n        prev = i\n      end\n    \n      result\n    end\n\n###
        Part 2\n    \n    # Return array for sum of elements in sliding window \n    function
        part2(input, window_size)\n      result = []\n      # input_size = size(input,1)  \n      input_size
        = length(input)\n      for i in eachindex(input)\n        if i + 2 &lt;= input_size\n          push!(result,
        sum(input[i:i+window_size-1]))\n        end\n      end\n      result\n    end\n\n    function
        main()\n      main_input = readdlm(\"../data/day01.txt\", Int)\n      test_input
        = readdlm(\"../data/day01-test.txt\", Int)\n    \n      @assert part1(test_input)
        == 7 \"01 test part 1\"\n      @assert part1(part2(test_input, 3)) == 5 \"01
        test part 2\"\n    \n      @show part1(main_input)\n      @show part1(part2(main_input,
        3))\n    \n    end\n    \n    main()", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hmyw9z5", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Julia&lt;/h2&gt;\n\n&lt;p&gt;I&amp;#39;ve
        never written a line of code in Julia or read anything about it. I&amp;#39;m,
        therefore, learning as each day&amp;#39;s puzzle is revealed and I attempt
        it. Day 1 code looks generically procedural but this will hopefully become
        more idiomatic.&lt;/p&gt;\n\n&lt;h3&gt;Part 1&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        part1(input)\n  prev = Inf\n  result = 0\n  for i in input\n    if i &amp;gt;
        prev\n      result += 1\n    end\n    prev = i\n  end\n\n  result\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Part
        2&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;# Return array for sum of elements
        in sliding window \nfunction part2(input, window_size)\n  result = []\n  #
        input_size = size(input,1)  \n  input_size = length(input)\n  for i in eachindex(input)\n    if
        i + 2 &amp;lt;= input_size\n      push!(result, sum(input[i:i+window_size-1]))\n    end\n  end\n  result\nend\n\nfunction
        main()\n  main_input = readdlm(&amp;quot;../data/day01.txt&amp;quot;, Int)\n  test_input
        = readdlm(&amp;quot;../data/day01-test.txt&amp;quot;, Int)\n\n  @assert part1(test_input)
        == 7 &amp;quot;01 test part 1&amp;quot;\n  @assert part1(part2(test_input,
        3)) == 5 &amp;quot;01 test part 2&amp;quot;\n\n  @show part1(main_input)\n  @show
        part1(part2(main_input, 3))\n\nend\n\nmain()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyw9z5/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638473030.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmz6mdv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638477057.0, "send_replies": true,
        "parent_id": "t1_hmyru4o", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1638483210.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hmz6mdv", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your code is hard
        to read on old.reddit.  Please edit it as per our posting guidelines in the
        wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_r66vow",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmz6mdv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638477057.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "hmyru4o", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "professoreyl", "can_mod_post": false,
        "created_utc": 1638471318.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 1, "author_fullname": "t2_dzucz4v2", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "## Python part 1 (one-liner)\n\n    print((lambda
        d: sum(1 for i in range(len(d)-1) if int(d[i]) &lt; int(d[i+1])))(open(\"input.txt\",
        \"r\").readlines()))\n\n## Python part 2 (one-liner)\n\n    print((lambda
        x: sum(1 for i in range(len(x)-2) if sum(map(int, x[i:i+3])) &lt; sum(map(int,
        x[i+1:i+4]))))(open(\"input.txt\", \"r\").readlines()))\n\nReadable solutions
        on my GitHub:\n\nhttps://github.com/DenverCoder1/Advent-of-Code-2021/tree/main/Day-01",
        "edited": 1638481129.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hmyru4o", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Python
        part 1 (one-liner)&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;print((lambda d: sum(1
        for i in range(len(d)-1) if int(d[i]) &amp;lt; int(d[i+1])))(open(&amp;quot;input.txt&amp;quot;,
        &amp;quot;r&amp;quot;).readlines()))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Python
        part 2 (one-liner)&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;print((lambda x: sum(1
        for i in range(len(x)-2) if sum(map(int, x[i:i+3])) &amp;lt; sum(map(int,
        x[i+1:i+4]))))(open(&amp;quot;input.txt&amp;quot;, &amp;quot;r&amp;quot;).readlines()))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Readable
        solutions on my GitHub:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/DenverCoder1/Advent-of-Code-2021/tree/main/Day-01\"&gt;https://github.com/DenverCoder1/Advent-of-Code-2021/tree/main/Day-01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyru4o/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638471318.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmylktx", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "retro__grade", "can_mod_post": false,
        "created_utc": 1638468914.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_gh4lk", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**Ruby (part 1):**\n\n    require
        ''csv''\n    \n    INPUT = CSV.read(''input.csv'').flatten.map(&amp;:to_i).freeze\n    \n    def
        find_depth\n        result = 0\n        INPUT.each_with_index do |item, index|\n            break
        if INPUT[index + 1].nil?\n        \n            result += 1 if item &lt; INPUT[index
        + 1]\n        end\n        result\n    end", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hmylktx", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Ruby (part 1):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require
        &amp;#39;csv&amp;#39;\n\nINPUT = CSV.read(&amp;#39;input.csv&amp;#39;).flatten.map(&amp;amp;:to_i).freeze\n\ndef
        find_depth\n    result = 0\n    INPUT.each_with_index do |item, index|\n        break
        if INPUT[index + 1].nil?\n\n        result += 1 if item &amp;lt; INPUT[index
        + 1]\n    end\n    result\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmylktx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638468914.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmyhvdj", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "EIykris", "can_mod_post": false, "created_utc":
        1638467487.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_36orlndc", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# [TypeScript](https://topaz.github.io/paste/#XQAAAQCTAQAAAAAAAAAxm8oZxjYXrgD1OsUYoTN8afMCASsMa8FKiBrBxbhuxcIcxOrQx/hp/VJmvnhJP2D5YXBw5FD7zs4/IAPAxuPvU4Yny5CBID0yROtrmJ0d67jiRq56Nkf/4FUAsJdQVIBo06hAO5T7FRHd0AgnFrtJKMtRVe2V8fPelGdHLAfRlZVTVfx3ABrJP/gi8to0y6ofR1QCu4JD3e5xe1AojV1EUeFTdQqhm9DlbnhBFG0IU7CEPaiGlnfQ5xMn0TQcDyseg328JjGjv3Eqn8PsU53YQ2rHWuVY4EOPbTSkvutg8H+4r42CjV1TaYp/1XJt0YuXyAKFyPyAv3Zf7F6AKfQKMVhztbA6PdT/3JddNQ==)\n\nKeywords
        for those searching: node, javascript, js, ts", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_hmyhvdj", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCTAQAAAAAAAAAxm8oZxjYXrgD1OsUYoTN8afMCASsMa8FKiBrBxbhuxcIcxOrQx/hp/VJmvnhJP2D5YXBw5FD7zs4/IAPAxuPvU4Yny5CBID0yROtrmJ0d67jiRq56Nkf/4FUAsJdQVIBo06hAO5T7FRHd0AgnFrtJKMtRVe2V8fPelGdHLAfRlZVTVfx3ABrJP/gi8to0y6ofR1QCu4JD3e5xe1AojV1EUeFTdQqhm9DlbnhBFG0IU7CEPaiGlnfQ5xMn0TQcDyseg328JjGjv3Eqn8PsU53YQ2rHWuVY4EOPbTSkvutg8H+4r42CjV1TaYp/1XJt0YuXyAKFyPyAv3Zf7F6AKfQKMVhztbA6PdT/3JddNQ==\"&gt;TypeScript&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;Keywords
        for those searching: node, javascript, js, ts&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyhvdj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638467487.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmyhp5i", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TheAfterPipe", "can_mod_post": false,
        "created_utc": 1638467423.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_3nzp1", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "# C# Part 1 &amp;
        Part 2:\n\n    private void PartOne()\n    {\n        var input = File.ReadAllLines(@\"./input.txt\")\n            .Select(int.Parse)\n            .ToList();\n    \n        var
        numberOfTimesDepthIncreases = CalculateDepthIncreases(input);\n    \n        Console.WriteLine(numberOfTimesDepthIncreases);\n    }\n    \n    private
        void PartTwo()\n    {\n        var input = File.ReadAllLines(@\"./input.txt\")\n        .Select(int.Parse)\n        .ToList();\n    \n        var
        slidingMeasurement = new List&lt;int&gt;();\n    \n        int iterator =
        0;\n        while(iterator &lt; input.Count - 2)\n        {\n            var
        m = input.GetRange(iterator,3).Sum();\n            slidingMeasurement.Add(m);\n            iterator++;\n        }\n    \n        var
        numberOfTimesDepthIncreases = CalculateDepthIncreases(slidingMeasurement);\n    \n        Console.WriteLine(numberOfTimesDepthIncreases);\n    }\n    \n    private
        int CalculateDepthIncreases(List&lt;int&gt; input)\r\n    {\r\n        int
        numberOfDepthIncreases = 0;\r\n        int i = 1;\r\n        while (i &lt;
        input.Count())\r\n        {\n                if (input[i] &gt; input[i - 1])\r\n            {\r\n                numberOfDepthIncreases++;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        return
        numberOfDepthIncreases;\r\n    }\n\nThought process:\n\nI discovered that
        part 2 could be solved just like part one as long as I formatted the information
        accordingly.", "edited": 1638467947.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_hmyhp5i", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C#
        Part 1 &amp;amp; Part 2:&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;private void
        PartOne()\n{\n    var input = File.ReadAllLines(@&amp;quot;./input.txt&amp;quot;)\n        .Select(int.Parse)\n        .ToList();\n\n    var
        numberOfTimesDepthIncreases = CalculateDepthIncreases(input);\n\n    Console.WriteLine(numberOfTimesDepthIncreases);\n}\n\nprivate
        void PartTwo()\n{\n    var input = File.ReadAllLines(@&amp;quot;./input.txt&amp;quot;)\n    .Select(int.Parse)\n    .ToList();\n\n    var
        slidingMeasurement = new List&amp;lt;int&amp;gt;();\n\n    int iterator =
        0;\n    while(iterator &amp;lt; input.Count - 2)\n    {\n        var m = input.GetRange(iterator,3).Sum();\n        slidingMeasurement.Add(m);\n        iterator++;\n    }\n\n    var
        numberOfTimesDepthIncreases = CalculateDepthIncreases(slidingMeasurement);\n\n    Console.WriteLine(numberOfTimesDepthIncreases);\n}\n\nprivate
        int CalculateDepthIncreases(List&amp;lt;int&amp;gt; input)\n{\n    int numberOfDepthIncreases
        = 0;\n    int i = 1;\n    while (i &amp;lt; input.Count())\n    {\n            if
        (input[i] &amp;gt; input[i - 1])\n        {\n            numberOfDepthIncreases++;\n        }\n        i++;\n    }\n\n    return
        numberOfDepthIncreases;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Thought
        process:&lt;/p&gt;\n\n&lt;p&gt;I discovered that part 2 could be solved just
        like part one as long as I formatted the information accordingly.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyhp5i/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1638467423.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "more",
        "data": {"count": 1868, "name": "t1_hmygsqt", "id": "hmygsqt", "parent_id":
        "t3_r66vow", "depth": 0, "children": ["hmygsqt", "hmyfdr9", "hmyb5l7", "hmy9wj9",
        "hmyb7om", "hmy8v67", "hmy32s1", "hmy98ot", "hmy9ke6", "hmxsojx", "hmx8h5l",
        "hmxgs6y", "hmxm0oa", "hmy215d", "hmxeos6", "hmwx4lt", "hmy90co", "hmxzdlr",
        "hmy5y2j", "hmx9ay3", "hmxoenc", "hmwkskt", "hmwtvis", "hmwb2ra", "hmx4u0j",
        "hmwegvt", "hmxf61e", "hmwwi7l", "hmxrx3s", "hmwtwoc", "hmwg4mh", "hmvg97r",
        "hmwnrhk", "hmxa298", "hmy3con", "hmx7741", "hmxdpt3", "hmwxwzb", "hmwtvl7",
        "hmw3zoj", "hmw8zxm", "hmxn3xv", "hmxer2i", "hmv7xhs", "hmva7zl", "hmwq120",
        "hmvy97q", "hmuzllx", "hmw42an", "hmx2aj6", "hmx4oh4", "hmw21oo", "hmvzpzx",
        "hmx74kk", "hmx7ocb", "hmwgxfw", "hmvwtzm", "hmxa4gk", "hmvr6mx", "hmvszqc",
        "hmwn65l", "hmuvxcd", "hmvmcfk", "hmv7e6n", "hmu2a1h", "hmwgacu", "hmvwuer",
        "hmwdb3a", "hmvg4o4", "hmui302", "hmwfe3o", "hmwpkjo", "hmuwsn3", "hmwxxf7",
        "hmwkw6o", "hmweook", "hmv8bqt", "hmvttxb", "hmvd5ko", "hmve44r", "hmveoia",
        "hmuxks0", "hmuvznj", "hmw4ek2", "hmvewiq", "hmw9ssu", "hmugx2v", "hmuuxtj",
        "hmurfdk", "hmuxot7", "hmtpagm", "hmwl2ds", "hmvianz", "hmv10v7", "hmv06au",
        "hmuyqf6", "hmuxfuh", "hmvvm80", "hmvu8v1", "hmv395f", "hmwu69l", "hmvffrj",
        "hmwtk1w", "hmupwiu", "hmu09qs", "hmvxl2c", "hmv9qtx", "hmwqv7g", "hmw3f07",
        "hmw1jxb", "hmvaoz0", "hmvoa64", "hmvao30", "hmvn98k", "hmtlvmj", "hmwzc9n",
        "hmvcobg", "hmvp1xr", "hmtteup", "hmvj1t2", "hmukpkv", "hmubq5y", "hmufugf",
        "hmuaadx", "hmu6yri", "hmsd95d", "hmvice0", "hmuuqt2", "hmt02z0", "hmtytou",
        "hmu0uax", "hmuwc2v", "hmut6fx", "hmukph5", "hmtouj5", "hmunovu", "hmw3kbw",
        "hmtnvwp", "hmv8xhi", "hmuc20z", "hmu47y6", "hmvbdu3", "hmurivu", "hmtast6",
        "hmua3c5", "hmtlqdt", "hmuudfb", "hmuwikk", "hmsnmhw", "hmvam9r", "hmv6c3a",
        "hmvwd6n", "hms8odm", "hmur5jh", "hmumga1", "hmupqo9", "hmufl06", "hmu4zel",
        "hmty5rx", "hmv23t1", "hmv9p9p", "hmsszew", "hms98ik", "hmua6gz", "hmuoxly",
        "hmsx4gc", "hmu7lg6", "hmvqsha", "hmvq4sq", "hmuj8f3", "hmvcr0w", "hmvdgju",
        "hmv3vpe", "hmtl4l8", "hmu4r0v", "hmt500x", "hmu6oh6", "hmtwve0", "hmtx4jg",
        "hmuc4p0", "hmtvgc7", "hmti8v3", "hmsit0y", "hmuz7ba", "hmwc3gl", "hmusj18",
        "hmuy2yb", "hmu297u", "hmukafq", "hmuy7px", "hmutxld", "hmu51yq", "hmupha0",
        "hmu2d91", "hmtpt3b", "hmvnyic", "hmvlosw", "hmvqe6x", "hmuvltl", "hmum5va",
        "hmurtrn", "hmvae71", "hmwk3gr", "hmta3ce", "hmuszg8", "hmsogj4", "hmvjdt8",
        "hmugkix", "hmuox3j", "hmtml6b", "hmtp273", "hmteqky", "hmuu15c", "hmuu8ya",
        "hmunt9t", "hmvqboh", "hmvo3y7", "hmvkvm6", "hmssbuw", "hmu9yeq", "hmuvaeh",
        "hmunpx2", "hmtxaje", "hmubyyr", "hmvhiw7", "hmur5u6", "hmswfp5", "hmuobbx",
        "hmtqk3y", "hmsrgeu", "hmt9f7j", "hmvpp3m", "hmuu0nz", "hmul0m8", "hmtxmw2",
        "hmupvsh", "hmtypln", "hmsxt6e", "hmskbs6", "hmu7i0g", "hmtbcpy", "hmsvdty",
        "hmtw0cl", "hmubcb8", "hmtfl5k", "hmt1dsj", "hmt2d0z", "hms4xe2", "hmt8nh7",
        "hms5q48", "hmsxnbq", "hms0fy5", "hmrzmu2", "hmthspq", "hmt2jgt", "hms9kem",
        "hmuatyn", "hms9kby", "hmsk25x", "hmtcewm", "hms3qv5", "hms24ql", "hmrzb95",
        "hmtnoc6", "hmusk2z", "hmsobf4", "hmtbaw0", "hmujjqf", "hmt57a0", "hmt74ro",
        "hmst5oy", "hms71zn", "hmu7mkh", "hmunk6r", "hmvyzz7", "hmru0e5", "hmriaqg",
        "hmrpoa6", "hmuijjn", "hmsy5hk", "hmu9qut", "hmtfdrf", "hmtiwbk", "hmsjmk5",
        "hmuqjav", "hmtdkt1", "hmsxhd5", "hmsndmx", "hmsmzua", "hmsrqka", "hmtimr9",
        "hms6ztr", "hmsniaj", "hmsjke6", "hmt0fwv", "hmtn3k2", "hmu41kj", "hms49hp",
        "hmsea34", "hmtjo2f", "hmsa6ey", "hmshy76", "hmuemam", "hmtyhqw", "hmvh953",
        "hms2oje", "hms4w5y", "hmud1xk", "hmsipx1", "hms8upn", "hmtfxz8", "hmsaolj",
        "hmt2qvg", "hms4ren", "hmssm7i", "hmt5mu9", "hmtqtlx", "hmstdu1", "hms3wv7",
        "hmux6rf", "hmtose6", "hmu3smg", "hmuxrtd", "hmrzrtr", "hmsdp0m", "hms2v2z",
        "hms50ta", "hmsebbs", "hmsrw4q", "hms3ugv", "hmu2pgh", "hms028u", "hmroz64",
        "hms1fac", "hmu172l", "hmvjxdh", "hmu2ehy", "hms8pj4", "hmvd82d", "hmtf0lj",
        "hmt0sca", "hmtou21", "hmvcmtf", "hmtn5cf", "hmvd24s", "hmuz3su", "hmryepf",
        "hmsa8oc", "hms1l6z", "hms664r", "hmtj1jx", "hmsu2jc", "hmsic35", "hmte69a",
        "hmssgwx", "hmtb5yc", "hmsi1lb", "hmsa0hn", "hmtith2", "hmtvl66", "hmtzrre",
        "hmtnako", "hmru1tr", "hmrgb09", "hmtd9xp", "hmrtqlt", "hms2tdh", "hmrr8s5",
        "hms0zky", "hmtqurm", "hmu0i98", "hmul1w0", "hmuhh4i", "hmum4io", "hmtsxep",
        "hmrknr4", "hmtomhu", "hmubzlt", "hmsumbu", "hms5s4x", "hmsduyy", "hmtckwf",
        "hmtublx", "hmsrb47", "hmu51kx", "hmt7kjf", "hmul9ls", "hmrxcqk", "hmriplw",
        "hms0q3g", "hmt0d6b", "hmrr3my", "hmucq9b", "hmulg4v", "hmtitr8", "hmskgka",
        "hms93us", "hmrtiig", "hmuc4hm", "hmtixd5", "hmtucrc", "hmskvpo", "hmupg0c",
        "hmsrg41", "hmtqwyn", "hmrzgee", "hmuwdqz", "hmt8pge", "hms5nfl", "hmuf6r8",
        "hms97z3", "hms9w78", "hms8zqs", "hmubyyn", "hmrl92g", "hmtb264", "hmru14y",
        "hmtrv9z", "hmtvyoj", "hmrg1kh", "hmsqpii", "hmrs30t", "hmrorf8", "hmt0ynh",
        "hmshy8w", "hmu337d", "hmsioan", "hmsuu75", "hmsnuj3", "hmsnu8g", "hmrtomh",
        "hmv1ch7", "hmts3v2", "hmv3f9l", "hms52ki", "hmul83d", "hmup3ay", "hms968d",
        "hmsm130", "hmt27ga", "hmt7cec", "hmtkx5u", "hmuqc8p", "hmrydbs", "hmrsigj",
        "hmt833f", "hmsd2vf", "hmu7g9d", "hmsr7zw", "hmu2gx2", "hmsc6zx", "hmu5438",
        "hmtnk5b", "hmso78b", "hmsvo2v", "hmsbmj1", "hmtpdh1", "hmtil9k", "hmto2mk",
        "hmskfds", "hmrq8km", "hmrssht", "hmrf92d", "hmtpgu7", "hmsthqs", "hmttnxq",
        "hmu4ns7", "hmtw3nw", "hmrhzrx", "hmsqalo", "hmt42bv", "hmrnh5o", "hmrj5t0",
        "hmsw7qt", "hmrf0j6", "hmsf2pc", "hmrz22v", "hmsezp2", "hmrkn0z", "hmrf0gg",
        "hmrt4yg", "hmsacv9", "hmsst3c", "hmrlffy", "hmss6je", "hmrtaig", "hmsr243",
        "hms9qyu", "hmt3c9q", "hmsuxfj", "hms7gau", "hmrkjxn", "hmrsif1", "hmrg6cr",
        "hmrgey5", "hmreik6", "hmrr4l8", "hmrz2jn", "hmrtk7y", "hmrhfrf", "hmrz40u",
        "hmro017", "hmrim4f", "hmrino9", "hmrnshk", "hmrhr14", "hmrhogs", "hmt7ejw",
        "hmrhr75", "hmrel6r", "hmrgg40", "hmrf9ck", "hmrg937", "hmrfsy6", "hmt4tjc",
        "hmren52", "hmrio89", "hmrs7po", "hms4fkz", "hmrjghk", "hmt7y0e", "hmryh40",
        "hmrynpr", "hmrzl7z", "hmrfr8r", "hmrkcyf", "hmrfwhi", "hmrf05u", "hmrg57r",
        "hmrhqsr", "hmrjd7f", "hmrins1", "hmrfsij", "hmrzzi1", "hmsr2hm", "hmsku8e",
        "hmrrjzi", "hms5nl3", "hmsf8k8", "hms21cb", "hmrfuqk", "hmry7u5", "hmrl33k",
        "hmrrmwr", "hmrxatx", "hms0ovt", "hmu2rw9", "hmtwtbw", "hmshxa7", "hmrfld2",
        "hmujlag", "hmrgk3j", "hmrgytd", "hmrhgz4", "hmrgwdu", "hmrf4te", "hmrm9ku",
        "hmu9x7q", "hmtkjc8", "hms8dah", "hmsr3as", "hmsr9et", "hmrwqat", "hmrevxl",
        "hmrr3w3", "hms0uxp", "hms6rw6", "hmrkw73", "hms9me8", "hms9zdc", "hmrjagu",
        "hmrx7fx", "hms277r", "hmrk31c", "hmrmjt8", "hmrggq3", "hms0wwq", "hmrjdhg",
        "hmreqc4", "hmspmzw", "hmroyew", "hmsgmlt", "hms51e4", "hms2udb", "hmrfro5",
        "hmrl3xc", "hmrortj", "hms4ewo", "hms8eou", "hmrey3a", "hms2it8", "hmrjmin",
        "hmrhfgj", "hmsngjc", "hmsskap", "hmrfj4u", "hmrzld2", "hmrh1r4", "hmrhcqc",
        "hmrfpkd", "hms6jxx", "hms8x51", "hmrf59h", "hmrknkg", "hmrs1dg", "hmshtm9",
        "hmrlidz", "hmreo55", "hmtl0p6", "hmrregn", "hmrxsyi", "hmrn5eh", "hmrushh",
        "hmrua63", "hmrfk32", "hmrep8d", "hmscvvl", "hmrj3nn", "hms2ee2", "hmrupqc",
        "hms8ikj", "hmrl64f", "hmru1rn", "hmrjfyf", "hmrs8pi", "hmss2k9", "hms3twz",
        "hmrjh38", "hms009r", "hmrn3rv", "hmrf5mi", "hmrpq3k", "hmrz6ix", "hms1j6d",
        "hmt84zy", "hmrtnc5", "hms4gwi", "hmrf5u4", "hmrzaih", "hmrgty5", "hmt4xjf",
        "hmrj5v8", "hmsr79d", "hmrj6qy", "hmszj1n", "hms2fe6", "hmrxlvv", "hmrhicm",
        "hmripy5", "hmrt2sw", "hms3lqj", "hmrkm9v", "hmrhfv0", "hmrh9y9", "hmrhdgc",
        "hmrlcda", "hmroxl9", "hmrgdm4", "hmro9sd", "hmrgtwj", "hmretnt", "hmrfa3v",
        "hmsatqd", "hmrgg3c", "hmrkb7z", "hmrf2g0", "hmrfhj6", "hmrfuew", "hmrfv48",
        "hmrguh8", "hmsem50", "hmrrbe6", "hms92lp", "hmrwtvs", "hms04pa", "hms2u4s",
        "hms3qzs", "hmtn1lr", "hmsvx7j", "hmslw5f", "hms9dfn", "hmswer6", "hmsnokd",
        "hmsbm15", "hmrkats", "hmruc2k", "hmrf4pv", "hmrgfud", "hmrgv1n", "hms8x4k",
        "hmswb9a", "hmse1bp", "hmrndxm", "hmrvf0v", "hmrjc73", "hmrwfe7", "hmrkr1r",
        "hmrhtya", "hmrqz3w", "hmris2x", "hms17z9", "hmso475", "hmrfyu8", "hmrks2m",
        "hmrmpae", "hmrfnhv", "hmrwv2f", "hmsnt19", "hmrmz20", "hmrtjc7", "hmsmm2x",
        "hmrn1qi", "hmt5svi", "hmrqzuc", "hmrfgli", "hmrp9h5", "hms455t", "hmsmh1y",
        "hms0h5d", "hmrgvm7", "hmsomuy", "hmrjrhv", "hmreo3u", "hmrh2vk", "hmse2jo",
        "hmrtdu0", "hmrtb91", "hmreons", "hmrf87m", "hmrusos", "hmsu0e1", "hmri0oz",
        "hmrf8rs", "hmrij5r", "hmrwt4h", "hmrhubd", "hmrgute", "hmrfpg5", "hmrh7ku",
        "hmryvkc", "hmrky8s", "hmsj72h", "hmtou73", "hmsj2yt", "hms4yu6", "hmsnco5",
        "hmudr1q", "hmrmuci", "hmsvczl", "hmtpxvo", "hmt9ekl", "hmri6n9", "hmrjeyk",
        "hmrk76v", "hms28dt", "hms1s6r", "hmt5dgk", "hmrhvmq", "hmreq3w", "hmri3iq",
        "hmrruww", "hmrzdrp", "hmrel8t", "hmrhdk2", "hmsll5m", "hmrg50y", "hmtp9ng",
        "hmrpogf", "hmspb17", "hmrsklw", "hmtcq1a", "hmsm2v3", "hmrk087", "hmskt4q",
        "hmsqyxj", "hmrlp54", "hmrtbjq", "hmrezlc", "hmrfkh9", "hmrw9fx", "hmrfvru",
        "hmsgevw", "hmreq4n", "hmrnsys", "hmrk2jn", "hmrklsj", "hms0m82", "hmt8gl5",
        "hmsoygk", "hms4lux", "hmsneo1", "hms0omp", "hms6qq4", "hmrmn6p", "hmruxji",
        "hmrevqd", "hmrqozx", "hmrhxzz", "hmrpbj4", "hms1z0o", "hmtfafr", "hmri5lq",
        "hmtskg5", "hmrh243", "hms7q76", "hmrxxk9", "hmrh3m6"]}}], "before": null}}]'
  recorded_at: Sat, 08 Mar 2025 22:29:14 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:15 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=liEmCCKjS2hFq9dzuM; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:15 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmygsqt,hmyfdr9,hmyb5l7,hmy9wj9,hmyb7om,hmy8v67,hmy32s1,hmy98ot,hmy9ke6,hmxsojx,hmx8h5l,hmxgs6y,hmxm0oa,hmy215d,hmxeos6,hmwx4lt,hmy90co,hmxzdlr,hmy5y2j,hmx9ay3,hmxoenc,hmwkskt,hmwtvis,hmwb2ra,hmx4u0j,hmwegvt,hmxf61e,hmwwi7l,hmxrx3s,hmwtwoc,hmwg4mh,hmvg97r,hmwnrhk,hmxa298,hmy3con,hmx7741,hmxdpt3,hmwxwzb,hmwtvl7,hmw3zoj,hmw8zxm,hmxn3xv,hmxer2i,hmv7xhs,hmva7zl,hmwq120,hmvy97q,hmuzllx,hmw42an,hmx2aj6,hmx4oh4,hmw21oo,hmvzpzx,hmx74kk,hmx7ocb,hmwgxfw,hmvwtzm,hmxa4gk,hmvr6mx,hmvszqc,hmwn65l,hmuvxcd,hmvmcfk,hmv7e6n,hmu2a1h,hmwgacu,hmvwuer,hmwdb3a,hmvg4o4,hmui302,hmwfe3o,hmwpkjo,hmuwsn3,hmwxxf7,hmwkw6o,hmweook,hmv8bqt,hmvttxb,hmvd5ko,hmve44r,hmveoia,hmuxks0,hmuvznj,hmw4ek2,hmvewiq,hmw9ssu,hmugx2v,hmuuxtj,hmurfdk,hmuxot7,hmtpagm,hmwl2ds,hmvianz,hmv10v7,hmv06au,hmuyqf6,hmuxfuh,hmvvm80,hmvu8v1,hmv395f,hmwu69l,hmvffrj,hmwtk1w,hmupwiu,hmu09qs,hmvxl2c,hmv9qtx,hmwqv7g,hmw3f07,hmw1jxb,hmvaoz0,hmvoa64,hmvao30,hmvn98k,hmtlvmj,hmwzc9n,hmvcobg,hmvp1xr,hmtteup,hmvj1t2,hmukpkv,hmubq5y,hmufugf,hmuaadx,hmu6yri,hmsd95d,hmvice0,hmuuqt2,hmt02z0,hmtytou,hmu0uax,hmuwc2v,hmut6fx,hmukph5,hmtouj5,hmunovu,hmw3kbw,hmtnvwp,hmv8xhi,hmuc20z,hmu47y6,hmvbdu3,hmurivu,hmtast6,hmua3c5,hmtlqdt,hmuudfb,hmuwikk,hmsnmhw,hmvam9r,hmv6c3a,hmvwd6n,hms8odm,hmur5jh,hmumga1,hmupqo9,hmufl06,hmu4zel,hmty5rx,hmv23t1,hmv9p9p,hmsszew,hms98ik,hmua6gz,hmuoxly,hmsx4gc,hmu7lg6,hmvqsha,hmvq4sq,hmuj8f3,hmvcr0w,hmvdgju,hmv3vpe,hmtl4l8,hmu4r0v,hmt500x,hmu6oh6,hmtwve0,hmtx4jg,hmuc4p0,hmtvgc7,hmti8v3,hmsit0y,hmuz7ba,hmwc3gl,hmusj18,hmuy2yb,hmu297u,hmukafq,hmuy7px,hmutxld,hmu51yq,hmupha0,hmu2d91,hmtpt3b,hmvnyic,hmvlosw,hmvqe6x,hmuvltl,hmum5va,hmurtrn,hmvae71,hmwk3gr,hmta3ce,hmuszg8,hmsogj4,hmvjdt8,hmugkix,hmuox3j,hmtml6b,hmtp273,hmteqky,hmuu15c,hmuu8ya,hmunt9t,hmvqboh,hmvo3y7,hmvkvm6,hmssbuw,hmu9yeq,hmuvaeh,hmunpx2,hmtxaje,hmubyyr,hmvhiw7,hmur5u6,hmswfp5,hmuobbx,hmtqk3y,hmsrgeu,hmt9f7j,hmvpp3m,hmuu0nz,hmul0m8,hmtxmw2,hmupvsh,hmtypln,hmsxt6e,hmskbs6,hmu7i0g,hmtbcpy,hmsvdty,hmtw0cl,hmubcb8,hmtfl5k,hmt1dsj,hmt2d0z,hms4xe2,hmt8nh7,hms5q48,hmsxnbq,hms0fy5,hmrzmu2,hmthspq,hmt2jgt,hms9kem,hmuatyn,hms9kby,hmsk25x,hmtcewm,hms3qv5,hms24ql,hmrzb95,hmtnoc6,hmusk2z,hmsobf4,hmtbaw0,hmujjqf,hmt57a0,hmt74ro,hmst5oy,hms71zn,hmu7mkh,hmunk6r,hmvyzz7,hmru0e5,hmriaqg,hmrpoa6,hmuijjn,hmsy5hk,hmu9qut,hmtfdrf,hmtiwbk,hmsjmk5,hmuqjav,hmtdkt1,hmsxhd5,hmsndmx,hmsmzua,hmsrqka,hmtimr9,hms6ztr,hmsniaj,hmsjke6,hmt0fwv,hmtn3k2,hmu41kj,hms49hp,hmsea34,hmtjo2f,hmsa6ey,hmshy76,hmuemam,hmtyhqw,hmvh953,hms2oje,hms4w5y,hmud1xk,hmsipx1,hms8upn,hmtfxz8,hmsaolj,hmt2qvg,hms4ren,hmssm7i,hmt5mu9,hmtqtlx,hmstdu1,hms3wv7,hmux6rf,hmtose6,hmu3smg,hmuxrtd,hmrzrtr,hmsdp0m,hms2v2z,hms50ta,hmsebbs,hmsrw4q,hms3ugv,hmu2pgh,hms028u,hmroz64,hms1fac,hmu172l,hmvjxdh,hmu2ehy,hms8pj4,hmvd82d,hmtf0lj,hmt0sca,hmtou21,hmvcmtf,hmtn5cf,hmvd24s,hmuz3su,hmryepf,hmsa8oc,hms1l6z,hms664r,hmtj1jx,hmsu2jc,hmsic35,hmte69a,hmssgwx,hmtb5yc,hmsi1lb,hmsa0hn,hmtith2,hmtvl66,hmtzrre,hmtnako,hmru1tr,hmrgb09,hmtd9xp,hmrtqlt,hms2tdh,hmrr8s5,hms0zky,hmtqurm,hmu0i98,hmul1w0,hmuhh4i,hmum4io,hmtsxep,hmrknr4,hmtomhu,hmubzlt,hmsumbu,hms5s4x,hmsduyy,hmtckwf,hmtublx,hmsrb47,hmu51kx,hmt7kjf,hmul9ls,hmrxcqk,hmriplw,hms0q3g,hmt0d6b,hmrr3my,hmucq9b,hmulg4v,hmtitr8,hmskgka,hms93us,hmrtiig,hmuc4hm,hmtixd5,hmtucrc,hmskvpo,hmupg0c,hmsrg41,hmtqwyn,hmrzgee,hmuwdqz,hmt8pge,hms5nfl,hmuf6r8,hms97z3,hms9w78,hms8zqs,hmubyyn,hmrl92g,hmtb264,hmru14y,hmtrv9z,hmtvyoj,hmrg1kh,hmsqpii,hmrs30t,hmrorf8,hmt0ynh,hmshy8w,hmu337d,hmsioan,hmsuu75,hmsnuj3,hmsnu8g,hmrtomh,hmv1ch7,hmts3v2,hmv3f9l,hms52ki,hmul83d,hmup3ay,hms968d,hmsm130,hmt27ga,hmt7cec,hmtkx5u,hmuqc8p,hmrydbs,hmrsigj,hmt833f,hmsd2vf,hmu7g9d,hmsr7zw,hmu2gx2,hmsc6zx,hmu5438,hmtnk5b,hmso78b,hmsvo2v,hmsbmj1,hmtpdh1,hmtil9k,hmto2mk,hmskfds,hmrq8km,hmrssht,hmrf92d,hmtpgu7,hmsthqs,hmttnxq,hmu4ns7,hmtw3nw,hmrhzrx,hmsqalo,hmt42bv,hmrnh5o,hmrj5t0,hmsw7qt,hmrf0j6,hmsf2pc,hmrz22v,hmsezp2,hmrkn0z,hmrf0gg,hmrt4yg,hmsacv9,hmsst3c,hmrlffy,hmss6je,hmrtaig,hmsr243,hms9qyu,hmt3c9q,hmsuxfj,hms7gau,hmrkjxn,hmrsif1,hmrg6cr,hmrgey5,hmreik6,hmrr4l8,hmrz2jn,hmrtk7y,hmrhfrf,hmrz40u,hmro017,hmrim4f,hmrino9,hmrnshk,hmrhr14,hmrhogs,hmt7ejw,hmrhr75,hmrel6r,hmrgg40,hmrf9ck,hmrg937,hmrfsy6,hmt4tjc,hmren52,hmrio89,hmrs7po,hms4fkz,hmrjghk,hmt7y0e,hmryh40,hmrynpr,hmrzl7z,hmrfr8r,hmrkcyf,hmrfwhi,hmrf05u,hmrg57r,hmrhqsr,hmrjd7f,hmrins1,hmrfsij,hmrzzi1,hmsr2hm,hmsku8e,hmrrjzi,hms5nl3,hmsf8k8,hms21cb,hmrfuqk,hmry7u5,hmrl33k,hmrrmwr,hmrxatx,hms0ovt,hmu2rw9,hmtwtbw,hmshxa7,hmrfld2,hmujlag,hmrgk3j,hmrgytd,hmrhgz4,hmrgwdu,hmrf4te,hmrm9ku,hmu9x7q,hmtkjc8,hms8dah,hmsr3as,hmsr9et,hmrwqat,hmrevxl,hmrr3w3,hms0uxp,hms6rw6,hmrkw73,hms9me8,hms9zdc,hmrjagu,hmrx7fx,hms277r,hmrk31c,hmrmjt8,hmrggq3,hms0wwq,hmrjdhg,hmreqc4,hmspmzw,hmroyew,hmsgmlt,hms51e4,hms2udb,hmrfro5,hmrl3xc,hmrortj,hms4ewo,hms8eou,hmrey3a,hms2it8,hmrjmin,hmrhfgj,hmsngjc,hmsskap,hmrfj4u,hmrzld2,hmrh1r4,hmrhcqc,hmrfpkd,hms6jxx,hms8x51,hmrf59h,hmrknkg,hmrs1dg,hmshtm9,hmrlidz,hmreo55,hmtl0p6,hmrregn,hmrxsyi,hmrn5eh,hmrushh,hmrua63,hmrfk32,hmrep8d,hmscvvl,hmrj3nn,hms2ee2,hmrupqc,hms8ikj,hmrl64f,hmru1rn,hmrjfyf,hmrs8pi,hmss2k9,hms3twz,hmrjh38,hms009r,hmrn3rv,hmrf5mi,hmrpq3k,hmrz6ix,hms1j6d,hmt84zy,hmrtnc5,hms4gwi,hmrf5u4,hmrzaih,hmrgty5,hmt4xjf,hmrj5v8,hmsr79d,hmrj6qy,hmszj1n,hms2fe6,hmrxlvv,hmrhicm,hmripy5,hmrt2sw,hms3lqj,hmrkm9v,hmrhfv0,hmrh9y9,hmrhdgc,hmrlcda,hmroxl9,hmrgdm4,hmro9sd,hmrgtwj,hmretnt,hmrfa3v,hmsatqd,hmrgg3c,hmrkb7z,hmrf2g0,hmrfhj6,hmrfuew,hmrfv48,hmrguh8,hmsem50,hmrrbe6,hms92lp,hmrwtvs,hms04pa,hms2u4s,hms3qzs,hmtn1lr,hmsvx7j,hmslw5f,hms9dfn,hmswer6,hmsnokd,hmsbm15,hmrkats,hmruc2k,hmrf4pv,hmrgfud,hmrgv1n,hms8x4k,hmswb9a,hmse1bp,hmrndxm,hmrvf0v,hmrjc73,hmrwfe7,hmrkr1r,hmrhtya,hmrqz3w,hmris2x,hms17z9,hmso475,hmrfyu8,hmrks2m,hmrmpae,hmrfnhv,hmrwv2f,hmsnt19,hmrmz20,hmrtjc7,hmsmm2x,hmrn1qi,hmt5svi,hmrqzuc,hmrfgli,hmrp9h5,hms455t,hmsmh1y,hms0h5d,hmrgvm7,hmsomuy,hmrjrhv,hmreo3u,hmrh2vk,hmse2jo,hmrtdu0,hmrtb91,hmreons,hmrf87m,hmrusos,hmsu0e1,hmri0oz,hmrf8rs,hmrij5r,hmrwt4h,hmrhubd,hmrgute,hmrfpg5,hmrh7ku,hmryvkc,hmrky8s,hmsj72h,hmtou73,hmsj2yt,hms4yu6,hmsnco5,hmudr1q,hmrmuci,hmsvczl,hmtpxvo,hmt9ekl,hmri6n9,hmrjeyk,hmrk76v,hms28dt,hms1s6r,hmt5dgk,hmrhvmq,hmreq3w,hmri3iq,hmrruww,hmrzdrp,hmrel8t,hmrhdk2,hmsll5m,hmrg50y,hmtp9ng,hmrpogf,hmspb17,hmrsklw,hmtcq1a,hmsm2v3,hmrk087,hmskt4q,hmsqyxj,hmrlp54,hmrtbjq,hmrezlc,hmrfkh9,hmrw9fx,hmrfvru,hmsgevw,hmreq4n,hmrnsys,hmrk2jn,hmrklsj,hms0m82,hmt8gl5,hmsoygk,hms4lux,hmsneo1,hms0omp,hms6qq4,hmrmn6p,hmruxji,hmrevqd,hmrqozx,hmrhxzz,hmrpbj4,hms1z0o,hmtfafr,hmri5lq,hmtskg5,hmrh243,hms7q76,hmrxxk9,hmrh3m6
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '49652'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg621fgg.2.1741472955278.Z0FBQUFBQm56TVM3dXU4aXlwMWlsdkxhU1NOV3RXM3Jfdnh4SHhyTTk0VHlqLW5KSUpZdkRVRS1MN3ZyZ2NZeGpJbUV2OERZN3FFc2RyMl9adC04SV9HUm4zTFd5YWJOZkE2R05IRVFVUFBKejhlekNpeG0yVjJYNnAtcHZKZU9JZnNYaVZYM2lYdE4;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:15
        GMT; secure, session_tracker=cddoldgpjlankanfre.0.1741472955290.Z0FBQUFBQm56TVM3SnA4ZThlaU92Q2d3VUF3TU12Q3AzM202N0stcnkzR2tfVF9HMzlqeG5Pd3hKTUloMmljVE8yd2VLSS02SlNKZFd0VlRJWTdKUmw4S000VGM0SGpTMnBNVkZaWW84V0RVd3ZYZ1VlT1c3LWRGTkx4d2RlQTlEYnhwTndmQXF4Vkc;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:15
        GMT; secure, edgebucket=aEtknrnTJnWrErYHV3; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '58'
      x-ratelimit-remaining:
      - '42.0'
      x-ratelimit-reset:
      - '44'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:15 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 63, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrl64f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "relativistic-turtle",
        "can_mod_post": false, "created_utc": 1638339217.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 63, "author_fullname": "t2_druyqtam", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[IntCode](https://topaz.github.io/paste/#XQAAAQDFIgAAAAAAAAAYjAOP0tRaunLb6YP4GqGJEXTJ6+IK9Ye23CLzYuw6fuSFXTPi9SSP4sqisaDi5TVEvrc9uLcuE/Vup5PsnxNo883v4+bTm/u7NkwJYr+JkQHZgD6prQe1cl+XnodTTon9bjCLlmLTKbn9MO61/qSh+A8i3hCrnaRS5quZ3njihySrf035ebJYzHffmBzIWW6yo0JVOnBl+plqCTwGbBHPCOnQfL8s9VZlt6qQBdJx3emfQ6cmDMTijPo2DRJL+PqYtlJFe5UWLuZSon1lhqWCFOr6VnkoWNAfkYcLEIXctfeejZq4Ycwak+zr10OjKXuZDlU3wJrdOAhH1/wef/6OyttHFaLAiMP0TmETfEUS9w3DEqHAfiy+9iX4Ft2fQz76lvL3XeG/LK9ExIYGYKIV5SQAca4f8ECnr1DmjwXN/RFtqAHlPFnD1w59QAiVGJYJYzW+kLMi468nRQGP0sVc+UcBxUfW35oacFQa5QE4G8COrY6s7leUOmUEhroBVUUPJCFYVKJ/3aS0t7fscykAhRRdeguGpMYojO9hI6W1S4aPT3c2WHvdH2AG5JradBRxVLA0x0mcSpHu4oi9oTQBIXnrdEeyuHcfJbjHiVwiHtaLASzjm3otWeiYpFHeBmbfkOG/TpxN/zQRE/Vxj/6r/c93JvEFi8yStC0ejNIVxPhPGDcCNMUQWrAF6O+xJ3w+3Wi1rFw7nHrwWefgAhmDmeEeUPwkPy5cK+vZn8IEZJQuvwftqYJTadDuK+5vZE/gl59thXURgxlD9oGjH/kvvasyQa5G38XI4Ea//zWNlABclaYTceQU93VX8znEicS/6qZ18cfyIH+dTwtHPPehpWg4XhD88CCVeDiblylL7mwx/sFsDboQxdgJnjhzRoAvuBE/ZGiewfL2l64Gyfx08uFp2tEHQKsUPOYhHdI0Xi3IXPkAk/E+31HM/mgMqBmHJEikzD5Nl3KlmRVO6eGuNtjBp77YqJCg2IIxrEHqVaZ6sZJMyO9S83d1MaGLRwyZ5PYU2pz3hGZkJXTezPa9vAbNidxUGmW9BJ9d3PPnNHCIKOG84YqTvr1fwq16qnvcSpQo9WOLbTOuvyGwMGhpSIAlH49+/FwUffCn5NvHUlBJUaXYnP4IKqObFkkyd3ZKfu8gsye7S3+D5jHSPd+zi00cizCMXXc41JEyqRh66XeAL2Zk9HY1NgU/FESyqEYgjlhTnUXi2eYBYzhh5JaH7Tgr8iaWJfnhBsGG/7UVtspmT1hAVCGi5hALQEnZSYD35Ek7TaO9cEk2o2jZgc/VRY0HvC1NN15UTyHd0g4vPEn9tTReTnoJlMGq425+/P5FK33KirKtv5Ae+1bjXpWHIO/Yk7izJOMBtsbI93Tj04XODffaNPNrEgii3gyOyPtO7BVRVJLqEQwVnfQRhWlyz+Ie1xjkQ4QXP040+DIriBhMngk237yisRnsyjVEr9bV/IO+trn173AtMQiowfCUdwx+JGe7kkctuU7QCoCCn9T0wfgJjmJHSRP+rKraNHT9h3hijbd4y0UXfBoxPq3cVqr6qOcLyZO4g/B5dixAbT5QYPzBVqdbv0fNeWT9bI+jWd97zA8ax8pm6ij6T+S3hqGZ4g8rMMslJRCldVWbDRfhKKZcbdvSORAdydB4C5EI/Apf/wYq+XyHDgs0EfeBHJ53mjKSF3X/Uexi98dQjTdb8SBl5Jcm9Mknn6w34ExVyWJR81EyiD2IfeZfaJIM9AwWIK69kCS3wUVuV091PzdtNqPk0OKQP0G0U62WUsSwUFkP/vtu1w==)
        :)\n\nNote 1: Assumes input is given in [ASCII-format](https://adventofcode.com/2019/day/17).
        I.e., the depth values are given as ASCII-coded strings (\"123\") delimited
        by newline (\"\\\\n\", ASCII-value 10). See IntCode-problems [17](https://adventofcode.com/2019/day/17),
        [21](https://adventofcode.com/2019/day/21) and [25](https://adventofcode.com/2019/day/25)
        of 2019.\n\nNote 2: Assumes input is 2000 rows, as it was for me.\n\nNote
        3: I used my self-written (and quite ugly) \"C lite\" to IntCode-compiler
        to actually generate the IntCode-program", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDFIgAAAAAAAAAYjAOP0tRaunLb6YP4GqGJEXTJ6+IK9Ye23CLzYuw6fuSFXTPi9SSP4sqisaDi5TVEvrc9uLcuE/Vup5PsnxNo883v4+bTm/u7NkwJYr+JkQHZgD6prQe1cl+XnodTTon9bjCLlmLTKbn9MO61/qSh+A8i3hCrnaRS5quZ3njihySrf035ebJYzHffmBzIWW6yo0JVOnBl+plqCTwGbBHPCOnQfL8s9VZlt6qQBdJx3emfQ6cmDMTijPo2DRJL+PqYtlJFe5UWLuZSon1lhqWCFOr6VnkoWNAfkYcLEIXctfeejZq4Ycwak+zr10OjKXuZDlU3wJrdOAhH1/wef/6OyttHFaLAiMP0TmETfEUS9w3DEqHAfiy+9iX4Ft2fQz76lvL3XeG/LK9ExIYGYKIV5SQAca4f8ECnr1DmjwXN/RFtqAHlPFnD1w59QAiVGJYJYzW+kLMi468nRQGP0sVc+UcBxUfW35oacFQa5QE4G8COrY6s7leUOmUEhroBVUUPJCFYVKJ/3aS0t7fscykAhRRdeguGpMYojO9hI6W1S4aPT3c2WHvdH2AG5JradBRxVLA0x0mcSpHu4oi9oTQBIXnrdEeyuHcfJbjHiVwiHtaLASzjm3otWeiYpFHeBmbfkOG/TpxN/zQRE/Vxj/6r/c93JvEFi8yStC0ejNIVxPhPGDcCNMUQWrAF6O+xJ3w+3Wi1rFw7nHrwWefgAhmDmeEeUPwkPy5cK+vZn8IEZJQuvwftqYJTadDuK+5vZE/gl59thXURgxlD9oGjH/kvvasyQa5G38XI4Ea//zWNlABclaYTceQU93VX8znEicS/6qZ18cfyIH+dTwtHPPehpWg4XhD88CCVeDiblylL7mwx/sFsDboQxdgJnjhzRoAvuBE/ZGiewfL2l64Gyfx08uFp2tEHQKsUPOYhHdI0Xi3IXPkAk/E+31HM/mgMqBmHJEikzD5Nl3KlmRVO6eGuNtjBp77YqJCg2IIxrEHqVaZ6sZJMyO9S83d1MaGLRwyZ5PYU2pz3hGZkJXTezPa9vAbNidxUGmW9BJ9d3PPnNHCIKOG84YqTvr1fwq16qnvcSpQo9WOLbTOuvyGwMGhpSIAlH49+/FwUffCn5NvHUlBJUaXYnP4IKqObFkkyd3ZKfu8gsye7S3+D5jHSPd+zi00cizCMXXc41JEyqRh66XeAL2Zk9HY1NgU/FESyqEYgjlhTnUXi2eYBYzhh5JaH7Tgr8iaWJfnhBsGG/7UVtspmT1hAVCGi5hALQEnZSYD35Ek7TaO9cEk2o2jZgc/VRY0HvC1NN15UTyHd0g4vPEn9tTReTnoJlMGq425+/P5FK33KirKtv5Ae+1bjXpWHIO/Yk7izJOMBtsbI93Tj04XODffaNPNrEgii3gyOyPtO7BVRVJLqEQwVnfQRhWlyz+Ie1xjkQ4QXP040+DIriBhMngk237yisRnsyjVEr9bV/IO+trn173AtMQiowfCUdwx+JGe7kkctuU7QCoCCn9T0wfgJjmJHSRP+rKraNHT9h3hijbd4y0UXfBoxPq3cVqr6qOcLyZO4g/B5dixAbT5QYPzBVqdbv0fNeWT9bI+jWd97zA8ax8pm6ij6T+S3hqGZ4g8rMMslJRCldVWbDRfhKKZcbdvSORAdydB4C5EI/Apf/wYq+XyHDgs0EfeBHJ53mjKSF3X/Uexi98dQjTdb8SBl5Jcm9Mknn6w34ExVyWJR81EyiD2IfeZfaJIM9AwWIK69kCS3wUVuV091PzdtNqPk0OKQP0G0U62WUsSwUFkP/vtu1w==\"&gt;IntCode&lt;/a&gt;
        :)&lt;/p&gt;\n\n&lt;p&gt;Note 1: Assumes input is given in &lt;a href=\"https://adventofcode.com/2019/day/17\"&gt;ASCII-format&lt;/a&gt;.
        I.e., the depth values are given as ASCII-coded strings (&amp;quot;123&amp;quot;)
        delimited by newline (&amp;quot;\\n&amp;quot;, ASCII-value 10). See IntCode-problems
        &lt;a href=\"https://adventofcode.com/2019/day/17\"&gt;17&lt;/a&gt;, &lt;a
        href=\"https://adventofcode.com/2019/day/21\"&gt;21&lt;/a&gt; and &lt;a href=\"https://adventofcode.com/2019/day/25\"&gt;25&lt;/a&gt;
        of 2019.&lt;/p&gt;\n\n&lt;p&gt;Note 2: Assumes input is 2000 rows, as it was
        for me.&lt;/p&gt;\n\n&lt;p&gt;Note 3: I used my self-written (and quite ugly)
        &amp;quot;C lite&amp;quot; to IntCode-compiler to actually generate the IntCode-program&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrl64f/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrl64f", "created":
        1638339217.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 17, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrlq83",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638339580.0, "send_replies": true,
        "parent_id": "t1_hmrl64f", "score": 17, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "The sheer *audacity* of Reddit to filter this glorious post as spam.  APPROVED\n\nAlso,
        you is nuts.  But in a good way.  &lt;3", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;The sheer &lt;em&gt;audacity&lt;/em&gt; of Reddit
        to filter this glorious post as spam.  APPROVED&lt;/p&gt;\n\n&lt;p&gt;Also,
        you is nuts.  But in a good way.  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrlq83/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrlq83", "created": 1638339580.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "more", "data": {"count": 4,
        "name": "t1_hmrmchg", "id": "hmrmchg", "parent_id": "t1_hmrl64f", "depth":
        1, "children": ["hmrmchg", "hmswv2a"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1638337811.0, "mod_reason_by": null, "banned_by": null, "ups":
        48, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrggq3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Chitinid",
        "can_mod_post": false, "created_utc": 1638336379.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 48, "author_fullname": "t2_6pg1x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\n\nPart 1:\n\n```sum(x &lt; y for x, y in zip(nums, nums[1:]))```\n\nPart
        2: \n\n```sum(x &lt; y for x, y in zip(nums, nums[3:]))```\n\nEDIT: optimized
        based on comments", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sum(x &amp;lt; y for x, y in zip(nums,
        nums[1:]))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part 2: &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sum(x
        &amp;lt; y for x, y in zip(nums, nums[3:]))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;EDIT:
        optimized based on comments&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrggq3/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrggq3", "created":
        1638336379.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 11, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrh3if",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "PerturbedHamster",
        "can_mod_post": false, "created_utc": 1638336741.0, "send_replies": true,
        "parent_id": "t1_hmrggq3", "score": 11, "author_fullname": "t2_46ky7kqj",
        "report_reasons": null, "approved_by": null, "all_awardings": [], "collapsed":
        false, "body": "Well, you get my poor person''s award for the most elegant
        solution of the day.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well,
        you get my poor person&amp;#39;s award for the most elegant solution of the
        day.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrh3if/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrh3if", "created":
        1638336741.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrhy8n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jfb1337",
        "can_mod_post": false, "created_utc": 1638337237.0, "send_replies": true,
        "parent_id": "t1_hmrggq3", "score": 5, "author_fullname": "t2_dhdti", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s a handy trick: you don''t need to do `1 for ... if ...`, because
        booleans cast to ints when summed. So you can instead say `sum(x&lt;y for
        x, y in zip(nums, nums[1:]) )`", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s a handy trick: you don&amp;#39;t need
        to do &lt;code&gt;1 for ... if ...&lt;/code&gt;, because booleans cast to
        ints when summed. So you can instead say &lt;code&gt;sum(x&amp;lt;y for x,
        y in zip(nums, nums[1:]) )&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhy8n/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrhy8n", "created": 1638337237.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_hmritbb", "id": "hmritbb", "parent_id": "t1_hmrhy8n", "depth": 2, "children":
        ["hmritbb", "hmu9t95"]}}, {"kind": "more", "data": {"count": 12, "name": "t1_hmri87m",
        "id": "hmri87m", "parent_id": "t1_hmrggq3", "depth": 1, "children": ["hmri87m",
        "hmt20lu", "hmukj3r", "hmrttnp", "hmsojjk", "hmsre4b"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638395902.0, "mod_reason_by": null,
        "banned_by": null, "ups": 37, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrkb7z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "voidhawk42",
        "can_mod_post": false, "created_utc": 1638338670.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 37, "author_fullname": "t2_u464p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "APL once again this year!\n\n    p\u2190\u234e\u00a8\u2283\u2395nget''01.txt''1\n    f\u2190+/0&gt;2-/\u22a2
        \u22c4 f p \u235d part 1\n    f 3+/p \u22c4 \u235d part 2\n\nEDIT: Also going
        to be doing Clojure this year, here''s [day 1](https://topaz.github.io/paste/#XQAAAQCaAQAAAAAAAAAUG4piArvVtv901sPxHJo4Y4BHCf2v0wOJKlHrsqsY6mi12IzPmHVKfe/HKYDx8uqc+EEE+z1cMNKavInrlUpPc3cCGHJLyjeFKhTbVmUdcfEtBMgnOFuzarRihPnCQNCupqIrabtbTAJ3+dsQqNahlErDPSQrjYTsC1QSg8CaKJXi5wUSXaUaoq2wD8Tc4xKJ+1zFL8OtjRgrodUOkmJbI+AUu0sX8kJbOXV1ngPqM9lYx/CHn29M3D5uJGMQg3+01NAIhHQ5at1mm+Kb0ZDHFfGA7SRY2WiVStJhwz8eir6JaFJ8FKPmeFzJ//A+/MM=).
        I think Clojure should be pretty nice for problems that require exotic datastructures
        that aren''t in APL - like, uh, hash maps.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;APL once again this year!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p\u2190\u234e\u00a8\u2283\u2395nget&amp;#39;01.txt&amp;#39;1\nf\u2190+/0&amp;gt;2-/\u22a2
        \u22c4 f p \u235d part 1\nf 3+/p \u22c4 \u235d part 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT:
        Also going to be doing Clojure this year, here&amp;#39;s &lt;a href=\"https://topaz.github.io/paste/#XQAAAQCaAQAAAAAAAAAUG4piArvVtv901sPxHJo4Y4BHCf2v0wOJKlHrsqsY6mi12IzPmHVKfe/HKYDx8uqc+EEE+z1cMNKavInrlUpPc3cCGHJLyjeFKhTbVmUdcfEtBMgnOFuzarRihPnCQNCupqIrabtbTAJ3+dsQqNahlErDPSQrjYTsC1QSg8CaKJXi5wUSXaUaoq2wD8Tc4xKJ+1zFL8OtjRgrodUOkmJbI+AUu0sX8kJbOXV1ngPqM9lYx/CHn29M3D5uJGMQg3+01NAIhHQ5at1mm+Kb0ZDHFfGA7SRY2WiVStJhwz8eir6JaFJ8FKPmeFzJ//A+/MM=\"&gt;day
        1&lt;/a&gt;. I think Clojure should be pretty nice for problems that require
        exotic datastructures that aren&amp;#39;t in APL - like, uh, hash maps.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrkb7z/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrkb7z", "created":
        1638338670.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 29, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrl4hj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638339188.0, "send_replies": true,
        "parent_id": "t1_hmrkb7z", "score": 29, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Oh goody, the Alien Programming Language folks are back again.  &lt;3", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Oh goody, the Alien Programming Language
        folks are back again.  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrl4hj/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrl4hj", "created": 1638339188.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "more", "data": {"count": 1,
        "name": "t1_hmrtfvb", "id": "hmrtfvb", "parent_id": "t1_hmrl4hj", "depth":
        2, "children": ["hmrtfvb"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 6, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrm3qu", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "benjamin051000", "can_mod_post": false,
        "created_utc": 1638339811.0, "send_replies": true, "parent_id": "t1_hmrkb7z",
        "score": 6, "author_fullname": "t2_p14la", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "We will watch your
        career with great interest.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We
        will watch your career with great interest.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrm3qu/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrm3qu", "created": 1638339811.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 8, "name":
        "t1_hmrlpip", "id": "hmrlpip", "parent_id": "t1_hmrkb7z", "depth": 1, "children":
        ["hmrlpip", "hmslf36", "hmrtkhe", "hms6wl8", "hmsj20b"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1640959489.0, "mod_reason_by": null,
        "banned_by": null, "ups": 69, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrrmwr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 1, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Smylers",
        "can_mod_post": false, "created_utc": 1638343673.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 69, "author_fullname": "t2_13cudg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Vim** keystrokes. If you haven''t encountered this sort of solution before,
        this isn''t a program in Vim''s scripting language, but simply normal-mode
        keystrokes that you type in to manually transform the input into the solution:\n\n    qaqqajyiwk@0\u27e8Ctrl+X\u27e9j@aq@a\n    :v/^-/d\u27e8Enter\u27e9\u27e8Ctrl+G\u27e9\n\nLoad
        your input file, type in the above, and the number of lines displayed by `\u27e8Ctrl+G\u27e9`
        is your part\u00a01 solution.\n\nFor part\u00a02, press `u` enough times to
        get back to your starting input, then:\n\n    qbqqbjj\"zyiwkyiwk@z\u27e8Ctrl+A\u27e9@0\u27e8Ctrl+A\u27e9j@bq@bdk\n    {@a:v/^-d/\u27e8Enter\u27e9\u27e8Ctrl+G\u27e9\n\nAgain,
        the number of lines is your answer.\n\nHow''s it work? In part\u00a01, the
        body of the \u2018main loop\u2019 is `jyiwk@0\u27e8Ctrl+X\u27e9j`. You can
        watch this one keystroke/command at a time as you type it:\n\n* `j` goes down
        to the line below the current one.\n* `yiw` yanks the word the cursor is on,
        that is the number on that line. (Other yankings are possible, but `yiw` is
        often the most useful one in Advent of Code, working regardless of whether
        the number is one or multiple digits, and regardless of where the cursor is
        in the number.) No register has been specified, so by default Vim yanks into
        register `0`.\n* `k` goes back to the line we were on.\n* `@0` runs the contents
        of register `0` as a keyboard macro. If the `yiw` yanked \u201c200\u201d (as
        it will in the sample input), then `@0` behaves as though you now typed `200`
        in normal mode. `\u27e8Ctrl+X\u27e9` is Vim''s subtraction command. `200\u27e8Ctrl+X\u27e9`
        would subtract 200 from the number the cursor is on. So `@0\u27e8Ctrl+X\u27e9`
        subtracts the number that was yanked \u2014 that is, the number on the next
        line, turning \u201c199\u201d into \u201c-1\u201d.\n* And `j` moves down a
        line again, for the next time round the loop.\n\n`qaqqa`\u2026`@aq@a` is the
        loop infrastructure:\n\n* The *second* `qa` begins recording keystrokes to
        the `a` register. The final `q` stops the recording. So all the above commands
        for the subtraction get stored in `a`.\n* `@a` is the command for running
        the keystrokes in register `a`. So after recording them, `@a` would run the
        second iteration of the loop.\n* But we want to run it for each line of the
        file. So *inside* the recording, before the final `q`, there''s another `@a`.
        The keyboard macro finishes by using `k` to move on to the next line then
        invoking itself again on that line. So after recording, `@a` sets it off on
        the second line, and then it continues looping through all the lines.\n* Yes,
        that''s an infinite loop. But Vim stops a keyboard macro when it gets an error.
        And when we reach the final line, the `k` to move to the line below will fail
        (and possibly beep), thereby exiting the loop.\n* In order to get `@a` in
        at the end of the macro, we need to type it when recording it. But we don''t
        want Vim to run whatever nonsense happened to already be in register `a`.
        So the `qaq` at the beginning first starts and then immediately stops recording
        into register `a`, that is it clears it out. So the first `@a` typed is a
        no-op at that time: Vim happily runs all zero of the keystrokes in that register
        as we''re typing it, but saves the `@a` keystrokes themselves into the macro
        currently being recorded, and by the time `@a` runs, register `a` obviously
        contains itself.\n\nWhy all this subtraction anyway? Well, every time the
        depth increases, subtracting the next depth from the current one will give
        a negative number. So having subtracted each pair of lines in turn, the answer
        is the number of negative numbers in the buffer. So get rid of all the lines
        *not* containing a negative number with `:v/^-/d`, and the number of lines
        remaining in the file is the number of times the depth increased. You might
        have a Vim status line displaying that anyway, but if not `\u27e8Ctrl+G\u27e9`
        will show it.\n\n`:v/PATTERN/COMMAND` is an Ex command which runs the specified
        Ex command on every line of the file that *doesn''t* match the pattern. (It''s
        the opposite of `:g//`, which does it on lines that do match. To remember
        them think of `:g` being a bit like the Unix `grep` command, and `:v` inverting
        that, like `grep\u00a0-v`.)\n\n`/^-/` matches all lines which start with a
        minus sign \u2014 which in a text editor is way easier than interpreting the
        lines numerically and comparing them to zero \u2014 and `:delete` or `:d`
        is the Ex command for deleting the current line (try it!). In Vim you''d usually
        achieve that in normal mode with `dd`, but `:v` requires an Ex-style command
        after the pattern, so we use `:d` (well, `d`, because the colon is implicit)
        here. And that''s the answer.\n\nFor part\u00a02, there''s the same loop infrastructure
        as above, but this time using `@b`. In each loop iteration we go down twice
        and yank the number there into the `z` register (`jj\"zyiw`), up one line
        and yank into the default register (`kyiw`), then up again to the line we
        started on. `\u27e8Ctrl+A\u27e9` does addition, so `@z\u27e8Ctrl+A\u27e9`
        and `@0\u27e8Ctrl+A\u27e9` add the two yanked numbers on to the current one.
        So each number gets turned into the sum of that number and the following 2
        \u2014 that is, a three-measurement sliding window.\n\nThe loop crashes out
        when there aren''t enough lines below to yank, leaving the bottom two original
        numbers and the cursor on the final line. `dk` deletes them and `{` moves
        the cursor to the start of the first line.\n\nAt which point, with a list
        of sums of three-measurement windows, all we need to do is count the number
        of increases. This initial pass has effectively transformed the input into
        a part\u00a01 problem. So just run `@a` from part\u00a01 to calculate the
        answer (it''s now effectively a function!), then do the `:v` thing again to
        display it.\n\nAny questions?\n\nPS: Belated thank you to `/u/daggerdragon`
        for my \u2018Heinous (ab)Use of Vim\u2019 prize in [last year''s awards](https://www.reddit.com/r/adventofcode/comments/kjtmw0/introducing_your_aoc_2020_gettin_crafty_with_it/).
        I saw it a few days after Christmas and did appreciate it, but never got round
        to thanking you at the time; apologies.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Vim&lt;/strong&gt; keystrokes. If you
        haven&amp;#39;t encountered this sort of solution before, this isn&amp;#39;t
        a program in Vim&amp;#39;s scripting language, but simply normal-mode keystrokes
        that you type in to manually transform the input into the solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;qaqqajyiwk@0\u27e8Ctrl+X\u27e9j@aq@a\n:v/^-/d\u27e8Enter\u27e9\u27e8Ctrl+G\u27e9\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Load
        your input file, type in the above, and the number of lines displayed by &lt;code&gt;\u27e8Ctrl+G\u27e9&lt;/code&gt;
        is your part\u00a01 solution.&lt;/p&gt;\n\n&lt;p&gt;For part\u00a02, press
        &lt;code&gt;u&lt;/code&gt; enough times to get back to your starting input,
        then:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;qbqqbjj&amp;quot;zyiwkyiwk@z\u27e8Ctrl+A\u27e9@0\u27e8Ctrl+A\u27e9j@bq@bdk\n{@a:v/^-d/\u27e8Enter\u27e9\u27e8Ctrl+G\u27e9\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Again,
        the number of lines is your answer.&lt;/p&gt;\n\n&lt;p&gt;How&amp;#39;s it
        work? In part\u00a01, the body of the \u2018main loop\u2019 is &lt;code&gt;jyiwk@0\u27e8Ctrl+X\u27e9j&lt;/code&gt;.
        You can watch this one keystroke/command at a time as you type it:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;j&lt;/code&gt;
        goes down to the line below the current one.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;yiw&lt;/code&gt;
        yanks the word the cursor is on, that is the number on that line. (Other yankings
        are possible, but &lt;code&gt;yiw&lt;/code&gt; is often the most useful one
        in Advent of Code, working regardless of whether the number is one or multiple
        digits, and regardless of where the cursor is in the number.) No register
        has been specified, so by default Vim yanks into register &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;k&lt;/code&gt;
        goes back to the line we were on.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;@0&lt;/code&gt;
        runs the contents of register &lt;code&gt;0&lt;/code&gt; as a keyboard macro.
        If the &lt;code&gt;yiw&lt;/code&gt; yanked \u201c200\u201d (as it will in
        the sample input), then &lt;code&gt;@0&lt;/code&gt; behaves as though you
        now typed &lt;code&gt;200&lt;/code&gt; in normal mode. &lt;code&gt;\u27e8Ctrl+X\u27e9&lt;/code&gt;
        is Vim&amp;#39;s subtraction command. &lt;code&gt;200\u27e8Ctrl+X\u27e9&lt;/code&gt;
        would subtract 200 from the number the cursor is on. So &lt;code&gt;@0\u27e8Ctrl+X\u27e9&lt;/code&gt;
        subtracts the number that was yanked \u2014 that is, the number on the next
        line, turning \u201c199\u201d into \u201c-1\u201d.&lt;/li&gt;\n&lt;li&gt;And
        &lt;code&gt;j&lt;/code&gt; moves down a line again, for the next time round
        the loop.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;code&gt;qaqqa&lt;/code&gt;\u2026&lt;code&gt;@aq@a&lt;/code&gt;
        is the loop infrastructure:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The &lt;em&gt;second&lt;/em&gt;
        &lt;code&gt;qa&lt;/code&gt; begins recording keystrokes to the &lt;code&gt;a&lt;/code&gt;
        register. The final &lt;code&gt;q&lt;/code&gt; stops the recording. So all
        the above commands for the subtraction get stored in &lt;code&gt;a&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;@a&lt;/code&gt;
        is the command for running the keystrokes in register &lt;code&gt;a&lt;/code&gt;.
        So after recording them, &lt;code&gt;@a&lt;/code&gt; would run the second
        iteration of the loop.&lt;/li&gt;\n&lt;li&gt;But we want to run it for each
        line of the file. So &lt;em&gt;inside&lt;/em&gt; the recording, before the
        final &lt;code&gt;q&lt;/code&gt;, there&amp;#39;s another &lt;code&gt;@a&lt;/code&gt;.
        The keyboard macro finishes by using &lt;code&gt;k&lt;/code&gt; to move on
        to the next line then invoking itself again on that line. So after recording,
        &lt;code&gt;@a&lt;/code&gt; sets it off on the second line, and then it continues
        looping through all the lines.&lt;/li&gt;\n&lt;li&gt;Yes, that&amp;#39;s an
        infinite loop. But Vim stops a keyboard macro when it gets an error. And when
        we reach the final line, the &lt;code&gt;k&lt;/code&gt; to move to the line
        below will fail (and possibly beep), thereby exiting the loop.&lt;/li&gt;\n&lt;li&gt;In
        order to get &lt;code&gt;@a&lt;/code&gt; in at the end of the macro, we need
        to type it when recording it. But we don&amp;#39;t want Vim to run whatever
        nonsense happened to already be in register &lt;code&gt;a&lt;/code&gt;. So
        the &lt;code&gt;qaq&lt;/code&gt; at the beginning first starts and then immediately
        stops recording into register &lt;code&gt;a&lt;/code&gt;, that is it clears
        it out. So the first &lt;code&gt;@a&lt;/code&gt; typed is a no-op at that
        time: Vim happily runs all zero of the keystrokes in that register as we&amp;#39;re
        typing it, but saves the &lt;code&gt;@a&lt;/code&gt; keystrokes themselves
        into the macro currently being recorded, and by the time &lt;code&gt;@a&lt;/code&gt;
        runs, register &lt;code&gt;a&lt;/code&gt; obviously contains itself.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Why
        all this subtraction anyway? Well, every time the depth increases, subtracting
        the next depth from the current one will give a negative number. So having
        subtracted each pair of lines in turn, the answer is the number of negative
        numbers in the buffer. So get rid of all the lines &lt;em&gt;not&lt;/em&gt;
        containing a negative number with &lt;code&gt;:v/^-/d&lt;/code&gt;, and the
        number of lines remaining in the file is the number of times the depth increased.
        You might have a Vim status line displaying that anyway, but if not &lt;code&gt;\u27e8Ctrl+G\u27e9&lt;/code&gt;
        will show it.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;:v/PATTERN/COMMAND&lt;/code&gt;
        is an Ex command which runs the specified Ex command on every line of the
        file that &lt;em&gt;doesn&amp;#39;t&lt;/em&gt; match the pattern. (It&amp;#39;s
        the opposite of &lt;code&gt;:g//&lt;/code&gt;, which does it on lines that
        do match. To remember them think of &lt;code&gt;:g&lt;/code&gt; being a bit
        like the Unix &lt;code&gt;grep&lt;/code&gt; command, and &lt;code&gt;:v&lt;/code&gt;
        inverting that, like &lt;code&gt;grep\u00a0-v&lt;/code&gt;.)&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;/^-/&lt;/code&gt;
        matches all lines which start with a minus sign \u2014 which in a text editor
        is way easier than interpreting the lines numerically and comparing them to
        zero \u2014 and &lt;code&gt;:delete&lt;/code&gt; or &lt;code&gt;:d&lt;/code&gt;
        is the Ex command for deleting the current line (try it!). In Vim you&amp;#39;d
        usually achieve that in normal mode with &lt;code&gt;dd&lt;/code&gt;, but
        &lt;code&gt;:v&lt;/code&gt; requires an Ex-style command after the pattern,
        so we use &lt;code&gt;:d&lt;/code&gt; (well, &lt;code&gt;d&lt;/code&gt;, because
        the colon is implicit) here. And that&amp;#39;s the answer.&lt;/p&gt;\n\n&lt;p&gt;For
        part\u00a02, there&amp;#39;s the same loop infrastructure as above, but this
        time using &lt;code&gt;@b&lt;/code&gt;. In each loop iteration we go down
        twice and yank the number there into the &lt;code&gt;z&lt;/code&gt; register
        (&lt;code&gt;jj&amp;quot;zyiw&lt;/code&gt;), up one line and yank into the
        default register (&lt;code&gt;kyiw&lt;/code&gt;), then up again to the line
        we started on. &lt;code&gt;\u27e8Ctrl+A\u27e9&lt;/code&gt; does addition,
        so &lt;code&gt;@z\u27e8Ctrl+A\u27e9&lt;/code&gt; and &lt;code&gt;@0\u27e8Ctrl+A\u27e9&lt;/code&gt;
        add the two yanked numbers on to the current one. So each number gets turned
        into the sum of that number and the following 2 \u2014 that is, a three-measurement
        sliding window.&lt;/p&gt;\n\n&lt;p&gt;The loop crashes out when there aren&amp;#39;t
        enough lines below to yank, leaving the bottom two original numbers and the
        cursor on the final line. &lt;code&gt;dk&lt;/code&gt; deletes them and &lt;code&gt;{&lt;/code&gt;
        moves the cursor to the start of the first line.&lt;/p&gt;\n\n&lt;p&gt;At
        which point, with a list of sums of three-measurement windows, all we need
        to do is count the number of increases. This initial pass has effectively
        transformed the input into a part\u00a01 problem. So just run &lt;code&gt;@a&lt;/code&gt;
        from part\u00a01 to calculate the answer (it&amp;#39;s now effectively a function!),
        then do the &lt;code&gt;:v&lt;/code&gt; thing again to display it.&lt;/p&gt;\n\n&lt;p&gt;Any
        questions?&lt;/p&gt;\n\n&lt;p&gt;PS: Belated thank you to &lt;code&gt;/u/daggerdragon&lt;/code&gt;
        for my \u2018Heinous (ab)Use of Vim\u2019 prize in &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/kjtmw0/introducing_your_aoc_2020_gettin_crafty_with_it/\"&gt;last
        year&amp;#39;s awards&lt;/a&gt;. I saw it a few days after Christmas and did
        appreciate it, but never got round to thanking you at the time; apologies.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrrmwr/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrrmwr", "created":
        1638343673.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrsu3j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638344581.0, "send_replies": true,
        "parent_id": "t1_hmrrmwr", "score": 9, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; PS: Belated thank you to /u/daggerdragon for my \u2018Heinous (ab)Use
        of Vim\u2019 prize in last year''s awards. I saw it a few days after Christmas
        and did appreciate it, but never got round to thanking you at the time; apologies.\n\nYou''re
        more than welcome &lt;3\n\n***AND THIS ENTIRE POST PROVES WHY YOU HAVE THAT
        PARTICULAR AWARD*** -_-", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;PS:
        Belated thank you to &lt;a href=\"/u/daggerdragon\"&gt;/u/daggerdragon&lt;/a&gt;
        for my \u2018Heinous (ab)Use of Vim\u2019 prize in last year&amp;#39;s awards.
        I saw it a few days after Christmas and did appreciate it, but never got round
        to thanking you at the time; apologies.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You&amp;#39;re
        more than welcome &amp;lt;3&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;AND
        THIS ENTIRE POST PROVES WHY YOU HAVE THAT PARTICULAR AWARD&lt;/em&gt;&lt;/strong&gt;
        -_-&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrsu3j/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrsu3j", "created":
        1638344581.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 5, "name": "t1_hmtjmw4", "id": "hmtjmw4",
        "parent_id": "t1_hmrsu3j", "depth": 2, "children": ["hmtjmw4"]}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrtsfr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "geckothegeek42",
        "can_mod_post": false, "created_utc": 1638345310.0, "send_replies": true,
        "parent_id": "t1_hmrrmwr", "score": 8, "author_fullname": "t2_eggyf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Btw, you don''t actually have to do summations for the second part.\n\nA
        window sum is equivalent to adding the next number and subtracting the first
        number in the current window. Therefore, whether the sliding sum increases
        or decreases depends only on whether the next number is larger or smaller
        than the first number in the current window. These numbers are always 3 apart
        (2 number between them), so I think you could do something just like the first
        part but with \\`jjj\\` and \\`kkk\\` instead of \\`j\\`,\\`k\\`\n\nEDIT:
        `a + b + c &lt; b + c + d &lt;=&gt; a &lt; d`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Btw, you don&amp;#39;t actually have to do summations
        for the second part.&lt;/p&gt;\n\n&lt;p&gt;A window sum is equivalent to adding
        the next number and subtracting the first number in the current window. Therefore,
        whether the sliding sum increases or decreases depends only on whether the
        next number is larger or smaller than the first number in the current window.
        These numbers are always 3 apart (2 number between them), so I think you could
        do something just like the first part but with `jjj` and `kkk` instead of
        `j`,`k`&lt;/p&gt;\n\n&lt;p&gt;EDIT: &lt;code&gt;a + b + c &amp;lt; b + c +
        d &amp;lt;=&amp;gt; a &amp;lt; d&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtsfr/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrtsfr", "created": 1638345310.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_hmtc00k", "id": "hmtc00k", "parent_id": "t1_hmrtsfr", "depth": 2, "children":
        ["hmtc00k"]}}, {"kind": "more", "data": {"count": 6, "name": "t1_hmtsfgj",
        "id": "hmtsfgj", "parent_id": "t1_hmrrmwr", "depth": 1, "children": ["hmtsfgj",
        "hsizpzm", "hqoh73s"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 29, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hms49hp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "SirFloIII", "can_mod_post": false, "created_utc":
        1638354167.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 29,
        "author_fullname": "t2_8k6m4", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "[Factorio Combinators](https://www.youtube.com/watch?v=psTr0x077yc)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=psTr0x077yc\"&gt;Factorio
        Combinators&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms49hp/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms49hp", "created":
        1638354167.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hms536o", "id": "hms536o", "parent_id":
        "t1_hms49hp", "depth": 1, "children": ["hms536o", "hmt1cpu"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638336048.0, "mod_reason_by": null,
        "banned_by": null, "ups": 26, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrey3a", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Mathgeek007",
        "can_mod_post": false, "created_utc": 1638335559.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 26, "author_fullname": "t2_aoc44", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "1:08/2:09. 112/46 Excel.\n\n[Video of live process here!](https://www.youtube.com/watch?v=JmjQevLLc6I)\n\nIt
        was a two-column solution;\n\n```=SUM(RC[-1]:R[2]C[-1])```\n\nthen in the
        next column;\n\n```=R[1]C[-1]&gt;RC[-1]```\n\nThen I summed that TRUE in that
        column and got the answer. Part 1 is the exact same, but without that first
        formula.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;1:08/2:09.
        112/46 Excel.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=JmjQevLLc6I\"&gt;Video
        of live process here!&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It was a two-column
        solution;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;=SUM(RC[-1]:R[2]C[-1])&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;then
        in the next column;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;=R[1]C[-1]&amp;gt;RC[-1]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Then
        I summed that TRUE in that column and got the answer. Part 1 is the exact
        same, but without that first formula.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrey3a/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrey3a", "created": 1638335559.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_hmsxjma", "id": "hmsxjma", "parent_id": "t1_hmrey3a", "depth": 1, "children":
        ["hmsxjma"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms71zn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        24, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "# Regex\n\nRegex advent of code, let''s go. Count number
        of matches.\n\nPart 1: https://regex101.com/r/vd634b/1\n\n    ^(?![0-9]([0-9](?:\\n|(?-1))[0-9]?)$)(?:([0-9]*)(?:0\\N*(?=\\n\\2[1-9])|1\\N*(?=\\n\\2[2-9])|2\\N*(?=\\n\\2[3-9])|3\\N*(?=\\n\\2[4-9])|4\\N*(?=\\n\\2[5-9])|5\\N*(?=\\n\\2[6-9])|6\\N*(?=\\n\\2[7-9])|7\\N*(?=\\n\\2[89])|8\\N*(?=\\n\\2[9]))|(?=([0-9](?:\\n|(?-1))[0-9])[0-9]))\n\nPart
        2: https://regex101.com/r/kFYiy8/1\n\n    ^(?![0-9]([0-9](?:\\n|(?-1))[0-9]?)$)(?:([0-9]*)(?:0\\N*(?=\\n\\N+\\n\\N+\\n\\2[1-9])|1\\N*(?=\\n\\N+\\n\\N+\\n\\2[2-9])|2\\N*(?=\\n\\N+\\n\\N+\\n\\2[3-9])|3\\N*(?=\\n\\N+\\n\\N+\\n\\2[4-9])|4\\N*(?=\\n\\N+\\n\\N+\\n\\2[5-9])|5\\N*(?=\\n\\N+\\n\\N+\\n\\2[6-9])|6\\N*(?=\\n\\N+\\n\\N+\\n\\2[7-9])|7\\N*(?=\\n\\N+\\n\\N+\\n\\2[89])|8\\N*(?=\\n\\N+\\n\\N+\\n\\2[9]))|(?=([0-9](?:\\n\\N+\\n\\N+\\n|(?-1))[0-9])[0-9]))",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hms71zn",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Regex&lt;/h1&gt;\n\n&lt;p&gt;Regex
        advent of code, let&amp;#39;s go. Count number of matches.&lt;/p&gt;\n\n&lt;p&gt;Part
        1: &lt;a href=\"https://regex101.com/r/vd634b/1\"&gt;https://regex101.com/r/vd634b/1&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;^(?![0-9]([0-9](?:\\n|(?-1))[0-9]?)$)(?:([0-9]*)(?:0\\N*(?=\\n\\2[1-9])|1\\N*(?=\\n\\2[2-9])|2\\N*(?=\\n\\2[3-9])|3\\N*(?=\\n\\2[4-9])|4\\N*(?=\\n\\2[5-9])|5\\N*(?=\\n\\2[6-9])|6\\N*(?=\\n\\2[7-9])|7\\N*(?=\\n\\2[89])|8\\N*(?=\\n\\2[9]))|(?=([0-9](?:\\n|(?-1))[0-9])[0-9]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2: &lt;a href=\"https://regex101.com/r/kFYiy8/1\"&gt;https://regex101.com/r/kFYiy8/1&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;^(?![0-9]([0-9](?:\\n|(?-1))[0-9]?)$)(?:([0-9]*)(?:0\\N*(?=\\n\\N+\\n\\N+\\n\\2[1-9])|1\\N*(?=\\n\\N+\\n\\N+\\n\\2[2-9])|2\\N*(?=\\n\\N+\\n\\N+\\n\\2[3-9])|3\\N*(?=\\n\\N+\\n\\N+\\n\\2[4-9])|4\\N*(?=\\n\\N+\\n\\N+\\n\\2[5-9])|5\\N*(?=\\n\\N+\\n\\N+\\n\\2[6-9])|6\\N*(?=\\n\\N+\\n\\N+\\n\\2[7-9])|7\\N*(?=\\n\\N+\\n\\N+\\n\\2[89])|8\\N*(?=\\n\\N+\\n\\N+\\n\\2[9]))|(?=([0-9](?:\\n\\N+\\n\\N+\\n|(?-1))[0-9])[0-9]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms71zn/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638356483.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638356483.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 24}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmubspv", "id": "hmubspv", "parent_id":
        "t1_hms71zn", "depth": 1, "children": ["hmubspv", "hmt16xw", "hmw2ain", "hmsvgf7"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 22, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrxlvv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "3urny",
        "can_mod_post": false, "created_utc": 1638348395.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 22, "author_fullname": "t2_99yj8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Brainfuck (infinite cell size)\n\n\n    &gt;&gt;&gt;,[&gt;&gt;+&lt;&lt;----------[&gt;&gt;-&lt;++++++[-&lt;------&gt;]&lt;--&lt;\n    [-&gt;&gt;+&lt;&lt;]&gt;&gt;[-&lt;&lt;++++++++++&gt;&gt;]&lt;[-&lt;+&gt;]]&gt;&gt;[-&gt;&gt;]&lt;&lt;,]\n    &lt;&lt;&lt;[[-&gt;&gt;&gt;+&gt;+&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;[-&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;]&lt;&lt;+&gt;+&gt;&gt;+&lt;&lt;[-&lt;\n    -[&lt;]&gt;&gt;]&gt;[-]&gt;[-&gt;&gt;&gt;+&lt;&lt;]&lt;&lt;&lt;[-]&lt;[-]&gt;&gt;&gt;&gt;&gt;&gt;[-&lt;&lt;+&gt;&gt;]&lt;\n    &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;[-]&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-]&gt;[-]+&gt;[-]+&lt;[&gt;[-&lt;-&lt;&lt;[-\n    &gt;+&gt;+&lt;&lt;]&gt;[-&lt;+&gt;]&gt;&gt;]++++++++++&gt;[-]+&gt;[-]&gt;[-]&gt;[-]&lt;&lt;\n    &lt;&lt;&lt;[-&gt;-[&gt;+&gt;&gt;]&gt;[[-&lt;+&gt;]+&gt;+&gt;&gt;]&lt;&lt;&lt;&lt;&lt;]&gt;&gt;-[-&lt;&lt;+&gt;&gt;]&lt;[\n    -]++++++++[-&lt;++++++&gt;]&gt;&gt;[-&lt;&lt;+&gt;&gt;]&lt;&lt;]&lt;[.[-]&lt;]&lt;[-]",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Brainfuck (infinite
        cell size)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;,[&amp;gt;&amp;gt;+&amp;lt;&amp;lt;----------[&amp;gt;&amp;gt;-&amp;lt;++++++[-&amp;lt;------&amp;gt;]&amp;lt;--&amp;lt;\n[-&amp;gt;&amp;gt;+&amp;lt;&amp;lt;]&amp;gt;&amp;gt;[-&amp;lt;&amp;lt;++++++++++&amp;gt;&amp;gt;]&amp;lt;[-&amp;lt;+&amp;gt;]]&amp;gt;&amp;gt;[-&amp;gt;&amp;gt;]&amp;lt;&amp;lt;,]\n&amp;lt;&amp;lt;&amp;lt;[[-&amp;gt;&amp;gt;&amp;gt;+&amp;gt;+&amp;lt;&amp;lt;&amp;lt;&amp;lt;]&amp;gt;&amp;gt;&amp;gt;&amp;gt;[-&amp;lt;&amp;lt;&amp;lt;&amp;lt;+&amp;gt;&amp;gt;&amp;gt;&amp;gt;]&amp;lt;&amp;lt;+&amp;gt;+&amp;gt;&amp;gt;+&amp;lt;&amp;lt;[-&amp;lt;\n-[&amp;lt;]&amp;gt;&amp;gt;]&amp;gt;[-]&amp;gt;[-&amp;gt;&amp;gt;&amp;gt;+&amp;lt;&amp;lt;]&amp;lt;&amp;lt;&amp;lt;[-]&amp;lt;[-]&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;[-&amp;lt;&amp;lt;+&amp;gt;&amp;gt;]&amp;lt;\n&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;]&amp;gt;&amp;gt;[-]&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;[-]&amp;gt;[-]+&amp;gt;[-]+&amp;lt;[&amp;gt;[-&amp;lt;-&amp;lt;&amp;lt;[-\n&amp;gt;+&amp;gt;+&amp;lt;&amp;lt;]&amp;gt;[-&amp;lt;+&amp;gt;]&amp;gt;&amp;gt;]++++++++++&amp;gt;[-]+&amp;gt;[-]&amp;gt;[-]&amp;gt;[-]&amp;lt;&amp;lt;\n&amp;lt;&amp;lt;&amp;lt;[-&amp;gt;-[&amp;gt;+&amp;gt;&amp;gt;]&amp;gt;[[-&amp;lt;+&amp;gt;]+&amp;gt;+&amp;gt;&amp;gt;]&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;]&amp;gt;&amp;gt;-[-&amp;lt;&amp;lt;+&amp;gt;&amp;gt;]&amp;lt;[\n-]++++++++[-&amp;lt;++++++&amp;gt;]&amp;gt;&amp;gt;[-&amp;lt;&amp;lt;+&amp;gt;&amp;gt;]&amp;lt;&amp;lt;]&amp;lt;[.[-]&amp;lt;]&amp;lt;[-]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrxlvv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrxlvv", "created":
        1638348395.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrzg5h", "id": "hmrzg5h", "parent_id":
        "t1_hmrxlvv", "depth": 1, "children": ["hmrzg5h"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 16, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmul83d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "meMEGAMIND",
        "can_mod_post": false, "created_utc": 1638394727.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 16, "author_fullname": "t2_9afvv8n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My first Advent of Code! My friend just introduced me to it yesterday. She''s
        a novice programmer just trying to get as far as she can!\n\nMe on the other
        hand, well... I can''t code at all. I don''t know any languages. BUT this
        challenge seemed super intriguing! So I decided to use what I know how to
        use: The Desmos graphing calculator. \n\nWe''ll see how for I can get with
        this haha. I''m having fun!\n\nDay 1 Solution:\n\nhttps://www.desmos.com/calculator/ughpqquz4z",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My first Advent of Code!
        My friend just introduced me to it yesterday. She&amp;#39;s a novice programmer
        just trying to get as far as she can!&lt;/p&gt;\n\n&lt;p&gt;Me on the other
        hand, well... I can&amp;#39;t code at all. I don&amp;#39;t know any languages.
        BUT this challenge seemed super intriguing! So I decided to use what I know
        how to use: The Desmos graphing calculator. &lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;ll
        see how for I can get with this haha. I&amp;#39;m having fun!&lt;/p&gt;\n\n&lt;p&gt;Day
        1 Solution:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.desmos.com/calculator/ughpqquz4z\"&gt;https://www.desmos.com/calculator/ughpqquz4z&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmul83d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmul83d", "created":
        1638394727.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmvr34u", "id": "hmvr34u", "parent_id":
        "t1_hmul83d", "depth": 1, "children": ["hmvr34u", "hmwu17y"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 16, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrgvm7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "death",
        "can_mod_post": false, "created_utc": 1638336613.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 16, "author_fullname": "t2_4fr2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Day 1 solution in Common Lisp](https://gist.github.com/death/b11c5c8f03bee2e6f3bd5132ed7418cb)\n\nMy
        initial solutions were the following, but decided to go for a generalized
        solution in the gist.\n\n    (loop for (a b) on input count (and b (&gt; b
        a)))\n    (loop for (a b c d) on input count (and d (&gt; (+ b c d) (+ a b
        c))))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://gist.github.com/death/b11c5c8f03bee2e6f3bd5132ed7418cb\"&gt;Day
        1 solution in Common Lisp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My initial solutions
        were the following, but decided to go for a generalized solution in the gist.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(loop
        for (a b) on input count (and b (&amp;gt; b a)))\n(loop for (a b c d) on input
        count (and d (&amp;gt; (+ b c d) (+ a b c))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgvm7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgvm7", "created":
        1638336613.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmscrv2", "id": "hmscrv2", "parent_id":
        "t1_hmrgvm7", "depth": 1, "children": ["hmscrv2", "hmrh91g"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638355638.0, "mod_reason_by": null,
        "banned_by": null, "ups": 14, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms0zky", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jitwit",
        "can_mod_post": false, "created_utc": 1638351313.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 14, "author_fullname": "t2_3widzzz1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[J Programming Language](https://github.com/jitwit/aoc/blob/a/J/21/01.ijs)\n\n    +/
        2 &lt;/\\ in        NB. part A\n    +/ 2 &lt;/\\ 3 +/\\ in  NB. part B\n\nIf
        you''re not familiar with J, here''s the explanation:\n\n* `+` and `&lt;`
        above are addition and less than comparison, as you''d expect.\n* `/` is an
        adverb (or more commonly, operator) called insert that takes its operand and
        creates a verb (function) that reduces over its input. so `+/` sums its argument.\n*
        `\\` is also an adverb called infix that takes a verb and applies it over
        infixes of a certain length of its right argument. So, `+/` is a verb, and
        `3 +/\\ in` gets all the sums over length 3 windows of `in`.  `2 &lt;/\\ in`
        finds all the times the depth increases. And `+/ 2 &lt;/\\ in` totals how
        many times the depth increases.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/jitwit/aoc/blob/a/J/21/01.ijs\"&gt;J
        Programming Language&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;+/ 2 &amp;lt;/\\
        in        NB. part A\n+/ 2 &amp;lt;/\\ 3 +/\\ in  NB. part B\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If
        you&amp;#39;re not familiar with J, here&amp;#39;s the explanation:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;+&lt;/code&gt;
        and &lt;code&gt;&amp;lt;&lt;/code&gt; above are addition and less than comparison,
        as you&amp;#39;d expect.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;/&lt;/code&gt;
        is an adverb (or more commonly, operator) called insert that takes its operand
        and creates a verb (function) that reduces over its input. so &lt;code&gt;+/&lt;/code&gt;
        sums its argument.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;\\&lt;/code&gt; is also
        an adverb called infix that takes a verb and applies it over infixes of a
        certain length of its right argument. So, &lt;code&gt;+/&lt;/code&gt; is a
        verb, and &lt;code&gt;3 +/\\ in&lt;/code&gt; gets all the sums over length
        3 windows of &lt;code&gt;in&lt;/code&gt;.  &lt;code&gt;2 &amp;lt;/\\ in&lt;/code&gt;
        finds all the times the depth increases. And &lt;code&gt;+/ 2 &amp;lt;/\\
        in&lt;/code&gt; totals how many times the depth increases.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms0zky/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms0zky", "created":
        1638351313.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmt0fnr", "id": "hmt0fnr", "parent_id":
        "t1_hms0zky", "depth": 1, "children": ["hmt0fnr", "hmskdlr"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638364122.0, "mod_reason_by": null,
        "banned_by": null, "ups": 14, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrj6qy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "4HbQ",
        "can_mod_post": false, "created_utc": 1638337982.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 14, "author_fullname": "t2_55chxi28", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**, golfed to 70 bytes:\n\n    x = [*map(int, open(0))]\n    for
        n in 1, 3: print(sum(map(int.__lt__, x, x[n:])))\n\nThe trick for part two
        (comparing `x[i:i+3]` to `x[i+1:i+4]`) is that we only need to compare `x[i]`
        with `x[i+3]`, because values for `x[i+1]` and `x[i+2]` are shared by both
        windows:\n\n    window 1: 0 1 2\n    window 2:   1 2 3", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;, golfed to 70
        bytes:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;x = [*map(int, open(0))]\nfor n
        in 1, 3: print(sum(map(int.__lt__, x, x[n:])))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The
        trick for part two (comparing &lt;code&gt;x[i:i+3]&lt;/code&gt; to &lt;code&gt;x[i+1:i+4]&lt;/code&gt;)
        is that we only need to compare &lt;code&gt;x[i]&lt;/code&gt; with &lt;code&gt;x[i+3]&lt;/code&gt;,
        because values for &lt;code&gt;x[i+1]&lt;/code&gt; and &lt;code&gt;x[i+2]&lt;/code&gt;
        are shared by both windows:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;window 1:
        0 1 2\nwindow 2:   1 2 3\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrj6qy/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrj6qy", "created": 1638337982.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_hmrl5ex", "id": "hmrl5ex", "parent_id": "t1_hmrj6qy", "depth": 1, "children":
        ["hmrl5ex", "hmvt6y4", "hmtw1jj"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 12,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsnco5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Tails8521",
        "can_mod_post": false, "created_utc": 1638366795.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 12, "author_fullname": "t2_nf330", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Motorola 68000 assembly (On a Sega MegaDrive)**\n\n    **************************************\n    *
        variables:\n    * a0: pointer to writeable memory for part2\n    * a1: pointer
        to the start of writeable memory for part2\n    * a2: pointer to input\n    *
        a3: pointer to input end\n    * d0: upper word: part1 result, lower word:
        part2 result\n    * d1: current decimal digit for part1, loop counter for
        part2\n    * d2: current value\n    * d3: previous value\n    **************************************\n    \n        .globl
        day1_asm\n    day1_asm:\n        move.l 4(sp), a0\n        move.l a0, a1\n        movem.l
        d2-d3/a2-a3, -(sp)\n        move.l &amp;DAY1_INPUT, a2\n        move.l &amp;DAY1_INPUT_END
        - 1, a3\n        moveq #0, d0\n        moveq #0, d1\n        moveq #0xFFFFFFFF,
        d3\n    read_line:\n        cmp.l a2, a3 // have we reached the end of the
        input?\n        bls.s part2 // if so, branch\n        moveq #0, d2\n    read_char:\n        move.b
        (a2)+, d1 // read input\n        cmp.b #''\\n'', d1 // have we reached the
        end of the line?\n        beq.s done_line // if so, branch\n        sub.b
        #''0'', d1 // convert from ascii to digit\n        mulu.w #10, d2 // decimal
        shift\n        add.w d1, d2 // add the digit to the current value\n        bra.s
        read_char // read next char\n    done_line:\n        move.w d2, (a0)+ // store
        the number we read for part2\n        cmp.w d3, d2 // has the measurment increased?\n        bls.s
        not_increased\n        addq.w #1, d0\n    not_increased:\n        move.w d2,
        d3 // previous = current\n        bra.s read_line\n    \n    part2:\n        moveq
        #0xFFFFFFFF, d3\n        sub.l a1, a0 // how much many values have we stored?
        (*2 because we store them as words)\n        move.l a0, d1\n        lsr.w
        #1, d1 // we divide by 2 to get the value count\n        subq.w #3, d1 //
        minus 2 iterations because of the sliding window of 3, minus 1 because of
        dbf loop\n        swap d0 // stash part1 result in the upper word of d0\n    loop:\n        move.w
        (a1)+, d2\n        add.w (a1), d2\n        add.w 2(a1), d2\n        cmp.w
        d3, d2 // has the measurment increased?\n        bls.s window_not_increased\n        addq.w
        #1, d0\n    window_not_increased:\n        move.w d2, d3 // previous = current\n        dbf
        d1, loop\n        movem.l (sp)+, d2-d3/a2-a3\n        rts\n    \nNot gonna
        bother optimizing it to O(1) memory usage, it fits easily in the 64KB of the
        Sega MegaDrive as it is.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Motorola
        68000 assembly (On a Sega MegaDrive)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;**************************************\n*
        variables:\n* a0: pointer to writeable memory for part2\n* a1: pointer to
        the start of writeable memory for part2\n* a2: pointer to input\n* a3: pointer
        to input end\n* d0: upper word: part1 result, lower word: part2 result\n*
        d1: current decimal digit for part1, loop counter for part2\n* d2: current
        value\n* d3: previous value\n**************************************\n\n    .globl
        day1_asm\nday1_asm:\n    move.l 4(sp), a0\n    move.l a0, a1\n    movem.l
        d2-d3/a2-a3, -(sp)\n    move.l &amp;amp;DAY1_INPUT, a2\n    move.l &amp;amp;DAY1_INPUT_END
        - 1, a3\n    moveq #0, d0\n    moveq #0, d1\n    moveq #0xFFFFFFFF, d3\nread_line:\n    cmp.l
        a2, a3 // have we reached the end of the input?\n    bls.s part2 // if so,
        branch\n    moveq #0, d2\nread_char:\n    move.b (a2)+, d1 // read input\n    cmp.b
        #&amp;#39;\\n&amp;#39;, d1 // have we reached the end of the line?\n    beq.s
        done_line // if so, branch\n    sub.b #&amp;#39;0&amp;#39;, d1 // convert
        from ascii to digit\n    mulu.w #10, d2 // decimal shift\n    add.w d1, d2
        // add the digit to the current value\n    bra.s read_char // read next char\ndone_line:\n    move.w
        d2, (a0)+ // store the number we read for part2\n    cmp.w d3, d2 // has the
        measurment increased?\n    bls.s not_increased\n    addq.w #1, d0\nnot_increased:\n    move.w
        d2, d3 // previous = current\n    bra.s read_line\n\npart2:\n    moveq #0xFFFFFFFF,
        d3\n    sub.l a1, a0 // how much many values have we stored? (*2 because we
        store them as words)\n    move.l a0, d1\n    lsr.w #1, d1 // we divide by
        2 to get the value count\n    subq.w #3, d1 // minus 2 iterations because
        of the sliding window of 3, minus 1 because of dbf loop\n    swap d0 // stash
        part1 result in the upper word of d0\nloop:\n    move.w (a1)+, d2\n    add.w
        (a1), d2\n    add.w 2(a1), d2\n    cmp.w d3, d2 // has the measurment increased?\n    bls.s
        window_not_increased\n    addq.w #1, d0\nwindow_not_increased:\n    move.w
        d2, d3 // previous = current\n    dbf d1, loop\n    movem.l (sp)+, d2-d3/a2-a3\n    rts\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Not
        gonna bother optimizing it to O(1) memory usage, it fits easily in the 64KB
        of the Sega MegaDrive as it is.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsnco5/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsnco5", "created": 1638366795.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmswu8d", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "thedjotaku", "can_mod_post": false, "created_utc":
        1638371187.0, "send_replies": true, "parent_id": "t1_hmsnco5", "score": 5,
        "author_fullname": "t2_d7b8t", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "What does Sonic think of
        your solution?", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What
        does Sonic think of your solution?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmswu8d/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmswu8d", "created": 1638371187.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_hmsxn3d", "id": "hmsxn3d", "parent_id": "t1_hmswu8d", "depth": 2, "children":
        ["hmsxn3d"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 12, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrjeyk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "emilhvitfeldt",
        "can_mod_post": false, "created_utc": 1638338119.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 12, "author_fullname": "t2_f8r5r5ep", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "R\n\nThis problem fits perfectly into what R is good at. Native diff function
        with lag functionality\n\n    input &lt;- readLines(\"2021/01-input\") |&gt;\n      as.numeric()\n    \n    #
        Part 1\n    sum(diff(input) &gt; 0)\n    \n    # Part 2\n    sum(diff(input,
        lag = 3) &gt; 0)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;R&lt;/p&gt;\n\n&lt;p&gt;This
        problem fits perfectly into what R is good at. Native diff function with lag
        functionality&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input &amp;lt;- readLines(&amp;quot;2021/01-input&amp;quot;)
        |&amp;gt;\n  as.numeric()\n\n# Part 1\nsum(diff(input) &amp;gt; 0)\n\n# Part
        2\nsum(diff(input, lag = 3) &amp;gt; 0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrjeyk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrjeyk", "created":
        1638338119.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmum9e8", "id": "hmum9e8", "parent_id":
        "t1_hmrjeyk", "depth": 1, "children": ["hmum9e8", "hmrmh0s", "hmrns4u", "hmroqrn"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638339848.0,
        "mod_reason_by": null, "banned_by": null, "ups": 12, "num_reports": null,
        "author_flair_type": "text", "total_awards_received": 0, "subreddit": "adventofcode",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "hmrk76v", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        false, "author": "jaybosamiya", "can_mod_post": false, "created_utc": 1638338599.0,
        "send_replies": true, "parent_id": "t3_r66vow", "score": 12, "author_fullname":
        "t2_12wctb", "report_reasons": null, "approved_by": null, "all_awardings":
        [], "collapsed": false, "body": "APL solutions today are quite pleasing:\n\n    n
        \u2190 \u234e\u00a8\u2283\u2395nget''D:\\input_day_1''1\n\n    +/1\u2193\u233dn&lt;1\u233dn\n    +/3\u2193\u233dn&lt;3\u233dn\n\nExplanation:\n\nFirst
        line of code simply grabs the input file and parses as an array of integers,
        and stores it into the variable `n`. Next line solves part 1, and the next
        part 2\n\nBoth parts have a very similar solution, so let''s look at part
        1 first.\n\nIt is best read from right to left, so let''s start there: take
        the input `n` and rotate it once `1\u233dn` (changing `a b c d e` to `e a
        b c d`); this gives us a new array that we can perform a pairwise less-than
        comparison `n &lt; 1\u233dn` to obtain an array of bits. We then flip the
        whole array around (using the `\u233d`: changes `a b c d` to `d c b a`), so
        that the first element becomes last, and vice-versa. Then we drop the first
        bit (previously last bit) using `1\u2193` since it is an extraneous comparison
        (in the challenge, this would mean comparing the first element against the
        last element; and since we don''t have a circular buffer, we don''t care for
        this). Finally, we simply take the sum over these bits using `+/`; since APL
        represents bits as integers, this is equivalent to counting the number of
        1 bits. Putting this all together, we get the APL program `+/1\u2193\u233dn&lt;1\u233dn`\n\nNow
        for part 2, it is important to recognize that the summing stuff is irrelevant.
        In particular, the sum of 3 numbers `b + c + d` is greater than the sum `a
        + b + c` if and only if `a &lt; d`, so we simply need to look at windows of
        size 4, rather than windows of size 2 like before. This means that our rotation
        and dropping counts just change from `1` to `3`, and we obtain the expected
        result with only 2 bytes changed from the previous solution", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;APL solutions today are quite pleasing:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;n
        \u2190 \u234e\u00a8\u2283\u2395nget&amp;#39;D:\\input_day_1&amp;#39;1\n\n+/1\u2193\u233dn&amp;lt;1\u233dn\n+/3\u2193\u233dn&amp;lt;3\u233dn\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Explanation:&lt;/p&gt;\n\n&lt;p&gt;First
        line of code simply grabs the input file and parses as an array of integers,
        and stores it into the variable &lt;code&gt;n&lt;/code&gt;. Next line solves
        part 1, and the next part 2&lt;/p&gt;\n\n&lt;p&gt;Both parts have a very similar
        solution, so let&amp;#39;s look at part 1 first.&lt;/p&gt;\n\n&lt;p&gt;It
        is best read from right to left, so let&amp;#39;s start there: take the input
        &lt;code&gt;n&lt;/code&gt; and rotate it once &lt;code&gt;1\u233dn&lt;/code&gt;
        (changing &lt;code&gt;a b c d e&lt;/code&gt; to &lt;code&gt;e a b c d&lt;/code&gt;);
        this gives us a new array that we can perform a pairwise less-than comparison
        &lt;code&gt;n &amp;lt; 1\u233dn&lt;/code&gt; to obtain an array of bits. We
        then flip the whole array around (using the &lt;code&gt;\u233d&lt;/code&gt;:
        changes &lt;code&gt;a b c d&lt;/code&gt; to &lt;code&gt;d c b a&lt;/code&gt;),
        so that the first element becomes last, and vice-versa. Then we drop the first
        bit (previously last bit) using &lt;code&gt;1\u2193&lt;/code&gt; since it
        is an extraneous comparison (in the challenge, this would mean comparing the
        first element against the last element; and since we don&amp;#39;t have a
        circular buffer, we don&amp;#39;t care for this). Finally, we simply take
        the sum over these bits using &lt;code&gt;+/&lt;/code&gt;; since APL represents
        bits as integers, this is equivalent to counting the number of 1 bits. Putting
        this all together, we get the APL program &lt;code&gt;+/1\u2193\u233dn&amp;lt;1\u233dn&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Now
        for part 2, it is important to recognize that the summing stuff is irrelevant.
        In particular, the sum of 3 numbers &lt;code&gt;b + c + d&lt;/code&gt; is
        greater than the sum &lt;code&gt;a + b + c&lt;/code&gt; if and only if &lt;code&gt;a
        &amp;lt; d&lt;/code&gt;, so we simply need to look at windows of size 4, rather
        than windows of size 2 like before. This means that our rotation and dropping
        counts just change from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;3&lt;/code&gt;,
        and we obtain the expected result with only 2 bytes changed from the previous
        solution&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrk76v/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrk76v", "created":
        1638338599.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hms3v5m", "id": "hms3v5m", "parent_id":
        "t1_hmrk76v", "depth": 1, "children": ["hms3v5m", "hmwghqm", "hmrl6ff"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 11, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmu0i98", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "GaloisGirl2",
        "can_mod_post": false, "created_utc": 1638386889.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 11, "author_fullname": "t2_9clb1v2f", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# COBOL\n\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID. AOC-2021-01-2.\n       AUTHOR.
        ANNA KOSIERADZKA.\n    \n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT
        SECTION.\n       FILE-CONTROL.\n           SELECT INPUTFILE ASSIGN TO \"d01.input\"\n           ORGANIZATION
        IS LINE SEQUENTIAL.\n    \n       DATA DIVISION.\n    \n       FILE SECTION.\n         FD
        INPUTFILE.\n         01 INPUTRECORD PIC X(4).\n    \n       WORKING-STORAGE
        SECTION.\n         01 FILE-STATUS PIC 9 VALUE 0.\n         01 WS-MEASURE PIC
        9(5).\n         01 WS-PREV-MEASURE PIC 9(5) VALUE 99999.\n         01 WS-CURR
        PIC 9(4) VALUE 9999.\n         01 WS-PREV-1 PIC 9(4) VALUE 9999.\n         01
        WS-PREV-2 PIC 9(4) VALUE 9999.\n         01 WS-PREV-3 PIC 9(4) VALUE 9999.\n         01
        WS-NUM PIC 9(4) VALUE 0.\n    \n       PROCEDURE DIVISION.\n       001-MAIN.\n            OPEN
        INPUT INPUTFILE.\n            PERFORM 002-READ UNTIL FILE-STATUS = 1.\n            CLOSE
        INPUTFILE.\n            DISPLAY WS-NUM.\n            STOP RUN.\n    \n       002-READ.\n            READ
        INPUTFILE\n                AT END MOVE 1 TO FILE-STATUS\n                NOT
        AT END PERFORM 003-PROCESS-RECORD\n            END-READ.\n    \n       003-PROCESS-RECORD.\n           COMPUTE
        WS-CURR = FUNCTION NUMVAL(INPUTRECORD)\n           COMPUTE WS-MEASURE = WS-CURR
        + WS-PREV-MEASURE - WS-PREV-1\n           IF WS-MEASURE &gt; WS-PREV-MEASURE
        THEN\n               ADD 1 TO WS-NUM\n           END-IF\n           COMPUTE
        WS-PREV-MEASURE = WS-MEASURE\n           MOVE WS-PREV-2 TO WS-PREV-1\n           MOVE
        WS-PREV-3 TO WS-PREV-2\n           MOVE WS-CURR TO WS-PREV-3.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;COBOL&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;   IDENTIFICATION
        DIVISION.\n   PROGRAM-ID. AOC-2021-01-2.\n   AUTHOR. ANNA KOSIERADZKA.\n\n   ENVIRONMENT
        DIVISION.\n   INPUT-OUTPUT SECTION.\n   FILE-CONTROL.\n       SELECT INPUTFILE
        ASSIGN TO &amp;quot;d01.input&amp;quot;\n       ORGANIZATION IS LINE SEQUENTIAL.\n\n   DATA
        DIVISION.\n\n   FILE SECTION.\n     FD INPUTFILE.\n     01 INPUTRECORD PIC
        X(4).\n\n   WORKING-STORAGE SECTION.\n     01 FILE-STATUS PIC 9 VALUE 0.\n     01
        WS-MEASURE PIC 9(5).\n     01 WS-PREV-MEASURE PIC 9(5) VALUE 99999.\n     01
        WS-CURR PIC 9(4) VALUE 9999.\n     01 WS-PREV-1 PIC 9(4) VALUE 9999.\n     01
        WS-PREV-2 PIC 9(4) VALUE 9999.\n     01 WS-PREV-3 PIC 9(4) VALUE 9999.\n     01
        WS-NUM PIC 9(4) VALUE 0.\n\n   PROCEDURE DIVISION.\n   001-MAIN.\n        OPEN
        INPUT INPUTFILE.\n        PERFORM 002-READ UNTIL FILE-STATUS = 1.\n        CLOSE
        INPUTFILE.\n        DISPLAY WS-NUM.\n        STOP RUN.\n\n   002-READ.\n        READ
        INPUTFILE\n            AT END MOVE 1 TO FILE-STATUS\n            NOT AT END
        PERFORM 003-PROCESS-RECORD\n        END-READ.\n\n   003-PROCESS-RECORD.\n       COMPUTE
        WS-CURR = FUNCTION NUMVAL(INPUTRECORD)\n       COMPUTE WS-MEASURE = WS-CURR
        + WS-PREV-MEASURE - WS-PREV-1\n       IF WS-MEASURE &amp;gt; WS-PREV-MEASURE
        THEN\n           ADD 1 TO WS-NUM\n       END-IF\n       COMPUTE WS-PREV-MEASURE
        = WS-MEASURE\n       MOVE WS-PREV-2 TO WS-PREV-1\n       MOVE WS-PREV-3 TO
        WS-PREV-2\n       MOVE WS-CURR TO WS-PREV-3.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu0i98/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu0i98", "created":
        1638386889.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmvv0qz", "id": "hmvv0qz", "parent_id":
        "t1_hmu0i98", "depth": 1, "children": ["hmvv0qz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638785306.0, "mod_reason_by": null,
        "banned_by": null, "ups": 11, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmv3vpe", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Chebtis",
        "can_mod_post": false, "created_utc": 1638402494.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 11, "author_fullname": "t2_b83g0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rockstar**\n-\nProbably not doing any other days in this but was fun learning
        it after seeing some others post on here last year.\n\nPart 1: https://codewithrockstar.com/online?source=https://raw.githubusercontent.com/kloo/aoc2021/main/01/1a_2021.rock\n\n    (Dive
        Deeper)\n    My name was everything\n    Listen to my heart\n    Listen to
        your soul\n    Cast my heart\n    \n    While your soul ain''t empty\n    Burn
        your soul\n    If your soul is stronger than my heart\n    Build my name up\n    \n    Let
        my heart be your soul\n    Listen to your soul\n    \n    Shout my name\n\nPart
        2: https://codewithrockstar.com/online?source=https://raw.githubusercontent.com/kloo/aoc2021/main/01/1b_2021.rock",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;&lt;strong&gt;Rockstar&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;p&gt;Probably
        not doing any other days in this but was fun learning it after seeing some
        others post on here last year.&lt;/p&gt;\n\n&lt;p&gt;Part 1: &lt;a href=\"https://codewithrockstar.com/online?source=https://raw.githubusercontent.com/kloo/aoc2021/main/01/1a_2021.rock\"&gt;https://codewithrockstar.com/online?source=https://raw.githubusercontent.com/kloo/aoc2021/main/01/1a_2021.rock&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(Dive
        Deeper)\nMy name was everything\nListen to my heart\nListen to your soul\nCast
        my heart\n\nWhile your soul ain&amp;#39;t empty\nBurn your soul\nIf your soul
        is stronger than my heart\nBuild my name up\n\nLet my heart be your soul\nListen
        to your soul\n\nShout my name\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2: &lt;a href=\"https://codewithrockstar.com/online?source=https://raw.githubusercontent.com/kloo/aoc2021/main/01/1b_2021.rock\"&gt;https://codewithrockstar.com/online?source=https://raw.githubusercontent.com/kloo/aoc2021/main/01/1b_2021.rock&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv3vpe/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv3vpe", "created":
        1638402494.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmvo6vd", "id": "hmvo6vd", "parent_id":
        "t1_hmv3vpe", "depth": 1, "children": ["hmvo6vd"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638338175.0, "mod_reason_by": null,
        "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrh243", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ElCthuluIncognito",
        "can_mod_post": false, "created_utc": 1638336719.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 10, "author_fullname": "t2_obwsu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Haskell (Part 2)\n\nAnyone else realize that for part two you just had
        to compare every value with the one 3 indexes ahead? \n\ni.e. compare 0 to
        3, 1 to 4, 2 to 5, and so on, counting the number of times the latter value
        is higher.\n\nThe idea is that the middle two values of any two consecutive
        windows is shared between the windows, effectively nullifying them in the
        comparison.\n\n    countWindowIncreases :: [Int] -&gt; Int\n    countWindowIncreases
        (x:rest@(_:_:y:_)) = (if x &lt; y then 1 else 0) + countWindowIncreases rest\n    countWindowIncreases
        _ = 0\n\nEdit: The solutions that zip against the truncated list (e.g. `zipWith
        (&lt;) xs (drop 3 xs)`) are much more elegant! Hopefully at least mine has
        the value of showing off the pattern matching of Haskell.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Haskell (Part 2)&lt;/h1&gt;\n\n&lt;p&gt;Anyone
        else realize that for part two you just had to compare every value with the
        one 3 indexes ahead? &lt;/p&gt;\n\n&lt;p&gt;i.e. compare 0 to 3, 1 to 4, 2
        to 5, and so on, counting the number of times the latter value is higher.&lt;/p&gt;\n\n&lt;p&gt;The
        idea is that the middle two values of any two consecutive windows is shared
        between the windows, effectively nullifying them in the comparison.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;countWindowIncreases
        :: [Int] -&amp;gt; Int\ncountWindowIncreases (x:rest@(_:_:y:_)) = (if x &amp;lt;
        y then 1 else 0) + countWindowIncreases rest\ncountWindowIncreases _ = 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit:
        The solutions that zip against the truncated list (e.g. &lt;code&gt;zipWith
        (&amp;lt;) xs (drop 3 xs)&lt;/code&gt;) are much more elegant! Hopefully at
        least mine has the value of showing off the pattern matching of Haskell.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrh243/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrh243", "created":
        1638336719.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmri6d4", "id": "hmri6d4", "parent_id":
        "t1_hmrh243", "depth": 1, "children": ["hmri6d4", "hmrhev5", "hmrh718"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638365681.0,
        "mod_reason_by": null, "banned_by": null, "ups": 11, "num_reports": null,
        "author_flair_type": "text", "total_awards_received": 0, "subreddit": "adventofcode",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "hmrhicm", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        false, "author": "miran1", "can_mod_post": false, "created_utc": 1638336977.0,
        "send_replies": true, "parent_id": "t3_r66vow", "score": 11, "author_fullname":
        "t2_5nuj7", "report_reasons": null, "approved_by": null, "all_awardings":
        [], "collapsed": false, "body": "## Python, one-liner for both parts:\n\n    solve
        = lambda data, diff: sum(b &gt; a for a, b in zip(data, data[diff:]))\n\n    print(solve(data,
        1))\n    print(solve(data, 3))\n\n\nRepo: https://github.com/narimiran/AdventOfCode2021",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Python, one-liner for
        both parts:&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;solve = lambda data, diff:
        sum(b &amp;gt; a for a, b in zip(data, data[diff:]))\n\nprint(solve(data,
        1))\nprint(solve(data, 3))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Repo: &lt;a
        href=\"https://github.com/narimiran/AdventOfCode2021\"&gt;https://github.com/narimiran/AdventOfCode2021&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhicm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrhicm", "created":
        1638336977.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmtc29y", "id": "hmtc29y", "parent_id":
        "t1_hmrhicm", "depth": 1, "children": ["hmtc29y", "hmrlysr"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 10, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtn3k2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ActualRealBuckshot",
        "can_mod_post": false, "created_utc": 1638381722.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 10, "author_fullname": "t2_2n4x0hlt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python and numpy one liners without any messy functions.  \n\n\n    import
        numpy\n    data = numpy.loadtxt(\"input.txt\")\n    \n    part1 = numpy.sum(data[1:]
        &gt; data[:-1])\n    \n    part2 = numpy.sum(data[3:] &gt; data[:-3])", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python and numpy one liners without any
        messy functions.  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import numpy\ndata
        = numpy.loadtxt(&amp;quot;input.txt&amp;quot;)\n\npart1 = numpy.sum(data[1:]
        &amp;gt; data[:-1])\n\npart2 = numpy.sum(data[3:] &amp;gt; data[:-3])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtn3k2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtn3k2", "created":
        1638381722.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmtrudw", "id": "hmtrudw", "parent_id":
        "t1_hmtn3k2", "depth": 1, "children": ["hmtrudw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 11, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfnhv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "minikomi",
        "can_mod_post": false, "created_utc": 1638335943.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 11, "author_fullname": "t2_4mffb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Clojure\n\n    (defn advent-1 [vs]\n      (-&gt;&gt; vs\n           (partition
        2 1)\n           (filter #(apply &lt; %))\n           (count)))\n    \n    (defn
        advent-2 [vs]\n      (-&gt;&gt; vs\n           (partition 3 1)\n           (map
        #(apply + %))\n           (advent-1)))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Clojure&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn
        advent-1 [vs]\n  (-&amp;gt;&amp;gt; vs\n       (partition 2 1)\n       (filter
        #(apply &amp;lt; %))\n       (count)))\n\n(defn advent-2 [vs]\n  (-&amp;gt;&amp;gt;
        vs\n       (partition 3 1)\n       (map #(apply + %))\n       (advent-1)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfnhv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfnhv", "created":
        1638335943.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrgnog", "id": "hmrgnog", "parent_id":
        "t1_hmrfnhv", "depth": 1, "children": ["hmrgnog"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638432546.0, "mod_reason_by": null,
        "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsgevw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "polroskam",
        "can_mod_post": false, "created_utc": 1638363032.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 10, "author_fullname": "t2_2404xo7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Python solution using Pandas Series\n\n    # Part 1\n    (input &gt; input.shift()).sum()\n\n    #
        Part 2\n    rolling = input.rolling(3).sum()\n    (rolling &gt; rolling.shift()).sum()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Python solution using
        Pandas Series&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Part 1\n(input &amp;gt;
        input.shift()).sum()\n\n# Part 2\nrolling = input.rolling(3).sum()\n(rolling
        &amp;gt; rolling.shift()).sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsgevw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsgevw", "created":
        1638363032.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmw1bmn", "id": "hmw1bmn", "parent_id":
        "t1_hmsgevw", "depth": 1, "children": ["hmw1bmn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 11, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtn1lr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Iain_benson",
        "can_mod_post": false, "created_utc": 1638381700.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 11, "author_fullname": "t2_agj1i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Excel\n\nWith the data pasted the data into row 2 onwards, the following
        formulae work for parts 1 &amp; 2 respectively\n\n    =SUMPRODUCT((INDIRECT(\"A3:A\"&amp;COUNT(A:A)+1)&gt;INDIRECT(\"A2:A\"&amp;COUNT(A:A)))*1)\n    =SUMPRODUCT((INDIRECT(\"A5:A\"&amp;COUNT(A:A)+1)&gt;INDIRECT(\"A2:A\"&amp;COUNT(A:A)-2))*1)\n\nPart
        2 is taking advantage of the fact that `B+C+D &gt; A+B+C = D &gt; A`, which
        simplifies the problem quite considerably.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Excel&lt;/h1&gt;\n\n&lt;p&gt;With the data pasted
        the data into row 2 onwards, the following formulae work for parts 1 &amp;amp;
        2 respectively&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=SUMPRODUCT((INDIRECT(&amp;quot;A3:A&amp;quot;&amp;amp;COUNT(A:A)+1)&amp;gt;INDIRECT(&amp;quot;A2:A&amp;quot;&amp;amp;COUNT(A:A)))*1)\n=SUMPRODUCT((INDIRECT(&amp;quot;A5:A&amp;quot;&amp;amp;COUNT(A:A)+1)&amp;gt;INDIRECT(&amp;quot;A2:A&amp;quot;&amp;amp;COUNT(A:A)-2))*1)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 is taking advantage of the fact that &lt;code&gt;B+C+D &amp;gt; A+B+C =
        D &amp;gt; A&lt;/code&gt;, which simplifies the problem quite considerably.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtn1lr/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtn1lr", "created":
        1638381700.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638390710.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrhxzz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "schubart",
        "can_mod_post": false, "created_utc": 1638337232.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_1wqt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\n    use itertools::Itertools;\n\n    pub fn part1() -&gt; usize
        {\n        include_str!(\"input.txt\")\n            .lines()\n            .map(|l|
        l.parse::&lt;i32&gt;().unwrap())\n            .tuple_windows()\n            .filter(|(x,
        y)| x &lt; y)\n            .count()\n    }\n\n    pub fn part2() -&gt; usize
        {\n        include_str!(\"input.txt\")\n            .lines()\n            .map(|l|
        l.parse::&lt;i32&gt;().unwrap())\n            .tuple_windows()\n            .map(|(x1,
        x2, x3)| x1 + x2 + x3)\n            .tuple_windows()\n            .filter(|(x,
        y)| x &lt; y)\n            .count()\n    }\n\n[GitHub](https://github.com/schubart/AdventOfCode_2021_Rust/blob/master/day01/src/lib.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        itertools::Itertools;\n\npub fn part1() -&amp;gt; usize {\n    include_str!(&amp;quot;input.txt&amp;quot;)\n        .lines()\n        .map(|l|
        l.parse::&amp;lt;i32&amp;gt;().unwrap())\n        .tuple_windows()\n        .filter(|(x,
        y)| x &amp;lt; y)\n        .count()\n}\n\npub fn part2() -&amp;gt; usize {\n    include_str!(&amp;quot;input.txt&amp;quot;)\n        .lines()\n        .map(|l|
        l.parse::&amp;lt;i32&amp;gt;().unwrap())\n        .tuple_windows()\n        .map(|(x1,
        x2, x3)| x1 + x2 + x3)\n        .tuple_windows()\n        .filter(|(x, y)|
        x &amp;lt; y)\n        .count()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/schubart/AdventOfCode_2021_Rust/blob/master/day01/src/lib.rs\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhxzz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrhxzz", "created":
        1638337232.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638347117.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrj83e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "schubart",
        "can_mod_post": false, "created_utc": 1638338004.0, "send_replies": true,
        "parent_id": "t1_hmrhxzz", "score": 6, "author_fullname": "t2_1wqt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Without `itertools`:\n\n    pub fn part1() -&gt; usize {\n        let numbers:
        Vec&lt;i32&gt; = include_str!(\"input.txt\")\n            .lines()\n            .map(|l|
        l.parse().unwrap())\n            .collect();\n\n        numbers.windows(2)\n            .filter(|pair|
        pair[0] &lt; pair[1])\n            .count()\n    }\n\n    pub fn part2() -&gt;
        usize {\n        let numbers: Vec&lt;i32&gt; = include_str!(\"input.txt\")\n            .lines()\n            .map(|l|
        l.parse().unwrap())\n            .collect();\n\n        let sums: Vec&lt;i32&gt;
        = numbers.windows(3)\n            .map(|triple| triple.iter().sum())\n            .collect();\n\n        sums.windows(2)\n            .filter(|pair|
        pair[0] &lt; pair[1])\n            .count()\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Without &lt;code&gt;itertools&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn part1() -&amp;gt; usize {\n    let numbers: Vec&amp;lt;i32&amp;gt; = include_str!(&amp;quot;input.txt&amp;quot;)\n        .lines()\n        .map(|l|
        l.parse().unwrap())\n        .collect();\n\n    numbers.windows(2)\n        .filter(|pair|
        pair[0] &amp;lt; pair[1])\n        .count()\n}\n\npub fn part2() -&amp;gt;
        usize {\n    let numbers: Vec&amp;lt;i32&amp;gt; = include_str!(&amp;quot;input.txt&amp;quot;)\n        .lines()\n        .map(|l|
        l.parse().unwrap())\n        .collect();\n\n    let sums: Vec&amp;lt;i32&amp;gt;
        = numbers.windows(3)\n        .map(|triple| triple.iter().sum())\n        .collect();\n\n    sums.windows(2)\n        .filter(|pair|
        pair[0] &amp;lt; pair[1])\n        .count()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrj83e/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrj83e", "created":
        1638338004.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmtr0y9", "id": "hmtr0y9", "parent_id":
        "t1_hmrj83e", "depth": 2, "children": ["hmtr0y9"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_hmri2j1", "id": "hmri2j1", "parent_id": "t1_hmrhxzz",
        "depth": 1, "children": ["hmri2j1"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 9,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrl3xc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "reddit_clone",
        "can_mod_post": false, "created_utc": 1638339178.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 9, "author_fullname": "t2_1a39v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Common Lisp**\n\n    (defun load-int-list-from-file(filename)\n      (with-open-file
        (in filename :direction :input)\n        (loop :for line := (read-line in
        nil)\n              :while line\n              :collect (parse-number:parse-number
        line ))))\n\n    (defun solution-1-1 (input-file)\n      (let ((vals (load-int-list-from-file
        input-file)))\n        (count-if #''(lambda (l) (&lt; (first l) (second l)))\n                  (mapcar
        #''list vals (cdr vals)))))\n\n    (defun solution-1-2 (input-file)\n      (let*
        ((vals (load-int-list-from-file input-file))\n             (sliding-sums (map
        ''list  #''(lambda (l)\n                                           (reduce
        ''+ l))\n                       (mapcar #''list vals (cdr vals) (cddr vals)))))\n        (count-if
        #''(lambda (l)\n                      (&lt; (first l) (second l)))\n                  (mapcar
        #''list sliding-sums (cdr sliding-sums)))))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Common Lisp&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        load-int-list-from-file(filename)\n  (with-open-file (in filename :direction
        :input)\n    (loop :for line := (read-line in nil)\n          :while line\n          :collect
        (parse-number:parse-number line ))))\n\n(defun solution-1-1 (input-file)\n  (let
        ((vals (load-int-list-from-file input-file)))\n    (count-if #&amp;#39;(lambda
        (l) (&amp;lt; (first l) (second l)))\n              (mapcar #&amp;#39;list
        vals (cdr vals)))))\n\n(defun solution-1-2 (input-file)\n  (let* ((vals (load-int-list-from-file
        input-file))\n         (sliding-sums (map &amp;#39;list  #&amp;#39;(lambda
        (l)\n                                       (reduce &amp;#39;+ l))\n                   (mapcar
        #&amp;#39;list vals (cdr vals) (cddr vals)))))\n    (count-if #&amp;#39;(lambda
        (l)\n                  (&amp;lt; (first l) (second l)))\n              (mapcar
        #&amp;#39;list sliding-sums (cdr sliding-sums)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrl3xc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrl3xc", "created":
        1638339178.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmrlzzw", "id": "hmrlzzw", "parent_id":
        "t1_hmrl3xc", "depth": 1, "children": ["hmrlzzw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638351908.0, "mod_reason_by": null,
        "banned_by": null, "ups": 9, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrortj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "pietroppeter",
        "can_mod_post": false, "created_utc": 1638341597.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 9, "author_fullname": "t2_2bv71fdp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\ud83c\udf84\ud83d\udc51 **Nim**\n\nblogging about a nim solution and trying
        (unsuccesfully - hopefully will fix later; **edit**: viz fixed) to make a
        visualization:\n\n[**https://pietroppeter.github.io/adventofnim/2021/day01.html**](https://pietroppeter.github.io/adventofnim/2021/day01.html)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;\ud83c\udf84\ud83d\udc51
        &lt;strong&gt;Nim&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;blogging about a nim
        solution and trying (unsuccesfully - hopefully will fix later; &lt;strong&gt;edit&lt;/strong&gt;:
        viz fixed) to make a visualization:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pietroppeter.github.io/adventofnim/2021/day01.html\"&gt;&lt;strong&gt;https://pietroppeter.github.io/adventofnim/2021/day01.html&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrortj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrortj", "created":
        1638341597.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmvbm0e", "id": "hmvbm0e", "parent_id":
        "t1_hmrortj", "depth": 1, "children": ["hmvbm0e"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms04pa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jayfoad",
        "can_mod_post": false, "created_utc": 1638350556.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 9, "author_fullname": "t2_2vxcy8d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[**Dyalog APL**](https://github.com/jayfoad/aoc2021apl/blob/main/p1.dyalog)\n\n    p\u2190\u234e\u00a8\u2283\u2395NGET''p1.txt''1\n    +/2&lt;/p
        \u235d day 1\n    +/2&lt;/3+/p \u235d day 2", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/jayfoad/aoc2021apl/blob/main/p1.dyalog\"&gt;&lt;strong&gt;Dyalog
        APL&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p\u2190\u234e\u00a8\u2283\u2395NGET&amp;#39;p1.txt&amp;#39;1\n+/2&amp;lt;/p
        \u235d day 1\n+/2&amp;lt;/3+/p \u235d day 2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms04pa/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms04pa", "created":
        1638350556.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hms8zrp", "id": "hms8zrp", "parent_id":
        "t1_hms04pa", "depth": 1, "children": ["hms8zrp"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsbm15",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Groentekroket",
        "can_mod_post": false, "created_utc": 1638359911.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 9, "author_fullname": "t2_13776w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Easy start, wonder how far I will come this year:\n\n    #Python 3.9.7 -
        20211201 - AoC Day 1 \n    \n    #Both stars\n    \n    with open(\"input.txt\")
        as f:\n    \u00a0 \u00a0 input = [int(x) for x in f.read().split(\"\\n\")[:-1]]\n    print(\"Answer
        1:\", len([x for x in range(1, len(input)) if input[x-1] &lt; input[x]]))\n    print(\"Answer
        2:\", len([x for x in range(3, len(input)) if sum(input[x-3:x]) &lt; sum(input[x-2:x+1])]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Easy start, wonder how
        far I will come this year:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#Python 3.9.7
        - 20211201 - AoC Day 1 \n\n#Both stars\n\nwith open(&amp;quot;input.txt&amp;quot;)
        as f:\n\u00a0 \u00a0 input = [int(x) for x in f.read().split(&amp;quot;\\n&amp;quot;)[:-1]]\nprint(&amp;quot;Answer
        1:&amp;quot;, len([x for x in range(1, len(input)) if input[x-1] &amp;lt;
        input[x]]))\nprint(&amp;quot;Answer 2:&amp;quot;, len([x for x in range(3,
        len(input)) if sum(input[x-3:x]) &amp;lt; sum(input[x-2:x+1])]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsbm15/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsbm15", "created":
        1638359911.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmskxsq", "id": "hmskxsq", "parent_id":
        "t1_hmsbm15", "depth": 1, "children": ["hmskxsq", "hmscy1f"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmskgka",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "sotsoguk",
        "can_mod_post": false, "created_utc": 1638365292.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 9, "author_fullname": "t2_mv3g3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python 3\n\nThis year I try to be more *pythonic* and make my code clearer.
        Solution to part 1 and 2:\n\n    part1 = sum((b&gt;a) for (a,b) in zip(input,input[1:]))\n    part2
        = sum((b&gt;a) for (a,b) in zip(input,input[3:]))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Python 3&lt;/h1&gt;\n\n&lt;p&gt;This year I try
        to be more &lt;em&gt;pythonic&lt;/em&gt; and make my code clearer. Solution
        to part 1 and 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part1 = sum((b&amp;gt;a)
        for (a,b) in zip(input,input[1:]))\npart2 = sum((b&amp;gt;a) for (a,b) in
        zip(input,input[3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmskgka/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmskgka", "created": 1638365292.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_hmsx31z", "id": "hmsx31z", "parent_id": "t1_hmskgka", "depth": 1, "children":
        ["hmsx31z", "hmslrqp"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638490235.0, "mod_reason_by": null, "banned_by": null, "ups": 10,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsy5hk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "tomflumery",
        "can_mod_post": false, "created_utc": 1638371750.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 10, "author_fullname": "t2_1n1f8ga0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "05ab1e -\n\npart 1 (6 chars) \n```\n|\u00a5\u0292d}g\n```\n\npart 2 (10 chars)\n```\n|\u01524\u00f9\u0292\u00c0`\u203a}g\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;05ab1e -&lt;/p&gt;\n\n&lt;p&gt;part
        1 (6 chars) \n&lt;code&gt;\n|\u00a5\u0292d}g\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;part
        2 (10 chars)\n&lt;code&gt;\n|\u01524\u00f9\u0292\u00c0`\u203a}g\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsy5hk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsy5hk", "created":
        1638371750.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 9, "name": "t1_hmt32gi", "id": "hmt32gi", "parent_id":
        "t1_hmsy5hk", "depth": 1, "children": ["hmt32gi", "hmt18b9"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638432792.0, "mod_reason_by": null,
        "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmudr1q", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "reckter",
        "can_mod_post": false, "created_utc": 1638391913.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 10, "author_fullname": "t2_97xjz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "`intcode`!\n\nBut only the first part, because I am lazy \ud83d\ude05\n\n\n    [109,
        114, 203, 1, 1201, 1, 0, 103, 1101, 0, 0, 104, 1101, 9999999, 0, 105, 1101,
        0, 0, 106, 1101, 0, 0, 107, 1101, 0, 0, 108, 7, 104, 103, 109, 1006, 109,
        97, 203, 1, 1201, 1, 0, 110, 1008, 110, 10, 109, 1006, 109, 74, 7, 105, 106,
        111, 1006, 111, 59, 1001, 108, 1, 108, 1001, 106, 0, 105, 1101, 0, 0, 106,
        1001, 104, 1, 104, 1106, 0, 90, 1002, 106, 10, 112, 1001, 110, -48, 113, 1,
        112, 113, 106, 1001, 104, 1, 104, 7, 104, 103, 109, 1005, 109, 35, 4, 108,
        99, 104, -99000, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n\nBut I didn''t exactly
        write this by hand, but instead compiled it from what I call  \"intScript\",
        in which it looks like this:\n\n    val length = input()\n    val i = 0\n    val
        last = 9999999\n    val current = 0\n    val line = 0\n    val result = 0\n    while(i
        &lt; length) {\n        val in = input()\n        if (in == 10) { // line
        break\n            if (last &lt; current) {\n                result = result
        + 1\n            }\n                        \n            last = current\n            current
        = 0\n            i = i + 1\n        } else {\n            current = current
        * 10 + (in - 48) // char to int\n            i = i + 1\n        }\n    }\n                \n    output(result)\n\n\nThis
        gets compiled to an assembler language first:\n\n    MBP global+11\n    INP
        {1}\n    ADD {1} 0 [global+0]\n    ADD 0 0 [global+1]\n    ADD 9999999 0 [global+2]\n    ADD
        0 0 [global+3]\n    ADD 0 0 [global+4]\n    ADD 0 0 [global+5]\n    CM&lt;
        [global+1] [global+0] [global+6]\n    JEZ [global+6] global_loop_start_jump_label_1\n    global_loop_start_jump_label_0:\n    INP
        {1}\n    ADD {1} 0 [global+7]\n    CM= [global+7] 10 [global+6]\n    JEZ [global+6]
        global_else_jump_label_2\n    CM&lt; [global+2] [global+3] [global+8]\n    JEZ
        [global+8] global_else_jump_label_4\n    ADD [global+5] 1 [global+5]\n    global_else_jump_label_4:\n    ADD
        [global+3] 0 [global+2]\n    ADD 0 0 [global+3]\n    ADD [global+1] 1 [global+1]\n    JEZ
        0 global_if_end_jump_label_3\n    global_else_jump_label_2:\n    MUL [global+3]
        10 [global+9]\n    ADD [global+7] -48 [global+10]\n    ADD [global+9] [global+10]
        [global+3]\n    ADD [global+1] 1 [global+1]\n    global_if_end_jump_label_3:\n    CM&lt;
        [global+1] [global+0] [global+6]\n    JNZ [global+6] global_loop_start_jump_label_0\n    global_loop_start_jump_label_1:\n    OUT
        [global+5]\n    HLT\n    NULL_POINTER_ERROR:\n    OUT -99000\n    HLT\n    global:\n    &gt;
        0 0 0 0 0 0 0 0 0 0 0\n\n\nI feed it the input as ascii chars and parse the
        integers and compare them.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;intcode&lt;/code&gt;!&lt;/p&gt;\n\n&lt;p&gt;But
        only the first part, because I am lazy \ud83d\ude05&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[109,
        114, 203, 1, 1201, 1, 0, 103, 1101, 0, 0, 104, 1101, 9999999, 0, 105, 1101,
        0, 0, 106, 1101, 0, 0, 107, 1101, 0, 0, 108, 7, 104, 103, 109, 1006, 109,
        97, 203, 1, 1201, 1, 0, 110, 1008, 110, 10, 109, 1006, 109, 74, 7, 105, 106,
        111, 1006, 111, 59, 1001, 108, 1, 108, 1001, 106, 0, 105, 1101, 0, 0, 106,
        1001, 104, 1, 104, 1106, 0, 90, 1002, 106, 10, 112, 1001, 110, -48, 113, 1,
        112, 113, 106, 1001, 104, 1, 104, 7, 104, 103, 109, 1005, 109, 35, 4, 108,
        99, 104, -99000, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But
        I didn&amp;#39;t exactly write this by hand, but instead compiled it from
        what I call  &amp;quot;intScript&amp;quot;, in which it looks like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val
        length = input()\nval i = 0\nval last = 9999999\nval current = 0\nval line
        = 0\nval result = 0\nwhile(i &amp;lt; length) {\n    val in = input()\n    if
        (in == 10) { // line break\n        if (last &amp;lt; current) {\n            result
        = result + 1\n        }\n\n        last = current\n        current = 0\n        i
        = i + 1\n    } else {\n        current = current * 10 + (in - 48) // char
        to int\n        i = i + 1\n    }\n}\n\noutput(result)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This
        gets compiled to an assembler language first:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;MBP
        global+11\nINP {1}\nADD {1} 0 [global+0]\nADD 0 0 [global+1]\nADD 9999999
        0 [global+2]\nADD 0 0 [global+3]\nADD 0 0 [global+4]\nADD 0 0 [global+5]\nCM&amp;lt;
        [global+1] [global+0] [global+6]\nJEZ [global+6] global_loop_start_jump_label_1\nglobal_loop_start_jump_label_0:\nINP
        {1}\nADD {1} 0 [global+7]\nCM= [global+7] 10 [global+6]\nJEZ [global+6] global_else_jump_label_2\nCM&amp;lt;
        [global+2] [global+3] [global+8]\nJEZ [global+8] global_else_jump_label_4\nADD
        [global+5] 1 [global+5]\nglobal_else_jump_label_4:\nADD [global+3] 0 [global+2]\nADD
        0 0 [global+3]\nADD [global+1] 1 [global+1]\nJEZ 0 global_if_end_jump_label_3\nglobal_else_jump_label_2:\nMUL
        [global+3] 10 [global+9]\nADD [global+7] -48 [global+10]\nADD [global+9] [global+10]
        [global+3]\nADD [global+1] 1 [global+1]\nglobal_if_end_jump_label_3:\nCM&amp;lt;
        [global+1] [global+0] [global+6]\nJNZ [global+6] global_loop_start_jump_label_0\nglobal_loop_start_jump_label_1:\nOUT
        [global+5]\nHLT\nNULL_POINTER_ERROR:\nOUT -99000\nHLT\nglobal:\n&amp;gt; 0
        0 0 0 0 0 0 0 0 0 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I feed it the input
        as ascii chars and parse the integers and compare them.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmudr1q/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmudr1q", "created":
        1638391913.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 7, "name": "t1_hmukyrb", "id": "hmukyrb", "parent_id":
        "t1_hmudr1q", "depth": 1, "children": ["hmukyrb", "hmvt88e"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638337852.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrim4f", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "obluff",
        "can_mod_post": false, "created_utc": 1638337634.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_gmx45", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Bash\n\npart one \n\n    paste -d\"&lt;\" input.txt &lt;(cat input.txt
        | tail -n+2) | head -n-1 | bc | paste -sd+ | bc\n\npart two\n\n    paste -d\"&lt;\"
        &lt;(paste -d\"+\" input.txt &lt;(cat input.txt | tail -n+2) &lt;(cat input.txt
        | tail -n+3) | head -n-2 | bc) &lt;(paste -d\"+\" input.txt &lt;(cat input.txt
        | tail -n+2) &lt;(cat input.txt | tail -n+3) | head -n-2 | bc | tail -n+2)
        | head -n-1 | bc | paste -sd+ | bc", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h2&gt;Bash&lt;/h2&gt;\n\n&lt;p&gt;part one &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;paste
        -d&amp;quot;&amp;lt;&amp;quot; input.txt &amp;lt;(cat input.txt | tail -n+2)
        | head -n-1 | bc | paste -sd+ | bc\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        two&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;paste -d&amp;quot;&amp;lt;&amp;quot;
        &amp;lt;(paste -d&amp;quot;+&amp;quot; input.txt &amp;lt;(cat input.txt |
        tail -n+2) &amp;lt;(cat input.txt | tail -n+3) | head -n-2 | bc) &amp;lt;(paste
        -d&amp;quot;+&amp;quot; input.txt &amp;lt;(cat input.txt | tail -n+2) &amp;lt;(cat
        input.txt | tail -n+3) | head -n-2 | bc | tail -n+2) | head -n-1 | bc | paste
        -sd+ | bc\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrim4f/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrim4f", "created":
        1638337634.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmstn65", "id": "hmstn65", "parent_id":
        "t1_hmrim4f", "depth": 1, "children": ["hmstn65", "hmvkq6p", "hmrktju"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1639116119.0,
        "mod_reason_by": null, "banned_by": null, "ups": 9, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrmpae", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "_jstanley",
        "can_mod_post": false, "created_utc": 1638340201.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 9, "author_fullname": "t2_ddrjw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# SLANG\n(Homemade language on a homemade CPU)\n\nI stuffed up part 1 because
        I initialised \"prevdepth\" to 0xffff but I forgot that my \"&gt;\" operator
        is signed, so this counts as -1, so the first element is greater than it.\n\nApart
        from that, I found that my solutions ran much slower than expected. Part 1
        takes about 50 seconds to run.\n\nI''ve since profiled it and discovered that
        50% of execution time was spent doing system calls to read characters of input.
        I do have a buffered IO library to solve this problem, but I didn''t think
        the AoC inputs were big enough to make any difference. Turns out they are!
        After switching to buffered IO it runs in 23 seconds, of which 70% is related
        to integer parsing. Some of the integer parsing stuff is already optimised
        assembly language, but some of it is not.\n\nThere''s a lot of \"parse a large
        number of integers\" in the input phase of Advent of Code problems, so for
        future days I''m going to try to remember to use my buffered IO library, and
        I''m going to try to spend some time today optimising the slower parts of
        integer parsing.\n\nhttps://www.youtube.com/watch?v=ZLF8bWWw9FA\n\nhttps://github.com/jes/aoc2021/tree/master/day1",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;SLANG&lt;/h1&gt;\n\n&lt;p&gt;(Homemade
        language on a homemade CPU)&lt;/p&gt;\n\n&lt;p&gt;I stuffed up part 1 because
        I initialised &amp;quot;prevdepth&amp;quot; to 0xffff but I forgot that my
        &amp;quot;&amp;gt;&amp;quot; operator is signed, so this counts as -1, so
        the first element is greater than it.&lt;/p&gt;\n\n&lt;p&gt;Apart from that,
        I found that my solutions ran much slower than expected. Part 1 takes about
        50 seconds to run.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve since profiled it and
        discovered that 50% of execution time was spent doing system calls to read
        characters of input. I do have a buffered IO library to solve this problem,
        but I didn&amp;#39;t think the AoC inputs were big enough to make any difference.
        Turns out they are! After switching to buffered IO it runs in 23 seconds,
        of which 70% is related to integer parsing. Some of the integer parsing stuff
        is already optimised assembly language, but some of it is not.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s
        a lot of &amp;quot;parse a large number of integers&amp;quot; in the input
        phase of Advent of Code problems, so for future days I&amp;#39;m going to
        try to remember to use my buffered IO library, and I&amp;#39;m going to try
        to spend some time today optimising the slower parts of integer parsing.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.youtube.com/watch?v=ZLF8bWWw9FA\"&gt;https://www.youtube.com/watch?v=ZLF8bWWw9FA&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jes/aoc2021/tree/master/day1\"&gt;https://github.com/jes/aoc2021/tree/master/day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrmpae/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrmpae", "created":
        1638340201.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmtoh2p", "id": "hmtoh2p", "parent_id":
        "t1_hmrmpae", "depth": 1, "children": ["hmtoh2p"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638353062.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms277r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "__Abigail__",
        "can_mod_post": false, "created_utc": 1638352370.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_13exmr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Perl\n\nAs usual, an easy starter on day 1.\n\n\n    my @depths = &lt;&gt;;\n    my
        $count1 = grep {$depths [$_] &gt; $depths [$_ - 1]} 1 .. $#depths;\n    my
        $count2 = grep {$depths [$_] &gt; $depths [$_ - 3]} 3 .. $#depths;\n\n\nNow,
        `$count1` and `$count2` contain the answers for part 1 and part 2.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Perl&lt;/h1&gt;\n\n&lt;p&gt;As usual, an
        easy starter on day 1.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;my @depths = &amp;lt;&amp;gt;;\nmy
        $count1 = grep {$depths [$_] &amp;gt; $depths [$_ - 1]} 1 .. $#depths;\nmy
        $count2 = grep {$depths [$_] &amp;gt; $depths [$_ - 3]} 3 .. $#depths;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now,
        &lt;code&gt;$count1&lt;/code&gt; and &lt;code&gt;$count2&lt;/code&gt; contain
        the answers for part 1 and part 2.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms277r/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms277r", "created": 1638352370.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638362898.0, "mod_reason_by": null, "banned_by": null, "ups": 9,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms4ren",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ZoDalek",
        "can_mod_post": false, "created_utc": 1638354586.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 9, "author_fullname": "t2_12jkz0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**[C](https://github.com/sjmulder/aoc/blob/master/2021/c/day01.c)**\n\n    int
        a[4] = {0}, n=0, ninc1=0, ninc3=0;\n\n    for (; scanf(\" %d\", a) == 1; n++)
        \n            ninc1 += n&gt;0 &amp;&amp; a[0] &gt; a[1];\n            ninc3
        += n&gt;2 &amp;&amp; a[0] &gt; a[3];\n            // was: ninc3 += n&gt;2
        &amp;&amp; a[0]+a[1]+a[2] &gt; a[1]+a[2]+a[3];\n            memmove(a+1, a,
        sizeof(int)*3);\n    }\n    printf(\"%d %d\\n\", ninc1, ninc3);\n\n**[Commodore
        64 BASIC](https://github.com/sjmulder/aoc/blob/master/2021/c64-basic/day01.bas)**\n\n    10
        OPEN 1,1,0,\"data/01-input.txt\"\n    20 INPUT#1,A:N=N+1\n    30 IF ST&gt;0
        THEN PRINT P1,P2:END\n    40 IF N&gt;1 AND A&gt;B THEN P1=P1+1\n    50 IF
        N&gt;3 AND A&gt;D THEN P2=P2+1\n    60 D=C:C=B:B=A:GOTO 20\n\n**[Excel](https://github.com/sjmulder/aoc/blob/master/2021/excel/day01.xlsx)**\n\nNo
        plans on making this a thing but it fit the problem so well :)\n\n**[C# with
        Linq](https://github.com/sjmulder/aoc/blob/master/2021/cs/Day01/Program.cs)**\n\n    var
        nums = File.ReadAllLines(\"../../../../../data/01-input.txt\").Select(int.Parse).ToList();\n    var
        inc1 = nums.Zip(nums.Skip(1), (a, b) =&gt; a &lt; b).Count(x =&gt; x);\n    var
        inc3 = nums.Zip(nums.Skip(3), (a, b) =&gt; a &lt; b).Count(x =&gt; x);\n    Console.WriteLine($\"{inc1}
        {inc3}\");\n\nSliding windows with Zip+Skip.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=\"https://github.com/sjmulder/aoc/blob/master/2021/c/day01.c\"&gt;C&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        a[4] = {0}, n=0, ninc1=0, ninc3=0;\n\nfor (; scanf(&amp;quot; %d&amp;quot;,
        a) == 1; n++) \n        ninc1 += n&amp;gt;0 &amp;amp;&amp;amp; a[0] &amp;gt;
        a[1];\n        ninc3 += n&amp;gt;2 &amp;amp;&amp;amp; a[0] &amp;gt; a[3];\n        //
        was: ninc3 += n&amp;gt;2 &amp;amp;&amp;amp; a[0]+a[1]+a[2] &amp;gt; a[1]+a[2]+a[3];\n        memmove(a+1,
        a, sizeof(int)*3);\n}\nprintf(&amp;quot;%d %d\\n&amp;quot;, ninc1, ninc3);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a
        href=\"https://github.com/sjmulder/aoc/blob/master/2021/c64-basic/day01.bas\"&gt;Commodore
        64 BASIC&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;10 OPEN
        1,1,0,&amp;quot;data/01-input.txt&amp;quot;\n20 INPUT#1,A:N=N+1\n30 IF ST&amp;gt;0
        THEN PRINT P1,P2:END\n40 IF N&amp;gt;1 AND A&amp;gt;B THEN P1=P1+1\n50 IF
        N&amp;gt;3 AND A&amp;gt;D THEN P2=P2+1\n60 D=C:C=B:B=A:GOTO 20\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a
        href=\"https://github.com/sjmulder/aoc/blob/master/2021/excel/day01.xlsx\"&gt;Excel&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;No
        plans on making this a thing but it fit the problem so well :)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a
        href=\"https://github.com/sjmulder/aoc/blob/master/2021/cs/Day01/Program.cs\"&gt;C#
        with Linq&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        nums = File.ReadAllLines(&amp;quot;../../../../../data/01-input.txt&amp;quot;).Select(int.Parse).ToList();\nvar
        inc1 = nums.Zip(nums.Skip(1), (a, b) =&amp;gt; a &amp;lt; b).Count(x =&amp;gt;
        x);\nvar inc3 = nums.Zip(nums.Skip(3), (a, b) =&amp;gt; a &amp;lt; b).Count(x
        =&amp;gt; x);\nConsole.WriteLine($&amp;quot;{inc1} {inc3}&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Sliding
        windows with Zip+Skip.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms4ren/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms4ren", "created":
        1638354586.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmt15dx", "id": "hmt15dx", "parent_id":
        "t1_hms4ren", "depth": 1, "children": ["hmt15dx", "hmvmzy4", "hmvii24", "hmsf5g7"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638357060.0,
        "mod_reason_by": null, "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms6ztr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "NohusB",
        "can_mod_post": false, "created_utc": 1638356435.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_703bvnoq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Kotlin**\n\n**Part 1**\n\n    solve { input -&gt;\n        input.lines().map
        { it.toInt() }.windowed(2).count { it.last() &gt; it.first() }\n    }\n\n**Part
        2**\n\n    solve { input -&gt;\n        input.lines().map { it.toInt() }.windowed(4).count
        { it.last() &gt; it.first() }\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        1&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;solve { input -&amp;gt;\n    input.lines().map
        { it.toInt() }.windowed(2).count { it.last() &amp;gt; it.first() }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;solve { input -&amp;gt;\n    input.lines().map
        { it.toInt() }.windowed(4).count { it.last() &amp;gt; it.first() }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms6ztr/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms6ztr", "created":
        1638356435.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hms8ko8", "id": "hms8ko8", "parent_id":
        "t1_hms6ztr", "depth": 1, "children": ["hms8ko8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsxhd5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Jaik_",
        "can_mod_post": false, "created_utc": 1638371465.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 9, "author_fullname": "t2_cjebd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#Rust\n\nYou could definitely make this shorter but I think this is a good
        balance for readability.\n\n    use itertools::Itertools;\n    \n    const
        SAMPLE: &amp;str = include_str!(\"../sample.txt\");\n    const INPUT: &amp;str
        = include_str!(\"../input.txt\");\n    \n    fn part_one&lt;T: Clone + Ord,
        I: Iterator&lt;Item = T&gt;&gt;(numbers: I) -&gt; usize {\n        numbers.tuple_windows().filter(|(a,
        b)| b &gt; a).count()\n    }\n    \n    fn part_two(numbers: &amp;[usize])
        -&gt; usize {\n        part_one(\n            numbers\n                .windows(3)\n                .map(|window|
        window.iter().sum::&lt;usize&gt;()),\n        )\n    }\n    \n    fn main()
        {\n        let numbers = INPUT\n            .lines()\n            .filter_map(|s|
        s.trim().parse().ok())\n            .collect_vec();\n    \n        dbg!(part_one(numbers.iter()));\n        dbg!(part_two(&amp;numbers));\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;You
        could definitely make this shorter but I think this is a good balance for
        readability.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use itertools::Itertools;\n\nconst
        SAMPLE: &amp;amp;str = include_str!(&amp;quot;../sample.txt&amp;quot;);\nconst
        INPUT: &amp;amp;str = include_str!(&amp;quot;../input.txt&amp;quot;);\n\nfn
        part_one&amp;lt;T: Clone + Ord, I: Iterator&amp;lt;Item = T&amp;gt;&amp;gt;(numbers:
        I) -&amp;gt; usize {\n    numbers.tuple_windows().filter(|(a, b)| b &amp;gt;
        a).count()\n}\n\nfn part_two(numbers: &amp;amp;[usize]) -&amp;gt; usize {\n    part_one(\n        numbers\n            .windows(3)\n            .map(|window|
        window.iter().sum::&amp;lt;usize&amp;gt;()),\n    )\n}\n\nfn main() {\n    let
        numbers = INPUT\n        .lines()\n        .filter_map(|s| s.trim().parse().ok())\n        .collect_vec();\n\n    dbg!(part_one(numbers.iter()));\n    dbg!(part_two(&amp;amp;numbers));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsxhd5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsxhd5", "created":
        1638371465.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt57a0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "janiczek",
        "can_mod_post": false, "created_utc": 1638374673.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_8d2l8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**APL**\n\np1\u2190+/2&lt;/in\n\np2\u2190+/2&lt;/3+/in\n\nTwitter thread
        explaining it:\nhttps://twitter.com/janiczek/status/1465969017089363969?t=byNxxCkU5sZp0WS47-fW3g&amp;s=19",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;APL&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;p1\u2190+/2&amp;lt;/in&lt;/p&gt;\n\n&lt;p&gt;p2\u2190+/2&amp;lt;/3+/in&lt;/p&gt;\n\n&lt;p&gt;Twitter
        thread explaining it:\n&lt;a href=\"https://twitter.com/janiczek/status/1465969017089363969?t=byNxxCkU5sZp0WS47-fW3g&amp;amp;s=19\"&gt;https://twitter.com/janiczek/status/1465969017089363969?t=byNxxCkU5sZp0WS47-fW3g&amp;amp;s=19&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt57a0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt57a0", "created":
        1638374673.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfyu8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ssalogel",
        "can_mod_post": false, "created_utc": 1638336112.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_d7ydk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "python 3\n\n        def part1(self) -&gt; int:\n            return sum([x
        &lt; y for x, y in zip(data_p1, data_p1[1:])])\n    \n    \n        def part2(self)
        -&gt; int:\n            triple = list(zip(data_p2, data_p2[1:], data_p2[2:]))\n            return
        sum([sum(x) &lt; sum(y) for x, y in zip(triple, triple[1:])])", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;python 3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    def
        part1(self) -&amp;gt; int:\n        return sum([x &amp;lt; y for x, y in zip(data_p1,
        data_p1[1:])])\n\n\n    def part2(self) -&amp;gt; int:\n        triple = list(zip(data_p2,
        data_p2[1:], data_p2[2:]))\n        return sum([sum(x) &amp;lt; sum(y) for
        x, y in zip(triple, triple[1:])])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfyu8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfyu8", "created":
        1638336112.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrgd8h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "blackbat24",
        "can_mod_post": false, "created_utc": 1638336326.0, "send_replies": true,
        "parent_id": "t1_hmrfyu8", "score": 7, "author_fullname": "t2_n6ylt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m always amazed at the wizardry that is the zip() function, and yet I
        never remember to use it.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        always amazed at the wizardry that is the zip() function, and yet I never
        remember to use it.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgd8h/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgd8h", "created":
        1638336326.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmsj2ni", "id": "hmsj2ni", "parent_id":
        "t1_hmrfyu8", "depth": 1, "children": ["hmsj2ni", "hmrjtaj"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrgdm4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        7, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**Retina**\n\n    [0-9]+\n    $0*a;$0*a\n    (a+)\u00b6\\1\n    &gt;\n    &gt;a\n\n[https://tio.run/##K0otycxLNPz/P9pA1zJWm0vFQCvRGkRwaSRqax7aFmPIZcdll/j/PwA](https://tio.run/##K0otycxLNPz/P9pA1zJWm0vFQCvRGkRwaSRqax7aFmPIZcdll/j/PwA)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmrgdm4",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Retina&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[0-9]+\n$0*a;$0*a\n(a+)\u00b6\\1\n&amp;gt;\n&amp;gt;a\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://tio.run/##K0otycxLNPz/P9pA1zJWm0vFQCvRGkRwaSRqax7aFmPIZcdll/j/PwA\"&gt;https://tio.run/##K0otycxLNPz/P9pA1zJWm0vFQCvRGkRwaSRqax7aFmPIZcdll/j/PwA&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgdm4/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638336331.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638336331.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmrh0pl", "id": "hmrh0pl", "parent_id":
        "t1_hmrgdm4", "depth": 1, "children": ["hmrh0pl"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638449086.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrjdhg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "0rac1e",
        "can_mod_post": false, "created_utc": 1638338095.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 7, "author_fullname": "t2_jqvvy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Raku\n\n    my @depths = ''input''.IO.words;\n    \n    put [+] [Z&gt;]
        @depths[1..*, *];\n    put [+] [Z&gt;] @depths[3..*, *];\n\nExplanation: -\n\n*
        The `@depths[1..*, *]` returns 2 lists, the first one starting from index
        1, and the second from 0.\n* The `[Z&gt;]` is the zip meta-operator, combined
        with greater-than, so it will zip the two lists together, compare the pairs,
        and return a list of Booleans\n* The `[+]` reduces the list of Booleans with
        addition. Booleans are an enum where True is 1 and False is 0.\n\nI originally
        solved part 2 by first creating 3 lists starting from the 2nd, 1st, and 0th
        index, and zipping together with plus, like so\n\n    [Z+] @depths[2..*, 1..*,
        *]\n\nThen I could just compare each subsequent element as in part 1, but
        it appears that''s not even required. I can just compare each item with the
        item that''s 2 indices ahead. I don''t fully grasp why this works, maybe some
        mathematical truth that escapes me. (edit: thanks u/polettix for the explanation
        below)\n\nRaku has a handy `.rotor` method on iterables that makes doing sliding
        windows very easy. I could have just as easily solve it by leaning on that
        method but... I''ve been digging into array languages this year (mostly *J*...
        see my J solution further down) and I kinda tackled it how I might do it in
        an array language.\n\nHere''s a alternate Raku solution using the `.rotor`
        method.\n\n    my &amp;increments = { .rotor(2 =&gt; -1).flat.grep(* &lt;
        *).elems }\n    \n    put increments @depths;\n    put increments @depths.rotor(3
        =&gt; -2)\u00bb.sum;\n\n\\--\n\n# J Language\n\nI''m a relative amateur with
        J but this is what I came up with\n\n    depths =. \". ''m'' fread ''input''\n    \n    +/
        0 &gt; (}: - }.)           depths\n    +/ 0 &gt; (}: - }.) +/\"1 (3]\\ depths)\n\nOr
        using the \"trick\" where I don''t bother doing the 3-sum\n\n    +/ 0 &gt;
        (_3&amp;}. - 3&amp;}.) depths\n\nNote: See [jitwit](https://www.reddit.com/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms0zky/)''s
        post for a much nicer J solution.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Raku&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;my @depths
        = &amp;#39;input&amp;#39;.IO.words;\n\nput [+] [Z&amp;gt;] @depths[1..*, *];\nput
        [+] [Z&amp;gt;] @depths[3..*, *];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Explanation:
        -&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The &lt;code&gt;@depths[1..*, *]&lt;/code&gt;
        returns 2 lists, the first one starting from index 1, and the second from
        0.&lt;/li&gt;\n&lt;li&gt;The &lt;code&gt;[Z&amp;gt;]&lt;/code&gt; is the zip
        meta-operator, combined with greater-than, so it will zip the two lists together,
        compare the pairs, and return a list of Booleans&lt;/li&gt;\n&lt;li&gt;The
        &lt;code&gt;[+]&lt;/code&gt; reduces the list of Booleans with addition. Booleans
        are an enum where True is 1 and False is 0.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I
        originally solved part 2 by first creating 3 lists starting from the 2nd,
        1st, and 0th index, and zipping together with plus, like so&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[Z+]
        @depths[2..*, 1..*, *]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then I could
        just compare each subsequent element as in part 1, but it appears that&amp;#39;s
        not even required. I can just compare each item with the item that&amp;#39;s
        2 indices ahead. I don&amp;#39;t fully grasp why this works, maybe some mathematical
        truth that escapes me. (edit: thanks &lt;a href=\"/u/polettix\"&gt;u/polettix&lt;/a&gt;
        for the explanation below)&lt;/p&gt;\n\n&lt;p&gt;Raku has a handy &lt;code&gt;.rotor&lt;/code&gt;
        method on iterables that makes doing sliding windows very easy. I could have
        just as easily solve it by leaning on that method but... I&amp;#39;ve been
        digging into array languages this year (mostly &lt;em&gt;J&lt;/em&gt;... see
        my J solution further down) and I kinda tackled it how I might do it in an
        array language.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s a alternate Raku solution
        using the &lt;code&gt;.rotor&lt;/code&gt; method.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;my
        &amp;amp;increments = { .rotor(2 =&amp;gt; -1).flat.grep(* &amp;lt; *).elems
        }\n\nput increments @depths;\nput increments @depths.rotor(3 =&amp;gt; -2)\u00bb.sum;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;--&lt;/p&gt;\n\n&lt;h1&gt;J
        Language&lt;/h1&gt;\n\n&lt;p&gt;I&amp;#39;m a relative amateur with J but
        this is what I came up with&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depths =.
        &amp;quot;. &amp;#39;m&amp;#39; fread &amp;#39;input&amp;#39;\n\n+/ 0 &amp;gt;
        (}: - }.)           depths\n+/ 0 &amp;gt; (}: - }.) +/&amp;quot;1 (3]\\ depths)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or
        using the &amp;quot;trick&amp;quot; where I don&amp;#39;t bother doing the
        3-sum&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;+/ 0 &amp;gt; (_3&amp;amp;}. - 3&amp;amp;}.)
        depths\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note: See &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms0zky/\"&gt;jitwit&lt;/a&gt;&amp;#39;s
        post for a much nicer J solution.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrjdhg/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrjdhg", "created": 1638338095.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 6, "name":
        "t1_hmrlkyn", "id": "hmrlkyn", "parent_id": "t1_hmrjdhg", "depth": 1, "children":
        ["hmrlkyn", "hmwucpq", "hms6rvy", "hmrv2jf"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 8,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms0fy5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Mayalabielle",
        "can_mod_post": false, "created_utc": 1638350832.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_2h3tqouf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust, windows ftw.\n\n    fn solve_p1(input: Input) -&gt; usize {\n        input\n            .transform(|line:
        String| line.parse::&lt;usize&gt;().unwrap())\n            .windows(2)\n            .filter(|w|
        w[0] &lt; w[1])\n            .count()\n    }\n    \n    fn solve_p2(input:
        Input) -&gt; usize {\n        input\n            .transform(|line: String|
        line.parse::&lt;usize&gt;().unwrap())\n            .windows(4)\n            .filter(|w|
        w[0] &lt; w[3])\n            .count()\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rust, windows ftw.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        solve_p1(input: Input) -&amp;gt; usize {\n    input\n        .transform(|line:
        String| line.parse::&amp;lt;usize&amp;gt;().unwrap())\n        .windows(2)\n        .filter(|w|
        w[0] &amp;lt; w[1])\n        .count()\n}\n\nfn solve_p2(input: Input) -&amp;gt;
        usize {\n    input\n        .transform(|line: String| line.parse::&amp;lt;usize&amp;gt;().unwrap())\n        .windows(4)\n        .filter(|w|
        w[0] &amp;lt; w[3])\n        .count()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms0fy5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms0fy5", "created":
        1638350832.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hms2w6y", "id": "hms2w6y", "parent_id":
        "t1_hms0fy5", "depth": 1, "children": ["hms2w6y", "hms4iym"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms17z9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "kubav27",
        "can_mod_post": false, "created_utc": 1638351517.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_g3ipwkw0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust, both stars computed by the same function\n\n    fn count_increase(measurements:
        &amp;Vec&lt;u32&gt;, distance: usize) -&gt; u32 {\n        let mut increases
        = 0;\n        for i in distance..measurements.len() {\n            if measurements.get(i
        - distance) &lt; measurements.get(i) {\n                increases += 1\n            }\n        }\n        increases\n    }\n    \n    let
        result1 = count_increase(&amp;input, 1);\n    println!(\"Found {} increases\",
        result1);\n    let result2 = count_increase(&amp;input, 3);\n    println!(\"Found
        {} triple increases\", result2);", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rust, both stars computed by the same function&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        count_increase(measurements: &amp;amp;Vec&amp;lt;u32&amp;gt;, distance: usize)
        -&amp;gt; u32 {\n    let mut increases = 0;\n    for i in distance..measurements.len()
        {\n        if measurements.get(i - distance) &amp;lt; measurements.get(i)
        {\n            increases += 1\n        }\n    }\n    increases\n}\n\nlet result1
        = count_increase(&amp;amp;input, 1);\nprintln!(&amp;quot;Found {} increases&amp;quot;,
        result1);\nlet result2 = count_increase(&amp;amp;input, 3);\nprintln!(&amp;quot;Found
        {} triple increases&amp;quot;, result2);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms17z9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms17z9", "created":
        1638351517.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638353097.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms2oje", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "AharonSambol",
        "can_mod_post": false, "created_utc": 1638352794.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_323tfwqe", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My one lined python solution\n\n    with open(\"day1\") as input_file:    \n        lines
        = list(map(int, input_file.readlines()))\n        # part 1\n        print(sum(1
        for prev, num in zip(lines, lines[1:]) if num &gt; prev))\n    \n        #
        part 2\n        print(sum(1 for num1, num4 in zip(lines, lines[3:]) if num4
        &gt; num1))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        one lined python solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;quot;day1&amp;quot;)
        as input_file:    \n    lines = list(map(int, input_file.readlines()))\n    #
        part 1\n    print(sum(1 for prev, num in zip(lines, lines[1:]) if num &amp;gt;
        prev))\n\n    # part 2\n    print(sum(1 for num1, num4 in zip(lines, lines[3:])
        if num4 &amp;gt; num1))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms2oje/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms2oje", "created": 1638352794.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 5, "name":
        "t1_hms3rcp", "id": "hms3rcp", "parent_id": "t1_hms2oje", "depth": 1, "children":
        ["hms3rcp"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms9dfn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "paul2718",
        "can_mod_post": false, "created_utc": 1638358284.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 7, "author_fullname": "t2_ldn5iyy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++ has a function to solve this problem.\n\n    #include &lt;iostream&gt;\n    #include
        &lt;string&gt;\n    #include &lt;vector&gt;\n    #include &lt;numeric&gt;\n\n    int
        main()\n    {\n        std::vector&lt;int&gt; v;\n        std::string ln;\n        while
        (std::getline(std::cin, ln))\n            v.push_back(std::stoi(ln));\n        std::cout
        &lt;&lt; \"pt1 = \" &lt;&lt; std::inner_product(v.begin(), v.end() - 1,\n                                 v.begin()
        + 1, 0,\n                                 std::plus&lt;&gt;(),\n                                 [](auto
        l, auto r){ return r &gt; l;})\n                                 &lt;&lt;
        \"\\n\";\n        std::cout &lt;&lt; \"pt2 = \" &lt;&lt; std::inner_product(v.begin(),
        v.end() - 3,\n                                 v.begin() + 3, 0, \n                                 std::plus&lt;&gt;(),\n                                 [](auto
        l, auto r){ return r &gt; l; })\n                                 &lt;&lt;
        \"\\n\";\n    }\n\ninner_product applies a binary function between elements
        of the two input ranges, and then a binary function between the initial value
        and the result of the first function. The two input ranges are simply different
        views of the puzzle input, the first function returns ''1'' (true...) if the
        second value is greater than the first, the second is ''plus''. transform_reduce
        is similar, but doesn''t guarantee the order over the range, and it hurts
        my head to figure out whether that matters.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C++ has a function to solve this problem.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;string&amp;gt;\n#include &amp;lt;vector&amp;gt;\n#include
        &amp;lt;numeric&amp;gt;\n\nint main()\n{\n    std::vector&amp;lt;int&amp;gt;
        v;\n    std::string ln;\n    while (std::getline(std::cin, ln))\n        v.push_back(std::stoi(ln));\n    std::cout
        &amp;lt;&amp;lt; &amp;quot;pt1 = &amp;quot; &amp;lt;&amp;lt; std::inner_product(v.begin(),
        v.end() - 1,\n                             v.begin() + 1, 0,\n                             std::plus&amp;lt;&amp;gt;(),\n                             [](auto
        l, auto r){ return r &amp;gt; l;})\n                             &amp;lt;&amp;lt;
        &amp;quot;\\n&amp;quot;;\n    std::cout &amp;lt;&amp;lt; &amp;quot;pt2 = &amp;quot;
        &amp;lt;&amp;lt; std::inner_product(v.begin(), v.end() - 3,\n                             v.begin()
        + 3, 0, \n                             std::plus&amp;lt;&amp;gt;(),\n                             [](auto
        l, auto r){ return r &amp;gt; l; })\n                             &amp;lt;&amp;lt;
        &amp;quot;\\n&amp;quot;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;inner_product
        applies a binary function between elements of the two input ranges, and then
        a binary function between the initial value and the result of the first function.
        The two input ranges are simply different views of the puzzle input, the first
        function returns &amp;#39;1&amp;#39; (true...) if the second value is greater
        than the first, the second is &amp;#39;plus&amp;#39;. transform_reduce is
        similar, but doesn&amp;#39;t guarantee the order over the range, and it hurts
        my head to figure out whether that matters.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms9dfn/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms9dfn", "created": 1638358284.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 8, "name":
        "t1_hmsi4ep", "id": "hmsi4ep", "parent_id": "t1_hms9dfn", "depth": 1, "children":
        ["hmsi4ep", "hmtproz", "hmsm0sm"]}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638360199.0, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_r66vow", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "hms9qyu", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_r66vow", "score": 8, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "**05ab1e**\n    \npart1:  \n&gt;     |D\u00c1\u00f8\u03b5`.S}1.$\u02920\u203a}O\n\nExplanation:\n\n\\|
        -- push input as array on the stack  \nD -- Duplicate top of stack  \n\u00c1
        -- Rotate right once  \n\u00f8 -- zip  \n\u03b5 -- map  \n` -- elements of
        list onto stack  \n.S -- compare  \n} -- end map  \n1.$ -- drop first element
        of array  \n\u0292 -- filter  \n0\u203a -- larger than 0  \n} -- end filter  \nO
        -- sum  \n  -- Implicit output\n\npart2:  \n&gt;     |D3(._\u00f8\u03b5`.S}1.$\u02920\u203a}O\n\nPart2
        is in large part the same as part 1 just that I rotated by 3 instead of 1
        by using\n\n3 -- push on stack  \n( -- negate  \n._ -- rotate left by\n\ninstead
        of \u00c1", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_hms9qyu", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;05ab1e&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;part1:  &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;pre&gt;&lt;code&gt;|D\u00c1\u00f8\u03b5`.S}1.$\u02920\u203a}O\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Explanation:&lt;/p&gt;\n\n&lt;p&gt;|
        -- push input as array on the stack&lt;br/&gt;\nD -- Duplicate top of stack&lt;br/&gt;\n\u00c1
        -- Rotate right once&lt;br/&gt;\n\u00f8 -- zip&lt;br/&gt;\n\u03b5 -- map&lt;br/&gt;\n`
        -- elements of list onto stack&lt;br/&gt;\n.S -- compare&lt;br/&gt;\n} --
        end map&lt;br/&gt;\n1.$ -- drop first element of array&lt;br/&gt;\n\u0292
        -- filter&lt;br/&gt;\n0\u203a -- larger than 0&lt;br/&gt;\n} -- end filter&lt;br/&gt;\nO
        -- sum&lt;br/&gt;\n  -- Implicit output&lt;/p&gt;\n\n&lt;p&gt;part2:  &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;pre&gt;&lt;code&gt;|D3(._\u00f8\u03b5`.S}1.$\u02920\u203a}O\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Part2
        is in large part the same as part 1 just that I rotated by 3 instead of 1
        by using&lt;/p&gt;\n\n&lt;p&gt;3 -- push on stack&lt;br/&gt;\n( -- negate&lt;br/&gt;\n._
        -- rotate left by&lt;/p&gt;\n\n&lt;p&gt;instead of \u00c1&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms9qyu/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638358561.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638358561.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsacv9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Kantaga",
        "can_mod_post": false, "created_utc": 1638359008.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_pp14j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "APL\n\nPart 1:\n\n`+/\u00af1\u2193x&lt;1\u2296x`\n\nPart 2:\n\n`+/\u00af3\u2193x&lt;3\u2296x`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;APL&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;+/\u00af1\u2193x&amp;lt;1\u2296x&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;+/\u00af3\u2193x&amp;lt;3\u2296x&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsacv9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsacv9", "created":
        1638359008.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmsyd7q", "id": "hmsyd7q", "parent_id":
        "t1_hmsacv9", "depth": 1, "children": ["hmsyd7q", "hmt5sm8", "hmsgzk9"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmszj1n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "doughfacedhomunculus",
        "can_mod_post": false, "created_utc": 1638372334.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 7, "author_fullname": "t2_fzvy1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python and Numpy**\n\nRather pleased with these one-liners. Probably some
        similar solutions already.\n\n    from numpy import loadtxt, diff, ones, convolve\n\n    #
        Import data\n    depths = loadtxt(''data/day1.txt'', dtype = int)\n\n    #
        Challenge #1\n    sum(diff(depths) &gt; 0)\n\n    # Challenge #2 - Convolve
        creates moving sum\n    sum(diff(convolve(depths, ones(3), ''valid'')) &gt;
        0)", "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python
        and Numpy&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Rather pleased with these one-liners.
        Probably some similar solutions already.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        numpy import loadtxt, diff, ones, convolve\n\n# Import data\ndepths = loadtxt(&amp;#39;data/day1.txt&amp;#39;,
        dtype = int)\n\n# Challenge #1\nsum(diff(depths) &amp;gt; 0)\n\n# Challenge
        #2 - Convolve creates moving sum\nsum(diff(convolve(depths, ones(3), &amp;#39;valid&amp;#39;))
        &amp;gt; 0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmszj1n/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmszj1n", "created":
        1638372334.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmt1f6c", "id": "hmt1f6c", "parent_id":
        "t1_hmszj1n", "depth": 1, "children": ["hmt1f6c"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtucrc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ssnoyes",
        "can_mod_post": false, "created_utc": 1638384517.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_k1b0r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "It''s like Python 3.10''s itertools and more\\_itertools were made for today:\n\n    def
        part1(depths):\n        return sum(a &lt; b for a, b in itertools.pairwise(depths))\n    \n    def
        part2(depths):\n        return part1(map(sum, more_itertools.triplewise(depths)))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s like Python
        3.10&amp;#39;s itertools and more_itertools were made for today:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        part1(depths):\n    return sum(a &amp;lt; b for a, b in itertools.pairwise(depths))\n\ndef
        part2(depths):\n    return part1(map(sum, more_itertools.triplewise(depths)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtucrc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtucrc", "created":
        1638384517.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu0uax",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "gauauuau",
        "can_mod_post": false, "created_utc": 1638387019.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 7, "author_fullname": "t2_3ddqzrs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# 6502 Assembly (targeting the NES)\n\n[https://pastebin.com/T2QheTp6](https://pastebin.com/T2QheTp6)  \n\n\nOnly
        the code for the solution is in that dump, not the entire dump of source needed
        to power on the machine, get it ready, clear the screen, display the answer,
        etc.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;6502
        Assembly (targeting the NES)&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/T2QheTp6\"&gt;https://pastebin.com/T2QheTp6&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;Only
        the code for the solution is in that dump, not the entire dump of source needed
        to power on the machine, get it ready, clear the screen, display the answer,
        etc.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu0uax/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu0uax", "created":
        1638387019.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmwvomq", "id": "hmwvomq", "parent_id":
        "t1_hmu0uax", "depth": 1, "children": ["hmwvomq", "hmu7p2u"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638396609.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmubcb8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "3j0hn",
        "can_mod_post": false, "created_utc": 1638391026.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_4vrr5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Scratch**\n\nMy 10 year old will probably make a better solution when they
        get home from school later today, but here''s bit of a lazy solution in Scratch:\n\n[https://i.imgur.com/xVeQB3G.png](https://i.imgur.com/xVeQB3G.png)\n\n[https://scratch.mit.edu/projects/610034299/](https://scratch.mit.edu/projects/610034299/)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Scratch&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        10 year old will probably make a better solution when they get home from school
        later today, but here&amp;#39;s bit of a lazy solution in Scratch:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://i.imgur.com/xVeQB3G.png\"&gt;https://i.imgur.com/xVeQB3G.png&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://scratch.mit.edu/projects/610034299/\"&gt;https://scratch.mit.edu/projects/610034299/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmubcb8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmubcb8", "created":
        1638391026.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmvtzra", "id": "hmvtzra", "parent_id":
        "t1_hmubcb8", "depth": 1, "children": ["hmvtzra", "hmwvws4"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638370959.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmreqc4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "phil_g",
        "can_mod_post": false, "created_utc": 1638335442.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_51wg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Common Lisp, 871/308\n\nLiterally just typing things at the REPL.  I''ll
        go back later today and write a formal implementation.  Part 1 was:\n\n    (defparameter
        *input* (aoc:input :parse-line ''aoc:integer-string))\n    (fset:size (fset:filter
        #''plusp (mapcar #''- (cdr *input*) *input*)))\n\nThe first line there uses
        my prewritten functions to get the input as a list of integers.\n\nPart 2
        was:\n\n    (setf w (mapcar #''+ (cddr *input*) (cdr *input*) *input*))\n    (fset:size
        (fset:filter #''plusp (mapcar #''- (cdr w) w)))\n\nIt''s a mixture of FSet
        code with native lists, just because I remembered how to use `filter` the
        fastest.\n\n**Edit**: `(fset:size (fset:filter ...))` would be simpler as
        `(count-if ...)`.\n\n**Edit 2**: [Formal code here](https://gitlab.com/asciiphil/advent-of-code/-/blob/master/2021/01.lisp).  The
        essence of it, though, is `(gmap:gmap :count-if #''&lt; (:list depths) (:list
        (nthcdr window-size depths)))`.  `window-size` is 1 for part 1 and 3 for part
        2.", "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Common Lisp, 871/308&lt;/p&gt;\n\n&lt;p&gt;Literally
        just typing things at the REPL.  I&amp;#39;ll go back later today and write
        a formal implementation.  Part 1 was:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defparameter
        *input* (aoc:input :parse-line &amp;#39;aoc:integer-string))\n(fset:size (fset:filter
        #&amp;#39;plusp (mapcar #&amp;#39;- (cdr *input*) *input*)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The
        first line there uses my prewritten functions to get the input as a list of
        integers.&lt;/p&gt;\n\n&lt;p&gt;Part 2 was:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(setf
        w (mapcar #&amp;#39;+ (cddr *input*) (cdr *input*) *input*))\n(fset:size (fset:filter
        #&amp;#39;plusp (mapcar #&amp;#39;- (cdr w) w)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It&amp;#39;s
        a mixture of FSet code with native lists, just because I remembered how to
        use &lt;code&gt;filter&lt;/code&gt; the fastest.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;:
        &lt;code&gt;(fset:size (fset:filter ...))&lt;/code&gt; would be simpler as
        &lt;code&gt;(count-if ...)&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit
        2&lt;/strong&gt;: &lt;a href=\"https://gitlab.com/asciiphil/advent-of-code/-/blob/master/2021/01.lisp\"&gt;Formal
        code here&lt;/a&gt;.  The essence of it, though, is &lt;code&gt;(gmap:gmap
        :count-if #&amp;#39;&amp;lt; (:list depths) (:list (nthcdr window-size depths)))&lt;/code&gt;.  &lt;code&gt;window-size&lt;/code&gt;
        is 1 for part 1 and 3 for part 2.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmreqc4/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmreqc4", "created": 1638335442.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmrfkyh", "id": "hmrfkyh", "parent_id": "t1_hmreqc4", "depth": 1, "children":
        ["hmrfkyh"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638339327.0,
        "mod_reason_by": null, "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrf5u4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "dtinth",
        "can_mod_post": false, "created_utc": 1638335677.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_9osxf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    # Ruby, 1381 / 452\n    p $&lt;.read.split.map(&amp;:to_i).each_cons(2).count{|a,b|b&gt;a}\n    p
        $&lt;.read.split.map(&amp;:to_i).each_cons(3).map(&amp;:sum).each_cons(2).count{|a,b|b&gt;a}\n\nI
        made 2 silly mistakes (e.g. forgot to convert to int and used the wrong comparison
        operator). Next time I will remember to test with example data first \ud83d\ude04\n\nEdit:
        Thanks to the suggestions by u/gurgeous, u/BluFoot, u/442401, the above can
        be improved like this:\n\n    p $&lt;.each_cons(2).count{_2.to_i&gt;_1.to_i}\n    p
        $&lt;.map(&amp;:to_i).each_cons(3).each_cons(2).count{_2.sum&gt;_1.sum}",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;# Ruby,
        1381 / 452\np $&amp;lt;.read.split.map(&amp;amp;:to_i).each_cons(2).count{|a,b|b&amp;gt;a}\np
        $&amp;lt;.read.split.map(&amp;amp;:to_i).each_cons(3).map(&amp;amp;:sum).each_cons(2).count{|a,b|b&amp;gt;a}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        made 2 silly mistakes (e.g. forgot to convert to int and used the wrong comparison
        operator). Next time I will remember to test with example data first \ud83d\ude04&lt;/p&gt;\n\n&lt;p&gt;Edit:
        Thanks to the suggestions by &lt;a href=\"/u/gurgeous\"&gt;u/gurgeous&lt;/a&gt;,
        &lt;a href=\"/u/BluFoot\"&gt;u/BluFoot&lt;/a&gt;, &lt;a href=\"/u/442401\"&gt;u/442401&lt;/a&gt;,
        the above can be improved like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p
        $&amp;lt;.each_cons(2).count{_2.to_i&amp;gt;_1.to_i}\np $&amp;lt;.map(&amp;amp;:to_i).each_cons(3).each_cons(2).count{_2.sum&amp;gt;_1.sum}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf5u4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrf5u4", "created":
        1638335677.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 14, "name": "t1_hmrgkpw", "id": "hmrgkpw", "parent_id":
        "t1_hmrf5u4", "depth": 1, "children": ["hmrgkpw", "hmri8mc", "hmrnyjp"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638337123.0,
        "mod_reason_by": null, "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrg57r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "lukechampine",
        "can_mod_post": false, "created_utc": 1638336206.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 7, "author_fullname": "t2_124j5o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**slouch**\n\n    slouch&gt; =input ints\n    slouch&gt; window 2 | count
        -&lt; &lt;\n    slouch&gt; window 3 | map sum | window 2 | count -&lt; &lt;\n\nEDIT:
        as others have pointed out, a simpler solution to part two is:\n\n    slouch&gt;
        window 4 | count -&lt;{x &lt; a}", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;slouch&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;slouch&amp;gt;
        =input ints\nslouch&amp;gt; window 2 | count -&amp;lt; &amp;lt;\nslouch&amp;gt;
        window 3 | map sum | window 2 | count -&amp;lt; &amp;lt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT:
        as others have pointed out, a simpler solution to part two is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;slouch&amp;gt;
        window 4 | count -&amp;lt;{x &amp;lt; a}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrg57r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrg57r", "created":
        1638336206.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrhogs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "wace001",
        "can_mod_post": false, "created_utc": 1638337076.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 7, "author_fullname": "t2_1j9tc3ax", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin 266/467:\n\n    override fun part1() = ints(input).windowed(2).count{it[1]&gt;it[0]}\n    \n    override
        fun part2() = ints(input).windowed(3).map{ it.sum() }.windowed(2).count{it[1]&gt;it[0]}\n\nWhere
        the ints function is just a function that reads all ints of a String :)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin 266/467:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;override
        fun part1() = ints(input).windowed(2).count{it[1]&amp;gt;it[0]}\n\noverride
        fun part2() = ints(input).windowed(3).map{ it.sum() }.windowed(2).count{it[1]&amp;gt;it[0]}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Where
        the ints function is just a function that reads all ints of a String :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhogs/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrhogs", "created":
        1638337076.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmrjpnn", "id": "hmrjpnn", "parent_id":
        "t1_hmrhogs", "depth": 1, "children": ["hmrjpnn", "hms7qal", "hmw5bgf"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638339438.0,
        "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrj3nn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "autid",
        "can_mod_post": false, "created_utc": 1638337930.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_g26j3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**FORTRAN**\n\n    PROGRAM DAY1\n        IMPLICIT NONE\n        INTEGER ::
        I,N,IERR\n        INTEGER,ALLOCATABLE :: INPUT(:)\n    \n        OPEN(1,FILE=\"input.txt\")\n        N=0\n        DO\n            READ(1,*,IOSTAT=IERR)\n            IF
        (IERR .NE. 0) EXIT\n            N=N+1\n        END DO\n        REWIND(1)\n        ALLOCATE(INPUT(N))\n        READ(1,*)
        INPUT\n        CLOSE(1)\n    \n        WRITE(*,''(A,I0)'') \"Part 1: \", COUNT(INPUT(1:N-1).LT.INPUT(2:N))\n        WRITE(*,''(A,I0)'')
        \"Part 2: \", COUNT(INPUT(1:N-3).LT.INPUT(4:N))\n        DEALLOCATE(INPUT)\n        \n    END
        PROGRAM DAY1\n\nBack after missing last year. Still can''t resist doing janky
        fortran.\n\nedit: cleaned up the counts. previously was\n\n        COUNT((/
        (INPUT(I).LT.INPUT(I+1),I=1,N-1) /))\n        COUNT((/ (SUM(INPUT(I:I+2)).LT.SUM(INPUT(I+1:I+3)),I=1,N-3)
        /))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;FORTRAN&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;PROGRAM
        DAY1\n    IMPLICIT NONE\n    INTEGER :: I,N,IERR\n    INTEGER,ALLOCATABLE
        :: INPUT(:)\n\n    OPEN(1,FILE=&amp;quot;input.txt&amp;quot;)\n    N=0\n    DO\n        READ(1,*,IOSTAT=IERR)\n        IF
        (IERR .NE. 0) EXIT\n        N=N+1\n    END DO\n    REWIND(1)\n    ALLOCATE(INPUT(N))\n    READ(1,*)
        INPUT\n    CLOSE(1)\n\n    WRITE(*,&amp;#39;(A,I0)&amp;#39;) &amp;quot;Part
        1: &amp;quot;, COUNT(INPUT(1:N-1).LT.INPUT(2:N))\n    WRITE(*,&amp;#39;(A,I0)&amp;#39;)
        &amp;quot;Part 2: &amp;quot;, COUNT(INPUT(1:N-3).LT.INPUT(4:N))\n    DEALLOCATE(INPUT)\n\nEND
        PROGRAM DAY1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Back after missing last
        year. Still can&amp;#39;t resist doing janky fortran.&lt;/p&gt;\n\n&lt;p&gt;edit:
        cleaned up the counts. previously was&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    COUNT((/
        (INPUT(I).LT.INPUT(I+1),I=1,N-1) /))\n    COUNT((/ (SUM(INPUT(I:I+2)).LT.SUM(INPUT(I+1:I+3)),I=1,N-3)
        /))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrj3nn/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrj3nn", "created":
        1638337930.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmucrvd", "id": "hmucrvd", "parent_id":
        "t1_hmrj3nn", "depth": 1, "children": ["hmucrvd"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrjfyf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "rtbrsp",
        "can_mod_post": false, "created_utc": 1638338135.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_jyw3n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solved using my own language ([Riff](https://riff.cx))\n\n[Part 1](https://github.com/rootbeersoup/aoc/blob/master/21/01/1.rf)\n\n[Part
        2](https://github.com/rootbeersoup/aoc/blob/master/21/01/2.rf)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Solved using my own language (&lt;a href=\"https://riff.cx\"&gt;Riff&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/rootbeersoup/aoc/blob/master/21/01/1.rf\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/rootbeersoup/aoc/blob/master/21/01/2.rf\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrjfyf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrjfyf", "created":
        1638338135.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrkm9v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "kimvais",
        "can_mod_post": false, "created_utc": 1638338864.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_5yby8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Once again, F# `Seq` module made things trivial.\n\n[F#](https://github.com/kimvais/AoC2021/blob/master/Day1.fs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Once again, F# &lt;code&gt;Seq&lt;/code&gt;
        module made things trivial.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/kimvais/AoC2021/blob/master/Day1.fs\"&gt;F#&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrkm9v/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrkm9v", "created":
        1638338864.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrknbk", "id": "hmrknbk", "parent_id":
        "t1_hmrkm9v", "depth": 1, "children": ["hmrknbk"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrknkg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        6, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmrknkg", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrknkg/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638338887.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638338887.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmrw1st", "id": "hmrw1st", "parent_id":
        "t1_hmrknkg", "depth": 1, "children": ["hmrw1st"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmroxl9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "raevnos",
        "can_mod_post": false, "created_utc": 1638341711.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 7, "author_fullname": "t2_3995k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using Sqlite''s window functions: [paste](https://topaz.github.io/paste/#XQAAAQB8AgAAAAAAAAARiEJGPfQWNHMKDfQNPvwOtPPn+8/K4wzK0yLPk6qSzOL5tzAmGrMVQTAtQ4Psz7t8ixywT/0FfehGPlZ+LpW1zA13uRI50U+4bYKHZMqWVCzDlPnYNkVu7w3+qJER5BLeYYQaK/FkHo1W8QnDY9ELBSlT4lkACYRyvOiDqdeTfJRjSn4OXX8bI8g84ZiF4Z7Cm8u43oQ3zmDL4559QvNWLbas7Ck2hDC/yBGOkOk3B6k3cNvUhr8wzpSb5B9ZC0gOEif8TV9ThHiZRrnlrWzj42VP54/kItG6hMWmy7+50D7vDkl9ah1n//DY1fIJxV+lf5xtTSV8see4lOqop1W49cZvhUjLl5mEa/bBlFdVMfCP+IXm2aTBeSHbx5qg5FfX14a1R7h5bfC/Rk47RQb+8BEiJ2PZjLSJywM9xgmZFGZdZFBZsSoxx8ZWT0Hr1Lzq8xoKaXJjgAPwj0E//5JutAA=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using Sqlite&amp;#39;s
        window functions: &lt;a href=\"https://topaz.github.io/paste/#XQAAAQB8AgAAAAAAAAARiEJGPfQWNHMKDfQNPvwOtPPn+8/K4wzK0yLPk6qSzOL5tzAmGrMVQTAtQ4Psz7t8ixywT/0FfehGPlZ+LpW1zA13uRI50U+4bYKHZMqWVCzDlPnYNkVu7w3+qJER5BLeYYQaK/FkHo1W8QnDY9ELBSlT4lkACYRyvOiDqdeTfJRjSn4OXX8bI8g84ZiF4Z7Cm8u43oQ3zmDL4559QvNWLbas7Ck2hDC/yBGOkOk3B6k3cNvUhr8wzpSb5B9ZC0gOEif8TV9ThHiZRrnlrWzj42VP54/kItG6hMWmy7+50D7vDkl9ah1n//DY1fIJxV+lf5xtTSV8see4lOqop1W49cZvhUjLl5mEa/bBlFdVMfCP+IXm2aTBeSHbx5qg5FfX14a1R7h5bfC/Rk47RQb+8BEiJ2PZjLSJywM9xgmZFGZdZFBZsSoxx8ZWT0Hr1Lzq8xoKaXJjgAPwj0E//5JutAA=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmroxl9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmroxl9", "created":
        1638341711.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrrjzi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "brunocad",
        "can_mod_post": false, "created_utc": 1638343612.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_3eup8yen", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell (Type level only). Could be nicer if I used ghc 9 since they added
        the &lt;? type family so I wouldn''t have to do it myself\n\n\n    {-# LANGUAGE
        StandaloneKindSignatures #-}\n    {-# LANGUAGE DataKinds #-}\n    {-# LANGUAGE
        TypeOperators #-}\n    {-# LANGUAGE TypeFamilies #-}\n    {-# LANGUAGE RankNTypes
        #-}\n    {-# LANGUAGE PolyKinds #-}\n    {-# LANGUAGE UndecidableInstances
        #-}\n    {-# LANGUAGE TypeApplications #-}\n\n    module Main where\n    import
        GHC.TypeNats\n    import Data.Type.Bool\n    import Data.Type.Equality\n\n    type
        (&lt;?) m n = CmpNat m n == ''LT\n\n    type Solve1 :: [Nat] -&gt; Nat\n    type
        family Solve1 xs where\n      Solve1 ''[] = 0\n      Solve1 ''[x] = 0\n      Solve1
        (x : y : xs) = If (x &lt;? y) 1 0 + Solve1 (y : xs)\n\n    type Solve2 ::
        [Nat] -&gt; [Nat]\n    type family Solve2 xs where\n      Solve2 ''[] = ''[]\n      Solve2
        ''[x] = ''[]\n      Solve2 ''[x, y] = ''[]\n      Solve2 (x : y : z : xs)
        = (x + y + z) : Solve2 (y : z : xs)\n\n    type Solution1 = Solve1 Input\n\n    type
        Solution2 = Solve1 (Solve2 Input)\n\n    type Input = ''[156,176,175,176,183,157,150,153,154,170,162,167,170]
        -- The full input", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell
        (Type level only). Could be nicer if I used ghc 9 since they added the &amp;lt;?
        type family so I wouldn&amp;#39;t have to do it myself&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{-#
        LANGUAGE StandaloneKindSignatures #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE
        TypeOperators #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE RankNTypes
        #-}\n{-# LANGUAGE PolyKinds #-}\n{-# LANGUAGE UndecidableInstances #-}\n{-#
        LANGUAGE TypeApplications #-}\n\nmodule Main where\nimport GHC.TypeNats\nimport
        Data.Type.Bool\nimport Data.Type.Equality\n\ntype (&amp;lt;?) m n = CmpNat
        m n == &amp;#39;LT\n\ntype Solve1 :: [Nat] -&amp;gt; Nat\ntype family Solve1
        xs where\n  Solve1 &amp;#39;[] = 0\n  Solve1 &amp;#39;[x] = 0\n  Solve1 (x
        : y : xs) = If (x &amp;lt;? y) 1 0 + Solve1 (y : xs)\n\ntype Solve2 :: [Nat]
        -&amp;gt; [Nat]\ntype family Solve2 xs where\n  Solve2 &amp;#39;[] = &amp;#39;[]\n  Solve2
        &amp;#39;[x] = &amp;#39;[]\n  Solve2 &amp;#39;[x, y] = &amp;#39;[]\n  Solve2
        (x : y : z : xs) = (x + y + z) : Solve2 (y : z : xs)\n\ntype Solution1 = Solve1
        Input\n\ntype Solution2 = Solve1 (Solve2 Input)\n\ntype Input = &amp;#39;[156,176,175,176,183,157,150,153,154,170,162,167,170]
        -- The full input\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrrjzi/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrrjzi", "created": 1638343612.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hms4w4r", "id": "hms4w4r", "parent_id": "t1_hmrrjzi", "depth": 1, "children":
        ["hms4w4r"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrtdu0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "R7900",
        "can_mod_post": false, "created_utc": 1638345001.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_g7nuc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#  \nGotta love LINQ\n\nhttps://github.com/hlim29/AdventOfCode2021/blob/master/Days/DayOne.cs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;br/&gt;\nGotta
        love LINQ&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/hlim29/AdventOfCode2021/blob/master/Days/DayOne.cs\"&gt;https://github.com/hlim29/AdventOfCode2021/blob/master/Days/DayOne.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtdu0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrtdu0", "created":
        1638345001.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmsgkzz", "id": "hmsgkzz", "parent_id":
        "t1_hmrtdu0", "depth": 1, "children": ["hmsgkzz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrwfe7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Swynndla",
        "can_mod_post": false, "created_utc": 1638347404.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 7, "author_fullname": "t2_jzqtvr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "nim\n\n    import std/[strutils, sequtils, sugar, math]\n    \n    let l
        = readFile(\"inputs/01.txt\").strip.splitLines.map(parseInt)\n    \n    echo
        \"part1: \", sum(collect(for i in 0 .. l.high - 1: (if l[i] &lt; l[i + 1]:
        1)))\n    echo \"part2: \", sum(collect(for i in 0 .. l.high - 3: (if sum(l[i
        .. i + 2]) &lt; sum(l[i + 1 .. i + 3]): 1)))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;nim&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import std/[strutils,
        sequtils, sugar, math]\n\nlet l = readFile(&amp;quot;inputs/01.txt&amp;quot;).strip.splitLines.map(parseInt)\n\necho
        &amp;quot;part1: &amp;quot;, sum(collect(for i in 0 .. l.high - 1: (if l[i]
        &amp;lt; l[i + 1]: 1)))\necho &amp;quot;part2: &amp;quot;, sum(collect(for
        i in 0 .. l.high - 3: (if sum(l[i .. i + 2]) &amp;lt; sum(l[i + 1 .. i + 3]):
        1)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrwfe7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrwfe7", "created":
        1638347404.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hms7r1a", "id": "hms7r1a", "parent_id":
        "t1_hmrwfe7", "depth": 1, "children": ["hms7r1a"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsf8k8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "AltPapaya",
        "can_mod_post": false, "created_utc": 1638362329.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_22sdsjh4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Python solution\n\n    data = [*map(int, open(''input.txt'', r))]\n    part_1
        = sum(map(int.__gt__, data[1:], data))\n    part_2 = sum(map(int.__gt__, data[3:],
        data))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        Python solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data = [*map(int, open(&amp;#39;input.txt&amp;#39;,
        r))]\npart_1 = sum(map(int.__gt__, data[1:], data))\npart_2 = sum(map(int.__gt__,
        data[3:], data))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsf8k8/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsf8k8", "created": 1638362329.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 6, "name":
        "t1_hmsjvom", "id": "hmsjvom", "parent_id": "t1_hmsf8k8", "depth": 1, "children":
        ["hmsjvom"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmssm7i", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "timvisee",
        "can_mod_post": false, "created_utc": 1638369319.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_7afar", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\n[Part 1](https://github.com/timvisee/advent-of-code-2021/blob/master/day01a/src/main.rs)\n\n[Part
        2](https://github.com/timvisee/advent-of-code-2021/blob/master/day01b/src/main.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/timvisee/advent-of-code-2021/blob/master/day01a/src/main.rs\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/timvisee/advent-of-code-2021/blob/master/day01b/src/main.rs\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmssm7i/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmssm7i", "created":
        1638369319.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmszm7h", "id": "hmszm7h", "parent_id":
        "t1_hmssm7i", "depth": 1, "children": ["hmszm7h"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638372222.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsu0e1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Littleish",
        "can_mod_post": false, "created_utc": 1638369956.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_4qacn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python 3.10: Using Pandas\n\n&amp;#x200B;\n\n    import pandas as pd\n    df
        = pd.read_csv(''data1input.txt'', header=None, names=[''value''])\n    \n    part1
        = sum(df.value &gt; df.value.shift()) \n    part2 = sum(df.value.rolling(3).sum()
        &gt; df.value.rolling(3).sum().shift())\n    \n    print(f''The answer for
        part 1: {part1},\\n answer for part 2: {part2}'')", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Python 3.10: Using Pandas&lt;/h1&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        pandas as pd\ndf = pd.read_csv(&amp;#39;data1input.txt&amp;#39;, header=None,
        names=[&amp;#39;value&amp;#39;])\n\npart1 = sum(df.value &amp;gt; df.value.shift())
        \npart2 = sum(df.value.rolling(3).sum() &amp;gt; df.value.rolling(3).sum().shift())\n\nprint(f&amp;#39;The
        answer for part 1: {part1},\\n answer for part 2: {part2}&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsu0e1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsu0e1", "created":
        1638369956.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmta3ce",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "MichalMarsalek",
        "can_mod_post": false, "created_utc": 1638376632.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 7, "author_fullname": "t2_idz5q4m", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nim\n\n    day 1:\n        part 1:\n            zip(ints, ints[1..^1]).filterIt(it[1]&gt;it[0]).len\n        part
        2:\n            zip(ints, ints[3..^1]).filterIt(it[1]&gt;it[0]).len\n\nusing
        my [templates](https://github.com/MichalMarsalek/Advent-of-code/tree/master/2021/Nim)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nim&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;day
        1:\n    part 1:\n        zip(ints, ints[1..^1]).filterIt(it[1]&amp;gt;it[0]).len\n    part
        2:\n        zip(ints, ints[3..^1]).filterIt(it[1]&amp;gt;it[0]).len\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;using
        my &lt;a href=\"https://github.com/MichalMarsalek/Advent-of-code/tree/master/2021/Nim\"&gt;templates&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmta3ce/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmta3ce", "created":
        1638376632.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmuxfui", "id": "hmuxfui", "parent_id":
        "t1_hmta3ce", "depth": 1, "children": ["hmuxfui"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtwve0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "smokebath",
        "can_mod_post": false, "created_utc": 1638385488.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_81tbl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python 3.10](https://gist.github.com/stereoabuse/ab60f0d0776389a21d506f976b6bf1a8),
        full code on the gist but important stuff below\n\n    def day_1_part_1(ins):\n        return
        sum(ins[i+1] &gt; ins[i] for i in range(len(ins)-1))\n    \n    def day_1_part_2(ins):\n        sliding_window
        = [a + b + c for a, b, c, in zip(ins[:-2], ins[1:-1], ins[2:])]\n        return
        day_1_part_1(sliding_window)\n    \n    vals = integers(puzzle_input(1))\n    \n    print(f''Solution
        for Day 1 Part 1: {day_1_part_1(vals)}'')\n    print(f''Solution for Day 2
        Part 2: {day_1_part_2(vals)}'')\n    \nI see from other solutions I could
        have simplified part 2 to ''zip(ins, ins[3:])'' instead of the three chunks
        I used.  This subreddit is a great way to learn :)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://gist.github.com/stereoabuse/ab60f0d0776389a21d506f976b6bf1a8\"&gt;Python
        3.10&lt;/a&gt;, full code on the gist but important stuff below&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        day_1_part_1(ins):\n    return sum(ins[i+1] &amp;gt; ins[i] for i in range(len(ins)-1))\n\ndef
        day_1_part_2(ins):\n    sliding_window = [a + b + c for a, b, c, in zip(ins[:-2],
        ins[1:-1], ins[2:])]\n    return day_1_part_1(sliding_window)\n\nvals = integers(puzzle_input(1))\n\nprint(f&amp;#39;Solution
        for Day 1 Part 1: {day_1_part_1(vals)}&amp;#39;)\nprint(f&amp;#39;Solution
        for Day 2 Part 2: {day_1_part_2(vals)}&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        see from other solutions I could have simplified part 2 to &amp;#39;zip(ins,
        ins[3:])&amp;#39; instead of the three chunks I used.  This subreddit is a
        great way to learn :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtwve0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtwve0", "created":
        1638385488.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmu01yw", "id": "hmu01yw", "parent_id":
        "t1_hmtwve0", "depth": 1, "children": ["hmu01yw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmty5rx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "censustaker1",
        "can_mod_post": false, "created_utc": 1638385989.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_3w1qubz0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "ghetto perl solutions\n\n```\n$p=undef;$c=0;  \nwhile (&lt;&gt;) {  \n\tchomp;  \n\t$c++
        if ($p &amp;&amp; $\\_ &gt; $p);  \n\t$p=$\\_;  \n}  \nprint \"$c\\\\n\";\n```\n\n```\n$n=0;@a=();$p=-1;$c=0;\nwhile
        (&lt;&gt;) {\n\tchomp;\n\tif (scalar @a == 2) {\n\t\t$t=$_;\n\t\tmap {$t +=
        $_} @a;\n\t\t$n++ if ($p &gt; -1 &amp;&amp; $t &gt; $p);\n\t\t$p = $t;\n\t}\n\t$a[$c++&amp;1]=$_;\n}\nprint
        \"$n\\n\";\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;ghetto
        perl solutions&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n$p=undef;$c=0;  \nwhile
        (&amp;lt;&amp;gt;) {  \n    chomp;  \n    $c++ if ($p &amp;amp;&amp;amp; $\\_
        &amp;gt; $p);  \n    $p=$\\_;  \n}  \nprint &amp;quot;$c\\\\n&amp;quot;;\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n$n=0;@a=();$p=-1;$c=0;\nwhile
        (&amp;lt;&amp;gt;) {\n    chomp;\n    if (scalar @a == 2) {\n        $t=$_;\n        map
        {$t += $_} @a;\n        $n++ if ($p &amp;gt; -1 &amp;amp;&amp;amp; $t &amp;gt;
        $p);\n        $p = $t;\n    }\n    $a[$c++&amp;amp;1]=$_;\n}\nprint &amp;quot;$n\\n&amp;quot;;\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmty5rx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmty5rx", "created":
        1638385989.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu3smg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "gwillicoder",
        "can_mod_post": false, "created_utc": 1638388165.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_arru05z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here is my solution in Python:\n\n    from aocd import numbers\n    \n    p1
        = sum(y&gt;x for x,y in zip(numbers, numbers[1:]))\n    p2 = sum(y&gt;x for
        x,y in zip(numbers, numbers[3:]))\n    print(f\"Day1 - Part 1: {p1}\")\n    print(f\"Day1
        - Part 2: {p2}\")", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here
        is my solution in Python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from aocd import
        numbers\n\np1 = sum(y&amp;gt;x for x,y in zip(numbers, numbers[1:]))\np2 =
        sum(y&amp;gt;x for x,y in zip(numbers, numbers[3:]))\nprint(f&amp;quot;Day1
        - Part 1: {p1}&amp;quot;)\nprint(f&amp;quot;Day1 - Part 2: {p2}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu3smg/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu3smg", "created":
        1638388165.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmuu1qa", "id": "hmuu1qa", "parent_id":
        "t1_hmu3smg", "depth": 1, "children": ["hmuu1qa"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu4ns7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ShadowwwsAsm",
        "can_mod_post": false, "created_utc": 1638388499.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_7ifn9lix", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "In nasm, I''ll do as many days as I can  \n\n\n[part1](https://github.com/Rom1-C/AdventOfCode2021/blob/main/1a.asm)\n\n[part2](https://github.com/Rom1-C/AdventOfCode2021/blob/main/1b.asm)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In nasm, I&amp;#39;ll
        do as many days as I can  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Rom1-C/AdventOfCode2021/blob/main/1a.asm\"&gt;part1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Rom1-C/AdventOfCode2021/blob/main/1b.asm\"&gt;part2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu4ns7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu4ns7", "created":
        1638388499.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmu7luo", "id": "hmu7luo", "parent_id":
        "t1_hmu4ns7", "depth": 1, "children": ["hmu7luo"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638411369.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmua3c5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "LionSuneater",
        "can_mod_post": false, "created_utc": 1638390561.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 7, "author_fullname": "t2_4don0ngl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python] Convolution ftw.\n\n    import numpy as np\n    depths = np.loadtxt(''day01-data'',
        dtype=int)\n    convolved_depths = np.convolve(depths, np.ones(3), ''valid'')\n    answer
        = lambda x: sum(x[:-1] &lt; x[1:])\n    print(answer(depths), answer(convolved_depths))\n\nedit:
        slightly faster with np.sum and np.diff for line 4...\n\n    answer = lambda
        x: (np.diff(x)&gt;0).sum()", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Python]
        Convolution ftw.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import numpy as np\ndepths
        = np.loadtxt(&amp;#39;day01-data&amp;#39;, dtype=int)\nconvolved_depths =
        np.convolve(depths, np.ones(3), &amp;#39;valid&amp;#39;)\nanswer = lambda
        x: sum(x[:-1] &amp;lt; x[1:])\nprint(answer(depths), answer(convolved_depths))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;edit:
        slightly faster with np.sum and np.diff for line 4...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;answer
        = lambda x: (np.diff(x)&amp;gt;0).sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmua3c5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmua3c5", "created":
        1638390561.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmup2x2", "id": "hmup2x2", "parent_id":
        "t1_hmua3c5", "depth": 1, "children": ["hmup2x2", "hmueh5i"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmur5jh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "5stars_3stars",
        "can_mod_post": false, "created_utc": 1638397010.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_68p2xgyj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Clojure, both parts:\n```\n(def solve #(-&gt;&gt; (map &lt; %1 (next %1))
        (filter true?) count))\n(println (solve input) (-&gt;&gt; input (partition
        3 1) (map #(apply + %1)) solve))\n```\nAssumes `input` to be a vector of numbers.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Clojure, both parts:\n&lt;code&gt;\n(def
        solve #(-&amp;gt;&amp;gt; (map &amp;lt; %1 (next %1)) (filter true?) count))\n(println
        (solve input) (-&amp;gt;&amp;gt; input (partition 3 1) (map #(apply + %1))
        solve))\n&lt;/code&gt;\nAssumes &lt;code&gt;input&lt;/code&gt; to be a vector
        of numbers.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmur5jh/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmur5jh", "created":
        1638397010.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmvyo5t", "id": "hmvyo5t", "parent_id":
        "t1_hmur5jh", "depth": 1, "children": ["hmvyo5t"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv9p9p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "bottlenix",
        "can_mod_post": false, "created_utc": 1638405032.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_27qdfck", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Perl**\n\nWas able to do this with [one-liners for each Part](https://git.samirparikh.com/aoc2021/raw/day01.pl).  This
        will probably be the only day I can solve the puzzle on the day it is published!\n\nI
        noticed that in Part 2,  you can ignore the two measurements that overlap
        the two windows to slightly simplify the calculation at the expense of clarity.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Perl&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Was
        able to do this with &lt;a href=\"https://git.samirparikh.com/aoc2021/raw/day01.pl\"&gt;one-liners
        for each Part&lt;/a&gt;.  This will probably be the only day I can solve the
        puzzle on the day it is published!&lt;/p&gt;\n\n&lt;p&gt;I noticed that in
        Part 2,  you can ignore the two measurements that overlap the two windows
        to slightly simplify the calculation at the expense of clarity.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv9p9p/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv9p9p", "created":
        1638405032.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvlosw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "stevelosh",
        "can_mod_post": false, "created_utc": 1638410253.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_3qf38", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Common Lisp\n\n    (define-problem (2021 1) (data read-numbers) (1754 1789)\n      (values
        (iterate (for d :in (nthcdr 1 data))\n                       (for p :in data)\n                       (counting
        (&gt; d p)))\n              (iterate (for d :in (nthcdr 3 data))\n                       (for
        p :in data)\n                       (counting (&gt; d p)))))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Common Lisp&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(define-problem
        (2021 1) (data read-numbers) (1754 1789)\n  (values (iterate (for d :in (nthcdr
        1 data))\n                   (for p :in data)\n                   (counting
        (&amp;gt; d p)))\n          (iterate (for d :in (nthcdr 3 data))\n                   (for
        p :in data)\n                   (counting (&amp;gt; d p)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvlosw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvlosw", "created":
        1638410253.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmreo3u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jonathan_paulson",
        "can_mod_post": false, "created_utc": 1638335407.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_k7ou5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I got 12th on part 1 and 55th on part 2. Video of me solving: [https://youtu.be/pkLfyRwDMMw](https://youtu.be/pkLfyRwDMMw).
        Python3 code: [https://github.com/jonathanpaulson/AdventOfCode/blob/master/2021/1.py](https://github.com/jonathanpaulson/AdventOfCode/blob/master/2021/1.py)\n\nTried
        using a template, but I think it made me slower for part 2 by encouraging
        iterating over lines instead of just reading them into a list.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I got 12th on part 1 and 55th on part 2.
        Video of me solving: &lt;a href=\"https://youtu.be/pkLfyRwDMMw\"&gt;https://youtu.be/pkLfyRwDMMw&lt;/a&gt;.
        Python3 code: &lt;a href=\"https://github.com/jonathanpaulson/AdventOfCode/blob/master/2021/1.py\"&gt;https://github.com/jonathanpaulson/AdventOfCode/blob/master/2021/1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Tried
        using a template, but I think it made me slower for part 2 by encouraging
        iterating over lines instead of just reading them into a list.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmreo3u/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmreo3u", "created":
        1638335407.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrfean", "id": "hmrfean", "parent_id":
        "t1_hmreo3u", "depth": 1, "children": ["hmrfean"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638338397.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrevxl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "DFreiberg",
        "can_mod_post": false, "created_utc": 1638335526.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_87ozx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**[Mathematica](https://github.com/HiggstonRainbird/AoC-2021/blob/master/Day%2001/AoC%20Day%201.wls/),  1979
        / 513**\n----\n\nNote to self: when saving an input, be sure not to leave
        out the last line.\n\n**Part 1:**\n\n    Count[Differences[input], _?(# &gt;
        0 &amp;)]\n\n**Part 2:**\n\n    Count[Differences[Total /@ Partition[input,
        3, 1]], _?(# &gt; 0 &amp;)]\n\n**[POEM]: Stalling The Seven Seas**\n---\n\nToday,
        we lost the sleigh keys on the ocean:  \nA tragedy we''ll need a month to
        right.  \nThey''re truly lost; we haven''t got a notion  \nOf where they got
        to after leaving sight.  \nAnd so from duty verging on devotion  \nWe''ll
        start our month-long enterprise tonight.  \nWe certainly won''t rummage in
        slow-motion...  \n(...okay, we just like submarines, alright?)  \n\nWe''ll
        need a month, at least, to find the keys  \nWhich sadly we misplaced beneath
        the seas.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;&lt;strong&gt;&lt;a
        href=\"https://github.com/HiggstonRainbird/AoC-2021/blob/master/Day%2001/AoC%20Day%201.wls/\"&gt;Mathematica&lt;/a&gt;,  1979
        / 513&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;p&gt;Note to self: when saving an input,
        be sure not to leave out the last line.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        1:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Count[Differences[input],
        _?(# &amp;gt; 0 &amp;amp;)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        2:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Count[Differences[Total
        /@ Partition[input, 3, 1]], _?(# &amp;gt; 0 &amp;amp;)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;&lt;strong&gt;[POEM]:
        Stalling The Seven Seas&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;p&gt;Today, we lost
        the sleigh keys on the ocean:&lt;br/&gt;\nA tragedy we&amp;#39;ll need a month
        to right.&lt;br/&gt;\nThey&amp;#39;re truly lost; we haven&amp;#39;t got a
        notion&lt;br/&gt;\nOf where they got to after leaving sight.&lt;br/&gt;\nAnd
        so from duty verging on devotion&lt;br/&gt;\nWe&amp;#39;ll start our month-long
        enterprise tonight.&lt;br/&gt;\nWe certainly won&amp;#39;t rummage in slow-motion...&lt;br/&gt;\n(...okay,
        we just like submarines, alright?)  &lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;ll need
        a month, at least, to find the keys&lt;br/&gt;\nWhich sadly we misplaced beneath
        the seas.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrevxl/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrevxl", "created":
        1638335526.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrkq2p", "id": "hmrkq2p", "parent_id":
        "t1_hmrevxl", "depth": 1, "children": ["hmrkq2p"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfkh9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "rabuf",
        "can_mod_post": false, "created_utc": 1638335899.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_38xc9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### [Common Lisp](https://github.com/rabuf/advent-of-code/blob/master/2021/2021.01.org)\n\nI
        may do it again in another language, and there are cleaner ways to do this,
        but this is where I''m starting today.\n\n    (defun increase-count (list)\n      (loop\n         for
        curr = (car list) then item\n         for item in (cdr list)\n         count
        (&lt; curr item)))\n\n    (defun rolling-sum (list)\n      (loop for s = list
        then (cdr s)\n           while (&lt;= 3 (length s))\n           collect (+
        (car s) (cadr s) (caddr s))))\n\nA more functional approach (implemented after
        submitting my answers) is to use `count` and `map`:\n\n    (count ''t (mapcar
        #''&lt; list (cdr list)))   ;; to replace the body of increase-count\n    (mapcar
        #''+ list (cdr list) (cddr list))) ;; to replace the body of rolling-sum",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h3&gt;&lt;a href=\"https://github.com/rabuf/advent-of-code/blob/master/2021/2021.01.org\"&gt;Common
        Lisp&lt;/a&gt;&lt;/h3&gt;\n\n&lt;p&gt;I may do it again in another language,
        and there are cleaner ways to do this, but this is where I&amp;#39;m starting
        today.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun increase-count (list)\n  (loop\n     for
        curr = (car list) then item\n     for item in (cdr list)\n     count (&amp;lt;
        curr item)))\n\n(defun rolling-sum (list)\n  (loop for s = list then (cdr
        s)\n       while (&amp;lt;= 3 (length s))\n       collect (+ (car s) (cadr
        s) (caddr s))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A more functional approach
        (implemented after submitting my answers) is to use &lt;code&gt;count&lt;/code&gt;
        and &lt;code&gt;map&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(count
        &amp;#39;t (mapcar #&amp;#39;&amp;lt; list (cdr list)))   ;; to replace the
        body of increase-count\n(mapcar #&amp;#39;+ list (cdr list) (cddr list)))
        ;; to replace the body of rolling-sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfkh9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfkh9", "created":
        1638335899.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmrh908", "id": "hmrh908", "parent_id":
        "t1_hmrfkh9", "depth": 1, "children": ["hmrh908"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrg50y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "waffle3z",
        "can_mod_post": false, "created_utc": 1638336203.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_253kexus", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Lua 79/24, `getinput()` retrieves the input text for the day corresponding
        with the filename\n\n    t = {}\n    for v in getinput():gmatch(\"%d+\") do\n    \tt[#t+1]
        = tonumber(v)\n    end\n    \n    c = 0\n    for i = 1, #t-1 do\n    \tif
        t[i] &lt; t[i+1] then c = c + 1 end\n    end\n    print(c)\n    \n    c =
        0\n    for i = 1, #t-3 do\n    \tif t[i] &lt; t[i+3] then c = c + 1 end\n    end\n    print(c)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Lua 79/24, &lt;code&gt;getinput()&lt;/code&gt;
        retrieves the input text for the day corresponding with the filename&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;t
        = {}\nfor v in getinput():gmatch(&amp;quot;%d+&amp;quot;) do\n    t[#t+1]
        = tonumber(v)\nend\n\nc = 0\nfor i = 1, #t-1 do\n    if t[i] &amp;lt; t[i+1]
        then c = c + 1 end\nend\nprint(c)\n\nc = 0\nfor i = 1, #t-3 do\n    if t[i]
        &amp;lt; t[i+3] then c = c + 1 end\nend\nprint(c)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrg50y/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrg50y", "created":
        1638336203.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrgg40",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "kbielefe",
        "can_mod_post": false, "created_utc": 1638336369.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_3be8v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## [Scala 3](https://github.com/kbielefe/advent-of-code/blob/master/src/main/scala/2021/Day1.scala)\n\nHave
        kind of a cool input parser library this year.  I tell it I want input as
        a `List[Int]` and it pulls in the right type classes to parse it as such.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;&lt;a href=\"https://github.com/kbielefe/advent-of-code/blob/master/src/main/scala/2021/Day1.scala\"&gt;Scala
        3&lt;/a&gt;&lt;/h2&gt;\n\n&lt;p&gt;Have kind of a cool input parser library
        this year.  I tell it I want input as a &lt;code&gt;List[Int]&lt;/code&gt;
        and it pulls in the right type classes to parse it as such.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgg40/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgg40", "created":
        1638336369.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrh2ic", "id": "hmrh2ic", "parent_id":
        "t1_hmrgg40", "depth": 1, "children": ["hmrh2ic"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrhfgj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        6, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmrhfgj", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhfgj/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638336931.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638336931.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrhg9e", "id": "hmrhg9e", "parent_id":
        "t1_hmrhfgj", "depth": 1, "children": ["hmrhg9e"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrhzrx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "bcgroom",
        "can_mod_post": false, "created_utc": 1638337261.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_7zp95", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Elixir\n\nFeels good to be back! Decided to do Elixir again since it was
        so much fun last year. I also tried to do day 1 as fast as possible, kind
        of struggled with the windowing in part 2 and got just over 17 minutes,  pretty
        happy with that. I cleaned it up a lot and this is what I came up with:\n\n      defmodule
        Advent2021.Days.Day1 do\n      use Advent2021.Day\n\n      def part_one(input)
        do\n        count_increases(input)\n      end\n\n      def part_two(input)
        do\n        window(input)\n        |&gt; count_increases()\n      end\n\n      defp
        count_increases(list, previous \\\\ nil, count \\\\ 0)\n      defp count_increases([],
        _previous, count), do: count\n      defp count_increases([current | rest],
        nil, 0), do: count_increases(rest, current, 0)\n      defp count_increases([current
        | rest], previous, count) do\n        next = if current &gt; previous, do:
        count + 1, else: count\n        count_increases(rest, current, next)\n      end\n\n      defp
        window([]), do: []\n      defp window(input) do\n        [_ | rest] = input\n\n        case
        input |&gt; Enum.take(3) do\n          [one, two, three] -&gt; [one + two
        + three | window(rest)]\n          _ -&gt; []\n        end\n      end\n    end\n\n\n[Full
        Code](https://github.com/ericgroom/advent2021/blob/master/lib/days/day_1.ex)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;p&gt;Feels
        good to be back! Decided to do Elixir again since it was so much fun last
        year. I also tried to do day 1 as fast as possible, kind of struggled with
        the windowing in part 2 and got just over 17 minutes,  pretty happy with that.
        I cleaned it up a lot and this is what I came up with:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  defmodule
        Advent2021.Days.Day1 do\n  use Advent2021.Day\n\n  def part_one(input) do\n    count_increases(input)\n  end\n\n  def
        part_two(input) do\n    window(input)\n    |&amp;gt; count_increases()\n  end\n\n  defp
        count_increases(list, previous \\\\ nil, count \\\\ 0)\n  defp count_increases([],
        _previous, count), do: count\n  defp count_increases([current | rest], nil,
        0), do: count_increases(rest, current, 0)\n  defp count_increases([current
        | rest], previous, count) do\n    next = if current &amp;gt; previous, do:
        count + 1, else: count\n    count_increases(rest, current, next)\n  end\n\n  defp
        window([]), do: []\n  defp window(input) do\n    [_ | rest] = input\n\n    case
        input |&amp;gt; Enum.take(3) do\n      [one, two, three] -&amp;gt; [one +
        two + three | window(rest)]\n      _ -&amp;gt; []\n    end\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ericgroom/advent2021/blob/master/lib/days/day_1.ex\"&gt;Full
        Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhzrx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrhzrx", "created":
        1638337261.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrkw73",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "CodeIsTheEnd",
        "can_mod_post": false, "created_utc": 1638339039.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_9461uxud", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Ruby**: 1:37/3:44, 370/280\n\nHere''s a [recording](https://youtu.be/gw8aNa8AuyA)
        of me solving it, and the code is [here](https://github.com/PaulJuliusMartinez/advent-of-code/blob/master/2021/dec01.rb).
        I stream myself solving every day''s problem on [Twitch](https://twitch.tv/codeistheend)!\n\nPretty
        standard Day 1. Might''ve made the leaderboard for Part 1 if I didn''t get
        a 504, who knows though. Definitely not for Part 2.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: 1:37/3:44, 370/280&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s
        a &lt;a href=\"https://youtu.be/gw8aNa8AuyA\"&gt;recording&lt;/a&gt; of me
        solving it, and the code is &lt;a href=\"https://github.com/PaulJuliusMartinez/advent-of-code/blob/master/2021/dec01.rb\"&gt;here&lt;/a&gt;.
        I stream myself solving every day&amp;#39;s problem on &lt;a href=\"https://twitch.tv/codeistheend\"&gt;Twitch&lt;/a&gt;!&lt;/p&gt;\n\n&lt;p&gt;Pretty
        standard Day 1. Might&amp;#39;ve made the leaderboard for Part 1 if I didn&amp;#39;t
        get a 504, who knows though. Definitely not for Part 2.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrkw73/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrkw73", "created":
        1638339039.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmrn4y5", "id": "hmrn4y5", "parent_id":
        "t1_hmrkw73", "depth": 1, "children": ["hmrn4y5", "hms181y", "hmrn3ve"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrm9ku", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "musifter",
        "can_mod_post": false, "created_utc": 1638339914.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_cwt0kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Perl**\n\nThis is the first language I did tonight.  Have been writing
        mostly in other languages, so it came out quite C-ish.\n\nhttps://pastebin.com/hZZ0uU6m",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Perl&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This
        is the first language I did tonight.  Have been writing mostly in other languages,
        so it came out quite C-ish.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/hZZ0uU6m\"&gt;https://pastebin.com/hZZ0uU6m&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrm9ku/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrm9ku", "created":
        1638339914.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638345712.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrp9h5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "clouddjr",
        "can_mod_post": false, "created_utc": 1638341950.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_1505cu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin and its built-in window function\n\n    class Day01(private val input:
        List&lt;Int&gt;) {\n    \n        fun solvePart1() = countIncreased(2)\n    \n        fun
        solvePart2() = countIncreased(4)\n    \n        private fun countIncreased(windowSize:
        Int) =\n            input.windowed(windowSize).count { window -&gt; window.last()
        &gt; window.first() }\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin
        and its built-in window function&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class
        Day01(private val input: List&amp;lt;Int&amp;gt;) {\n\n    fun solvePart1()
        = countIncreased(2)\n\n    fun solvePart2() = countIncreased(4)\n\n    private
        fun countIncreased(windowSize: Int) =\n        input.windowed(windowSize).count
        { window -&amp;gt; window.last() &amp;gt; window.first() }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrp9h5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrp9h5", "created":
        1638341950.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 12, "name": "t1_hmrvflo", "id": "hmrvflo", "parent_id":
        "t1_hmrp9h5", "depth": 1, "children": ["hmrvflo", "hmrw76h", "hmrqpyr", "hmrt1vj",
        "hmrta28", "hmrtwb3"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638345704.0, "mod_reason_by": null, "banned_by": null, "ups": 5,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrpoa6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "trollerskates1",
        "can_mod_post": false, "created_utc": 1638342240.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_hhre0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Scala using `sliding`\n\n    object Day01 {\n      def main(args: Array[String]):
        Unit = {\n        val input = Using.resource(Source.fromResource(\u201c2021/day01.txt\u201d))(_.getLines().map(_.toInt).toList)\n\n        val
        part1 = input.sliding(2).count { case List(a, b) =&gt; b &gt; a }\n        println(s\u201dPart
        1: $part1\u201d)\n\n        val part2 = input.sliding(3).sliding(2).count
        { case Seq(a, b) =&gt; b.sum &gt; a.sum }\n        println(s\u201dPart 2:
        $part2\u201d)\n      }\n    }\n\nEdit: fixed formatting", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Scala using &lt;code&gt;sliding&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;object
        Day01 {\n  def main(args: Array[String]): Unit = {\n    val input = Using.resource(Source.fromResource(\u201c2021/day01.txt\u201d))(_.getLines().map(_.toInt).toList)\n\n    val
        part1 = input.sliding(2).count { case List(a, b) =&amp;gt; b &amp;gt; a }\n    println(s\u201dPart
        1: $part1\u201d)\n\n    val part2 = input.sliding(3).sliding(2).count { case
        Seq(a, b) =&amp;gt; b.sum &amp;gt; a.sum }\n    println(s\u201dPart 2: $part2\u201d)\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit:
        fixed formatting&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrpoa6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrpoa6", "created":
        1638342240.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrtv7y", "id": "hmrtv7y", "parent_id":
        "t1_hmrpoa6", "depth": 1, "children": ["hmrtv7y"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrzaih",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "drmattmcd",
        "can_mod_post": false, "created_utc": 1638349824.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_1dbvkj8b", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python with numpy:\n\n    import numpy as np\n    \n    def read_input():\n    with
        open(''day_01_input.txt'', ''r'') as f:\n        return np.array(f.read().split(''\\n''),
        dtype=''int'')\n    \n    def part_01(x): \n        # Number of increases
        \n        return np.sum((x[1:] - x[0:-1]) &gt; 0)\n    \n    def part_02(x):
        \n        # Number of increases of 3 element rolling window \n        return
        part_01(np.convolve(x, np.ones(3), ''valid''))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python with numpy:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        numpy as np\n\ndef read_input():\nwith open(&amp;#39;day_01_input.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as f:\n    return np.array(f.read().split(&amp;#39;\\n&amp;#39;),
        dtype=&amp;#39;int&amp;#39;)\n\ndef part_01(x): \n    # Number of increases
        \n    return np.sum((x[1:] - x[0:-1]) &amp;gt; 0)\n\ndef part_02(x): \n    #
        Number of increases of 3 element rolling window \n    return part_01(np.convolve(x,
        np.ones(3), &amp;#39;valid&amp;#39;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrzaih/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrzaih", "created":
        1638349824.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hms30gr", "id": "hms30gr", "parent_id":
        "t1_hmrzaih", "depth": 1, "children": ["hms30gr", "hmrzqix"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms28dt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "t-rkr",
        "can_mod_post": false, "created_utc": 1638352399.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_jkrqxty", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Perl**\n\n[Link to Code](https://gitlab.com/t-rkr/advent-of-code-2021/-/blob/main/day1/day1.pl)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Perl&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gitlab.com/t-rkr/advent-of-code-2021/-/blob/main/day1/day1.pl\"&gt;Link
        to Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms28dt/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms28dt", "created":
        1638352399.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms3ugv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "lynerist",
        "can_mod_post": false, "created_utc": 1638353808.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_314jez9d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Golang commented solution\n\nhttps://github.com/lynerist/Advent-of-code-2021-golang/blob/master/Day_01/day01_b.go",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Golang commented solution&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/lynerist/Advent-of-code-2021-golang/blob/master/Day_01/day01_b.go\"&gt;https://github.com/lynerist/Advent-of-code-2021-golang/blob/master/Day_01/day01_b.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms3ugv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms3ugv", "created":
        1638353808.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1486, "name": "t1_hms52ki", "id": "hms52ki", "parent_id":
        "t3_r66vow", "depth": 0, "children": ["hms52ki", "hms968d", "hmsatqd", "hmsa6ey",
        "hmskfds", "hmsduyy", "hmsjmk5", "hmtwtbw", "hmsxt6e", "hmskvpo", "hmtfdrf",
        "hmtvl66", "hmt500x", "hmsngjc", "hmrndxm", "hmrf5mi", "hmyb5l7", "hmt8nh7",
        "hmtd9xp", "hmsx4gc", "hmripy5", "hmtj1jx", "hmuxot7", "hmud1xk", "hmvkvm6",
        "hmtnako", "hmrpogf", "hmwtvis", "hmro9sd", "hms5nl3", "hmtnk5b", "hmtast6",
        "hmrep8d", "hmrgute", "hmrfgli", "hmrl33k", "hmuc20z", "hmrfsy6", "hmrwv2f",
        "hmreq3w", "hmrjagu", "hmsskap", "hmrnshk", "hmrfwhi", "hmrjh38", "hmrzld2",
        "hms8dah", "hmslw5f", "hmrssht", "hmrknr4", "hmri5lq", "hmspmzw", "hmreo55",
        "hmrfro5", "hms0uxp", "hmthspq", "hmusk2z", "hmt5svi", "hmrgb09", "hmx9ay3",
        "hmutxld", "hms4yu6", "hmrnsys", "hms2udb", "hmrhfv0", "hmri6n9", "hmrij5r",
        "hmrregn", "hms8eou", "hmrhgz4", "hms4xe2", "hmrnh5o", "hmrky8s", "hmsnuj3",
        "hmugx2v", "hmrgwdu", "hmsea34", "hmrzdrp", "hmrqzuc", "hmrkats", "hmrhubd",
        "hmuobbx", "hmv9qtx", "hmtxmw2", "hmrq8km", "hmt8gl5", "hmrmz20", "hmrorf8",
        "hmu6oh6", "hms0q3g", "hmvaoz0", "hmuz3su", "hmrua63", "hmvdgju", "hmri3iq",
        "hmrgv1n", "hmte69a", "hmrfpkd", "hmu4zel", "hmtiwbk", "hms664r", "hmukpkv",
        "hmro017", "hmrkn0z", "hmru1tr", "hms51e4", "hmrgtwj", "hmrgk3j", "hmubyyn",
        "hmrn3rv", "hmrjc73", "hmrk2jn", "hmrguh8", "hmrkjxn", "hmvg4o4", "hmv23t1",
        "hmrhfrf", "hms3wv7", "hmtose6", "hmum5va", "hmvcr0w", "hmskt4q", "hmwgxfw",
        "hmu2a1h", "hmrtbjq", "hmrhvmq", "hmtvgc7", "hmuudfb", "hmvianz", "hmrzzi1",
        "hmrsigj", "hmrkr1r", "hmyb7om", "hmroz64", "hmsomuy", "hmt7kjf", "hms2v2z",
        "hmsuxfj", "hmrf05u", "hmtou21", "hmrkcyf", "hmulg4v", "hmufl06", "hmrxatx",
        "hmuoxly", "hmtpagm", "hmvam9r", "hmtnvwp", "hmsrg41", "hmtqwyn", "hmrpq3k",
        "hmrwt4h", "hmuaadx", "hmsezp2", "hmrtk7y", "hmtml6b", "hmv6c3a", "hmrzb95",
        "hmsuu75", "hmrz6ix", "hmtcq1a", "hmtn5cf", "hmvj1t2", "hmrtqlt", "hmy9wj9",
        "hmrh7ku", "hmv3f9l", "hmrushh", "hmrj5t0", "hmroyew", "hmruxji", "hmxeos6",
        "hmstdu1", "hmsobf4", "hmuj8f3", "hmw3zoj", "hms4fkz", "hmvmcfk", "hms5q48",
        "hmt7cec", "hmtw3nw", "hmrynpr", "hmrh9y9", "hmsm2v3", "hms8ikj", "hmrwtvs",
        "hmsjke6", "hmrw9fx", "hmwkw6o", "hmss6je", "hmtitr8", "hmuatyn", "hmru14y",
        "hmsr2hm", "hmxsojx", "hms7q76", "hmuvaeh", "hmv1ch7", "hmt9f7j", "hmweook",
        "hmvd5ko", "hmt0sca", "hmscvvl", "hmxoenc", "hmtpt3b", "hmvffrj", "hmttnxq",
        "hmrupqc", "hmrjd7f", "hmrtjc7", "hmrtb91", "hmrzl7z", "hmrg1kh", "hms9zdc",
        "hmrh1r4", "hmrjmin", "hmrmjt8", "hmsgmlt", "hmv8xhi", "hmrgg3c", "hmse1bp",
        "hmupqo9", "hmrlcda", "hmrlffy", "hms0wwq", "hmrs30t", "hmt7y0e", "hmrjrhv",
        "hmwegvt", "hmrg937", "hmrhdgc", "hmrgey5", "hmrzmu2", "hmwb2ra", "hmtsxep",
        "hmwfe3o", "hmrf4pv", "hmt42bv", "hmrqozx", "hmrjghk", "hmtouj5", "hmsr7zw",
        "hmu51kx", "hmsmm2x", "hmrhtya", "hmx2aj6", "hmwnrhk", "hmwqv7g", "hmt84zy",
        "hms009r", "hms0omp", "hmrrbe6", "hmuy2yb", "hmsmzua", "hms8zqs", "hmrtaig",
        "hmvr6mx", "hmrlp54", "hms1l6z", "hmt0fwv", "hmsm130", "hmrfpg5", "hmwkskt",
        "hmsogj4", "hmui302", "hmxer2i", "hmsr3as", "hmrel6r", "hmteqky", "hms2ee2",
        "hmt2qvg", "hmsf2pc", "hmvewiq", "hmsniaj", "hmrevqd", "hmuf6r8", "hmuwc2v",
        "hmrtiig", "hmsneo1", "hmrs8pi", "hmst5oy", "hmwu69l", "hmrn5eh", "hmrmuci",
        "hmuzllx", "hmrr3my", "hmrhdk2", "hmu9qut", "hmvice0", "hmsndmx", "hms1j6d",
        "hmrpbj4", "hmrlidz", "hmu7lg6", "hmrino9", "hmuemam", "hmrtnc5", "hmtixd5",
        "hmu2pgh", "hmsa8oc", "hmrf59h", "hmvzpzx", "hmve44r", "hmso78b", "hms2fe6",
        "hmrvf0v", "hmt833f", "hmswer6", "hmswfp5", "hmw3f07", "hmu6yri", "hms3qv5",
        "hmso475", "hmwzc9n", "hmru1rn", "hmrxcqk", "hmrn1qi", "hmrh2vk", "hmrk087",
        "hmsem50", "hmt74ro", "hmruc2k", "hmuwsn3", "hmri0oz", "hmsaolj", "hmx7ocb",
        "hmrhr75", "hms4lux", "hmv10v7", "hmu51yq", "hmrgfud", "hmsj72h", "hmt27ga",
        "hmrqz3w", "hms8pj4", "hmrgytd", "hmriaqg", "hmrins1", "hmwl2ds", "hmu09qs",
        "hmtb5yc", "hms98ik", "hmup3ay", "hmrk31c", "hmsdp0m", "hmrs1dg", "hmvao30",
        "hms4gwi", "hmsit0y", "hmrj5v8", "hmu2ehy", "hmsioan", "hmsvczl", "hmygsqt",
        "hmu337d", "hmsk25x", "hmtfafr", "hmu5438", "hmsvo2v", "hmsoygk", "hmu7mkh",
        "hmu2rw9", "hmsr243", "hmreik6", "hmt4xjf", "hmu4r0v", "hmsrgeu", "hmwq120",
        "hmt2jgt", "hmrs7po", "hmrfv48", "hmtnoc6", "hmw9ssu", "hmrl92g", "hmrz40u",
        "hmsqalo", "hmt9ekl", "hmuyqf6", "hms50ta", "hmtzrre", "hmy215d", "hmsku8e",
        "hmrusos", "hmsu2jc", "hmrfuqk", "hmujlag", "hmsr9et", "hmtx4jg", "hmsumbu",
        "hmt0ynh", "hmu9yeq", "hmrf4te", "hmv8bqt", "hmshtm9", "hmuxfuh", "hms7gau",
        "hmsrw4q", "hmtp273", "hms0m82", "hmwc3gl", "hmvd24s", "hmtith2", "hmuvxcd",
        "hmu297u", "hmvpp3m", "hmrsklw", "hmurfdk", "hmrf9ck", "hmw42an", "hmvqboh",
        "hmt5dgk", "hmsll5m", "hmskbs6", "hmxn3xv", "hmuuxtj", "hmrz22v", "hmti8v3",
        "hmtb264", "hmuuqt2", "hmwpkjo", "hmtil9k", "hmtpxvo", "hmvvm80", "hmsc6zx",
        "hms3lqj", "hmtxaje", "hmsnu8g", "hmsebbs", "hmrwqat", "hmv7e6n", "hmuu0nz",
        "hmveoia", "hmtomhu", "hmtbcpy", "hmrfld2", "hmxdpt3", "hmur5u6", "hmrzrtr",
        "hmrtomh", "hmrz2jn", "hmu7i0g", "hmto2mk", "hmy3con", "hmxrx3s", "hmvqe6x",
        "hmsa0hn", "hmsrb47", "hmw21oo", "hmwtwoc", "hmssgwx", "hmvp1xr", "hmw4ek2",
        "hmvcobg", "hmrf2g0", "hmrfuew", "hmupwiu", "hmyfdr9", "hmrr4l8", "hmrh3m6",
        "hmrf8rs", "hmwtvl7", "hmv06au", "hmwdb3a", "hms2tdh", "hmwxwzb", "hmwtk1w",
        "hmv7xhs", "hmy32s1", "hms6qq4", "hmua6gz", "hmtckwf", "hms8odm", "hmretnt",
        "hmujjqf", "hmvszqc", "hmtqk3y", "hmxf61e", "hms92lp", "hmrfr8r", "hms4ewo",
        "hmusj18", "hmvae71", "hmxa298", "hmvd82d", "hmsnokd", "hms24ql", "hmuxks0",
        "hmtteup", "hmurtrn", "hmvnyic", "hmtpdh1", "hmrxxk9", "hmsxnbq", "hms8upn",
        "hmvy97q", "hmrydbs", "hmvcmtf", "hmvn98k", "hmuijjn", "hmtimr9", "hmy9ke6",
        "hmwx4lt", "hmu2d91", "hmtjo2f", "hmu2gx2", "hms9me8", "hmuwdqz", "hmsnmhw",
        "hmsr79d", "hmsst3c", "hmrfhj6", "hms1s6r", "hmrhcqc", "hms2u4s", "hmry7u5",
        "hmy5y2j", "hmrf0gg", "hms8x51", "hmuz7ba", "hmtf0lj", "hmsthqs", "hmtypln",
        "hmtlqdt", "hmw1jxb", "hmtfl5k", "hmt3c9q", "hmsvx7j", "hmx4oh4", "hmxm0oa",
        "hmrf87m", "hmufugf", "hmva7zl", "hmuy7px", "hmrklsj", "hmswb9a", "hms97z3",
        "hms9kby", "hmvo3y7", "hmx7741", "hmupvsh", "hmsw7qt", "hmrfvru", "hmrel8t",
        "hmtqtlx", "hmxa4gk", "hmsrqka", "hmrhr14", "hmuc4p0", "hmrks2m", "hmtqurm",
        "hmryh40", "hmtublx", "hmrfj4u", "hmrmn6p", "hmrio89", "hmrzgee", "hms3twz",
        "hmupg0c", "hmvyzz7", "hmuvltl", "hmy98ot", "hmul0m8", "hmvg97r", "hmsszew",
        "hms1z0o", "hmrt4yg", "hmtvyoj", "hmtyhqw", "hmurivu", "hmris2x", "hmxgs6y",
        "hmsi1lb", "hmum4io", "hmspb17", "hmu9x7q", "hmw3kbw", "hmrfk32", "hmrt2sw",
        "hmshy76", "hms6jxx", "hmuqc8p", "hmwg4mh", "hmux6rf", "hmvqsha", "hmwk3gr",
        "hmsic35", "hmt7ejw", "hmse2jo", "hmt2d0z", "hmrf0j6", "hmrgty5", "hmsbmj1",
        "hmrf92d", "hmtcewm", "hmuqjav", "hmrezlc", "hmumga1", "hmvjxdh", "hms6rw6",
        "hmrr8s5", "hmrhqsr", "hmupha0", "hmshxa7", "hmru0e5", "hmtfxz8", "hmtbaw0",
        "hmtw0cl", "hmtskg5", "hmreq4n", "hmt4tjc", "hmvwtzm", "hmukafq", "hmriplw",
        "hmvwd6n", "hms9kem", "hmul1w0", "hmsd95d", "hmwn65l", "hmuox3j", "hmsj2yt",
        "hmrx7fx", "hmuhh4i", "hmu41kj", "hmucq9b", "hmtpgu7", "hmvq4sq", "hmubzlt",
        "hmvbdu3", "hms4w5y", "hmu172l", "hmssbuw", "hmshy8w", "hmy8v67", "hmvhiw7",
        "hms455t", "hmvjdt8", "hmrg6cr", "hmryepf", "hmwgacu", "hmubq5y", "hmunovu",
        "hmxzdlr", "hmvttxb", "hmubyyr", "hmrsif1", "hmuu8ya", "hmu47y6", "hmsvdty",
        "hmrr3w3", "hmtl0p6", "hms9w78", "hmsd2vf", "hmrruww", "hmsnt19", "hms21cb",
        "hmryvkc", "hmx8h5l", "hmsqyxj", "hmreons", "hmvwuer", "hmvu8v1", "hmsmh1y",
        "hms028u", "hmul9ls", "hmrxsyi", "hmut6fx", "hmtou73", "hms3qzs", "hmuu15c",
        "hmtkx5u", "hms5nfl", "hmx74kk", "hmtkjc8", "hmwxxf7", "hmunpx2", "hmtl4l8",
        "hmugkix", "hms0h5d", "hmrfa3v", "hmvh953", "hmv395f", "hmts3v2", "hmunt9t",
        "hmtdkt1", "hmunk6r", "hmx4u0j", "hms1fac", "hmukph5", "hmren52", "hmsqpii",
        "hmt0d6b", "hmsipx1", "hms0ovt", "hmuc4hm", "hmuwikk", "hms2it8", "hms93us",
        "hmy90co", "hmtytou", "hms8x4k", "hmt02z0", "hmt8pge", "hmt5mu9", "hmvxl2c",
        "hmuszg8", "hmw8zxm", "hmu7g9d", "hmtrv9z", "hmss2k9", "hmuxrtd", "hmtp9ng",
        "hmvoa64", "hmwwi7l", "hmt1dsj", "hmuvznj", "hmtlvmj", "hms5s4x", "hmrfsij"]}}],
        true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmrl64f"]], [13,
        14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16,
        17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:16 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:16 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=u2ue0CPw6JrXMq53L9; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:16 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hms52ki,hms968d,hmsatqd,hmsa6ey,hmskfds,hmsduyy,hmsjmk5,hmtwtbw,hmsxt6e,hmskvpo,hmtfdrf,hmtvl66,hmt500x,hmsngjc,hmrndxm,hmrf5mi,hmyb5l7,hmt8nh7,hmtd9xp,hmsx4gc,hmripy5,hmtj1jx,hmuxot7,hmud1xk,hmvkvm6,hmtnako,hmrpogf,hmwtvis,hmro9sd,hms5nl3,hmtnk5b,hmtast6,hmrep8d,hmrgute,hmrfgli,hmrl33k,hmuc20z,hmrfsy6,hmrwv2f,hmreq3w,hmrjagu,hmsskap,hmrnshk,hmrfwhi,hmrjh38,hmrzld2,hms8dah,hmslw5f,hmrssht,hmrknr4,hmri5lq,hmspmzw,hmreo55,hmrfro5,hms0uxp,hmthspq,hmusk2z,hmt5svi,hmrgb09,hmx9ay3,hmutxld,hms4yu6,hmrnsys,hms2udb,hmrhfv0,hmri6n9,hmrij5r,hmrregn,hms8eou,hmrhgz4,hms4xe2,hmrnh5o,hmrky8s,hmsnuj3,hmugx2v,hmrgwdu,hmsea34,hmrzdrp,hmrqzuc,hmrkats,hmrhubd,hmuobbx,hmv9qtx,hmtxmw2,hmrq8km,hmt8gl5,hmrmz20,hmrorf8,hmu6oh6,hms0q3g,hmvaoz0,hmuz3su,hmrua63,hmvdgju,hmri3iq,hmrgv1n,hmte69a,hmrfpkd,hmu4zel,hmtiwbk,hms664r,hmukpkv,hmro017,hmrkn0z,hmru1tr,hms51e4,hmrgtwj,hmrgk3j,hmubyyn,hmrn3rv,hmrjc73,hmrk2jn,hmrguh8,hmrkjxn,hmvg4o4,hmv23t1,hmrhfrf,hms3wv7,hmtose6,hmum5va,hmvcr0w,hmskt4q,hmwgxfw,hmu2a1h,hmrtbjq,hmrhvmq,hmtvgc7,hmuudfb,hmvianz,hmrzzi1,hmrsigj,hmrkr1r,hmyb7om,hmroz64,hmsomuy,hmt7kjf,hms2v2z,hmsuxfj,hmrf05u,hmtou21,hmrkcyf,hmulg4v,hmufl06,hmrxatx,hmuoxly,hmtpagm,hmvam9r,hmtnvwp,hmsrg41,hmtqwyn,hmrpq3k,hmrwt4h,hmuaadx,hmsezp2,hmrtk7y,hmtml6b,hmv6c3a,hmrzb95,hmsuu75,hmrz6ix,hmtcq1a,hmtn5cf,hmvj1t2,hmrtqlt,hmy9wj9,hmrh7ku,hmv3f9l,hmrushh,hmrj5t0,hmroyew,hmruxji,hmxeos6,hmstdu1,hmsobf4,hmuj8f3,hmw3zoj,hms4fkz,hmvmcfk,hms5q48,hmt7cec,hmtw3nw,hmrynpr,hmrh9y9,hmsm2v3,hms8ikj,hmrwtvs,hmsjke6,hmrw9fx,hmwkw6o,hmss6je,hmtitr8,hmuatyn,hmru14y,hmsr2hm,hmxsojx,hms7q76,hmuvaeh,hmv1ch7,hmt9f7j,hmweook,hmvd5ko,hmt0sca,hmscvvl,hmxoenc,hmtpt3b,hmvffrj,hmttnxq,hmrupqc,hmrjd7f,hmrtjc7,hmrtb91,hmrzl7z,hmrg1kh,hms9zdc,hmrh1r4,hmrjmin,hmrmjt8,hmsgmlt,hmv8xhi,hmrgg3c,hmse1bp,hmupqo9,hmrlcda,hmrlffy,hms0wwq,hmrs30t,hmt7y0e,hmrjrhv,hmwegvt,hmrg937,hmrhdgc,hmrgey5,hmrzmu2,hmwb2ra,hmtsxep,hmwfe3o,hmrf4pv,hmt42bv,hmrqozx,hmrjghk,hmtouj5,hmsr7zw,hmu51kx,hmsmm2x,hmrhtya,hmx2aj6,hmwnrhk,hmwqv7g,hmt84zy,hms009r,hms0omp,hmrrbe6,hmuy2yb,hmsmzua,hms8zqs,hmrtaig,hmvr6mx,hmrlp54,hms1l6z,hmt0fwv,hmsm130,hmrfpg5,hmwkskt,hmsogj4,hmui302,hmxer2i,hmsr3as,hmrel6r,hmteqky,hms2ee2,hmt2qvg,hmsf2pc,hmvewiq,hmsniaj,hmrevqd,hmuf6r8,hmuwc2v,hmrtiig,hmsneo1,hmrs8pi,hmst5oy,hmwu69l,hmrn5eh,hmrmuci,hmuzllx,hmrr3my,hmrhdk2,hmu9qut,hmvice0,hmsndmx,hms1j6d,hmrpbj4,hmrlidz,hmu7lg6,hmrino9,hmuemam,hmrtnc5,hmtixd5,hmu2pgh,hmsa8oc,hmrf59h,hmvzpzx,hmve44r,hmso78b,hms2fe6,hmrvf0v,hmt833f,hmswer6,hmswfp5,hmw3f07,hmu6yri,hms3qv5,hmso475,hmwzc9n,hmru1rn,hmrxcqk,hmrn1qi,hmrh2vk,hmrk087,hmsem50,hmt74ro,hmruc2k,hmuwsn3,hmri0oz,hmsaolj,hmx7ocb,hmrhr75,hms4lux,hmv10v7,hmu51yq,hmrgfud,hmsj72h,hmt27ga,hmrqz3w,hms8pj4,hmrgytd,hmriaqg,hmrins1,hmwl2ds,hmu09qs,hmtb5yc,hms98ik,hmup3ay,hmrk31c,hmsdp0m,hmrs1dg,hmvao30,hms4gwi,hmsit0y,hmrj5v8,hmu2ehy,hmsioan,hmsvczl,hmygsqt,hmu337d,hmsk25x,hmtfafr,hmu5438,hmsvo2v,hmsoygk,hmu7mkh,hmu2rw9,hmsr243,hmreik6,hmt4xjf,hmu4r0v,hmsrgeu,hmwq120,hmt2jgt,hmrs7po,hmrfv48,hmtnoc6,hmw9ssu,hmrl92g,hmrz40u,hmsqalo,hmt9ekl,hmuyqf6,hms50ta,hmtzrre,hmy215d,hmsku8e,hmrusos,hmsu2jc,hmrfuqk,hmujlag,hmsr9et,hmtx4jg,hmsumbu,hmt0ynh,hmu9yeq,hmrf4te,hmv8bqt,hmshtm9,hmuxfuh,hms7gau,hmsrw4q,hmtp273,hms0m82,hmwc3gl,hmvd24s,hmtith2,hmuvxcd,hmu297u,hmvpp3m,hmrsklw,hmurfdk,hmrf9ck,hmw42an,hmvqboh,hmt5dgk,hmsll5m,hmskbs6,hmxn3xv,hmuuxtj,hmrz22v,hmti8v3,hmtb264,hmuuqt2,hmwpkjo,hmtil9k,hmtpxvo,hmvvm80,hmsc6zx,hms3lqj,hmtxaje,hmsnu8g,hmsebbs,hmrwqat,hmv7e6n,hmuu0nz,hmveoia,hmtomhu,hmtbcpy,hmrfld2,hmxdpt3,hmur5u6,hmrzrtr,hmrtomh,hmrz2jn,hmu7i0g,hmto2mk,hmy3con,hmxrx3s,hmvqe6x,hmsa0hn,hmsrb47,hmw21oo,hmwtwoc,hmssgwx,hmvp1xr,hmw4ek2,hmvcobg,hmrf2g0,hmrfuew,hmupwiu,hmyfdr9,hmrr4l8,hmrh3m6,hmrf8rs,hmwtvl7,hmv06au,hmwdb3a,hms2tdh,hmwxwzb,hmwtk1w,hmv7xhs,hmy32s1,hms6qq4,hmua6gz,hmtckwf,hms8odm,hmretnt,hmujjqf,hmvszqc,hmtqk3y,hmxf61e,hms92lp,hmrfr8r,hms4ewo,hmusj18,hmvae71,hmxa298,hmvd82d,hmsnokd,hms24ql,hmuxks0,hmtteup,hmurtrn,hmvnyic,hmtpdh1,hmrxxk9,hmsxnbq,hms8upn,hmvy97q,hmrydbs,hmvcmtf,hmvn98k,hmuijjn,hmtimr9,hmy9ke6,hmwx4lt,hmu2d91,hmtjo2f,hmu2gx2,hms9me8,hmuwdqz,hmsnmhw,hmsr79d,hmsst3c,hmrfhj6,hms1s6r,hmrhcqc,hms2u4s,hmry7u5,hmy5y2j,hmrf0gg,hms8x51,hmuz7ba,hmtf0lj,hmsthqs,hmtypln,hmtlqdt,hmw1jxb,hmtfl5k,hmt3c9q,hmsvx7j,hmx4oh4,hmxm0oa,hmrf87m,hmufugf,hmva7zl,hmuy7px,hmrklsj,hmswb9a,hms97z3,hms9kby,hmvo3y7,hmx7741,hmupvsh,hmsw7qt,hmrfvru,hmrel8t,hmtqtlx,hmxa4gk,hmsrqka,hmrhr14,hmuc4p0,hmrks2m,hmtqurm,hmryh40,hmtublx,hmrfj4u,hmrmn6p,hmrio89,hmrzgee,hms3twz,hmupg0c,hmvyzz7,hmuvltl,hmy98ot,hmul0m8,hmvg97r,hmsszew,hms1z0o,hmrt4yg,hmtvyoj,hmtyhqw,hmurivu,hmris2x,hmxgs6y,hmsi1lb,hmum4io,hmspb17,hmu9x7q,hmw3kbw,hmrfk32,hmrt2sw,hmshy76,hms6jxx,hmuqc8p,hmwg4mh,hmux6rf,hmvqsha,hmwk3gr,hmsic35,hmt7ejw,hmse2jo,hmt2d0z,hmrf0j6,hmrgty5,hmsbmj1,hmrf92d,hmtcewm,hmuqjav,hmrezlc,hmumga1,hmvjxdh,hms6rw6,hmrr8s5,hmrhqsr,hmupha0,hmshxa7,hmru0e5,hmtfxz8,hmtbaw0,hmtw0cl,hmtskg5,hmreq4n,hmt4tjc,hmvwtzm,hmukafq,hmriplw,hmvwd6n,hms9kem,hmul1w0,hmsd95d,hmwn65l,hmuox3j,hmsj2yt,hmrx7fx,hmuhh4i,hmu41kj,hmucq9b,hmtpgu7,hmvq4sq,hmubzlt,hmvbdu3,hms4w5y,hmu172l,hmssbuw,hmshy8w,hmy8v67,hmvhiw7,hms455t,hmvjdt8,hmrg6cr,hmryepf,hmwgacu,hmubq5y,hmunovu,hmxzdlr,hmvttxb,hmubyyr,hmrsif1,hmuu8ya,hmu47y6,hmsvdty,hmrr3w3,hmtl0p6,hms9w78,hmsd2vf,hmrruww,hmsnt19,hms21cb,hmryvkc,hmx8h5l,hmsqyxj,hmreons,hmvwuer,hmvu8v1,hmsmh1y,hms028u,hmul9ls,hmrxsyi,hmut6fx,hmtou73,hms3qzs,hmuu15c,hmtkx5u,hms5nfl,hmx74kk,hmtkjc8,hmwxxf7,hmunpx2,hmtl4l8,hmugkix,hms0h5d,hmrfa3v,hmvh953,hmv395f,hmts3v2,hmunt9t,hmtdkt1,hmunk6r,hmx4u0j,hms1fac,hmukph5,hmren52,hmsqpii,hmt0d6b,hmsipx1,hms0ovt,hmuc4hm,hmuwikk,hms2it8,hms93us,hmy90co,hmtytou,hms8x4k,hmt02z0,hmt8pge,hmt5mu9,hmvxl2c,hmuszg8,hmw8zxm,hmu7g9d,hmtrv9z,hmss2k9,hmuxrtd,hmtp9ng,hmvoa64,hmwwi7l,hmt1dsj,hmuvznj,hmtlvmj,hms5s4x,hmrfsij
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '42870'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg62a5lm.2.1741472956403.Z0FBQUFBQm56TVM4WlNDNjRHT0lPaFN2WWVfZW9uTEczOUx6MlJrNnYwYmt0X1pWWmZNOTREN1ExUXQ4bmdfdGtydmdXeWZFeWE4YlhtMG9idU0yTEtfSkhUUnJiekxCUkxWZmNXcF9DdHNxcEtjSlJQUjBBSG1OdHd2dUpmLWtvT0s2TGlNRDhaSFM;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:16
        GMT; secure, session_tracker=pehgflcfnkckfemkfk.0.1741472956418.Z0FBQUFBQm56TVM4a21fZHN4ZXVyYk95Vk9DRjNvaXhSenpESzdlUFk5b1ZLTmNBQU9pVFgxbVJfLUJlUXBNUXhjUWFaUmZ2T2ZTMFl4azBQQ1FpaVBCbTRpUHNWTmdiNzEzc01yODJPR3c5aXlzRkNBS0dwTTEyQjA2NGhyVEJ2eWVJdXhFdnJwT3E;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:16
        GMT; secure, edgebucket=TRnrwbIBHcOlzChEHW; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '59'
      x-ratelimit-remaining:
      - '41.0'
      x-ratelimit-reset:
      - '43'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:16 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms52ki",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Nysed17",
        "can_mod_post": false, "created_utc": 1638354846.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_4gxvqn4n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C\n\nPart 1:\n\n    #include &lt;stdio.h&gt;\n    #define N 2000\n    \n    int
        main(){\n    \n    int i, count = 0;\n    int arr[N];\n    \n    for (i =
        0 ; i &lt; N ; i++){\n        scanf(\"%d\", &amp;arr[i]);\n    }\n    for
        (i = N - 1 ; i &gt;= 1 ; i--){\n        if (arr[i] &gt; arr[i-1]){\n        count++;\n        }\n    }\n    printf(\"%d\",
        count);\n    return 0;\n    }\n\nPart 2:\n\n    #include &lt;stdio.h&gt;\n    #define
        N 2000\n    \n    int main(){\n    \n    int i, count = 0;\n    int arr[N];\n    \n    for
        (i = 0 ; i &lt; N ; i++){\n        scanf(\"%d\", &amp;arr[i]);\n    }\n    for
        (i = N - 1 ; i &gt;= 1 ; i++){\n        if ((arr[i+1] + arr[i+2] + arr[i+3])
        &lt; (arr[i+2] + arr[i+3] + arr[i+4])){\n        count++;\n        }\n    }\n    printf(\"%d\",
        count);\n    return 0;\n    }", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;stdio.h&amp;gt;\n#define N 2000\n\nint main(){\n\nint i, count = 0;\nint
        arr[N];\n\nfor (i = 0 ; i &amp;lt; N ; i++){\n    scanf(&amp;quot;%d&amp;quot;,
        &amp;amp;arr[i]);\n}\nfor (i = N - 1 ; i &amp;gt;= 1 ; i--){\n    if (arr[i]
        &amp;gt; arr[i-1]){\n    count++;\n    }\n}\nprintf(&amp;quot;%d&amp;quot;,
        count);\nreturn 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;stdio.h&amp;gt;\n#define N 2000\n\nint main(){\n\nint i, count = 0;\nint
        arr[N];\n\nfor (i = 0 ; i &amp;lt; N ; i++){\n    scanf(&amp;quot;%d&amp;quot;,
        &amp;amp;arr[i]);\n}\nfor (i = N - 1 ; i &amp;gt;= 1 ; i++){\n    if ((arr[i+1]
        + arr[i+2] + arr[i+3]) &amp;lt; (arr[i+2] + arr[i+3] + arr[i+4])){\n    count++;\n    }\n}\nprintf(&amp;quot;%d&amp;quot;,
        count);\nreturn 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms52ki/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms52ki", "created": 1638354846.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 5, "name":
        "t1_hmwwdol", "id": "hmwwdol", "parent_id": "t1_hms52ki", "depth": 1, "children":
        ["hmwwdol", "hmvt3zk", "hmsej3c"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 5,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms968d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "damyvv",
        "can_mod_post": false, "created_utc": 1638358132.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_11kdcw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Ruby\n\n    input = File.read(\"day01_input.txt\").lines.map(&amp;:to_i)\n    p
        input.each_cons(2).count {|a,b| b &gt; a }\n    p input.each_cons(3).map(&amp;:sum).each_cons(2).count
        {|a,b| b &gt; a }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Ruby&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;input
        = File.read(&amp;quot;day01_input.txt&amp;quot;).lines.map(&amp;amp;:to_i)\np
        input.each_cons(2).count {|a,b| b &amp;gt; a }\np input.each_cons(3).map(&amp;amp;:sum).each_cons(2).count
        {|a,b| b &amp;gt; a }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms968d/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms968d", "created": 1638358132.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 5, "name":
        "t1_hmsgjyv", "id": "hmsgjyv", "parent_id": "t1_hms968d", "depth": 1, "children":
        ["hmsgjyv", "hms9h99", "hms9ae6"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1638432045.0, "mod_reason_by": null, "banned_by": null, "ups":
        5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsa6ey",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "EmotionalGrowth",
        "can_mod_post": false, "created_utc": 1638358874.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_2psi3uxc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [**&gt;&lt;&gt;**](https://esolangs.org/wiki/Fish)\n\nA fishy day 1.\n\n    0&amp;v  /?=2l
        \\\n      \\$: @)&amp;+&amp;/ PART 1\n         \\(&amp;+n;\n    ---------------------\n    0&amp;0!/4[&amp;{:{:@+{+:&amp;(]\\\n    PART
        2   ;n&amp;\\\n        \\       \\?=3l&amp;+&amp;/\n\nThe stack was manually
        initialised with the input.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://esolangs.org/wiki/Fish\"&gt;&lt;strong&gt;&amp;gt;&amp;lt;&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;A
        fishy day 1.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0&amp;amp;v  /?=2l \\\n  \\$:
        @)&amp;amp;+&amp;amp;/ PART 1\n     \\(&amp;amp;+n;\n---------------------\n0&amp;amp;0!/4[&amp;amp;{:{:@+{+:&amp;amp;(]\\\nPART
        2   ;n&amp;amp;\\\n    \\       \\?=3l&amp;amp;+&amp;amp;/\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The
        stack was manually initialised with the input.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsa6ey/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsa6ey", "created": 1638358874.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmw1ynx", "id": "hmw1ynx", "parent_id": "t1_hmsa6ey", "depth": 1, "children":
        ["hmw1ynx"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638361056.0,
        "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsatqd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "imbadatreading",
        "can_mod_post": false, "created_utc": 1638359347.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_r348m", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python:\n\n    import fileinput\n    \n    nums = [int(x) for x in fileinput.input()]\n    \n    def
        solve(*arrs):    \n        zipped = zip(*arrs)\n        return len(filter(lambda
        x: sum(x[1]) &gt; sum(x[0]), zip(zipped, zipped[1:])))\n    \n    p1 = solve(nums)\n    p2
        = solve(nums, nums[1:], nums[2:])\n    print(p1, p2)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        fileinput\n\nnums = [int(x) for x in fileinput.input()]\n\ndef solve(*arrs):    \n    zipped
        = zip(*arrs)\n    return len(filter(lambda x: sum(x[1]) &amp;gt; sum(x[0]),
        zip(zipped, zipped[1:])))\n\np1 = solve(nums)\np2 = solve(nums, nums[1:],
        nums[2:])\nprint(p1, p2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsatqd/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsatqd", "created": 1638359347.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_hmscirc", "id": "hmscirc", "parent_id": "t1_hmsatqd", "depth": 1, "children":
        ["hmscirc"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsduyy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Happy_Air_7902",
        "can_mod_post": false, "created_utc": 1638361453.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_84xnkfht", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "F# solution:\n\n    let day1Part1 measurements = \n        measurements\n        |&gt;
        Array.pairwise\n        |&gt; Array.filter (fun (i, j) -&gt; i &lt; j)\n        |&gt;
        Array.length\n    \n    let day1Part2 measurements =\n        measurements\n        |&gt;
        Array.windowed 3\n        |&gt; Array.map (Array.reduce (+))\n        |&gt;
        day1Part1", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;F#
        solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let day1Part1 measurements =
        \n    measurements\n    |&amp;gt; Array.pairwise\n    |&amp;gt; Array.filter
        (fun (i, j) -&amp;gt; i &amp;lt; j)\n    |&amp;gt; Array.length\n\nlet day1Part2
        measurements =\n    measurements\n    |&amp;gt; Array.windowed 3\n    |&amp;gt;
        Array.map (Array.reduce (+))\n    |&amp;gt; day1Part1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsduyy/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsduyy", "created":
        1638361453.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmsjht5", "id": "hmsjht5", "parent_id":
        "t1_hmsduyy", "depth": 1, "children": ["hmsjht5"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsjmk5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "xPaw",
        "can_mod_post": false, "created_utc": 1638364843.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_55f80", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Part 2 is simple because due to how sliding window works, you only need to
        compare every 3rd element (as it will only differ, and the other two numbers
        will be the same in both windows). As such, you don''t need to zip or anything:\n\nC#:\n\n\tvar
        part1 = 0;\n\tvar part2 = 0;\n\n\tfor (var i = 1; i &lt; numbers.Length; i++)\n\t{\n\t\tvar
        number = numbers[i];\n\n\t\tif (number &gt; numbers[i - 1]) part1++;\n\t\tif
        (i &gt; 2 &amp;&amp; number &gt; numbers[i - 3]) part2++;\n\t}", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Part 2 is simple because due to how sliding
        window works, you only need to compare every 3rd element (as it will only
        differ, and the other two numbers will be the same in both windows). As such,
        you don&amp;#39;t need to zip or anything:&lt;/p&gt;\n\n&lt;p&gt;C#:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        part1 = 0;\nvar part2 = 0;\n\nfor (var i = 1; i &amp;lt; numbers.Length; i++)\n{\n    var
        number = numbers[i];\n\n    if (number &amp;gt; numbers[i - 1]) part1++;\n    if
        (i &amp;gt; 2 &amp;amp;&amp;amp; number &amp;gt; numbers[i - 3]) part2++;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsjmk5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsjmk5", "created":
        1638364843.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638366590.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmskfds", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "colombo15",
        "can_mod_post": false, "created_utc": 1638365274.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_6oqne", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C# - Generalized solution for both problems**\n\n    private static int
        CountLargestSums(List&lt;int&gt; data, int sizeOfWindow)\n    {\n        var
        result = 0;\n\n        for (var i = 0; i &lt; data.Count - sizeOfWindow; i++)\n        {\n            if
        (data[i + sizeOfWindow] &gt; data[i])\n                result++;\n        }\n\n        return
        result;\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C#
        - Generalized solution for both problems&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private
        static int CountLargestSums(List&amp;lt;int&amp;gt; data, int sizeOfWindow)\n{\n    var
        result = 0;\n\n    for (var i = 0; i &amp;lt; data.Count - sizeOfWindow; i++)\n    {\n        if
        (data[i + sizeOfWindow] &amp;gt; data[i])\n            result++;\n    }\n\n    return
        result;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmskfds/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmskfds", "created":
        1638365274.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmssymi", "id": "hmssymi", "parent_id":
        "t1_hmskfds", "depth": 1, "children": ["hmssymi"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmskvpo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ejuo",
        "can_mod_post": false, "created_utc": 1638365528.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_5dnxd8q6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# awk\n## part 1\n```\nawk ''{if ($1&gt;prev &amp;&amp; NR&gt;1) {increased++};prev=$1}
        END{print increased}'' &lt; input\n```\n## part 2\n\n```\nawk ''{if (NR&gt;3)
        {newwindow=prevprev+prev+$1; if (newwindow &gt; lastwindow) {increased++};
        lastwindow=newwindow};prevprev = prev; prev=$1} END{print increased}'' &lt;
        input\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;awk&lt;/h1&gt;\n\n&lt;h2&gt;part
        1&lt;/h2&gt;\n\n&lt;p&gt;&lt;code&gt;\nawk &amp;#39;{if ($1&amp;gt;prev &amp;amp;&amp;amp;
        NR&amp;gt;1) {increased++};prev=$1} END{print increased}&amp;#39; &amp;lt;
        input\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;h2&gt;part 2&lt;/h2&gt;\n\n&lt;p&gt;&lt;code&gt;\nawk
        &amp;#39;{if (NR&amp;gt;3) {newwindow=prevprev+prev+$1; if (newwindow &amp;gt;
        lastwindow) {increased++}; lastwindow=newwindow};prevprev = prev; prev=$1}
        END{print increased}&amp;#39; &amp;lt; input\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmskvpo/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmskvpo", "created":
        1638365528.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsngjc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "DaveTCode",
        "can_mod_post": false, "created_utc": 1638366848.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_8w0mb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I don''t _think_ anyone else has done this before. So here''s day 1 part
        1 &amp; 2 implemented in pure LLVM IR. https://github.com/DaveTCode/aoc2021-llvm/blob/main/day1/day1.ll\n\n    %struct._IO_FILE
        = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*,
        %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*,
        %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }\n    %struct._IO_marker
        = type opaque\n    %struct._IO_codecvt = type opaque\n    %struct._IO_wide_data
        = type opaque\n\n    @input_file = private constant [10 x i8] c\"input.txt\\00\"\n    @r
        = private constant [2 x i8] c\"r\\00\"\n    @strformat = private constant
        [4 x i8] c\"%d\\0A\\00\"\n\n    declare %struct._IO_FILE* @fopen(i8*, i8*)\n    declare
        i8* @fgets(i8*, i32, %struct._IO_FILE*)\n    declare i32 @fclose(%struct._IO_FILE*)\n    declare
        i32 @printf(i8*, ...)\n    declare i32 @atoi(i8*)\n\n    define i32 @main()
        {\n      %lineno = alloca i64\n      store i64 0, i64* %lineno\n      %converted_lines
        = alloca [2000 x i32]\n      %current_line = alloca i64\n      store i64 0,
        i64* %current_line\n      %lines = alloca [2000 x [50 x i8]]\n\n      %file
        = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([10 x i8], [10
        x i8]* @input_file, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2
        x i8]* @r, i64 0, i64 0))\n      %file_null_check = icmp eq %struct._IO_FILE*
        %file, null\n      br i1 %file_null_check, label %filebad, label %loadline\n\n    filebad:\n      ret
        i32 1\n\n    loadline:\n      %lineno.no = load i64, i64* %lineno\n      %lineptr
        = getelementptr inbounds [2000 x [50 x i8]], [2000 x [50 x i8]]* %lines, i64
        0, i64 %lineno.no\n      %charptr = getelementptr inbounds [50 x i8], [50
        x i8]* %lineptr, i64 0, i64 0\n      %fgets_return = call i8* @fgets(i8* %charptr,
        i32 50, %struct._IO_FILE* %file)\n      %fgets_null_check = icmp eq i8* %fgets_return,
        null\n      br i1 %fgets_null_check, label %closefile, label %nextline\n\n    nextline:\n      %lineno.tmp
        = add i64 %lineno.no, 1\n      store i64 %lineno.tmp, i64* %lineno\n      br
        label %loadline\n\n    closefile:\n      %skip_file_close_result = call i32
        @fclose(%struct._IO_FILE* %file)\n      br label %convert\n\n    convert:\n      %current_line.no
        = load i64, i64* %current_line\n      %linetoconvert = getelementptr inbounds
        [2000 x [50 x i8]], [2000 x [50 x i8]]* %lines, i64 0, i64 %current_line.no\n      %linetoconvert.ptr
        = getelementptr inbounds [50 x i8], [50 x i8]* %linetoconvert, i64 0, i64
        0\n      %linetoconvert.cvrtd = call i32 @atoi(i8* %linetoconvert.ptr)\n      %converted_lines.ptr
        = getelementptr inbounds [2000 x i32], [2000 x i32]* %converted_lines, i64
        0, i64 %current_line.no\n      store i32 %linetoconvert.cvrtd, i32* %converted_lines.ptr\n      %current_line.tmp
        = add i64 %current_line.no, 1\n      store i64 %current_line.tmp, i64* %current_line\n      %check_convertloop
        = icmp eq i64 %current_line.no, 2000\n      br i1 %check_convertloop, label
        %solve, label %convert\n\n    solve:\n      %result.1 = call i32 @solve_1([2000
        x i32]* %converted_lines)\n      %result.2 = call i32 @solve_2([2000 x i32]*
        %converted_lines)\n\n      call i32 (i8*, ...) @printf(i8* getelementptr inbounds
        ([4 x i8], [4 x i8]* @strformat, i64 0, i64 0), i32 %result.1)\n      call
        i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @strformat,
        i64 0, i64 0), i32 %result.2)\n\n      ret i32 0\n    }\n\n    define i32
        @solve_1([2000 x i32]* %lines) {\n      ; Store the number of increments\n      %result
        = alloca i32\n      store i32 0, i32* %result\n      ; Store the index into
        the array (start at 1 because first entry can''t affect result)\n      %ix
        = alloca i64\n      store i64 1, i64* %ix\n      ; Store the index into the
        previous entry in the array\n      %ix.prev = alloca i64\n      store i64
        0, i64* %ix.prev\n      br label %loop\n\n    loop:\n      %ix.val = load
        i64, i64* %ix\n      %ix.prev.val = load i64, i64* %ix.prev\n      %x = getelementptr
        inbounds [2000 x i32], [2000 x i32]* %lines, i64 0, i64 %ix.val\n      %x.prev
        = getelementptr inbounds [2000 x i32], [2000 x i32]* %lines, i64 0, i64 %ix.prev.val\n      %x.val
        = load i32, i32* %x\n      %x.prev.val = load i32, i32* %x.prev\n      %is_inc
        = icmp slt i32 %x.prev.val, %x.val\n      br i1 %is_inc, label %incresult,
        label %nextindex\n\n    incresult:\n      %result.val = load i32, i32* %result\n      %result.tmp
        = add i32 %result.val, 1\n      store i32 %result.tmp, i32* %result\n      br
        label %nextindex\n\n    nextindex:\n      %ix.tmp = add i64 %ix.val, 1\n      %ix.prev.tmp
        = add i64 %ix.prev.val, 1\n      store i64 %ix.tmp, i64* %ix\n      store
        i64 %ix.prev.tmp, i64* %ix.prev\n      %checkend = icmp eq i64 %ix.val, 2000\n      br
        i1 %checkend, label %return, label %loop\n\n    return:\n      %result.end
        = load i32, i32* %result\n      ret i32 %result.end\n    }\n\n\n    define
        i32 @solve_2([2000 x i32]* %lines) {\n      ; Store the number of increments\n      %result
        = alloca i32\n      store i32 -1, i32* %result\n      ; Store the three indexes
        into the array\n      %ix.1 = alloca i64\n      %ix.2 = alloca i64\n      %ix.3
        = alloca i64\n      store i64 0, i64* %ix.1\n      store i64 1, i64* %ix.2\n      store
        i64 2, i64* %ix.3\n      ; Track the previous sum value\n      %sum.prev =
        alloca i32\n      store i32 0, i32* %sum.prev\n      br label %loop\n\n    loop:\n      %ix.1.val
        = load i64, i64* %ix.1\n      %ix.2.val = load i64, i64* %ix.2\n      %ix.3.val
        = load i64, i64* %ix.3\n      %x.1 = getelementptr inbounds [2000 x i32],
        [2000 x i32]* %lines, i64 0, i64 %ix.1.val\n      %x.2 = getelementptr inbounds
        [2000 x i32], [2000 x i32]* %lines, i64 0, i64 %ix.2.val\n      %x.3 = getelementptr
        inbounds [2000 x i32], [2000 x i32]* %lines, i64 0, i64 %ix.3.val\n      %x.1.val
        = load i32, i32* %x.1\n      %x.2.val = load i32, i32* %x.2\n      %x.3.val
        = load i32, i32* %x.3\n      %sum.tmp = add i32 %x.1.val, %x.2.val\n      %sum
        = add i32 %sum.tmp, %x.3.val\n      %sum.prev.val = load i32, i32* %sum.prev\n      %is_inc
        = icmp slt i32 %sum.prev.val, %sum\n      store i32 %sum, i32* %sum.prev\n      br
        i1 %is_inc, label %incresult, label %nextindex\n\n    incresult:\n      %result.val
        = load i32, i32* %result\n      %result.tmp = add i32 %result.val, 1\n      store
        i32 %result.tmp, i32* %result\n      br label %nextindex\n\n    nextindex:\n      %ix.1.tmp
        = add i64 %ix.1.val, 1\n      %ix.2.tmp = add i64 %ix.2.val, 1\n      %ix.3.tmp
        = add i64 %ix.3.val, 1\n      store i64 %ix.1.tmp, i64* %ix.1\n      store
        i64 %ix.2.tmp, i64* %ix.2\n      store i64 %ix.3.tmp, i64* %ix.3\n      %checkend
        = icmp eq i64 %ix.3.val, 2000\n      br i1 %checkend, label %return, label
        %loop\n\n    return:\n      %result.end = load i32, i32* %result\n      ret
        i32 %result.end\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        don&amp;#39;t &lt;em&gt;think&lt;/em&gt; anyone else has done this before.
        So here&amp;#39;s day 1 part 1 &amp;amp; 2 implemented in pure LLVM IR. &lt;a
        href=\"https://github.com/DaveTCode/aoc2021-llvm/blob/main/day1/day1.ll\"&gt;https://github.com/DaveTCode/aoc2021-llvm/blob/main/day1/day1.ll&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;%struct._IO_FILE
        = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*,
        %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*,
        %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }\n%struct._IO_marker
        = type opaque\n%struct._IO_codecvt = type opaque\n%struct._IO_wide_data =
        type opaque\n\n@input_file = private constant [10 x i8] c&amp;quot;input.txt\\00&amp;quot;\n@r
        = private constant [2 x i8] c&amp;quot;r\\00&amp;quot;\n@strformat = private
        constant [4 x i8] c&amp;quot;%d\\0A\\00&amp;quot;\n\ndeclare %struct._IO_FILE*
        @fopen(i8*, i8*)\ndeclare i8* @fgets(i8*, i32, %struct._IO_FILE*)\ndeclare
        i32 @fclose(%struct._IO_FILE*)\ndeclare i32 @printf(i8*, ...)\ndeclare i32
        @atoi(i8*)\n\ndefine i32 @main() {\n  %lineno = alloca i64\n  store i64 0,
        i64* %lineno\n  %converted_lines = alloca [2000 x i32]\n  %current_line =
        alloca i64\n  store i64 0, i64* %current_line\n  %lines = alloca [2000 x [50
        x i8]]\n\n  %file = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds
        ([10 x i8], [10 x i8]* @input_file, i64 0, i64 0), i8* getelementptr inbounds
        ([2 x i8], [2 x i8]* @r, i64 0, i64 0))\n  %file_null_check = icmp eq %struct._IO_FILE*
        %file, null\n  br i1 %file_null_check, label %filebad, label %loadline\n\nfilebad:\n  ret
        i32 1\n\nloadline:\n  %lineno.no = load i64, i64* %lineno\n  %lineptr = getelementptr
        inbounds [2000 x [50 x i8]], [2000 x [50 x i8]]* %lines, i64 0, i64 %lineno.no\n  %charptr
        = getelementptr inbounds [50 x i8], [50 x i8]* %lineptr, i64 0, i64 0\n  %fgets_return
        = call i8* @fgets(i8* %charptr, i32 50, %struct._IO_FILE* %file)\n  %fgets_null_check
        = icmp eq i8* %fgets_return, null\n  br i1 %fgets_null_check, label %closefile,
        label %nextline\n\nnextline:\n  %lineno.tmp = add i64 %lineno.no, 1\n  store
        i64 %lineno.tmp, i64* %lineno\n  br label %loadline\n\nclosefile:\n  %skip_file_close_result
        = call i32 @fclose(%struct._IO_FILE* %file)\n  br label %convert\n\nconvert:\n  %current_line.no
        = load i64, i64* %current_line\n  %linetoconvert = getelementptr inbounds
        [2000 x [50 x i8]], [2000 x [50 x i8]]* %lines, i64 0, i64 %current_line.no\n  %linetoconvert.ptr
        = getelementptr inbounds [50 x i8], [50 x i8]* %linetoconvert, i64 0, i64
        0\n  %linetoconvert.cvrtd = call i32 @atoi(i8* %linetoconvert.ptr)\n  %converted_lines.ptr
        = getelementptr inbounds [2000 x i32], [2000 x i32]* %converted_lines, i64
        0, i64 %current_line.no\n  store i32 %linetoconvert.cvrtd, i32* %converted_lines.ptr\n  %current_line.tmp
        = add i64 %current_line.no, 1\n  store i64 %current_line.tmp, i64* %current_line\n  %check_convertloop
        = icmp eq i64 %current_line.no, 2000\n  br i1 %check_convertloop, label %solve,
        label %convert\n\nsolve:\n  %result.1 = call i32 @solve_1([2000 x i32]* %converted_lines)\n  %result.2
        = call i32 @solve_2([2000 x i32]* %converted_lines)\n\n  call i32 (i8*, ...)
        @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @strformat, i64 0,
        i64 0), i32 %result.1)\n  call i32 (i8*, ...) @printf(i8* getelementptr inbounds
        ([4 x i8], [4 x i8]* @strformat, i64 0, i64 0), i32 %result.2)\n\n  ret i32
        0\n}\n\ndefine i32 @solve_1([2000 x i32]* %lines) {\n  ; Store the number
        of increments\n  %result = alloca i32\n  store i32 0, i32* %result\n  ; Store
        the index into the array (start at 1 because first entry can&amp;#39;t affect
        result)\n  %ix = alloca i64\n  store i64 1, i64* %ix\n  ; Store the index
        into the previous entry in the array\n  %ix.prev = alloca i64\n  store i64
        0, i64* %ix.prev\n  br label %loop\n\nloop:\n  %ix.val = load i64, i64* %ix\n  %ix.prev.val
        = load i64, i64* %ix.prev\n  %x = getelementptr inbounds [2000 x i32], [2000
        x i32]* %lines, i64 0, i64 %ix.val\n  %x.prev = getelementptr inbounds [2000
        x i32], [2000 x i32]* %lines, i64 0, i64 %ix.prev.val\n  %x.val = load i32,
        i32* %x\n  %x.prev.val = load i32, i32* %x.prev\n  %is_inc = icmp slt i32
        %x.prev.val, %x.val\n  br i1 %is_inc, label %incresult, label %nextindex\n\nincresult:\n  %result.val
        = load i32, i32* %result\n  %result.tmp = add i32 %result.val, 1\n  store
        i32 %result.tmp, i32* %result\n  br label %nextindex\n\nnextindex:\n  %ix.tmp
        = add i64 %ix.val, 1\n  %ix.prev.tmp = add i64 %ix.prev.val, 1\n  store i64
        %ix.tmp, i64* %ix\n  store i64 %ix.prev.tmp, i64* %ix.prev\n  %checkend =
        icmp eq i64 %ix.val, 2000\n  br i1 %checkend, label %return, label %loop\n\nreturn:\n  %result.end
        = load i32, i32* %result\n  ret i32 %result.end\n}\n\n\ndefine i32 @solve_2([2000
        x i32]* %lines) {\n  ; Store the number of increments\n  %result = alloca
        i32\n  store i32 -1, i32* %result\n  ; Store the three indexes into the array\n  %ix.1
        = alloca i64\n  %ix.2 = alloca i64\n  %ix.3 = alloca i64\n  store i64 0, i64*
        %ix.1\n  store i64 1, i64* %ix.2\n  store i64 2, i64* %ix.3\n  ; Track the
        previous sum value\n  %sum.prev = alloca i32\n  store i32 0, i32* %sum.prev\n  br
        label %loop\n\nloop:\n  %ix.1.val = load i64, i64* %ix.1\n  %ix.2.val = load
        i64, i64* %ix.2\n  %ix.3.val = load i64, i64* %ix.3\n  %x.1 = getelementptr
        inbounds [2000 x i32], [2000 x i32]* %lines, i64 0, i64 %ix.1.val\n  %x.2
        = getelementptr inbounds [2000 x i32], [2000 x i32]* %lines, i64 0, i64 %ix.2.val\n  %x.3
        = getelementptr inbounds [2000 x i32], [2000 x i32]* %lines, i64 0, i64 %ix.3.val\n  %x.1.val
        = load i32, i32* %x.1\n  %x.2.val = load i32, i32* %x.2\n  %x.3.val = load
        i32, i32* %x.3\n  %sum.tmp = add i32 %x.1.val, %x.2.val\n  %sum = add i32
        %sum.tmp, %x.3.val\n  %sum.prev.val = load i32, i32* %sum.prev\n  %is_inc
        = icmp slt i32 %sum.prev.val, %sum\n  store i32 %sum, i32* %sum.prev\n  br
        i1 %is_inc, label %incresult, label %nextindex\n\nincresult:\n  %result.val
        = load i32, i32* %result\n  %result.tmp = add i32 %result.val, 1\n  store
        i32 %result.tmp, i32* %result\n  br label %nextindex\n\nnextindex:\n  %ix.1.tmp
        = add i64 %ix.1.val, 1\n  %ix.2.tmp = add i64 %ix.2.val, 1\n  %ix.3.tmp =
        add i64 %ix.3.val, 1\n  store i64 %ix.1.tmp, i64* %ix.1\n  store i64 %ix.2.tmp,
        i64* %ix.2\n  store i64 %ix.3.tmp, i64* %ix.3\n  %checkend = icmp eq i64 %ix.3.val,
        2000\n  br i1 %checkend, label %return, label %loop\n\nreturn:\n  %result.end
        = load i32, i32* %result\n  ret i32 %result.end\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsngjc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsngjc", "created":
        1638366848.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmw0kds", "id": "hmw0kds", "parent_id":
        "t1_hmsngjc", "depth": 1, "children": ["hmw0kds"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsx4gc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "BlackSabbath370",
        "can_mod_post": false, "created_utc": 1638371308.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_5l0gy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Been using **fishshell** for many years and I''ve wanted to get more proficient
        in coding with it:\n\n    $ function day1-p1\n    \tset last\n    \n    \twhile
        read -l line\n    \t\tif test $last; and test $line -gt $last\n    \t\t\techo
        yes\n    \t\tend\n    \t\tset last $line\n    \tend\n    end\n\n    $ cat
        day1-input.dat | day1-p1 | count\n\n    $ function day1-p2\n    \tset last\n    \t\n    \tread
        -az nums\n    \n    \tfor index in (seq (count $nums))\n    \t\tset -l triplets
        $nums[$index..(math $index + 2)]\n    \t\tset -l value (math (string join
        + $triplets))  # an inline reduce/sum\n    \n    \t\tif test (count $triplets)
        -eq 3;\n    \t\t\tand test $last;\n    \t\t\tand test $value -gt $last\n    \t\t\techo
        yes\n    \t\tend\n    \n    \t\tset last $value\n    \tend\n    end\n\n    $
        cat day1-input.dat | day1-p2 | count\n\nAny improvements or tricks I would
        love to hear!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Been
        using &lt;strong&gt;fishshell&lt;/strong&gt; for many years and I&amp;#39;ve
        wanted to get more proficient in coding with it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$
        function day1-p1\n    set last\n\n    while read -l line\n        if test
        $last; and test $line -gt $last\n            echo yes\n        end\n        set
        last $line\n    end\nend\n\n$ cat day1-input.dat | day1-p1 | count\n\n$ function
        day1-p2\n    set last\n\n    read -az nums\n\n    for index in (seq (count
        $nums))\n        set -l triplets $nums[$index..(math $index + 2)]\n        set
        -l value (math (string join + $triplets))  # an inline reduce/sum\n\n        if
        test (count $triplets) -eq 3;\n            and test $last;\n            and
        test $value -gt $last\n            echo yes\n        end\n\n        set last
        $value\n    end\nend\n\n$ cat day1-input.dat | day1-p2 | count\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Any
        improvements or tricks I would love to hear!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsx4gc/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsx4gc", "created": 1638371308.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_hmu0onp", "id": "hmu0onp", "parent_id": "t1_hmsx4gc", "depth": 1, "children":
        ["hmu0onp"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsxt6e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "maeevick",
        "can_mod_post": false, "created_utc": 1638371605.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_4rpfujtg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Naive Haskell Solution: [https://github.com/Maeevick/adventofcode2021/blob/main/src/D1.hs](https://github.com/Maeevick/adventofcode2021/blob/main/src/D1.hs)\n\n    part1
        :: [Int] -&gt; Int\n    part1 l = length . filter (&lt; 0) $ zipWith (-) l
        (tail l)\n    \n    part2 :: [Int] -&gt; Int\n    part2 = part1 . slide\n      where\n        slide
        [] = []\n        slide n  = sum (take 3 n) : slide (tail n)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My Naive Haskell Solution: &lt;a href=\"https://github.com/Maeevick/adventofcode2021/blob/main/src/D1.hs\"&gt;https://github.com/Maeevick/adventofcode2021/blob/main/src/D1.hs&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part1
        :: [Int] -&amp;gt; Int\npart1 l = length . filter (&amp;lt; 0) $ zipWith (-)
        l (tail l)\n\npart2 :: [Int] -&amp;gt; Int\npart2 = part1 . slide\n  where\n    slide
        [] = []\n    slide n  = sum (take 3 n) : slide (tail n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsxt6e/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsxt6e", "created":
        1638371605.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_hmth3t9", "id": "hmth3t9", "parent_id":
        "t1_hmsxt6e", "depth": 1, "children": ["hmth3t9", "hmszdkf"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638389228.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt500x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "_AngelOnFira_",
        "can_mod_post": false, "created_utc": 1638374591.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_rcysv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust. Not my submitted solution, but I really like making double use of `windows`
        for part 2.\n\n    fn main() {\n        println!(\"Pt. 1: {}\", vec![199,
        200, 208, 210, 200, 207, 240, 269, 260, 263]\n            .windows(2)\n            .filter(|x|
        x[0] &lt; x[1])\n            .count());\n    \n        println!(\"Pt. 2: {}\",
        vec![199, 200, 208, 210, 200, 207, 240, 269, 260, 263]\n            .windows(3)\n            .map(|x|
        x.iter().sum())\n            .collect::&lt;Vec&lt;i32&gt;&gt;()\n            .windows(2)\n            .filter(|x|
        x[0] &lt; x[1])\n            .count());\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rust. Not my submitted solution, but I really like
        making double use of &lt;code&gt;windows&lt;/code&gt; for part 2.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        main() {\n    println!(&amp;quot;Pt. 1: {}&amp;quot;, vec![199, 200, 208,
        210, 200, 207, 240, 269, 260, 263]\n        .windows(2)\n        .filter(|x|
        x[0] &amp;lt; x[1])\n        .count());\n\n    println!(&amp;quot;Pt. 2: {}&amp;quot;,
        vec![199, 200, 208, 210, 200, 207, 240, 269, 260, 263]\n        .windows(3)\n        .map(|x|
        x.iter().sum())\n        .collect::&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;()\n        .windows(2)\n        .filter(|x|
        x[0] &amp;lt; x[1])\n        .count());\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt500x/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt500x", "created":
        1638374591.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmtf8se", "id": "hmtf8se", "parent_id":
        "t1_hmt500x", "depth": 1, "children": ["hmtf8se", "hmu0b3y"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt8nh7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "rakkie20",
        "can_mod_post": false, "created_utc": 1638376063.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_66rd8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\n\n    fn main() {\n        let input: Vec&lt;u32&gt; = include_str!(\"../input.txt\")\n            .lines()\n            .map(|line|
        line.parse::&lt;u32&gt;().expect(\"Not a number!\"))\n            .collect();\n\n        fn
        get_increments(input: &amp;[u32], window_size: usize) -&gt; usize {\n            input\n                .iter()\n                .zip(input.iter().skip(window_size))\n                .filter(|(a,
        b)| b &gt; a)\n                .count()\n        }\n\n        println!(\"Part
        1: {}\", get_increments(&amp;input, 1));\n        println!(\"Part 2: {}\",
        get_increments(&amp;input, 3));\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;fn main()
        {\n    let input: Vec&amp;lt;u32&amp;gt; = include_str!(&amp;quot;../input.txt&amp;quot;)\n        .lines()\n        .map(|line|
        line.parse::&amp;lt;u32&amp;gt;().expect(&amp;quot;Not a number!&amp;quot;))\n        .collect();\n\n    fn
        get_increments(input: &amp;amp;[u32], window_size: usize) -&amp;gt; usize
        {\n        input\n            .iter()\n            .zip(input.iter().skip(window_size))\n            .filter(|(a,
        b)| b &amp;gt; a)\n            .count()\n    }\n\n    println!(&amp;quot;Part
        1: {}&amp;quot;, get_increments(&amp;amp;input, 1));\n    println!(&amp;quot;Part
        2: {}&amp;quot;, get_increments(&amp;amp;input, 3));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt8nh7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt8nh7", "created":
        1638376063.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtd9xp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "deadthoma5",
        "can_mod_post": false, "created_utc": 1638377876.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_1008g1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Not sure if this is mentioned before, here is a shortcut for Part 2:  \ncurrent
        window - previous window = (x3 + x2 + x1) - (x2 + x1 + x0) = x3 - x0  \n\n\nSo,
        you don''t have to sum over three numbers for the moving window. You can find
        the difference across two numbers which are further apart, since intermediate
        terms common to both moving windows cancel out.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Not sure if this is mentioned before, here is a shortcut
        for Part 2:&lt;br/&gt;\ncurrent window - previous window = (x3 + x2 + x1)
        - (x2 + x1 + x0) = x3 - x0  &lt;/p&gt;\n\n&lt;p&gt;So, you don&amp;#39;t have
        to sum over three numbers for the moving window. You can find the difference
        across two numbers which are further apart, since intermediate terms common
        to both moving windows cancel out.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtd9xp/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmtd9xp", "created": 1638377876.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638382942.0, "mod_reason_by": null, "banned_by": null, "ups": 4,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtfdrf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "complyue",
        "can_mod_post": false, "created_utc": 1638378721.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_2c5yxngr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Numpy\n\nDay 1\n\n    import numpy as np\n    \n    input_ = np.loadtxt(''input'')\n    \n    #
        part 1\n    np.sum(input_[1:] &gt; input_[:-1])\n    \n    # part 2 - more
        clever version figured out in writing the Haskell version\n    np.sum(input_[3:]
        &gt; input_[:-3])\n    \n    # part 2 - less clever\n    input_sum3 = input_[2:]
        + input_[1:-1] + input_[:-2]\n    np.sum(input_sum3[1:] &gt; input_sum3[:-1])",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Numpy&lt;/p&gt;\n\n&lt;p&gt;Day
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import numpy as np\n\ninput_ = np.loadtxt(&amp;#39;input&amp;#39;)\n\n#
        part 1\nnp.sum(input_[1:] &amp;gt; input_[:-1])\n\n# part 2 - more clever
        version figured out in writing the Haskell version\nnp.sum(input_[3:] &amp;gt;
        input_[:-3])\n\n# part 2 - less clever\ninput_sum3 = input_[2:] + input_[1:-1]
        + input_[:-2]\nnp.sum(input_sum3[1:] &amp;gt; input_sum3[:-1])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtfdrf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtfdrf", "created":
        1638378721.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmthjoh", "id": "hmthjoh", "parent_id":
        "t1_hmtfdrf", "depth": 1, "children": ["hmthjoh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638388239.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtj1jx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "probablyfine",
        "can_mod_post": false, "created_utc": 1638380161.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_a5a66", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# JQ\n\n    def pairs:\n      [ .[1:], .[:-1] ] | transpose;\n\n    def window_of_three:\n      [
        .[2:], .[1:-1], .[:-2] ] | transpose | map(add);\n\n    def drops:\n      .
        | pairs | map(select(.[0] &gt; .[1])) | length;\n\n    def part1:\n      [
        inputs | tonumber ] | drops;\n\n    def part2:\n      [ inputs | tonumber
        ] | window_of_three | drops;\n\n\n[Source and tests](https://github.com/mrwilson/advent-of-code-2021/tree/main/01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;JQ&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        pairs:\n  [ .[1:], .[:-1] ] | transpose;\n\ndef window_of_three:\n  [ .[2:],
        .[1:-1], .[:-2] ] | transpose | map(add);\n\ndef drops:\n  . | pairs | map(select(.[0]
        &amp;gt; .[1])) | length;\n\ndef part1:\n  [ inputs | tonumber ] | drops;\n\ndef
        part2:\n  [ inputs | tonumber ] | window_of_three | drops;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mrwilson/advent-of-code-2021/tree/main/01\"&gt;Source
        and tests&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtj1jx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtj1jx", "created":
        1638380161.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmtzhdd", "id": "hmtzhdd", "parent_id":
        "t1_hmtj1jx", "depth": 1, "children": ["hmtzhdd"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1713956061.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtnako", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ephemient",
        "can_mod_post": false, "created_utc": 1638381799.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_3y2dr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This space intentionally left blank.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;This space intentionally left blank.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtnako/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtnako", "created":
        1638381799.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmu6xyi", "id": "hmu6xyi", "parent_id":
        "t1_hmtnako", "depth": 1, "children": ["hmu6xyi", "hmtp5eo"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638403158.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtvl66", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ecco256",
        "can_mod_post": false, "created_utc": 1638384993.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_6b5f9h9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Haskell\n\n```\nmain :: IO ()\nmain = do\n    xs &lt;- map (read :: String
        -&gt; Int) . lines &lt;$&gt; readFile \"data/day01.txt\"\n    print [countInc
        1 xs, countInc 3 xs]\n  where countInc n xs = length (filter (uncurry (&lt;))
        (zip xs (drop n xs)))\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Haskell&lt;/h1&gt;\n\n&lt;p&gt;&lt;code&gt;\nmain
        :: IO ()\nmain = do\n    xs &amp;lt;- map (read :: String -&amp;gt; Int) .
        lines &amp;lt;$&amp;gt; readFile &amp;quot;data/day01.txt&amp;quot;\n    print
        [countInc 1 xs, countInc 3 xs]\n  where countInc n xs = length (filter (uncurry
        (&amp;lt;)) (zip xs (drop n xs)))\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtvl66/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtvl66", "created":
        1638384993.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hnhdv93", "id": "hnhdv93", "parent_id":
        "t1_hmtvl66", "depth": 1, "children": ["hnhdv93"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtwtbw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jlobblet",
        "can_mod_post": false, "created_utc": 1638385466.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_14ffvd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# D\nI haven''t seen a solution for D in the comments, so I thought I''d
        post mine here:\n\n    ulong[] parseData(string data)\n    {\n        return
        data.splitLines.map!(compose!(to!ulong, strip)).array;\n    }\n\n    size_t
        problem(size_t offset)(ulong[] data)\n    {\n        return StoppingPolicy.shortest.zip(data,
        data[offset..$]).count!\"a[1] &gt; a[0]\";\n    }\n\n    size_t problemA(ulong[]
        data)\n    {\n        return problem!1(data);\n    }\n\n    size_t problemB(ulong[]
        data)\n    {\n        return problem!3(data);\n    }\n\nQuite a nice little
        solution if I say so myself. The full solution is [here](https://github.com/Jlobblet/advent-of-code-2021-d/blob/main/source/days/day01.d).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;D&lt;/h1&gt;\n\n&lt;p&gt;I
        haven&amp;#39;t seen a solution for D in the comments, so I thought I&amp;#39;d
        post mine here:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ulong[] parseData(string
        data)\n{\n    return data.splitLines.map!(compose!(to!ulong, strip)).array;\n}\n\nsize_t
        problem(size_t offset)(ulong[] data)\n{\n    return StoppingPolicy.shortest.zip(data,
        data[offset..$]).count!&amp;quot;a[1] &amp;gt; a[0]&amp;quot;;\n}\n\nsize_t
        problemA(ulong[] data)\n{\n    return problem!1(data);\n}\n\nsize_t problemB(ulong[]
        data)\n{\n    return problem!3(data);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Quite
        a nice little solution if I say so myself. The full solution is &lt;a href=\"https://github.com/Jlobblet/advent-of-code-2021-d/blob/main/source/days/day01.d\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtwtbw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtwtbw", "created":
        1638385466.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmu5vif", "id": "hmu5vif", "parent_id":
        "t1_hmtwtbw", "depth": 1, "children": ["hmu5vif"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638440739.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuc20z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "masterarms",
        "can_mod_post": false, "created_utc": 1638391293.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_a4tv5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin:\n\n    import java.io.File\n\n    fun String.intLines() : List&lt;Int&gt;
        {\n         return File(this).readLines().map { it.toInt() }\n    }\n\n    val
        input = \"./input/1.txt\".intLines()\n    val part1 = input.zipWithNext().count  {
        (a,b) -&gt; b &gt; a }\n    val part2 = input.windowed(3).map {it.sum()}.zipWithNext().count
        { (a,b) -&gt; b &gt; a }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        java.io.File\n\nfun String.intLines() : List&amp;lt;Int&amp;gt; {\n     return
        File(this).readLines().map { it.toInt() }\n}\n\nval input = &amp;quot;./input/1.txt&amp;quot;.intLines()\nval
        part1 = input.zipWithNext().count  { (a,b) -&amp;gt; b &amp;gt; a }\nval part2
        = input.windowed(3).map {it.sum()}.zipWithNext().count { (a,b) -&amp;gt; b
        &amp;gt; a }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuc20z/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmuc20z", "created": 1638391293.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_hmv5hbr", "id": "hmv5hbr", "parent_id": "t1_hmuc20z", "depth": 1, "children":
        ["hmv5hbr", "hmvtrcr", "hmuyuly"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 5,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmud1xk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "GalaxyLittlepaws",
        "can_mod_post": false, "created_utc": 1638391659.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_68y3jcq0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My first-ever Advent of Code!\n\nI''m trying to get my skills with PHP up
        for a personal project, so that''s what I decided to work with.\n\nI can''t
        seem to figure out code boxes on Reddit at the moment, so here are the links!\n\n[Part
        1](https://github.com/GalaxyLittlepaws/AdventOfCode2021/blob/main/Day%2001/Part1.php)\n\n[Part
        2](https://github.com/GalaxyLittlepaws/AdventOfCode2021/blob/main/Day%2001/Part2.php)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My first-ever Advent
        of Code!&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying to get my skills with PHP
        up for a personal project, so that&amp;#39;s what I decided to work with.&lt;/p&gt;\n\n&lt;p&gt;I
        can&amp;#39;t seem to figure out code boxes on Reddit at the moment, so here
        are the links!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/GalaxyLittlepaws/AdventOfCode2021/blob/main/Day%2001/Part1.php\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/GalaxyLittlepaws/AdventOfCode2021/blob/main/Day%2001/Part2.php\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmud1xk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmud1xk", "created":
        1638391659.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmuj82l", "id": "hmuj82l", "parent_id":
        "t1_hmud1xk", "depth": 1, "children": ["hmuj82l", "hmvtiod"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638462393.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuxot7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "fmorel",
        "can_mod_post": false, "created_utc": 1638399667.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_a6ymr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# (with some implicit usings thanks to .NET 6):\n\n&amp;#x200B;\n\nDon''t
        even need to add numbers together! Just compare the current one  with the
        one 3 indexes behind.\n\n&amp;#x200B;\n\n    var timer = Stopwatch.StartNew();\n    var
        list = File.ReadAllLines(\"input.txt\");\n    // list = File.ReadAllLines(\"example.txt\");\n    var
        nums = list.Select(x =&gt; int.Parse(x)).ToList();\n    \n    Console.WriteLine($\"_
        :: {timer.Elapsed}\");// setup time\n    Console.WriteLine($\"{Part1()} ::
        {timer.Elapsed}\");\n    timer.Restart();\n    Console.WriteLine($\"{Part2()}
        :: {timer.Elapsed}\");\n    timer.Stop();\n    \n    long Part1() =&gt; nums.Skip(1).Select((x,
        i) =&gt; x &gt; nums[i]).Count(x =&gt; x);\n    long Part2() =&gt; nums.Skip(3).Select((x,
        i) =&gt; x &gt; nums[i]).Count(x =&gt; x);", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C# (with some implicit usings thanks to .NET 6):&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t
        even need to add numbers together! Just compare the current one  with the
        one 3 indexes behind.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        timer = Stopwatch.StartNew();\nvar list = File.ReadAllLines(&amp;quot;input.txt&amp;quot;);\n//
        list = File.ReadAllLines(&amp;quot;example.txt&amp;quot;);\nvar nums = list.Select(x
        =&amp;gt; int.Parse(x)).ToList();\n\nConsole.WriteLine($&amp;quot;_ :: {timer.Elapsed}&amp;quot;);//
        setup time\nConsole.WriteLine($&amp;quot;{Part1()} :: {timer.Elapsed}&amp;quot;);\ntimer.Restart();\nConsole.WriteLine($&amp;quot;{Part2()}
        :: {timer.Elapsed}&amp;quot;);\ntimer.Stop();\n\nlong Part1() =&amp;gt; nums.Skip(1).Select((x,
        i) =&amp;gt; x &amp;gt; nums[i]).Count(x =&amp;gt; x);\nlong Part2() =&amp;gt;
        nums.Skip(3).Select((x, i) =&amp;gt; x &amp;gt; nums[i]).Count(x =&amp;gt;
        x);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuxot7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuxot7", "created":
        1638399667.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmw44au", "id": "hmw44au", "parent_id":
        "t1_hmuxot7", "depth": 1, "children": ["hmw44au", "hmvoeor", "hmwkm2l"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638426884.0,
        "mod_reason_by": null, "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvkvm6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "WackoMcGoose",
        "can_mod_post": false, "created_utc": 1638409901.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_74thq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "It''s my first time playing AoC, so I figured I''d go hardcore and _solve
        things in a hacking simulator_, **[EXAPUNKS](https://store.steampowered.com/app/716490/EXAPUNKS)**
        to be specific. The game has its own \"fantasy assembly\" coding language,
        but custom puzzles are made in plain old **JavaScript**.\n\nPuzzle solution
        [here](https://pastebin.com/hKHyL1jG), top part is the .js file to create
        the puzzle itself, bottom part is the \"EXAcode\" to input in-game to get
        the solution. You have to paste your input data (comma-delineated) into `const
        INPUT_DATA = [/*foo*/];` to make it work, though. [This](https://steamcommunity.com/sharedfiles/filedetails/?id=2670545241)
        is what it looks like in-game.\n\nThe first half was actually trivial to do
        entirely in EXAcode in-game. The second half... well... Exapunks _truncates
        numbers_ to be in range [-9999, 9999], so I had to cheat a little and do the
        actual summing and comparison within JS itself. To keep to the spirit of my
        challenge though, it doesn''t calculate the answer for you, only does the
        \"too big numbers\" math and expects the EXAs to interpret the results themselves.\n\nEdit:
        I''ve discovered another awkward limitation built into the game... While it''s
        possible to _read_ a value from an arbitrarily long \"file\" (created by the
        puzzle itself), attempting to _write_ a value beyond index 999 causes the
        EXA to throw a \"FILE IS FULL\" error and terminate. And it seems like all
        of the input data blobs are going to end up as _way over_ 1000 units in length.
        ...Eh, I shouldn''t be needing to _write_ huge files in the game engine, only
        read from them (and the `createNormalFile()` function seems to accept arrays
        of arbitrary length as long as all values are only strings or integers), so
        it''s probably not a monkey wrench in my challenge...", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;It&amp;#39;s my first time playing AoC, so I figured
        I&amp;#39;d go hardcore and &lt;em&gt;solve things in a hacking simulator&lt;/em&gt;,
        &lt;strong&gt;&lt;a href=\"https://store.steampowered.com/app/716490/EXAPUNKS\"&gt;EXAPUNKS&lt;/a&gt;&lt;/strong&gt;
        to be specific. The game has its own &amp;quot;fantasy assembly&amp;quot;
        coding language, but custom puzzles are made in plain old &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;Puzzle
        solution &lt;a href=\"https://pastebin.com/hKHyL1jG\"&gt;here&lt;/a&gt;, top
        part is the .js file to create the puzzle itself, bottom part is the &amp;quot;EXAcode&amp;quot;
        to input in-game to get the solution. You have to paste your input data (comma-delineated)
        into &lt;code&gt;const INPUT_DATA = [/*foo*/];&lt;/code&gt; to make it work,
        though. &lt;a href=\"https://steamcommunity.com/sharedfiles/filedetails/?id=2670545241\"&gt;This&lt;/a&gt;
        is what it looks like in-game.&lt;/p&gt;\n\n&lt;p&gt;The first half was actually
        trivial to do entirely in EXAcode in-game. The second half... well... Exapunks
        &lt;em&gt;truncates numbers&lt;/em&gt; to be in range [-9999, 9999], so I
        had to cheat a little and do the actual summing and comparison within JS itself.
        To keep to the spirit of my challenge though, it doesn&amp;#39;t calculate
        the answer for you, only does the &amp;quot;too big numbers&amp;quot; math
        and expects the EXAs to interpret the results themselves.&lt;/p&gt;\n\n&lt;p&gt;Edit:
        I&amp;#39;ve discovered another awkward limitation built into the game...
        While it&amp;#39;s possible to &lt;em&gt;read&lt;/em&gt; a value from an arbitrarily
        long &amp;quot;file&amp;quot; (created by the puzzle itself), attempting to
        &lt;em&gt;write&lt;/em&gt; a value beyond index 999 causes the EXA to throw
        a &amp;quot;FILE IS FULL&amp;quot; error and terminate. And it seems like
        all of the input data blobs are going to end up as &lt;em&gt;way over&lt;/em&gt;
        1000 units in length. ...Eh, I shouldn&amp;#39;t be needing to &lt;em&gt;write&lt;/em&gt;
        huge files in the game engine, only read from them (and the &lt;code&gt;createNormalFile()&lt;/code&gt;
        function seems to accept arrays of arbitrary length as long as all values
        are only strings or integers), so it&amp;#39;s probably not a monkey wrench
        in my challenge...&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvkvm6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvkvm6", "created":
        1638409901.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmvz3s2", "id": "hmvz3s2", "parent_id":
        "t1_hmvkvm6", "depth": 1, "children": ["hmvz3s2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmyb5l7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "OculusRiftDriver",
        "can_mod_post": false, "created_utc": 1638464922.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_2esvbdok", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Excel: \n\nDay 1 Puzzle 1:  \n=IF(A3&gt;A2;1;0)  \n\n\nDay 1 Puzzle 2:  \n=IF(SUM(A3:A5)&gt;SUM(A2:A4);1;0)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excel: &lt;/p&gt;\n\n&lt;p&gt;Day
        1 Puzzle 1:&lt;br/&gt;\n=IF(A3&amp;gt;A2;1;0)  &lt;/p&gt;\n\n&lt;p&gt;Day
        1 Puzzle 2:&lt;br/&gt;\n=IF(SUM(A3:A5)&amp;gt;SUM(A2:A4);1;0)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyb5l7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmyb5l7", "created":
        1638464922.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrjh38",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ViliamPucik",
        "can_mod_post": false, "created_utc": 1638338154.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 9, "author_fullname": "t2_8s8cgq3w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 3** \\- Minimal readable solution for both parts [\\[GitHub\\]](https://github.com/viliampucik/adventofcode/blob/master/2021/01.py)\n\n    import
        fileinput\n    \n    n = list(map(int, fileinput.input()))\n    print(sum(a
        &lt; b for a, b in zip(n, n[1:])))\n    print(sum(a &lt; b for a, b in zip(n,
        n[3:])))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python
        3&lt;/strong&gt; - Minimal readable solution for both parts &lt;a href=\"https://github.com/viliampucik/adventofcode/blob/master/2021/01.py\"&gt;[GitHub]&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        fileinput\n\nn = list(map(int, fileinput.input()))\nprint(sum(a &amp;lt; b
        for a, b in zip(n, n[1:])))\nprint(sum(a &amp;lt; b for a, b in zip(n, n[3:])))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrjh38/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrjh38", "created":
        1638338154.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmrjuay", "id": "hmrjuay", "parent_id":
        "t1_hmrjh38", "depth": 1, "children": ["hmrjuay"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfsy6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "rossmacarthur",
        "can_mod_post": false, "created_utc": 1638336024.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 8, "author_fullname": "t2_3tiu67il", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Here''s mine](https://github.com/rossmacarthur/advent/blob/trunk/2021/01.rs)
        using Rust iterators", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/rossmacarthur/advent/blob/trunk/2021/01.rs\"&gt;Here&amp;#39;s
        mine&lt;/a&gt; using Rust iterators&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfsy6/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrfsy6", "created": 1638336024.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 7, "name":
        "t1_hmtkam3", "id": "hmtkam3", "parent_id": "t1_hmrfsy6", "depth": 1, "children":
        ["hmtkam3", "hmrhh9g", "hmviyw3"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1638338145.0, "mod_reason_by": null, "banned_by": null, "ups":
        5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrep8d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "u794575248",
        "can_mod_post": false, "created_utc": 1638335425.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_larkuvo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**[J Language](https://www.jsoftware.com/)**\n\n    depths =. \". ];._2 input          NB.
        Split by the last symbol (newline), execute.\n    incr =. {{ +/ &lt;/\"1 ]
        2]\\ y }}     NB. Group by 2, compare each group (1 if increasing), sum 1s.\n    ]star1
        =. incr depths             NB. Call incr function.\n    ]star2 =. incr +/\"1
        ] 3]\\ depths  NB. Group by 3, sum groups, call incr function.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=\"https://www.jsoftware.com/\"&gt;J
        Language&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depths
        =. &amp;quot;. ];._2 input          NB. Split by the last symbol (newline),
        execute.\nincr =. {{ +/ &amp;lt;/&amp;quot;1 ] 2]\\ y }}     NB. Group by
        2, compare each group (1 if increasing), sum 1s.\n]star1 =. incr depths             NB.
        Call incr function.\n]star2 =. incr +/&amp;quot;1 ] 3]\\ depths  NB. Group
        by 3, sum groups, call incr function.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrep8d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrep8d", "created":
        1638335425.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrlkzb", "id": "hmrlkzb", "parent_id":
        "t1_hmrep8d", "depth": 1, "children": ["hmrlkzb", "hmrizhe"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638336335.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmreq3w", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "FriendLeather8450",
        "can_mod_post": false, "created_utc": 1638335438.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_cav45vf4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Haskell\n\nEDIT: I''m an idiot, here''s a way simpler solution: [paste](https://topaz.github.io/paste/#XQAAAQA8AQAAAAAAAAA2m8ixrhLu7YJFrd2FLde+PAG1AtmepxmPo5FLnVuADb7qNcKltufkdyiHiWRPsQjpICy4tDw40Jq1C31g4bGmhMouPLoBngEu2AjSVEY54NbWyHOi66ay/Z7EHU+rIJY7seDozFZymYSmNb/Xp0vbF2cRU+CVK3I79llpW2jL0mc3g5fD4bN8gjrnc4Cn+TZp2sNeLoYi5XDTT5c1Im+DySELGCf6f2RXuh+vPJZpfkxyfCa1b+nqxxLnk+VsR9SHRvAWlxLEGlixp2d//4+SLQA=)\n\n[paste](https://topaz.github.io/paste/#XQAAAQChAQAAAAAAAAA2m8ixrhLu7YJFrd2FLde+PAG1AtmepxmPo5FLnVuADb7qNcKlty7YLiCsirVBpWMsVStj3t8nYZej2PQ+JKGMSbNL2Iz2p3AblanMtm/pzq6maYv3qOE1b29Ffl6DmT69/8NpFVlBBgFyJqtw2kTTYTzDeNz9Vd88vJLCkiMB8EjfCktqTlgtPG1GTDfg6k7QKnca+3Uw1/VDKX0unVGH45K/wpO1x4p9kKMfGW1h0ViXzBp/UHxJprIa8dckvbCGCJbb48kB3WfvNvKETQxta+0Lnce/CzbAx0ZkjviJHuIU5EHnwHNAvmHUYvNQazP9HgtEo//vUvzO)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Haskell&lt;/h1&gt;\n\n&lt;p&gt;EDIT:
        I&amp;#39;m an idiot, here&amp;#39;s a way simpler solution: &lt;a href=\"https://topaz.github.io/paste/#XQAAAQA8AQAAAAAAAAA2m8ixrhLu7YJFrd2FLde+PAG1AtmepxmPo5FLnVuADb7qNcKltufkdyiHiWRPsQjpICy4tDw40Jq1C31g4bGmhMouPLoBngEu2AjSVEY54NbWyHOi66ay/Z7EHU+rIJY7seDozFZymYSmNb/Xp0vbF2cRU+CVK3I79llpW2jL0mc3g5fD4bN8gjrnc4Cn+TZp2sNeLoYi5XDTT5c1Im+DySELGCf6f2RXuh+vPJZpfkxyfCa1b+nqxxLnk+VsR9SHRvAWlxLEGlixp2d//4+SLQA=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQChAQAAAAAAAAA2m8ixrhLu7YJFrd2FLde+PAG1AtmepxmPo5FLnVuADb7qNcKlty7YLiCsirVBpWMsVStj3t8nYZej2PQ+JKGMSbNL2Iz2p3AblanMtm/pzq6maYv3qOE1b29Ffl6DmT69/8NpFVlBBgFyJqtw2kTTYTzDeNz9Vd88vJLCkiMB8EjfCktqTlgtPG1GTDfg6k7QKnca+3Uw1/VDKX0unVGH45K/wpO1x4p9kKMfGW1h0ViXzBp/UHxJprIa8dckvbCGCJbb48kB3WfvNvKETQxta+0Lnce/CzbAx0ZkjviJHuIU5EHnwHNAvmHUYvNQazP9HgtEo//vUvzO\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmreq3w/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmreq3w", "created":
        1638335438.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrfc3s", "id": "hmrfc3s", "parent_id":
        "t1_hmreq3w", "depth": 1, "children": ["hmrfc3s"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638336262.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrf5mi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "oddrationale",
        "can_mod_post": false, "created_utc": 1638335674.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_6lo0s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s [my solution in F#](https://github.com/oddrationale/AdventOfCode2021FSharp/blob/main/Day01.ipynb).\n\nPart
        1:\n\n    let input = File.ReadAllLines @\"input/01.txt\"\n    \n    input\n    |&gt;
        Seq.map int\n    |&gt; Seq.windowed 2\n    |&gt; Seq.filter (fun pair -&gt;
        pair.[0] &lt; pair.[1])\n    |&gt; Seq.length\n\nPart 2:\n\n    input\n    |&gt;
        Seq.map int\n    |&gt; Seq.windowed 3\n    |&gt; Seq.map (fun window -&gt;
        window |&gt; Seq.sum)\n    |&gt; Seq.windowed 2\n    |&gt; Seq.filter (fun
        pair -&gt; pair.[0] &lt; pair.[1])\n    |&gt; Seq.length", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s &lt;a href=\"https://github.com/oddrationale/AdventOfCode2021FSharp/blob/main/Day01.ipynb\"&gt;my
        solution in F#&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        input = File.ReadAllLines @&amp;quot;input/01.txt&amp;quot;\n\ninput\n|&amp;gt;
        Seq.map int\n|&amp;gt; Seq.windowed 2\n|&amp;gt; Seq.filter (fun pair -&amp;gt;
        pair.[0] &amp;lt; pair.[1])\n|&amp;gt; Seq.length\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input\n|&amp;gt; Seq.map int\n|&amp;gt;
        Seq.windowed 3\n|&amp;gt; Seq.map (fun window -&amp;gt; window |&amp;gt; Seq.sum)\n|&amp;gt;
        Seq.windowed 2\n|&amp;gt; Seq.filter (fun pair -&amp;gt; pair.[0] &amp;lt;
        pair.[1])\n|&amp;gt; Seq.length\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf5mi/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrf5mi", "created":
        1638335674.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrfzj6", "id": "hmrfzj6", "parent_id":
        "t1_hmrf5mi", "depth": 1, "children": ["hmrfzj6"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfgli",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "gurgeous",
        "can_mod_post": false, "created_utc": 1638335838.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_5o7f0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby. I was fast, but not as fast as you guys!\n\n    p data.each_cons(2).count
        { _1 &lt; _2 }\n    p data.map.each_cons(3).map(&amp;:sum).each_cons(2).count
        { _1 &lt; _2 }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby.
        I was fast, but not as fast as you guys!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p
        data.each_cons(2).count { _1 &amp;lt; _2 }\np data.map.each_cons(3).map(&amp;amp;:sum).each_cons(2).count
        { _1 &amp;lt; _2 }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfgli/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrfgli", "created": 1638335838.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_hmrh2io", "id": "hmrh2io", "parent_id": "t1_hmrfgli", "depth": 1, "children":
        ["hmrh2io", "hmrsexd", "hmri827"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1638338018.0, "mod_reason_by": null, "banned_by": null, "ups":
        4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfpkd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "InKahootz",
        "can_mod_post": false, "created_utc": 1638335975.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_4fkrh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C#**  \n\nPart 1: \n\n    var ints = Input.ToIntArray();\n    int c = 0;\n    for
        (int i = 1; i &lt;= ints.Length - 1; i++)\n        if (ints[i] &gt; ints[i
        - 1])\n            c++;\n    Console.WriteLine(c);\n\nPart 2 (using C# 8 indexers):\n\n    var
        ints = Input.ToIntArray();\n    int previousWindow = int.MaxValue;\n    int
        c = 0;\n    for (int i = 0; i &lt;= ints.Length - 3; i++)\n    {\n        int
        currentWindow = ints[i..(i + 3)].Sum();\n        if (currentWindow &gt; previousWindow)\n            c++;\n        previousWindow
        = currentWindow;\n    }\n    Console.WriteLine(c);\n\n`ToIntArray()` is just
        a string extension of mine.  \n`public static int[] ToIntArray(this string
        s) =&gt; s.Split().Select(int.Parse).ToArray();`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C#&lt;/strong&gt;  &lt;/p&gt;\n\n&lt;p&gt;Part
        1: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var ints = Input.ToIntArray();\nint
        c = 0;\nfor (int i = 1; i &amp;lt;= ints.Length - 1; i++)\n    if (ints[i]
        &amp;gt; ints[i - 1])\n        c++;\nConsole.WriteLine(c);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 (using C# 8 indexers):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var ints = Input.ToIntArray();\nint
        previousWindow = int.MaxValue;\nint c = 0;\nfor (int i = 0; i &amp;lt;= ints.Length
        - 3; i++)\n{\n    int currentWindow = ints[i..(i + 3)].Sum();\n    if (currentWindow
        &amp;gt; previousWindow)\n        c++;\n    previousWindow = currentWindow;\n}\nConsole.WriteLine(c);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;ToIntArray()&lt;/code&gt;
        is just a string extension of mine.&lt;br/&gt;\n&lt;code&gt;public static
        int[] ToIntArray(this string s) =&amp;gt; s.Split().Select(int.Parse).ToArray();&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfpkd/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfpkd", "created":
        1638335975.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638338740.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrfuqk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "AP2008",
        "can_mod_post": false, "created_utc": 1638336051.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_5ucumlq4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust (64.688 us) [paste](https://topaz.github.io/paste/#XQAAAQBrAQAAAAAAAAA6nMjJFMpWDqhIy47d/LNcndbZGT3B+5rXXVqFTsPRvPcXfyoDIGDgworlOuTzki7rYazutJyJ5Q/Eb4FHSE0e1PQ2xsOK4Zg5KZBi9jKrw3WygriptzssypwaQrtjkhNOUBlWDBxmqX7IM1os8rWEGO50zVGQyEKTP4xiiwux8WE2PomS0vGTHDAEZ3+XXfespyzHqhsntAun6YWAl85ZMxPooGWhpFarNUkrrA5O5jhY6WjthR80GJJ/dstcv0kvppoloqZZs25g4zoWnQvHQ0jQAPzR9cA=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust (64.688 us) &lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBrAQAAAAAAAAA6nMjJFMpWDqhIy47d/LNcndbZGT3B+5rXXVqFTsPRvPcXfyoDIGDgworlOuTzki7rYazutJyJ5Q/Eb4FHSE0e1PQ2xsOK4Zg5KZBi9jKrw3WygriptzssypwaQrtjkhNOUBlWDBxmqX7IM1os8rWEGO50zVGQyEKTP4xiiwux8WE2PomS0vGTHDAEZ3+XXfespyzHqhsntAun6YWAl85ZMxPooGWhpFarNUkrrA5O5jhY6WjthR80GJJ/dstcv0kvppoloqZZs25g4zoWnQvHQ0jQAPzR9cA=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfuqk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfuqk", "created":
        1638336051.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmrhdnk", "id": "hmrhdnk", "parent_id":
        "t1_hmrfuqk", "depth": 1, "children": ["hmrhdnk", "hmrglp5"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638336331.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrfwhi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Hephlathio",
        "can_mod_post": false, "created_utc": 1638336077.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_b7e7t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# F#, 1618/763\n\nNext time, let''s not format path in the wrong way.\n\n    let
        path = \"\"\n    let fileLines = File.ReadAllLines(path)\n    \n    //Part
        1\n    let part1 =\n        fileLines\n        |&gt; Array.map (fun str -&gt;
        int str)\n        |&gt; Array.pairwise\n        |&gt; Array.sumBy (fun (prev,
        next) -&gt; if next &gt; prev then 1 else 0)\n    \n    let part2 =\n        fileLines\n        |&gt;
        Array.map (fun str -&gt; int str)\n        |&gt; Array.windowed 3\n        |&gt;
        Array.map (fun arr -&gt; arr |&gt; Array.sum)\n        |&gt; Array.pairwise\n        |&gt;
        Array.sumBy (fun (prev, next) -&gt; if next &gt; prev then 1 else 0)\n    \n    printfn
        $\"Part 1:{part1}\"\n    printfn $\"Part 2:{part2}\"", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;F#, 1618/763&lt;/h1&gt;\n\n&lt;p&gt;Next time, let&amp;#39;s
        not format path in the wrong way.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        path = &amp;quot;&amp;quot;\nlet fileLines = File.ReadAllLines(path)\n\n//Part
        1\nlet part1 =\n    fileLines\n    |&amp;gt; Array.map (fun str -&amp;gt;
        int str)\n    |&amp;gt; Array.pairwise\n    |&amp;gt; Array.sumBy (fun (prev,
        next) -&amp;gt; if next &amp;gt; prev then 1 else 0)\n\nlet part2 =\n    fileLines\n    |&amp;gt;
        Array.map (fun str -&amp;gt; int str)\n    |&amp;gt; Array.windowed 3\n    |&amp;gt;
        Array.map (fun arr -&amp;gt; arr |&amp;gt; Array.sum)\n    |&amp;gt; Array.pairwise\n    |&amp;gt;
        Array.sumBy (fun (prev, next) -&amp;gt; if next &amp;gt; prev then 1 else
        0)\n\nprintfn $&amp;quot;Part 1:{part1}&amp;quot;\nprintfn $&amp;quot;Part
        2:{part2}&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfwhi/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrfwhi", "created": 1638336077.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrgute", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "flwyd", "can_mod_post": false, "created_utc":
        1638336601.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 5,
        "author_fullname": "t2_4x5am2k0", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Raku (ne\u00e9 Perl 6) 1957/2583
        - [Source including file reading and output printing](https://github.com/flwyd/adventofcode/blob/main/2021/day1/day1.raku)\n\n    class
        Day1 {\n      has $.input is required;\n      has @.input-lines = $!input.lines;\n\n      method
        solve-part1( --&gt; Str(Cool)) {\n        my $increases = 0;\n        my $prev;\n        for
        @.input-lines {\n          $increases++ if $prev &amp;&amp; $_ &gt; $prev;\n          $prev
        = $_.Int;\n        }\n        return $increases;\n      }\n\n      method
        solve-part2( --&gt; Str(Cool)) {\n        my $increases = 0;\n        for
        1..(@.input-lines - 3) -&gt; $i {\n          $increases++ if @.input-lines[$i..$i+2].sum
        &gt; @.input-lines[$i-1..$i+1].sum;\n        }\n        return $increases;\n      }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Raku (ne\u00e9 Perl
        6) 1957/2583 - &lt;a href=\"https://github.com/flwyd/adventofcode/blob/main/2021/day1/day1.raku\"&gt;Source
        including file reading and output printing&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class
        Day1 {\n  has $.input is required;\n  has @.input-lines = $!input.lines;\n\n  method
        solve-part1( --&amp;gt; Str(Cool)) {\n    my $increases = 0;\n    my $prev;\n    for
        @.input-lines {\n      $increases++ if $prev &amp;amp;&amp;amp; $_ &amp;gt;
        $prev;\n      $prev = $_.Int;\n    }\n    return $increases;\n  }\n\n  method
        solve-part2( --&amp;gt; Str(Cool)) {\n    my $increases = 0;\n    for 1..(@.input-lines
        - 3) -&amp;gt; $i {\n      $increases++ if @.input-lines[$i..$i+2].sum &amp;gt;
        @.input-lines[$i-1..$i+1].sum;\n    }\n    return $increases;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgute/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgute", "created":
        1638336601.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638337338.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrgv1n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "SuperSmurfen",
        "can_mod_post": false, "created_utc": 1638336604.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_5nvuo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust (828/398)**\n\n[Link to full solution](https://github.com/AxlLind/AdventOfCode2021/blob/main/src/bin/01.rs)\n\nEasy
        start but I liked the problem. Pretty happy with my leaderboard placing, especially
        considering I had forgotten to log in to AoC which I realized as the counter
        hit 3 seconds! As always, the [itertools](https://docs.rs/itertools/latest/itertools/)
        crate is amazing. The `tuple_windows` function is perfect for this:\n\n    fn
        part1(iter: impl Iterator&lt;Item=u32&gt;) -&gt; usize {\n      iter.tuple_windows()\n        .filter(|(a,b)|
        a &lt; b)\n        .count()\n    }\n\n    fn part2(input: &amp;[u32]) -&gt;
        usize {\n      let iter = input.iter()\n        .tuple_windows()\n        .map(|(a,b,c)|
        a + b + c);\n      part1(iter)\n    }\n\nSo excited to be back again, third
        year in a row for me. Went back and finished almost everything, only 2018
        left now.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust
        (828/398)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/AxlLind/AdventOfCode2021/blob/main/src/bin/01.rs\"&gt;Link
        to full solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Easy start but I liked the
        problem. Pretty happy with my leaderboard placing, especially considering
        I had forgotten to log in to AoC which I realized as the counter hit 3 seconds!
        As always, the &lt;a href=\"https://docs.rs/itertools/latest/itertools/\"&gt;itertools&lt;/a&gt;
        crate is amazing. The &lt;code&gt;tuple_windows&lt;/code&gt; function is perfect
        for this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn part1(iter: impl Iterator&amp;lt;Item=u32&amp;gt;)
        -&amp;gt; usize {\n  iter.tuple_windows()\n    .filter(|(a,b)| a &amp;lt;
        b)\n    .count()\n}\n\nfn part2(input: &amp;amp;[u32]) -&amp;gt; usize {\n  let
        iter = input.iter()\n    .tuple_windows()\n    .map(|(a,b,c)| a + b + c);\n  part1(iter)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So
        excited to be back again, third year in a row for me. Went back and finished
        almost everything, only 2018 left now.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgv1n/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrgv1n", "created": 1638336604.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_hmrhmk2", "id": "hmrhmk2", "parent_id": "t1_hmrgv1n", "depth": 1, "children":
        ["hmrhmk2", "hmrj36z", "hmri2vz"]}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_r66vow", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "hmrhfv0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_r66vow", "score": 3, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "**Haskell**\n\n    depthIncrease
        xs count =\n    if length xs &lt; 2 then count else depthIncrease (y : ys)
        count''\n    where (x : y : ys) = xs\n            count'' = if y &gt; x then
        count + 1 else count\n\n    depthIncrease2 xs count = \n        if length
        xs &lt; 4 then count else depthIncrease2 (tail xs) count''\n        where
        (a:b:c:d:_) = xs\n            count'' = if b + c + d &gt; a + b + c then count
        + 1 else count\n\n    main = do\n    infile &lt;- readFile \"./resources/day1.txt\"\n    let
        xs = map read $ lines infile :: [Int]\n    print $ depthIncrease xs 0\n    print
        $ depthIncrease2 xs 0", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmrhfv0", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Haskell&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depthIncrease
        xs count =\nif length xs &amp;lt; 2 then count else depthIncrease (y : ys)
        count&amp;#39;\nwhere (x : y : ys) = xs\n        count&amp;#39; = if y &amp;gt;
        x then count + 1 else count\n\ndepthIncrease2 xs count = \n    if length xs
        &amp;lt; 4 then count else depthIncrease2 (tail xs) count&amp;#39;\n    where
        (a:b:c:d:_) = xs\n        count&amp;#39; = if b + c + d &amp;gt; a + b + c
        then count + 1 else count\n\nmain = do\ninfile &amp;lt;- readFile &amp;quot;./resources/day1.txt&amp;quot;\nlet
        xs = map read $ lines infile :: [Int]\nprint $ depthIncrease xs 0\nprint $
        depthIncrease2 xs 0\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhfv0/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638336938.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638336938.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmri6n9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Elixir \n\nhttps://github.com/sreedevk/advent-of-code/blob/master/elixir/2021/day01/lib/day01.ex",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmri6n9",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elixir
        &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/sreedevk/advent-of-code/blob/master/elixir/2021/day01/lib/day01.ex\"&gt;https://github.com/sreedevk/advent-of-code/blob/master/elixir/2021/day01/lib/day01.ex&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmri6n9/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638337377.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638337377.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmripy5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Rick-T",
        "can_mod_post": false, "created_utc": 1638337699.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_j78hn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [HASKELL](https://github.com/Rick-T/Advent-of-Code/blob/main/src/Year2021/Day01.hs)\n\nA
        calm start, as usual. `zipWith` is the star of the show today:\n\n    countIncreases
        :: [Int] -&gt; Int \n    countIncreases = length . filter (&gt; 0) . (zipWith
        (-) &lt;$&gt; tail &lt;*&gt; id)\n\n    slideWindows :: Int -&gt; [Int] -&gt;
        [Int]\n    slideWindows windowSize = foldr (zipWith (+)) (repeat 0) . take
        windowSize . iterate tail", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://github.com/Rick-T/Advent-of-Code/blob/main/src/Year2021/Day01.hs\"&gt;HASKELL&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;A
        calm start, as usual. &lt;code&gt;zipWith&lt;/code&gt; is the star of the
        show today:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;countIncreases :: [Int] -&amp;gt;
        Int \ncountIncreases = length . filter (&amp;gt; 0) . (zipWith (-) &amp;lt;$&amp;gt;
        tail &amp;lt;*&amp;gt; id)\n\nslideWindows :: Int -&amp;gt; [Int] -&amp;gt;
        [Int]\nslideWindows windowSize = foldr (zipWith (+)) (repeat 0) . take windowSize
        . iterate tail\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmripy5/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmripy5", "created": 1638337699.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 12, "name":
        "t1_hmrpa7v", "id": "hmrpa7v", "parent_id": "t1_hmripy5", "depth": 1, "children":
        ["hmrpa7v", "hmrl0lw", "hmvbdpp", "hmszier", "hmrmkzv"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638340614.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrjagu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ethsgo",
        "can_mod_post": false, "created_utc": 1638338044.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_gcxhn1zi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solidity\n\n    contract _01 is Parser {\n        function main(string memory
        input) external returns (uint256, uint256) {\n            uint256[] memory
        xs = parseInts(input);\n            if (xs.length == 0) {\n                xs
        = parseInts(\n                    \"[199, 200, 208, 210, 200, 207, 240, 269,
        260, 263]\"\n                );\n            }\n            return (p1(xs),
        p2(xs));\n        }\n\n        function p1(uint256[] memory xs) private pure
        returns (uint256) {\n            uint256 increases;\n            for (uint256
        i = 1; i &lt; xs.length; i++) {\n                if (xs[i - 1] &lt; xs[i])
        {\n                    increases++;\n                }\n            }\n            return
        increases;\n        }\n    \n        function p2(uint256[] memory xs) private
        pure returns (uint256) {\n            uint256 increases;\n            // Need
        at least 3 samples for a measurement.\n            if (xs.length &lt; 3) return
        0;\n            for (uint256 i = 3; i &lt; xs.length; i++) {\n                //
        The middle two values are the same in both windows, so they cancel\n                //
        out and we can just compare the extremes.\n                if (xs[i - 3] &lt;
        xs[i]) {\n                    increases++;\n                }\n            }\n            return
        increases;\n        }\n    }\n\nhttps://github.com/ethsgo/aoc", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Solidity&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;contract
        _01 is Parser {\n    function main(string memory input) external returns (uint256,
        uint256) {\n        uint256[] memory xs = parseInts(input);\n        if (xs.length
        == 0) {\n            xs = parseInts(\n                &amp;quot;[199, 200,
        208, 210, 200, 207, 240, 269, 260, 263]&amp;quot;\n            );\n        }\n        return
        (p1(xs), p2(xs));\n    }\n\n    function p1(uint256[] memory xs) private pure
        returns (uint256) {\n        uint256 increases;\n        for (uint256 i =
        1; i &amp;lt; xs.length; i++) {\n            if (xs[i - 1] &amp;lt; xs[i])
        {\n                increases++;\n            }\n        }\n        return
        increases;\n    }\n\n    function p2(uint256[] memory xs) private pure returns
        (uint256) {\n        uint256 increases;\n        // Need at least 3 samples
        for a measurement.\n        if (xs.length &amp;lt; 3) return 0;\n        for
        (uint256 i = 3; i &amp;lt; xs.length; i++) {\n            // The middle two
        values are the same in both windows, so they cancel\n            // out and
        we can just compare the extremes.\n            if (xs[i - 3] &amp;lt; xs[i])
        {\n                increases++;\n            }\n        }\n        return
        increases;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ethsgo/aoc\"&gt;https://github.com/ethsgo/aoc&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrjagu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrjagu", "created":
        1638338044.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrknr4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Imaginary_Age_4072",
        "can_mod_post": false, "created_utc": 1638338890.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_3dl4j1cb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Common Lisp 365/3502](https://github.com/blake-watkins/advent-of-code-2021/blob/main/day1.lisp)\n\nNot
        that functional, but it works :)\n\nHappy Advent of Code everyone!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/blake-watkins/advent-of-code-2021/blob/main/day1.lisp\"&gt;Common
        Lisp 365/3502&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Not that functional, but it
        works :)&lt;/p&gt;\n\n&lt;p&gt;Happy Advent of Code everyone!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrknr4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrknr4", "created":
        1638338890.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrkr1r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "BradleySigma",
        "can_mod_post": false, "created_utc": 1638338948.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_bq0pq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#matlab\n\n    data = importdata(\"input1.txt\");\n    sum(diff(data) &gt;
        0)\n    Y = data(1:end-3);\n    X = data(4:end);\n    sum(X-Y &gt; 0)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;matlab&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;data
        = importdata(&amp;quot;input1.txt&amp;quot;);\nsum(diff(data) &amp;gt; 0)\nY
        = data(1:end-3);\nX = data(4:end);\nsum(X-Y &amp;gt; 0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrkr1r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrkr1r", "created":
        1638338948.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrky8s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Ruby  \n\n\nhttps://github.com/sreedevk/advent-of-code/blob/master/ruby/2021/day1/main.rb",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmrky8s",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby  &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/sreedevk/advent-of-code/blob/master/ruby/2021/day1/main.rb\"&gt;https://github.com/sreedevk/advent-of-code/blob/master/ruby/2021/day1/main.rb&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrky8s/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638339075.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638339075.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrlox0", "id": "hmrlox0", "parent_id":
        "t1_hmrky8s", "depth": 1, "children": ["hmrlox0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrl33k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pepecze",
        "can_mod_post": false, "created_utc": 1638339163.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_4h3be7sg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[C++](https://github.com/BobekJosef/AoC21/blob/main/1/main.cpp)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/BobekJosef/AoC21/blob/main/1/main.cpp\"&gt;C++&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrl33k/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrl33k", "created":
        1638339163.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638349632.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrmz20", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "p_tseng",
        "can_mod_post": false, "created_utc": 1638340382.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_13dni4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "###Ruby\n\nOkay so for this one all you have to do is just sort the input
        and... what do you mean I wasn''t supposed to do it this way?\n\n    depths
        = ARGF.each_line.map(&amp;method(:Integer)).each_with_index.sort_by { |a,
        b| [a, -b] }.map(&amp;:freeze).freeze\n    def count_increases(xs, delta)\n      smaller
        = Array.new(xs.size)\n      xs.count { |_, i| smaller[i] = true; i &gt;= delta
        &amp;&amp; smaller[i - delta] }\n    end\n    [1, 3].each { |delta| p count_increases(depths,
        delta) }\n\nYes this solution actually works. No you don''t need to tell me
        [the better way to do it](https://github.com/petertseng/adventofcode-rb-2021/blob/master/01_sonar_sweep.rb),
        thanks :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h3&gt;Ruby&lt;/h3&gt;\n\n&lt;p&gt;Okay
        so for this one all you have to do is just sort the input and... what do you
        mean I wasn&amp;#39;t supposed to do it this way?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depths
        = ARGF.each_line.map(&amp;amp;method(:Integer)).each_with_index.sort_by {
        |a, b| [a, -b] }.map(&amp;amp;:freeze).freeze\ndef count_increases(xs, delta)\n  smaller
        = Array.new(xs.size)\n  xs.count { |_, i| smaller[i] = true; i &amp;gt;= delta
        &amp;amp;&amp;amp; smaller[i - delta] }\nend\n[1, 3].each { |delta| p count_increases(depths,
        delta) }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Yes this solution actually
        works. No you don&amp;#39;t need to tell me &lt;a href=\"https://github.com/petertseng/adventofcode-rb-2021/blob/master/01_sonar_sweep.rb\"&gt;the
        better way to do it&lt;/a&gt;, thanks :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrmz20/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrmz20", "created": 1638340382.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_hmrpxy4", "id": "hmrpxy4", "parent_id": "t1_hmrmz20", "depth": 1, "children":
        ["hmrpxy4", "hmrqazv"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrndxm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "alach11", "can_mod_post": false, "created_utc":
        1638340654.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_39ug2", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Python3 - list comprehensions
        save the day!\n\n    depths = open(\"01/input.txt\").read().split(\"\\n\")\n    depths
        = [int(a) for a in depths]\n    \n    # part 1\n    diffs = [dep - dep_os
        for dep, dep_os in zip(depths[:-1], depths[1:])]\n    print(sum(1 for i in
        diffs if i &lt; 0))\n    \n    # part 2\n    mov_sum = [d1 + d2 + d3 for d1,
        d2, d3 in zip(depths[2:], depths[1:-1], depths[:-2])]\n    diffs = [dep -
        dep_os for dep, dep_os in zip(mov_sum[:-1], mov_sum[1:])]\n    print(sum(1
        for i in diffs if i &lt; 0))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3
        - list comprehensions save the day!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depths
        = open(&amp;quot;01/input.txt&amp;quot;).read().split(&amp;quot;\\n&amp;quot;)\ndepths
        = [int(a) for a in depths]\n\n# part 1\ndiffs = [dep - dep_os for dep, dep_os
        in zip(depths[:-1], depths[1:])]\nprint(sum(1 for i in diffs if i &amp;lt;
        0))\n\n# part 2\nmov_sum = [d1 + d2 + d3 for d1, d2, d3 in zip(depths[2:],
        depths[1:-1], depths[:-2])]\ndiffs = [dep - dep_os for dep, dep_os in zip(mov_sum[:-1],
        mov_sum[1:])]\nprint(sum(1 for i in diffs if i &amp;lt; 0))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrndxm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrndxm", "created":
        1638340654.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrnh5o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "musifter",
        "can_mod_post": false, "created_utc": 1638340714.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_cwt0kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Gnu Smalltalk**\n\nLast year I decided to do Smalltalk in the middle of
        the first day, even though I hadn''t used it in years.  And the code wasn''t
        great... so I spent time this year rewriting them and last month I did 2019
        again for warm-up.  So hopefully, my code will be more true to the Smalltalk
        paradigm this year.\n\nI''ll probably have this extension at the top of many
        of them:\n    \n    Collection extend [\n        apply: method  [ ^self collect:
        [:x | x perform: method] ]\n    ]\n\nThis duplicates the more modern Smalltalks
        allowing using symbols to reference methods from things like collect:.   I
        could extend collect: to handle that, but I think it''s cleaner to give it
        its own name.\n\nThe full code:\nhttps://pastebin.com/dFYAE688", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Gnu Smalltalk&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Last
        year I decided to do Smalltalk in the middle of the first day, even though
        I hadn&amp;#39;t used it in years.  And the code wasn&amp;#39;t great... so
        I spent time this year rewriting them and last month I did 2019 again for
        warm-up.  So hopefully, my code will be more true to the Smalltalk paradigm
        this year.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ll probably have this extension
        at the top of many of them:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Collection
        extend [\n    apply: method  [ ^self collect: [:x | x perform: method] ]\n]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This
        duplicates the more modern Smalltalks allowing using symbols to reference
        methods from things like collect:.   I could extend collect: to handle that,
        but I think it&amp;#39;s cleaner to give it its own name.&lt;/p&gt;\n\n&lt;p&gt;The
        full code:\n&lt;a href=\"https://pastebin.com/dFYAE688\"&gt;https://pastebin.com/dFYAE688&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrnh5o/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrnh5o", "created":
        1638340714.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrnshk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Breadfish64",
        "can_mod_post": false, "created_utc": 1638340924.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_148q0j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C++\n\n    void SonarSweep(std::span&lt;const int&gt; depths, int window_width)
        {\n        int increased = 0;\n        for (int i = window_width; i &lt; depths.size();
        ++i)\n            if (depths[i - window_width] &lt; depths[i]) ++increased;\n        fmt::print(\"window
        width {} increases: {}\\n\", window_width, increased);\n    }\n    int main()
        {\n        std::ifstream input_file{\"input.txt\"};\n        const std::vector
        depths(std::istream_iterator&lt;int&gt;{input_file}, {});\n        SonarSweep(depths,
        1);\n        SonarSweep(depths, 3);\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;C++&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;void SonarSweep(std::span&amp;lt;const
        int&amp;gt; depths, int window_width) {\n    int increased = 0;\n    for (int
        i = window_width; i &amp;lt; depths.size(); ++i)\n        if (depths[i - window_width]
        &amp;lt; depths[i]) ++increased;\n    fmt::print(&amp;quot;window width {}
        increases: {}\\n&amp;quot;, window_width, increased);\n}\nint main() {\n    std::ifstream
        input_file{&amp;quot;input.txt&amp;quot;};\n    const std::vector depths(std::istream_iterator&amp;lt;int&amp;gt;{input_file},
        {});\n    SonarSweep(depths, 1);\n    SonarSweep(depths, 3);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrnshk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrnshk", "created":
        1638340924.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrte1e", "id": "hmrte1e", "parent_id":
        "t1_hmrnshk", "depth": 1, "children": ["hmrte1e"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638354434.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrnsys", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "chunes",
        "can_mod_post": false, "created_utc": 1638340932.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_7ybf8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "* [Factor solution](https://pointfree.neocities.org/aoc2021day01.html#factor)\n*
        [Red solution](https://pointfree.neocities.org/aoc2021day01.html#red)\n* [QB64
        solution](https://pointfree.neocities.org/aoc2021day01.html#qb64)\n\nThis
        year, I''m hoping to write solutions in [Factor](https://factorcode.org),
        [Red](https://www.red-lang.org/), [QB64](https://www.qb64.org/portal/), and/or
        [Forth](https://www.gnu.org/software/gforth/), in that order of priority.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://pointfree.neocities.org/aoc2021day01.html#factor\"&gt;Factor
        solution&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://pointfree.neocities.org/aoc2021day01.html#red\"&gt;Red
        solution&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://pointfree.neocities.org/aoc2021day01.html#qb64\"&gt;QB64
        solution&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;This year, I&amp;#39;m
        hoping to write solutions in &lt;a href=\"https://factorcode.org\"&gt;Factor&lt;/a&gt;,
        &lt;a href=\"https://www.red-lang.org/\"&gt;Red&lt;/a&gt;, &lt;a href=\"https://www.qb64.org/portal/\"&gt;QB64&lt;/a&gt;,
        and/or &lt;a href=\"https://www.gnu.org/software/gforth/\"&gt;Forth&lt;/a&gt;,
        in that order of priority.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrnsys/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrnsys", "created":
        1638340932.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638341440.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmro9sd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Klorec",
        "can_mod_post": false, "created_utc": 1638341250.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_15nsx4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "The **R** Language Quick and easy\n\n    input &lt;- as.integer(readLines(\"2021/data/day1.txt\",
        warn = F)) \n    \n    length(which(diff(input) &gt; 0))  # part 1\n    length(which(diff(input,
        lag = 3) &gt; 0)) # part2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The
        &lt;strong&gt;R&lt;/strong&gt; Language Quick and easy&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input
        &amp;lt;- as.integer(readLines(&amp;quot;2021/data/day1.txt&amp;quot;, warn
        = F)) \n\nlength(which(diff(input) &amp;gt; 0))  # part 1\nlength(which(diff(input,
        lag = 3) &amp;gt; 0)) # part2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmro9sd/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmro9sd", "created": 1638341250.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_hmrpxke", "id": "hmrpxke", "parent_id": "t1_hmro9sd", "depth": 1, "children":
        ["hmrpxke"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrorf8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "iceraven101",
        "can_mod_post": false, "created_utc": 1638341589.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_59tnh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "PowerShell\n\n    $total = 0\n    \n    for($i = 1; $i -lt $import.length;
        $i++)\n    {\n        if([int]$import[$i] -gt [int]$import[$i-1])\n        {\n            $total++\n        }\n    }\n    write-host
        Part1: $total\n    \n    $total = 0\n    for($i = 0; $i -lt $import.length;
        $i++)\n    {\n        $x = $i + 2\n        $n = $i + 1\n        $z = $n +
        2\n\n        $cur = $import[$i..$x] | Measure-Object -Sum\n        $next =
        $import[$n..$z] | Measure-Object -Sum\n\n        if($cur.sum -lt $next.sum)\n        {\n            $total++\n        }\n    }\n    write-host
        Part2: $total", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PowerShell&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$total
        = 0\n\nfor($i = 1; $i -lt $import.length; $i++)\n{\n    if([int]$import[$i]
        -gt [int]$import[$i-1])\n    {\n        $total++\n    }\n}\nwrite-host Part1:
        $total\n\n$total = 0\nfor($i = 0; $i -lt $import.length; $i++)\n{\n    $x
        = $i + 2\n    $n = $i + 1\n    $z = $n + 2\n\n    $cur = $import[$i..$x] |
        Measure-Object -Sum\n    $next = $import[$n..$z] | Measure-Object -Sum\n\n    if($cur.sum
        -lt $next.sum)\n    {\n        $total++\n    }\n}\nwrite-host Part2: $total\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrorf8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrorf8", "created":
        1638341589.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638346582.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrpogf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "SgiathCZ",
        "can_mod_post": false, "created_utc": 1638342244.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_1gmewesy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Elixir\n**Part 1**\n\n    @spec count_inc([integer()], non_neg_integer())
        :: non_neg_integer()\n    def count_inc(measurements, acc \\\\ 0)\n    def
        count_inc([a, b | rest], acc) when a &lt; b, do: count_inc([b | rest], acc
        + 1)\n    def count_inc([_ | rest], acc), do: count_inc(rest, acc)\n    def
        count_inc(_, acc), do: acc\n\n**Part 2**\n\n    @spec count_slide([integer()],
        non_neg_integer()) :: non_neg_integer()\n    def count_slide(measurements,
        acc \\\\ 0)\n    def count_slide([a, b, c, d | rest], acc) when a &lt; d,
        do: count_slide([b, c, d | rest], acc + 1)\n    def count_slide([_ | rest],
        acc), do: count_slide(rest, acc)\n    def count_slide(_, acc), do: acc", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        1&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@spec count_inc([integer()],
        non_neg_integer()) :: non_neg_integer()\ndef count_inc(measurements, acc \\\\
        0)\ndef count_inc([a, b | rest], acc) when a &amp;lt; b, do: count_inc([b
        | rest], acc + 1)\ndef count_inc([_ | rest], acc), do: count_inc(rest, acc)\ndef
        count_inc(_, acc), do: acc\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@spec count_slide([integer()],
        non_neg_integer()) :: non_neg_integer()\ndef count_slide(measurements, acc
        \\\\ 0)\ndef count_slide([a, b, c, d | rest], acc) when a &amp;lt; d, do:
        count_slide([b, c, d | rest], acc + 1)\ndef count_slide([_ | rest], acc),
        do: count_slide(rest, acc)\ndef count_slide(_, acc), do: acc\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrpogf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrpogf", "created":
        1638342244.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638343689.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrq8km", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "## Ruby\n \n    INPUTS = File.readlines(\"input1.txt\").map(&amp;:to_i)\n\n    def
        count_increasing arr\n      arr.each_cons(2).count{ _2 &gt; _1 }\n    end\n\n    #
        part 1\n    p count_increasing INPUTS\n\n    # part 2\n    p count_increasing
        INPUTS.each_cons(3).map(&amp;:sum)", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmrq8km", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h2&gt;Ruby&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;INPUTS
        = File.readlines(&amp;quot;input1.txt&amp;quot;).map(&amp;amp;:to_i)\n\ndef
        count_increasing arr\n  arr.each_cons(2).count{ _2 &amp;gt; _1 }\nend\n\n#
        part 1\np count_increasing INPUTS\n\n# part 2\np count_increasing INPUTS.each_cons(3).map(&amp;amp;:sum)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrq8km/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638342646.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638342646.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638345410.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrqzuc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "garciparedes",
        "can_mod_post": false, "created_utc": 1638343203.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_ml6ah", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here is my \ud83e\udd80 Rust solution for the \ud83c\udf84 AdventOfCode''s
        Day 1: Sonar Sweep\n\n* Part 1: [https://github.com/garciparedes/advent-of-code/blob/master/2021/01\\_sonar\\_sweep\\_part\\_1.rs](https://github.com/garciparedes/advent-of-code/blob/master/2021/01_sonar_sweep_part_1.rs)\n*
        Part 2: [https://github.com/garciparedes/advent-of-code/blob/master/2021/01\\_sonar\\_sweep\\_part\\_2.rs](https://github.com/garciparedes/advent-of-code/blob/master/2021/01_sonar_sweep_part_2.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is my \ud83e\udd80
        Rust solution for the \ud83c\udf84 AdventOfCode&amp;#39;s Day 1: Sonar Sweep&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Part
        1: &lt;a href=\"https://github.com/garciparedes/advent-of-code/blob/master/2021/01_sonar_sweep_part_1.rs\"&gt;https://github.com/garciparedes/advent-of-code/blob/master/2021/01_sonar_sweep_part_1.rs&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Part
        2: &lt;a href=\"https://github.com/garciparedes/advent-of-code/blob/master/2021/01_sonar_sweep_part_2.rs\"&gt;https://github.com/garciparedes/advent-of-code/blob/master/2021/01_sonar_sweep_part_2.rs&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrqzuc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrqzuc", "created":
        1638343203.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrregn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "cocotoni",
        "can_mod_post": false, "created_utc": 1638343498.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_2ua7fwlv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# PowerShell\n\n## Part 1\n\n    $countPart1 = 0\n    for($i = 1; $i -lt
        $inputDay1.Count; $i++)\n    {\n        if($inputDay1[$i] -gt $inputDay1[$i
        - 1])\n        {\n            $countPart1++\n        }\n    }\n    \"Result
        for part1: $countPart1\"\n\n## Part 2\n\nFor part 2 a little trick is not
        to calculate the sum of the window, as 2 items in adjacent windows are always
        the same. So just compare the first element of preceding window to the last
        element of the next one.\n\n    $countPart2 = 0\n    for($i = 1; $i -le ($inputDay1.Count
        - 3); $i++)\n    {\n        if($inputDay1[$i + 2] -gt $inputDay1[$i - 1])\n        {\n            $countPart2++\n        }\n    }\n    \"Result
        for part2: $countPart2\"", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;PowerShell&lt;/h1&gt;\n\n&lt;h2&gt;Part
        1&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;$countPart1 = 0\nfor($i = 1; $i -lt
        $inputDay1.Count; $i++)\n{\n    if($inputDay1[$i] -gt $inputDay1[$i - 1])\n    {\n        $countPart1++\n    }\n}\n&amp;quot;Result
        for part1: $countPart1&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Part
        2&lt;/h2&gt;\n\n&lt;p&gt;For part 2 a little trick is not to calculate the
        sum of the window, as 2 items in adjacent windows are always the same. So
        just compare the first element of preceding window to the last element of
        the next one.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$countPart2 = 0\nfor($i
        = 1; $i -le ($inputDay1.Count - 3); $i++)\n{\n    if($inputDay1[$i + 2] -gt
        $inputDay1[$i - 1])\n    {\n        $countPart2++\n    }\n}\n&amp;quot;Result
        for part2: $countPart2&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrregn/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrregn", "created":
        1638343498.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrsigj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Diderikdm",
        "can_mod_post": false, "created_utc": 1638344334.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_552bks37", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python:**\n\n    with open(\"2021 day1.txt\", ''r'') as file:\r\n    data
        = [int(x) for x in file.read().splitlines()]\r\n    print(len([x for e,x in
        enumerate(data) if data[e-1] &lt; x]))\r\n    print(len([x for e,x in enumerate(data)
        if e &gt; 2 and sum(data[e-3 : e]) &lt; sum(data[e-2 : e+1])]))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;2021 day1.txt&amp;quot;, &amp;#39;r&amp;#39;) as file:\ndata
        = [int(x) for x in file.read().splitlines()]\nprint(len([x for e,x in enumerate(data)
        if data[e-1] &amp;lt; x]))\nprint(len([x for e,x in enumerate(data) if e &amp;gt;
        2 and sum(data[e-3 : e]) &amp;lt; sum(data[e-2 : e+1])]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrsigj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrsigj", "created":
        1638344334.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrssht",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "nutrecht",
        "can_mod_post": false, "created_utc": 1638344548.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_dlu5l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Kotlin solution](https://github.com/nielsutrecht/adventofcode/blob/master/src/main/kotlin/com/nibado/projects/advent/y2021/Day01.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/nielsutrecht/adventofcode/blob/master/src/main/kotlin/com/nibado/projects/advent/y2021/Day01.kt\"&gt;Kotlin
        solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrssht/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrssht", "created":
        1638344548.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmru14y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "candurz",
        "can_mod_post": false, "created_utc": 1638345492.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_ws5kv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My solution](https://github.com/healeycodes/adventlang/blob/main/solutions/2021/01.adv)
        in [Adventlang](https://github.com/healeycodes/adventlang) \ud83c\udf85",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/healeycodes/adventlang/blob/main/solutions/2021/01.adv\"&gt;My
        solution&lt;/a&gt; in &lt;a href=\"https://github.com/healeycodes/adventlang\"&gt;Adventlang&lt;/a&gt;
        \ud83c\udf85&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmru14y/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmru14y", "created":
        1638345492.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrvi0x", "id": "hmrvi0x", "parent_id":
        "t1_hmru14y", "depth": 1, "children": ["hmrvi0x"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638347999.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrwv2f", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Wonderful-Bluejay-96",
        "can_mod_post": false, "created_utc": 1638347774.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_civtmh73", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "python3 - probably awful but at least they''re oneliners\n\nhttps://github.com/masmeert/advent-of-code/blob/master/2021/day01/main.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;python3 - probably awful
        but at least they&amp;#39;re oneliners&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/masmeert/advent-of-code/blob/master/2021/day01/main.py\"&gt;https://github.com/masmeert/advent-of-code/blob/master/2021/day01/main.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrwv2f/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrwv2f", "created":
        1638347774.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 10, "name": "t1_hmryrtg", "id": "hmryrtg", "parent_id":
        "t1_hmrwv2f", "depth": 1, "children": ["hmryrtg", "hmrzmbg", "hms2dz1"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638348715.0,
        "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrxatx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "kolcon",
        "can_mod_post": false, "created_utc": 1638348139.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_phihwsy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python - Pandas\n\nI took it as exercise for Pandas\u2026\n\nhttps://github.com/LubosKolouch/AdventOfCode_2021/blob/main/day_1.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python - Pandas&lt;/p&gt;\n\n&lt;p&gt;I
        took it as exercise for Pandas\u2026&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/LubosKolouch/AdventOfCode_2021/blob/main/day_1.py\"&gt;https://github.com/LubosKolouch/AdventOfCode_2021/blob/main/day_1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrxatx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrxatx", "created":
        1638348139.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmrxxhu", "id": "hmrxxhu", "parent_id":
        "t1_hmrxatx", "depth": 1, "children": ["hmrxxhu", "hms5asp"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638350152.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrzb95", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hydraulictrash",
        "can_mod_post": false, "created_utc": 1638349843.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_gqjkzkr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Cheeky JavaScript submission:\n\nSimilar to the other JS approaches, but
        uses a \\`reduce\\` instead \n\n[https://gist.github.com/nicholas-c/3302f25917d7b955881302174a45e49e](https://gist.github.com/nicholas-c/3302f25917d7b955881302174a45e49e)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cheeky JavaScript submission:&lt;/p&gt;\n\n&lt;p&gt;Similar
        to the other JS approaches, but uses a `reduce` instead &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gist.github.com/nicholas-c/3302f25917d7b955881302174a45e49e\"&gt;https://gist.github.com/nicholas-c/3302f25917d7b955881302174a45e49e&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrzb95/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrzb95", "created":
        1638349843.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrzdrp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "synack",
        "can_mod_post": false, "created_utc": 1638349904.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_304so", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ada, not the simplest way, but I wanted to play with streams a bit.\n\nhttps://github.com/JeremyGrosser/advent/tree/master/2021/src",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ada, not the simplest
        way, but I wanted to play with streams a bit.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/JeremyGrosser/advent/tree/master/2021/src\"&gt;https://github.com/JeremyGrosser/advent/tree/master/2021/src&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrzdrp/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrzdrp", "created":
        1638349904.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638359800.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrzld2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "6745408",
        "can_mod_post": false, "created_utc": 1638350088.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_cx877", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Google Sheets**\n\nPart 1\n\n    =ARRAYFORMULA(\n      SUM( \n       IF(ISBLANK(A3:A),,\n        IF(A3:A&lt;A2:A,,1))))\n\nPart
        2 was a big derp for me\n\n    =ARRAYFORMULA(\n      SUM(\n       IFERROR(\n        IF(ISBLANK(A2:A),,\n         IF(A5:A&lt;=A2:A,,1)))))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Google
        Sheets&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Part 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=ARRAYFORMULA(\n  SUM(
        \n   IF(ISBLANK(A3:A),,\n    IF(A3:A&amp;lt;A2:A,,1))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 was a big derp for me&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=ARRAYFORMULA(\n  SUM(\n   IFERROR(\n    IF(ISBLANK(A2:A),,\n     IF(A5:A&amp;lt;=A2:A,,1)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrzld2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrzld2", "created":
        1638350088.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmw6yqn", "id": "hmw6yqn", "parent_id":
        "t1_hmrzld2", "depth": 1, "children": ["hmw6yqn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrzzi1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Steinrikur",
        "can_mod_post": false, "created_utc": 1638350434.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_5et1x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I was going to stop doing bash, but...\n\n    A=($(&lt; ${1:-1.txt}))\n    a=${A[0]};
        for b in \"${A[@]}\"; do ((b&gt;a &amp;&amp; ++ANS)); a=$b; done\n    echo
        \"1A: ${ANS}\"\n    a=$((A[0]+A[1]+A[2])); b=$a; idx=(${!A[@]})\n    for i
        in \"${idx[@]:3}\"; do ((b+=A[i]-A[i-3], b&gt;a &amp;&amp; ++ANS2)); a=$b;
        done\n    echo \"1B: ${ANS2}\"", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I was going to stop doing bash, but...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;A=($(&amp;lt;
        ${1:-1.txt}))\na=${A[0]}; for b in &amp;quot;${A[@]}&amp;quot;; do ((b&amp;gt;a
        &amp;amp;&amp;amp; ++ANS)); a=$b; done\necho &amp;quot;1A: ${ANS}&amp;quot;\na=$((A[0]+A[1]+A[2]));
        b=$a; idx=(${!A[@]})\nfor i in &amp;quot;${idx[@]:3}&amp;quot;; do ((b+=A[i]-A[i-3],
        b&amp;gt;a &amp;amp;&amp;amp; ++ANS2)); a=$b; done\necho &amp;quot;1B: ${ANS2}&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrzzi1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrzzi1", "created":
        1638350434.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmsit4x", "id": "hmsit4x", "parent_id":
        "t1_hmrzzi1", "depth": 1, "children": ["hmsit4x"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638360048.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms0uxp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Cpt__Cookie",
        "can_mod_post": false, "created_utc": 1638351200.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_6lb4msar", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "***Rust:***\n\n    use itertools::Itertools;\n    use std::fs;\n    \n    fn
        main() {\n        let puzzle_input = fs::read_to_string(\"input.txt\").unwrap();\n        let
        puzzle_data = parse_data(puzzle_input);\n        println!(\"{}\", num_single_elements_increase(&amp;puzzle_data));\n        println!(\"{}\",
        num_sum_3_elements_increase(&amp;puzzle_data));\n    }\n    \n    fn num_single_elements_increase(deep_scan:
        &amp;Vec&lt;u16&gt;) -&gt; usize {\n        deep_scan\n            .iter()\n            .tuple_windows()\n            .filter(|(first,
        second)| first &lt; second)\n            .count()\n    }\n    \n    fn num_sum_3_elements_increase(deep_scan:
        &amp;Vec&lt;u16&gt;) -&gt; usize {\n        deep_scan\n            .iter()\n            .tuple_windows()\n            .filter(|(first,
        _, _, fourth)| first &lt; fourth)\n            .count()\n    }\n\n    fn parse_data(data:
        String) -&gt; Vec&lt;u16&gt; {\n        data.split(\"\\n\")\n            .filter(|x|
        x != &amp;\"\")\n            .map(|e| e.parse::&lt;u16&gt;().unwrap())\n            .collect()\n    }\n\n[GitHub](https://github.com/CptCookie/AOC/blob/master/Rust/2021/Day1/src/main.rs)\n\nEdit:
        improved solution Thx to u/SDDuk", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Rust:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        itertools::Itertools;\nuse std::fs;\n\nfn main() {\n    let puzzle_input =
        fs::read_to_string(&amp;quot;input.txt&amp;quot;).unwrap();\n    let puzzle_data
        = parse_data(puzzle_input);\n    println!(&amp;quot;{}&amp;quot;, num_single_elements_increase(&amp;amp;puzzle_data));\n    println!(&amp;quot;{}&amp;quot;,
        num_sum_3_elements_increase(&amp;amp;puzzle_data));\n}\n\nfn num_single_elements_increase(deep_scan:
        &amp;amp;Vec&amp;lt;u16&amp;gt;) -&amp;gt; usize {\n    deep_scan\n        .iter()\n        .tuple_windows()\n        .filter(|(first,
        second)| first &amp;lt; second)\n        .count()\n}\n\nfn num_sum_3_elements_increase(deep_scan:
        &amp;amp;Vec&amp;lt;u16&amp;gt;) -&amp;gt; usize {\n    deep_scan\n        .iter()\n        .tuple_windows()\n        .filter(|(first,
        _, _, fourth)| first &amp;lt; fourth)\n        .count()\n}\n\nfn parse_data(data:
        String) -&amp;gt; Vec&amp;lt;u16&amp;gt; {\n    data.split(&amp;quot;\\n&amp;quot;)\n        .filter(|x|
        x != &amp;amp;&amp;quot;&amp;quot;)\n        .map(|e| e.parse::&amp;lt;u16&amp;gt;().unwrap())\n        .collect()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/CptCookie/AOC/blob/master/Rust/2021/Day1/src/main.rs\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        improved solution Thx to &lt;a href=\"/u/SDDuk\"&gt;u/SDDuk&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms0uxp/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms0uxp", "created":
        1638351200.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hms9om0", "id": "hms9om0", "parent_id":
        "t1_hms0uxp", "depth": 1, "children": ["hms9om0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms2v2z",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "s3aker",
        "can_mod_post": false, "created_utc": 1638352952.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_3xauwsi0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Raku [solution 2](https://github.com/seaker/advent-of-code/blob/master/2021/01/t.raku).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Raku &lt;a href=\"https://github.com/seaker/advent-of-code/blob/master/2021/01/t.raku\"&gt;solution
        2&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms2v2z/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms2v2z", "created":
        1638352952.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hms5n1h", "id": "hms5n1h", "parent_id":
        "t1_hms2v2z", "depth": 1, "children": ["hms5n1h"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638360518.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms4xe2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "s96g3g23708gbxs86734",
        "can_mod_post": false, "created_utc": 1638354728.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_qncpszq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python part2, how can I improve it?\n\n    def part2(heights):\n        ans
        = 0\n        for i in range(3, len(heights)):\n            if (heights[i]
        &gt; heights[i - 3]):\n                ans += 1\n        print(f\"Part 2:
        {ans}\")\n\nEdit: the best solution is probably\n\n    ans = sum(x1 &gt; x0
        for x0, x1 in zip(heights, heights[3:]))\n\n:)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python part2, how can I improve it?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        part2(heights):\n    ans = 0\n    for i in range(3, len(heights)):\n        if
        (heights[i] &amp;gt; heights[i - 3]):\n            ans += 1\n    print(f&amp;quot;Part
        2: {ans}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit: the best
        solution is probably&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ans = sum(x1 &amp;gt;
        x0 for x0, x1 in zip(heights, heights[3:]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;:)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms4xe2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms4xe2", "created":
        1638354728.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmsaag3", "id": "hmsaag3", "parent_id":
        "t1_hms4xe2", "depth": 1, "children": ["hmsaag3", "hmsempi"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms664r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "busdriverbuddha2",
        "can_mod_post": false, "created_utc": 1638355756.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_5tmty0ji", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3, got it in two lines each.\n\nPart 1:\n\n    depths = [int(a) for
        a in open(\"input.txt\").readlines()]\n    print(sum((1 if b &gt; a else 0)
        for a, b in zip(depths[:-1], depths[1:])))\n\nPart 2:\n\n    windows = [sum(depths[i:i+3])
        for i in range(len(depths) - 2)]\n    print(sum((1 if b &gt; a else 0) for
        a, b in zip(windows[:-1], windows[1:])))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python 3, got it in two lines each.&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depths = [int(a) for a in open(&amp;quot;input.txt&amp;quot;).readlines()]\nprint(sum((1
        if b &amp;gt; a else 0) for a, b in zip(depths[:-1], depths[1:])))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;windows = [sum(depths[i:i+3]) for i
        in range(len(depths) - 2)]\nprint(sum((1 if b &amp;gt; a else 0) for a, b
        in zip(windows[:-1], windows[1:])))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms664r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms664r", "created":
        1638355756.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmsjjln", "id": "hmsjjln", "parent_id":
        "t1_hms664r", "depth": 1, "children": ["hmsjjln", "hms7msx", "hms9o28"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638358036.0,
        "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms8dah", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "diatone-",
        "can_mod_post": false, "created_utc": 1638357520.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_bb5ekm41", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Common Lisp, not sure how performant `subseq` is like this\n\n    (defun
        get-input ()\n      (with-open-file (in \"day1.input\")\n        (loop for
        line = (read-line in nil)\n              while line\n              collect
        (parse-integer line))))\n    \n    (defun count-increases (depths)\n      (count
        T (mapcar #''&lt; depths (cdr depths))))\n    \n    ;; part 1 solution:\n    ;;
        (count-increases (get-input))\n    \n    (defun windows (xs len)\n      (loop
        for i from 0 to (length xs)\n            for l = (min (+ i len) (length xs))\n            for
        ts = (subseq xs i l)\n            when (= (length ts) len)\n            collect
        ts))\n    \n    ;; part 2 actual solution:\n    ;; (count-increases\n    ;;  (mapcar\n    ;;   (lambda
        (xs) (apply #''+ xs))\n    ;;   (windows (get-input) 3)))", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Common Lisp, not sure how performant &lt;code&gt;subseq&lt;/code&gt;
        is like this&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun get-input ()\n  (with-open-file
        (in &amp;quot;day1.input&amp;quot;)\n    (loop for line = (read-line in nil)\n          while
        line\n          collect (parse-integer line))))\n\n(defun count-increases
        (depths)\n  (count T (mapcar #&amp;#39;&amp;lt; depths (cdr depths))))\n\n;;
        part 1 solution:\n;; (count-increases (get-input))\n\n(defun windows (xs len)\n  (loop
        for i from 0 to (length xs)\n        for l = (min (+ i len) (length xs))\n        for
        ts = (subseq xs i l)\n        when (= (length ts) len)\n        collect ts))\n\n;;
        part 2 actual solution:\n;; (count-increases\n;;  (mapcar\n;;   (lambda (xs)
        (apply #&amp;#39;+ xs))\n;;   (windows (get-input) 3)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms8dah/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms8dah", "created":
        1638357520.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmt3iru", "id": "hmt3iru", "parent_id":
        "t1_hms8dah", "depth": 1, "children": ["hmt3iru"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms8eou",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "dozzinale",
        "can_mod_post": false, "created_utc": 1638357551.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_nkco2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Learning Rust, so there is my solution: [https://github.com/finalfire/aoc21/blob/main/src/day1.rs](https://github.com/finalfire/aoc21/blob/main/src/day1.rs)\n\nPart
        2 considers overlapping windows, so you can remove both middle elements and
        just compare first and last element.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Learning Rust, so there is my solution: &lt;a href=\"https://github.com/finalfire/aoc21/blob/main/src/day1.rs\"&gt;https://github.com/finalfire/aoc21/blob/main/src/day1.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2 considers overlapping windows, so you can remove both middle elements and
        just compare first and last element.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms8eou/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms8eou", "created": 1638357551.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638461191.0, "mod_reason_by": null, "banned_by": null, "ups": 4,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsea34",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "__Abigail__",
        "can_mod_post": false, "created_utc": 1638361724.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_13exmr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Blog post: [Day 1: Sonar Sweep](https://abigail.github.io/HTML/AdventOfCode/2021/day-01.html)
        (Perl)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Blog
        post: &lt;a href=\"https://abigail.github.io/HTML/AdventOfCode/2021/day-01.html\"&gt;Day
        1: Sonar Sweep&lt;/a&gt; (Perl)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsea34/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsea34", "created": 1638361724.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmw1dzt", "id": "hmw1dzt", "parent_id": "t1_hmsea34", "depth": 1, "children":
        ["hmw1dzt"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638362371.0,
        "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsezp2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "FryDay9000",
        "can_mod_post": false, "created_utc": 1638362175.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_33htq59q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## R - succinct solution\n\n    input_1 &lt;- as.numeric(readLines(\"day_1/data/day_1.txt\"))\n    \n    Part
        1\n    sum(diff(input_1) &gt; 0)\n    \n    Part 2 \n    input_roll &lt;-
        zoo::rollsum(input_1, 3) \n    sum(diff(input_roll) &gt; 0)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h2&gt;R - succinct solution&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;input_1
        &amp;lt;- as.numeric(readLines(&amp;quot;day_1/data/day_1.txt&amp;quot;))\n\nPart
        1\nsum(diff(input_1) &amp;gt; 0)\n\nPart 2 \ninput_roll &amp;lt;- zoo::rollsum(input_1,
        3) \nsum(diff(input_roll) &amp;gt; 0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsezp2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsezp2", "created":
        1638362175.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmsk7s0", "id": "hmsk7s0", "parent_id":
        "t1_hmsezp2", "depth": 1, "children": ["hmsk7s0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmslw5f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "BlueTit1928",
        "can_mod_post": false, "created_utc": 1638366058.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_bdclzmo7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "FAO Rust users, the builtin .windows() method on vectors makes this barely
        an inconvenience:\n\n**Rust**\n\n    pub fn part_1(input: &amp;Vec&lt;usize&gt;)
        -&gt; usize {\n        input.windows(2)\n            .filter(|&amp;p| p[0]
        &lt; p[1])\n            .count()\n    }\n\n    pub fn part_2(input: &amp;Vec&lt;usize&gt;)
        -&gt; usize {\n        let sums = input.windows(3)\n                             .map(|t|
        t.iter().sum())\n                             .collect::&lt;Vec&lt;usize&gt;&gt;();\n\n        part_1(&amp;sums)\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FAO Rust users, the
        builtin .windows() method on vectors makes this barely an inconvenience:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn part_1(input: &amp;amp;Vec&amp;lt;usize&amp;gt;) -&amp;gt; usize {\n    input.windows(2)\n        .filter(|&amp;amp;p|
        p[0] &amp;lt; p[1])\n        .count()\n}\n\npub fn part_2(input: &amp;amp;Vec&amp;lt;usize&amp;gt;)
        -&amp;gt; usize {\n    let sums = input.windows(3)\n                         .map(|t|
        t.iter().sum())\n                         .collect::&amp;lt;Vec&amp;lt;usize&amp;gt;&amp;gt;();\n\n    part_1(&amp;amp;sums)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmslw5f/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmslw5f", "created":
        1638366058.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsm130",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "VictorTennekes",
        "can_mod_post": false, "created_utc": 1638366130.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_4y6mz7l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Nim\n\nDecided to try and learn Nim during this year of AOC. Here''s my
        solution, I know it could be shorter, any tips are appreciated :)\n\n    import
        std/[strutils, sequtils, sugar]\n    \n    const\n     input = readFile(\"input.txt\").strip.splitLines.map(parseInt)\n     size
        = len(input)\n    \n    var second_part = newSeq[int](0)\n    for i in 0..&lt;size-2:\n     second_part.add(input[i]
        + input[i+1] + input[i+2])\n    \n    proc solve(values: seq) : int =\n     for
        i in 1..&lt;len(values):\n      if values[i] &gt; values[i - 1]:\n       result
        += 1\n    \n    echo \"part 1: \", solve(input)\n    echo \"part 2: \", solve(second_part)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Nim&lt;/h1&gt;\n\n&lt;p&gt;Decided
        to try and learn Nim during this year of AOC. Here&amp;#39;s my solution,
        I know it could be shorter, any tips are appreciated :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        std/[strutils, sequtils, sugar]\n\nconst\n input = readFile(&amp;quot;input.txt&amp;quot;).strip.splitLines.map(parseInt)\n
        size = len(input)\n\nvar second_part = newSeq[int](0)\nfor i in 0..&amp;lt;size-2:\n
        second_part.add(input[i] + input[i+1] + input[i+2])\n\nproc solve(values:
        seq) : int =\n for i in 1..&amp;lt;len(values):\n  if values[i] &amp;gt; values[i
        - 1]:\n   result += 1\n\necho &amp;quot;part 1: &amp;quot;, solve(input)\necho
        &amp;quot;part 2: &amp;quot;, solve(second_part)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsm130/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsm130", "created":
        1638366130.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmsyrwi", "id": "hmsyrwi", "parent_id":
        "t1_hmsm130", "depth": 1, "children": ["hmsyrwi", "hmt6etu"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsnuj3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "chicagocode",
        "can_mod_post": false, "created_utc": 1638367041.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_mtcx04l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Kotlin -&gt; [\\[Blog/Commentary\\]](https://todd.ginsberg.com/post/advent-of-code/2021/day1/)
        - [\\[Code\\]](https://github.com/tginsberg/advent-2021-kotlin/blob/master/src/main/kotlin/com/ginsberg/advent2021/Day01.kt)
        -  [\\[All 2021 Solutions\\]](https://github.com/tginsberg/advent-2021-kotlin)\n\nThis
        one is short so I''ll just inline it. I''ve provided a commentary on my blog.
        For the fifth year in a row, I''m trying to solve the puzzles in Kotlin with
        clear explainable solutions, and write a blog explaining them.\n\n    class
        Day01(private val input: List&lt;Int&gt;) {\n    \n        fun solvePart1():
        Int =\n            input.zipWithNext().count { it.first &lt; it.second }\n    \n        fun
        solvePart2(): Int =\n            input.windowed(3, 1).map { it.sum() }.zipWithNext().count
        { it.first &lt; it.second }\n    \n    }\n\nThere are a few ways I can think
        of to make parts one and two more common, but I didn''t want to complicate
        things on day one.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Kotlin
        -&amp;gt; &lt;a href=\"https://todd.ginsberg.com/post/advent-of-code/2021/day1/\"&gt;[Blog/Commentary]&lt;/a&gt;
        - &lt;a href=\"https://github.com/tginsberg/advent-2021-kotlin/blob/master/src/main/kotlin/com/ginsberg/advent2021/Day01.kt\"&gt;[Code]&lt;/a&gt;
        -  &lt;a href=\"https://github.com/tginsberg/advent-2021-kotlin\"&gt;[All
        2021 Solutions]&lt;/a&gt;&lt;/h2&gt;\n\n&lt;p&gt;This one is short so I&amp;#39;ll
        just inline it. I&amp;#39;ve provided a commentary on my blog. For the fifth
        year in a row, I&amp;#39;m trying to solve the puzzles in Kotlin with clear
        explainable solutions, and write a blog explaining them.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class
        Day01(private val input: List&amp;lt;Int&amp;gt;) {\n\n    fun solvePart1():
        Int =\n        input.zipWithNext().count { it.first &amp;lt; it.second }\n\n    fun
        solvePart2(): Int =\n        input.windowed(3, 1).map { it.sum() }.zipWithNext().count
        { it.first &amp;lt; it.second }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There
        are a few ways I can think of to make parts one and two more common, but I
        didn&amp;#39;t want to complicate things on day one.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsnuj3/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsnuj3", "created":
        1638367041.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmsvqsy", "id": "hmsvqsy", "parent_id":
        "t1_hmsnuj3", "depth": 1, "children": ["hmsvqsy"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmspmzw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmspmzw", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmspmzw/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638367924.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638367924.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmvw5st", "id": "hmvw5st", "parent_id":
        "t1_hmspmzw", "depth": 1, "children": ["hmvw5st", "hmvj0km"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsskap",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Iain_M_Norman",
        "can_mod_post": false, "created_utc": 1638369295.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_iu374", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# same solve function for both parts, just pass in a window size.\n\n    private
        int Solve(int[] lines, int windowSize)\n    {\n        return lines.Where((x,
        i) =&gt; i &gt;= windowSize &amp;&amp; x &gt; lines[i - windowSize]).Count();\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C# same solve function
        for both parts, just pass in a window size.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private
        int Solve(int[] lines, int windowSize)\n{\n    return lines.Where((x, i) =&amp;gt;
        i &amp;gt;= windowSize &amp;amp;&amp;amp; x &amp;gt; lines[i - windowSize]).Count();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsskap/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsskap", "created":
        1638369295.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmstdu1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "RookBe",
        "can_mod_post": false, "created_utc": 1638369670.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_84q5m", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Rust](https://github.com/NickyMeuleman/scrapyard/blob/main/advent_of_code/2021/day_01/src/main.rs).\nThe
        windows() method is really the MVP of the day", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/NickyMeuleman/scrapyard/blob/main/advent_of_code/2021/day_01/src/main.rs\"&gt;Rust&lt;/a&gt;.\nThe
        windows() method is really the MVP of the day&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmstdu1/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmstdu1", "created": 1638369670.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmsuu75", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "EvergreenTheTree", "can_mod_post": false,
        "created_utc": 1638370315.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 4, "author_fullname": "t2_1i5ck993", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "# Vimscript\nYes,
        I am attempting to do this year''s advent of code entirely in vimscript and
        I am regretting it already.\nI could have done this the boring iterative way
        using lists or something but I wanted to be fancy. These snippets assume that
        you have the input file open already.\n\nPart 1:\n\n    let g:count = 0 |
        %s/\\v\\ze^(\\d+)\\n(\\d+)/\\=execute(\"let g:count += \" . (str2nr(submatch(1))
        &lt; str2nr(submatch(2))))/ | echo g:count\n\nPart 2:\n\n    let g:count =
        0 | %s/\\v\\ze^(\\d+)\\n(\\d+)\\n(\\d+)\\n(\\d+)\\n/\\=execute(\"let g:count
        += \" . (submatch(1) + submatch(2) + submatch(3) &lt; submatch(2) + submatch(3)
        + submatch(4)))/ | echo g:count", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Vimscript&lt;/h1&gt;\n\n&lt;p&gt;Yes, I am attempting
        to do this year&amp;#39;s advent of code entirely in vimscript and I am regretting
        it already.\nI could have done this the boring iterative way using lists or
        something but I wanted to be fancy. These snippets assume that you have the
        input file open already.&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        g:count = 0 | %s/\\v\\ze^(\\d+)\\n(\\d+)/\\=execute(&amp;quot;let g:count
        += &amp;quot; . (str2nr(submatch(1)) &amp;lt; str2nr(submatch(2))))/ | echo
        g:count\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        g:count = 0 | %s/\\v\\ze^(\\d+)\\n(\\d+)\\n(\\d+)\\n(\\d+)\\n/\\=execute(&amp;quot;let
        g:count += &amp;quot; . (submatch(1) + submatch(2) + submatch(3) &amp;lt;
        submatch(2) + submatch(3) + submatch(4)))/ | echo g:count\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsuu75/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsuu75", "created":
        1638370315.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmu138d", "id": "hmu138d", "parent_id":
        "t1_hmsuu75", "depth": 1, "children": ["hmu138d"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638408113.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt5svi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "derwentx",
        "can_mod_post": false, "created_utc": 1638374915.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_1376bd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This bash/awk/unix golf solution is the shortest I''ve seen written in ascii
        characters :P It even downloads the inputs for you.\n\n`export c=session=...
        # put your browser session token here`\n\npart 1 (28 byte awk)\n\n`curl -Lb$c
        adventofcode.com/2021/day/1/input | awk ''p{s+=p&lt;$0}{p=$0}END{print s}''`\n\npart
        2 (39 byte awk)\n\n`curl -Lb$c adventofcode.com/2021/day/1/input | awk ''{d=c;c=b;b=a;a=$0}d{r+=d&lt;a}END{print
        r}''`\n\nboth combined (50 byte awk)\n\n`curl -Lb$c adventofcode.com/2021/day/1/input
        | awk ''{d=c;c=b;b=a;a=$0}b{s+=b&lt;a}d{r+=d&lt;a}END{print r,s}''`", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;This bash/awk/unix golf solution is the
        shortest I&amp;#39;ve seen written in ascii characters :P It even downloads
        the inputs for you.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;export c=session=...
        # put your browser session token here&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;part
        1 (28 byte awk)&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;curl -Lb$c adventofcode.com/2021/day/1/input
        | awk &amp;#39;p{s+=p&amp;lt;$0}{p=$0}END{print s}&amp;#39;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;part
        2 (39 byte awk)&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;curl -Lb$c adventofcode.com/2021/day/1/input
        | awk &amp;#39;{d=c;c=b;b=a;a=$0}d{r+=d&amp;lt;a}END{print r}&amp;#39;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;both
        combined (50 byte awk)&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;curl -Lb$c adventofcode.com/2021/day/1/input
        | awk &amp;#39;{d=c;c=b;b=a;a=$0}b{s+=b&amp;lt;a}d{r+=d&amp;lt;a}END{print
        r,s}&amp;#39;&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt5svi/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt5svi", "created":
        1638374915.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmu6abk", "id": "hmu6abk", "parent_id":
        "t1_hmt5svi", "depth": 1, "children": ["hmu6abk"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt8gl5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**jq:**\n\npart1:\n\n    jq -s ''[.,.[1:]+[0]] | transpose
        | map(select(.[1]-.[0] &gt; 0)) | length'' &lt; input.txt\n\npart2:\n\n    jq
        -s ''[., .[3:]+[0,0,0]] | transpose | map(select(.[1]-.[0] &gt; 0)) | length''
        &lt; input.txt", "awarders": [], "downs": 0, "author_flair_css_class": null,
        "name": "t1_hmt8gl5", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;jq:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;part1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;jq
        -s &amp;#39;[.,.[1:]+[0]] | transpose | map(select(.[1]-.[0] &amp;gt; 0))
        | length&amp;#39; &amp;lt; input.txt\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;jq
        -s &amp;#39;[., .[3:]+[0,0,0]] | transpose | map(select(.[1]-.[0] &amp;gt;
        0)) | length&amp;#39; &amp;lt; input.txt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt8gl5/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638375987.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638375987.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtast6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "digitalacid",
        "can_mod_post": false, "created_utc": 1638376913.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_6np0u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Kotlin**\n\n    val input = getInput(\"day1\").lines().filterNot { it.isEmpty()
        }.map { it.toInt() }\n    \n    fun part1() = input.windowed(2).count { it.get(1)
        &gt; it.get(0) }\n    \n    fun part2() = input.windowed(3).map { it.sum()
        }.windowed(2).count { it.get(1) &gt; it.get(0) }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val
        input = getInput(&amp;quot;day1&amp;quot;).lines().filterNot { it.isEmpty()
        }.map { it.toInt() }\n\nfun part1() = input.windowed(2).count { it.get(1)
        &amp;gt; it.get(0) }\n\nfun part2() = input.windowed(3).map { it.sum() }.windowed(2).count
        { it.get(1) &amp;gt; it.get(0) }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtast6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtast6", "created":
        1638376913.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmte69a",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "lukeredpath",
        "can_mod_post": false, "created_utc": 1638378244.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_1uqu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My first AoC!\n\nSwift: [https://github.com/lukeredpath/AdventOfCode2021/blob/main/Sources/AdventOfCode2021/01.swift](https://github.com/lukeredpath/AdventOfCode2021/blob/main/Sources/AdventOfCode2021/01.swift)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My first AoC!&lt;/p&gt;\n\n&lt;p&gt;Swift:
        &lt;a href=\"https://github.com/lukeredpath/AdventOfCode2021/blob/main/Sources/AdventOfCode2021/01.swift\"&gt;https://github.com/lukeredpath/AdventOfCode2021/blob/main/Sources/AdventOfCode2021/01.swift&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmte69a/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmte69a", "created":
        1638378244.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmtzy81", "id": "hmtzy81", "parent_id":
        "t1_hmte69a", "depth": 1, "children": ["hmtzy81"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638387489.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtitr8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "spaceLem",
        "can_mod_post": false, "created_utc": 1638380076.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3a2dr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using R:\n\n    # Day 1, part 1  \n    x &lt;- read.table(\"input1.txt\")$V1\n    print(sum(diff(x)
        &gt; 0))\n    \n    # Day 1, part 2  \n    xf &lt;- filter(x, rep(1, 3), sides
        = 2)\n    print(sum(diff(xf) &gt; 0, na.rm = TRUE))\n\nUsing Julia:\n\n    #
        Day 1, part 1  \n    using DelimitedFiles\n    x = vec(readdlm(\"input1.txt\",
        Int))\n    sum(diff(x) .&gt; 0)\n    \n    # Day 1, part 2  \n    xf = @.
        x[1:end-2] + x[2:end-1] + x[3:end]\n    sum(diff(xf) .&gt; 0)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Using R:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Day 1, part 1  \nx &amp;lt;- read.table(&amp;quot;input1.txt&amp;quot;)$V1\nprint(sum(diff(x)
        &amp;gt; 0))\n\n# Day 1, part 2  \nxf &amp;lt;- filter(x, rep(1, 3), sides
        = 2)\nprint(sum(diff(xf) &amp;gt; 0, na.rm = TRUE))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Using
        Julia:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Day 1, part 1  \nusing DelimitedFiles\nx
        = vec(readdlm(&amp;quot;input1.txt&amp;quot;, Int))\nsum(diff(x) .&amp;gt;
        0)\n\n# Day 1, part 2  \nxf = @. x[1:end-2] + x[2:end-1] + x[3:end]\nsum(diff(xf)
        .&amp;gt; 0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtitr8/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmtitr8", "created": 1638380076.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 8, "name":
        "t1_hmva5hn", "id": "hmva5hn", "parent_id": "t1_hmtitr8", "depth": 1, "children":
        ["hmva5hn", "hmtzivp"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmtiwbk", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "kratsg", "can_mod_post": false, "created_utc":
        1638380105.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 5,
        "author_fullname": "t2_672vm", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Python. Had an initial implementation
        that used an accumulator, but then realized one does not really need to do
        any summing here, just comparison of a sliding/rolling window.\n\n    def
        process_input(data):\n        return list(map(int, data.split()))\n    \n    def
        window(sequence, size=2):\n        it = iter(sequence)\n        result = [next(it)
        for _ in range(size)]\n        if len(result) == size:\n            yield
        result\n        for element in it:\n            result = result[1:] + [element]\n            yield
        result\n    \n    def part1(sequence):\n        return sum(map(lambda x: x[-1]
        &gt; x[0], window(sequence, size=2)))\n    \n    def part2(sequence):\n        return
        sum(map(lambda x: x[-1] &gt; x[0], window(sequence, size=6)))\n    \n    if
        __name__ == \"__main__\":\n        from aocd.models import Puzzle\n    \n        test_vals
        = process_input(\n            \"\"\"199\n    200\n    208\n    210\n    200\n    207\n    240\n    269\n    260\n    263\"\"\"\n        )\n    \n    \n        assert
        part1(test_vals) == 7\n    \n        puz = Puzzle(2021, 1)\n    \n        numbers
        = list(map(int, puz.input_data.split()))\n    \n        puz.answer_a = part1(numbers)\n        print(f\"Part
        1: {puz.answer_a}\")\n    \n    \n        assert part2(test_vals) == 5\n    \n        puz.answer_b
        = part2(numbers)\n        print(f\"Part 2: {puz.answer_b}\")", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python. Had an initial implementation that
        used an accumulator, but then realized one does not really need to do any
        summing here, just comparison of a sliding/rolling window.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        process_input(data):\n    return list(map(int, data.split()))\n\ndef window(sequence,
        size=2):\n    it = iter(sequence)\n    result = [next(it) for _ in range(size)]\n    if
        len(result) == size:\n        yield result\n    for element in it:\n        result
        = result[1:] + [element]\n        yield result\n\ndef part1(sequence):\n    return
        sum(map(lambda x: x[-1] &amp;gt; x[0], window(sequence, size=2)))\n\ndef part2(sequence):\n    return
        sum(map(lambda x: x[-1] &amp;gt; x[0], window(sequence, size=6)))\n\nif __name__
        == &amp;quot;__main__&amp;quot;:\n    from aocd.models import Puzzle\n\n    test_vals
        = process_input(\n        &amp;quot;&amp;quot;&amp;quot;199\n200\n208\n210\n200\n207\n240\n269\n260\n263&amp;quot;&amp;quot;&amp;quot;\n    )\n\n\n    assert
        part1(test_vals) == 7\n\n    puz = Puzzle(2021, 1)\n\n    numbers = list(map(int,
        puz.input_data.split()))\n\n    puz.answer_a = part1(numbers)\n    print(f&amp;quot;Part
        1: {puz.answer_a}&amp;quot;)\n\n\n    assert part2(test_vals) == 5\n\n    puz.answer_b
        = part2(numbers)\n    print(f&amp;quot;Part 2: {puz.answer_b}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtiwbk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtiwbk", "created":
        1638380105.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtml6b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Biggergig",
        "can_mod_post": false, "created_utc": 1638381525.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_oem7r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Part 1 in Pyth:\n\n    V.Q=+Z&gt;NT=TN)Z", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Part 1 in Pyth:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;V.Q=+Z&amp;gt;NT=TN)Z\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtml6b/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtml6b", "created":
        1638381525.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtnk5b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "CivicNincompoop",
        "can_mod_post": false, "created_utc": 1638381902.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_8budv87f", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3.\n\n    def part1(numbers):\n        return sum([x &lt; y for x,
        y in zip(numbers, numbers[1:])])\n    \n    \n    def part2(numbers):\n        return
        [x+y+z for x, y, z in zip(numbers, numbers[1:], numbers[2:])]\n    \n    \n    def
        main():\n        with open(f''../data/day1.txt'', ''r'') as f:\n            numbers
        = [int(s) for s in f.read().splitlines()]\n    \n        print(f\"Part1: {part1(numbers)}\")\n        print(f\"Part2:
        {part1(part2(numbers))}\")", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        part1(numbers):\n    return sum([x &amp;lt; y for x, y in zip(numbers, numbers[1:])])\n\n\ndef
        part2(numbers):\n    return [x+y+z for x, y, z in zip(numbers, numbers[1:],
        numbers[2:])]\n\n\ndef main():\n    with open(f&amp;#39;../data/day1.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as f:\n        numbers = [int(s) for s in f.read().splitlines()]\n\n    print(f&amp;quot;Part1:
        {part1(numbers)}&amp;quot;)\n    print(f&amp;quot;Part2: {part1(part2(numbers))}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtnk5b/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtnk5b", "created":
        1638381902.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmuk9hq", "id": "hmuk9hq", "parent_id":
        "t1_hmtnk5b", "depth": 1, "children": ["hmuk9hq"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638396564.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtnvwp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "3j0hn",
        "can_mod_post": false, "created_utc": 1638382029.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_4vrr5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Maple**\n\nI did a solution in Maple [https://en.wikipedia.org/wiki/Maple\\_(software)](https://en.wikipedia.org/wiki/Maple_(software))\n\n**edit:**  here''s
        a nice small, fast solution that uses lexical scoping:\n\n    answer1:=rtable_scanblock(input,[],\n        (v,i,d)-&gt;ifelse(i[]&lt;2,0,ifelse(v&gt;input[i[]-1],
        d+1, d)),-1);\n\n    answer2:=rtable_scanblock(input,[],\n        (v,i,d)-&gt;ifelse(i[]&lt;4,0,ifelse(v&gt;input[i[]-3],
        d+1, d)),-1);\n\n**Old solution**:\n\nThere are smaller solutions, but this
        one is O(1) space. ''input'' is a 1 dimensional Array of the problem input,
        I just pasted it into a Maple worksheet. The cryptic but powerful rtable\\_scanblock
        command in Maple allows extremely efficient processing of Arrays (\"rectangular
        tables\"). Here I make a  scan that increments a count ''d\\[2\\]'' if an
        entry ''v'' is greater than the previous value which is stored in ''d\\[1\\]''.\n\n    scan
        := (v,d) -&gt; ifelse(d[2]&lt;0, [v, 0],\n                                    [v,
        ifelse(v&lt;=d[1], d[2], d[2]+1)] );\n    answer1 := rtable_scanblock(input,
        [], ''noindex'', scan, [-1, -1])[2];\n\nFor the second part, I realized I
        could generalize the scan from the first part to do windowed scans of arbitrary
        width and use one scan procedure for both parts, ''d\\[1\\]'' now stores a
        list of w previous values\n\n    scanw := (v,d,w) -&gt; ifelse(nops(d[1])&lt;w,\n                               [[d[1][],v],
        0],\n                               [[d[1][2..w][], v],\n                               ifelse(v&lt;=d[2][1],
        d[2], d[2]+1)]\n                      );\n    answer1 := rtable_scanblock(input,
        [], ''noindex'', rcurry(scanw,1) [[], 0])[2];\n    answer2 := rtable_scanblock(input,
        [], ''noindex'', rcurry(scanw,3), [[], 0])[2];\n\nThis is a bit of a garbage-y
        solution since a new list is created at every entry, but they are small lists
        and get collected quickly.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Maple&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        did a solution in Maple &lt;a href=\"https://en.wikipedia.org/wiki/Maple_(software\"&gt;https://en.wikipedia.org/wiki/Maple_(software)&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;edit:&lt;/strong&gt;  here&amp;#39;s
        a nice small, fast solution that uses lexical scoping:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;answer1:=rtable_scanblock(input,[],\n    (v,i,d)-&amp;gt;ifelse(i[]&amp;lt;2,0,ifelse(v&amp;gt;input[i[]-1],
        d+1, d)),-1);\n\nanswer2:=rtable_scanblock(input,[],\n    (v,i,d)-&amp;gt;ifelse(i[]&amp;lt;4,0,ifelse(v&amp;gt;input[i[]-3],
        d+1, d)),-1);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Old solution&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;There
        are smaller solutions, but this one is O(1) space. &amp;#39;input&amp;#39;
        is a 1 dimensional Array of the problem input, I just pasted it into a Maple
        worksheet. The cryptic but powerful rtable_scanblock command in Maple allows
        extremely efficient processing of Arrays (&amp;quot;rectangular tables&amp;quot;).
        Here I make a  scan that increments a count &amp;#39;d[2]&amp;#39; if an entry
        &amp;#39;v&amp;#39; is greater than the previous value which is stored in
        &amp;#39;d[1]&amp;#39;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;scan := (v,d)
        -&amp;gt; ifelse(d[2]&amp;lt;0, [v, 0],\n                                [v,
        ifelse(v&amp;lt;=d[1], d[2], d[2]+1)] );\nanswer1 := rtable_scanblock(input,
        [], &amp;#39;noindex&amp;#39;, scan, [-1, -1])[2];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For
        the second part, I realized I could generalize the scan from the first part
        to do windowed scans of arbitrary width and use one scan procedure for both
        parts, &amp;#39;d[1]&amp;#39; now stores a list of w previous values&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;scanw
        := (v,d,w) -&amp;gt; ifelse(nops(d[1])&amp;lt;w,\n                           [[d[1][],v],
        0],\n                           [[d[1][2..w][], v],\n                           ifelse(v&amp;lt;=d[2][1],
        d[2], d[2]+1)]\n                  );\nanswer1 := rtable_scanblock(input, [],
        &amp;#39;noindex&amp;#39;, rcurry(scanw,1) [[], 0])[2];\nanswer2 := rtable_scanblock(input,
        [], &amp;#39;noindex&amp;#39;, rcurry(scanw,3), [[], 0])[2];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This
        is a bit of a garbage-y solution since a new list is created at every entry,
        but they are small lists and get collected quickly.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtnvwp/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtnvwp", "created":
        1638382029.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638383044.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtpagm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pbohun",
        "can_mod_post": false, "created_utc": 1638382568.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_o805d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Common Lisp\n\n    (defun read-numbers (filename)\n      (with-open-file
        (f filename :direction :input)\n        (loop for num = (read f nil) while
        num collect num)))\n    \n    ;; part 1\n    (defun increasing-pairs (nums)\n      (loop
        for (a b) on nums while b count (&lt; a b)))\n    \n    ;; part 2\n    (defun
        increasing-threes (nums)\n      (loop for (a b c d) on nums while d count
        (&lt; (+ a b c) (+ b c d))))\n    \n    (time (format t \"part 1:~a~%\" (increasing-pairs
        (read-numbers \"../inputs/01.txt\"))))\n    (time (format t \"part 2:~a~%\"
        (increasing-threes (read-numbers \"../inputs/01.txt\"))))\n\nYou can find
        the repo for it [here](https://github.com/pbohun/aoc-2021).", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Common Lisp&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        read-numbers (filename)\n  (with-open-file (f filename :direction :input)\n    (loop
        for num = (read f nil) while num collect num)))\n\n;; part 1\n(defun increasing-pairs
        (nums)\n  (loop for (a b) on nums while b count (&amp;lt; a b)))\n\n;; part
        2\n(defun increasing-threes (nums)\n  (loop for (a b c d) on nums while d
        count (&amp;lt; (+ a b c) (+ b c d))))\n\n(time (format t &amp;quot;part 1:~a~%&amp;quot;
        (increasing-pairs (read-numbers &amp;quot;../inputs/01.txt&amp;quot;))))\n(time
        (format t &amp;quot;part 2:~a~%&amp;quot; (increasing-threes (read-numbers
        &amp;quot;../inputs/01.txt&amp;quot;))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You
        can find the repo for it &lt;a href=\"https://github.com/pbohun/aoc-2021\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtpagm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtpagm", "created":
        1638382568.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638387903.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtxmw2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Repulsive_Novel2927",
        "can_mod_post": false, "created_utc": 1638385785.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_3ge1h00e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Clojure\n\n    (defn parse-input\n     [filename parseFunc] \n     (with-open
        [rdr (io/reader filename)] \n      (-&gt;&gt; (line-seq rdr) \n           (map
        parseFunc) \n           (doall))))\n    \n    (defn part1 \n     [input] \n      (-&gt;&gt;
        (map #(vector %1 %2) input (rest input)) \n           (filter #(&gt; (second
        %) (first %))) \n           count))\n    \n    (defn part2 \n     [input]
        \n      (-&gt;&gt; (map #(+ %1 %3 %2) input (drop 1 input) (drop 2 input))
        \n           part1))\n    \n    (defn -main \n     [&amp; args] \n     (let
        [data (parse-input \"data.txt\" #(Integer/parseInt %))] \n      {:part1 (part1
        data) :part2 (part2 data)}))\n    \n    (-main)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Clojure&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn
        parse-input\n [filename parseFunc] \n (with-open [rdr (io/reader filename)]
        \n  (-&amp;gt;&amp;gt; (line-seq rdr) \n       (map parseFunc) \n       (doall))))\n\n(defn
        part1 \n [input] \n  (-&amp;gt;&amp;gt; (map #(vector %1 %2) input (rest input))
        \n       (filter #(&amp;gt; (second %) (first %))) \n       count))\n\n(defn
        part2 \n [input] \n  (-&amp;gt;&amp;gt; (map #(+ %1 %3 %2) input (drop 1 input)
        (drop 2 input)) \n       part1))\n\n(defn -main \n [&amp;amp; args] \n (let
        [data (parse-input &amp;quot;data.txt&amp;quot; #(Integer/parseInt %))] \n  {:part1
        (part1 data) :part2 (part2 data)}))\n\n(-main)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtxmw2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtxmw2", "created":
        1638385785.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmtyza1", "id": "hmtyza1", "parent_id":
        "t1_hmtxmw2", "depth": 1, "children": ["hmtyza1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu6oh6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "0x5ubt13",
        "can_mod_post": false, "created_utc": 1638389269.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_h41x0t7s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python\nMy definitive one-liners version, no imports.\n\n```py\ndef get_input():\n    with
        open(\"./day_1/day_1_input.txt\", \"r\") as f:\n        return [int(line.strip())
        for line in f]\n\ndef part_1(depth):\n    return sum([1 for i in range(len(depth))
        if depth[i] &gt; depth[i-1]])\n\ndef part_2(depth):\n    return [(depth[i]
        + depth[i+1] + depth[i+2]) for i in range(len(depth) - 2)]\n\nprint(f''Part
        1 = {part_1(get_input())}. Part 2 = part_1(part_2(get_input()))}.'')\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;My
        definitive one-liners version, no imports.&lt;/p&gt;\n\n&lt;p&gt;```py\ndef
        get_input():\n    with open(&amp;quot;./day_1/day_1_input.txt&amp;quot;, &amp;quot;r&amp;quot;)
        as f:\n        return [int(line.strip()) for line in f]&lt;/p&gt;\n\n&lt;p&gt;def
        part_1(depth):\n    return sum([1 for i in range(len(depth)) if depth[i] &amp;gt;
        depth[i-1]])&lt;/p&gt;\n\n&lt;p&gt;def part_2(depth):\n    return [(depth[i]
        + depth[i+1] + depth[i+2]) for i in range(len(depth) - 2)]&lt;/p&gt;\n\n&lt;p&gt;print(f&amp;#39;Part
        1 = {part_1(get_input())}. Part 2 = part_1(part_2(get_input()))}.&amp;#39;)\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu6oh6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu6oh6", "created":
        1638389269.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmvuekm", "id": "hmvuekm", "parent_id":
        "t1_hmu6oh6", "depth": 1, "children": ["hmvuekm"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmufl06",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "AvshalomHeironymous",
        "can_mod_post": false, "created_utc": 1638392588.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_yiz5m", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "In (my own somewhat idiosyncratic prolog style).\n\n\n    %use these for
        Scryer Prolog\n    :- use_module(library(lists)).\n    :- use_module(library(pio)).\n    :-
        use_module(library(dcgs)).\n    :- use_module(library(format)).\n    %use
        these for SWI\n    %:- use_module(library(apply)).\n    %:- use_module(library(lists)).\n    %:-
        use_module(library(pio)).\n    \n    lines([])     --&gt; call(eos), !.\n    lines([L|Ls])
        --&gt; line(L), lines(Ls).\n    \n    line([])     --&gt; ( \"\\n\" | call(eos)
        ), !.\n    line([C|Cs]) --&gt; [C], line(Cs).\n    \n    eos([], []).\n    \n    bool_to_binary(Goal,1):-\n         call(Goal).\n    bool_to_binary(_,0).\n    \n    windowed_sum([A,B,C|[]],[Acc]):-\n         Acc
        is A + B + C.\n    windowed_sum([A,B,C|T],[Sum|Acc]) :-\n         Sum is A
        + B + C,\n         windowed_sum([B,C|T],Acc).\n\n     drops([A, B|[]], [Acc])
        :-\n         bool_to_binary(&lt;(A,B),Acc).\n    drops([A,B|T], [X|Acc]) :-\n         bool_to_binary(&lt;(A,B),X),\n         drops([B|T],Acc).\n\n    day1
        :-\n         phrase_from_file(lines(I),''inputd1''),\n         %change this
        to number_codes on swi\n         maplist(number_chars,M,I),\n         drops(M,D1),\n         sum_list(D1,S1),\n         windowed_sum(M,M3),\n         drops(M3,D3),\n         sum_list(D3,S3),\n       \n         format(\"Drops:
        ~d, Windowed Drops: ~d\",[S1, S3]).\n\nIt''s a bit verbose because Prolog
        lacks a lot of array/list munging utilities and predefined dcg utilities for
        files.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In
        (my own somewhat idiosyncratic prolog style).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;%use
        these for Scryer Prolog\n:- use_module(library(lists)).\n:- use_module(library(pio)).\n:-
        use_module(library(dcgs)).\n:- use_module(library(format)).\n%use these for
        SWI\n%:- use_module(library(apply)).\n%:- use_module(library(lists)).\n%:-
        use_module(library(pio)).\n\nlines([])     --&amp;gt; call(eos), !.\nlines([L|Ls])
        --&amp;gt; line(L), lines(Ls).\n\nline([])     --&amp;gt; ( &amp;quot;\\n&amp;quot;
        | call(eos) ), !.\nline([C|Cs]) --&amp;gt; [C], line(Cs).\n\neos([], []).\n\nbool_to_binary(Goal,1):-\n     call(Goal).\nbool_to_binary(_,0).\n\nwindowed_sum([A,B,C|[]],[Acc]):-\n     Acc
        is A + B + C.\nwindowed_sum([A,B,C|T],[Sum|Acc]) :-\n     Sum is A + B + C,\n     windowed_sum([B,C|T],Acc).\n\n
        drops([A, B|[]], [Acc]) :-\n     bool_to_binary(&amp;lt;(A,B),Acc).\ndrops([A,B|T],
        [X|Acc]) :-\n     bool_to_binary(&amp;lt;(A,B),X),\n     drops([B|T],Acc).\n\nday1
        :-\n     phrase_from_file(lines(I),&amp;#39;inputd1&amp;#39;),\n     %change
        this to number_codes on swi\n     maplist(number_chars,M,I),\n     drops(M,D1),\n     sum_list(D1,S1),\n     windowed_sum(M,M3),\n     drops(M3,D3),\n     sum_list(D3,S3),\n\n     format(&amp;quot;Drops:
        ~d, Windowed Drops: ~d&amp;quot;,[S1, S3]).\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It&amp;#39;s
        a bit verbose because Prolog lacks a lot of array/list munging utilities and
        predefined dcg utilities for files.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmufl06/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmufl06", "created": 1638392588.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638423311.0, "mod_reason_by": null, "banned_by": null, "ups": 4,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmugx2v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "zebalu",
        "can_mod_post": false, "created_utc": 1638393094.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_1ze3r67o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hey! This is my Java solution: [https://github.com/zebalu/advent-of-code-2021/blob/master/src/main/java/io/github/zebalu/aoc2021/Day01.java](https://github.com/zebalu/advent-of-code-2021/blob/master/src/main/java/io/github/zebalu/aoc2021/Day01.java)\n\nthe
        relevant part:\n\n    private static long countIncrease(List&lt;Integer&gt;
        list, int window) {\n        return IntStream.range(window, list.size()).filter(i
        -&gt; list.get(i) &gt; list.get(i - window)).count();\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Hey! This is my Java solution: &lt;a href=\"https://github.com/zebalu/advent-of-code-2021/blob/master/src/main/java/io/github/zebalu/aoc2021/Day01.java\"&gt;https://github.com/zebalu/advent-of-code-2021/blob/master/src/main/java/io/github/zebalu/aoc2021/Day01.java&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;the
        relevant part:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private static long countIncrease(List&amp;lt;Integer&amp;gt;
        list, int window) {\n    return IntStream.range(window, list.size()).filter(i
        -&amp;gt; list.get(i) &amp;gt; list.get(i - window)).count();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmugx2v/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmugx2v", "created":
        1638393094.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmuqv9h", "id": "hmuqv9h", "parent_id":
        "t1_hmugx2v", "depth": 1, "children": ["hmuqv9h"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638394444.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuj8f3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Video-Walkthrough here: [https://youtu.be/vkhz\\_rGlcSc](https://youtu.be/vkhz_rGlcSc)I
        also stream AoC live: [https://www.twitch.tv/rawlexander](https://www.twitch.tv/rawlexander)\n\nIn
        R:\n\n    count_increases &lt;- function(x, n) {\n        ln &lt;- length(x)
        + 1\n        x &lt;- rowSums(matrix(x, ln, n)[-ln, ] |&gt; \n            suppressWarnings()
        |&gt; as.matrix())\n        sum(diff(x) &gt; 0)\n    }\n    \n    d &lt;-
        as.integer(readLines(\"data/aoc_1\"))\n    count_increases(d, 1)\n    count_increases(d,
        3)\n\nIn Julia:\n\n    function count_increases(x)\n        sum(diff(x) .&gt;
        0)\n    end\n    \n    function sum_window(x, n) \n        n == 1 &amp;&amp;
        return count_increases(x)\n    \n        ln = length(x)\n        out = zeros(Int,
        ln)\n        for i in 1:ln - n + 1\n            out[i] = sum(x[i:(i + n -
        1)])\n        end\n        return count_increases(out)\n    end\n    \n    data
        = parse.(Int, readlines(\"data/aoc_1\"))\n    sum_window(data, 1)\n    sum_window(data,
        3)", "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmuj8f3",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Video-Walkthrough
        here: &lt;a href=\"https://youtu.be/vkhz_rGlcSc\"&gt;https://youtu.be/vkhz_rGlcSc&lt;/a&gt;I
        also stream AoC live: &lt;a href=\"https://www.twitch.tv/rawlexander\"&gt;https://www.twitch.tv/rawlexander&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;In
        R:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;count_increases &amp;lt;- function(x,
        n) {\n    ln &amp;lt;- length(x) + 1\n    x &amp;lt;- rowSums(matrix(x, ln,
        n)[-ln, ] |&amp;gt; \n        suppressWarnings() |&amp;gt; as.matrix())\n    sum(diff(x)
        &amp;gt; 0)\n}\n\nd &amp;lt;- as.integer(readLines(&amp;quot;data/aoc_1&amp;quot;))\ncount_increases(d,
        1)\ncount_increases(d, 3)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In Julia:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        count_increases(x)\n    sum(diff(x) .&amp;gt; 0)\nend\n\nfunction sum_window(x,
        n) \n    n == 1 &amp;amp;&amp;amp; return count_increases(x)\n\n    ln = length(x)\n    out
        = zeros(Int, ln)\n    for i in 1:ln - n + 1\n        out[i] = sum(x[i:(i +
        n - 1)])\n    end\n    return count_increases(out)\nend\n\ndata = parse.(Int,
        readlines(&amp;quot;data/aoc_1&amp;quot;))\nsum_window(data, 1)\nsum_window(data,
        3)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuj8f3/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638393969.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638393969.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmuobbx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "psqueak",
        "can_mod_post": false, "created_utc": 1638395901.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_fmtobf6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Common Lisp. I haven''t touched CL since AoC last year, so I''m gonna have
        to get back up to speed :/\n\n    (defun count-increases (ls)\n      (let
        ((vector (make-array (length ls) :initial-contents ls)))\n        (loop for
        i from 1 below (array-total-size vector)\n              counting (&gt; (aref
        vector i) (aref vector (1- i))))))\n\n    (defun solve-1a ()\n      (-&lt;&gt;
        (uiop:read-file-lines \"../inputs/01.txt\")\n        (mapcar #''parse-integer
        &lt;&gt;)\n        (count-increases &lt;&gt;)))\n\n    (defun solve-1b ()\n      (-&lt;&gt;
        (uiop:read-file-lines \"../inputs/01.txt\")\n        (mapcar #''parse-integer
        &lt;&gt;)\n        (list &lt;&gt; (cdr &lt;&gt;) (cddr &lt;&gt;))\n        (apply
        #''mapcar #''+ &lt;&gt;)\n        (count-increases &lt;&gt;)))\n\nTotally
        forgot about the `(loop for (x y z) on ...)` trick. Also missed the window-endpoint
        trick algorithm haha", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Common
        Lisp. I haven&amp;#39;t touched CL since AoC last year, so I&amp;#39;m gonna
        have to get back up to speed :/&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        count-increases (ls)\n  (let ((vector (make-array (length ls) :initial-contents
        ls)))\n    (loop for i from 1 below (array-total-size vector)\n          counting
        (&amp;gt; (aref vector i) (aref vector (1- i))))))\n\n(defun solve-1a ()\n  (-&amp;lt;&amp;gt;
        (uiop:read-file-lines &amp;quot;../inputs/01.txt&amp;quot;)\n    (mapcar #&amp;#39;parse-integer
        &amp;lt;&amp;gt;)\n    (count-increases &amp;lt;&amp;gt;)))\n\n(defun solve-1b
        ()\n  (-&amp;lt;&amp;gt; (uiop:read-file-lines &amp;quot;../inputs/01.txt&amp;quot;)\n    (mapcar
        #&amp;#39;parse-integer &amp;lt;&amp;gt;)\n    (list &amp;lt;&amp;gt; (cdr
        &amp;lt;&amp;gt;) (cddr &amp;lt;&amp;gt;))\n    (apply #&amp;#39;mapcar #&amp;#39;+
        &amp;lt;&amp;gt;)\n    (count-increases &amp;lt;&amp;gt;)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Totally
        forgot about the &lt;code&gt;(loop for (x y z) on ...)&lt;/code&gt; trick.
        Also missed the window-endpoint trick algorithm haha&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuobbx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuobbx", "created":
        1638395901.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmuxdhz", "id": "hmuxdhz", "parent_id":
        "t1_hmuobbx", "depth": 1, "children": ["hmuxdhz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmuoxly",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "vbe-elvis",
        "can_mod_post": false, "created_utc": 1638396140.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_bz6dyxth", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in Kotlin, works for both parts:\n\n    fun countIncreases(data:
        List&lt;Int&gt;, window:Int) =\r\n        (window until data.size).count {
        i -&gt; data[i - window] &lt; data[i] }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My solution in Kotlin, works for both parts:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun
        countIncreases(data: List&amp;lt;Int&amp;gt;, window:Int) =\n    (window until
        data.size).count { i -&amp;gt; data[i - window] &amp;lt; data[i] }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuoxly/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuoxly", "created":
        1638396140.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmv6zuh", "id": "hmv6zuh", "parent_id":
        "t1_hmuoxly", "depth": 1, "children": ["hmv6zuh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmutxld",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "AverageBeef",
        "can_mod_post": false, "created_utc": 1638398124.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_2pe3go5p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First time doing one of these, I''m a very novice programmer, but [here''s](https://github.com/Garageman2/AdventOfCode/blob/3f7acd397e70119d3a570754f50c27b3cf8b8257/AoC_CPP/Day1.cpp)
        the important part of my C++ solution", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;First time doing one of these, I&amp;#39;m a very
        novice programmer, but &lt;a href=\"https://github.com/Garageman2/AdventOfCode/blob/3f7acd397e70119d3a570754f50c27b3cf8b8257/AoC_CPP/Day1.cpp\"&gt;here&amp;#39;s&lt;/a&gt;
        the important part of my C++ solution&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmutxld/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmutxld", "created": 1638398124.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_hmve5mp", "id": "hmve5mp", "parent_id": "t1_hmutxld", "depth": 1, "children":
        ["hmve5mp"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638556771.0,
        "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id":
        "t3_r66vow", "author_flair_template_id": null, "likes": null, "replies": "",
        "user_reports": [], "saved": false, "id": "hmuz3su", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_r66vow", "score": 3, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Google Sheets\n\nPart
        1:\n\n    =sum(index(ifna(n(A2:A&gt;A1:A))))\n\nPart 2:\n\n    =sum(index(ifna(n(A4:A&gt;A1:A))))",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmuz3su",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Google
        Sheets&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=sum(index(ifna(n(A2:A&amp;gt;A1:A))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=sum(index(ifna(n(A4:A&amp;gt;A1:A))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuz3su/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638400301.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638400301.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmv0b7j", "id": "hmv0b7j", "parent_id":
        "t1_hmuz3su", "depth": 1, "children": ["hmv0b7j"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv6c3a",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "sotsoguk",
        "can_mod_post": false, "created_utc": 1638403555.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_mv3g3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C++\n\nAlthough my main language will be Python this year, I try to do
        some other languages from time to time and learn something new. Here is my
        c++ solution.\n\n    // insert MAX_INTS at the beginning to use the same iterator\n    vector&lt;int&gt;
        input(2, INT_MAX);\n    transform(input_lines.begin(), input_lines.end(),
        \n    back_inserter(input),\n              [](const string &amp;s)\n              {
        return stoi(s); });\n     auto it = input.begin() + 3;\n         int part1(0),
        part2(0);\n      for (; it != input.end(); it++)\n      {\n          part2
        += (*it &gt; *(it - 3) ? 1 : 0);\n          part1 += (*it &gt; *(it - 1) ?
        1 : 0);\n     }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C++&lt;/h1&gt;\n\n&lt;p&gt;Although
        my main language will be Python this year, I try to do some other languages
        from time to time and learn something new. Here is my c++ solution.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        insert MAX_INTS at the beginning to use the same iterator\nvector&amp;lt;int&amp;gt;
        input(2, INT_MAX);\ntransform(input_lines.begin(), input_lines.end(), \nback_inserter(input),\n          [](const
        string &amp;amp;s)\n          { return stoi(s); });\n auto it = input.begin()
        + 3;\n     int part1(0), part2(0);\n  for (; it != input.end(); it++)\n  {\n      part2
        += (*it &amp;gt; *(it - 3) ? 1 : 0);\n      part1 += (*it &amp;gt; *(it -
        1) ? 1 : 0);\n }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv6c3a/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmv6c3a", "created": 1638403555.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1207, "name":
        "t1_hmv9qtx", "id": "hmv9qtx", "parent_id": "t3_r66vow", "depth": 0, "children":
        ["hmv9qtx", "hmvam9r", "hmvmcfk", "hmvice0", "hmvaoz0", "hmwtvis", "hmwgxfw",
        "hmxeos6", "hmy9wj9", "hmvdgju", "hms51e4", "hmx9ay3", "hmx2aj6", "hmyb7om",
        "hmrf05u", "hmrgtwj", "hmrkats", "hmrj5t0", "hmwl2ds", "hmrh9y9", "hms7q76",
        "hmrij5r", "hmreo55", "hmrfro5", "hmrhfrf", "hmrw9fx", "hmri3iq", "hmrgwdu",
        "hmroz64", "hmrkcyf", "hmrhgz4", "hmrr3my", "hmrpq3k", "hmrtk7y", "hmrgb09",
        "hmrtqlt", "hmsvdty", "hmroyew", "hms4fkz", "hmrjc73", "hmru1tr", "hmsku8e",
        "hmsu2jc", "hmrtb91", "hmskt4q", "hmrkn0z", "hmrgk3j", "hms4gwi", "hmrhtya",
        "hmsr2hm", "hmupwiu", "hms3wv7", "hmvcr0w", "hmsmm2x", "hms4yu6", "hmrhubd",
        "hmrlp54", "hms1l6z", "hmrwtvs", "hmrn3rv", "hmrupqc", "hmsndmx", "hmrpbj4",
        "hms5nfl", "hmrfv48", "hmrvf0v", "hmsa8oc", "hmrwt4h", "hms2fe6", "hmrgytd",
        "hmrz6ix", "hmsem50", "hmruc2k", "hmt9ekl", "hmu51yq", "hmrqz3w", "hmryvkc",
        "hmu09qs", "hmvao30", "hms5q48", "hmrynpr", "hmrua63", "hmrusos", "hmsjke6",
        "hmsqalo", "hmtlvmj", "hmxoenc", "hmy215d", "hmtp273", "hmuvaeh", "hmthspq",
        "hmvd5ko", "hmt2jgt", "hmtpt3b", "hmurfdk", "hmro017", "hmsgmlt", "hmupqo9",
        "hmrguh8", "hmsnu8g", "hmrlcda", "hmrk2jn", "hmujjqf", "hmvr6mx", "hmrg937",
        "hmrhdgc", "hmtsxep", "hmtose6", "hmwtk1w", "hmrjghk", "hmsniaj", "hmt0sca",
        "hmtvgc7", "hmrhvmq", "hmt7kjf", "hmsr3as", "hms2udb", "hmukpkv", "hmsuxfj",
        "hmtjo2f", "hmwkskt", "hmui302", "hmsomuy", "hmuyqf6", "hmrevqd", "hmrfpg5",
        "hmufugf", "hmwu69l", "hmsneo1", "hmuzllx", "hmrhr75", "hmrlidz", "hms1j6d",
        "hmsrg41", "hmtqwyn", "hmwzc9n", "hmtixd5", "hms0q3g", "hmsj72h", "hmrgty5",
        "hmswfp5", "hmrushh", "hmw3f07", "hms3qv5", "hmv23t1", "hmsj2yt", "hmsobf4",
        "hmvj1t2", "hmuhh4i", "hmwqv7g", "hmv3f9l", "hmrg6cr", "hmvjdt8", "hmrsif1",
        "hms8pj4", "hmum5va", "hms9zdc", "hmrmn6p", "hmrs1dg", "hmw3zoj", "hmrr4l8",
        "hmrj5v8", "hms2ee2", "hmt7cec", "hmsk25x", "hmsm2v3", "hmryepf", "hmu2rw9",
        "hmu5438", "hmt4xjf", "hmuaadx", "hmri5lq", "hmrfsij", "hmuatyn", "hmxn3xv",
        "hmtbcpy", "hmrtjc7", "hmxsojx", "hmur5u6", "hmse1bp", "hmtx4jg", "hmrf4te",
        "hmsr9et", "hmv1ch7", "hmrlffy", "hmweook", "hmuxfuh", "hmsrw4q", "hmrzl7z",
        "hmvpp3m", "hmrsklw", "hmsll5m", "hmrjd7f", "hmtil9k", "hmskbs6", "hmsc6zx",
        "hmru1rn", "hmuuqt2", "hmtb264", "hmryh40", "hmrl92g", "hmvzpzx", "hms0wwq",
        "hmrfk32", "hmuu0nz", "hmrf4pv", "hmxrx3s", "hmrtomh", "hmusk2z", "hmrjrhv",
        "hmrgey5", "hmsioan", "hmru0e5", "hmsrb47", "hmvp1xr", "hmsnokd", "hms4w5y",
        "hmwfe3o", "hmrf8rs", "hmwtvl7", "hms2tdh", "hmwxwzb", "hms8odm", "hmuy2yb",
        "hmu51kx", "hmtomhu", "hmy8v67", "hms4ewo", "hmu2a1h", "hmrt4yg", "hms009r",
        "hmyfdr9", "hmu4zel", "hmtteup", "hmuudfb", "hmrtaig", "hmvianz", "hmtqtlx",
        "hmt0fwv", "hmsnmhw", "hmx7741", "hmsogj4", "hmt2qvg", "hms2u4s", "hmtypln",
        "hmrel6r", "hmt5dgk", "hmvewiq", "hmtfl5k", "hmsvx7j", "hmsa0hn", "hms9kby",
        "hmva7zl", "hmtvyoj", "hmrtiig", "hmsrqka", "hmst5oy", "hmrfj4u", "hmrn5eh",
        "hmrh1r4", "hmv10v7", "hmrio89", "hms3twz", "hmscvvl", "hmuvltl", "hmrz22v",
        "hmtyhqw", "hmrino9", "hmu7lg6", "hmsmzua", "hmu2pgh", "hmrf59h", "hmrtnc5",
        "hmve44r", "hmttnxq", "hmubyyn", "hmt2d0z", "hmrhqsr", "hmtcewm", "hmrf92d",
        "hmsst3c", "hmrxcqk", "hmswer6", "hms6rw6", "hmtskg5", "hms1z0o", "hmt74ro",
        "hmreq4n", "hmuox3j", "hmukafq", "hmu4r0v", "hmsd95d", "hmvq4sq", "hmrh7ku",
        "hmrx7fx", "hms4lux", "hmtpgu7", "hmrydbs", "hmrgg3c", "hmssbuw", "hmsaolj",
        "hmrjmin", "hms1s6r", "hmrgfud", "hmu337d", "hmt27ga", "hms24ql", "hmrr3w3",
        "hmup3ay", "hmrh2vk", "hms21cb", "hmtcq1a", "hmrxsyi", "hmvxl2c", "hms98ik",
        "hms50ta", "hmrhdk2", "hms3qzs", "hmsf2pc", "hmsit0y", "hmsbmj1", "hmsvczl",
        "hmujlag", "hmtw3nw", "hmunt9t", "hmtfafr", "hms1fac", "hmrs7po", "hmsszew",
        "hms8ikj", "hmy90co", "hmuc4hm", "hmsr243", "hmt02z0", "hmtytou", "hmtn5cf",
        "hmwq120", "hmt5mu9", "hmwkw6o", "hmss6je", "hmw9ssu", "hmrz40u", "hms028u",
        "hmuvznj", "hmt4tjc", "hmwpkjo", "hmtzrre", "hmrtbjq", "hmwwi7l", "hmv7xhs",
        "hmuqjav", "hmtxaje", "hms8x4k", "hmul0m8", "hmrk087", "hmt9f7j", "hmto2mk",
        "hmt0ynh", "hms7gau", "hmu9yeq", "hmu297u", "hmv8bqt", "hmvd24s", "hms0m82",
        "hmrwqat", "hmrs8pi", "hms2it8", "hmvffrj", "hmse2jo", "hmssgwx", "hmuc4p0",
        "hmrf9ck", "hmvvm80", "hmw42an", "hmti8v3", "hmrzmu2", "hmuszg8", "hmtw0cl",
        "hmt7ejw", "hmuuxtj", "hmrg1kh", "hmv8xhi", "hmu2gx2", "hmtpxvo", "hmv7e6n",
        "hmrmjt8", "hms3lqj", "hmrs30t", "hmvae71", "hmsebbs", "hmrzrtr", "hmvg4o4",
        "hmrz2jn", "hmvy97q", "hmrfld2", "hmretnt", "hmxdpt3", "hmrkjxn", "hmt7y0e",
        "hmwtwoc", "hmu7i0g", "hmtp9ng", "hmsxnbq", "hmwegvt", "hmswb9a", "hmw4ek2",
        "hmwb2ra", "hmw21oo", "hmucq9b", "hmwdb3a", "hmvcobg", "hmw1jxb", "hmrf2g0",
        "hmwx4lt", "hms0omp", "hmrfuew", "hmshtm9", "hmvbdu3", "hmv06au", "hms6qq4",
        "hmusj18", "hmsr7zw", "hmuijjn", "hmua6gz", "hmy32s1", "hms92lp", "hmtqk3y",
        "hmvszqc", "hmtimr9", "hmwnrhk", "hmvoa64", "hmxa298", "hmvnyic", "hmrrbe6",
        "hmulg4v", "hmuxks0", "hms8upn", "hmurtrn", "hmrxxk9", "hmtpdh1", "hmy9ke6",
        "hmu172l", "hmuy7px", "hmvcmtf", "hmvn98k", "hmsr79d", "hmtouj5", "hmu2d91",
        "hmrfhj6", "hms9me8", "hmxer2i", "hmrf0gg", "hmteqky", "hmvwuer", "hmsthqs",
        "hmrhcqc", "hmvqe6x", "hmy5y2j", "hmwc3gl", "hms8x51", "hmuz7ba", "hmtf0lj",
        "hmy3con", "hmtlqdt", "hmrzgee", "hmuwc2v", "hmt3c9q", "hmtou21", "hmts3v2",
        "hmx4oh4", "hmxm0oa", "hmrf87m", "hmspb17", "hmupvsh", "hmrfvru", "hmuf6r8",
        "hmsw7qt", "hmt8pge", "hmrel8t", "hmtqurm", "hmxa4gk", "hmrhr14", "hmtublx",
        "hmrr8s5", "hmrks2m", "hmupg0c", "hmrmuci", "hmtkx5u", "hmuvxcd", "hmu9qut",
        "hmris2x", "hmy98ot", "hmxf61e", "hmwgacu", "hmt1dsj", "hmrklsj", "hmsi1lb",
        "hmurivu", "hmunovu", "hmw3kbw", "hmuemam", "hmvqsha", "hmum4io", "hmshy76",
        "hmu9x7q", "hmwg4mh", "hmsic35", "hmrt2sw", "hmrfr8r", "hms6jxx", "hmuqc8p",
        "hmxzdlr", "hmvd82d", "hmrf0j6", "hmwk3gr", "hmtbaw0", "hmul1w0", "hmso78b",
        "hmuu15c", "hmupha0", "hmumga1", "hmt833f", "hms8zqs", "hmrezlc", "hmu6yri",
        "hmreik6", "hmtnoc6", "hmsnt19", "hmvwd6n", "hmshxa7", "hmrn1qi", "hmtfxz8",
        "hms9kem", "hmsoygk", "hmvhiw7", "hmvwtzm", "hmriplw", "hmuu8ya", "hmuwdqz",
        "hmux6rf", "hmvjxdh", "hmwn65l", "hmt42bv", "hmw8zxm", "hmtckwf", "hmu41kj",
        "hmshy8w", "hmuwsn3", "hmubzlt", "hmx4u0j", "hmri0oz", "hmxgs6y", "hmvyzz7",
        "hms97z3", "hmt84zy", "hms455t", "hmubyyr", "hmry7u5", "hmriaqg", "hmubq5y",
        "hmvqboh", "hmx8h5l", "hmtl0p6", "hmvttxb", "hmu47y6", "hmso475", "hmsd2vf",
        "hms9w78", "hmunpx2", "hmrins1", "hmrruww", "hmul9ls", "hmx7ocb", "hmsmh1y",
        "hmsqyxj", "hmreons", "hmwxxf7", "hmut6fx", "hmvu8v1", "hms5s4x", "hmvo3y7",
        "hmrk31c", "hmu2ehy", "hmtou73", "hmss2k9", "hmx74kk", "hmveoia", "hmsdp0m",
        "hmvg97r", "hmtkjc8", "hmtl4l8", "hms0h5d", "hmrfa3v", "hmygsqt", "hmvh953",
        "hmunk6r", "hmrh3m6", "hmukph5", "hmtdkt1", "hmsumbu", "hmren52", "hmsvo2v",
        "hmu7mkh", "hmsqpii", "hmtith2", "hmt0d6b", "hmuxrtd", "hmsipx1", "hmuwikk",
        "hms0ovt", "hmtb5yc", "hms93us", "hmv395f", "hmrqozx", "hmsrgeu", "hmu7g9d",
        "hmtrv9z", "hmugkix"]}}], true]], [0, 12, "attr", "things"], [12, 13, "call",
        ["t1_hms52ki"]], [13, 14, "attr", "focus"], [14, 15, "call", []], [0, 16,
        "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr", "filter"],
        [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"], [20, 21,
        "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:16 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:17 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=vUWig3aeviqr4tSMfp; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:17 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmv9qtx,hmvam9r,hmvmcfk,hmvice0,hmvaoz0,hmwtvis,hmwgxfw,hmxeos6,hmy9wj9,hmvdgju,hms51e4,hmx9ay3,hmx2aj6,hmyb7om,hmrf05u,hmrgtwj,hmrkats,hmrj5t0,hmwl2ds,hmrh9y9,hms7q76,hmrij5r,hmreo55,hmrfro5,hmrhfrf,hmrw9fx,hmri3iq,hmrgwdu,hmroz64,hmrkcyf,hmrhgz4,hmrr3my,hmrpq3k,hmrtk7y,hmrgb09,hmrtqlt,hmsvdty,hmroyew,hms4fkz,hmrjc73,hmru1tr,hmsku8e,hmsu2jc,hmrtb91,hmskt4q,hmrkn0z,hmrgk3j,hms4gwi,hmrhtya,hmsr2hm,hmupwiu,hms3wv7,hmvcr0w,hmsmm2x,hms4yu6,hmrhubd,hmrlp54,hms1l6z,hmrwtvs,hmrn3rv,hmrupqc,hmsndmx,hmrpbj4,hms5nfl,hmrfv48,hmrvf0v,hmsa8oc,hmrwt4h,hms2fe6,hmrgytd,hmrz6ix,hmsem50,hmruc2k,hmt9ekl,hmu51yq,hmrqz3w,hmryvkc,hmu09qs,hmvao30,hms5q48,hmrynpr,hmrua63,hmrusos,hmsjke6,hmsqalo,hmtlvmj,hmxoenc,hmy215d,hmtp273,hmuvaeh,hmthspq,hmvd5ko,hmt2jgt,hmtpt3b,hmurfdk,hmro017,hmsgmlt,hmupqo9,hmrguh8,hmsnu8g,hmrlcda,hmrk2jn,hmujjqf,hmvr6mx,hmrg937,hmrhdgc,hmtsxep,hmtose6,hmwtk1w,hmrjghk,hmsniaj,hmt0sca,hmtvgc7,hmrhvmq,hmt7kjf,hmsr3as,hms2udb,hmukpkv,hmsuxfj,hmtjo2f,hmwkskt,hmui302,hmsomuy,hmuyqf6,hmrevqd,hmrfpg5,hmufugf,hmwu69l,hmsneo1,hmuzllx,hmrhr75,hmrlidz,hms1j6d,hmsrg41,hmtqwyn,hmwzc9n,hmtixd5,hms0q3g,hmsj72h,hmrgty5,hmswfp5,hmrushh,hmw3f07,hms3qv5,hmv23t1,hmsj2yt,hmsobf4,hmvj1t2,hmuhh4i,hmwqv7g,hmv3f9l,hmrg6cr,hmvjdt8,hmrsif1,hms8pj4,hmum5va,hms9zdc,hmrmn6p,hmrs1dg,hmw3zoj,hmrr4l8,hmrj5v8,hms2ee2,hmt7cec,hmsk25x,hmsm2v3,hmryepf,hmu2rw9,hmu5438,hmt4xjf,hmuaadx,hmri5lq,hmrfsij,hmuatyn,hmxn3xv,hmtbcpy,hmrtjc7,hmxsojx,hmur5u6,hmse1bp,hmtx4jg,hmrf4te,hmsr9et,hmv1ch7,hmrlffy,hmweook,hmuxfuh,hmsrw4q,hmrzl7z,hmvpp3m,hmrsklw,hmsll5m,hmrjd7f,hmtil9k,hmskbs6,hmsc6zx,hmru1rn,hmuuqt2,hmtb264,hmryh40,hmrl92g,hmvzpzx,hms0wwq,hmrfk32,hmuu0nz,hmrf4pv,hmxrx3s,hmrtomh,hmusk2z,hmrjrhv,hmrgey5,hmsioan,hmru0e5,hmsrb47,hmvp1xr,hmsnokd,hms4w5y,hmwfe3o,hmrf8rs,hmwtvl7,hms2tdh,hmwxwzb,hms8odm,hmuy2yb,hmu51kx,hmtomhu,hmy8v67,hms4ewo,hmu2a1h,hmrt4yg,hms009r,hmyfdr9,hmu4zel,hmtteup,hmuudfb,hmrtaig,hmvianz,hmtqtlx,hmt0fwv,hmsnmhw,hmx7741,hmsogj4,hmt2qvg,hms2u4s,hmtypln,hmrel6r,hmt5dgk,hmvewiq,hmtfl5k,hmsvx7j,hmsa0hn,hms9kby,hmva7zl,hmtvyoj,hmrtiig,hmsrqka,hmst5oy,hmrfj4u,hmrn5eh,hmrh1r4,hmv10v7,hmrio89,hms3twz,hmscvvl,hmuvltl,hmrz22v,hmtyhqw,hmrino9,hmu7lg6,hmsmzua,hmu2pgh,hmrf59h,hmrtnc5,hmve44r,hmttnxq,hmubyyn,hmt2d0z,hmrhqsr,hmtcewm,hmrf92d,hmsst3c,hmrxcqk,hmswer6,hms6rw6,hmtskg5,hms1z0o,hmt74ro,hmreq4n,hmuox3j,hmukafq,hmu4r0v,hmsd95d,hmvq4sq,hmrh7ku,hmrx7fx,hms4lux,hmtpgu7,hmrydbs,hmrgg3c,hmssbuw,hmsaolj,hmrjmin,hms1s6r,hmrgfud,hmu337d,hmt27ga,hms24ql,hmrr3w3,hmup3ay,hmrh2vk,hms21cb,hmtcq1a,hmrxsyi,hmvxl2c,hms98ik,hms50ta,hmrhdk2,hms3qzs,hmsf2pc,hmsit0y,hmsbmj1,hmsvczl,hmujlag,hmtw3nw,hmunt9t,hmtfafr,hms1fac,hmrs7po,hmsszew,hms8ikj,hmy90co,hmuc4hm,hmsr243,hmt02z0,hmtytou,hmtn5cf,hmwq120,hmt5mu9,hmwkw6o,hmss6je,hmw9ssu,hmrz40u,hms028u,hmuvznj,hmt4tjc,hmwpkjo,hmtzrre,hmrtbjq,hmwwi7l,hmv7xhs,hmuqjav,hmtxaje,hms8x4k,hmul0m8,hmrk087,hmt9f7j,hmto2mk,hmt0ynh,hms7gau,hmu9yeq,hmu297u,hmv8bqt,hmvd24s,hms0m82,hmrwqat,hmrs8pi,hms2it8,hmvffrj,hmse2jo,hmssgwx,hmuc4p0,hmrf9ck,hmvvm80,hmw42an,hmti8v3,hmrzmu2,hmuszg8,hmtw0cl,hmt7ejw,hmuuxtj,hmrg1kh,hmv8xhi,hmu2gx2,hmtpxvo,hmv7e6n,hmrmjt8,hms3lqj,hmrs30t,hmvae71,hmsebbs,hmrzrtr,hmvg4o4,hmrz2jn,hmvy97q,hmrfld2,hmretnt,hmxdpt3,hmrkjxn,hmt7y0e,hmwtwoc,hmu7i0g,hmtp9ng,hmsxnbq,hmwegvt,hmswb9a,hmw4ek2,hmwb2ra,hmw21oo,hmucq9b,hmwdb3a,hmvcobg,hmw1jxb,hmrf2g0,hmwx4lt,hms0omp,hmrfuew,hmshtm9,hmvbdu3,hmv06au,hms6qq4,hmusj18,hmsr7zw,hmuijjn,hmua6gz,hmy32s1,hms92lp,hmtqk3y,hmvszqc,hmtimr9,hmwnrhk,hmvoa64,hmxa298,hmvnyic,hmrrbe6,hmulg4v,hmuxks0,hms8upn,hmurtrn,hmrxxk9,hmtpdh1,hmy9ke6,hmu172l,hmuy7px,hmvcmtf,hmvn98k,hmsr79d,hmtouj5,hmu2d91,hmrfhj6,hms9me8,hmxer2i,hmrf0gg,hmteqky,hmvwuer,hmsthqs,hmrhcqc,hmvqe6x,hmy5y2j,hmwc3gl,hms8x51,hmuz7ba,hmtf0lj,hmy3con,hmtlqdt,hmrzgee,hmuwc2v,hmt3c9q,hmtou21,hmts3v2,hmx4oh4,hmxm0oa,hmrf87m,hmspb17,hmupvsh,hmrfvru,hmuf6r8,hmsw7qt,hmt8pge,hmrel8t,hmtqurm,hmxa4gk,hmrhr14,hmtublx,hmrr8s5,hmrks2m,hmupg0c,hmrmuci,hmtkx5u,hmuvxcd,hmu9qut,hmris2x,hmy98ot,hmxf61e,hmwgacu,hmt1dsj,hmrklsj,hmsi1lb,hmurivu,hmunovu,hmw3kbw,hmuemam,hmvqsha,hmum4io,hmshy76,hmu9x7q,hmwg4mh,hmsic35,hmrt2sw,hmrfr8r,hms6jxx,hmuqc8p,hmxzdlr,hmvd82d,hmrf0j6,hmwk3gr,hmtbaw0,hmul1w0,hmso78b,hmuu15c,hmupha0,hmumga1,hmt833f,hms8zqs,hmrezlc,hmu6yri,hmreik6,hmtnoc6,hmsnt19,hmvwd6n,hmshxa7,hmrn1qi,hmtfxz8,hms9kem,hmsoygk,hmvhiw7,hmvwtzm,hmriplw,hmuu8ya,hmuwdqz,hmux6rf,hmvjxdh,hmwn65l,hmt42bv,hmw8zxm,hmtckwf,hmu41kj,hmshy8w,hmuwsn3,hmubzlt,hmx4u0j,hmri0oz,hmxgs6y,hmvyzz7,hms97z3,hmt84zy,hms455t,hmubyyr,hmry7u5,hmriaqg,hmubq5y,hmvqboh,hmx8h5l,hmtl0p6,hmvttxb,hmu47y6,hmso475,hmsd2vf,hms9w78,hmunpx2,hmrins1,hmrruww,hmul9ls,hmx7ocb,hmsmh1y,hmsqyxj,hmreons,hmwxxf7,hmut6fx,hmvu8v1,hms5s4x,hmvo3y7,hmrk31c,hmu2ehy,hmtou73,hmss2k9,hmx74kk,hmveoia,hmsdp0m,hmvg97r,hmtkjc8,hmtl4l8,hms0h5d,hmrfa3v,hmygsqt,hmvh953,hmunk6r,hmrh3m6,hmukph5,hmtdkt1,hmsumbu,hmren52,hmsvo2v,hmu7mkh,hmsqpii,hmtith2,hmt0d6b,hmuxrtd,hmsipx1,hmuwikk,hms0ovt,hmtb5yc,hms93us,hmv395f,hmrqozx,hmsrgeu,hmu7g9d,hmtrv9z,hmugkix
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '43777'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg62gh72.2.1741472957269.Z0FBQUFBQm56TVM5Z3VqRkVzTWNuMG9yLURNZWlscEdZOWRDNGJQTmFlUV9jR2Z2ajJKYkJ4czhfTUtvX3I3Y2dnWnFmNHNndExDZ0RUb3ZXS3ZmWFV5ajNQOF93ZDdVWk9Db3kxSnZrdWx0S1JIWlVZcmFJZlBDUU5kWm4zTnJLX3JoZnhMT1p0YWw;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:17
        GMT; secure, session_tracker=iqhjookrkfmmlponhq.0.1741472957283.Z0FBQUFBQm56TVM5czJhS25ib0wtbXN5U3Q4QXRicThYTThaeTl2YVcyZ2xuOEdCZEN2eVZocGxJSmZVNlBkLWJXMWVfUlFjN0FYbzJaSlZMa3h1dkd4dVVKMGluRG5feVdtOUxDcDlHY3RtM2pTTVdxeHFIMmp6c0R1RTVFNnVhclM2TkJIck00ZE8;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:17
        GMT; secure, edgebucket=4RkFFBJAAZACZ8bYe3; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '60'
      x-ratelimit-remaining:
      - '40.0'
      x-ratelimit-reset:
      - '42'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:17 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv9qtx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ReallyNeededANewName",
        "can_mod_post": false, "created_utc": 1638405051.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_4ifsljah", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#x86 assembly\n\nRelies on there being two empty newlines at the end of the
        file\n\n\tglobal _start\n\n\tsection .data\n\t\t; Align to the nearest 2 byte
        boundary, must be a power of two\n\t\talign 2\n\t\t; String, which is just
        a collection of bytes, 0xA is newline\n\t\tstr: db ''Hello, world!'',0xA\n\t\tstrLen:
        equ $-str\n\n\tsection .bss\n\t\tstring_buffer: resb 16\n\t\tbuffer_end: equ
        $-string_buffer\n\n\t\tinput_buffer: resb 20000\n\t\tinput_end: equ $-input_buffer\n\n\t\twindow_buffer:
        resb 12\n\n\tsection .text\n\n\t_start:\tcall main\n\n\tmain:\t\n\t\tcall
        read_stdin\n\t\tcall solve\n\t\tcall part2\n\t\tcall exit\n\n\tsolve:\tmov
        rax, input_buffer\n\t\tmov edx, 0\n\t\tpush rdx\n\t\tcall read_number\n\t\tpop
        rdx\n\tsolve_1:\n\t\tmov ecx, ebx\n\t\tpush rdx\n\t\tcall read_number\n\t\tpop
        rdx\n\t\tcmp ecx, ebx\n\t\tjge solve_2\n\t\tadd edx, 1\n\tsolve_2:\n\t\tcmp
        ecx, 0\n\t\tje solve_3\n\t\tjmp solve_1\n\tsolve_3:\n\t\tmov eax, edx\n\t\tcall
        print_num\n\t\tret\n\n\tpart2:\tmov rax, input_buffer\n\t\tmov edx, 0\n\t\tpush
        rdx\n\t\tcall read_number\n\t\tmov [window_buffer], ebx\n\t\tcall read_number\n\t\tmov
        [window_buffer + 4], ebx\n\t\tcall read_number\n\t\tmov [window_buffer + 8],
        ebx\n\t\tpop rdx\n\t\tcall sum_window_buffer\n\tpart2_1:\t\n\t\tmov ecx, ebx\n\t\tpush
        rdx\n\n\t\tmov edx, [window_buffer + 4]\n\t\tmov [window_buffer], edx\n\t\t\n\t\tmov
        edx, [window_buffer + 8] \n\t\tmov [window_buffer + 4], edx\n\t\t\n\t\tcall
        read_number\n\t\tmov [window_buffer + 8], ebx\n\t\t\n\t\tpop rdx\n\t\tcmp
        ebx, 0\n\t\tje part2_2\n\t\tcall sum_window_buffer\n\t\tcmp ecx, ebx\n\t\tjge
        part2_1\n\t\tadd edx, 1\n\t\tjmp part2_1\n\tpart2_2:\n\t\tmov eax, edx\n\t\tcall
        print_num\n\t\tret\n\n\t; returns window_buffer''s sum to ebx\n\tsum_window_buffer:\n\t\tmov
        ebx, [window_buffer]\n\t\tadd ebx, [window_buffer + 4]\n\t\tadd ebx, [window_buffer
        + 8]\n\t\tret\n\n\t; reads the entire file from stdin into the input buffer\n\tread_stdin:\n\t\tmov
        eax, 0\n\t\tmov edi, 0\n\t\tmov rsi, input_buffer\n\t\tmov edx, 20000\n\t\tsyscall\n\t\tret\n\n\t;
        rax contains the buffer pointer\n\t; rax returns the pointer to the next number\n\t;
        ebx returns the read number\n\tread_number:\n\t\tmov ebx, 0\n\tread_number_1:\n\t\tmov
        dl, 0x0A ; ''\\n''\n\t\tmov dh, [rax]\n\t\tcmp dh, dl\n\t\tje read_number_2\n\n\t\timul
        ebx, 10\n\t\tmovsx edx, dh\n\t\tadd ebx, edx\n\t\tsub ebx, 0x30 ; ''0''\n\t\tadd
        rax, 1\n\t\tjmp read_number_1\n\tread_number_2:\n\t\tadd rax, 1\n\t\tret\n\n\t;
        eax contains an unsigned number to print\n\tprint_num:\n\t\tpush rax\n\t\tpush
        rax\n\t\tcall clear_buffer\n\t\tmov ecx, buffer_end\n\t\tadd ecx, string_buffer\n\t\tsub
        ecx, 1\n\t\tmov edx, 0\n\t\tpop rax\n\tprint_num_1:\n\t\tcmp eax, 0\n\t\tje
        print_num_2\n\n\t\t; eax / 10 -&gt; eax\n\t\t; eax % 10 -&gt; ed\n\t\tmov
        eax, eax\n\t\tmov edx, 0\n\t\tmov ebx, 10\n\t\tdiv ebx\n\n\t\tadd edx, 0x30
        ; ''0''\n\t\tsub ecx, 1\n\t\tmov [ecx], dl\n\t\tjmp print_num_1\n\tprint_num_2:\n\t\t;
        &amp;buffer_end - length -&gt; edx\n\t\tmov edx, buffer_end\n\t\tadd edx,
        string_buffer\n\t\tsub edx, ecx\n\t\tcall print\n\t\tpop rax\n\t\tret\t\n\n\tclear_buffer:\n\t\tmov
        eax, 0x20202020\n\t\tmov ebx, string_buffer\n\t\tmov [ebx], eax\n\t\tmov [ebx
        + 4], eax\n\t\tmov [ebx + 8], eax\n\t\tmov eax, 0x0A202020 ; Little endian,
        new line comes first\n\t\tmov [ebx + 12], eax\n\t\tret\n\n\t; edx contains
        string length\n\t; ecx contains string pointer\n\tprint:\tmov\tebx, 1          ;
        Arg one: file descriptor, in this case stdout\n\t\tmov\teax, 4          ;
        Syscall number, in this case the write(2) syscall: \n\t\tint\t0x80            ;
        Interrupt 0x80        \n\t\tret\n\n\n\texit:\tmov\tebx, 0          ; Arg one:
        the status\n\t\tmov\teax, 1          ; Syscall number:\n\t\tint\t0x80\n\t\tret",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;x86 assembly&lt;/h1&gt;\n\n&lt;p&gt;Relies
        on there being two empty newlines at the end of the file&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;global
        _start\n\nsection .data\n    ; Align to the nearest 2 byte boundary, must
        be a power of two\n    align 2\n    ; String, which is just a collection of
        bytes, 0xA is newline\n    str: db &amp;#39;Hello, world!&amp;#39;,0xA\n    strLen:
        equ $-str\n\nsection .bss\n    string_buffer: resb 16\n    buffer_end: equ
        $-string_buffer\n\n    input_buffer: resb 20000\n    input_end: equ $-input_buffer\n\n    window_buffer:
        resb 12\n\nsection .text\n\n_start: call main\n\nmain:   \n    call read_stdin\n    call
        solve\n    call part2\n    call exit\n\nsolve:  mov rax, input_buffer\n    mov
        edx, 0\n    push rdx\n    call read_number\n    pop rdx\nsolve_1:\n    mov
        ecx, ebx\n    push rdx\n    call read_number\n    pop rdx\n    cmp ecx, ebx\n    jge
        solve_2\n    add edx, 1\nsolve_2:\n    cmp ecx, 0\n    je solve_3\n    jmp
        solve_1\nsolve_3:\n    mov eax, edx\n    call print_num\n    ret\n\npart2:  mov
        rax, input_buffer\n    mov edx, 0\n    push rdx\n    call read_number\n    mov
        [window_buffer], ebx\n    call read_number\n    mov [window_buffer + 4], ebx\n    call
        read_number\n    mov [window_buffer + 8], ebx\n    pop rdx\n    call sum_window_buffer\npart2_1:    \n    mov
        ecx, ebx\n    push rdx\n\n    mov edx, [window_buffer + 4]\n    mov [window_buffer],
        edx\n\n    mov edx, [window_buffer + 8] \n    mov [window_buffer + 4], edx\n\n    call
        read_number\n    mov [window_buffer + 8], ebx\n\n    pop rdx\n    cmp ebx,
        0\n    je part2_2\n    call sum_window_buffer\n    cmp ecx, ebx\n    jge part2_1\n    add
        edx, 1\n    jmp part2_1\npart2_2:\n    mov eax, edx\n    call print_num\n    ret\n\n;
        returns window_buffer&amp;#39;s sum to ebx\nsum_window_buffer:\n    mov ebx,
        [window_buffer]\n    add ebx, [window_buffer + 4]\n    add ebx, [window_buffer
        + 8]\n    ret\n\n; reads the entire file from stdin into the input buffer\nread_stdin:\n    mov
        eax, 0\n    mov edi, 0\n    mov rsi, input_buffer\n    mov edx, 20000\n    syscall\n    ret\n\n;
        rax contains the buffer pointer\n; rax returns the pointer to the next number\n;
        ebx returns the read number\nread_number:\n    mov ebx, 0\nread_number_1:\n    mov
        dl, 0x0A ; &amp;#39;\\n&amp;#39;\n    mov dh, [rax]\n    cmp dh, dl\n    je
        read_number_2\n\n    imul ebx, 10\n    movsx edx, dh\n    add ebx, edx\n    sub
        ebx, 0x30 ; &amp;#39;0&amp;#39;\n    add rax, 1\n    jmp read_number_1\nread_number_2:\n    add
        rax, 1\n    ret\n\n; eax contains an unsigned number to print\nprint_num:\n    push
        rax\n    push rax\n    call clear_buffer\n    mov ecx, buffer_end\n    add
        ecx, string_buffer\n    sub ecx, 1\n    mov edx, 0\n    pop rax\nprint_num_1:\n    cmp
        eax, 0\n    je print_num_2\n\n    ; eax / 10 -&amp;gt; eax\n    ; eax % 10
        -&amp;gt; ed\n    mov eax, eax\n    mov edx, 0\n    mov ebx, 10\n    div ebx\n\n    add
        edx, 0x30 ; &amp;#39;0&amp;#39;\n    sub ecx, 1\n    mov [ecx], dl\n    jmp
        print_num_1\nprint_num_2:\n    ; &amp;amp;buffer_end - length -&amp;gt; edx\n    mov
        edx, buffer_end\n    add edx, string_buffer\n    sub edx, ecx\n    call print\n    pop
        rax\n    ret \n\nclear_buffer:\n    mov eax, 0x20202020\n    mov ebx, string_buffer\n    mov
        [ebx], eax\n    mov [ebx + 4], eax\n    mov [ebx + 8], eax\n    mov eax, 0x0A202020
        ; Little endian, new line comes first\n    mov [ebx + 12], eax\n    ret\n\n;
        edx contains string length\n; ecx contains string pointer\nprint:  mov ebx,
        1          ; Arg one: file descriptor, in this case stdout\n    mov eax, 4          ;
        Syscall number, in this case the write(2) syscall: \n    int 0x80            ;
        Interrupt 0x80        \n    ret\n\n\nexit:   mov ebx, 0          ; Arg one:
        the status\n    mov eax, 1          ; Syscall number:\n    int 0x80\n    ret\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv9qtx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv9qtx", "created":
        1638405051.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmvlfj8", "id": "hmvlfj8", "parent_id":
        "t1_hmv9qtx", "depth": 1, "children": ["hmvlfj8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvam9r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "tripa",
        "can_mod_post": false, "created_utc": 1638405436.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_16tzq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Went for very point-free Haskell. I like the compactness.\n\n    main = interact
        $ show . ((&amp;&amp;&amp;) =&lt;&lt; (. map sum . transpose . take 3 . tails))\n                             (length
        . filter (&gt; 0) . (zipWith (-) =&lt;&lt; tail)) .\n                      map
        read . lines", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Went
        for very point-free Haskell. I like the compactness.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;main
        = interact $ show . ((&amp;amp;&amp;amp;&amp;amp;) =&amp;lt;&amp;lt; (. map
        sum . transpose . take 3 . tails))\n                         (length . filter
        (&amp;gt; 0) . (zipWith (-) =&amp;lt;&amp;lt; tail)) .\n                  map
        read . lines\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvam9r/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmvam9r", "created": 1638405436.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmvaoz0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "Tallbikeguy", "can_mod_post": false,
        "created_utc": 1638405469.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 4, "author_fullname": "t2_j0tn3", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Common Lisp Newbie\nI
        just started playing around with Common Lisp about a week ago, trying some
        of the AOC 2020 problems.  Would love some feedback.\n\n    (defpackage :advent2101\n      (:use
        :cl))\n    \n    (ql:quickload :uiop)\n    \n    (in-package :advent2101)\n    \n    (defparameter
        +pings+  (mapcar #''parse-integer (uiop:read-file-lines \"input21-01.txt\")))\n    \n    (defun
        list-difference (list)\n      (loop for i from 0 to (- (length list) 2)\n        collect
        (- (nth (1+ i) list) (nth i list))))\n    \n    (defun sums-difference (list)\n      (length
        (remove-if (lambda (x) (if (&lt;= x 0) x ''nil)) (list-difference list))))\n    \n    ;;answer
        to part 1\n    (sums-difference +pings+)\n    \n    (defun window (i list)\n      (let
        ((listdiff (- (length list) i)))\n        (cond ((&gt; listdiff 2) (list (nth
        i list) (nth (1+ i) list) (nth (+ i 2) list)))\n              (''T ''nil))))\n    \n    (defun
        list-window (list)\n      (loop for i from 0 to (- (length list) 1)\n            collect
        (reduce ''+ (remove ''nil (window i list)))))\n    \n    (defun sonar-sweep
        (list)\n      (sums-difference (remove ''0 (list-window list))))\n    \n    ;;this
        is the answer to part 2\n    (sonar-sweep +pings+)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Common Lisp Newbie\nI just started playing around
        with Common Lisp about a week ago, trying some of the AOC 2020 problems.  Would
        love some feedback.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defpackage :advent2101\n  (:use
        :cl))\n\n(ql:quickload :uiop)\n\n(in-package :advent2101)\n\n(defparameter
        +pings+  (mapcar #&amp;#39;parse-integer (uiop:read-file-lines &amp;quot;input21-01.txt&amp;quot;)))\n\n(defun
        list-difference (list)\n  (loop for i from 0 to (- (length list) 2)\n    collect
        (- (nth (1+ i) list) (nth i list))))\n\n(defun sums-difference (list)\n  (length
        (remove-if (lambda (x) (if (&amp;lt;= x 0) x &amp;#39;nil)) (list-difference
        list))))\n\n;;answer to part 1\n(sums-difference +pings+)\n\n(defun window
        (i list)\n  (let ((listdiff (- (length list) i)))\n    (cond ((&amp;gt; listdiff
        2) (list (nth i list) (nth (1+ i) list) (nth (+ i 2) list)))\n          (&amp;#39;T
        &amp;#39;nil))))\n\n(defun list-window (list)\n  (loop for i from 0 to (-
        (length list) 1)\n        collect (reduce &amp;#39;+ (remove &amp;#39;nil
        (window i list)))))\n\n(defun sonar-sweep (list)\n  (sums-difference (remove
        &amp;#39;0 (list-window list))))\n\n;;this is the answer to part 2\n(sonar-sweep
        +pings+)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvaoz0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvaoz0", "created":
        1638405469.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmvgqxt", "id": "hmvgqxt", "parent_id":
        "t1_hmvaoz0", "depth": 1, "children": ["hmvgqxt"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvdgju",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rahi_asif",
        "can_mod_post": false, "created_utc": 1638406681.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_4d12xy8i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "(Python) Hi, new to AoC, and only okay at programming. I feel like my code
        is really messy, are there any ways I could improve this?\n\n[code](https://topaz.github.io/paste/#XQAAAQBBAwAAAAAAAAAyGUj/T32X7mL27edBuSJS2gFobNlscQQ5TqmUr6ZiTl88TYQi3iPXv4tuZq3e4efQa6LBWIDUK5TsmPMEaIR3gxOYnQ6PKHUvOwBvZ577eSTQdvSAA79yktbNB+cyBjFDNc0r09RxfD7aRG5EL4HFINJMBWzRjs+ssHymV5TdU7JxJleZE+E5MkzCer8dkfIv9vaCfAWVeMpsPziiYTMGW50YoULPFCKVyR6zi22WjUm9nvfiF/pnmav5iiiKjbb4r9BdoFAFjTMzp386Q+9XsShbcuicAGtcIlUD8St4E1UAsHfO5AXuMMb31FjstYxSrUxbFJHhW5gG0fmhJ5O7Gf3ytcX4WOQr13ysBdGVZyuJzzBTSV3nnI3bLHDyh711DE4bLdKWNbLlDTH71SFjTsl4vWKZLExIhKbex39InGciR/tlnK4Xn/ylcXz4iZ8mhu36O0le)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;(Python) Hi, new to
        AoC, and only okay at programming. I feel like my code is really messy, are
        there any ways I could improve this?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBBAwAAAAAAAAAyGUj/T32X7mL27edBuSJS2gFobNlscQQ5TqmUr6ZiTl88TYQi3iPXv4tuZq3e4efQa6LBWIDUK5TsmPMEaIR3gxOYnQ6PKHUvOwBvZ577eSTQdvSAA79yktbNB+cyBjFDNc0r09RxfD7aRG5EL4HFINJMBWzRjs+ssHymV5TdU7JxJleZE+E5MkzCer8dkfIv9vaCfAWVeMpsPziiYTMGW50YoULPFCKVyR6zi22WjUm9nvfiF/pnmav5iiiKjbb4r9BdoFAFjTMzp386Q+9XsShbcuicAGtcIlUD8St4E1UAsHfO5AXuMMb31FjstYxSrUxbFJHhW5gG0fmhJ5O7Gf3ytcX4WOQr13ysBdGVZyuJzzBTSV3nnI3bLHDyh711DE4bLdKWNbLlDTH71SFjTsl4vWKZLExIhKbex39InGciR/tlnK4Xn/ylcXz4iZ8mhu36O0le\"&gt;code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvdgju/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvdgju", "created":
        1638406681.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 9, "name": "t1_hmvgaia", "id": "hmvgaia", "parent_id":
        "t1_hmvdgju", "depth": 1, "children": ["hmvgaia", "hmvhka5", "hmvhrlb"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638409361.0,
        "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvice0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "henricush",
        "can_mod_post": false, "created_utc": 1638408803.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_iub01", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "copy &amp; paste this javascript (one liner) into the webdev console of the
        input page. Gives solution for both parts : ).\n\n    [1,3].map(windowSize
        =&gt; document.children[0].textContent\n      .split(''\\n'') // split lines
        to array elements \n      .filter(x =&gt; x.length) // remove final empty
        element \n      .map(x =&gt; parseInt(x)) // create int out of strings\n      //
        do the actual magic\n      .reduce((cnt, x, i, arr) =&gt; i &gt;= windowSize
        &amp;&amp; x &gt; arr[i - windowSize] ? cnt + 1 : cnt, 0) \n    )\n\nOr process
        the data just once, but a bit awkward with window sizes inside reduce fn\n\n    document.children[0].textContent\n      .split(''\\n'')\n      .filter(x
        =&gt; x.length) \n      .map(x =&gt; parseInt(x))  \n      .reduce((cnt, x,
        i, arr) =&gt; [1,3].map((winSize, winI) =&gt; i &gt;= windowSize &amp;&amp;
        x &gt; arr[i - windowSize] ? cnt[winI] + 1 : cnt[winI]), [0,0])\n\nOr a version
        using fetch &amp; promises which can be pasted in any browser console\n\n    fetch(''https://adventofcode.com/2021/day/1/input'').then(x
        =&gt; x.text()).then(txt =&gt; txt\n      .split(''\\n'') \n      .filter(x
        =&gt; x.length) \n      .map(x =&gt; parseInt(x)) \n      .reduce((cnt, x,
        i, arr) =&gt; [1,3].map((windowSize, winI) =&gt; i &gt;= windowSize &amp;&amp;
        x &gt; arr[i - windowSize] ? cnt[winI] + 1 : cnt[winI]), [0,0]) \n    ).then(console.log)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;copy &amp;amp; paste
        this javascript (one liner) into the webdev console of the input page. Gives
        solution for both parts : ).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[1,3].map(windowSize
        =&amp;gt; document.children[0].textContent\n  .split(&amp;#39;\\n&amp;#39;)
        // split lines to array elements \n  .filter(x =&amp;gt; x.length) // remove
        final empty element \n  .map(x =&amp;gt; parseInt(x)) // create int out of
        strings\n  // do the actual magic\n  .reduce((cnt, x, i, arr) =&amp;gt; i
        &amp;gt;= windowSize &amp;amp;&amp;amp; x &amp;gt; arr[i - windowSize] ? cnt
        + 1 : cnt, 0) \n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or process the data
        just once, but a bit awkward with window sizes inside reduce fn&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;document.children[0].textContent\n  .split(&amp;#39;\\n&amp;#39;)\n  .filter(x
        =&amp;gt; x.length) \n  .map(x =&amp;gt; parseInt(x))  \n  .reduce((cnt, x,
        i, arr) =&amp;gt; [1,3].map((winSize, winI) =&amp;gt; i &amp;gt;= windowSize
        &amp;amp;&amp;amp; x &amp;gt; arr[i - windowSize] ? cnt[winI] + 1 : cnt[winI]),
        [0,0])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or a version using fetch &amp;amp;
        promises which can be pasted in any browser console&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fetch(&amp;#39;https://adventofcode.com/2021/day/1/input&amp;#39;).then(x
        =&amp;gt; x.text()).then(txt =&amp;gt; txt\n  .split(&amp;#39;\\n&amp;#39;)
        \n  .filter(x =&amp;gt; x.length) \n  .map(x =&amp;gt; parseInt(x)) \n  .reduce((cnt,
        x, i, arr) =&amp;gt; [1,3].map((windowSize, winI) =&amp;gt; i &amp;gt;= windowSize
        &amp;amp;&amp;amp; x &amp;gt; arr[i - windowSize] ? cnt[winI] + 1 : cnt[winI]),
        [0,0]) \n).then(console.log)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvice0/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmvice0", "created": 1638408803.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmvtjl6", "id": "hmvtjl6", "parent_id": "t1_hmvice0", "depth": 1, "children":
        ["hmvtjl6"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvmcfk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "thedjotaku",
        "can_mod_post": false, "created_utc": 1638410535.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_d7b8t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Go [solution](https://github.com/djotaku/adventofcode/blob/396a54156132c3853c0020b412f74bb038d1705b/2021/Day_01/Go/main.go)\n\nI
        used this awesome property that someone posted here in the mega-thread earlier:
        \n\na+b+c &gt; b+c+d is the same as asking a &gt; d.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Go &lt;a href=\"https://github.com/djotaku/adventofcode/blob/396a54156132c3853c0020b412f74bb038d1705b/2021/Day_01/Go/main.go\"&gt;solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        used this awesome property that someone posted here in the mega-thread earlier:
        &lt;/p&gt;\n\n&lt;p&gt;a+b+c &amp;gt; b+c+d is the same as asking a &amp;gt;
        d.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvmcfk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvmcfk", "created":
        1638410535.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638502952.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwgxfw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mddubey",
        "can_mod_post": false, "created_utc": 1638425697.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_35o1b2hn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Love ruby and how rich it is in terms of different methods.\n\nMy day 1 solution
        of GitHub  \n(https://github.com/mddubey/AoC/blob/main/2021/001/solution.rb)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Love ruby and how rich
        it is in terms of different methods.&lt;/p&gt;\n\n&lt;p&gt;My day 1 solution
        of GitHub&lt;br/&gt;\n(&lt;a href=\"https://github.com/mddubey/AoC/blob/main/2021/001/solution.rb\"&gt;https://github.com/mddubey/AoC/blob/main/2021/001/solution.rb&lt;/a&gt;)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwgxfw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwgxfw", "created":
        1638425697.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmwmpsr", "id": "hmwmpsr", "parent_id":
        "t1_hmwgxfw", "depth": 1, "children": ["hmwmpsr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwl2ds",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1638428501.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### Dyalog APL\n\n    nums\u2190\u234e\u00a8\u2283\u2395NGET ''c:\\adventofcode\\1.txt''
        1\n    +/2&lt;/nums\n    +/2&lt;/3+/nums\n    \nThese use the variation on
        reduce f/ array where you can put a number in front, and it applies the function
        to windows instead, so 2 f/ array runs the function f on each pair, and 3
        f/ array runs f over each triple, etc.\n\nSo part 1 runs &lt; less-than on
        each pair, and part 2 runs a sum on each triple, then less than on those.\n\nI
        tidied that up from my original +/1=\u00d72 -\u2368/nums which was doing a
        2-windowed backward-subtraction, then \u00d7 used on its own is direction
        and outputs -1 for any negative number, 1 for any positive number, and 0 for
        any 0. Then +/1= picks out the 1s and sums them. Not as good.\n\n(Posted as
        a comment, but making a top-level so it can be picked up by AoCWeb tool :)
        )", "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h3&gt;Dyalog APL&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;nums\u2190\u234e\u00a8\u2283\u2395NGET
        &amp;#39;c:\\adventofcode\\1.txt&amp;#39; 1\n+/2&amp;lt;/nums\n+/2&amp;lt;/3+/nums\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;These
        use the variation on reduce f/ array where you can put a number in front,
        and it applies the function to windows instead, so 2 f/ array runs the function
        f on each pair, and 3 f/ array runs f over each triple, etc.&lt;/p&gt;\n\n&lt;p&gt;So
        part 1 runs &amp;lt; less-than on each pair, and part 2 runs a sum on each
        triple, then less than on those.&lt;/p&gt;\n\n&lt;p&gt;I tidied that up from
        my original +/1=\u00d72 -\u2368/nums which was doing a 2-windowed backward-subtraction,
        then \u00d7 used on its own is direction and outputs -1 for any negative number,
        1 for any positive number, and 0 for any 0. Then +/1= picks out the 1s and
        sums them. Not as good.&lt;/p&gt;\n\n&lt;p&gt;(Posted as a comment, but making
        a top-level so it can be picked up by AoCWeb tool :) )&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwl2ds/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwl2ds", "created":
        1638428501.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwtvis",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "zatoichi49",
        "can_mod_post": false, "created_utc": 1638435463.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_165lak", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python:\n\n    with open(filepath, ''r'') as f:\n        nums = [int(i) for
        i in f.read().splitlines()]\n\n    def day1_pt1(nums):\n        return sum(b
        &gt; a for a, b in zip(nums, nums[1:]))\n\n    def day1_pt2(nums):\n        return
        sum(nums[i] &gt; nums[i-3] for i in range(3, len(nums)))\n\n    print(day1_pt1(nums))\n    print(day1_pt2(nums))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(filepath, &amp;#39;r&amp;#39;) as f:\n    nums = [int(i) for i in f.read().splitlines()]\n\ndef
        day1_pt1(nums):\n    return sum(b &amp;gt; a for a, b in zip(nums, nums[1:]))\n\ndef
        day1_pt2(nums):\n    return sum(nums[i] &amp;gt; nums[i-3] for i in range(3,
        len(nums)))\n\nprint(day1_pt1(nums))\nprint(day1_pt2(nums))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwtvis/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwtvis", "created":
        1638435463.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmx34ea", "id": "hmx34ea", "parent_id":
        "t1_hmwtvis", "depth": 1, "children": ["hmx34ea"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmx2aj6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        5, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Part 1 of Day 1 in Shakespeare Programming Language.
        Note that you must add a -1 to the end of the input.\n\nhttps://github.com/SansCipher/Advent-of-Code-2021/blob/main/1-1.spl",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmx2aj6",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part
        1 of Day 1 in Shakespeare Programming Language. Note that you must add a -1
        to the end of the input.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/SansCipher/Advent-of-Code-2021/blob/main/1-1.spl\"&gt;https://github.com/SansCipher/Advent-of-Code-2021/blob/main/1-1.spl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmx2aj6/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638442604.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638442604.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmx51sx", "id": "hmx51sx", "parent_id":
        "t1_hmx2aj6", "depth": 1, "children": ["hmx51sx"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmx9ay3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "lukaswendt",
        "can_mod_post": false, "created_utc": 1638447734.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_1k3j8p6d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "As per tradition here is day 1 in handwritten Intcode:\n\nPart1:\n\n`3,33,3,6,1007,33,0,9,1106,0,15,1001,34,1,34,1001,6,0,33,1001,35,1,35,1007,35,1999,28,1105,0,2,4,34,99`\n\nPart2:\n\n`109,71,1001,66,0,7,203,0,1001,66,1,66,1007,66,2000,67,1005,67,2,1101,0,0,66,2201,0,1,68,2001,68,2,68,2201,1,2,69,2001,69,3,69,109,1,7,68,69,67,1006,67,52,1001,70,1,70,1001,66,1,66,1007,66,1997,67,1005,67,23,4,70,99`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As per tradition here
        is day 1 in handwritten Intcode:&lt;/p&gt;\n\n&lt;p&gt;Part1:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;3,33,3,6,1007,33,0,9,1106,0,15,1001,34,1,34,1001,6,0,33,1001,35,1,35,1007,35,1999,28,1105,0,2,4,34,99&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part2:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;109,71,1001,66,0,7,203,0,1001,66,1,66,1007,66,2000,67,1005,67,2,1101,0,0,66,2201,0,1,68,2001,68,2,68,2201,1,2,69,2001,69,3,69,109,1,7,68,69,67,1006,67,52,1001,70,1,70,1001,66,1,66,1007,66,1997,67,1005,67,23,4,70,99&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmx9ay3/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmx9ay3", "created":
        1638447734.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hn238ea", "id": "hn238ea", "parent_id":
        "t1_hmx9ay3", "depth": 1, "children": ["hn238ea"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmxeos6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "lovela47",
        "can_mod_post": false, "created_utc": 1638450915.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_1udc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Perl solutions in long-winded imperative style.  Part 1:\n\n    my ($inc,
        $prev, $curr) = (0, 0, 0);\n    while (&lt;&gt;) {\n        chomp;\n        $curr
        = $_;\n        if ($curr &gt; $prev) {\n            $inc++ unless $prev ==
        0;\n        }\n        $prev = $curr;\n    }\n\n    say $inc;\n\nPart 2:\n\n    my
        ($inc, $curr, $prev, $prevprev, $i) = (0, 0, 0, 0, 0);\n    my ($currwinsum,
        $prevwinsum) = (0, 0);\n    my @window;\n\n    while (&lt;&gt;) {\n        chomp;\n        $curr
        = $_;\n        push @window, $curr;\n        if (@window &gt; 2) {\n            ($curr,
        $prev, $prevprev)\n              = ($window[$i], $window[$i - 1], $window[$i
        - 2]);\n            $currwinsum = $curr + $prev + $prevprev;\n        }\n\n        if
        ($currwinsum &gt; $prevwinsum) {\n            $inc++ unless $prevwinsum ==
        0;\n        }\n        $prevwinsum = $currwinsum;\n        $i++;\n    }\n\n    say
        $inc;", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Perl
        solutions in long-winded imperative style.  Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;my
        ($inc, $prev, $curr) = (0, 0, 0);\nwhile (&amp;lt;&amp;gt;) {\n    chomp;\n    $curr
        = $_;\n    if ($curr &amp;gt; $prev) {\n        $inc++ unless $prev == 0;\n    }\n    $prev
        = $curr;\n}\n\nsay $inc;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;my
        ($inc, $curr, $prev, $prevprev, $i) = (0, 0, 0, 0, 0);\nmy ($currwinsum, $prevwinsum)
        = (0, 0);\nmy @window;\n\nwhile (&amp;lt;&amp;gt;) {\n    chomp;\n    $curr
        = $_;\n    push @window, $curr;\n    if (@window &amp;gt; 2) {\n        ($curr,
        $prev, $prevprev)\n          = ($window[$i], $window[$i - 1], $window[$i -
        2]);\n        $currwinsum = $curr + $prev + $prevprev;\n    }\n\n    if ($currwinsum
        &amp;gt; $prevwinsum) {\n        $inc++ unless $prevwinsum == 0;\n    }\n    $prevwinsum
        = $currwinsum;\n    $i++;\n}\n\nsay $inc;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxeos6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmxeos6", "created":
        1638450915.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmy9wj9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "CCC_037",
        "can_mod_post": false, "created_utc": 1638464444.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_b1sp7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rockstar:\n\nPart 1:\n\n\n    Put nothing into my heart.\n    Listen to my
        love.\n    Cast my love into your heart.\n\n    While your heart is not null,\n      Put
        your heart into my memory.\n      Listen to my love.\n      Cast my love into
        your heart.\n      Shout your heart.\n      Shout my memory.\n      If your
        heart is stronger than my memory,\n        Build my heart up.\n        Shout
        \"Building\"\n\n      Shout your heart.\n      Shout my memory.\n      Shout
        my heart.\n\nPart 2:\n\n    Put nothing into Sayoris Heart.\n    Put nothing
        into Yuris Heart.\n    Put nothing into Natsukis Heart.\n    Listen to my
        lament.\n    Cast my lament into the void.\n    \n    Put Sayoris Heart plus
        the void into Sayoris Heart\n    \n    Listen to my lament.\n    Cast my lament
        into the void.\n    \n    Put Sayoris Heart plus the void into Sayoris Heart\n    Put
        Yuris Heart plus the void into Yuris Heart\n    \n    Listen to my lament.\n    Cast
        my lament into the void.\n    \n    Put Sayoris Heart plus the void into Sayoris
        Heart\n    Put Yuris Heart plus the void into Yuris Heart\n    Put Natsukis
        Heart plus the void into Natsukis Heart\n    \n    Put nothing into my hope.\n    \n    While
        the void is not nothing,\n      Listen to my lament.\n      Cast my lament
        into the void.\n      Put Yuris Heart plus the void into Yuris Heart\n      Shout
        Yuris Heart.\n      If Yuris Heart is stronger than Sayoris Heart,\n        Build
        my hope up.\n    \n      Put Yuris Heart into Sayoris Heart.\n      Put Natsukis
        Heart plus the void into Yuris Heart.\n      Put the void into Natsukis Heart.\n      Shout
        the void.\n      Shout my hope.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rockstar:&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Put
        nothing into my heart.\nListen to my love.\nCast my love into your heart.\n\nWhile
        your heart is not null,\n  Put your heart into my memory.\n  Listen to my
        love.\n  Cast my love into your heart.\n  Shout your heart.\n  Shout my memory.\n  If
        your heart is stronger than my memory,\n    Build my heart up.\n    Shout
        &amp;quot;Building&amp;quot;\n\n  Shout your heart.\n  Shout my memory.\n  Shout
        my heart.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Put
        nothing into Sayoris Heart.\nPut nothing into Yuris Heart.\nPut nothing into
        Natsukis Heart.\nListen to my lament.\nCast my lament into the void.\n\nPut
        Sayoris Heart plus the void into Sayoris Heart\n\nListen to my lament.\nCast
        my lament into the void.\n\nPut Sayoris Heart plus the void into Sayoris Heart\nPut
        Yuris Heart plus the void into Yuris Heart\n\nListen to my lament.\nCast my
        lament into the void.\n\nPut Sayoris Heart plus the void into Sayoris Heart\nPut
        Yuris Heart plus the void into Yuris Heart\nPut Natsukis Heart plus the void
        into Natsukis Heart\n\nPut nothing into my hope.\n\nWhile the void is not
        nothing,\n  Listen to my lament.\n  Cast my lament into the void.\n  Put Yuris
        Heart plus the void into Yuris Heart\n  Shout Yuris Heart.\n  If Yuris Heart
        is stronger than Sayoris Heart,\n    Build my hope up.\n\n  Put Yuris Heart
        into Sayoris Heart.\n  Put Natsukis Heart plus the void into Yuris Heart.\n  Put
        the void into Natsukis Heart.\n  Shout the void.\n  Shout my hope.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy9wj9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmy9wj9", "created":
        1638464444.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hn04lsi", "id": "hn04lsi", "parent_id":
        "t1_hmy9wj9", "depth": 1, "children": ["hn04lsi", "hn50qc2"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmyb7om",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "swierdo",
        "can_mod_post": false, "created_utc": 1638464944.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_lr8ghlk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Python with pandas\n\nSolution for day 1 part 2.\n\nIt includes fetching
        the input-data. It''s technically a 1-liner after the import, but formatting
        is important.\n\n    import pandas as pd\n    \n    (\n        pd.read_csv(\n            \"https://adventofcode.com/2021/day/1/input\",\n            storage_options={\n                \"Cookie\":
        \"session=[secret]\"\n            },\n            squeeze=True,\n            header=None,\n        )\n        .rolling(3)\n        .sum()\n        .diff()\n        .gt(0)\n    ).sum()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Python with pandas&lt;/h2&gt;\n\n&lt;p&gt;Solution
        for day 1 part 2.&lt;/p&gt;\n\n&lt;p&gt;It includes fetching the input-data.
        It&amp;#39;s technically a 1-liner after the import, but formatting is important.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        pandas as pd\n\n(\n    pd.read_csv(\n        &amp;quot;https://adventofcode.com/2021/day/1/input&amp;quot;,\n        storage_options={\n            &amp;quot;Cookie&amp;quot;:
        &amp;quot;session=[secret]&amp;quot;\n        },\n        squeeze=True,\n        header=None,\n    )\n    .rolling(3)\n    .sum()\n    .diff()\n    .gt(0)\n).sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyb7om/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmyb7om", "created":
        1638464944.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms51e4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "quantumcuckoo",
        "can_mod_post": false, "created_utc": 1638354819.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_d88si4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Honestly, I just did this one in Excel. Shoot me.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Honestly, I just did this one in Excel. Shoot me.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms51e4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms51e4", "created":
        1638354819.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmt0yvj", "id": "hmt0yvj", "parent_id":
        "t1_hms51e4", "depth": 1, "children": ["hmt0yvj", "hms56a8"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638341130.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrkats", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "dagmx",
        "can_mod_post": false, "created_utc": 1638338663.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 6, "author_fullname": "t2_9zqci", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust** \\- trying to be functional (I solved it faster non-functionally
        but wasn''t happy)\n\nPart 1:\n```\nprintln!(\"{}\",  \n    include\\_str!(\"../input.txt\")  \n    .lines()  \n    .map(|i|
        i.parse::&lt;i64&gt;().unwrap())  \n    .collect::&lt;Vec&lt;i64&gt;&gt;()  \n    .windows(2).filter(|i|
        i[1] &gt; i[0]) \n    .count()  \n)\n```\n\nPart 2:\n```\nprintln!(\"{}\",\n        include_str!(\"../input.txt\")\n        .lines()\n        .map(|i|
        i.parse::&lt;i64&gt;().unwrap())\n        .collect::&lt;Vec&lt;i64&gt;&gt;()\n        .windows(4).filter(|i|
        i[3] &gt; i[0])\n        .count()\n    )\n```\n\nI feel like there must be
        a way to do it without the collects?\n\nEdit: updated my solution to remove
        one of the collects since you can just compare the ends of each window", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt; - trying
        to be functional (I solved it faster non-functionally but wasn&amp;#39;t happy)&lt;/p&gt;\n\n&lt;p&gt;Part
        1:\n&lt;code&gt;\nprintln!(&amp;quot;{}&amp;quot;,  \n    include\\_str!(&amp;quot;../input.txt&amp;quot;)  \n    .lines()  \n    .map(|i|
        i.parse::&amp;lt;i64&amp;gt;().unwrap())  \n    .collect::&amp;lt;Vec&amp;lt;i64&amp;gt;&amp;gt;()  \n    .windows(2).filter(|i|
        i[1] &amp;gt; i[0]) \n    .count()  \n)\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2:\n&lt;code&gt;\nprintln!(&amp;quot;{}&amp;quot;,\n        include_str!(&amp;quot;../input.txt&amp;quot;)\n        .lines()\n        .map(|i|
        i.parse::&amp;lt;i64&amp;gt;().unwrap())\n        .collect::&amp;lt;Vec&amp;lt;i64&amp;gt;&amp;gt;()\n        .windows(4).filter(|i|
        i[3] &amp;gt; i[0])\n        .count()\n    )\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        feel like there must be a way to do it without the collects?&lt;/p&gt;\n\n&lt;p&gt;Edit:
        updated my solution to remove one of the collects since you can just compare
        the ends of each window&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrkats/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrkats", "created":
        1638338663.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmrkqnb", "id": "hmrkqnb", "parent_id":
        "t1_hmrkats", "depth": 1, "children": ["hmrkqnb", "hmrlqub"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmreo55",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ChrisVittal",
        "can_mod_post": false, "created_utc": 1638335408.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3morv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python](https://topaz.github.io/paste/#XQAAAQAAAQAAAAAAAAAyGUj/T3QlkUlyMF85b6TC7wm1mu4FiEAviOMDNtGeMf22xS4BhdB8SYIFMqZc00ssOXhCa8xlp82zysyufsEwMHHKQ3ei6RQfoIQ1HWW3UWUyxlyIIltpP/FBF8Z80ax1MYV3NCuOUb4Q/Xd4ZVmyOwPzUbAagnT7MZDAiptesFd6NhTOwi+ZwPl3JS1zT56e60z+ZfbA)
        easy use of builtins. Very nice first puzzle.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAAAQAAAAAAAAAyGUj/T3QlkUlyMF85b6TC7wm1mu4FiEAviOMDNtGeMf22xS4BhdB8SYIFMqZc00ssOXhCa8xlp82zysyufsEwMHHKQ3ei6RQfoIQ1HWW3UWUyxlyIIltpP/FBF8Z80ax1MYV3NCuOUb4Q/Xd4ZVmyOwPzUbAagnT7MZDAiptesFd6NhTOwi+ZwPl3JS1zT56e60z+ZfbA\"&gt;Python&lt;/a&gt;
        easy use of builtins. Very nice first puzzle.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": true, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmreo55/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmreo55", "created": 1638335408.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrf05u", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "4HbQ", "can_mod_post": false, "created_utc":
        1638335591.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_55chxi28", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**Python**\n\n    x = [*map(int,
        open(0))]\n    x = [*map(sum, zip(x,x[1:],x[2:]))]\n    print(sum(a&lt;b for
        a,b in zip(x,x[1:])))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;x
        = [*map(int, open(0))]\nx = [*map(sum, zip(x,x[1:],x[2:]))]\nprint(sum(a&amp;lt;b
        for a,b in zip(x,x[1:])))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf05u/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrf05u", "created": 1638335591.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638336444.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfro5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nibbl",
        "can_mod_post": false, "created_utc": 1638336005.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_5ipgr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Rust](https://nopaste.ml/?l=rust#XQAAAQDCAwAAAAAAAAA6nMjJFMpQiatRvuJoKIvSjvyXbp9HEMUFlkIFtqwzJbj42PveAjrsazXnwCQXLX/daTNTx1KFG8esUqAu5kxjizZgzPOjVL+IVlSGG1mqq96C360VKcQ9PzlpMHY85ifK/dfs0tk49wvJ/prj5jwUq7R6smkMMvIpmDQWnG0WEhRhk7+DLJgD6day3khJzcbkgBC0W77pawD3hShHY25cXmMq0PJt6wnhrtgwfd6psHbD2d118ZaP63wK09zpijbv/OshJdARmljyE9w48Jl0WWlwS8VY9hMZqSoT9675PZMDYVDJrFUlQu4SD7fHu4Ng5uT6YUlYmMCsxXdFaxb1A3M7NwPwrzU+5W0tadgm/Hkv/CCcnvcArtWzDavg+ZBrLXgksLFHAXbW/+R8x9sTDu/ZYi7w3OHjEWc8VSM9HY0xd/ran8mL60wM3U934BfkUHuE1ppsnCO3d8blLJikf5g8iJ2JtnfI79g647ediuAg8A2f2+tYo/vFWGgCQVBTih4kT4hGxvhdxNwTUQee4rfEcSXbS5sjKxwSRj7RwTjIrLJLC/Ve3c557P/g3HUY)
        (beginner)  \n\nNice gentle start thanks to slice::Windows.  \nWondering how
        many days before Rust overwhelms me :)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://nopaste.ml/?l=rust#XQAAAQDCAwAAAAAAAAA6nMjJFMpQiatRvuJoKIvSjvyXbp9HEMUFlkIFtqwzJbj42PveAjrsazXnwCQXLX/daTNTx1KFG8esUqAu5kxjizZgzPOjVL+IVlSGG1mqq96C360VKcQ9PzlpMHY85ifK/dfs0tk49wvJ/prj5jwUq7R6smkMMvIpmDQWnG0WEhRhk7+DLJgD6day3khJzcbkgBC0W77pawD3hShHY25cXmMq0PJt6wnhrtgwfd6psHbD2d118ZaP63wK09zpijbv/OshJdARmljyE9w48Jl0WWlwS8VY9hMZqSoT9675PZMDYVDJrFUlQu4SD7fHu4Ng5uT6YUlYmMCsxXdFaxb1A3M7NwPwrzU+5W0tadgm/Hkv/CCcnvcArtWzDavg+ZBrLXgksLFHAXbW/+R8x9sTDu/ZYi7w3OHjEWc8VSM9HY0xd/ran8mL60wM3U934BfkUHuE1ppsnCO3d8blLJikf5g8iJ2JtnfI79g647ediuAg8A2f2+tYo/vFWGgCQVBTih4kT4hGxvhdxNwTUQee4rfEcSXbS5sjKxwSRj7RwTjIrLJLC/Ve3c557P/g3HUY\"&gt;Rust&lt;/a&gt;
        (beginner)  &lt;/p&gt;\n\n&lt;p&gt;Nice gentle start thanks to slice::Windows.&lt;br/&gt;\nWondering
        how many days before Rust overwhelms me :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfro5/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrfro5", "created": 1638336005.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrgb09", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mdwhatcott", "can_mod_post": false, "created_utc":
        1638336291.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_dizdj", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "[Clojure](https://github.com/mdwhatcott/advent-of-code/blob/main/clj/src/aoc/y2021/d01.clj)\n\nPart1:\n\n```\n(defn
        count-increases [data]\n  (-&gt;&gt; (partition 2 1 data)\n       (map #(-
        (first %1) (last %1)))\n       (filter neg?)\n       count))\n```\n\nPart
        2:\n\n```\n(defn count-window-increases [data]\n  (-&gt;&gt; (partition 3
        1 data)\n       (map #(apply + %))\n       count-increases))\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/mdwhatcott/advent-of-code/blob/main/clj/src/aoc/y2021/d01.clj\"&gt;Clojure&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part1:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n(defn
        count-increases [data]\n  (-&amp;gt;&amp;gt; (partition 2 1 data)\n       (map
        #(- (first %1) (last %1)))\n       (filter neg?)\n       count))\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n(defn count-window-increases [data]\n  (-&amp;gt;&amp;gt;
        (partition 3 1 data)\n       (map #(apply + %))\n       count-increases))\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgb09/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgb09", "created":
        1638336291.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrgsla", "id": "hmrgsla", "parent_id":
        "t1_hmrgb09", "depth": 1, "children": ["hmrgsla"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrgk3j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "prendradjaja",
        "can_mod_post": false, "created_utc": 1638336432.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_4uw2bk4a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nice easy start!\n\nI don''t think I''ll try to compete this year -- at least,
        mostly :) -- so it was nice to be able to slow down and smell the roses (flavortext)!\n\nA
        utility like [`consecutives()`](https://github.com/prendradjaja/advent-of-code-2021/blob/c27651fd4e03e2fceb30399abc90d834ebe867f9/util.py#L93)
        is really handy here -- and results in a pretty readable solution, IMO!\n\nPython
        3:\n\n    # parse\n    f = open(''in'')\n    values = [int(l.rstrip(''\\n''))
        for l in f]\n\n    # part 1\n    res = 0\n    for prev, curr in consecutives(values):\n        if
        curr &gt; prev:\n            res += 1\n    print(res)\n\n    # part 2\n    res
        = 0\n    windows = consecutives(values, 3)\n    for prev, curr in consecutives(windows):\n        if
        sum(curr) &gt; sum(prev):\n            res += 1\n    print(res)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Nice easy start!&lt;/p&gt;\n\n&lt;p&gt;I
        don&amp;#39;t think I&amp;#39;ll try to compete this year -- at least, mostly
        :) -- so it was nice to be able to slow down and smell the roses (flavortext)!&lt;/p&gt;\n\n&lt;p&gt;A
        utility like &lt;a href=\"https://github.com/prendradjaja/advent-of-code-2021/blob/c27651fd4e03e2fceb30399abc90d834ebe867f9/util.py#L93\"&gt;&lt;code&gt;consecutives()&lt;/code&gt;&lt;/a&gt;
        is really handy here -- and results in a pretty readable solution, IMO!&lt;/p&gt;\n\n&lt;p&gt;Python
        3:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# parse\nf = open(&amp;#39;in&amp;#39;)\nvalues
        = [int(l.rstrip(&amp;#39;\\n&amp;#39;)) for l in f]\n\n# part 1\nres = 0\nfor
        prev, curr in consecutives(values):\n    if curr &amp;gt; prev:\n        res
        += 1\nprint(res)\n\n# part 2\nres = 0\nwindows = consecutives(values, 3)\nfor
        prev, curr in consecutives(windows):\n    if sum(curr) &amp;gt; sum(prev):\n        res
        += 1\nprint(res)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgk3j/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrgk3j", "created": 1638336432.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrgtwj", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ri7chy", "can_mod_post": false, "created_utc":
        1638336586.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_57s35ssj", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "[Python (3083/3028)](https://topaz.github.io/paste/#XQAAAQAcAQAAAAAAAAAwj0nnQ6yuooRtagbXoWJ9RuFr7bhkIrNFsjKrxwgSBfwi5aL/NEVRsHXiA5HwY7h+pGbMSOZ5u6bi5K1CzKb1spLXabEbI953DSaSHvGCg9vsKzJ9sbEZuwTan8rckzr4136v/qAbvbtueJMeb8aTUxjsyl0OdO1hCGeFNWMIZQnfiYSbN1hZk1eeAG9pZZvsWepJ76If4DuOFDN+U8uvHPB0nxUS7UiDNg43t1aNjkWmddAMnqF+/v0Fbxr/40wiIw==)\n\nstruggled
        a little ... &gt; is different to &lt;\n\n\\&gt;.&lt;", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAcAQAAAAAAAAAwj0nnQ6yuooRtagbXoWJ9RuFr7bhkIrNFsjKrxwgSBfwi5aL/NEVRsHXiA5HwY7h+pGbMSOZ5u6bi5K1CzKb1spLXabEbI953DSaSHvGCg9vsKzJ9sbEZuwTan8rckzr4136v/qAbvbtueJMeb8aTUxjsyl0OdO1hCGeFNWMIZQnfiYSbN1hZk1eeAG9pZZvsWepJ76If4DuOFDN+U8uvHPB0nxUS7UiDNg43t1aNjkWmddAMnqF+/v0Fbxr/40wiIw==\"&gt;Python
        (3083/3028)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;struggled a little ... &amp;gt;
        is different to &amp;lt;&lt;/p&gt;\n\n&lt;p&gt;&amp;gt;.&amp;lt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgtwj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgtwj", "created":
        1638336586.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638351200.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrgwdu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Perska_",
        "can_mod_post": false, "created_utc": 1638336626.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_h9flk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# https://github.com/Perska/AoC2021/blob/master/AoC2021/Days/Day01.cs\n\nIt''s
        a pretty good start for me. Took a little over 10 minutes for the whole thing.  \nNote,
        the Day01 method is called by a launcher sort of thing. It passes the input
        as a string list.  \n`[NoTrailingNewLine]` is checked for by the launcher,
        and if present, it won''t add a trailing newline if not provided by the user.
        Normally it does that.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#
        &lt;a href=\"https://github.com/Perska/AoC2021/blob/master/AoC2021/Days/Day01.cs\"&gt;https://github.com/Perska/AoC2021/blob/master/AoC2021/Days/Day01.cs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s
        a pretty good start for me. Took a little over 10 minutes for the whole thing.&lt;br/&gt;\nNote,
        the Day01 method is called by a launcher sort of thing. It passes the input
        as a string list.&lt;br/&gt;\n&lt;code&gt;[NoTrailingNewLine]&lt;/code&gt;
        is checked for by the launcher, and if present, it won&amp;#39;t add a trailing
        newline if not provided by the user. Normally it does that.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgwdu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgwdu", "created":
        1638336626.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmryyf7", "id": "hmryyf7", "parent_id":
        "t1_hmrgwdu", "depth": 1, "children": ["hmryyf7"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrgytd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pred",
        "can_mod_post": false, "created_utc": 1638336666.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3zds9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hello 504 Gateway Timeout my old friend. Probably cost a whole bunch of points
        again.\n\nPython 3\n\n\n    import pandas as pd\n    \n    with open(\"input\")
        as f:\n        ns = pd.Series(map(int, (x.strip() for x in f.readlines())))\n    \n    #
        Part one\n    print((ns &gt; ns.shift(1)).sum())\n    \n    # Part two\n    s
        = ns.rolling(3).sum()\n    print((s &gt; s.shift(1)).sum())", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Hello 504 Gateway Timeout my old friend.
        Probably cost a whole bunch of points again.&lt;/p&gt;\n\n&lt;p&gt;Python
        3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import pandas as pd\n\nwith open(&amp;quot;input&amp;quot;)
        as f:\n    ns = pd.Series(map(int, (x.strip() for x in f.readlines())))\n\n#
        Part one\nprint((ns &amp;gt; ns.shift(1)).sum())\n\n# Part two\ns = ns.rolling(3).sum()\nprint((s
        &amp;gt; s.shift(1)).sum())\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgytd/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrgytd", "created": 1638336666.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmrh2ga", "id": "hmrh2ga", "parent_id": "t1_hmrgytd", "depth": 1, "children":
        ["hmrh2ga"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrh9y9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MuricanToffee",
        "can_mod_post": false, "created_utc": 1638336843.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_vhqfqzz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Go, just a bunch of loops. Silly off-by-one error on the loop iteration in
        part 2 cost me a bunch of spots, but ended up 695/1446, which for the amount
        of typing Go requires feels pretty good.\n\n    func DayOneA(fp *bufio.Reader)
        string {\n        nums := readInputDayOne(fp)\n        count := 0\n        for
        i := 0; i &lt; len(nums)-1; i++ {\n            if nums[i] &lt; nums[i+1] {\n    \t    count++\n    \t}\n        }\n        return
        strconv.Itoa(count)\n    }\n    \n    func DayOneB(fp *bufio.Reader) string
        {\n        nums := readInputDayOne(fp)\n        count := 0\n        for i
        := 0; i &lt; len(nums)-3; i++ {\n            if nums[i]+nums[i+1]+nums[i+2]
        &lt; nums[i+1]+nums[i+2]+nums[i+3] {\n    \t    count++\n    \t}\n        }\n        return
        strconv.Itoa(count)\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go,
        just a bunch of loops. Silly off-by-one error on the loop iteration in part
        2 cost me a bunch of spots, but ended up 695/1446, which for the amount of
        typing Go requires feels pretty good.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func
        DayOneA(fp *bufio.Reader) string {\n    nums := readInputDayOne(fp)\n    count
        := 0\n    for i := 0; i &amp;lt; len(nums)-1; i++ {\n        if nums[i] &amp;lt;
        nums[i+1] {\n        count++\n    }\n    }\n    return strconv.Itoa(count)\n}\n\nfunc
        DayOneB(fp *bufio.Reader) string {\n    nums := readInputDayOne(fp)\n    count
        := 0\n    for i := 0; i &amp;lt; len(nums)-3; i++ {\n        if nums[i]+nums[i+1]+nums[i+2]
        &amp;lt; nums[i+1]+nums[i+2]+nums[i+3] {\n        count++\n    }\n    }\n    return
        strconv.Itoa(count)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrh9y9/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrh9y9", "created": 1638336843.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmrhz3m", "id": "hmrhz3m", "parent_id": "t1_hmrh9y9", "depth": 1, "children":
        ["hmrhz3m"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638338905.0,
        "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id":
        "t3_r66vow", "author_flair_template_id": null, "likes": null, "replies": "",
        "user_reports": [], "saved": false, "id": "hmrhfrf", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_r66vow", "score": 3, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "pointless
        (well, nearly) **Haskell:**\n\n    import Data.List (tails)\n    \n    parser
        :: String -&gt; [Int]\n    parser = map read . lines\n    \n    windows ::
        Int -&gt; [a] -&gt; [[a]]\n    windows n = filter ((== n) . length) . map
        (take n) . tails\n    \n    part1 :: [Int] -&gt; Int\n    part1 = length .
        filter (\\[x, y] -&gt; x &lt; y) . windows 2\n    \n    part2 :: [Int] -&gt;
        Int\n    part2 = part1 . map (\\[x, y, z] -&gt; x + y + z) . windows 3\n\nNice
        classic first day AoC problem. Spent a few minutes fishing around on hoogle,
        hoping that the Haskell standard library had a sliding windows function somewhere
        in it, but luck was not on my slide.\n\n[full solution](https://github.com/oatberry/aoc2021-haskell/blob/main/src/Day1.hs)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmrhfrf",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;pointless
        (well, nearly) &lt;strong&gt;Haskell:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Data.List (tails)\n\nparser :: String -&amp;gt; [Int]\nparser = map read .
        lines\n\nwindows :: Int -&amp;gt; [a] -&amp;gt; [[a]]\nwindows n = filter
        ((== n) . length) . map (take n) . tails\n\npart1 :: [Int] -&amp;gt; Int\npart1
        = length . filter (\\[x, y] -&amp;gt; x &amp;lt; y) . windows 2\n\npart2 ::
        [Int] -&amp;gt; Int\npart2 = part1 . map (\\[x, y, z] -&amp;gt; x + y + z)
        . windows 3\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Nice classic first day
        AoC problem. Spent a few minutes fishing around on hoogle, hoping that the
        Haskell standard library had a sliding windows function somewhere in it, but
        luck was not on my slide.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/oatberry/aoc2021-haskell/blob/main/src/Day1.hs\"&gt;full
        solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhfrf/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638336936.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638336936.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638609721.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrhgz4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "abhin4v",
        "can_mod_post": false, "created_utc": 1638336956.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_1vlys", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Haskell (in GHCi)\n    \n    \u03bb&gt; input :: [Int] &lt;- map read .
        lines &lt;$&gt; readFile \"input1\"\n    \u03bb&gt; solve ns = length $ filter
        id $ zipWith (&lt;) ns $ tail ns\n    \u03bb&gt; solve input -- part 1\n    \u03bb&gt;
        sliding s = \\case { xs | length xs &gt;= s -&gt; take s xs : sliding s (drop
        1 xs); _ -&gt; [] }\n    \u03bb&gt; let z = map sum $ sliding 3 input in solve
        z -- part 2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Haskell
        (in GHCi)&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;\u03bb&amp;gt; input :: [Int]
        &amp;lt;- map read . lines &amp;lt;$&amp;gt; readFile &amp;quot;input1&amp;quot;\n\u03bb&amp;gt;
        solve ns = length $ filter id $ zipWith (&amp;lt;) ns $ tail ns\n\u03bb&amp;gt;
        solve input -- part 1\n\u03bb&amp;gt; sliding s = \\case { xs | length xs
        &amp;gt;= s -&amp;gt; take s xs : sliding s (drop 1 xs); _ -&amp;gt; [] }\n\u03bb&amp;gt;
        let z = map sum $ sliding 3 input in solve z -- part 2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhgz4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrhgz4", "created":
        1638336956.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrhtya",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mendelmunkis",
        "can_mod_post": false, "created_utc": 1638337165.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_96rj7khp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [C](https://github.com/mendelmunkis/AoC/blob/master/2021/sonar.c)\nmissed
        the obvious x+3 optimization", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://github.com/mendelmunkis/AoC/blob/master/2021/sonar.c\"&gt;C&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;missed
        the obvious x+3 optimization&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhtya/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrhtya", "created":
        1638337165.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrhubd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Fickle_Dragonfly4381",
        "can_mod_post": false, "created_utc": 1638337171.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_9t754u7x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Swift\n\nGitHub: https://github.com/ezfe/advent-of-code/blob/main/Sources/AdventOfCode/2021/2021%20Day%201.swift",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Swift&lt;/h1&gt;\n\n&lt;p&gt;GitHub:
        &lt;a href=\"https://github.com/ezfe/advent-of-code/blob/main/Sources/AdventOfCode/2021/2021%20Day%201.swift\"&gt;https://github.com/ezfe/advent-of-code/blob/main/Sources/AdventOfCode/2021/2021%20Day%201.swift&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhubd/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrhubd", "created":
        1638337171.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638374123.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmri3iq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mapthegod",
        "can_mod_post": false, "created_utc": 1638337325.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_2a9y3y6c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust\n\n    pub fn day1_generator(input: &amp;str) -&gt; Vec&lt;i32&gt; {\n        input.lines().map(|l|
        l.parse::&lt;i32&gt;().unwrap()).collect()\n    }\n    \n    pub fn part1(inputs:
        &amp;[i32]) -&gt; usize {\n        inputs.iter().zip(inputs[1..].iter()).filter(|(x,y)|
        y &gt; x).count()\n    }\n    \n    pub fn part2(inputs: &amp;[i32]) -&gt;
        usize {\n        let windows: Vec&lt;i32&gt; = inputs.windows(3).into_iter().map(|x|
        x.iter().sum()).collect();\n        windows.iter().zip(windows[1..].iter()).filter(|(x,y)|
        y &gt; x).count()\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn day1_generator(input: &amp;amp;str) -&amp;gt; Vec&amp;lt;i32&amp;gt; {\n    input.lines().map(|l|
        l.parse::&amp;lt;i32&amp;gt;().unwrap()).collect()\n}\n\npub fn part1(inputs:
        &amp;amp;[i32]) -&amp;gt; usize {\n    inputs.iter().zip(inputs[1..].iter()).filter(|(x,y)|
        y &amp;gt; x).count()\n}\n\npub fn part2(inputs: &amp;amp;[i32]) -&amp;gt;
        usize {\n    let windows: Vec&amp;lt;i32&amp;gt; = inputs.windows(3).into_iter().map(|x|
        x.iter().sum()).collect();\n    windows.iter().zip(windows[1..].iter()).filter(|(x,y)|
        y &amp;gt; x).count()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmri3iq/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmri3iq", "created": 1638337325.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmrju0z", "id": "hmrju0z", "parent_id": "t1_hmri3iq", "depth": 1, "children":
        ["hmrju0z"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638347109.0,
        "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmri5lq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mebeim",
        "can_mod_post": false, "created_utc": 1638337360.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_121hf2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "1044/348 - **[Python 3 solution](https://github.com/mebeim/aoc/blob/master/2021/solutions/day01.py)
        - [Walkthrough](https://github.com/mebeim/aoc/blob/master/2021/README.md)**\n\nDammit
        AoC server almost hugged to death again :'') managed to gain some positions
        back on P2 anyway.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;1044/348
        - &lt;strong&gt;&lt;a href=\"https://github.com/mebeim/aoc/blob/master/2021/solutions/day01.py\"&gt;Python
        3 solution&lt;/a&gt; - &lt;a href=\"https://github.com/mebeim/aoc/blob/master/2021/README.md\"&gt;Walkthrough&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Dammit
        AoC server almost hugged to death again :&amp;#39;) managed to gain some positions
        back on P2 anyway.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmri5lq/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmri5lq", "created":
        1638337360.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638338447.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrij5r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aexl",
        "can_mod_post": false, "created_utc": 1638337585.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6d4oe", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Julia**\n\n```\nfunction day01(input::String = readInput(joinpath(@__DIR__,
        \"..\", \"data\", \"day01.txt\")))\n    reports = parse.(Int, split(input))\n    sums
        = [a + b + c for (a, b, c) \u2208 zip(reports[1:end-2], reports[2:end-1],
        reports[3:end])]\n    return [count(diff(reports) .&gt; 0), count(diff(sums)
        .&gt; 0)]\nend\n```\nGithub: https://github.com/goggle/AdventOfCode2021.jl/blob/master/src/day01.jl",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Julia&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nfunction
        day01(input::String = readInput(joinpath(@__DIR__, &amp;quot;..&amp;quot;,
        &amp;quot;data&amp;quot;, &amp;quot;day01.txt&amp;quot;)))\n    reports =
        parse.(Int, split(input))\n    sums = [a + b + c for (a, b, c) \u2208 zip(reports[1:end-2],
        reports[2:end-1], reports[3:end])]\n    return [count(diff(reports) .&amp;gt;
        0), count(diff(sums) .&amp;gt; 0)]\nend\n&lt;/code&gt;\nGithub: &lt;a href=\"https://github.com/goggle/AdventOfCode2021.jl/blob/master/src/day01.jl\"&gt;https://github.com/goggle/AdventOfCode2021.jl/blob/master/src/day01.jl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrij5r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrij5r", "created":
        1638337585.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrvhyl", "id": "hmrvhyl", "parent_id":
        "t1_hmrij5r", "depth": 1, "children": ["hmrvhyl"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638367090.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrj5t0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "A-UNDERSCORE-D",
        "can_mod_post": false, "created_utc": 1638337966.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_16m0x2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python (but soon others)\nQuick and fun! though I did do a glorified len
        for part 1 initially!\n\nhttps://github.com/A-UNDERSCORE-D/aoc2021/blob/main/aoc/python/one.py\n\n#
        Rust\nIm still learning rust, but it makes me do bad things (like oneliners)\n\n\n    pub
        fn part_1(input: &amp;String) -&gt; usize {\n        let data = aoc_util::to_int_vec(input);\n        data.windows(2).map(|x|
        x[1] &gt; x[0]).filter(|x| *x).count()\n    }\n    \n    pub fn part_2(input:
        &amp;String) -&gt; usize {\n        let data = aoc_util::to_int_vec(input);\n    \n        data.windows(3)\n            .zip(data.windows(3).skip(1))\n            .map(|(a,
        b)| b.iter().sum::&lt;i64&gt;() &gt; a.iter().sum())\n            .filter(|x|
        *x)\n            .count()\n    }\n\nhttps://github.com/A-UNDERSCORE-D/aoc2021/blob/main/aoc/rust/src/days/one.rs\n\n#
        Golang\nThis was the  last of the three I did. It uses generics and a some
        other clever things!\n\nhttps://github.com/A-UNDERSCORE-D/aoc2021/blob/main/aoc/go/one/01.go",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python (but soon others)&lt;/h1&gt;\n\n&lt;p&gt;Quick
        and fun! though I did do a glorified len for part 1 initially!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/A-UNDERSCORE-D/aoc2021/blob/main/aoc/python/one.py\"&gt;https://github.com/A-UNDERSCORE-D/aoc2021/blob/main/aoc/python/one.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;Im
        still learning rust, but it makes me do bad things (like oneliners)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn part_1(input: &amp;amp;String) -&amp;gt; usize {\n    let data = aoc_util::to_int_vec(input);\n    data.windows(2).map(|x|
        x[1] &amp;gt; x[0]).filter(|x| *x).count()\n}\n\npub fn part_2(input: &amp;amp;String)
        -&amp;gt; usize {\n    let data = aoc_util::to_int_vec(input);\n\n    data.windows(3)\n        .zip(data.windows(3).skip(1))\n        .map(|(a,
        b)| b.iter().sum::&amp;lt;i64&amp;gt;() &amp;gt; a.iter().sum())\n        .filter(|x|
        *x)\n        .count()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/A-UNDERSCORE-D/aoc2021/blob/main/aoc/rust/src/days/one.rs\"&gt;https://github.com/A-UNDERSCORE-D/aoc2021/blob/main/aoc/rust/src/days/one.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;h1&gt;Golang&lt;/h1&gt;\n\n&lt;p&gt;This
        was the  last of the three I did. It uses generics and a some other clever
        things!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/A-UNDERSCORE-D/aoc2021/blob/main/aoc/go/one/01.go\"&gt;https://github.com/A-UNDERSCORE-D/aoc2021/blob/main/aoc/go/one/01.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrj5t0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrj5t0", "created":
        1638337966.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrjao5", "id": "hmrjao5", "parent_id":
        "t1_hmrj5t0", "depth": 1, "children": ["hmrjao5"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638350702.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrjc73", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tav_stuff",
        "can_mod_post": false, "created_utc": 1638338074.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_16xadj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Shell Script / AWK\n\n```\npaste -s input | awk ''{ for (i = 1; i &lt;= NF;
        i++) c += $i &lt; $(i + 1) } END { print c }''\n```\n\nFor part 2 just replace
        +1 with +3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Shell
        Script / AWK&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\npaste -s input | awk &amp;#39;{
        for (i = 1; i &amp;lt;= NF; i++) c += $i &amp;lt; $(i + 1) } END { print c
        }&amp;#39;\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;For part 2 just replace +1
        with +3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrjc73/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrjc73", "created":
        1638338074.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrk2jn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Fjodleik",
        "can_mod_post": false, "created_utc": 1638338519.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6yrto", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[OCaml](https://topaz.github.io/paste/#XQAAAQAHAwAAAAAAAAA3nAjOjW0R9BR+TYLbPSybziZfZ7l24/cmnSMX+7y7iUz6YNm6gMIDzIvBg5DpYR3/ogc4A0NOTMomVfvcrVIfFOxuPQ+MUiCNx/iQkdRsK/xQbzUU7KDFz4glcSIGDgyuzQpAk/xkq1NcsLg9oVs+aiJUqNmr41NOyLfMoJ6h5xyDe6p5g+wRGP48ikFFHi52CqXcNhhxoIvAFPCNjxDLF5qM+TMMjpmy7AtoiLOKSxCqUPKibeFkhwfO9c1hFT25qSQ9XzTUCZbwLG4u7+d47cdYgHe+8Xb7mtTyWzBZ4uG21CmYJd/ENXgM5W94sVCGjUMAP6HE/hEmGPMvp3ePE6E/jccakeZIk7PGL1Zcm/Mk/BWSTw8vPo7DF/eaobeDmWlkcSXAIGEiEqZMLrV8Yey3ffpHoXrt+NPhDrZhW7glx/JkU6/+v3Pw)\n\nSuper
        straightforward solution with no fanciness. I''m using AoC to teach myself
        OCaml this year after the great experience using Elm in 2019. So far I''m
        spending quite some time to track down which libraries people use, like extlib
        or Core, since the standard library is a bit sparse.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAHAwAAAAAAAAA3nAjOjW0R9BR+TYLbPSybziZfZ7l24/cmnSMX+7y7iUz6YNm6gMIDzIvBg5DpYR3/ogc4A0NOTMomVfvcrVIfFOxuPQ+MUiCNx/iQkdRsK/xQbzUU7KDFz4glcSIGDgyuzQpAk/xkq1NcsLg9oVs+aiJUqNmr41NOyLfMoJ6h5xyDe6p5g+wRGP48ikFFHi52CqXcNhhxoIvAFPCNjxDLF5qM+TMMjpmy7AtoiLOKSxCqUPKibeFkhwfO9c1hFT25qSQ9XzTUCZbwLG4u7+d47cdYgHe+8Xb7mtTyWzBZ4uG21CmYJd/ENXgM5W94sVCGjUMAP6HE/hEmGPMvp3ePE6E/jccakeZIk7PGL1Zcm/Mk/BWSTw8vPo7DF/eaobeDmWlkcSXAIGEiEqZMLrV8Yey3ffpHoXrt+NPhDrZhW7glx/JkU6/+v3Pw\"&gt;OCaml&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Super
        straightforward solution with no fanciness. I&amp;#39;m using AoC to teach
        myself OCaml this year after the great experience using Elm in 2019. So far
        I&amp;#39;m spending quite some time to track down which libraries people
        use, like extlib or Core, since the standard library is a bit sparse.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrk2jn/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrk2jn", "created":
        1638338519.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638338899.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrkcyf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Conceptizual",
        "can_mod_post": false, "created_utc": 1638338700.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_f996y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "https://github.com/ElizabethViera/AdventOfCode/blob/main/AdventOfCode2021/Day%201/Day1.py\n\nSlowed
        down a bit because I forgot to convert my array to int at first, so my problem
        one was doing a lexicographic comparison, which had me being subtly off for
        large input and correct on small input. All day I was thinking about how the
        first day would be easy because it''s usually just adding or something, but
        I forgot that day 1 is the day where you make all the random ''it''s been
        a year since I did this'' mistakes.\n\nBasic Python solution! I guess my goal
        for this year is to make my solutions a bit more readable? Maybe that''ll
        go out the window as they get more difficult.\n\nMy company''s interview process
        for managers involves looking over some bad code and doing a code review to
        verify they can give kind and constructive feedback to junior SWEs, and last
        year one of the managers asked if they could use my advent of code solution
        as the bad code sample. (I''d never write anything like my advent of code
        stuff for work.)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/ElizabethViera/AdventOfCode/blob/main/AdventOfCode2021/Day%201/Day1.py\"&gt;https://github.com/ElizabethViera/AdventOfCode/blob/main/AdventOfCode2021/Day%201/Day1.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Slowed
        down a bit because I forgot to convert my array to int at first, so my problem
        one was doing a lexicographic comparison, which had me being subtly off for
        large input and correct on small input. All day I was thinking about how the
        first day would be easy because it&amp;#39;s usually just adding or something,
        but I forgot that day 1 is the day where you make all the random &amp;#39;it&amp;#39;s
        been a year since I did this&amp;#39; mistakes.&lt;/p&gt;\n\n&lt;p&gt;Basic
        Python solution! I guess my goal for this year is to make my solutions a bit
        more readable? Maybe that&amp;#39;ll go out the window as they get more difficult.&lt;/p&gt;\n\n&lt;p&gt;My
        company&amp;#39;s interview process for managers involves looking over some
        bad code and doing a code review to verify they can give kind and constructive
        feedback to junior SWEs, and last year one of the managers asked if they could
        use my advent of code solution as the bad code sample. (I&amp;#39;d never
        write anything like my advent of code stuff for work.)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrkcyf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrkcyf", "created":
        1638338700.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrkn0z",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SyntaxErrorAtLine420",
        "can_mod_post": false, "created_utc": 1638338877.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_7efwoqvt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript\n\ni''m a terrible programmer. i am aware.\n\nthis solution is
        one of the smallest I have seen yet though at only 155 characters and 4 lines:\n```\n    const
        fs=require(\"fs\");\n    let a=fs.readFileSync(\"./input\",{encoding:\"ascii\"});b=a.split(\"\\n\");c=1;\n    for(i=1;i&lt;b.length;i++)if(b[i]&gt;b[i-1])c++;\n    console.log(c);\n```\nedit
        to fix pasting from vscode", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript&lt;/p&gt;\n\n&lt;p&gt;i&amp;#39;m
        a terrible programmer. i am aware.&lt;/p&gt;\n\n&lt;p&gt;this solution is
        one of the smallest I have seen yet though at only 155 characters and 4 lines:\n&lt;code&gt;\n    const
        fs=require(&amp;quot;fs&amp;quot;);\n    let a=fs.readFileSync(&amp;quot;./input&amp;quot;,{encoding:&amp;quot;ascii&amp;quot;});b=a.split(&amp;quot;\\n&amp;quot;);c=1;\n    for(i=1;i&amp;lt;b.length;i++)if(b[i]&amp;gt;b[i-1])c++;\n    console.log(c);\n&lt;/code&gt;\nedit
        to fix pasting from vscode&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrkn0z/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrkn0z", "created":
        1638338877.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmry1gk", "id": "hmry1gk", "parent_id":
        "t1_hmrkn0z", "depth": 1, "children": ["hmry1gk", "hmrm62k"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrlcda",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "HAEC_EST_SPARTA",
        "can_mod_post": false, "created_utc": 1638339331.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_eoa9y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Erlang\n\n## [Solution on GitHub](https://github.com/Andrew-William-Smith/advent-of-code/blob/2021-erlang/src/aoc2021_day01.erl)\n\nThis
        is my second day learning Erlang; I''m fairly happy with this solution given
        my inexperience.  I ended up writing a generic function to generate sliding
        windows of arbitrary lengths from lists; while this wasn''t really necessary
        to solve the problem, it gave me some good experience with the language.  If
        anyone is experienced with Erlang and sees anywhere that I could improve,
        please let me know!\n\nAlso making a return this year is a [severely overkill
        CI setup](https://github.com/Andrew-William-Smith/advent-of-code/runs/4377566555?check_suite_focus=true).  Making
        Dialyzer happy with my code honestly took longer than writing the solution
        itself: I had to restructure a portion of my common AoC library to avoid unused
        function warnings, which then presented some opaque type-related warnings
        that had to be resolved separately.  Lesson learned for future days!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Erlang&lt;/h1&gt;\n\n&lt;h2&gt;&lt;a href=\"https://github.com/Andrew-William-Smith/advent-of-code/blob/2021-erlang/src/aoc2021_day01.erl\"&gt;Solution
        on GitHub&lt;/a&gt;&lt;/h2&gt;\n\n&lt;p&gt;This is my second day learning
        Erlang; I&amp;#39;m fairly happy with this solution given my inexperience.  I
        ended up writing a generic function to generate sliding windows of arbitrary
        lengths from lists; while this wasn&amp;#39;t really necessary to solve the
        problem, it gave me some good experience with the language.  If anyone is
        experienced with Erlang and sees anywhere that I could improve, please let
        me know!&lt;/p&gt;\n\n&lt;p&gt;Also making a return this year is a &lt;a href=\"https://github.com/Andrew-William-Smith/advent-of-code/runs/4377566555?check_suite_focus=true\"&gt;severely
        overkill CI setup&lt;/a&gt;.  Making Dialyzer happy with my code honestly
        took longer than writing the solution itself: I had to restructure a portion
        of my common AoC library to avoid unused function warnings, which then presented
        some opaque type-related warnings that had to be resolved separately.  Lesson
        learned for future days!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrlcda/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrlcda", "created":
        1638339331.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmu8376", "id": "hmu8376", "parent_id":
        "t1_hmrlcda", "depth": 1, "children": ["hmu8376"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638410872.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrlp54", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "musifter",
        "can_mod_post": false, "created_utc": 1638339560.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_cwt0kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "dc (part 1 and 2)\n\nAnother year.  Another day 1 doable straight by dc.  Always
        a good sign.\n\n    dc -finput -e''[q]SX[lc1+sc]SI[z0=Xdlp&gt;IsplLx]SLdsp0sclLxlcp''\n    dc
        -finput -e''[q]SX[lc1+sc]SI[z0=Xli:dli;dli3-;d&gt;Ili1+silLx]SL0sc0:d1:d2:d3silLxlcp''\n\nEDIT:  And
        a combined version with a slightly different approach:\n    \n    dc -finput
        -e''[q]SX[lx1+sx]S1[ly1+sy]S2[z0=Xdli;p&gt;1dli1+3%dsi;p&gt;2li:plLx]SL0dsxsy0:pd0;p&gt;11:pd1;p&gt;12:p2silLxlxplyp''\n\nAnd
        for the curious, this is the script version with lots of comments:\nhttps://pastebin.com/bmLBeWr3",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;dc (part 1 and 2)&lt;/p&gt;\n\n&lt;p&gt;Another
        year.  Another day 1 doable straight by dc.  Always a good sign.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dc
        -finput -e&amp;#39;[q]SX[lc1+sc]SI[z0=Xdlp&amp;gt;IsplLx]SLdsp0sclLxlcp&amp;#39;\ndc
        -finput -e&amp;#39;[q]SX[lc1+sc]SI[z0=Xli:dli;dli3-;d&amp;gt;Ili1+silLx]SL0sc0:d1:d2:d3silLxlcp&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT:  And
        a combined version with a slightly different approach:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dc
        -finput -e&amp;#39;[q]SX[lx1+sx]S1[ly1+sy]S2[z0=Xdli;p&amp;gt;1dli1+3%dsi;p&amp;gt;2li:plLx]SL0dsxsy0:pd0;p&amp;gt;11:pd1;p&amp;gt;12:p2silLxlxplyp&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And
        for the curious, this is the script version with lots of comments:\n&lt;a
        href=\"https://pastebin.com/bmLBeWr3\"&gt;https://pastebin.com/bmLBeWr3&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrlp54/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrlp54", "created":
        1638339560.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrn3rv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "francescored94",
        "can_mod_post": false, "created_utc": 1638340468.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_1zam7kc6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nim solution\n\n    import system, strutils, sequtils, sugar\n    let list
        = system.io.readFile(\"./in01.txt\").split(\"\\n\").map(x=&gt;x.parseInt())\n    proc
        parts(t: int): int =\n        var incr = 0\n        for i in t..&lt;list.len:\n            if
        list[i]&gt;list[i-t]:\n                inc incr\n        return incr\n\n    echo
        \"p1: \", parts(1)\n    echo \"p2: \", parts(3)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Nim solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        system, strutils, sequtils, sugar\nlet list = system.io.readFile(&amp;quot;./in01.txt&amp;quot;).split(&amp;quot;\\n&amp;quot;).map(x=&amp;gt;x.parseInt())\nproc
        parts(t: int): int =\n    var incr = 0\n    for i in t..&amp;lt;list.len:\n        if
        list[i]&amp;gt;list[i-t]:\n            inc incr\n    return incr\n\necho &amp;quot;p1:
        &amp;quot;, parts(1)\necho &amp;quot;p2: &amp;quot;, parts(3)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrn3rv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrn3rv", "created":
        1638340468.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmt7yre", "id": "hmt7yre", "parent_id":
        "t1_hmrn3rv", "depth": 1, "children": ["hmt7yre", "hmrnd8a"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmro017",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CodingAP",
        "can_mod_post": false, "created_utc": 1638341065.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_2mtc4ku", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "https://github.com/CodingAP/advent-of-code/tree/main/years/2021/day1\n\nWe
        started good today. Used js and got top 500 which is pretty good.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/CodingAP/advent-of-code/tree/main/years/2021/day1\"&gt;https://github.com/CodingAP/advent-of-code/tree/main/years/2021/day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;We
        started good today. Used js and got top 500 which is pretty good.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmro017/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmro017", "created":
        1638341065.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638356605.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmroyew", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "shookees",
        "can_mod_post": false, "created_utc": 1638341727.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6cpj7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python with zip](https://gitlab.com/aoc4/2021/-/blob/main/day1/day.py),
        a nice refresher:\n\n    from typing import List\n    \n    \n    def solution1(data:
        List[int]) -&gt; int:\n        # Look at pairs and check that second value
        is bigger\n        return sum(a &lt; b for a, b in zip(data, data[1:]))\n    \n    \n    def
        solution2(data: List[int]) -&gt; int:\n        # simply a moving window of
        3 measurements\n        window = list(zip(data, data[1:], data[2:]))  # can''t
        use subscription otherwise\n        return sum(sum(a) &lt; sum(b) for a, b
        in zip(window, window[1:]))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://gitlab.com/aoc4/2021/-/blob/main/day1/day.py\"&gt;Python with
        zip&lt;/a&gt;, a nice refresher:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        typing import List\n\n\ndef solution1(data: List[int]) -&amp;gt; int:\n    #
        Look at pairs and check that second value is bigger\n    return sum(a &amp;lt;
        b for a, b in zip(data, data[1:]))\n\n\ndef solution2(data: List[int]) -&amp;gt;
        int:\n    # simply a moving window of 3 measurements\n    window = list(zip(data,
        data[1:], data[2:]))  # can&amp;#39;t use subscription otherwise\n    return
        sum(sum(a) &amp;lt; sum(b) for a, b in zip(window, window[1:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmroyew/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmroyew", "created":
        1638341727.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrtwq2", "id": "hmrtwq2", "parent_id":
        "t1_hmroyew", "depth": 1, "children": ["hmrtwq2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmroz64",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "s3aker",
        "can_mod_post": false, "created_utc": 1638341742.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3xauwsi0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Raku](https://github.com/seaker/advent-of-code/blob/master/2021/01/s.raku)
        solution.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/seaker/advent-of-code/blob/master/2021/01/s.raku\"&gt;Raku&lt;/a&gt;
        solution.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmroz64/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmroz64", "created":
        1638341742.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638349668.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrpbj4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "overcow",
        "can_mod_post": false, "created_utc": 1638341991.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_5k244", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Clojure](https://github.com/motform/advent-of-clojure/blob/master/src/advent-of-clojure/2021/01.clj),
        seq manipulation through \\`partition-all\\`.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/motform/advent-of-clojure/blob/master/src/advent-of-clojure/2021/01.clj\"&gt;Clojure&lt;/a&gt;,
        seq manipulation through `partition-all`.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrpbj4/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrpbj4", "created": 1638341991.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_hmrtvop", "id": "hmrtvop", "parent_id": "t1_hmrpbj4", "depth": 1, "children":
        ["hmrtvop", "hmryfk9"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrpq3k", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "9_11_did_bush", "can_mod_post": false,
        "created_utc": 1638342275.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 3, "author_fullname": "t2_4p0249k", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Solutions in both
        OCaml and awk: https://github.com/chenson2018/advent-of-code/tree/main/2021/01",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solutions in both OCaml
        and awk: &lt;a href=\"https://github.com/chenson2018/advent-of-code/tree/main/2021/01\"&gt;https://github.com/chenson2018/advent-of-code/tree/main/2021/01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrpq3k/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrpq3k", "created":
        1638342275.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrqz3w",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "autra1",
        "can_mod_post": false, "created_utc": 1638343189.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_c9st0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "PostgreSQL, part2 (part1 is the same, but simpler). Day1 table contains each
        line of input along with line_number (to be able to order correctly):\n\n    \n    with
        sum as (\n      select\n        line_number,\n        line::int + lead(line,
        1) over w::int + lead(line, 2) over w::int as sum\n      from day1\n      window
        w as (order by line_number)\n    ),\n    diff as (\n      select\n        sum::int
        - lag(sum, 1) over (order by line_number)::int as diff\n      from sum\n    )\n    select\n      count(*)
        filter (where diff &gt; 0)\n    from diff\n    ;", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;PostgreSQL, part2 (part1 is the same, but simpler).
        Day1 table contains each line of input along with line_number (to be able
        to order correctly):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with sum as (\n  select\n    line_number,\n    line::int
        + lead(line, 1) over w::int + lead(line, 2) over w::int as sum\n  from day1\n  window
        w as (order by line_number)\n),\ndiff as (\n  select\n    sum::int - lag(sum,
        1) over (order by line_number)::int as diff\n  from sum\n)\nselect\n  count(*)
        filter (where diff &amp;gt; 0)\nfrom diff\n;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrqz3w/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrqz3w", "created":
        1638343189.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 7, "name": "t1_hmtjexx", "id": "hmtjexx", "parent_id":
        "t1_hmrqz3w", "depth": 1, "children": ["hmtjexx", "hmrt2wg"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638354678.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrr3my", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jenneh03",
        "can_mod_post": false, "created_utc": 1638343278.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3150lqjg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript / NodeJS\n\n    const path = require(''path'');\n    const fs
        = require(''fs'');\n    \n    const input = fs.readFileSync(path.join(__dirname,
        ''input.txt''))\n                    .toString()\n                    .trim()\n                    .split(''\\n'')\n                    .map(x
        =&gt; parseInt(x));\n    \n    function count_increases(depth)\n    {                \n        let
        count = 0;\n        for (let i = depth; i &lt; input.length; i++)\n        {\n            if
        (input[i-depth] &lt; input[i]) count++;\n        }\n        return count;\n    }\n    \n    console.log(count_increases(1));\n    console.log(count_increases(3));",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript / NodeJS&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        path = require(&amp;#39;path&amp;#39;);\nconst fs = require(&amp;#39;fs&amp;#39;);\n\nconst
        input = fs.readFileSync(path.join(__dirname, &amp;#39;input.txt&amp;#39;))\n                .toString()\n                .trim()\n                .split(&amp;#39;\\n&amp;#39;)\n                .map(x
        =&amp;gt; parseInt(x));\n\nfunction count_increases(depth)\n{                \n    let
        count = 0;\n    for (let i = depth; i &amp;lt; input.length; i++)\n    {\n        if
        (input[i-depth] &amp;lt; input[i]) count++;\n    }\n    return count;\n}\n\nconsole.log(count_increases(1));\nconsole.log(count_increases(3));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrr3my/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrr3my", "created":
        1638343278.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmryrqr", "id": "hmryrqr", "parent_id":
        "t1_hmrr3my", "depth": 1, "children": ["hmryrqr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638729514.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrsif1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "chkas",
        "can_mod_post": false, "created_utc": 1638344333.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_41wmaij", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**easylang**\n\n[Solution](https://easylang.online/aoc21/?day=1)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;easylang&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://easylang.online/aoc21/?day=1\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrsif1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrsif1", "created":
        1638344333.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrtb91",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gyorokpeter",
        "can_mod_post": false, "created_utc": 1638344946.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_spppp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Q**: part 2 totally owned by [```msum```](https://code.kx.com/q/ref/sum/#msum).\n\n    d1p1:{sum
        0&lt;1_deltas \"J\"$\"\\n\"vs x};\n    d1p2:{sum 0&lt;1_deltas 2_3 msum \"J\"$\"\\n\"vs
        x};", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;:
        part 2 totally owned by &lt;a href=\"https://code.kx.com/q/ref/sum/#msum\"&gt;&lt;code&gt;msum&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d1p1:{sum
        0&amp;lt;1_deltas &amp;quot;J&amp;quot;$&amp;quot;\\n&amp;quot;vs x};\nd1p2:{sum
        0&amp;lt;1_deltas 2_3 msum &amp;quot;J&amp;quot;$&amp;quot;\\n&amp;quot;vs
        x};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtb91/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrtb91", "created":
        1638344946.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrtk7y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmrtk7y", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtk7y/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638345135.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638345135.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmru54k", "id": "hmru54k", "parent_id":
        "t1_hmrtk7y", "depth": 1, "children": ["hmru54k"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrtqlt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ropecrawler",
        "can_mod_post": false, "created_utc": 1638345270.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_bih7f", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust with https://github.com/gobanos/cargo-aoc: https://github.com/ropewalker/advent\\_of\\_code\\_2021/blob/master/src/day01.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust with &lt;a href=\"https://github.com/gobanos/cargo-aoc:\"&gt;https://github.com/gobanos/cargo-aoc:&lt;/a&gt;
        &lt;a href=\"https://github.com/ropewalker/advent%5C_of%5C_code%5C_2021/blob/master/src/day01.rs\"&gt;https://github.com/ropewalker/advent\\_of\\_code\\_2021/blob/master/src/day01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtqlt/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrtqlt", "created":
        1638345270.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmru1tr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**Common Lisp** - definitely won''t be the most concise
        solution in this language on this thread! I picked it up for the first time
        yesterday and feel like I''m brutalizing the language a bit\n\n```\n(load
        \"utilities.lisp\")\n\n(defparameter filename \n    (nth 1 sb-ext:*posix-argv*))\n\n(defparameter
        numbers \n    (mapcar #''parse-integer \n        (get-file-lines filename)))\n\n(defun
        nil-to-zero \n    (x) \n    (cond \n        (\n            (eql x nil) 0)
        \n        (\n            (eql x t) 1)))\n\n(defun solve-part-one \n    (numbers)\n    (apply
        #''+ \n        (mapcar ''nil-to-zero \n            (mapcar #''&lt; numbers
        \n                (cdr numbers))))\n)\n\n(defun solve-part-two\n    (numbers)\n    (let
        \n        (            (threesums\n                (mapcar #''+ numbers \n                    (cdr
        numbers) \n                    (cdr \n                        (cdr numbers)))))\n        (apply
        #''+ \n            (mapcar ''nil-to-zero \n                (mapcar #''&lt;
        threesums \n                    (cdr threesums))))\n)\n)\n\n(format t \"Part1:
        ~d~C\" \n    (solve-part-one numbers) #\\linefeed)\n\n(format t \"Part1: ~d~C\"
        \n    (solve-part-two numbers) #\\linefeed)\n```", "awarders": [], "downs":
        0, "author_flair_css_class": null, "name": "t1_hmru1tr", "collapsed": false,
        "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Common
        Lisp&lt;/strong&gt; - definitely won&amp;#39;t be the most concise solution
        in this language on this thread! I picked it up for the first time yesterday
        and feel like I&amp;#39;m brutalizing the language a bit&lt;/p&gt;\n\n&lt;p&gt;```\n(load
        &amp;quot;utilities.lisp&amp;quot;)&lt;/p&gt;\n\n&lt;p&gt;(defparameter filename
        \n    (nth 1 sb-ext:&lt;em&gt;posix-argv&lt;/em&gt;))&lt;/p&gt;\n\n&lt;p&gt;(defparameter
        numbers \n    (mapcar #&amp;#39;parse-integer \n        (get-file-lines filename)))&lt;/p&gt;\n\n&lt;p&gt;(defun
        nil-to-zero \n    (x) \n    (cond \n        (\n            (eql x nil) 0)
        \n        (\n            (eql x t) 1)))&lt;/p&gt;\n\n&lt;p&gt;(defun solve-part-one
        \n    (numbers)\n    (apply #&amp;#39;+ \n        (mapcar &amp;#39;nil-to-zero
        \n            (mapcar #&amp;#39;&amp;lt; numbers \n                (cdr numbers))))\n)&lt;/p&gt;\n\n&lt;p&gt;(defun
        solve-part-two\n    (numbers)\n    (let \n        (            (threesums\n                (mapcar
        #&amp;#39;+ numbers \n                    (cdr numbers) \n                    (cdr
        \n                        (cdr numbers)))))\n        (apply #&amp;#39;+ \n            (mapcar
        &amp;#39;nil-to-zero \n                (mapcar #&amp;#39;&amp;lt; threesums
        \n                    (cdr threesums))))\n)\n)&lt;/p&gt;\n\n&lt;p&gt;(format
        t &amp;quot;Part1: ~d~C&amp;quot; \n    (solve-part-one numbers) #\\linefeed)&lt;/p&gt;\n\n&lt;p&gt;(format
        t &amp;quot;Part1: ~d~C&amp;quot; \n    (solve-part-two numbers) #\\linefeed)\n```&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmru1tr/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638345507.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638345507.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmruu3m", "id": "hmruu3m", "parent_id":
        "t1_hmru1tr", "depth": 1, "children": ["hmruu3m", "hmruetz"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638382226.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrua63", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "simonbaars",
        "can_mod_post": false, "created_utc": 1638345686.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_11dlo0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Haskell**\n\n[https://github.com/SimonBaars/AdventOfCode-Haskell/blob/master/2021/Day1.hs](https://github.com/SimonBaars/AdventOfCode-Haskell/blob/master/2021/Day1.hs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Haskell&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/SimonBaars/AdventOfCode-Haskell/blob/master/2021/Day1.hs\"&gt;https://github.com/SimonBaars/AdventOfCode-Haskell/blob/master/2021/Day1.hs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrua63/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrua63", "created":
        1638345686.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmruc2k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "simonbaars",
        "can_mod_post": false, "created_utc": 1638345727.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_11dlo0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Java](https://github.com/SimonBaars/AdventOfCode-Java/blob/master/src/main/java/com/sbaars/adventofcode/year21/days/Day1.java)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/SimonBaars/AdventOfCode-Java/blob/master/src/main/java/com/sbaars/adventofcode/year21/days/Day1.java\"&gt;Java&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmruc2k/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmruc2k", "created":
        1638345727.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrupqc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "markmcw",
        "can_mod_post": false, "created_utc": 1638346021.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_im1fd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Learnt a bit about pandas in the last year so thought I''d use it for my
        solution to day 1.  \nI basically loaded my input into a pandas dataframe,
        diff''d the dataframe (which by default looks at the previous value), and
        then got a count of any positive numbers.\n\n  \nPart b I used pandas rolling
        calculator, gave it a window of 3. Diff''d it, and counted positive numbers
        again and it worked. Huzzah.  \n\n\nPython: [Code](https://github.com/mcmarkj/aventofcode2021/blob/main/advent/one/__main__.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Learnt a bit about pandas
        in the last year so thought I&amp;#39;d use it for my solution to day 1.&lt;br/&gt;\nI
        basically loaded my input into a pandas dataframe, diff&amp;#39;d the dataframe
        (which by default looks at the previous value), and then got a count of any
        positive numbers.&lt;/p&gt;\n\n&lt;p&gt;Part b I used pandas rolling calculator,
        gave it a window of 3. Diff&amp;#39;d it, and counted positive numbers again
        and it worked. Huzzah.  &lt;/p&gt;\n\n&lt;p&gt;Python: &lt;a href=\"https://github.com/mcmarkj/aventofcode2021/blob/main/advent/one/__main__.py\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrupqc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrupqc", "created":
        1638346021.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrushh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmrushh", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrushh/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638346082.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638346082.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmsisp3", "id": "hmsisp3", "parent_id":
        "t1_hmrushh", "depth": 1, "children": ["hmsisp3"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638347234.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrusos", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Gnidleif",
        "can_mod_post": false, "created_utc": 1638346087.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_xdr49", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\n*Note: I started learning Rust just last week so feel free to
        give any advice to make the code better.*\n\npart 1:\n\n    fn d1p1(input:
        String) -&gt; u16 {\n        let mut sum = 0;\n        let lines: Vec&lt;u16&gt;
        = input.lines().map(|x| x.parse::&lt;u16&gt;().unwrap()).collect();\n        for
        i in 1..lines.len() {\n            if lines[i] &gt; lines[i - 1] {\n                sum
        += 1;\n            }\n        }\n        \n        sum\n    }\n\npart 2:\n\n    fn
        d1p2(input: String) -&gt; u16 {\n        let mut sum = 0;\n        let lines:
        Vec&lt;u16&gt; = input.lines().map(|x| x.parse::&lt;u16&gt;().unwrap()).collect();\n        let
        mut last = lines[0..3].iter().sum::&lt;u16&gt;();\n        for i in 1..lines.len()
        - 2 {\n            let current = lines[i..i+3].iter().sum::&lt;u16&gt;();\n            if
        current &gt; last {\n                sum += 1;\n            }\n            last
        = current;\n        }\n        \n        sum\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Note:
        I started learning Rust just last week so feel free to give any advice to
        make the code better.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        d1p1(input: String) -&amp;gt; u16 {\n    let mut sum = 0;\n    let lines:
        Vec&amp;lt;u16&amp;gt; = input.lines().map(|x| x.parse::&amp;lt;u16&amp;gt;().unwrap()).collect();\n    for
        i in 1..lines.len() {\n        if lines[i] &amp;gt; lines[i - 1] {\n            sum
        += 1;\n        }\n    }\n\n    sum\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn d1p2(input: String) -&amp;gt; u16
        {\n    let mut sum = 0;\n    let lines: Vec&amp;lt;u16&amp;gt; = input.lines().map(|x|
        x.parse::&amp;lt;u16&amp;gt;().unwrap()).collect();\n    let mut last = lines[0..3].iter().sum::&amp;lt;u16&amp;gt;();\n    for
        i in 1..lines.len() - 2 {\n        let current = lines[i..i+3].iter().sum::&amp;lt;u16&amp;gt;();\n        if
        current &amp;gt; last {\n            sum += 1;\n        }\n        last =
        current;\n    }\n\n    sum\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrusos/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrusos", "created": 1638346087.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 7, "name":
        "t1_hms1ymg", "id": "hms1ymg", "parent_id": "t1_hmrusos", "depth": 1, "children":
        ["hms1ymg", "hmrycgk"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrvf0v", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "DearRude", "can_mod_post": false, "created_utc":
        1638346583.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_6cudl1j", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Solutions in Julia\n\nhttps://github.com/DearRude/advent-of-code/tree/main/2021/day-01",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solutions in Julia&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/DearRude/advent-of-code/tree/main/2021/day-01\"&gt;https://github.com/DearRude/advent-of-code/tree/main/2021/day-01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrvf0v/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrvf0v", "created":
        1638346583.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hms0zh3", "id": "hms0zh3", "parent_id":
        "t1_hmrvf0v", "depth": 1, "children": ["hms0zh3"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrw9fx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lgeorget",
        "can_mod_post": false, "created_utc": 1638347265.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_4j0c6r8a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution in C++, straightforward (not very pretty in my opinion, though).\n\n
        https://github.com/lgeorget/adventofcode2021/tree/main/01", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Solution in C++, straightforward (not very
        pretty in my opinion, though).&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/lgeorget/adventofcode2021/tree/main/01\"&gt;https://github.com/lgeorget/adventofcode2021/tree/main/01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrw9fx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrw9fx", "created":
        1638347265.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hms9tfd", "id": "hms9tfd", "parent_id":
        "t1_hmrw9fx", "depth": 1, "children": ["hms9tfd"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrwt4h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "andrewsredditstuff",
        "can_mod_post": false, "created_utc": 1638347730.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_2h5225av", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n\nNot sophisticated (would be better in LINQ), but hey, it''s early,
        and it works.\n\n[github](https://github.com/andrewscodedump/Advent/blob/master/2021/Done/Days01-05/Day01.cs)\n\nLoving
        the improved intellicode in VS2022.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;p&gt;Not sophisticated (would
        be better in LINQ), but hey, it&amp;#39;s early, and it works.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/andrewscodedump/Advent/blob/master/2021/Done/Days01-05/Day01.cs\"&gt;github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Loving
        the improved intellicode in VS2022.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrwt4h/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrwt4h", "created": 1638347730.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrwtvs", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "semicolonator", "can_mod_post": false,
        "created_utc": 1638347747.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 3, "author_fullname": "t2_11inux", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Python\n```python\n\nfrom
        itertools import pairwise\nfrom more_itertools import windowed\n\nwith open(\"input.txt\")
        as f:\n    depths = [int(x) for x in f]\n\nprint(sum(b &gt; a for a, b in
        pairwise(depths)))\nprint(sum(sum(b) &gt; sum(a) for a, b in pairwise(windowed(depths,
        3))))\n\n```\nhttps://github.com/r0f1/adventofcode2021/blob/master/day01/main.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python\n```python&lt;/p&gt;\n\n&lt;p&gt;from
        itertools import pairwise\nfrom more_itertools import windowed&lt;/p&gt;\n\n&lt;p&gt;with
        open(&amp;quot;input.txt&amp;quot;) as f:\n    depths = [int(x) for x in f]&lt;/p&gt;\n\n&lt;p&gt;print(sum(b
        &amp;gt; a for a, b in pairwise(depths)))\nprint(sum(sum(b) &amp;gt; sum(a)
        for a, b in pairwise(windowed(depths, 3))))&lt;/p&gt;\n\n&lt;p&gt;```\n&lt;a
        href=\"https://github.com/r0f1/adventofcode2021/blob/master/day01/main.py\"&gt;https://github.com/r0f1/adventofcode2021/blob/master/day01/main.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrwtvs/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrwtvs", "created":
        1638347747.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrxvh4", "id": "hmrxvh4", "parent_id":
        "t1_hmrwtvs", "depth": 1, "children": ["hmrxvh4"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638351889.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrynpr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SurplusSix",
        "can_mod_post": false, "created_utc": 1638349276.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_7453u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Crystal\n\n    class Day1\n      property input : Array(Int32)\n    \n      def
        initialize(f : String)\n        @input = File.read_lines(f).map &amp;.to_i32\n      end\n    \n      def
        part1\n        @input.each.cons_pair.count { |(a, b)| b &gt; a }\n      end\n    \n      def
        part2\n        @input.each.cons(3).cons_pair.count { |(a, b)| b.sum &gt; a.sum
        }\n      end\n    end\n    \n    d = Day1.new(\"day1.txt\")\n    pp d.part1\n    pp
        d.part2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Crystal&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class
        Day1\n  property input : Array(Int32)\n\n  def initialize(f : String)\n    @input
        = File.read_lines(f).map &amp;amp;.to_i32\n  end\n\n  def part1\n    @input.each.cons_pair.count
        { |(a, b)| b &amp;gt; a }\n  end\n\n  def part2\n    @input.each.cons(3).cons_pair.count
        { |(a, b)| b.sum &amp;gt; a.sum }\n  end\nend\n\nd = Day1.new(&amp;quot;day1.txt&amp;quot;)\npp
        d.part1\npp d.part2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrynpr/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrynpr", "created": 1638349276.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638388751.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmryvkc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "yomanidkman",
        "can_mod_post": false, "created_utc": 1638349464.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_45bbifhf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "kotlin!\n\n[https://github.com/MarcusDunn/aoc2021/blob/master/01.kt](https://github.com/MarcusDunn/aoc2021/blob/master/src/main/kotlin/01.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;kotlin!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/MarcusDunn/aoc2021/blob/master/src/main/kotlin/01.kt\"&gt;https://github.com/MarcusDunn/aoc2021/blob/master/01.kt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmryvkc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmryvkc", "created":
        1638349464.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hms77f2", "id": "hms77f2", "parent_id":
        "t1_hmryvkc", "depth": 1, "children": ["hms77f2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrz6ix",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "eXodiquas",
        "can_mod_post": false, "created_utc": 1638349729.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_17egvk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Common Lisp, as much as possible via loop macro.\n\n    ;;;; Advent of Code
        2021 - Day 1\n    (defun read-input (path)\n    \"Reads a file at PATH line
        by line and returns a list of every line, trimmed by new-lines.\"\n      (with-open-file
        (stream path)\n        (loop for line = (read-line stream nil)\n    \t  while
        line\n    \t  collect (parse-integer (string-trim ''() line)))))\n    \n    (defun
        solve-1 (path)\n      (let* ((i1 (read-input path))\n    \t (i2 (cdr i1)))\n        (loop
        for x in i1\n    \t  for y in i2\n    \t  count (&gt; y x))))\n    \n    (defun
        solve-2 (path)\n      (let* ((i1 (read-input path))\n    \t (i2 (cdr i1)))\n        (loop
        for (x1 x2 x3) on i1 by #''cdr\n    \t  for (y1 y2 y3) on i2 by #''cdr\n    \t  when
        (and x1 x2 x3 y1 y3 y3)\n    \t  count (&gt; (+ y1 y2 y3) (+ x1 x2 x3)))))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Common Lisp, as much
        as possible via loop macro.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;;;;; Advent
        of Code 2021 - Day 1\n(defun read-input (path)\n&amp;quot;Reads a file at
        PATH line by line and returns a list of every line, trimmed by new-lines.&amp;quot;\n  (with-open-file
        (stream path)\n    (loop for line = (read-line stream nil)\n      while line\n      collect
        (parse-integer (string-trim &amp;#39;() line)))))\n\n(defun solve-1 (path)\n  (let*
        ((i1 (read-input path))\n     (i2 (cdr i1)))\n    (loop for x in i1\n      for
        y in i2\n      count (&amp;gt; y x))))\n\n(defun solve-2 (path)\n  (let* ((i1
        (read-input path))\n     (i2 (cdr i1)))\n    (loop for (x1 x2 x3) on i1 by
        #&amp;#39;cdr\n      for (y1 y2 y3) on i2 by #&amp;#39;cdr\n      when (and
        x1 x2 x3 y1 y3 y3)\n      count (&amp;gt; (+ y1 y2 y3) (+ x1 x2 x3)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrz6ix/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrz6ix", "created":
        1638349729.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms0q3g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "enonatan",
        "can_mod_post": false, "created_utc": 1638351082.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_h3zzdxdt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solved in my own [esolang RASEL](https://github.com/Nakilon/rasel).  \nPart
        1:\n\n    &amp; &amp;v:2\\-?v1\\1-1\\&gt;#\n       &gt;? -.@&gt;      ^\n\nPart
        2:\n\n    &amp; &amp; 1\\&amp; 3\\-v &gt;006\\-.@  &gt;04\\  v\n               &gt;&amp;^:5\\?
        1\\-?^04\\1-&gt;5\\?", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solved
        in my own &lt;a href=\"https://github.com/Nakilon/rasel\"&gt;esolang RASEL&lt;/a&gt;.&lt;br/&gt;\nPart
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;amp; &amp;amp;v:2\\-?v1\\1-1\\&amp;gt;#\n   &amp;gt;?
        -.@&amp;gt;      ^\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;amp;
        &amp;amp; 1\\&amp;amp; 3\\-v &amp;gt;006\\-.@  &amp;gt;04\\  v\n           &amp;gt;&amp;amp;^:5\\?
        1\\-?^04\\1-&amp;gt;5\\?\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms0q3g/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms0q3g", "created": 1638351082.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hms1l6z", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Dullstar", "can_mod_post": false, "created_utc":
        1638351840.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_oty64", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "[Python, using no external
        libraries](https://github.com/Dullstar/Advent_Of_Code/blob/main/python/year2021/day01.py).
        Today''s problem is pretty simple, so I doubt it''ll be much help today, but
        generally my main goal with my solutions (well, besides getting the correct
        answer in a reasonable amount of time, obviously) is to write them in such
        a way that someone who is having trouble with the problems can read through
        it and understand how it works.\n\nSome of the for loops sound like the sort
        of thing you might potentially find a function for in the built-in itertools
        module, but honestly checking literally would have taken several times longer
        than just DIYing it.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/Dullstar/Advent_Of_Code/blob/main/python/year2021/day01.py\"&gt;Python,
        using no external libraries&lt;/a&gt;. Today&amp;#39;s problem is pretty simple,
        so I doubt it&amp;#39;ll be much help today, but generally my main goal with
        my solutions (well, besides getting the correct answer in a reasonable amount
        of time, obviously) is to write them in such a way that someone who is having
        trouble with the problems can read through it and understand how it works.&lt;/p&gt;\n\n&lt;p&gt;Some
        of the for loops sound like the sort of thing you might potentially find a
        function for in the built-in itertools module, but honestly checking literally
        would have taken several times longer than just DIYing it.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms1l6z/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms1l6z", "created":
        1638351840.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hms251d", "id": "hms251d", "parent_id":
        "t1_hms1l6z", "depth": 1, "children": ["hms251d"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638352973.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms2fe6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Small-Shirt898",
        "can_mod_post": false, "created_utc": 1638352572.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_7dzxbi3c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My approach with [Haskell](https://github.com/rabbihossain/AdventOfCode/blob/master/2021/Day01.hs).
        Suggestions are welcome :)\n\n    module Day01 where\n    \n    increaseDecrease
        :: Ord a =&gt; [a] -&gt; [Bool]\n    increaseDecrease [] = []\n    increaseDecrease
        [_] = []\n    increaseDecrease (x : y : xs)\n      | x &lt; y = True : increaseDecrease
        (y : xs)\n      | otherwise = False : increaseDecrease (y : xs)\n    \n    increasedCount
        :: [Bool] -&gt; Int\n    increasedCount = length . filter id\n    \n    slidedItems
        :: Num a =&gt; [a] -&gt; [a]\n    slidedItems [] = []\n    slidedItems [_]
        = []\n    slidedItems [_, _] = []\n    slidedItems (x : y : z : xs) = (x +
        y + z) : slidedItems (y : z : xs)\n    \n    partOne :: (Ord a, Num a) =&gt;
        [a] -&gt; Int\n    partOne = increasedCount . increaseDecrease\n    \n    partTwo
        :: (Ord a, Num a) =&gt; [a] -&gt; Int\n    partTwo = increasedCount . increaseDecrease
        . slidedItems\n    \n    solution :: (Ord a, Num a) =&gt; [a] -&gt; (Int,
        Int)\n    solution input = (partOne input, partTwo input)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My approach with &lt;a href=\"https://github.com/rabbihossain/AdventOfCode/blob/master/2021/Day01.hs\"&gt;Haskell&lt;/a&gt;.
        Suggestions are welcome :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module Day01
        where\n\nincreaseDecrease :: Ord a =&amp;gt; [a] -&amp;gt; [Bool]\nincreaseDecrease
        [] = []\nincreaseDecrease [_] = []\nincreaseDecrease (x : y : xs)\n  | x &amp;lt;
        y = True : increaseDecrease (y : xs)\n  | otherwise = False : increaseDecrease
        (y : xs)\n\nincreasedCount :: [Bool] -&amp;gt; Int\nincreasedCount = length
        . filter id\n\nslidedItems :: Num a =&amp;gt; [a] -&amp;gt; [a]\nslidedItems
        [] = []\nslidedItems [_] = []\nslidedItems [_, _] = []\nslidedItems (x : y
        : z : xs) = (x + y + z) : slidedItems (y : z : xs)\n\npartOne :: (Ord a, Num
        a) =&amp;gt; [a] -&amp;gt; Int\npartOne = increasedCount . increaseDecrease\n\npartTwo
        :: (Ord a, Num a) =&amp;gt; [a] -&amp;gt; Int\npartTwo = increasedCount .
        increaseDecrease . slidedItems\n\nsolution :: (Ord a, Num a) =&amp;gt; [a]
        -&amp;gt; (Int, Int)\nsolution input = (partOne input, partTwo input)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms2fe6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms2fe6", "created":
        1638352572.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hms3s80", "id": "hms3s80", "parent_id":
        "t1_hms2fe6", "depth": 1, "children": ["hms3s80"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638362999.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms2udb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "toastedstapler",
        "can_mod_post": false, "created_utc": 1638352935.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_ck238", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# zig\n\n    fn loadNumbers(contents: []u8, allocator: *std.mem.Allocator)
        ![]usize {\n        var numbers = ArrayList(usize).init(allocator);\n        errdefer
        numbers.deinit();\n    \n        var lines = std.mem.tokenize(u8, contents,
        \"\\n\");\n        while (lines.next()) |line|\n            try numbers.append(try
        std.fmt.parseInt(usize, line, 10));\n    \n        return numbers.toOwnedSlice();\n    }\n\n    fn
        part1(numbers: []usize) usize {\n        return solve(numbers, 1);\n    }\n    \n    fn
        part2(numbers: []usize) usize {\n        return solve(numbers, 3);\n    }\n    \n    fn
        solve(numbers: []usize, dist: usize) usize {\n        var result: usize =
        0;\n    \n        for (numbers[0..numbers.len - dist]) |_, i| {\n            if
        (numbers[i] &lt; numbers[i + dist])\n                result += 1;\n        }\n    \n        return
        result;\n    }\n\npretty straight forward today, after writing a windowed
        part 2 i realised that all we needed to compare was a particular gap. this
        allowed me to use the same code for both parts. runs in about 35us on my 2018
        macbook (not counting loading input from disk to bytes, but including input
        parse time)\n\nedit: refactor to 0 allocation solution - down to 26us on macbook,
        16us on 10850k\n\n    fn solve(contents: []u8, p1: *usize, p2: *usize) !void
        {\n        var lines = std.mem.tokenize(u8, contents, \"\\n\");\n    \n        var
        parsed: [4]usize = undefined;\n        var n: usize = 0;\n    \n        while
        (lines.next()) |line| : (n += 1) {\n            parsed[n % parsed.len] = try
        std.fmt.parseInt(usize, line, 10);\n            if (n &gt;= 1 and parsed[n
        % parsed.len] &gt; parsed[(n - 1) % parsed.len]) {\n                p1.* +=
        1;\n            }\n            if (n &gt;= 3 and parsed[n % parsed.len] &gt;
        parsed[(n - 3) % parsed.len]) {\n                p2.* += 1;\n            }\n        }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;zig&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        loadNumbers(contents: []u8, allocator: *std.mem.Allocator) ![]usize {\n    var
        numbers = ArrayList(usize).init(allocator);\n    errdefer numbers.deinit();\n\n    var
        lines = std.mem.tokenize(u8, contents, &amp;quot;\\n&amp;quot;);\n    while
        (lines.next()) |line|\n        try numbers.append(try std.fmt.parseInt(usize,
        line, 10));\n\n    return numbers.toOwnedSlice();\n}\n\nfn part1(numbers:
        []usize) usize {\n    return solve(numbers, 1);\n}\n\nfn part2(numbers: []usize)
        usize {\n    return solve(numbers, 3);\n}\n\nfn solve(numbers: []usize, dist:
        usize) usize {\n    var result: usize = 0;\n\n    for (numbers[0..numbers.len
        - dist]) |_, i| {\n        if (numbers[i] &amp;lt; numbers[i + dist])\n            result
        += 1;\n    }\n\n    return result;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;pretty
        straight forward today, after writing a windowed part 2 i realised that all
        we needed to compare was a particular gap. this allowed me to use the same
        code for both parts. runs in about 35us on my 2018 macbook (not counting loading
        input from disk to bytes, but including input parse time)&lt;/p&gt;\n\n&lt;p&gt;edit:
        refactor to 0 allocation solution - down to 26us on macbook, 16us on 10850k&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        solve(contents: []u8, p1: *usize, p2: *usize) !void {\n    var lines = std.mem.tokenize(u8,
        contents, &amp;quot;\\n&amp;quot;);\n\n    var parsed: [4]usize = undefined;\n    var
        n: usize = 0;\n\n    while (lines.next()) |line| : (n += 1) {\n        parsed[n
        % parsed.len] = try std.fmt.parseInt(usize, line, 10);\n        if (n &amp;gt;=
        1 and parsed[n % parsed.len] &amp;gt; parsed[(n - 1) % parsed.len]) {\n            p1.*
        += 1;\n        }\n        if (n &amp;gt;= 3 and parsed[n % parsed.len] &amp;gt;
        parsed[(n - 3) % parsed.len]) {\n            p2.* += 1;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms2udb/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms2udb", "created":
        1638352935.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms3qv5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tymscar",
        "can_mod_post": false, "created_utc": 1638353722.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_5gebp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Simple JS answer. Will probably want to refactor:\n\nPart1:\n\n```\nconst
        fs = require(''fs'');\nconst input = fs.readFileSync(''input.txt'', ''utf8'').split(\"\\n\").map(depth
        =&gt; Number(depth));\nlet increases = 0;\nfor (let i = 1; i &lt; input.length;
        i++) {\n    if (input[i] &gt; input[i - 1]) {\n        increases++;\n    }\n}\nconsole.log(increases);\n```\n\nPart2:\n\n```\nconst
        fs = require(''fs'');\nconst input = fs.readFileSync(''input.txt'', ''utf8'').split(\"\\n\").map(depth
        =&gt; Number(depth));\nlet increases = 0;\nconst newDepthList = [];\nfor (let
        i = 2; i &lt; input.length; i++) {\n    newDepthList.push(input[i] + input[i
        - 1] + input[i - 2]);\n}\nfor (let i = 1; i &lt; newDepthList.length; i++)
        {\n    if (newDepthList[i] &gt; newDepthList[i - 1]) {\n        increases++;\n    }\n}\nconsole.log(increases);\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Simple JS answer. Will
        probably want to refactor:&lt;/p&gt;\n\n&lt;p&gt;Part1:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nconst
        fs = require(&amp;#39;fs&amp;#39;);\nconst input = fs.readFileSync(&amp;#39;input.txt&amp;#39;,
        &amp;#39;utf8&amp;#39;).split(&amp;quot;\\n&amp;quot;).map(depth =&amp;gt;
        Number(depth));\nlet increases = 0;\nfor (let i = 1; i &amp;lt; input.length;
        i++) {\n    if (input[i] &amp;gt; input[i - 1]) {\n        increases++;\n    }\n}\nconsole.log(increases);\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part2:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nconst
        fs = require(&amp;#39;fs&amp;#39;);\nconst input = fs.readFileSync(&amp;#39;input.txt&amp;#39;,
        &amp;#39;utf8&amp;#39;).split(&amp;quot;\\n&amp;quot;).map(depth =&amp;gt;
        Number(depth));\nlet increases = 0;\nconst newDepthList = [];\nfor (let i
        = 2; i &amp;lt; input.length; i++) {\n    newDepthList.push(input[i] + input[i
        - 1] + input[i - 2]);\n}\nfor (let i = 1; i &amp;lt; newDepthList.length;
        i++) {\n    if (newDepthList[i] &amp;gt; newDepthList[i - 1]) {\n        increases++;\n    }\n}\nconsole.log(increases);\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms3qv5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms3qv5", "created":
        1638353722.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hms4ske", "id": "hms4ske", "parent_id":
        "t1_hms3qv5", "depth": 1, "children": ["hms4ske"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms3wv7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "conkerandco",
        "can_mod_post": false, "created_utc": 1638353867.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_jehr5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python](https://github.com/cs1201/AOC_2021/blob/master/Day_1/day_1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/cs1201/AOC_2021/blob/master/Day_1/day_1.py\"&gt;Python&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms3wv7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms3wv7", "created":
        1638353867.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms4fkz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ChevyRayJohnston",
        "can_mod_post": false, "created_utc": 1638354310.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_b6ceh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust. Can run on just iterators, no slices required. Very fast, feels nice
        to solve the whole problem without allocating any data structures.\n\nOne-liners
        look ugly of course but they''re fun to try to code, and I like having fun.\n\n    fn
        part1(input: impl Iterator&lt;Item = i32&gt;) -&gt; i32 {\n        input\n            .fold((0,
        i32::MAX), |(sum, prev), n| {\n                (if n &gt; prev { sum + 1 }
        else { sum }, n)\n            })\n            .0\n    }\n    \n    fn part2(input:
        impl Iterator&lt;Item = i32&gt;) -&gt; i32 {\n        input\n            .fold((0,
        i32::MAX, None, None), |(sum, prev, a, b), c| {\n                a.and_then(|a|
        {\n                    b.and_then(|b| {\n                        Some((\n                            if
        a + b + c &gt; prev { sum + 1 } else { sum },\n                            a
        + b + c,\n                            Some(b),\n                            Some(c),\n                        ))\n                    })\n                })\n                .unwrap_or((sum,
        prev, b, Some(c)))\n            })\n            .0\n    }", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Rust. Can run on just iterators, no slices
        required. Very fast, feels nice to solve the whole problem without allocating
        any data structures.&lt;/p&gt;\n\n&lt;p&gt;One-liners look ugly of course
        but they&amp;#39;re fun to try to code, and I like having fun.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        part1(input: impl Iterator&amp;lt;Item = i32&amp;gt;) -&amp;gt; i32 {\n    input\n        .fold((0,
        i32::MAX), |(sum, prev), n| {\n            (if n &amp;gt; prev { sum + 1 }
        else { sum }, n)\n        })\n        .0\n}\n\nfn part2(input: impl Iterator&amp;lt;Item
        = i32&amp;gt;) -&amp;gt; i32 {\n    input\n        .fold((0, i32::MAX, None,
        None), |(sum, prev, a, b), c| {\n            a.and_then(|a| {\n                b.and_then(|b|
        {\n                    Some((\n                        if a + b + c &amp;gt;
        prev { sum + 1 } else { sum },\n                        a + b + c,\n                        Some(b),\n                        Some(c),\n                    ))\n                })\n            })\n            .unwrap_or((sum,
        prev, b, Some(c)))\n        })\n        .0\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms4fkz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms4fkz", "created":
        1638354310.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hms9wln", "id": "hms9wln", "parent_id":
        "t1_hms4fkz", "depth": 1, "children": ["hms9wln"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms4gwi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "brskbk",
        "can_mod_post": false, "created_utc": 1638354343.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_fl28y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [One line JavaScript solution](https://nopaste.ml/?l=js#XQAAAQCJAQAAAAAAAAAXin1KR4VVQayM1aKtS5aWizOAfuC2YtVJgJqxEs4OQ4fvJl9MgLNVb8QHvkseqa3Dd42wTWrpUi61FWKvn7WV9asNaK0932MqzsIYDTGJdHo3RVsvnfmGvuSSo72OOJ1WdiLwX05WicVJJ+OJDAtN9yzRUt3BXyZkSXTIR8kRLy7pk1ZTwP+wFh2tJoa33t/Orp2XF/bdsWty8xgAbvJrnmILDAJKQk6dqm05rQh+1ffcEymgMk8h30FQWaPQXlvJZaTKZwft54B9GAzIbtuga7gvFJWZ6nk6e3rgb6qt/CkTYa5L0zC0irCMJBEXMviAddXdBkU/B0ic6ubvOKZsLB23Mlz/rKqsAA==)\n\nRuns
        directly from the puzzle input \u2728", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://nopaste.ml/?l=js#XQAAAQCJAQAAAAAAAAAXin1KR4VVQayM1aKtS5aWizOAfuC2YtVJgJqxEs4OQ4fvJl9MgLNVb8QHvkseqa3Dd42wTWrpUi61FWKvn7WV9asNaK0932MqzsIYDTGJdHo3RVsvnfmGvuSSo72OOJ1WdiLwX05WicVJJ+OJDAtN9yzRUt3BXyZkSXTIR8kRLy7pk1ZTwP+wFh2tJoa33t/Orp2XF/bdsWty8xgAbvJrnmILDAJKQk6dqm05rQh+1ffcEymgMk8h30FQWaPQXlvJZaTKZwft54B9GAzIbtuga7gvFJWZ6nk6e3rgb6qt/CkTYa5L0zC0irCMJBEXMviAddXdBkU/B0ic6ubvOKZsLB23Mlz/rKqsAA==\"&gt;One
        line JavaScript solution&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;Runs directly from
        the puzzle input \u2728&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms4gwi/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms4gwi", "created":
        1638354343.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638355023.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms4yu6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bendersteed",
        "can_mod_post": false, "created_utc": 1638354761.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_e65do", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Recursive Common Lisp solution:\n\n    (defun get-file (filename)\n      (with-open-file
        (stream filename)\n        (loop for line = (read-line stream nil)\n           while
        line\n              collect line)))\n\n    (defvar depths (mapcar #''parse-integer
        (get-file \"input1.txt\")))\n\n    ;;; part 1\n    (defun acc-if-greater (list)\n      (labels
        ((recur (list prev sum)\n                 (if (endp list)\n                     sum\n                     (recur
        (cdr list)\n                               (car list)\n                               (if
        (and prev (&gt; (car list) prev))\n                                  (1+ sum)\n                                  sum)))))\n         (recur
        list nil 0)))\n\n    (acc-if-greater depths)\n\n    ;;; part 2\n    (defun
        acc-if-greater-triads (list)\n      (labels ((recur (list prev sum)\n                 (if
        (or (&lt; (length list) 3)\n                         (endp list))\n                         sum\n                         (let
        ((current-triad (+ (first list)\n                                                      (second
        list)\n                                                      (third list))))
        \n                          (recur (cdr list)\n                                     current-triad\n                                    (if
        (and prev (&gt; current-triad prev))\n                                        (1+
        sum)\n                                        sum))))))\n         (recur list
        nil 0)))\n\n    (acc-if-greater-triads depths)\nLoop macro can make it sorter,
        but my brain was short-circuited this morning.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Recursive Common Lisp solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        get-file (filename)\n  (with-open-file (stream filename)\n    (loop for line
        = (read-line stream nil)\n       while line\n          collect line)))\n\n(defvar
        depths (mapcar #&amp;#39;parse-integer (get-file &amp;quot;input1.txt&amp;quot;)))\n\n;;;
        part 1\n(defun acc-if-greater (list)\n  (labels ((recur (list prev sum)\n             (if
        (endp list)\n                 sum\n                 (recur (cdr list)\n                           (car
        list)\n                           (if (and prev (&amp;gt; (car list) prev))\n                              (1+
        sum)\n                              sum)))))\n     (recur list nil 0)))\n\n(acc-if-greater
        depths)\n\n;;; part 2\n(defun acc-if-greater-triads (list)\n  (labels ((recur
        (list prev sum)\n             (if (or (&amp;lt; (length list) 3)\n                     (endp
        list))\n                     sum\n                     (let ((current-triad
        (+ (first list)\n                                                  (second
        list)\n                                                  (third list)))) \n                      (recur
        (cdr list)\n                                 current-triad\n                                (if
        (and prev (&amp;gt; current-triad prev))\n                                    (1+
        sum)\n                                    sum))))))\n     (recur list nil
        0)))\n\n(acc-if-greater-triads depths)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Loop
        macro can make it sorter, but my brain was short-circuited this morning.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms4yu6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms4yu6", "created":
        1638354761.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hms56zr", "id": "hms56zr", "parent_id":
        "t1_hms4yu6", "depth": 1, "children": ["hms56zr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms5nfl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Brytnibee",
        "can_mod_post": false, "created_utc": 1638355326.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_th3w0zb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A fairly neat and clean [python solution](https://gitlab.com/BrytniJ/advent-of-code-2021/-/tree/main/Day_01)
        (written in Jupyter Notebook)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;A fairly neat and clean &lt;a href=\"https://gitlab.com/BrytniJ/advent-of-code-2021/-/tree/main/Day_01\"&gt;python
        solution&lt;/a&gt; (written in Jupyter Notebook)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms5nfl/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms5nfl", "created":
        1638355326.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmsa3uh", "id": "hmsa3uh", "parent_id":
        "t1_hms5nfl", "depth": 1, "children": ["hmsa3uh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms5q48",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Fyvaproldje",
        "can_mod_post": false, "created_utc": 1638355389.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_2h7zn9ro", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Typescript\n\n    // day1.ts\n    import { ints } from ''./util'';\n    \n    export
        function solution(input: string): string[] {\n      const z = ints(input);\n    \n      let
        result = 0;\n      for (let i = 1; i &lt; z.length; ++i) {\n        if (z[i-1]&lt;z[i])
        result++;\n      }\n    \n      let result2 = 0;\n      for (let i = 3; i
        &lt; z.length; ++i) {\n        if (z[i-3] &lt; z[i]) result2++;\n      }\n    \n      return
        [`${result}`, `${result2}`];\n    }\n    \n    // util.ts\n    export function
        ints(input: string): number[] {\n      const result: number[] = [];\n      for
        (const i of input.matchAll(/\\d+/g)) {\n        result.push(parseInt(i[0]));\n      }\n      return
        result;\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Typescript&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        day1.ts\nimport { ints } from &amp;#39;./util&amp;#39;;\n\nexport function
        solution(input: string): string[] {\n  const z = ints(input);\n\n  let result
        = 0;\n  for (let i = 1; i &amp;lt; z.length; ++i) {\n    if (z[i-1]&amp;lt;z[i])
        result++;\n  }\n\n  let result2 = 0;\n  for (let i = 3; i &amp;lt; z.length;
        ++i) {\n    if (z[i-3] &amp;lt; z[i]) result2++;\n  }\n\n  return [`${result}`,
        `${result2}`];\n}\n\n// util.ts\nexport function ints(input: string): number[]
        {\n  const result: number[] = [];\n  for (const i of input.matchAll(/\\d+/g))
        {\n    result.push(parseInt(i[0]));\n  }\n  return result;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms5q48/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms5q48", "created":
        1638355389.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638357275.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms7q76", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gijo57",
        "can_mod_post": false, "created_utc": 1638357014.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_pmvbgr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "No regex so far ;). I get Vietnam flashbacks from last year every time I
        write \"import re\" in my python script.\n\nMy python solution:\n\n[Python
        solution](https://github.com/gijo57/adventofcode2021/blob/master/day_1/advent.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No regex so far ;).
        I get Vietnam flashbacks from last year every time I write &amp;quot;import
        re&amp;quot; in my python script.&lt;/p&gt;\n\n&lt;p&gt;My python solution:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/gijo57/adventofcode2021/blob/master/day_1/advent.py\"&gt;Python
        solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms7q76/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms7q76", "created":
        1638357014.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmw27yn", "id": "hmw27yn", "parent_id":
        "t1_hms7q76", "depth": 1, "children": ["hmw27yn", "hmt0p6c"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms8pj4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sternold",
        "can_mod_post": false, "created_utc": 1638357778.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_8yh06", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C# \n\nUsing Linq and [AoCHelper](https://www.nuget.org/packages/AocHelper).
        `Input` has already been parsed to an `IEnumerable&lt;int&gt;`. See full code
        [here](https://github.com/sternold/AOC.NET/blob/master/AOC21/Day01.cs).\n\n##
        Part 1\n\n    Input.Skip(1).Zip(Input, (curr, prev) =&gt; curr &gt; prev).Count(result
        =&gt; result);\n\n## Part 2\n\n    var windows = Input.Zip(Input.Skip(1),
        Input.Skip(2)).Select((zipped) =&gt; zipped.First + zipped.Second + zipped.Third);\n    windows.Skip(1).Zip(windows,
        (curr, prev) =&gt; curr &gt; prev).Count(result =&gt; result);", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;C#&lt;/h1&gt;\n\n&lt;p&gt;Using Linq and
        &lt;a href=\"https://www.nuget.org/packages/AocHelper\"&gt;AoCHelper&lt;/a&gt;.
        &lt;code&gt;Input&lt;/code&gt; has already been parsed to an &lt;code&gt;IEnumerable&amp;lt;int&amp;gt;&lt;/code&gt;.
        See full code &lt;a href=\"https://github.com/sternold/AOC.NET/blob/master/AOC21/Day01.cs\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;h2&gt;Part
        1&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;Input.Skip(1).Zip(Input, (curr, prev)
        =&amp;gt; curr &amp;gt; prev).Count(result =&amp;gt; result);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Part
        2&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;var windows = Input.Zip(Input.Skip(1),
        Input.Skip(2)).Select((zipped) =&amp;gt; zipped.First + zipped.Second + zipped.Third);\nwindows.Skip(1).Zip(windows,
        (curr, prev) =&amp;gt; curr &amp;gt; prev).Count(result =&amp;gt; result);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms8pj4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms8pj4", "created":
        1638357778.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms9zdc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MCSpiderFe",
        "can_mod_post": false, "created_utc": 1638358731.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_7enpwum4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**CSpydr**\n\n[CSpydr](https://github.com/spydr06/cspydr.git) is my own programming
        language, which I''m developing since almost a year. (my [AoC2021 repo](https://github.com/spydr06/aoc2021.git))\n\nPart
        1:\n\n    fn main(): i32 {\n        let inputstr = std::file::getstr(file!(\"input.txt\"));\n        let
        lines = std::string::split(inputstr, \"\\n\");\n        let increased = 0;\n    \n        for
        let i = 1; i &lt; std::vec::size(lines); i++; {\n            if atoi(lines[i])
        &gt; atoi(lines[i-1]) \n                increased++;\n        }\n        printf(\"increased:
        %d\\n\", increased);\n        &lt;- 0;\n    }\n\nPart 2:\n\n    fn main():
        i32 {\n        let inputstr = std::file::getstr(file!(\"input.txt\"));\n        let
        lines = std::string::split(inputstr, \"\\n\");\n        let increased = 0;\n    \n        for
        let i = 3; i &lt; std::vec::size(lines); i++; {\n            let sum_a = atoi(lines[i-3])
        + atoi(lines[i-2]) + atoi(lines[i-1]);\n            let sum_b = atoi(lines[i-2])
        + atoi(lines[i-1]) + atoi(lines[i]);\n    \n            if sum_b &gt; sum_a\n                increased++;\n        }\n        printf(\"increased:
        %d\\n\", increased);\n        &lt;- 0;\n    }\n\n(solutions are far from perfect,
        but I want to show, that my language is capable of doing all that stuff)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;CSpydr&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/spydr06/cspydr.git\"&gt;CSpydr&lt;/a&gt; is my own
        programming language, which I&amp;#39;m developing since almost a year. (my
        &lt;a href=\"https://github.com/spydr06/aoc2021.git\"&gt;AoC2021 repo&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn main(): i32 {\n    let inputstr
        = std::file::getstr(file!(&amp;quot;input.txt&amp;quot;));\n    let lines
        = std::string::split(inputstr, &amp;quot;\\n&amp;quot;);\n    let increased
        = 0;\n\n    for let i = 1; i &amp;lt; std::vec::size(lines); i++; {\n        if
        atoi(lines[i]) &amp;gt; atoi(lines[i-1]) \n            increased++;\n    }\n    printf(&amp;quot;increased:
        %d\\n&amp;quot;, increased);\n    &amp;lt;- 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn main(): i32 {\n    let inputstr
        = std::file::getstr(file!(&amp;quot;input.txt&amp;quot;));\n    let lines
        = std::string::split(inputstr, &amp;quot;\\n&amp;quot;);\n    let increased
        = 0;\n\n    for let i = 3; i &amp;lt; std::vec::size(lines); i++; {\n        let
        sum_a = atoi(lines[i-3]) + atoi(lines[i-2]) + atoi(lines[i-1]);\n        let
        sum_b = atoi(lines[i-2]) + atoi(lines[i-1]) + atoi(lines[i]);\n\n        if
        sum_b &amp;gt; sum_a\n            increased++;\n    }\n    printf(&amp;quot;increased:
        %d\\n&amp;quot;, increased);\n    &amp;lt;- 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(solutions
        are far from perfect, but I want to show, that my language is capable of doing
        all that stuff)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms9zdc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms9zdc", "created":
        1638358731.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638359345.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsa8oc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "haskathon",
        "can_mod_post": false, "created_utc": 1638358921.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_a8joqf7z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Haskell\n\n    main :: IO ()\n    main = do\n        raw &lt;- readFile
        \"./data/day01.txt\"\n        let parsed = map read $ lines raw :: [Int]\n        print
        $ countLargerThanPrev parsed  -- Part 1\n        print . countLargerThanPrev
        $ windowSum parsed [] 3  -- Part 2\n    \n    countLargerThanPrev :: [Int]
        -&gt; Int\n    countLargerThanPrev (x:xs) = length . filter (&gt;0) $ zipWith
        (-) xs (x:xs)\n    \n    windowSum :: [Int] -&gt; [Int] -&gt; Int -&gt; [Int]\n    windowSum
        input accum window\n        | length input &lt; window = accum\n        |
        otherwise = windowSum (drop 1 input) (accum ++ [sum $ take window input])
        window", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Haskell&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;main
        :: IO ()\nmain = do\n    raw &amp;lt;- readFile &amp;quot;./data/day01.txt&amp;quot;\n    let
        parsed = map read $ lines raw :: [Int]\n    print $ countLargerThanPrev parsed  --
        Part 1\n    print . countLargerThanPrev $ windowSum parsed [] 3  -- Part 2\n\ncountLargerThanPrev
        :: [Int] -&amp;gt; Int\ncountLargerThanPrev (x:xs) = length . filter (&amp;gt;0)
        $ zipWith (-) xs (x:xs)\n\nwindowSum :: [Int] -&amp;gt; [Int] -&amp;gt; Int
        -&amp;gt; [Int]\nwindowSum input accum window\n    | length input &amp;lt;
        window = accum\n    | otherwise = windowSum (drop 1 input) (accum ++ [sum
        $ take window input]) window\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsa8oc/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsa8oc", "created": 1638358921.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmsem50", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Tetha", "can_mod_post": false, "created_utc":
        1638361936.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_43v02", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Python. I mean there''s
        a million solutions all doing the same thing already, but I found it quite
        pretty that you can reduce part 2 to part 1:\n\n    def solve_part_2(data):\n        windows
        = zip(data, data[1:], data[2:])\n        sums = [sum(w) for w in windows]\n        solve_part_1(sums)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python. I mean there&amp;#39;s
        a million solutions all doing the same thing already, but I found it quite
        pretty that you can reduce part 2 to part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        solve_part_2(data):\n    windows = zip(data, data[1:], data[2:])\n    sums
        = [sum(w) for w in windows]\n    solve_part_1(sums)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsem50/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsem50", "created":
        1638361936.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsgmlt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tholomew92",
        "can_mod_post": false, "created_utc": 1638363157.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_d1vi5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[C# solution](https://github.com/tholomew92/AoC/blob/master/2021/1/aoc-1-new/aoc-1-new/aoc-1-new.cs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/tholomew92/AoC/blob/master/2021/1/aoc-1-new/aoc-1-new/aoc-1-new.cs\"&gt;C#
        solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsgmlt/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsgmlt", "created":
        1638363157.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"author_cakeday": true, "subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638364929.0,
        "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsj72h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wsrq",
        "can_mod_post": false, "created_utc": 1638364609.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3dd0tzk4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python, suggestions welcome:\n    \n    def count_increments(input_data):\n        \"\"\"\n        Takes
        a list of values and calculates how many increments between consecutive values
        there are.\n        :return: List\n        \"\"\"\n        increments = 0\n        previous_line
        = input_data[0]\n        for n in input_data:\n            if n &gt; previous_line:\n                increments
        += 1\n            previous_line = n\n        return increments\n    \n    \n    with
        open(''input.txt'', ''r'') as f:\n        input_data = f.read()\n    \n    \n    measurements
        = [int(x) for x in input_data.splitlines()]\n    summed_windows = [sum(x)
        for x in zip(measurements, measurements[1:], measurements[2:])]\n    \n    #
        Answer for the first part:\n    print(f\"Answer for the first part: {count_increments(measurements)}\")\n    #
        Answer for the second part:\n    print(f\"Answer for the second part: {count_increments(summed_windows)}\")",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python, suggestions
        welcome:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def count_increments(input_data):\n    &amp;quot;&amp;quot;&amp;quot;\n    Takes
        a list of values and calculates how many increments between consecutive values
        there are.\n    :return: List\n    &amp;quot;&amp;quot;&amp;quot;\n    increments
        = 0\n    previous_line = input_data[0]\n    for n in input_data:\n        if
        n &amp;gt; previous_line:\n            increments += 1\n        previous_line
        = n\n    return increments\n\n\nwith open(&amp;#39;input.txt&amp;#39;, &amp;#39;r&amp;#39;)
        as f:\n    input_data = f.read()\n\n\nmeasurements = [int(x) for x in input_data.splitlines()]\nsummed_windows
        = [sum(x) for x in zip(measurements, measurements[1:], measurements[2:])]\n\n#
        Answer for the first part:\nprint(f&amp;quot;Answer for the first part: {count_increments(measurements)}&amp;quot;)\n#
        Answer for the second part:\nprint(f&amp;quot;Answer for the second part:
        {count_increments(summed_windows)}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsj72h/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsj72h", "created":
        1638364609.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmsmli1", "id": "hmsmli1", "parent_id":
        "t1_hmsj72h", "depth": 1, "children": ["hmsmli1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsjke6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "_crc",
        "can_mod_post": false, "created_utc": 1638364811.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_s4ryj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A quick solution in Forth: http://forth.works/share/d96d31b6ee05a9493a79799ffa4f29fa",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A quick solution in
        Forth: &lt;a href=\"http://forth.works/share/d96d31b6ee05a9493a79799ffa4f29fa\"&gt;http://forth.works/share/d96d31b6ee05a9493a79799ffa4f29fa&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsjke6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsjke6", "created":
        1638364811.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638373525.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsk25x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AlistairJF",
        "can_mod_post": false, "created_utc": 1638365075.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3x5avj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Excel**\n\nIntended to do all this years in C# but my VS installation is
        bricked! So I did it in Excel. Not sure how best to describe it here!\n\nPart
        1:\n\n    Input is in a column starting at B5.\n    Column starting at C6
        has formula =B6&gt;B5\n    Answer is in cell C4, which has the formula =COUNTIF(C6:C2004,TRUE)\n\nPart
        2:\n\n    Column starting D7 has the formula =SUM(B5:B7)\n    Column starting
        E8 has the formula =D8&gt;D7\n    Answer is in cell E4, which has the formula
        =COUNTIF(E8:E2004,TRUE)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Excel&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Intended
        to do all this years in C# but my VS installation is bricked! So I did it
        in Excel. Not sure how best to describe it here!&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Input is in a column starting at B5.\nColumn
        starting at C6 has formula =B6&amp;gt;B5\nAnswer is in cell C4, which has
        the formula =COUNTIF(C6:C2004,TRUE)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Column starting D7 has the formula
        =SUM(B5:B7)\nColumn starting E8 has the formula =D8&amp;gt;D7\nAnswer is in
        cell E4, which has the formula =COUNTIF(E8:E2004,TRUE)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsk25x/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsk25x", "created":
        1638365075.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638444221.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmskt4q", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "HashWorks",
        "can_mod_post": false, "created_utc": 1638365492.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_g8gp3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Rust, zipped iterators.](https://github.com/hashworks/AoC/blob/master/2021/day01/src/main.rs)\n\n    fn
        part1(measurements: &amp;Vec&lt;usize&gt;) -&gt; usize {\n        let mut
        p = measurements.first().unwrap_or(&amp;0);\n        measurements.iter().skip(1)\n            .filter(|m|
        {\n                let f = m &gt; &amp;p;\n                p = m;\n                f\n            })\n            .count()\n    }\n    \n    fn
        part2(measurements: &amp;Vec&lt;usize&gt;) -&gt; usize {\n        part1(\n            &amp;measurements.iter()\n                .zip(measurements.iter().skip(1))\n                .zip(measurements.iter().skip(2))\n                .map(|((m1,
        m2), m3)| m1 + m2 + m3)\n                .collect(),\n        )\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/hashworks/AoC/blob/master/2021/day01/src/main.rs\"&gt;Rust,
        zipped iterators.&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn part1(measurements:
        &amp;amp;Vec&amp;lt;usize&amp;gt;) -&amp;gt; usize {\n    let mut p = measurements.first().unwrap_or(&amp;amp;0);\n    measurements.iter().skip(1)\n        .filter(|m|
        {\n            let f = m &amp;gt; &amp;amp;p;\n            p = m;\n            f\n        })\n        .count()\n}\n\nfn
        part2(measurements: &amp;amp;Vec&amp;lt;usize&amp;gt;) -&amp;gt; usize {\n    part1(\n        &amp;amp;measurements.iter()\n            .zip(measurements.iter().skip(1))\n            .zip(measurements.iter().skip(2))\n            .map(|((m1,
        m2), m3)| m1 + m2 + m3)\n            .collect(),\n    )\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmskt4q/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmskt4q", "created":
        1638365492.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmw0xok", "id": "hmw0xok", "parent_id":
        "t1_hmskt4q", "depth": 1, "children": ["hmw0xok"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsku8e",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "2013LIPK01",
        "can_mod_post": false, "created_utc": 1638365507.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_aijq5h1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# R\n\n | Time | Rank\n---|---|----\nPart 1 | 00:03:28 | 1760\nPart 2 | 00:04:36
        | 509\n\nI woke up this morning and had another go at it to see what sorts
        of speed optimizations I could get.\n\n    # First try\n    library(tidyverse)\n    library(data.table)\n    dt
        &lt;- data.table(read.table(\"input.txt\", sep = \"\\n\"))\n    # part 1\n    dt$diff
        &lt;- c(0, diff(dt$V1))\n    dt %&gt;% filter(diff &gt; 0) %&gt;% nrow()\n    #
        part 2\n    dt$diff &lt;- c(0, 0, 0, diff(dt$V1, lag = 3))\n    dt %&gt;%
        filter(diff &gt; 0) %&gt;% nrow()\n\n    # Base R\n    dt &lt;- as.numeric(readLines(\"input.txt\",
        warn = FALSE))\n    # part 1\n    sum(diff(dt, lag = 1) &gt; 0)\n    # part
        2\n    sum(diff(dt, lag = 3) &gt; 0)\n\n    # data.table\n    # part 1 and
        2\n    data.table::fread(\"input.txt\", \n                      sep = \"\\n\")[,
        .(diff1 = sum(diff(V1, lag = 1) &gt; 0),\n                                      diff3
        = sum(diff(V1, lag = 3) &gt; 0))]\n\ntest | replications | user.self | sys.self
        | elapsed\n---|---|----|----|----\nBase R | 1000 | 0.218 | 0.028 | 0.246\ndata.table
        | 1000 | 0.343 | 0.025 | 0.369\nFirst try | 1000 | 1.356 | 0.060 | 1.415\n\nFor
        a brief, but glorious moment, data.table was faster, but then I added `warn=FALSE`
        to `readLines()` in Base R. I fumbled the download and ended up copy/pasting
        into a text editor which added an empty line at the end. That line threw a
        warning which slowed it down just enough for data.table to be faster.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;R&lt;/h1&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;&lt;/th&gt;\n&lt;th&gt;Time&lt;/th&gt;\n&lt;th&gt;Rank&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;Part
        1&lt;/td&gt;\n&lt;td&gt;00:03:28&lt;/td&gt;\n&lt;td&gt;1760&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Part
        2&lt;/td&gt;\n&lt;td&gt;00:04:36&lt;/td&gt;\n&lt;td&gt;509&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n\n&lt;p&gt;I
        woke up this morning and had another go at it to see what sorts of speed optimizations
        I could get.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# First try\nlibrary(tidyverse)\nlibrary(data.table)\ndt
        &amp;lt;- data.table(read.table(&amp;quot;input.txt&amp;quot;, sep = &amp;quot;\\n&amp;quot;))\n#
        part 1\ndt$diff &amp;lt;- c(0, diff(dt$V1))\ndt %&amp;gt;% filter(diff &amp;gt;
        0) %&amp;gt;% nrow()\n# part 2\ndt$diff &amp;lt;- c(0, 0, 0, diff(dt$V1, lag
        = 3))\ndt %&amp;gt;% filter(diff &amp;gt; 0) %&amp;gt;% nrow()\n\n# Base R\ndt
        &amp;lt;- as.numeric(readLines(&amp;quot;input.txt&amp;quot;, warn = FALSE))\n#
        part 1\nsum(diff(dt, lag = 1) &amp;gt; 0)\n# part 2\nsum(diff(dt, lag = 3)
        &amp;gt; 0)\n\n# data.table\n# part 1 and 2\ndata.table::fread(&amp;quot;input.txt&amp;quot;,
        \n                  sep = &amp;quot;\\n&amp;quot;)[, .(diff1 = sum(diff(V1,
        lag = 1) &amp;gt; 0),\n                                  diff3 = sum(diff(V1,
        lag = 3) &amp;gt; 0))]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;test&lt;/th&gt;\n&lt;th&gt;replications&lt;/th&gt;\n&lt;th&gt;user.self&lt;/th&gt;\n&lt;th&gt;sys.self&lt;/th&gt;\n&lt;th&gt;elapsed&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;Base
        R&lt;/td&gt;\n&lt;td&gt;1000&lt;/td&gt;\n&lt;td&gt;0.218&lt;/td&gt;\n&lt;td&gt;0.028&lt;/td&gt;\n&lt;td&gt;0.246&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;data.table&lt;/td&gt;\n&lt;td&gt;1000&lt;/td&gt;\n&lt;td&gt;0.343&lt;/td&gt;\n&lt;td&gt;0.025&lt;/td&gt;\n&lt;td&gt;0.369&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;First
        try&lt;/td&gt;\n&lt;td&gt;1000&lt;/td&gt;\n&lt;td&gt;1.356&lt;/td&gt;\n&lt;td&gt;0.060&lt;/td&gt;\n&lt;td&gt;1.415&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n\n&lt;p&gt;For
        a brief, but glorious moment, data.table was faster, but then I added &lt;code&gt;warn=FALSE&lt;/code&gt;
        to &lt;code&gt;readLines()&lt;/code&gt; in Base R. I fumbled the download
        and ended up copy/pasting into a text editor which added an empty line at
        the end. That line threw a warning which slowed it down just enough for data.table
        to be faster.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsku8e/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsku8e", "created":
        1638365507.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638366945.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsm2v3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Pekingeend19",
        "can_mod_post": false, "created_utc": 1638366155.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_2a94t90l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 1 solution in Python:\n\n    # AoC Day 1\n    # ML19\n    \n    depths
        = [int(depth.strip()) for depth in open(''day1-1.txt'').readlines()]\n    \n    #
        Part 1: How many increases?\n    increases = sum([1 for i in range(1, len(depths))
        if depths[i] &gt; depths[i-1]])\n    print(f\"Depth increases: {increases}\")\n    \n    #
        Part 2: How many increases per window?\n    increases = sum([1 for i in range(1,
        len(depths)-2) if sum(depths[i:i+3]) &gt; sum(depths[i-1:i+2])])\n    print(f\"Window
        increases: {increases}\")", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day
        1 solution in Python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# AoC Day 1\n# ML19\n\ndepths
        = [int(depth.strip()) for depth in open(&amp;#39;day1-1.txt&amp;#39;).readlines()]\n\n#
        Part 1: How many increases?\nincreases = sum([1 for i in range(1, len(depths))
        if depths[i] &amp;gt; depths[i-1]])\nprint(f&amp;quot;Depth increases: {increases}&amp;quot;)\n\n#
        Part 2: How many increases per window?\nincreases = sum([1 for i in range(1,
        len(depths)-2) if sum(depths[i:i+3]) &amp;gt; sum(depths[i-1:i+2])])\nprint(f&amp;quot;Window
        increases: {increases}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsm2v3/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsm2v3", "created":
        1638366155.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmsmw6j", "id": "hmsmw6j", "parent_id":
        "t1_hmsm2v3", "depth": 1, "children": ["hmsmw6j"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsmm2x",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Zzwwwzz",
        "can_mod_post": false, "created_utc": 1638366428.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6vh0q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Would love to compete with the leaderboards this year. I''ll try to wake
        up early tomorrow. Python 3.\n\n    def read_file():\n        return [*map(int,
        open(''input.txt'', ''r''))]\n    \n    \n    def first(d):\n        print(sum(1
        for i in range(1,len(d)) if d[i] &gt; d[i-1]))\n    \n    \n    def second(d):\n        print(sum(1
        for i in range(3,len(d)) if d[i] &gt; d[i-3]))\n    \n    \n    def main():\n        data
        = read_file()\n        first(data)\n        second(data)\n    \n    \n    main()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Would love to compete
        with the leaderboards this year. I&amp;#39;ll try to wake up early tomorrow.
        Python 3.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def read_file():\n    return
        [*map(int, open(&amp;#39;input.txt&amp;#39;, &amp;#39;r&amp;#39;))]\n\n\ndef
        first(d):\n    print(sum(1 for i in range(1,len(d)) if d[i] &amp;gt; d[i-1]))\n\n\ndef
        second(d):\n    print(sum(1 for i in range(3,len(d)) if d[i] &amp;gt; d[i-3]))\n\n\ndef
        main():\n    data = read_file()\n    first(data)\n    second(data)\n\n\nmain()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsmm2x/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsmm2x", "created":
        1638366428.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsndmx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "levital",
        "can_mod_post": false, "created_utc": 1638366809.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_gcawu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "After two years in Rust, I''m trying to refresh my Haskell this year, which
        I haven''t really used since my third semester of Uni (over a decade ago...
        getting old). I do not expect to get close to finishing it this year, but
        curious to see how far I get.\n\n[Haskell](https://github.com/fapete/advent_of_code/blob/master/2021/day01/day1.hs)\n\nI
        feel like the scaffolding to read the input is a bit excessive... Maybe I''ll
        see a better way here. :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;After
        two years in Rust, I&amp;#39;m trying to refresh my Haskell this year, which
        I haven&amp;#39;t really used since my third semester of Uni (over a decade
        ago... getting old). I do not expect to get close to finishing it this year,
        but curious to see how far I get.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/fapete/advent_of_code/blob/master/2021/day01/day1.hs\"&gt;Haskell&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        feel like the scaffolding to read the input is a bit excessive... Maybe I&amp;#39;ll
        see a better way here. :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsndmx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsndmx", "created":
        1638366809.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsneo1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "zeitschlag",
        "can_mod_post": false, "created_utc": 1638366823.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_a0pvwk4g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I started to read a book about Elixir over the last couple of months (so
        at least from time to time) and wanted to give it a try for this years adventofcode.
        So here''s my possible solution:\n\n    defmodule AoC2021.Day01 do\n      def
        count_increases(input) do\n        Enum.chunk_every(input, 2, 1, :discard)\n        |&gt;
        Enum.count(fn [a, b] -&gt; a &lt; b end)\n      end\n    \n      def count_increases_in_windows(input)
        do\n        Enum.chunk_every(input, 3, 1, :discard)\n        |&gt; Enum.map(&amp;Enum.sum/1)\n        |&gt;
        count_increases\n      end\n    end\n\nAs tests have been super useful to
        me for AoC in the past, I applied some TDD [and wrote tests, too](https://github.com/zeitschlag/adventofcode/blob/main/aoc2021/test/day01_test.exs).
        Basically, I just started learning this really beautiful language, so I''m
        rather thankful for comments and feedback.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I started to read a book about Elixir over the last
        couple of months (so at least from time to time) and wanted to give it a try
        for this years adventofcode. So here&amp;#39;s my possible solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        AoC2021.Day01 do\n  def count_increases(input) do\n    Enum.chunk_every(input,
        2, 1, :discard)\n    |&amp;gt; Enum.count(fn [a, b] -&amp;gt; a &amp;lt; b
        end)\n  end\n\n  def count_increases_in_windows(input) do\n    Enum.chunk_every(input,
        3, 1, :discard)\n    |&amp;gt; Enum.map(&amp;amp;Enum.sum/1)\n    |&amp;gt;
        count_increases\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As tests
        have been super useful to me for AoC in the past, I applied some TDD &lt;a
        href=\"https://github.com/zeitschlag/adventofcode/blob/main/aoc2021/test/day01_test.exs\"&gt;and
        wrote tests, too&lt;/a&gt;. Basically, I just started learning this really
        beautiful language, so I&amp;#39;m rather thankful for comments and feedback.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsneo1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsneo1", "created":
        1638366823.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmt7zk4", "id": "hmt7zk4", "parent_id":
        "t1_hmsneo1", "depth": 1, "children": ["hmt7zk4"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638528767.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsniaj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "4goettma",
        "can_mod_post": false, "created_utc": 1638366871.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_333orv2k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\nPart 1:\n\n    #!/usr/bin/python3\n\n    def readInput():\n        with
        open(''input'', ''r'') as file:\n            data = file.read()\n        lines
        = list()\n        for d in data.split(''\\n''):\n            if (d != ''''):\n                lines.append(d)\n        return
        lines\n\n    data = [int(i) for i in readInput()]\n    prev = data[0]\n    c
        = 0\n\n    for d in data[1:]:\n        if d &gt; prev:\n            c += 1\n        prev
        = d\n\n    print(c)\n\nPart 2:\n\n    #!/usr/bin/python3\n\n    def readInput():\n        with
        open(''input'', ''r'') as file:\n            data = file.read()\n        lines
        = list()\n        for d in data.split(''\\n''):\n            if (d != ''''):\n                lines.append(d)\n        return
        lines\n\n    data = [int(i) for i in readInput()]\n    prev = sum(data[0:3])\n    c
        = 0\n\n    for i in range(1, len(data) - 2):\n        if sum(data[i:i+3])
        &gt; prev:\n            c += 1\n        prev = sum(data[i:i+3])\n\n    print(c)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/python3\n\ndef readInput():\n    with
        open(&amp;#39;input&amp;#39;, &amp;#39;r&amp;#39;) as file:\n        data
        = file.read()\n    lines = list()\n    for d in data.split(&amp;#39;\\n&amp;#39;):\n        if
        (d != &amp;#39;&amp;#39;):\n            lines.append(d)\n    return lines\n\ndata
        = [int(i) for i in readInput()]\nprev = data[0]\nc = 0\n\nfor d in data[1:]:\n    if
        d &amp;gt; prev:\n        c += 1\n    prev = d\n\nprint(c)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/python3\n\ndef readInput():\n    with
        open(&amp;#39;input&amp;#39;, &amp;#39;r&amp;#39;) as file:\n        data
        = file.read()\n    lines = list()\n    for d in data.split(&amp;#39;\\n&amp;#39;):\n        if
        (d != &amp;#39;&amp;#39;):\n            lines.append(d)\n    return lines\n\ndata
        = [int(i) for i in readInput()]\nprev = sum(data[0:3])\nc = 0\n\nfor i in
        range(1, len(data) - 2):\n    if sum(data[i:i+3]) &amp;gt; prev:\n        c
        += 1\n    prev = sum(data[i:i+3])\n\nprint(c)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsniaj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsniaj", "created":
        1638366871.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmw0d06", "id": "hmw0d06", "parent_id":
        "t1_hmsniaj", "depth": 1, "children": ["hmw0d06", "hmswm9x", "hmsr3tp"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsnu8g", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jupotter",
        "can_mod_post": false, "created_utc": 1638367036.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_8vaaz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n=\n\nMy simple solution: [Day01.cs](https://github.com/Jupotter/AdventOfCode/blob/master/2021/AdventOfCode.2021/Day01.cs)\n\n    public
        class Day01 : BaseDay\n    {\n        private readonly List&lt;int&gt; _input;\n\n        public
        Day01()\n        {\n            var data = new List&lt;int&gt;();\n            using
        var sr = new StreamReader(InputFilePath);\n            while (!sr.EndOfStream)\n            {\n                string?
        line = sr.ReadLine();\n\n                if (line != null)\n                    data.Add(int.Parse(line));\n            }\n            _input
        = data;\n        }\n\n        public static int GetIncreases(IEnumerable&lt;int&gt;
        inputs)\n        {\n            return inputs.Aggregate((acc: 0, prev: inputs.First()),\n                (t,
        cur) =&gt; (t.prev &lt; cur ? t.acc + 1 : t.acc, cur),\n                t
        =&gt; t.acc);\n        }\n\n        public static List&lt;int&gt; GetWindows(IEnumerable&lt;int&gt;
        inputs)\n        {\n            return inputs.Zip(inputs.Skip(1).Zip(inputs.Skip(2))).Select(t
        =&gt; t.First + t.Second.First + t.Second.Second).ToList();\n        }\n\n        public
        override ValueTask&lt;string&gt; Solve_1() =&gt; new(GetIncreases(_input).ToString());\n        public
        override ValueTask&lt;string&gt; Solve_2() =&gt; new(GetIncreases(GetWindows(_input)).ToString());\n    }\n\nLINQ
        pretty much gives us everything needed to solve the problem", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;C#&lt;/h1&gt;\n\n&lt;p&gt;My simple solution:
        &lt;a href=\"https://github.com/Jupotter/AdventOfCode/blob/master/2021/AdventOfCode.2021/Day01.cs\"&gt;Day01.cs&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        class Day01 : BaseDay\n{\n    private readonly List&amp;lt;int&amp;gt; _input;\n\n    public
        Day01()\n    {\n        var data = new List&amp;lt;int&amp;gt;();\n        using
        var sr = new StreamReader(InputFilePath);\n        while (!sr.EndOfStream)\n        {\n            string?
        line = sr.ReadLine();\n\n            if (line != null)\n                data.Add(int.Parse(line));\n        }\n        _input
        = data;\n    }\n\n    public static int GetIncreases(IEnumerable&amp;lt;int&amp;gt;
        inputs)\n    {\n        return inputs.Aggregate((acc: 0, prev: inputs.First()),\n            (t,
        cur) =&amp;gt; (t.prev &amp;lt; cur ? t.acc + 1 : t.acc, cur),\n            t
        =&amp;gt; t.acc);\n    }\n\n    public static List&amp;lt;int&amp;gt; GetWindows(IEnumerable&amp;lt;int&amp;gt;
        inputs)\n    {\n        return inputs.Zip(inputs.Skip(1).Zip(inputs.Skip(2))).Select(t
        =&amp;gt; t.First + t.Second.First + t.Second.Second).ToList();\n    }\n\n    public
        override ValueTask&amp;lt;string&amp;gt; Solve_1() =&amp;gt; new(GetIncreases(_input).ToString());\n    public
        override ValueTask&amp;lt;string&amp;gt; Solve_2() =&amp;gt; new(GetIncreases(GetWindows(_input)).ToString());\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;LINQ
        pretty much gives us everything needed to solve the problem&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsnu8g/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsnu8g", "created":
        1638367036.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsobf4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thulyadalas",
        "can_mod_post": false, "created_utc": 1638367273.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_h0ajq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [RUST](https://github.com/gokberkkocak/adventofcode/blob/master/src/aoc2021/day1.rs)
        \n\nShaking off the rust for adventofcode with a good start in rust. Using
        iterators seems more natural on this one.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://github.com/gokberkkocak/adventofcode/blob/master/src/aoc2021/day1.rs\"&gt;RUST&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;Shaking
        off the rust for adventofcode with a good start in rust. Using iterators seems
        more natural on this one.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsobf4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsobf4", "created":
        1638367273.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsomuy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "I used R for both parts this time as both problems are
        solvable using its [diff function](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/diff):\n\n    #!/usr/bin/env
        Rscript  \n    infile &lt;- as.numeric(readLines(\"input.txt\"))  \n    paste(\"\ud83c\udf841:\",
        sum(diff(infile) &gt; 0), \"\ud83c\udf842:\", sum(diff(infile, lag = 3) &gt;
        0))", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_hmsomuy", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I used R for both parts this time as both problems
        are solvable using its &lt;a href=\"https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/diff\"&gt;diff
        function&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env Rscript  \ninfile
        &amp;lt;- as.numeric(readLines(&amp;quot;input.txt&amp;quot;))  \npaste(&amp;quot;\ud83c\udf841:&amp;quot;,
        sum(diff(infile) &amp;gt; 0), &amp;quot;\ud83c\udf842:&amp;quot;, sum(diff(infile,
        lag = 3) &amp;gt; 0))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsomuy/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638367429.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638367429.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmsrjcg", "id": "hmsrjcg", "parent_id":
        "t1_hmsomuy", "depth": 1, "children": ["hmsrjcg"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsqalo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Marcus316",
        "can_mod_post": false, "created_utc": 1638368240.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6zdk2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution on the bash command line.\n\n    Part 1:\n    inc=-1;current=0;
        for line in `cat input`; do if [[ $line -gt $current ]]; then inc=$(($inc+1));
        fi; current=$line; done; echo $inc\n\n    Part 2:\n    inc=0; a=0; b=0; c=0;
        for line in `cat input`; do if [[ $a -gt 0 ]]; then if [[ $line -gt $a ]];
        then inc=$(($inc+1)); fi; fi; a=$b; b=$c; c=$line; done; echo $inc", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Solution on the bash command line.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Part
        1:\ninc=-1;current=0; for line in `cat input`; do if [[ $line -gt $current
        ]]; then inc=$(($inc+1)); fi; current=$line; done; echo $inc\n\nPart 2:\ninc=0;
        a=0; b=0; c=0; for line in `cat input`; do if [[ $a -gt 0 ]]; then if [[ $line
        -gt $a ]]; then inc=$(($inc+1)); fi; fi; a=$b; b=$c; c=$line; done; echo $inc\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsqalo/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsqalo", "created":
        1638368240.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638370417.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsr2hm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "#Python 3\n\nDoesn''t load the file in memory. \n\nPart
        1 : \n\n    from pathlib import Path\n    \n    path = Path(\"input1.txt\")\n    \n    \n    def
        delta_counter(path: Path):\n        counter = 0\n        with open(path, \"r\")
        as f:\n            curr = int(f.readline())\n            for line in f:\n                try:\n                    val
        = int(line)\n                    if val &gt; curr:\n                        counter
        += 1\n                    curr = val\n                except ValueError:\n                    break\n        return
        counter\n    \n    \n    print(delta_counter(path))\n\n\nPart 2 : \n\n    from
        pathlib import Path\n\n    path = Path(\"input1.txt\")\n\n\n    def sliding_window_counter(path:
        Path) -&gt; int:\n        counter = 0\n        with open(path, ''r'') as f:\n            a,
        b, c = int(f.readline()), int(f.readline()), int(f.readline())\n            sum_abc
        = a + b + c\n            for line in f:\n                try:\n                    a,
        b, c = b, c, int(line)\n                    new_sum = a + b + c\n                    if
        new_sum &gt; sum_abc:\n                        counter += 1\n                    sum_abc
        = new_sum\n                except ValueError:\n                    break\n        return
        counter\n    \n    \n    print(sliding_window_counter(path))", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmsr2hm", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python
        3&lt;/h1&gt;\n\n&lt;p&gt;Doesn&amp;#39;t load the file in memory. &lt;/p&gt;\n\n&lt;p&gt;Part
        1 : &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from pathlib import Path\n\npath
        = Path(&amp;quot;input1.txt&amp;quot;)\n\n\ndef delta_counter(path: Path):\n    counter
        = 0\n    with open(path, &amp;quot;r&amp;quot;) as f:\n        curr = int(f.readline())\n        for
        line in f:\n            try:\n                val = int(line)\n                if
        val &amp;gt; curr:\n                    counter += 1\n                curr
        = val\n            except ValueError:\n                break\n    return counter\n\n\nprint(delta_counter(path))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 : &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from pathlib import Path\n\npath
        = Path(&amp;quot;input1.txt&amp;quot;)\n\n\ndef sliding_window_counter(path:
        Path) -&amp;gt; int:\n    counter = 0\n    with open(path, &amp;#39;r&amp;#39;)
        as f:\n        a, b, c = int(f.readline()), int(f.readline()), int(f.readline())\n        sum_abc
        = a + b + c\n        for line in f:\n            try:\n                a,
        b, c = b, c, int(line)\n                new_sum = a + b + c\n                if
        new_sum &amp;gt; sum_abc:\n                    counter += 1\n                sum_abc
        = new_sum\n            except ValueError:\n                break\n    return
        counter\n\n\nprint(sliding_window_counter(path))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsr2hm/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638368602.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638368602.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsrg41",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Rakicy",
        "can_mod_post": false, "created_utc": 1638368779.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_1iav06tf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python 3\n\nHere is my solution.  Saw the rolling window in part 2 and
        debated throwing it in Pandas to use the rolling module, but thought it was
        overkill.  If you need a hint for that, look at this [stackoverflow link](https://stackoverflow.com/questions/6822725/rolling-or-sliding-window-iterator).\n\nCode:
        [https://github.com/Rakicy/AOC2021/blob/main/day01.py](https://github.com/Rakicy/AOC2021/blob/main/day01.py)\n\nSuggestions/thoughts
        welcomed!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python
        3&lt;/h1&gt;\n\n&lt;p&gt;Here is my solution.  Saw the rolling window in part
        2 and debated throwing it in Pandas to use the rolling module, but thought
        it was overkill.  If you need a hint for that, look at this &lt;a href=\"https://stackoverflow.com/questions/6822725/rolling-or-sliding-window-iterator\"&gt;stackoverflow
        link&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Code: &lt;a href=\"https://github.com/Rakicy/AOC2021/blob/main/day01.py\"&gt;https://github.com/Rakicy/AOC2021/blob/main/day01.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Suggestions/thoughts
        welcomed!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsrg41/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsrg41", "created":
        1638368779.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmsu7d8", "id": "hmsu7d8", "parent_id":
        "t1_hmsrg41", "depth": 1, "children": ["hmsu7d8", "hmssffa"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsu2jc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jamincan",
        "can_mod_post": false, "created_utc": 1638369982.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_851qa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\nI''ll probably come back to this and reimplement with less allocation.\n\nhttps://github.com/jamincan/aoc2021/blob/main/src/days/day1.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;I&amp;#39;ll
        probably come back to this and reimplement with less allocation.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jamincan/aoc2021/blob/main/src/days/day1.rs\"&gt;https://github.com/jamincan/aoc2021/blob/main/src/days/day1.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsu2jc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsu2jc", "created":
        1638369982.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsuxfj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "enelen",
        "can_mod_post": false, "created_utc": 1638370354.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_t7yj3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "r / rstats\n\n[Solution](https://github.com/AdroMine/AdventOfCode/blob/main/2021/Day01/solution.R)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;r / rstats&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AdroMine/AdventOfCode/blob/main/2021/Day01/solution.R\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsuxfj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsuxfj", "created":
        1638370354.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmt7tv3", "id": "hmt7tv3", "parent_id":
        "t1_hmsuxfj", "depth": 1, "children": ["hmt7tv3"]}}, {"kind": "more", "data":
        {"count": 977, "name": "t1_hmsvdty", "id": "hmsvdty", "parent_id": "t3_r66vow",
        "depth": 0, "children": ["hmsvdty", "hmt0sca", "hmswfp5", "hmt27ga", "hmthspq",
        "hmt0fwv", "hmtixd5", "hmt9ekl", "hmt2jgt", "hmtpt3b", "hmtose6", "hmtvgc7",
        "hmt7kjf", "hmttnxq", "hmtqwyn", "hmtcq1a", "hmu09qs", "hmt4xjf", "hmu4zel",
        "hmurfdk", "hmuuqt2", "hmupqo9", "hmtsxep", "hmu2a1h", "hmukpkv", "hmtjo2f",
        "hmwu69l", "hmu2pgh", "hmu7lg6", "hmubyyn", "hmw3f07", "hmv23t1", "hmu337d",
        "hmu51yq", "hmujlag", "hmt74ro", "hmtlvmj", "hmwkw6o", "hmuvaeh", "hmvpp3m",
        "hmrjd7f", "hmrg1kh", "hms0wwq", "hmusk2z", "hmxoenc", "hmujjqf", "hmvj1t2",
        "hmum5va", "hmvzpzx", "hmup3ay", "hmuudfb", "hmvewiq", "hmui302", "hmrel6r",
        "hmx7741", "hmufugf", "hmulg4v", "hmuzllx", "hmv10v7", "hmuemam", "hms1z0o",
        "hmrfk32", "hmrf92d", "hmvjdt8", "hmwqv7g", "hmuhh4i", "hmv3f9l", "hmu5438",
        "hmrins1", "hmrk31c", "hmvao30", "hmt7cec", "hmtw3nw", "hmuatyn", "hmtn5cf",
        "hmwq120", "hmuyqf6", "hmvd5ko", "hmt84zy", "hmrk087", "hmrqozx", "hmrzmu2",
        "hmrzl7z", "hmrh1r4", "hms3lqj", "hmsebbs", "hmuu0nz", "hmrgey5", "hmrjrhv",
        "hmrs30t", "hmrg937", "hmvcr0w", "hmwfe3o", "hmrf8rs", "hmrjghk", "hmsr7zw",
        "hms24ql", "hmtou21", "hmrhvmq", "hmrr4l8", "hmsr3as", "hmvianz", "hmtypln",
        "hmrevqd", "hmsnmhw", "hmwkskt", "hmsw7qt", "hms8x51", "hmrfpg5", "hmsr243",
        "hmrlidz", "hmrtiig", "hmrino9", "hmrfj4u", "hmrf59h", "hms3twz", "hmw3kbw",
        "hmt2d0z", "hmwzc9n", "hmrtnc5", "hmt5dgk", "hms6jxx", "hmtpgu7", "hmrgty5",
        "hmsj2yt", "hmrh7ku", "hmrgg3c", "hmreq4n", "hmru1rn", "hmupwiu", "hmriaqg",
        "hmri0oz", "hmrh2vk", "hmrg6cr", "hmrgfud", "hmrhdk2", "hmu2ehy", "hms1s6r",
        "hmryepf", "hms50ta", "hmrs1dg", "hmw3zoj", "hmrj5v8", "hmuaadx", "hmrz40u",
        "hmxsojx", "hmy215d", "hmse1bp", "hmsr9et", "hmv1ch7", "hmrf4te", "hmweook",
        "hmrfsij", "hmuxfuh", "hmukafq", "hmt0d6b", "hmrsklw", "hmsll5m", "hmur5u6",
        "hmt7ejw", "hmu297u", "hmxn3xv", "hmsc6zx", "hmssgwx", "hmv7e6n", "hmtpxvo",
        "hmtbcpy", "hmvg4o4", "hmrf4pv", "hmwtwoc", "hmrguh8", "hmt7y0e", "hmrtbjq",
        "hmsa0hn", "hmrt4yg", "hmsrb47", "hmwtk1w", "hms2ee2", "hmvr6mx", "hmsxnbq",
        "hms4ewo", "hmrhdgc", "hmvszqc", "hmu2gx2", "hmu51kx", "hms8odm", "hmtouj5",
        "hms0h5d", "hmusj18", "hms009r", "hmtimr9", "hmrrbe6", "hmrydbs", "hmy9ke6",
        "hmtytou", "hmt9f7j", "hmrkjxn", "hmwb2ra", "hmyfdr9", "hmsr79d", "hmrfhj6",
        "hmuwc2v", "hmxer2i", "hms9kby", "hmvwuer", "hmtith2", "hmt2qvg", "hmsrqka",
        "hmtfl5k", "hmt3c9q", "hmsvx7j", "hmupg0c", "hmtkx5u", "hmuf6r8", "hms1j6d",
        "hmtyhqw", "hmst5oy", "hmrs8pi", "hmrmjt8", "hmryh40", "hmrhr75", "hmrio89",
        "hmsoygk", "hmuvltl", "hmris2x", "hmxzdlr", "hmtvyoj", "hmt8pge", "hmtcewm",
        "hmum4io", "hmsmzua", "hmu6yri", "hmu7g9d", "hmtskg5", "hmso475", "hmuc4hm",
        "hmuox3j", "hmreik6", "hmrxcqk", "hmsd95d", "hmt833f", "hmswer6", "hms6rw6",
        "hmshy8w", "hmshxa7", "hms4lux", "hmunovu", "hmvwtzm", "hms5s4x", "hmrjmin",
        "hmrx7fx", "hmy32s1", "hmu41kj", "hmuwsn3", "hmrruww", "hmsaolj", "hmrmn6p",
        "hmrxsyi", "hmul0m8", "hmru0e5", "hmtou73", "hms1fac", "hmu47y6", "hmtkjc8",
        "hms21cb", "hmsbmj1", "hmsqyxj", "hmtb5yc", "hms98ik", "hmunt9t", "hms8ikj",
        "hms3qzs", "hmveoia", "hmsf2pc", "hmrr3w3", "hmt02z0", "hmsvczl", "hmsioan",
        "hmshtm9", "hmss6je", "hmtfafr", "hmrl92g", "hmsvo2v", "hmsszew", "hmsumbu",
        "hmu2rw9", "hmtzrre", "hmrtjc7", "hmsqpii", "hmvxl2c", "hmw9ssu", "hmtx4jg",
        "hmtp273", "hmuvxcd", "hmt0ynh", "hmrlffy", "hmu9yeq", "hms7gau", "hmv8bqt",
        "hms028u", "hmvd24s", "hmtxaje", "hms0m82", "hmwc3gl", "hmtil9k", "hms2it8",
        "hmvffrj", "hmto2mk", "hmtp9ng", "hmuc4p0", "hmse2jo", "hmti8v3", "hmw42an",
        "hmuqjav", "hmuszg8", "hmrf9ck", "hmuuxtj", "hmv7xhs", "hmv8xhi", "hmtb264",
        "hmuxrtd", "hmtw0cl", "hms6qq4", "hmvvm80", "hmrz2jn", "hmrzrtr", "hmss2k9",
        "hmu172l", "hmvy97q", "hmrfld2", "hmxdpt3", "hmrtomh", "hmrhqsr", "hmw4ek2",
        "hmu7i0g", "hmrwqat", "hmy3con", "hmrfuew", "hmwegvt", "hmswb9a", "hmretnt",
        "hmt42bv", "hmw21oo", "hmvp1xr", "hms4w5y", "hmvcobg", "hmygsqt", "hmrf2g0",
        "hmsipx1", "hmvcmtf", "hmtckwf", "hmrh3m6", "hmwtvl7", "hmt4tjc", "hmwdb3a",
        "hms2tdh", "hmwxwzb", "hmwnrhk", "hmvqe6x", "hmvoa64", "hmxa298", "hmua6gz",
        "hmuijjn", "hmtomhu", "hmtqk3y", "hmtnoc6", "hms92lp", "hms8zqs", "hmxf61e",
        "hmvae71", "hms0omp", "hmtqtlx", "hmvhiw7", "hmuy2yb", "hmuxks0", "hmtteup",
        "hmvnyic", "hmurtrn", "hmtpdh1", "hmrf0gg", "hms8upn", "hmteqky", "hmsthqs",
        "hmrtaig", "hmvn98k", "hmuy7px", "hmw1jxb", "hmtrv9z", "hmwx4lt", "hmu2d91",
        "hmsrgeu", "hms9me8", "hmuwdqz", "hmrxxk9", "hmscvvl", "hmsogj4", "hmsst3c",
        "hmvttxb", "hmupvsh", "hms8x4k", "hmxrx3s", "hmy5y2j", "hmvh953", "hmuz7ba",
        "hmtf0lj", "hmtqurm", "hmtlqdt", "hmtublx", "hmx7ocb", "hmx4oh4", "hmxm0oa",
        "hmrf87m", "hmrr8s5", "hmva7zl", "hmrklsj", "hmvjxdh", "hmrfvru", "hms97z3",
        "hmrel8t", "hmrzgee", "hmxa4gk", "hmsi1lb", "hmrhr14", "hmrn5eh", "hmrks2m",
        "hmwgacu", "hmrmuci", "hmshy76", "hmvd82d", "hmwg4mh", "hmu9qut", "hmve44r",
        "hmrz22v", "hmy98ot", "hmrfv48", "hms2u4s", "hmrf0j6", "hmrhcqc", "hmurivu",
        "hmspb17", "hmxgs6y", "hmugkix", "hmvqsha", "hmu9x7q", "hmsic35", "hmrt2sw",
        "hms93us", "hmupha0", "hmt1dsj", "hmrn1qi", "hmuqc8p", "hms9kem", "hmwk3gr",
        "hmuvznj", "hmvwd6n", "hmso78b", "hmuu15c", "hmucq9b", "hmren52", "hmrezlc",
        "hmtbaw0", "hmvq4sq", "hmwwi7l", "hmvbdu3", "hmsnt19", "hmy8v67", "hmtfxz8",
        "hmx4u0j", "hmtdkt1", "hmul1w0", "hmrfr8r", "hmriplw", "hmu4r0v", "hmux6rf",
        "hmubyyr", "hmwn65l", "hmvyzz7", "hmvqboh", "hmtl0p6", "hmx8h5l", "hmubzlt",
        "hmsd2vf", "hmul9ls", "hmssbuw", "hmsmh1y", "hmuu8ya", "hms455t", "hmv06au",
        "hmut6fx", "hmry7u5", "hmv395f", "hmts3v2", "hmubq5y", "hmumga1", "hmx74kk",
        "hmt5mu9", "hmvg97r", "hms9w78", "hmrfa3v", "hmw8zxm", "hmwxxf7", "hmreons",
        "hmunk6r", "hmukph5", "hmvu8v1", "hmunpx2", "hmsdp0m", "hmu7mkh", "hmsrw4q",
        "hmuwikk", "hmy90co", "hms0ovt", "hmsit0y", "hmsnokd", "hmrs7po", "hmwpkjo",
        "hmtl4l8", "hmvo3y7"]}}], true]], [0, 12, "attr", "things"], [12, 13, "call",
        ["t1_hmv9qtx"]], [13, 14, "attr", "focus"], [14, 15, "call", []], [0, 16,
        "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr", "filter"],
        [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"], [20, 21,
        "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:17 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:18 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=2IqbA6aG0CwwSVZdEh; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:18 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmsvdty,hmt0sca,hmswfp5,hmt27ga,hmthspq,hmt0fwv,hmtixd5,hmt9ekl,hmt2jgt,hmtpt3b,hmtose6,hmtvgc7,hmt7kjf,hmttnxq,hmtqwyn,hmtcq1a,hmu09qs,hmt4xjf,hmu4zel,hmurfdk,hmuuqt2,hmupqo9,hmtsxep,hmu2a1h,hmukpkv,hmtjo2f,hmwu69l,hmu2pgh,hmu7lg6,hmubyyn,hmw3f07,hmv23t1,hmu337d,hmu51yq,hmujlag,hmt74ro,hmtlvmj,hmwkw6o,hmuvaeh,hmvpp3m,hmrjd7f,hmrg1kh,hms0wwq,hmusk2z,hmxoenc,hmujjqf,hmvj1t2,hmum5va,hmvzpzx,hmup3ay,hmuudfb,hmvewiq,hmui302,hmrel6r,hmx7741,hmufugf,hmulg4v,hmuzllx,hmv10v7,hmuemam,hms1z0o,hmrfk32,hmrf92d,hmvjdt8,hmwqv7g,hmuhh4i,hmv3f9l,hmu5438,hmrins1,hmrk31c,hmvao30,hmt7cec,hmtw3nw,hmuatyn,hmtn5cf,hmwq120,hmuyqf6,hmvd5ko,hmt84zy,hmrk087,hmrqozx,hmrzmu2,hmrzl7z,hmrh1r4,hms3lqj,hmsebbs,hmuu0nz,hmrgey5,hmrjrhv,hmrs30t,hmrg937,hmvcr0w,hmwfe3o,hmrf8rs,hmrjghk,hmsr7zw,hms24ql,hmtou21,hmrhvmq,hmrr4l8,hmsr3as,hmvianz,hmtypln,hmrevqd,hmsnmhw,hmwkskt,hmsw7qt,hms8x51,hmrfpg5,hmsr243,hmrlidz,hmrtiig,hmrino9,hmrfj4u,hmrf59h,hms3twz,hmw3kbw,hmt2d0z,hmwzc9n,hmrtnc5,hmt5dgk,hms6jxx,hmtpgu7,hmrgty5,hmsj2yt,hmrh7ku,hmrgg3c,hmreq4n,hmru1rn,hmupwiu,hmriaqg,hmri0oz,hmrh2vk,hmrg6cr,hmrgfud,hmrhdk2,hmu2ehy,hms1s6r,hmryepf,hms50ta,hmrs1dg,hmw3zoj,hmrj5v8,hmuaadx,hmrz40u,hmxsojx,hmy215d,hmse1bp,hmsr9et,hmv1ch7,hmrf4te,hmweook,hmrfsij,hmuxfuh,hmukafq,hmt0d6b,hmrsklw,hmsll5m,hmur5u6,hmt7ejw,hmu297u,hmxn3xv,hmsc6zx,hmssgwx,hmv7e6n,hmtpxvo,hmtbcpy,hmvg4o4,hmrf4pv,hmwtwoc,hmrguh8,hmt7y0e,hmrtbjq,hmsa0hn,hmrt4yg,hmsrb47,hmwtk1w,hms2ee2,hmvr6mx,hmsxnbq,hms4ewo,hmrhdgc,hmvszqc,hmu2gx2,hmu51kx,hms8odm,hmtouj5,hms0h5d,hmusj18,hms009r,hmtimr9,hmrrbe6,hmrydbs,hmy9ke6,hmtytou,hmt9f7j,hmrkjxn,hmwb2ra,hmyfdr9,hmsr79d,hmrfhj6,hmuwc2v,hmxer2i,hms9kby,hmvwuer,hmtith2,hmt2qvg,hmsrqka,hmtfl5k,hmt3c9q,hmsvx7j,hmupg0c,hmtkx5u,hmuf6r8,hms1j6d,hmtyhqw,hmst5oy,hmrs8pi,hmrmjt8,hmryh40,hmrhr75,hmrio89,hmsoygk,hmuvltl,hmris2x,hmxzdlr,hmtvyoj,hmt8pge,hmtcewm,hmum4io,hmsmzua,hmu6yri,hmu7g9d,hmtskg5,hmso475,hmuc4hm,hmuox3j,hmreik6,hmrxcqk,hmsd95d,hmt833f,hmswer6,hms6rw6,hmshy8w,hmshxa7,hms4lux,hmunovu,hmvwtzm,hms5s4x,hmrjmin,hmrx7fx,hmy32s1,hmu41kj,hmuwsn3,hmrruww,hmsaolj,hmrmn6p,hmrxsyi,hmul0m8,hmru0e5,hmtou73,hms1fac,hmu47y6,hmtkjc8,hms21cb,hmsbmj1,hmsqyxj,hmtb5yc,hms98ik,hmunt9t,hms8ikj,hms3qzs,hmveoia,hmsf2pc,hmrr3w3,hmt02z0,hmsvczl,hmsioan,hmshtm9,hmss6je,hmtfafr,hmrl92g,hmsvo2v,hmsszew,hmsumbu,hmu2rw9,hmtzrre,hmrtjc7,hmsqpii,hmvxl2c,hmw9ssu,hmtx4jg,hmtp273,hmuvxcd,hmt0ynh,hmrlffy,hmu9yeq,hms7gau,hmv8bqt,hms028u,hmvd24s,hmtxaje,hms0m82,hmwc3gl,hmtil9k,hms2it8,hmvffrj,hmto2mk,hmtp9ng,hmuc4p0,hmse2jo,hmti8v3,hmw42an,hmuqjav,hmuszg8,hmrf9ck,hmuuxtj,hmv7xhs,hmv8xhi,hmtb264,hmuxrtd,hmtw0cl,hms6qq4,hmvvm80,hmrz2jn,hmrzrtr,hmss2k9,hmu172l,hmvy97q,hmrfld2,hmxdpt3,hmrtomh,hmrhqsr,hmw4ek2,hmu7i0g,hmrwqat,hmy3con,hmrfuew,hmwegvt,hmswb9a,hmretnt,hmt42bv,hmw21oo,hmvp1xr,hms4w5y,hmvcobg,hmygsqt,hmrf2g0,hmsipx1,hmvcmtf,hmtckwf,hmrh3m6,hmwtvl7,hmt4tjc,hmwdb3a,hms2tdh,hmwxwzb,hmwnrhk,hmvqe6x,hmvoa64,hmxa298,hmua6gz,hmuijjn,hmtomhu,hmtqk3y,hmtnoc6,hms92lp,hms8zqs,hmxf61e,hmvae71,hms0omp,hmtqtlx,hmvhiw7,hmuy2yb,hmuxks0,hmtteup,hmvnyic,hmurtrn,hmtpdh1,hmrf0gg,hms8upn,hmteqky,hmsthqs,hmrtaig,hmvn98k,hmuy7px,hmw1jxb,hmtrv9z,hmwx4lt,hmu2d91,hmsrgeu,hms9me8,hmuwdqz,hmrxxk9,hmscvvl,hmsogj4,hmsst3c,hmvttxb,hmupvsh,hms8x4k,hmxrx3s,hmy5y2j,hmvh953,hmuz7ba,hmtf0lj,hmtqurm,hmtlqdt,hmtublx,hmx7ocb,hmx4oh4,hmxm0oa,hmrf87m,hmrr8s5,hmva7zl,hmrklsj,hmvjxdh,hmrfvru,hms97z3,hmrel8t,hmrzgee,hmxa4gk,hmsi1lb,hmrhr14,hmrn5eh,hmrks2m,hmwgacu,hmrmuci,hmshy76,hmvd82d,hmwg4mh,hmu9qut,hmve44r,hmrz22v,hmy98ot,hmrfv48,hms2u4s,hmrf0j6,hmrhcqc,hmurivu,hmspb17,hmxgs6y,hmugkix,hmvqsha,hmu9x7q,hmsic35,hmrt2sw,hms93us,hmupha0,hmt1dsj,hmrn1qi,hmuqc8p,hms9kem,hmwk3gr,hmuvznj,hmvwd6n,hmso78b,hmuu15c,hmucq9b,hmren52,hmrezlc,hmtbaw0,hmvq4sq,hmwwi7l,hmvbdu3,hmsnt19,hmy8v67,hmtfxz8,hmx4u0j,hmtdkt1,hmul1w0,hmrfr8r,hmriplw,hmu4r0v,hmux6rf,hmubyyr,hmwn65l,hmvyzz7,hmvqboh,hmtl0p6,hmx8h5l,hmubzlt,hmsd2vf,hmul9ls,hmssbuw,hmsmh1y,hmuu8ya,hms455t,hmv06au,hmut6fx,hmry7u5,hmv395f,hmts3v2,hmubq5y,hmumga1,hmx74kk,hmt5mu9,hmvg97r,hms9w78,hmrfa3v,hmw8zxm,hmwxxf7,hmreons,hmunk6r,hmukph5,hmvu8v1,hmunpx2,hmsdp0m,hmu7mkh,hmsrw4q,hmuwikk,hmy90co,hms0ovt,hmsit0y,hmsnokd,hmrs7po,hmwpkjo,hmtl4l8,hmvo3y7
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '41554'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg62nmrp.2.1741472958225.Z0FBQUFBQm56TVMtR0RSOU5Bb3NWX2g0U3dMR0NYbDk3NmN4N3BOOXVaNFh5MnYyeVg2eDBVSFg0U2ZaZWhad3BjR3ZMWUdYQjNqTktRTVpkVmpJcm5CM1FULVFTTTNXUExDSDIyNWN2VGJrRllqZkEtOElHZGZsNVBsNHBEd2ZuLU5adVBZMFRPZTg;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:18
        GMT; secure, session_tracker=agnbjbffgpighrmfjc.0.1741472958236.Z0FBQUFBQm56TVMtNmo3dDRZYjhzN3AtZTdldnVFOVZQRm5XZ1pFUWxkajlfZ3NDSkM4UXpqR2R0NzR4UnU0Y0x6SHBNOEZrbHUzZGw4aThlR0NHVVVFNWUwMnB2RWtFV1B4aTBFekxJS0Vma3lNSnJMLVJYalZTdW9qekh0WUxpakU5bHZ2dEtVNFg;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:18
        GMT; secure, edgebucket=zdagxEhiTQTOWsXMa1; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '61'
      x-ratelimit-remaining:
      - '39.0'
      x-ratelimit-reset:
      - '41'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:18 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638476095.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsvdty", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "oantolin",
        "can_mod_post": false, "created_utc": 1638370550.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3fxjo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Common Lisp\n\n    (defun answer (&amp;optional (depths (uiop:read-file-forms
        #P\"day01.txt\")))\n      (flet ((increases (list win) (count t (mapcar #''&lt;
        list (nthcdr win list)))))\n        (values (increases depths 1) (increases
        depths 3))))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Common
        Lisp&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun answer (&amp;amp;optional
        (depths (uiop:read-file-forms #P&amp;quot;day01.txt&amp;quot;)))\n  (flet
        ((increases (list win) (count t (mapcar #&amp;#39;&amp;lt; list (nthcdr win
        list)))))\n    (values (increases depths 1) (increases depths 3))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsvdty/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsvdty", "created":
        1638370550.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmswfp5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Kaninbil",
        "can_mod_post": false, "created_utc": 1638371014.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6lv5l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python, am a big noob, but feel happy i solved atleast the first one!\n\n\n\n    lines
        = []\n    f = open(\"input.txt\",\"r\")\n    lines = f.read().splitlines()\n    lines
        = list(map(int, lines))\n    counter1 = 0\n    counter2 = 0\n    \n    \n    for
        i in range(len(lines)-1):\n        if lines[i] &lt; lines[i+1]:\n            counter1+=1\n    \n    \n    for
        i in range(len(lines)-3):\n        if lines[i] &lt; lines[i+3]:\n            counter2
        +=1", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python,
        am a big noob, but feel happy i solved atleast the first one!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;lines
        = []\nf = open(&amp;quot;input.txt&amp;quot;,&amp;quot;r&amp;quot;)\nlines
        = f.read().splitlines()\nlines = list(map(int, lines))\ncounter1 = 0\ncounter2
        = 0\n\n\nfor i in range(len(lines)-1):\n    if lines[i] &amp;lt; lines[i+1]:\n        counter1+=1\n\n\nfor
        i in range(len(lines)-3):\n    if lines[i] &amp;lt; lines[i+3]:\n        counter2
        +=1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmswfp5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmswfp5", "created":
        1638371014.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_hmsz5l9", "id": "hmsz5l9", "parent_id":
        "t1_hmswfp5", "depth": 1, "children": ["hmsz5l9", "hmthlye"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt0fwv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pancyman",
        "can_mod_post": false, "created_utc": 1638372720.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_fiqvm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\nDon''t really know anything about idiomatic Rust, would love
        corrections! Solved in Python and then pretty much just translated it directly.\n\n    use
        std::fs;\n    \n    fn main() {\n        let f = fs::read_to_string(\"1.input\").expect(\"Unable
        to open file!\");\n        let lines = f.split(\"\\n\").collect::&lt;Vec&lt;&amp;str&gt;&gt;();\n        let
        mut previous_num = 0;\n        let mut increases = 0;\n        for i in 0..lines.len()
        - 2 {\n            let num = lines[i].parse::&lt;i32&gt;().unwrap()\n                +
        lines[i + 1].parse::&lt;i32&gt;().unwrap()\n                + lines[i + 2].parse::&lt;i32&gt;().unwrap();\n            if
        previous_num == 0 {\n                previous_num = num;\n                continue;\n            }\n    \n            if
        num &gt; previous_num {\n                increases += 1;\n            }\n    \n            previous_num
        = num;\n        }\n    \n        println!(\"{}\", increases)\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t
        really know anything about idiomatic Rust, would love corrections! Solved
        in Python and then pretty much just translated it directly.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        std::fs;\n\nfn main() {\n    let f = fs::read_to_string(&amp;quot;1.input&amp;quot;).expect(&amp;quot;Unable
        to open file!&amp;quot;);\n    let lines = f.split(&amp;quot;\\n&amp;quot;).collect::&amp;lt;Vec&amp;lt;&amp;amp;str&amp;gt;&amp;gt;();\n    let
        mut previous_num = 0;\n    let mut increases = 0;\n    for i in 0..lines.len()
        - 2 {\n        let num = lines[i].parse::&amp;lt;i32&amp;gt;().unwrap()\n            +
        lines[i + 1].parse::&amp;lt;i32&amp;gt;().unwrap()\n            + lines[i
        + 2].parse::&amp;lt;i32&amp;gt;().unwrap();\n        if previous_num == 0
        {\n            previous_num = num;\n            continue;\n        }\n\n        if
        num &amp;gt; previous_num {\n            increases += 1;\n        }\n\n        previous_num
        = num;\n    }\n\n    println!(&amp;quot;{}&amp;quot;, increases)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt0fwv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt0fwv", "created":
        1638372720.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmt3sx9", "id": "hmt3sx9", "parent_id":
        "t1_hmt0fwv", "depth": 1, "children": ["hmt3sx9", "hmtfvgz"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638400624.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt0sca", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JoMartin23",
        "can_mod_post": false, "created_utc": 1638372866.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_x5onm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Common Lisp\n\nnot much lisp here, here''s a generic solution for 1 and
        2, just pass ''(list) for part 1 and ''(list (cdr list)(cddr list)) for part
        2.\n\nedit: oops, this is wrong for part 1. Oh well. fixed, only needs the
        list alone for part1\n\n    (defun day1 (lists)\n       (reduce #''+ \n          (apply
        #''mapcar \n             (let (prev)  \n                (lambda (&amp;rest
        rest)\n    \t\t(let ((current (apply #''+ rest))) \t\t                                    \n                      (prog1
        (if (and prev (&lt; prev current)) 1 0)\n                         (setf prev
        current))))) lists )))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Common
        Lisp&lt;/h1&gt;\n\n&lt;p&gt;not much lisp here, here&amp;#39;s a generic solution
        for 1 and 2, just pass &amp;#39;(list) for part 1 and &amp;#39;(list (cdr
        list)(cddr list)) for part 2.&lt;/p&gt;\n\n&lt;p&gt;edit: oops, this is wrong
        for part 1. Oh well. fixed, only needs the list alone for part1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        day1 (lists)\n   (reduce #&amp;#39;+ \n      (apply #&amp;#39;mapcar \n         (let
        (prev)  \n            (lambda (&amp;amp;rest rest)\n        (let ((current
        (apply #&amp;#39;+ rest)))                                           \n                  (prog1
        (if (and prev (&amp;lt; prev current)) 1 0)\n                     (setf prev
        current))))) lists )))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt0sca/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmt0sca", "created": 1638372866.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638373801.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt27ga",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Ethoxyethaan",
        "can_mod_post": false, "created_utc": 1638373456.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_54fk0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript (google chrome F12 console) 129 bytes (both questions, including
        reading the input)\n\n    b=$(\"*\").innerText.split`\\n`;c=(x,y,z,a)=&gt;x+(y&gt;a[z-1]);[b.reduce(c,0)+1,b.map((x,y,z)=&gt;1*x+(z[y+1]|0)+(z[y+2]|0)).reduceRight(c)]",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript (google chrome
        F12 console) 129 bytes (both questions, including reading the input)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;b=$(&amp;quot;*&amp;quot;).innerText.split`\\n`;c=(x,y,z,a)=&amp;gt;x+(y&amp;gt;a[z-1]);[b.reduce(c,0)+1,b.map((x,y,z)=&amp;gt;1*x+(z[y+1]|0)+(z[y+2]|0)).reduceRight(c)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt27ga/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt27ga", "created":
        1638373456.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmt40kb", "id": "hmt40kb", "parent_id":
        "t1_hmt27ga", "depth": 1, "children": ["hmt40kb", "hmuoky7"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt2jgt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LuckyLactose",
        "can_mod_post": false, "created_utc": 1638373595.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3wf82ne1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**SWIFT**\n\n    func solvePart1() -&gt; String {\r\n        let result =
        countIncreases(array: input, windowSize: 1)\r\n        return \"\\(result)\"\r\n    }\r\n    \r\n    func
        solvePart2() -&gt; String {\r\n        let result = countIncreases(array:
        input, windowSize: 3)\r\n        return \"\\(result)\"\r\n    }\r\n    \r\n    private
        func countIncreases(array: [Int], windowSize: Int) -&gt; Int {\r\n        let
        arrayToUse = convertToSlidingWindow(array: array, size: windowSize)\r\n        \r\n        var
        numIncreases = 0\r\n        var prevValue: Int? = nil\r\n        arrayToUse.forEach
        { value in\r\n            if let prevValue = prevValue {\r\n                if
        value &gt; prevValue {\r\n                    numIncreases += 1\r\n                }\r\n            }\r\n            prevValue
        = value\r\n        }\r\n        \r\n        return numIncreases\r\n    }\r\n    \r\n    private
        func convertToSlidingWindow(array: [Int], size: Int) -&gt; [Int] {\r\n        guard
        size &gt; 1 else { return array }\r\n        var newArray: [Int] = []\r\n        \r\n        for
        i in 0..&lt;array.count {\r\n            let lastIndex = i + size - 1\r\n            guard
        (lastIndex) &lt; array.count else { break }\r\n            let newValue =
        array[i...lastIndex].reduce(0, +)\r\n            newArray.append(newValue)\r\n        }\r\n        \r\n        return
        newArray\r\n    }\n\nDidn''t think about cancelling terms until I had solved
        it.\n\nLink to repo: https://github.com/LactoseGK/aoc2021", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;SWIFT&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func
        solvePart1() -&amp;gt; String {\n    let result = countIncreases(array: input,
        windowSize: 1)\n    return &amp;quot;\\(result)&amp;quot;\n}\n\nfunc solvePart2()
        -&amp;gt; String {\n    let result = countIncreases(array: input, windowSize:
        3)\n    return &amp;quot;\\(result)&amp;quot;\n}\n\nprivate func countIncreases(array:
        [Int], windowSize: Int) -&amp;gt; Int {\n    let arrayToUse = convertToSlidingWindow(array:
        array, size: windowSize)\n\n    var numIncreases = 0\n    var prevValue: Int?
        = nil\n    arrayToUse.forEach { value in\n        if let prevValue = prevValue
        {\n            if value &amp;gt; prevValue {\n                numIncreases
        += 1\n            }\n        }\n        prevValue = value\n    }\n\n    return
        numIncreases\n}\n\nprivate func convertToSlidingWindow(array: [Int], size:
        Int) -&amp;gt; [Int] {\n    guard size &amp;gt; 1 else { return array }\n    var
        newArray: [Int] = []\n\n    for i in 0..&amp;lt;array.count {\n        let
        lastIndex = i + size - 1\n        guard (lastIndex) &amp;lt; array.count else
        { break }\n        let newValue = array[i...lastIndex].reduce(0, +)\n        newArray.append(newValue)\n    }\n\n    return
        newArray\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Didn&amp;#39;t think about
        cancelling terms until I had solved it.&lt;/p&gt;\n\n&lt;p&gt;Link to repo:
        &lt;a href=\"https://github.com/LactoseGK/aoc2021\"&gt;https://github.com/LactoseGK/aoc2021&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt2jgt/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt2jgt", "created":
        1638373595.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt4xjf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "culp",
        "can_mod_post": false, "created_utc": 1638374563.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_5wzce", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Doing it in java this year instead of trying to simultaneously do puzzles
        and learn a new language.\n\nhttps://github.com/jaredculp/aoc2021/", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Doing it in java this year instead of trying
        to simultaneously do puzzles and learn a new language.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jaredculp/aoc2021/\"&gt;https://github.com/jaredculp/aoc2021/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt4xjf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt4xjf", "created":
        1638374563.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt7cec",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "selador135",
        "can_mod_post": false, "created_utc": 1638375543.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_dk8zo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Elixir**\n\n    { :ok, contents } = File.read(\"input.txt\")  \n    contents
        = contents |&gt; String.trim |&gt; String.split(\"\\\\n\") |&gt; Enum.map(&amp;String.to_integer/1)  \n    \n    contents  \n    |&gt;
        Enum.chunk_every(2, 1, :discard)  \n    |&gt; Enum.reduce(0, fn([a, b], acc)
        -&gt; if b &gt; a, do: acc + 1, else: acc end)  \n    |&gt; IO.puts  \n    \n    contents  \n    |&gt;
        Enum.chunk_every(3, 1, :discard)  \n    |&gt; Enum.chunk_every(2, 1, :discard)  \n    |&gt;
        Enum.reduce(0, fn([a, b], acc) -&gt; if Enum.sum(b) &gt; Enum.sum(a), do:
        acc + 1, else: acc end)  \n    |&gt; IO.puts", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Elixir&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{
        :ok, contents } = File.read(&amp;quot;input.txt&amp;quot;)  \ncontents = contents
        |&amp;gt; String.trim |&amp;gt; String.split(&amp;quot;\\\\n&amp;quot;) |&amp;gt;
        Enum.map(&amp;amp;String.to_integer/1)  \n\ncontents  \n|&amp;gt; Enum.chunk_every(2,
        1, :discard)  \n|&amp;gt; Enum.reduce(0, fn([a, b], acc) -&amp;gt; if b &amp;gt;
        a, do: acc + 1, else: acc end)  \n|&amp;gt; IO.puts  \n\ncontents  \n|&amp;gt;
        Enum.chunk_every(3, 1, :discard)  \n|&amp;gt; Enum.chunk_every(2, 1, :discard)  \n|&amp;gt;
        Enum.reduce(0, fn([a, b], acc) -&amp;gt; if Enum.sum(b) &amp;gt; Enum.sum(a),
        do: acc + 1, else: acc end)  \n|&amp;gt; IO.puts\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt7cec/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt7cec", "created":
        1638375543.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638377507.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt7kjf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Smart_Ad_1857",
        "can_mod_post": false, "created_utc": 1638375633.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_8avov133", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\nThis was a pretty quick function that works for both, simply
        change the win\\_size to 3 to solve task 2 or a window size you may want.\n\n    \"\"\"Takes
        a list on ints and win_size as input\"\"\"\n    \n    def task(list, win_size=1):\n        l
        = [map(sum, zip(*[list[i+j:] for i in range(win_size)])) for j in range(2)]\n        return
        sum([prev &lt; cur for prev, cur in zip(*l)])", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This
        was a pretty quick function that works for both, simply change the win_size
        to 3 to solve task 2 or a window size you may want.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;Takes
        a list on ints and win_size as input&amp;quot;&amp;quot;&amp;quot;\n\ndef
        task(list, win_size=1):\n    l = [map(sum, zip(*[list[i+j:] for i in range(win_size)]))
        for j in range(2)]\n    return sum([prev &amp;lt; cur for prev, cur in zip(*l)])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt7kjf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt7kjf", "created":
        1638375633.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638376685.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt9ekl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "# Rust\n\nLong and modularised, and hopefully pretty:
        [https://github.com/matiu2/aoc-2021/blob/main/day1/src/shared.rs](https://github.com/matiu2/aoc-2021/blob/main/day1/src/shared.rs)\n\nMinimal
        memory allocation. Maxmimum code sharing and tests.\n\nI added a function
        `count_increases` to iterators of usize.", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmt9ekl", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;Long and modularised,
        and hopefully pretty: &lt;a href=\"https://github.com/matiu2/aoc-2021/blob/main/day1/src/shared.rs\"&gt;https://github.com/matiu2/aoc-2021/blob/main/day1/src/shared.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Minimal
        memory allocation. Maxmimum code sharing and tests.&lt;/p&gt;\n\n&lt;p&gt;I
        added a function &lt;code&gt;count_increases&lt;/code&gt; to iterators of
        usize.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "can_gild":
        false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt9ekl/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638376358.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638376358.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtcq1a",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AccusationsInc",
        "can_mod_post": false, "created_utc": 1638377663.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_qhd3tti", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here is my day one code written in java\n\n[https://github.com/AccusationsInc/aoc-2021/blob/master/day%20one/dayOne.java](https://github.com/AccusationsInc/aoc-2021/blob/master/day%20one/dayOne.java)\n\nhoping
        to go back and write it in C once my semester ends :)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Here is my day one code written in java&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AccusationsInc/aoc-2021/blob/master/day%20one/dayOne.java\"&gt;https://github.com/AccusationsInc/aoc-2021/blob/master/day%20one/dayOne.java&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;hoping
        to go back and write it in C once my semester ends :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtcq1a/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtcq1a", "created":
        1638377663.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638380325.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtixd5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Elham_zs",
        "can_mod_post": false, "created_utc": 1638380116.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6yxfhsyz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python:\n\n    result = 0\n    for i, num in enumerate(data):\n        if
        i == 0:\n            continue\n    if sum(data[i:i+3]) &gt; sum(data[i-1:i+2]):\n        result
        += 1  \n    result\n\npart2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;result
        = 0\nfor i, num in enumerate(data):\n    if i == 0:\n        continue\nif
        sum(data[i:i+3]) &amp;gt; sum(data[i-1:i+2]):\n    result += 1  \nresult\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part2&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtixd5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtixd5", "created":
        1638380116.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmv9hpk", "id": "hmv9hpk", "parent_id":
        "t1_hmtixd5", "depth": 1, "children": ["hmv9hpk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtjo2f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "icananea",
        "can_mod_post": false, "created_utc": 1638380403.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_mjwze", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Go, Day 1, Part 1](https://github.com/avalonbits/adventcode2021/blob/main/prob1/part1.go)\n\n[Go,
        Day 1, Part 2](https://github.com/avalonbits/adventcode2021/blob/main/prob1/part2.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/avalonbits/adventcode2021/blob/main/prob1/part1.go\"&gt;Go,
        Day 1, Part 1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/avalonbits/adventcode2021/blob/main/prob1/part2.go\"&gt;Go,
        Day 1, Part 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtjo2f/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtjo2f", "created":
        1638380403.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638381506.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtlvmj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Melocactus283",
        "can_mod_post": false, "created_utc": 1638381253.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_h4f2alrp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**R / RLang**\n\n    library(dplyr)\n    library(roll)\n    \n    parse_data
        &lt;- function(path) {\n      dat &lt;- readLines(path) %&gt;% as.numeric\n    }\n    \n    ans
        &lt;- function(data) {\n      sum(diff(data, lag = 1) &gt; 0, na.rm = TRUE)\n    }\n    \n    data
        &lt;- parse_data(''input.txt'')\n    print(ans(data))\n    print(ans(roll_sum(data,
        3)))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;R
        / RLang&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;library(dplyr)\nlibrary(roll)\n\nparse_data
        &amp;lt;- function(path) {\n  dat &amp;lt;- readLines(path) %&amp;gt;% as.numeric\n}\n\nans
        &amp;lt;- function(data) {\n  sum(diff(data, lag = 1) &amp;gt; 0, na.rm =
        TRUE)\n}\n\ndata &amp;lt;- parse_data(&amp;#39;input.txt&amp;#39;)\nprint(ans(data))\nprint(ans(roll_sum(data,
        3)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtlvmj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtlvmj", "created":
        1638381253.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtn5cf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "KT421",
        "can_mod_post": false, "created_utc": 1638381742.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_8tz5u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# R\n \nhttps://github.com/KT421/2021-advent-of-code/blob/master/dec1.R",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;R&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/KT421/2021-advent-of-code/blob/master/dec1.R\"&gt;https://github.com/KT421/2021-advent-of-code/blob/master/dec1.R&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtn5cf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtn5cf", "created":
        1638381742.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmvfhsx", "id": "hmvfhsx", "parent_id":
        "t1_hmtn5cf", "depth": 1, "children": ["hmvfhsx"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638385680.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtose6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "complyue",
        "can_mod_post": false, "created_utc": 1638382377.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_2c5yxngr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell\n\nNewer solution:\n\n    \u03bb&gt; input :: [Int] &lt;- fmap read
        . lines &lt;$&gt; readFile \"input\"\n    \n    \u03bb&gt; part1 :: Int =
        sum $ fromEnum &lt;$&gt; zipWith (&gt;) (drop 1 input) input\n    \u03bb&gt;
        part1\n    \n    \u03bb&gt; part2 :: Int = sum $ fromEnum &lt;$&gt; zipWith
        (&gt;) (drop 3 input) input\n    \u03bb&gt; part2\n\nOlder solution:\n\n    \u03bb&gt;
        input :: [Int] &lt;- fmap read . lines &lt;$&gt; readFile \"input\"\n    \n    \u03bb&gt;
        part1 :: Int = sum $ fromEnum &lt;$&gt; zipWith (&gt;) (drop 1 input) (reverse
        $ drop 1 $ reverse input)\n    \u03bb&gt; part1\n    \n    \u03bb&gt; :{\n    \u03bb|
        part2 :: [Int] -&gt; Int\n    \u03bb| part2 (x0 : y0 : z0 : rest0) = go 0
        x0 y0 z0 rest0\n    \u03bb|   where\n    \u03bb|     go :: Int -&gt; Int -&gt;
        Int -&gt; Int -&gt; [Int] -&gt; Int\n    \u03bb|     go cnt _x _y _z [] =
        cnt\n    \u03bb|     go cnt x y z (z'' : rest) = go cnt'' y z z'' rest\n    \u03bb|       where\n    \u03bb|         cnt''
        = cnt + if z'' &gt; x then 1 else 0\n    \u03bb|         -- Haskell helped
        me realize the `y+z` part can disappear from below\n    \u03bb|         --
        cnt'' = cnt + if y+z+z'' &gt; x+y+z then 1 else 0\n    \u03bb| part2 _ = 0\n    \u03bb|
        :}\n    \u03bb&gt; part2 input", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Haskell&lt;/p&gt;\n\n&lt;p&gt;Newer solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u03bb&amp;gt;
        input :: [Int] &amp;lt;- fmap read . lines &amp;lt;$&amp;gt; readFile &amp;quot;input&amp;quot;\n\n\u03bb&amp;gt;
        part1 :: Int = sum $ fromEnum &amp;lt;$&amp;gt; zipWith (&amp;gt;) (drop 1
        input) input\n\u03bb&amp;gt; part1\n\n\u03bb&amp;gt; part2 :: Int = sum $
        fromEnum &amp;lt;$&amp;gt; zipWith (&amp;gt;) (drop 3 input) input\n\u03bb&amp;gt;
        part2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Older solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u03bb&amp;gt;
        input :: [Int] &amp;lt;- fmap read . lines &amp;lt;$&amp;gt; readFile &amp;quot;input&amp;quot;\n\n\u03bb&amp;gt;
        part1 :: Int = sum $ fromEnum &amp;lt;$&amp;gt; zipWith (&amp;gt;) (drop 1
        input) (reverse $ drop 1 $ reverse input)\n\u03bb&amp;gt; part1\n\n\u03bb&amp;gt;
        :{\n\u03bb| part2 :: [Int] -&amp;gt; Int\n\u03bb| part2 (x0 : y0 : z0 : rest0)
        = go 0 x0 y0 z0 rest0\n\u03bb|   where\n\u03bb|     go :: Int -&amp;gt; Int
        -&amp;gt; Int -&amp;gt; Int -&amp;gt; [Int] -&amp;gt; Int\n\u03bb|     go
        cnt _x _y _z [] = cnt\n\u03bb|     go cnt x y z (z&amp;#39; : rest) = go cnt&amp;#39;
        y z z&amp;#39; rest\n\u03bb|       where\n\u03bb|         cnt&amp;#39; = cnt
        + if z&amp;#39; &amp;gt; x then 1 else 0\n\u03bb|         -- Haskell helped
        me realize the `y+z` part can disappear from below\n\u03bb|         -- cnt&amp;#39;
        = cnt + if y+z+z&amp;#39; &amp;gt; x+y+z then 1 else 0\n\u03bb| part2 _ =
        0\n\u03bb| :}\n\u03bb&amp;gt; part2 input\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtose6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtose6", "created":
        1638382377.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmv049p", "id": "hmv049p", "parent_id":
        "t1_hmtose6", "depth": 1, "children": ["hmv049p"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtpt3b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "stonebr00k",
        "can_mod_post": false, "created_utc": 1638382768.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_5zblkw1s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## T-SQL\n\n[Part 1 &amp; 2](https://topaz.github.io/paste/#XQAAAQBfBAAAAAAAAAAW4HyOZTg3yzF7YCsR9OiaX+qTWYIYY4mN7N0GDfNhgWyBWAMJd0fw1Hk0ve3fHbMq/UUHroeEuV6X6yr+hHlKHMmjMSgYNLOQPmPhfrGtbrSzrJKRzx55ARSSFTdXDdX/hsmVNT9+PHzxugIzT64RXcnCImJUSK3ZYqwYRCI4uLHIrkVjItSjTFmm0x1k8Wbhy4oXarAqtbGx0u1RMYu/oaJk0bKgIISq6UBMGYdTIgqknOMQ5r2P4q0VEkyInrz9Ixvb3aC1MfF7FeJyRqBS1xZ87kTsUvqNc2qtDdtvd0+QAW1uYs/CbTwBYV9QsczK0tt0T0RXp6E3SIgbbxFuZG1zl8/mKhIsi0Po13pKegBm7tNcgFTOUqWmkkbQZVmX2EmLK/crEOvJQb888/Wb01ee4+e5gf42WhFMTGm0CBHjvU07Ekds1eYKJS0K0FyHRv/0kac8lDmmsSZrvC6I0BOSci69XjSHxedKfjBlXfXVo/vGfFJyaJ707xrS+Gn3SbxJWBPYmR07RIwvlIrrLeLvXuMOxi1CLc2eAokeRXV3EJmy8AwotQohwAPJjQyLyE0KPeG/Lquvk7+mfeeZGL4fJz7dmPubl1Zx0suqsJhkMNFGPDWOuGaJKGyD100m0kJHM2dcW6+yKNMfEHODOZdPSzGtcYjGC3Axrq8xbcyKyMLh3c2klwv/5dpzjA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;T-SQL&lt;/h2&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBfBAAAAAAAAAAW4HyOZTg3yzF7YCsR9OiaX+qTWYIYY4mN7N0GDfNhgWyBWAMJd0fw1Hk0ve3fHbMq/UUHroeEuV6X6yr+hHlKHMmjMSgYNLOQPmPhfrGtbrSzrJKRzx55ARSSFTdXDdX/hsmVNT9+PHzxugIzT64RXcnCImJUSK3ZYqwYRCI4uLHIrkVjItSjTFmm0x1k8Wbhy4oXarAqtbGx0u1RMYu/oaJk0bKgIISq6UBMGYdTIgqknOMQ5r2P4q0VEkyInrz9Ixvb3aC1MfF7FeJyRqBS1xZ87kTsUvqNc2qtDdtvd0+QAW1uYs/CbTwBYV9QsczK0tt0T0RXp6E3SIgbbxFuZG1zl8/mKhIsi0Po13pKegBm7tNcgFTOUqWmkkbQZVmX2EmLK/crEOvJQb888/Wb01ee4+e5gf42WhFMTGm0CBHjvU07Ekds1eYKJS0K0FyHRv/0kac8lDmmsSZrvC6I0BOSci69XjSHxedKfjBlXfXVo/vGfFJyaJ707xrS+Gn3SbxJWBPYmR07RIwvlIrrLeLvXuMOxi1CLc2eAokeRXV3EJmy8AwotQohwAPJjQyLyE0KPeG/Lquvk7+mfeeZGL4fJz7dmPubl1Zx0suqsJhkMNFGPDWOuGaJKGyD100m0kJHM2dcW6+yKNMfEHODOZdPSzGtcYjGC3Axrq8xbcyKyMLh3c2klwv/5dpzjA==\"&gt;Part
        1 &amp;amp; 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtpt3b/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtpt3b", "created":
        1638382768.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638383507.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtqwyn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "NeonPuzzler_",
        "can_mod_post": false, "created_utc": 1638383192.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_idxk2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python oneliners\n\n    with open(''inp1.txt'',''r'') as f:\n        inp
        = [int(line.strip()) for line in f]\n    a = sum([1 for i,x in enumerate(inp[1:],
        start=1) if x &gt; inp[i-1]])\n    b = sum([1 for i,x in enumerate(inp[1:-2],
        start=1) if sum(inp[i:i+3]) &gt; sum(inp[i-1:i+2])])\n    print(f''A: {a}\\nB:
        {b}'')", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        oneliners&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;#39;inp1.txt&amp;#39;,&amp;#39;r&amp;#39;)
        as f:\n    inp = [int(line.strip()) for line in f]\na = sum([1 for i,x in
        enumerate(inp[1:], start=1) if x &amp;gt; inp[i-1]])\nb = sum([1 for i,x in
        enumerate(inp[1:-2], start=1) if sum(inp[i:i+3]) &amp;gt; sum(inp[i-1:i+2])])\nprint(f&amp;#39;A:
        {a}\\nB: {b}&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtqwyn/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmtqwyn", "created": 1638383192.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638394275.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtsxep",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "_jacka_",
        "can_mod_post": false, "created_utc": 1638383963.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_4ff0tq0l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Parts 1 and 2.\n\n```js\nfunction day1Part1(depthMeasurements) {\n  return
        depthMeasurements.reduce((acc, elem, index, arr) =&gt; {\n    return arr[index
        + 1] &gt; elem ? acc += 1 : acc;\n  }, 0);\n}\n\nfunction day1Part2(depthMeasurements)
        {\n  let counter = 0;\n  let windowOne = getSum(depthMeasurements.slice(0,
        3));\n  let windowTwo;\n\n  for (let i = 1; i &lt; depthMeasurements.length;
        i++) {\n    windowTwo = getSum(depthMeasurements.slice(i, i + 3));\n    windowTwo
        &gt; windowOne ? counter += 1 : counter;\n    windowOne = windowTwo;\n  }\n  return
        counter;\n}\n\nfunction getSum(slice) {\n  return slice.reduce((acc, elem)
        =&gt; acc + elem, 0);\n}\n```", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Parts 1 and 2.&lt;/p&gt;\n\n&lt;p&gt;```js\nfunction
        day1Part1(depthMeasurements) {\n  return depthMeasurements.reduce((acc, elem,
        index, arr) =&amp;gt; {\n    return arr[index + 1] &amp;gt; elem ? acc +=
        1 : acc;\n  }, 0);\n}&lt;/p&gt;\n\n&lt;p&gt;function day1Part2(depthMeasurements)
        {\n  let counter = 0;\n  let windowOne = getSum(depthMeasurements.slice(0,
        3));\n  let windowTwo;&lt;/p&gt;\n\n&lt;p&gt;for (let i = 1; i &amp;lt; depthMeasurements.length;
        i++) {\n    windowTwo = getSum(depthMeasurements.slice(i, i + 3));\n    windowTwo
        &amp;gt; windowOne ? counter += 1 : counter;\n    windowOne = windowTwo;\n  }\n  return
        counter;\n}&lt;/p&gt;\n\n&lt;p&gt;function getSum(slice) {\n  return slice.reduce((acc,
        elem) =&amp;gt; acc + elem, 0);\n}\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtsxep/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmtsxep", "created": 1638383963.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmvvscc", "id": "hmvvscc", "parent_id": "t1_hmtsxep", "depth": 1, "children":
        ["hmvvscc"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638384563.0,
        "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmttnxq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "NotA9GagUser",
        "can_mod_post": false, "created_utc": 1638384248.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_9rvgj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "##Python\n\nPart 1:\n\n    arr = []\n    increases = 0\n\n    with open(\"input\",\"r\")
        as f:\n        for i in f.readlines():\n                arr.append(int(i.rstrip(\"\\n\")))\n\n\n    for
        i in range(len(arr)):\n        if i == 0:\n            continue\n        if
        arr[i-1] &lt; arr[i]:\n            increases=increases+1\n\n    print(\"Number
        of Increases: \", increases)\n\nand part 2:\n    arr = []\n    increases =
        0\n\n    with open(\"input\",\"r\") as f:\n        for i in f.readlines():\n                arr.append(int(i.rstrip(\"\\n\")))\n\n\n    for
        i in range(len(arr)):\n\n        if sum(arr[i:i+3]) &lt; sum(arr[i+1:i+4]):\n            increases+=1\n\n    print(\"Number
        of Increases: \", increases)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Python&lt;/h2&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;arr = []\nincreases = 0\n\nwith open(&amp;quot;input&amp;quot;,&amp;quot;r&amp;quot;)
        as f:\n    for i in f.readlines():\n            arr.append(int(i.rstrip(&amp;quot;\\n&amp;quot;)))\n\n\nfor
        i in range(len(arr)):\n    if i == 0:\n        continue\n    if arr[i-1] &amp;lt;
        arr[i]:\n        increases=increases+1\n\nprint(&amp;quot;Number of Increases:
        &amp;quot;, increases)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and part 2:\n    arr
        = []\n    increases = 0&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;quot;input&amp;quot;,&amp;quot;r&amp;quot;)
        as f:\n    for i in f.readlines():\n            arr.append(int(i.rstrip(&amp;quot;\\n&amp;quot;)))\n\n\nfor
        i in range(len(arr)):\n\n    if sum(arr[i:i+3]) &amp;lt; sum(arr[i+1:i+4]):\n        increases+=1\n\nprint(&amp;quot;Number
        of Increases: &amp;quot;, increases)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmttnxq/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmttnxq", "created":
        1638384248.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtvgc7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Simple **JavaScript** solution\n\nPart 1:\n\n    .split(''\\n'').reduce(([z,e],c)=&gt;[+c,c&gt;z?e+1:e],[,0])[1]\n\nPart
        2:\n\n    .split(''\\n'').map(e=&gt;+e).reduce(([z,e],c,i,a)=&gt;[c,a[i+2]&gt;z?e+1:e],[,0])[1]",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmtvgc7",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Simple
        &lt;strong&gt;JavaScript&lt;/strong&gt; solution&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;.split(&amp;#39;\\n&amp;#39;).reduce(([z,e],c)=&amp;gt;[+c,c&amp;gt;z?e+1:e],[,0])[1]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;.split(&amp;#39;\\n&amp;#39;).map(e=&amp;gt;+e).reduce(([z,e],c,i,a)=&amp;gt;[c,a[i+2]&amp;gt;z?e+1:e],[,0])[1]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtvgc7/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638384940.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638384940.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmu374l", "id": "hmu374l", "parent_id":
        "t1_hmtvgc7", "depth": 1, "children": ["hmu374l"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638388818.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtw3nw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ShaviRankar",
        "can_mod_post": false, "created_utc": 1638385191.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_11nehz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 1 in Python\n\nPart 1 with a list comprehension\n\n    with open(''data.txt'',
        ''r'') as data_file:\n        data = [int(d) for d in data_file.read().split(''\\n'')]\n        \n    def
        find_increases(data):\n        return len([data[i] for i in range(len(data)-1)
        if data[i] &lt; data[i + 1]])\n\nPart 2 with a `for` loop\n\n    def sonar_sweep(data):\n        previous_depth
        = 0\n        increases = 0\n        for i in range(len(data)-3):\n            depth
        = sum(data[i:i+3])\n    \n            if depth &gt; previous_depth:\n                increases
        += 1\n    \n            previous_depth = depth\n    \n        return increases",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day 1 in Python&lt;/p&gt;\n\n&lt;p&gt;Part
        1 with a list comprehension&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;#39;data.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as data_file:\n    data = [int(d) for d in data_file.read().split(&amp;#39;\\n&amp;#39;)]\n\ndef
        find_increases(data):\n    return len([data[i] for i in range(len(data)-1)
        if data[i] &amp;lt; data[i + 1]])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 with a &lt;code&gt;for&lt;/code&gt; loop&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        sonar_sweep(data):\n    previous_depth = 0\n    increases = 0\n    for i in
        range(len(data)-3):\n        depth = sum(data[i:i+3])\n\n        if depth
        &amp;gt; previous_depth:\n            increases += 1\n\n        previous_depth
        = depth\n\n    return increases\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtw3nw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtw3nw", "created":
        1638385191.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmuhsv1", "id": "hmuhsv1", "parent_id":
        "t1_hmtw3nw", "depth": 1, "children": ["hmuhsv1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu09qs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "joeyGibson",
        "can_mod_post": false, "created_utc": 1638386798.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_yggr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m doing it all in Python this year, after doing it all in Ruby last year.
        Here''s today''s solution.\n\n    #! /usr/bin/env python3\n    import sys\n    \n    \n    def
        part1(lst: list) -&gt; int:\n        res = [ind + 1 for ind, x in enumerate(lst)
        if ind + 1 &lt; len(lst) and lst[ind + 1] &gt; x]\n        return len(res)\n    \n    \n    def
        part2(lst: list) -&gt; int:\n        groups = [x + lst[ind + 1] + lst[ind
        + 2] for ind, x in enumerate(lst) if ind + 2 &lt; len(lst)]\n        return
        part1(groups)\n    \n    \n    def get_data(path):\n        with open(path)
        as f:\n            return [int(x) for x in f.readlines()]\n    \n    \n    if
        __name__ == ''__main__'':\n        if len(sys.argv) == 1:\n            print(''Usage:
        main.py &lt;filename&gt;'')\n            sys.exit(1)\n    \n        lines
        = get_data(sys.argv[1])\n    \n        r1 = part1(lines)\n        r2 = part2(lines)\n    \n        print(f''part
        1: {r1}'')\n        print(f''part 2: {r2}'')", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I&amp;#39;m doing it all in Python this year, after
        doing it all in Ruby last year. Here&amp;#39;s today&amp;#39;s solution.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!
        /usr/bin/env python3\nimport sys\n\n\ndef part1(lst: list) -&amp;gt; int:\n    res
        = [ind + 1 for ind, x in enumerate(lst) if ind + 1 &amp;lt; len(lst) and lst[ind
        + 1] &amp;gt; x]\n    return len(res)\n\n\ndef part2(lst: list) -&amp;gt;
        int:\n    groups = [x + lst[ind + 1] + lst[ind + 2] for ind, x in enumerate(lst)
        if ind + 2 &amp;lt; len(lst)]\n    return part1(groups)\n\n\ndef get_data(path):\n    with
        open(path) as f:\n        return [int(x) for x in f.readlines()]\n\n\nif __name__
        == &amp;#39;__main__&amp;#39;:\n    if len(sys.argv) == 1:\n        print(&amp;#39;Usage:
        main.py &amp;lt;filename&amp;gt;&amp;#39;)\n        sys.exit(1)\n\n    lines
        = get_data(sys.argv[1])\n\n    r1 = part1(lines)\n    r2 = part2(lines)\n\n    print(f&amp;#39;part
        1: {r1}&amp;#39;)\n    print(f&amp;#39;part 2: {r2}&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu09qs/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu09qs", "created":
        1638386798.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu2a1h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Dani_Fog",
        "can_mod_post": false, "created_utc": 1638387575.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_8zzg0y77", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# 1 liners :)\n\n    var num= File.ReadAllLines(@\"Day1.txt\")\r\n                .ToList()\r\n                .ConvertAll(x
        =&gt; int.Parse(x));\r\n\r\n            var part1 = num\r\n                .Zip(num.Skip(1),
        (a,b) =&gt; Tuple.Create(a,b))\r\n                .Where((a =&gt; a.Item2
        &gt; a.Item1))\r\n                .Count();\r\n\r\n            var part2 =
        num\r\n                .Where((x,i) =&gt; i+1 &lt; num.Count() \r\n                    ?
        num.Skip(i+1).Take(3).Sum() &gt; num.Skip(i).Take(3).Sum() \r\n                    :
        false)\r\n                    .Count();\r\n\r\n            Console.WriteLine(part1);\r\n            Console.WriteLine(part2);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C# 1 liners :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        num= File.ReadAllLines(@&amp;quot;Day1.txt&amp;quot;)\n            .ToList()\n            .ConvertAll(x
        =&amp;gt; int.Parse(x));\n\n        var part1 = num\n            .Zip(num.Skip(1),
        (a,b) =&amp;gt; Tuple.Create(a,b))\n            .Where((a =&amp;gt; a.Item2
        &amp;gt; a.Item1))\n            .Count();\n\n        var part2 = num\n            .Where((x,i)
        =&amp;gt; i+1 &amp;lt; num.Count() \n                ? num.Skip(i+1).Take(3).Sum()
        &amp;gt; num.Skip(i).Take(3).Sum() \n                : false)\n                .Count();\n\n        Console.WriteLine(part1);\n        Console.WriteLine(part2);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu2a1h/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu2a1h", "created":
        1638387575.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmujxka", "id": "hmujxka", "parent_id":
        "t1_hmu2a1h", "depth": 1, "children": ["hmujxka"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu2pgh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "XMBomb",
        "can_mod_post": false, "created_utc": 1638387741.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6ujcs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My scala solution, gotta love the List standard lib\n\n\n\n    import scala.io.Source\n\n    object
        Day1 extends App {\n        val filename = \"res/day1_1.txt\"\n        val
        measurementFromFile = Source.fromFile(filename).getLines.map(_.toInt).toList\n\n        println(\n            measurementFromFile.sliding(2,
        1)\n            .count(l =&gt; l(0) &lt; l(1))\n        )\n\n        println(\n            measurementFromFile.sliding(3,
        1)\n            .map(_.sum)\n            .sliding(2,1)\n            .count(l
        =&gt; l(0) &lt; l(1))\n        )\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My scala solution, gotta love the List standard lib&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        scala.io.Source\n\nobject Day1 extends App {\n    val filename = &amp;quot;res/day1_1.txt&amp;quot;\n    val
        measurementFromFile = Source.fromFile(filename).getLines.map(_.toInt).toList\n\n    println(\n        measurementFromFile.sliding(2,
        1)\n        .count(l =&amp;gt; l(0) &amp;lt; l(1))\n    )\n\n    println(\n        measurementFromFile.sliding(3,
        1)\n        .map(_.sum)\n        .sliding(2,1)\n        .count(l =&amp;gt;
        l(0) &amp;lt; l(1))\n    )\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu2pgh/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmu2pgh", "created": 1638387741.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmu337d", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "happy_srl", "can_mod_post": false, "created_utc":
        1638387890.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_7qzw869z", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Solution in [Clojure](https://git.sr.ht/~happy/AdventOfCode2021_clojure/tree/master/item/src/advent_of_code/day_01.clj)\n\nDecided
        to split it in multiple small functions to (hopefully) be more verbose.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution in &lt;a href=\"https://git.sr.ht/%7Ehappy/AdventOfCode2021_clojure/tree/master/item/src/advent_of_code/day_01.clj\"&gt;Clojure&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Decided
        to split it in multiple small functions to (hopefully) be more verbose.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu337d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu337d", "created":
        1638387890.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu4zel",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "theDen1Z",
        "can_mod_post": false, "created_utc": 1638388621.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3c5e9xox", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m lazy, so JS in Console:\n\nPlace id \"list\" on the element;\n\n`var
        array = document.getElementById(\"list\").innerText.split(''\\n'').map(n =&gt;
        parseInt(n))`\n\n`for (var i=0, count=0; i &lt; array.length - 1; ++i) { count
        += array[i] &lt; array[i + 1] }`", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I&amp;#39;m lazy, so JS in Console:&lt;/p&gt;\n\n&lt;p&gt;Place
        id &amp;quot;list&amp;quot; on the element;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var
        array = document.getElementById(&amp;quot;list&amp;quot;).innerText.split(&amp;#39;\\n&amp;#39;).map(n
        =&amp;gt; parseInt(n))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for
        (var i=0, count=0; i &amp;lt; array.length - 1; ++i) { count += array[i] &amp;lt;
        array[i + 1] }&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu4zel/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu4zel", "created":
        1638388621.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu51yq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Zeeterm",
        "can_mod_post": false, "created_utc": 1638388648.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_az8mj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution for part 2 in **c#**\n\nAvoiding summing or adding the numbers.\n\n    void
        Main()\n    {\n    \tstring file =  @\"C:\\Users\\Zeeterm\\Documents\\code\\advent\\1.txt\";\n    \tint[]
        depths =  Array.ConvertAll(System.IO.File.ReadAllLines(file),int.Parse);\n    \tint
        counter = 0;\n    \tfor (int i = 3; i &lt; depths.Length; i++)\n    \t{\n    \t\tif(depths[i]
        &gt; depths[i-3]){\n    \t\t\tcounter++;\n    \t\t}\n    \t}\n    \tConsole.WriteLine(counter);\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution for part
        2 in &lt;strong&gt;c#&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Avoiding summing
        or adding the numbers.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;void Main()\n{\n    string
        file =  @&amp;quot;C:\\Users\\Zeeterm\\Documents\\code\\advent\\1.txt&amp;quot;;\n    int[]
        depths =  Array.ConvertAll(System.IO.File.ReadAllLines(file),int.Parse);\n    int
        counter = 0;\n    for (int i = 3; i &amp;lt; depths.Length; i++)\n    {\n        if(depths[i]
        &amp;gt; depths[i-3]){\n            counter++;\n        }\n    }\n    Console.WriteLine(counter);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu51yq/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu51yq", "created":
        1638388648.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmuqayv", "id": "hmuqayv", "parent_id":
        "t1_hmu51yq", "depth": 1, "children": ["hmuqayv", "hmuyvua"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638388931.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmu5438", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JonathanWMorris",
        "can_mod_post": false, "created_utc": 1638388669.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_44ow0tzf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Wrote this in python. P.S I assigned the sonar data to a list called numbers.\n\n#
        Part 1\n\n    increasing_count = 0 \n    previous_number = None\n    \n    for
        number in numbers: \n        if previous\\_number != None: \n            if
        number &gt; previous\\_number: \n                increasing\\_count += 1\n    \n    previous_number
        = number\n    print(f\"Part 1: {increasing_count}\")\n\n# Part 2\n\n    increasing_count
        = 0 \n    previous_sum = 0\n    previous_numbers = []\n    \n    for number
        in numbers: \n        sum = 0 \n        if len(previous\\_numbers) == 3: \n            number\\_to\\_remove
        = previous\\_numbers\\[0\\]\n            previous\\_numbers.remove(number\\_to\\_remove)\n    \n        previous_numbers.append(number)\n    \n        if
        len(previous_numbers) &gt; 2:\n            for previous_number in previous_numbers:\n                sum
        += previous_number\n    \n        if sum &gt; previous_sum and previous_sum
        != 0:\n            increasing_count += 1\n    \n        previous_sum = sum\n    \n    print(f\"Part
        2: {increasing_count}\")", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wrote
        this in python. P.S I assigned the sonar data to a list called numbers.&lt;/p&gt;\n\n&lt;h1&gt;Part
        1&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;increasing_count = 0 \nprevious_number
        = None\n\nfor number in numbers: \n    if previous\\_number != None: \n        if
        number &amp;gt; previous\\_number: \n            increasing\\_count += 1\n\nprevious_number
        = number\nprint(f&amp;quot;Part 1: {increasing_count}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Part
        2&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;increasing_count = 0 \nprevious_sum
        = 0\nprevious_numbers = []\n\nfor number in numbers: \n    sum = 0 \n    if
        len(previous\\_numbers) == 3: \n        number\\_to\\_remove = previous\\_numbers\\[0\\]\n        previous\\_numbers.remove(number\\_to\\_remove)\n\n    previous_numbers.append(number)\n\n    if
        len(previous_numbers) &amp;gt; 2:\n        for previous_number in previous_numbers:\n            sum
        += previous_number\n\n    if sum &amp;gt; previous_sum and previous_sum !=
        0:\n        increasing_count += 1\n\n    previous_sum = sum\n\nprint(f&amp;quot;Part
        2: {increasing_count}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu5438/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu5438", "created":
        1638388669.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu7lg6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "shadowninja1050",
        "can_mod_post": false, "created_utc": 1638389622.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_2hpy2n2r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    n:.''0:\"input.txt\"\n    (+/&gt;'':)''(n;3+/'':n)\n\nsolution to both
        parts in K", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;n:.&amp;#39;0:&amp;quot;input.txt&amp;quot;\n(+/&amp;gt;&amp;#39;:)&amp;#39;(n;3+/&amp;#39;:n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;solution
        to both parts in K&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu7lg6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu7lg6", "created":
        1638389622.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuaadx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Implementation in Rust (first day using Rust) https://github.com/JCardoen/rust_advent_of_code/blob/master/src/day_one/one.rs",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmuaadx",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Implementation
        in Rust (first day using Rust) &lt;a href=\"https://github.com/JCardoen/rust_advent_of_code/blob/master/src/day_one/one.rs\"&gt;https://github.com/JCardoen/rust_advent_of_code/blob/master/src/day_one/one.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuaadx/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638390635.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638390635.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmulzry", "id": "hmulzry", "parent_id":
        "t1_hmuaadx", "depth": 1, "children": ["hmulzry"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638414356.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuatyn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Cerus_Freedom",
        "can_mod_post": false, "created_utc": 1638390838.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_ye9sq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I had an interesting quirk in my dataset for Part 2.\n\n    values = []\r\n    result
        = 0\r\n    with open(''D:\\\\adventofcode\\\\day1\\\\day1.txt'') as f:\r\n        for
        line in f:\r\n            values.append(int(line))\r\n    \r\n    avg = values[0]
        + values[1] + values[2]\r\n    \r\n    for i in range(2,len(values)-1):\r\n        mov
        = avg - values[i-2] + values[i+1]\r\n        if mov &gt; avg:\r\n            result
        += 1\r\n    \r\n    print(result)\n\nYou might notice, there''s a bug.  I
        forgot to assign back to avg to keep a moving window of comparison. Turns
        out, my dataset was structured in just the right way that it gave the correct
        answer with the wrong solution.  I noticed it after running, fixed, and then
        had a serious internal crises when it spit out the same answer.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I had an interesting quirk in my dataset
        for Part 2.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;values = []\nresult = 0\nwith
        open(&amp;#39;D:\\\\adventofcode\\\\day1\\\\day1.txt&amp;#39;) as f:\n    for
        line in f:\n        values.append(int(line))\n\navg = values[0] + values[1]
        + values[2]\n\nfor i in range(2,len(values)-1):\n    mov = avg - values[i-2]
        + values[i+1]\n    if mov &amp;gt; avg:\n        result += 1\n\nprint(result)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You
        might notice, there&amp;#39;s a bug.  I forgot to assign back to avg to keep
        a moving window of comparison. Turns out, my dataset was structured in just
        the right way that it gave the correct answer with the wrong solution.  I
        noticed it after running, fixed, and then had a serious internal crises when
        it spit out the same answer.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuatyn/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuatyn", "created":
        1638390838.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmvu1b9", "id": "hmvu1b9", "parent_id":
        "t1_hmuatyn", "depth": 1, "children": ["hmvu1b9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638391443.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmubyyn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "resurge",
        "can_mod_post": false, "created_utc": 1638391261.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_329zc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "js/ts\n\n    import { readFileSync } from \"fs\";\n    import { zip, drop,
        flatten, sum } from \"ramda\";\n\n    const numbers = readFileSync(\"./src/input\")\n        .toString()\n        .split(\"\\n\")\n        .map(x
        =&gt; parseInt(x));\n\n    function countIncreases(numbers: number[]) {\n        const
        pairs = zip(numbers, drop(1, numbers));\n        const counts = pairs.filter(([a,
        b]) =&gt; b &gt; a);\n        return counts.length;\n    }\n\n    const pairs
        = zip(zip(numbers, drop(1, numbers)), drop(2, numbers)).map(flatten);\n    const
        sums = pairs.map(sum);\n\n    console.log(\"part 1\", countIncreases(numbers));\n    console.log(\"part
        2\", countIncreases(sums));", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;js/ts&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        { readFileSync } from &amp;quot;fs&amp;quot;;\nimport { zip, drop, flatten,
        sum } from &amp;quot;ramda&amp;quot;;\n\nconst numbers = readFileSync(&amp;quot;./src/input&amp;quot;)\n    .toString()\n    .split(&amp;quot;\\n&amp;quot;)\n    .map(x
        =&amp;gt; parseInt(x));\n\nfunction countIncreases(numbers: number[]) {\n    const
        pairs = zip(numbers, drop(1, numbers));\n    const counts = pairs.filter(([a,
        b]) =&amp;gt; b &amp;gt; a);\n    return counts.length;\n}\n\nconst pairs
        = zip(zip(numbers, drop(1, numbers)), drop(2, numbers)).map(flatten);\nconst
        sums = pairs.map(sum);\n\nconsole.log(&amp;quot;part 1&amp;quot;, countIncreases(numbers));\nconsole.log(&amp;quot;part
        2&amp;quot;, countIncreases(sums));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmubyyn/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmubyyn", "created":
        1638391261.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmuemam",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "axr123",
        "can_mod_post": false, "created_utc": 1638392231.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_5cuakppd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C++ with SIMD\n\n    #include \"vectorclass.h\"\n    #include &lt;cstdint&gt;\n    #include
        &lt;iostream&gt;\n    #include &lt;iterator&gt;\n    #include &lt;vector&gt;\n    \n    int
        main() {\n        std::vector&lt;int16_t&gt; nums{std::istream_iterator&lt;int16_t&gt;{std::cin},
        {}};    \n        nums.resize(std::size(nums) + 16);\n        int32_t part1{};\n        int32_t
        part2{};\n        for (size_t i{0}; i &lt; std::size(nums); i += 16) {\n            Vec16s
        a, b;\n            a.load_a(&amp;nums[i]);\n            b.load(&amp;nums[i
        + 1]);\n            part1 += horizontal_count((b - a) &gt; 0);\n            b.load(&amp;nums[i
        + 3]);\n            part2 += horizontal_count((b - a) &gt; 0);\n        }\n        std::cout
        &lt;&lt; \"Part 1: \" &lt;&lt; part1 &lt;&lt; std::endl;\n        std::cout
        &lt;&lt; \"Part 2: \" &lt;&lt; part2 &lt;&lt; std::endl;\n        return 0;\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C++ with SIMD&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;quot;vectorclass.h&amp;quot;\n#include &amp;lt;cstdint&amp;gt;\n#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;iterator&amp;gt;\n#include &amp;lt;vector&amp;gt;\n\nint
        main() {\n    std::vector&amp;lt;int16_t&amp;gt; nums{std::istream_iterator&amp;lt;int16_t&amp;gt;{std::cin},
        {}};    \n    nums.resize(std::size(nums) + 16);\n    int32_t part1{};\n    int32_t
        part2{};\n    for (size_t i{0}; i &amp;lt; std::size(nums); i += 16) {\n        Vec16s
        a, b;\n        a.load_a(&amp;amp;nums[i]);\n        b.load(&amp;amp;nums[i
        + 1]);\n        part1 += horizontal_count((b - a) &amp;gt; 0);\n        b.load(&amp;amp;nums[i
        + 3]);\n        part2 += horizontal_count((b - a) &amp;gt; 0);\n    }\n    std::cout
        &amp;lt;&amp;lt; &amp;quot;Part 1: &amp;quot; &amp;lt;&amp;lt; part1 &amp;lt;&amp;lt;
        std::endl;\n    std::cout &amp;lt;&amp;lt; &amp;quot;Part 2: &amp;quot; &amp;lt;&amp;lt;
        part2 &amp;lt;&amp;lt; std::endl;\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuemam/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuemam", "created":
        1638392231.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmufugf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mrouija213",
        "can_mod_post": false, "created_utc": 1638392688.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_8o0ju", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day1: [Golang](https://github.com/marcjmiller/aoc-2021/blob/5184956b5fed778bb423cbe82dcfa2a57019723a/day1/main.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day1: &lt;a href=\"https://github.com/marcjmiller/aoc-2021/blob/5184956b5fed778bb423cbe82dcfa2a57019723a/day1/main.go\"&gt;Golang&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmufugf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmufugf", "created":
        1638392688.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmuhh4i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "here4elephantgifs",
        "can_mod_post": false, "created_utc": 1638393306.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_4mdtae7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java solution for Day 1 part 2 for parsing a file:\n\n    import java.io.File;\n    import
        java.io.FileNotFoundException;\n    import java.io.IOException;\n    import
        java.nio.file.Files;\n    import java.nio.file.Paths;\n    import java.util.Scanner;\n\n    public
        class Day01p2 {\n        public static void main(String[] args) throws IOException
        {\n        String url = \u201cindex.txt\";\n        File file = new File(url);\n        System.out.println(getIncreases(url,
        file));\n    }\n\n    private static int getIncreases(String url, File file)
        throws IOException {\n\n        int line = 0;\n        int count = 0;\n\n        while
        (line &lt; (totalLines(file) - 2)) {\n            int current = getValue(line,
        url);\n            int next = getValue((line+3), url);\n            if (current
        &lt; next) {\n                count++;\n            }\n            line++;\n        }\n\n        return
        count;\n    }\n\n    private static int getValue(int line, String url) throws
        IOException {\n        return Integer.parseInt(Files.readAllLines(Paths.get(url)).get(line));\n    }\n\n    private
        static int totalLines(File file) throws FileNotFoundException {\n        Scanner
        scanner = new Scanner(file);\n        int totalLines = 0;\n\n        while
        (scanner.hasNextLine()) {\n            scanner.nextLine();\n            totalLines++;\n        }\n\n       return
        totalLines;\n    }\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java
        solution for Day 1 part 2 for parsing a file:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport
        java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.util.Scanner;\n\npublic
        class Day01p2 {\n    public static void main(String[] args) throws IOException
        {\n    String url = \u201cindex.txt&amp;quot;;\n    File file = new File(url);\n    System.out.println(getIncreases(url,
        file));\n}\n\nprivate static int getIncreases(String url, File file) throws
        IOException {\n\n    int line = 0;\n    int count = 0;\n\n    while (line
        &amp;lt; (totalLines(file) - 2)) {\n        int current = getValue(line, url);\n        int
        next = getValue((line+3), url);\n        if (current &amp;lt; next) {\n            count++;\n        }\n        line++;\n    }\n\n    return
        count;\n}\n\nprivate static int getValue(int line, String url) throws IOException
        {\n    return Integer.parseInt(Files.readAllLines(Paths.get(url)).get(line));\n}\n\nprivate
        static int totalLines(File file) throws FileNotFoundException {\n    Scanner
        scanner = new Scanner(file);\n    int totalLines = 0;\n\n    while (scanner.hasNextLine())
        {\n        scanner.nextLine();\n        totalLines++;\n    }\n\n   return
        totalLines;\n}\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuhh4i/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmuhh4i", "created": 1638393306.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638413846.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmui302",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Mclarenf1905",
        "can_mod_post": false, "created_utc": 1638393537.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3q92t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Clojure\n[src](https://github.com/listba/advent-of-code/blob/master/2021/clojure/src/aoc_2021/days/01.clj)\n\nforgot
        about `partition` so I wrote it in terms of `reduce`\n\n\n    (defn p1 \n      ([]
        (p1 \"input\"))\n      ([file] (let [[x &amp; xs] (util/parse-nums \"01\"
        file)]\n            (first (reduce (fn [[sum prev] cur]\n                             (if
        (&lt; prev cur) [(+ 1 sum) cur] [sum cur])) [0 x] xs)))))\n\n    (defn p2
        \n      ([] (p2 \"input\"))\n      ([file] (let [[x y z &amp; xs] (util/parse-nums
        \"01\" file)]\n            (first (reduce (fn [[sum x y z] cur]\n                             (if
        (&lt; (+ x y z) (+ y z cur)) [(+ 1 sum) y z cur] [sum y z cur])) [0 x y z]
        xs)))))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Clojure&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/listba/advent-of-code/blob/master/2021/clojure/src/aoc_2021/days/01.clj\"&gt;src&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;forgot
        about &lt;code&gt;partition&lt;/code&gt; so I wrote it in terms of &lt;code&gt;reduce&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn
        p1 \n  ([] (p1 &amp;quot;input&amp;quot;))\n  ([file] (let [[x &amp;amp; xs]
        (util/parse-nums &amp;quot;01&amp;quot; file)]\n        (first (reduce (fn
        [[sum prev] cur]\n                         (if (&amp;lt; prev cur) [(+ 1 sum)
        cur] [sum cur])) [0 x] xs)))))\n\n(defn p2 \n  ([] (p2 &amp;quot;input&amp;quot;))\n  ([file]
        (let [[x y z &amp;amp; xs] (util/parse-nums &amp;quot;01&amp;quot; file)]\n        (first
        (reduce (fn [[sum x y z] cur]\n                         (if (&amp;lt; (+ x
        y z) (+ y z cur)) [(+ 1 sum) y z cur] [sum y z cur])) [0 x y z] xs)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmui302/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmui302", "created":
        1638393537.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmvt139", "id": "hmvt139", "parent_id":
        "t1_hmui302", "depth": 1, "children": ["hmvt139"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638399628.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmujjqf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "azzal07",
        "can_mod_post": false, "created_utc": 1638394090.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3v7c4gll", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "PS. didn''t notice any other **postscript** solutions yet\n\n    /depths
        [ { (%stdin) (r) file token not { exit } if } loop ] def\n    /depth@ { depths
        exch get } def\n    [ 1 3 ] {\n    \t0 1 index 1 depths length 1 sub {\n    \t\tdup
        depth@ exch 3 index sub depth@ gt { 1 add } if\n    \t} for = pop\n    } forall",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PS. didn&amp;#39;t notice
        any other &lt;strong&gt;postscript&lt;/strong&gt; solutions yet&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/depths
        [ { (%stdin) (r) file token not { exit } if } loop ] def\n/depth@ { depths
        exch get } def\n[ 1 3 ] {\n    0 1 index 1 depths length 1 sub {\n        dup
        depth@ exch 3 index sub depth@ gt { 1 add } if\n    } for = pop\n} forall\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmujjqf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmujjqf", "created":
        1638394090.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmukpkv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ravi-delia",
        "can_mod_post": false, "created_utc": 1638394532.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_81t65i59", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in Common Lisp. Knocked it out this morning, but didn''t think
        to post until now.\n\n    (defpackage :day-1\n      (:use :cl :alexandria
        :serapeum :bag-o-tricks))\n    (in-package :day-1)\n    \n    (defvar input
        (~&gt;&gt; #P\"/home/ravi/projects/lisp/advent_2021/input/day-1\"\n    \t\t   read-file-into-string\n    \t\t   lines\n    \t\t   (map
        ''list #''parse-integer)))\n    \n    (defun map-range (type fn window list)
        \n      (apply #''map type fn list\n    \t (loop for i from 1 to (1- window)\n    \t       collecting
        (slice list i))))\n    \n    (defun diffs (list &amp;key (window 1))\n      (let
        ((convoluted (map-range ''list #''+ window list)))\n        (map-range ''list
        #''- 2 convoluted)))\n    \n    (defun count-up (list)\n      (count-if (lambda
        (x) (&lt; x 0)) list))\n    \n    (defun solution () (count-up (diffs input
        :window 3)))\nYeah I use three utilities libraries wholesale, and then still
        cooked up my own, much worse, DELTAS. I''m just cool like that.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in Common Lisp. Knocked it out
        this morning, but didn&amp;#39;t think to post until now.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defpackage
        :day-1\n  (:use :cl :alexandria :serapeum :bag-o-tricks))\n(in-package :day-1)\n\n(defvar
        input (~&amp;gt;&amp;gt; #P&amp;quot;/home/ravi/projects/lisp/advent_2021/input/day-1&amp;quot;\n           read-file-into-string\n           lines\n           (map
        &amp;#39;list #&amp;#39;parse-integer)))\n\n(defun map-range (type fn window
        list) \n  (apply #&amp;#39;map type fn list\n     (loop for i from 1 to (1-
        window)\n           collecting (slice list i))))\n\n(defun diffs (list &amp;amp;key
        (window 1))\n  (let ((convoluted (map-range &amp;#39;list #&amp;#39;+ window
        list)))\n    (map-range &amp;#39;list #&amp;#39;- 2 convoluted)))\n\n(defun
        count-up (list)\n  (count-if (lambda (x) (&amp;lt; x 0)) list))\n\n(defun
        solution () (count-up (diffs input :window 3)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Yeah
        I use three utilities libraries wholesale, and then still cooked up my own,
        much worse, DELTAS. I&amp;#39;m just cool like that.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmukpkv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmukpkv", "created":
        1638394532.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638395419.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmulg4v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TommiHPunkt",
        "can_mod_post": false, "created_utc": 1638394807.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_7p3el", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Matlab: \n    \n    input = readmatrix(\"input.txt\");\n    part1 = nnz(diff(input)&gt;0)\n    part2
        = nnz(diff(matlab.tall.movingWindow(@(x) sum(x),3,input,''EndPoints'',''discard''))&gt;0)\n\nnot
        overkill at all to use `tall` builtins here :D", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Matlab: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input
        = readmatrix(&amp;quot;input.txt&amp;quot;);\npart1 = nnz(diff(input)&amp;gt;0)\npart2
        = nnz(diff(matlab.tall.movingWindow(@(x) sum(x),3,input,&amp;#39;EndPoints&amp;#39;,&amp;#39;discard&amp;#39;))&amp;gt;0)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;not
        overkill at all to use &lt;code&gt;tall&lt;/code&gt; builtins here :D&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmulg4v/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmulg4v", "created":
        1638394807.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmvpxc4", "id": "hmvpxc4", "parent_id":
        "t1_hmulg4v", "depth": 1, "children": ["hmvpxc4"]}}, {"kind": "t1", "data":
        {"author_cakeday": true, "subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmum5va", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "cbadder_two",
        "can_mod_post": false, "created_utc": 1638395081.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_3dblydun", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here is my solution in python (p1) and Java (p2). I gave in to a language
        I was more comfortable with in p2 (java) and I hope to not do that tomorrow!
        I''m going to learn more about more efficient data structures in Python tonight.\n\n[My
        Code :D](https://github.com/cbaddertwo/advent-of-code-2021/tree/main/Day%201:%20Sonar%20Sweep)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is my solution
        in python (p1) and Java (p2). I gave in to a language I was more comfortable
        with in p2 (java) and I hope to not do that tomorrow! I&amp;#39;m going to
        learn more about more efficient data structures in Python tonight.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/cbaddertwo/advent-of-code-2021/tree/main/Day%201:%20Sonar%20Sweep\"&gt;My
        Code :D&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmum5va/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmum5va", "created":
        1638395081.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmup3ay",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WiIzaaa",
        "can_mod_post": false, "created_utc": 1638396203.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_na1hf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in Scala 3 : [github](https://github.com/wahtique/advent-of-code/blob/ecf314433cfabda732ffcfc80b259f60b2a12e2f/AdventOfCode/src/advent/y2021/Day01.scala)\n\nTwo
        one liners ! First part is : \n\n```\n(input: List[Int]) =&gt; \u200binput.sliding(2).count(w
        =&gt; w.head &lt; w.last)\n```\n\nRinse and repeat for the second part :\n\n```\n(input:
        List[Int]) =&gt; input.sliding(3).map(_.sum).sliding(2).count(w =&gt; w.head
        &lt; w.last)\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution in Scala 3 : &lt;a href=\"https://github.com/wahtique/advent-of-code/blob/ecf314433cfabda732ffcfc80b259f60b2a12e2f/AdventOfCode/src/advent/y2021/Day01.scala\"&gt;github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Two
        one liners ! First part is : &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n(input:
        List[Int]) =&amp;gt; \u200binput.sliding(2).count(w =&amp;gt; w.head &amp;lt;
        w.last)\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Rinse and repeat for the second
        part :&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n(input: List[Int]) =&amp;gt; input.sliding(3).map(_.sum).sliding(2).count(w
        =&amp;gt; w.head &amp;lt; w.last)\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmup3ay/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmup3ay", "created":
        1638396203.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmupqo9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "DerGsicht",
        "can_mod_post": false, "created_utc": 1638396457.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_e0dmd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Elixir**\n\n\n    defp get_answer_1() do\n      get_input()\n      |&gt;
        Enum.reduce(0, &amp;count_increases/2)\n      |&gt; elem(0)\n    end\n    \n    defp
        get_answer_2() do\n      get_input()\n      |&gt; Enum.chunk_every(3, 1, :discard)\n      |&gt;
        Enum.map(&amp;Enum.sum/1)\n      |&gt; Enum.reduce(0, &amp;count_increases/2)\n      |&gt;
        elem(0)\n    end\n    \n    defp count_increases(value, 0), do: {0, value}\n    \n    defp
        count_increases(value, {counter, prev}) do\n      if value &gt; prev, do:
        {counter + 1, value}, else: {counter, value}\n    end", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Elixir&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defp
        get_answer_1() do\n  get_input()\n  |&amp;gt; Enum.reduce(0, &amp;amp;count_increases/2)\n  |&amp;gt;
        elem(0)\nend\n\ndefp get_answer_2() do\n  get_input()\n  |&amp;gt; Enum.chunk_every(3,
        1, :discard)\n  |&amp;gt; Enum.map(&amp;amp;Enum.sum/1)\n  |&amp;gt; Enum.reduce(0,
        &amp;amp;count_increases/2)\n  |&amp;gt; elem(0)\nend\n\ndefp count_increases(value,
        0), do: {0, value}\n\ndefp count_increases(value, {counter, prev}) do\n  if
        value &amp;gt; prev, do: {counter + 1, value}, else: {counter, value}\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmupqo9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmupqo9", "created":
        1638396457.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmurfdk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Western_Pollution526",
        "can_mod_post": false, "created_utc": 1638397120.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_95yf3dg4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n\n        internal class Puzz12021\r\n    {\r\n        private static
        List&lt;double&gt; Entry { get; } =\r\n            File.ReadAllLines(\"2021_Puzz01Entry.txt\").Select(double.Parse).ToList();\r\n\r\n        public
        static double GiveMeTheAnswerPart10() =&gt;\r\n            NumberOfMeasurementsLargerThanThePreviousOne(Entry);\r\n\r\n        private
        static double NumberOfMeasurementsLargerThanThePreviousOne(IEnumerable&lt;double&gt;
        entry) =&gt;\r\n            entry\r\n                .Skip(1)\r\n                .Select((e,
        i) =&gt; (e, i+1))\r\n                .Count(d =&gt; entry.ElementAt(d.Item2
        - 1) &lt; d.e);\r\n\r\n\r\n        public static double GiveMeTheAnswerPart20()
        =&gt;\r\n            NumberOfMeasurementsLargerThanThePreviousOne(\r\n                Entry.Take(Entry.Count
        -2)\r\n                    .Select((e, i) =&gt; e + Entry[i + 1] + Entry[i
        + 2]));\r\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    internal
        class Puzz12021\n{\n    private static List&amp;lt;double&amp;gt; Entry {
        get; } =\n        File.ReadAllLines(&amp;quot;2021_Puzz01Entry.txt&amp;quot;).Select(double.Parse).ToList();\n\n    public
        static double GiveMeTheAnswerPart10() =&amp;gt;\n        NumberOfMeasurementsLargerThanThePreviousOne(Entry);\n\n    private
        static double NumberOfMeasurementsLargerThanThePreviousOne(IEnumerable&amp;lt;double&amp;gt;
        entry) =&amp;gt;\n        entry\n            .Skip(1)\n            .Select((e,
        i) =&amp;gt; (e, i+1))\n            .Count(d =&amp;gt; entry.ElementAt(d.Item2
        - 1) &amp;lt; d.e);\n\n\n    public static double GiveMeTheAnswerPart20()
        =&amp;gt;\n        NumberOfMeasurementsLargerThanThePreviousOne(\n            Entry.Take(Entry.Count
        -2)\n                .Select((e, i) =&amp;gt; e + Entry[i + 1] + Entry[i +
        2]));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmurfdk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmurfdk", "created":
        1638397120.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmvxep1", "id": "hmvxep1", "parent_id":
        "t1_hmurfdk", "depth": 1, "children": ["hmvxep1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmusk2z",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Loonis",
        "can_mod_post": false, "created_utc": 1638397568.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_8vkeb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Perl\n\n* Part 1 [paste](https://topaz.github.io/paste/#XQAAAQClAAAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx++HqIaL2DMg1F6nMv/N03+PSKVPZzPLWkhTOH+Av15YS/boxBxuoXewbr/NJZRLDcBll+STtUGjrSdUZx0b3bh0Ek7Ha26Co+pwwzNb4eD5vIQfS7Zx06pS7xpSzfdZW8CzIwgn+1bvUPwm4f+JjQAA)\n*
        Part 2 [paste](https://topaz.github.io/paste/#XQAAAQA1AQAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx++HqIaL2DMg1F6nMv/N03+PSKVPZzPLWkhTOH+Av15YS/boxBxuoXewbr/NJZRLDcBlmUQQg1Yuc4uRIEUP9nAFXz+F0uL+vhKf3Gl2wL+UTFH/hKxGyybQRKaeHj85p43BnOQToJUT6cFlJX6K3KwJHq6o42+v+fuYVkninv7QbTbas/M5Lz2kJqGNh2LqeOAF45qljGinFd+nfEYz7cLToPmZtwPUwYoqg2yz1HhV/S9aLw==)\n\nSome
        hopefully straightforward code to start off the year :)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Perl&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Part
        1 &lt;a href=\"https://topaz.github.io/paste/#XQAAAQClAAAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx++HqIaL2DMg1F6nMv/N03+PSKVPZzPLWkhTOH+Av15YS/boxBxuoXewbr/NJZRLDcBll+STtUGjrSdUZx0b3bh0Ek7Ha26Co+pwwzNb4eD5vIQfS7Zx06pS7xpSzfdZW8CzIwgn+1bvUPwm4f+JjQAA\"&gt;paste&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Part
        2 &lt;a href=\"https://topaz.github.io/paste/#XQAAAQA1AQAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx++HqIaL2DMg1F6nMv/N03+PSKVPZzPLWkhTOH+Av15YS/boxBxuoXewbr/NJZRLDcBlmUQQg1Yuc4uRIEUP9nAFXz+F0uL+vhKf3Gl2wL+UTFH/hKxGyybQRKaeHj85p43BnOQToJUT6cFlJX6K3KwJHq6o42+v+fuYVkninv7QbTbas/M5Lz2kJqGNh2LqeOAF45qljGinFd+nfEYz7cLToPmZtwPUwYoqg2yz1HhV/S9aLw==\"&gt;paste&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Some
        hopefully straightforward code to start off the year :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmusk2z/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmusk2z", "created":
        1638397568.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmuu0nz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "narrow_assignment",
        "can_mod_post": false, "created_utc": 1638398157.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6am4atrk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**awk(1)**\n\nDay 01:\n\n    #!/usr/bin/awk -f\n    \n    NR &gt; 1 &amp;&amp;
        $0 &gt; a { n++     }\n                     { a = $0  }\n    END              {
        print n }\n\nDay 02:\n\n    #!/usr/bin/awk -f\n    \n                                     {
        c = NR % 4 }\n                                     { for (i = 0; i &lt; 4;
        i++) if (i != c) a[i] += $0 }\n    NR &gt; 3 &amp;&amp; a[(NR + 1) % 4] &gt;
        a[c] { m++ }\n                                     { a[c] = 0 }\n    END                              {
        print m }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;awk(1)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Day
        01:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/awk -f\n\nNR &amp;gt; 1
        &amp;amp;&amp;amp; $0 &amp;gt; a { n++     }\n                 { a = $0  }\nEND              {
        print n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Day 02:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/awk
        -f\n\n                                 { c = NR % 4 }\n                                 {
        for (i = 0; i &amp;lt; 4; i++) if (i != c) a[i] += $0 }\nNR &amp;gt; 3 &amp;amp;&amp;amp;
        a[(NR + 1) % 4] &amp;gt; a[c] { m++ }\n                                 {
        a[c] = 0 }\nEND                              { print m }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuu0nz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuu0nz", "created":
        1638398157.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuudfb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmuudfb", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuudfb/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638398302.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638398302.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmv3hn7", "id": "hmv3hn7", "parent_id":
        "t1_hmuudfb", "depth": 1, "children": ["hmv3hn7", "hmv1sso", "hmuy0i2"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuuqt2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "troublemaker74",
        "can_mod_post": false, "created_utc": 1638398453.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_7r2er", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Elixir:\n\n    defmodule AdventOfCode.Day01 do\n      def part1(args) do\n        args\n        |&gt;
        Enum.chunk_every(2, 1, :discard)\n        |&gt; Enum.filter(fn [a, b] -&gt;
        b &gt; a end)\n        |&gt; Enum.count()\n      end\n    \n      def part2(args)
        do\n        args\n        |&gt; Enum.chunk_every(3, 1, :discard)\n        |&gt;
        Enum.map(&amp;Enum.sum(&amp;1))\n        |&gt; part1\n      end\n    end",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elixir:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        AdventOfCode.Day01 do\n  def part1(args) do\n    args\n    |&amp;gt; Enum.chunk_every(2,
        1, :discard)\n    |&amp;gt; Enum.filter(fn [a, b] -&amp;gt; b &amp;gt; a end)\n    |&amp;gt;
        Enum.count()\n  end\n\n  def part2(args) do\n    args\n    |&amp;gt; Enum.chunk_every(3,
        1, :discard)\n    |&amp;gt; Enum.map(&amp;amp;Enum.sum(&amp;amp;1))\n    |&amp;gt;
        part1\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuuqt2/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmuuqt2", "created": 1638398453.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmuyqf6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Tripoli_Incontinent", "can_mod_post":
        false, "created_utc": 1638400131.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 3, "author_fullname": "t2_hx2os", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "In bash :\n\nPart
        1:\n    \n    #!/bin/bash\n    \n    count=0\n    \n    lastDepth=99999\n    \n    while
        read depth; do\n        if test $depth -gt $lastDepth; then\n            ((
        count++ ))\n        fi\n    \n    \n        lastDepth=$depth\n    done &lt;
        input\n    \n    echo \"count is $count\"\n\nPart 2 :\n    \n    #!/bin/bash\n    \n    count=0\n    \n    last1=-1\n    last2=-1\n    lastSum=999999\n    \n    while
        read depth; do\n        if test $last2 -ne -1; then\n            sum=$(( last1
        + last2 + depth ))\n            \n            if test $sum -gt $lastSum; then\n                ((
        count++ ))\n            fi\n    \n            lastSum=$sum\n        fi\n    \n    \n        last2=$last1\n        last1=$depth\n    done
        &lt; input\n    \n    echo \"count is $count\"", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;In bash :&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/bash\n\ncount=0\n\nlastDepth=99999\n\nwhile
        read depth; do\n    if test $depth -gt $lastDepth; then\n        (( count++
        ))\n    fi\n\n\n    lastDepth=$depth\ndone &amp;lt; input\n\necho &amp;quot;count
        is $count&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2 :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/bash\n\ncount=0\n\nlast1=-1\nlast2=-1\nlastSum=999999\n\nwhile
        read depth; do\n    if test $last2 -ne -1; then\n        sum=$(( last1 + last2
        + depth ))\n\n        if test $sum -gt $lastSum; then\n            (( count++
        ))\n        fi\n\n        lastSum=$sum\n    fi\n\n\n    last2=$last1\n    last1=$depth\ndone
        &amp;lt; input\n\necho &amp;quot;count is $count&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuyqf6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuyqf6", "created":
        1638400131.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmuzllx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "2SmoothForYou",
        "can_mod_post": false, "created_utc": 1638400529.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_hephg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Haskell**\n\n    main :: IO ()\n    main = parse &gt;&gt;= print . (part1
        &amp;&amp;&amp; part2)\n    \n    parse :: IO [Int] \n    parse = map read
        . lines &lt;$&gt; readFile \"input.txt\"\n    \n    part1 :: [Int] -&gt; Int
        \n    part1 input = length . filter id $ zipWith (&gt;) (tail input) input\n    \n    part2
        :: [Int] -&gt; Int \n    part2 input = length . filter id $ zipWith (&gt;)
        (drop 3 input) input", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Haskell&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;main
        :: IO ()\nmain = parse &amp;gt;&amp;gt;= print . (part1 &amp;amp;&amp;amp;&amp;amp;
        part2)\n\nparse :: IO [Int] \nparse = map read . lines &amp;lt;$&amp;gt; readFile
        &amp;quot;input.txt&amp;quot;\n\npart1 :: [Int] -&amp;gt; Int \npart1 input
        = length . filter id $ zipWith (&amp;gt;) (tail input) input\n\npart2 :: [Int]
        -&amp;gt; Int \npart2 input = length . filter id $ zipWith (&amp;gt;) (drop
        3 input) input\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuzllx/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmuzllx", "created": 1638400529.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_hmvtlnm", "id": "hmvtlnm", "parent_id": "t1_hmuzllx", "depth": 1, "children":
        ["hmvtlnm", "hmvb8ab"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638412732.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv10v7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1638401187.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby:\n    \n    execute(1) do |lines|\n      lines.map(&amp;:to_i).each_cons(2).count
        { |a, b| b &gt; a }\n    end\n    \n    execute(2) do |lines|\n      lines.map(&amp;:to_i).each_cons(3).map
        { |a, b, c| a + b + c }.each_cons(2).count { |a, b| b &gt; a }\n    end\n\nhttps://github.com/snowe2010/advent-of-code/blob/81f560f4f84bae2dad08a114606fe22960c07a19/ruby_aoc/2021/day01/day01.rb\n\nKotlin:\n    \n    execute(1)
        { lines -&gt;\n        lines.map { it.toInt() }.windowed(2).count { (a, b)
        -&gt; b &gt; a }\n    }\n    \n    execute(2) { lines -&gt;\n        // turns
        out that b + c + d  &gt; a + b + c is the same as d &gt; a since b and c cancel
        out\n        lines.map { it.toInt() }\n            .windowed(4)\n            .count
        { (a, _, _, d) -&gt; d &gt; a }\n    }\n\nhttps://github.com/snowe2010/advent-of-code/blob/81f560f4f84bae2dad08a114606fe22960c07a19/kotlin_aoc/src/main/kotlin/aoc2021/day01.kt\n\nI''ve
        modified the kotlin one quite a number of times using discoveries from this
        thread.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;execute(1)
        do |lines|\n  lines.map(&amp;amp;:to_i).each_cons(2).count { |a, b| b &amp;gt;
        a }\nend\n\nexecute(2) do |lines|\n  lines.map(&amp;amp;:to_i).each_cons(3).map
        { |a, b, c| a + b + c }.each_cons(2).count { |a, b| b &amp;gt; a }\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/snowe2010/advent-of-code/blob/81f560f4f84bae2dad08a114606fe22960c07a19/ruby_aoc/2021/day01/day01.rb\"&gt;https://github.com/snowe2010/advent-of-code/blob/81f560f4f84bae2dad08a114606fe22960c07a19/ruby_aoc/2021/day01/day01.rb&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Kotlin:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;execute(1)
        { lines -&amp;gt;\n    lines.map { it.toInt() }.windowed(2).count { (a, b)
        -&amp;gt; b &amp;gt; a }\n}\n\nexecute(2) { lines -&amp;gt;\n    // turns
        out that b + c + d  &amp;gt; a + b + c is the same as d &amp;gt; a since b
        and c cancel out\n    lines.map { it.toInt() }\n        .windowed(4)\n        .count
        { (a, _, _, d) -&amp;gt; d &amp;gt; a }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/snowe2010/advent-of-code/blob/81f560f4f84bae2dad08a114606fe22960c07a19/kotlin_aoc/src/main/kotlin/aoc2021/day01.kt\"&gt;https://github.com/snowe2010/advent-of-code/blob/81f560f4f84bae2dad08a114606fe22960c07a19/kotlin_aoc/src/main/kotlin/aoc2021/day01.kt&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve
        modified the kotlin one quite a number of times using discoveries from this
        thread.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv10v7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv10v7", "created":
        1638401187.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmvoam0", "id": "hmvoam0", "parent_id":
        "t1_hmv10v7", "depth": 1, "children": ["hmvoam0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv1ch7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "zwrawr",
        "can_mod_post": false, "created_utc": 1638401340.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_fwmwv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First time doing AoC as it''s running! I''ve decided to use Rust. The main
        problem with that is I don''t know Rust. So this is a rather naive implementation.
        https://github.com/zwrawr/Recap/blob/master/Advent%20of%20Code/2021/one/src/main.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First time doing AoC
        as it&amp;#39;s running! I&amp;#39;ve decided to use Rust. The main problem
        with that is I don&amp;#39;t know Rust. So this is a rather naive implementation.
        &lt;a href=\"https://github.com/zwrawr/Recap/blob/master/Advent%20of%20Code/2021/one/src/main.rs\"&gt;https://github.com/zwrawr/Recap/blob/master/Advent%20of%20Code/2021/one/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv1ch7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv1ch7", "created":
        1638401340.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmv3rmi", "id": "hmv3rmi", "parent_id":
        "t1_hmv1ch7", "depth": 1, "children": ["hmv3rmi"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv23t1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "b4ux1t3",
        "can_mod_post": false, "created_utc": 1638401698.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6bs49", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python One-Line Solutions for part 1 and part 2: (I''m sorry)\n\n    print(sum([1
        for x,y in zip([int(token) for token in open(\"inputs.txt\", \"r\")][0:-1],[int(token)
        for token in open(\"inputs.txt\", \"r\")][1:]) if x &lt; y]))\n    print(sum([1
        for x,y in zip([i for i in [sum((a, b, c)) for a, b, c in zip([int(token)
        for token in open(\"inputs.txt\", \"r\")][0:-2],[int(token) for token in open(\"inputs.txt\",
        \"r\")][1:-1],[int(token) for token in open(\"inputs.txt\", \"r\")][2:])]][:-1],[i
        for i in [sum((a, b, c)) for a, b, c in zip([int(token) for token in open(\"inputs.txt\",
        \"r\")][0:-2],[int(token) for token in open(\"inputs.txt\", \"r\")][1:-1],[int(token)
        for token in open(\"inputs.txt\", \"r\")][2:])]][1:]) if x &lt; y]))\n\n\nI''m
        actually doing this in [F#](https://gitlab.com/b4ux1t3/advent-of-code/-/blob/main/2021/DayOne/Program.fs)
        this year, to learn F#, but I felt like solving it in one line in python just
        for fun.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        One-Line Solutions for part 1 and part 2: (I&amp;#39;m sorry)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(sum([1
        for x,y in zip([int(token) for token in open(&amp;quot;inputs.txt&amp;quot;,
        &amp;quot;r&amp;quot;)][0:-1],[int(token) for token in open(&amp;quot;inputs.txt&amp;quot;,
        &amp;quot;r&amp;quot;)][1:]) if x &amp;lt; y]))\nprint(sum([1 for x,y in zip([i
        for i in [sum((a, b, c)) for a, b, c in zip([int(token) for token in open(&amp;quot;inputs.txt&amp;quot;,
        &amp;quot;r&amp;quot;)][0:-2],[int(token) for token in open(&amp;quot;inputs.txt&amp;quot;,
        &amp;quot;r&amp;quot;)][1:-1],[int(token) for token in open(&amp;quot;inputs.txt&amp;quot;,
        &amp;quot;r&amp;quot;)][2:])]][:-1],[i for i in [sum((a, b, c)) for a, b,
        c in zip([int(token) for token in open(&amp;quot;inputs.txt&amp;quot;, &amp;quot;r&amp;quot;)][0:-2],[int(token)
        for token in open(&amp;quot;inputs.txt&amp;quot;, &amp;quot;r&amp;quot;)][1:-1],[int(token)
        for token in open(&amp;quot;inputs.txt&amp;quot;, &amp;quot;r&amp;quot;)][2:])]][1:])
        if x &amp;lt; y]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m actually
        doing this in &lt;a href=\"https://gitlab.com/b4ux1t3/advent-of-code/-/blob/main/2021/DayOne/Program.fs\"&gt;F#&lt;/a&gt;
        this year, to learn F#, but I felt like solving it in one line in python just
        for fun.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv23t1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv23t1", "created":
        1638401698.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv3f9l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MischaDy",
        "can_mod_post": false, "created_utc": 1638402296.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_gybvs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [Solution](https://topaz.github.io/paste/#XQAAAQCPAQAAAAAAAAAQa4emBBYORLT7RWfpES92A+mmlh9aUXSVuMNU8qGRtXImMlJLu4SLRiXjaHBVS9rZTXbSVNlbnyPtyXfCc/LhSh9ikDxXSHqC92YHbkwTe5bf+1/9eiow)
        in [Cubix](https://esolangs.org/wiki/Cubix)\n\n[Here](https://topaz.github.io/paste/#XQAAAQCPAQAAAAAAAAAQa4emBBYORLT7RWfpES92A+mmlh9aUXSVuMNU8qGRtXImMlJLu4SLRiXjaHBVS9rZTXbSVNlbnyPtyXfCc/LhSh9ikDxXSHqC92YHbkwTe5bf+1/9eiow)
        is the link to our solution in Cubix, a 2D stack-based esoteric programming
        language where the pointer moves along a cube! [Here](https://esolangs.org/wiki/Cubix)
        is the language specification and [here](http://ethproductions.github.io/cubix/)
        is a Cubix interpreter. It was a fun little challenge!\n\nThe solution works
        as follows:\n\n\\- Read the input to the stack until you encounter a 0. Remove
        it.\n\n\\- Push the stack length (= number of integers to subtract), and decrement
        it. This is how many times we will have to subtract two numbers.\n\n\\- Subtract
        two numbers, keeping the counter in one of the top three positions and decrementing
        it each time. Always remove the biggest number after subtracting since it
        won''t be used anymore.\n\n\\- After each subtraction, check if the counter
        is zero. Continue if not.\n\n\\- If the counter *is* 0, count the negative
        numbers in the stack, removing each one before updating the counter.\n\n\\-
        Once the stack reaches a size of 1, we know that only the counter remains.
        Output it and halt.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCPAQAAAAAAAAAQa4emBBYORLT7RWfpES92A+mmlh9aUXSVuMNU8qGRtXImMlJLu4SLRiXjaHBVS9rZTXbSVNlbnyPtyXfCc/LhSh9ikDxXSHqC92YHbkwTe5bf+1/9eiow\"&gt;Solution&lt;/a&gt;
        in &lt;a href=\"https://esolangs.org/wiki/Cubix\"&gt;Cubix&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCPAQAAAAAAAAAQa4emBBYORLT7RWfpES92A+mmlh9aUXSVuMNU8qGRtXImMlJLu4SLRiXjaHBVS9rZTXbSVNlbnyPtyXfCc/LhSh9ikDxXSHqC92YHbkwTe5bf+1/9eiow\"&gt;Here&lt;/a&gt;
        is the link to our solution in Cubix, a 2D stack-based esoteric programming
        language where the pointer moves along a cube! &lt;a href=\"https://esolangs.org/wiki/Cubix\"&gt;Here&lt;/a&gt;
        is the language specification and &lt;a href=\"http://ethproductions.github.io/cubix/\"&gt;here&lt;/a&gt;
        is a Cubix interpreter. It was a fun little challenge!&lt;/p&gt;\n\n&lt;p&gt;The
        solution works as follows:&lt;/p&gt;\n\n&lt;p&gt;- Read the input to the stack
        until you encounter a 0. Remove it.&lt;/p&gt;\n\n&lt;p&gt;- Push the stack
        length (= number of integers to subtract), and decrement it. This is how many
        times we will have to subtract two numbers.&lt;/p&gt;\n\n&lt;p&gt;- Subtract
        two numbers, keeping the counter in one of the top three positions and decrementing
        it each time. Always remove the biggest number after subtracting since it
        won&amp;#39;t be used anymore.&lt;/p&gt;\n\n&lt;p&gt;- After each subtraction,
        check if the counter is zero. Continue if not.&lt;/p&gt;\n\n&lt;p&gt;- If
        the counter &lt;em&gt;is&lt;/em&gt; 0, count the negative numbers in the stack,
        removing each one before updating the counter.&lt;/p&gt;\n\n&lt;p&gt;- Once
        the stack reaches a size of 1, we know that only the counter remains. Output
        it and halt.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv3f9l/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv3f9l", "created":
        1638402296.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638412717.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvao30", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "curlymeatball38",
        "can_mod_post": false, "created_utc": 1638405458.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_4szgs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell\n\nPart 2 was basically the same as part 1 but you needed to add
        up the sliding window of three elements first.\n\n    module\u200b\u00a0\u200bDay1\u200b\u00a0(\u200bpart1\u200b,\u00a0\u200bpart2\u200b)\u00a0\u200bwhere
        \n    \n    import\u200b\u00a0\u200bControl.Applicative \n    import\u200b\u00a0\u200bData.List\n    \n    part1\u200b\u00a0\u200b::\u200b\u00a0[\u200bString\u200b]\u00a0\u200b-&gt;\u200b\u00a0\u200bString\n    part1\u00a0\u200b=\u200b\u00a0\u200bshow\u200b\u00a0\u200b.\u200b\u00a0increases\u00a0\u200b.\u200b\u00a0windows\u00a0\u200b2\u200b\u00a0\u200b.\u200b\u00a0ints\n    \n    part2\u200b\u00a0\u200b::\u200b\u00a0[\u200bString\u200b]\u00a0\u200b-&gt;\u200b\u00a0\u200bString\n    part2\u00a0\u200b=\u200b\u00a0\u200bshow\u200b\u00a0\u200b.\u200b\u00a0increases\u00a0\u200b.\u200b\u00a0windows\u00a0\u200b2\u200b\u00a0\u200b.\u200b
        sums\u00a0\u200b.\u200b\u00a0windows\u00a0\u200b3\u200b\u00a0\u200b.\u200b\u00a0ints\n    \n    increases\u200b\u00a0\u200b::\u200b\u00a0[[\u200bInt\u200b]]\u00a0\u200b-&gt;\u200b\u00a0\u200bInt\n    increases\u00a0\u200b=\u200b\u00a0\u200bfoldl\u200b\u00a0(\u200b\\\u200bacc\u00a0(x\u00a0\u200b:\u200b\u00a0y\u00a0\u200b:\u200b\u00a0_)\u00a0\u200b-&gt;\u200b\u00a0\u200bif\u200b\u00a0y\u00a0\u200b&gt;\u200b\u00a0x\u00a0\u200bthen\u200b\u00a0acc\u00a0\u200b+\u200b\u00a0\u200b1\u200b\u00a0\u200belse\u200b\u00a0acc)\u00a0\u200b0\n    \n    ints\u200b\u00a0\u200b::\u200b\u00a0[\u200bString\u200b]\u00a0\u200b-&gt;\u200b\u00a0[\u200bInt\u200b]\n    ints\u00a0\u200b=\u200b\u00a0\u200bmap\u200b\u00a0\u200bread\n    \n    windows\u200b\u00a0\u200b::\u200b\u00a0\u200bInt\u200b\u00a0\u200b-&gt;\u200b\u00a0[\u200ba\u200b]\u00a0\u200b-&gt;\u200b\u00a0[[\u200ba\u200b]]\n    windows\u00a0n\u00a0\u200b=\u200b\u00a0getZipList\u00a0\u200b.\u200b\u00a0\u200btraverse\u200b\u00a0\u200bZipList\u200b\u00a0\u200b.\u200b\u00a0\u200btake\u200b\u00a0n\u00a0\u200b.\u200b\u00a0tails\n    \n    sums\u200b\u00a0\u200b::\u200b\u00a0[[\u200bInt\u200b]]\u00a0\u200b-&gt;\u200b\u00a0[\u200bInt\u200b]
        \n    sums\u00a0\u200b=\u200b\u00a0\u200bmap\u200b\u00a0\u200bsum", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell&lt;/p&gt;\n\n&lt;p&gt;Part 2 was
        basically the same as part 1 but you needed to add up the sliding window of
        three elements first.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module\u200b\u00a0\u200bDay1\u200b\u00a0(\u200bpart1\u200b,\u00a0\u200bpart2\u200b)\u00a0\u200bwhere
        \n\nimport\u200b\u00a0\u200bControl.Applicative \nimport\u200b\u00a0\u200bData.List\n\npart1\u200b\u00a0\u200b::\u200b\u00a0[\u200bString\u200b]\u00a0\u200b-&amp;gt;\u200b\u00a0\u200bString\npart1\u00a0\u200b=\u200b\u00a0\u200bshow\u200b\u00a0\u200b.\u200b\u00a0increases\u00a0\u200b.\u200b\u00a0windows\u00a0\u200b2\u200b\u00a0\u200b.\u200b\u00a0ints\n\npart2\u200b\u00a0\u200b::\u200b\u00a0[\u200bString\u200b]\u00a0\u200b-&amp;gt;\u200b\u00a0\u200bString\npart2\u00a0\u200b=\u200b\u00a0\u200bshow\u200b\u00a0\u200b.\u200b\u00a0increases\u00a0\u200b.\u200b\u00a0windows\u00a0\u200b2\u200b\u00a0\u200b.\u200b
        sums\u00a0\u200b.\u200b\u00a0windows\u00a0\u200b3\u200b\u00a0\u200b.\u200b\u00a0ints\n\nincreases\u200b\u00a0\u200b::\u200b\u00a0[[\u200bInt\u200b]]\u00a0\u200b-&amp;gt;\u200b\u00a0\u200bInt\nincreases\u00a0\u200b=\u200b\u00a0\u200bfoldl\u200b\u00a0(\u200b\\\u200bacc\u00a0(x\u00a0\u200b:\u200b\u00a0y\u00a0\u200b:\u200b\u00a0_)\u00a0\u200b-&amp;gt;\u200b\u00a0\u200bif\u200b\u00a0y\u00a0\u200b&amp;gt;\u200b\u00a0x\u00a0\u200bthen\u200b\u00a0acc\u00a0\u200b+\u200b\u00a0\u200b1\u200b\u00a0\u200belse\u200b\u00a0acc)\u00a0\u200b0\n\nints\u200b\u00a0\u200b::\u200b\u00a0[\u200bString\u200b]\u00a0\u200b-&amp;gt;\u200b\u00a0[\u200bInt\u200b]\nints\u00a0\u200b=\u200b\u00a0\u200bmap\u200b\u00a0\u200bread\n\nwindows\u200b\u00a0\u200b::\u200b\u00a0\u200bInt\u200b\u00a0\u200b-&amp;gt;\u200b\u00a0[\u200ba\u200b]\u00a0\u200b-&amp;gt;\u200b\u00a0[[\u200ba\u200b]]\nwindows\u00a0n\u00a0\u200b=\u200b\u00a0getZipList\u00a0\u200b.\u200b\u00a0\u200btraverse\u200b\u00a0\u200bZipList\u200b\u00a0\u200b.\u200b\u00a0\u200btake\u200b\u00a0n\u00a0\u200b.\u200b\u00a0tails\n\nsums\u200b\u00a0\u200b::\u200b\u00a0[[\u200bInt\u200b]]\u00a0\u200b-&amp;gt;\u200b\u00a0[\u200bInt\u200b]
        \nsums\u00a0\u200b=\u200b\u00a0\u200bmap\u200b\u00a0\u200bsum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvao30/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvao30", "created":
        1638405458.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmvc62v", "id": "hmvc62v", "parent_id":
        "t1_hmvao30", "depth": 1, "children": ["hmvc62v", "hmvnidv"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvcr0w",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thecircleisround",
        "can_mod_post": false, "created_utc": 1638406371.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_dwlo1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Glad to be back at it!\n\nPython\n    \n    input_file = list(map(int,open(''input.txt'').read().splitlines()))\n    \n    def
        part_one(input_file:list):\n        increases = [y for x,y in enumerate(input_file[1:])
        if input_file[x] &lt; y]\n        return len(increases)\n    \n    def part_two(input_file):\n        sliding_sums
        = [sum(input_file[i:i+3]) for i in range(len(input_file)-2)]\n        return
        part_one(sliding_sums)\n    \n    print(part_one(input_file))\n    print(part_two(input_file))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Glad to be back at it!&lt;/p&gt;\n\n&lt;p&gt;Python&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input_file
        = list(map(int,open(&amp;#39;input.txt&amp;#39;).read().splitlines()))\n\ndef
        part_one(input_file:list):\n    increases = [y for x,y in enumerate(input_file[1:])
        if input_file[x] &amp;lt; y]\n    return len(increases)\n\ndef part_two(input_file):\n    sliding_sums
        = [sum(input_file[i:i+3]) for i in range(len(input_file)-2)]\n    return part_one(sliding_sums)\n\nprint(part_one(input_file))\nprint(part_two(input_file))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvcr0w/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvcr0w", "created":
        1638406371.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvd5ko",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Euen",
        "can_mod_post": false, "created_utc": 1638406547.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_n3u5i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Elixir\n\n    stream_input =\n      File.stream!(\"day1_input.txt\")\n      |&gt;
        Stream.map(&amp;String.trim/1)\n      |&gt; Stream.map(&amp;String.to_integer/1)\n    \n    #
        Part 1\n    stream_input\n    |&gt; Stream.scan({nil, 0}, fn\n      num, {prev,
        count} when num &gt; prev -&gt; {num, count + 1}\n      num, {_prev, count}
        -&gt; {num, count}\n    end)\n    |&gt; Stream.take(-1)\n    |&gt; Enum.to_list()\n    |&gt;
        Enum.at(0)\n    |&gt; elem(1)\n    \n    # Part 2\n    stream_input\n    |&gt;
        Stream.chunk_every(3, 1, :discard)\n    |&gt; Stream.map(&amp;Enum.sum/1)\n    |&gt;
        Stream.scan({nil, 0}, fn\n        num, {prev, count} when num &gt; prev -&gt;
        {num, count + 1}\n        num, {_prev, count} -&gt; {num, count}\n      end)\n    |&gt;
        Stream.take(-1)\n    |&gt; Enum.to_list\n    |&gt; Enum.at(0)\n    |&gt; elem(1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;stream_input
        =\n  File.stream!(&amp;quot;day1_input.txt&amp;quot;)\n  |&amp;gt; Stream.map(&amp;amp;String.trim/1)\n  |&amp;gt;
        Stream.map(&amp;amp;String.to_integer/1)\n\n# Part 1\nstream_input\n|&amp;gt;
        Stream.scan({nil, 0}, fn\n  num, {prev, count} when num &amp;gt; prev -&amp;gt;
        {num, count + 1}\n  num, {_prev, count} -&amp;gt; {num, count}\nend)\n|&amp;gt;
        Stream.take(-1)\n|&amp;gt; Enum.to_list()\n|&amp;gt; Enum.at(0)\n|&amp;gt;
        elem(1)\n\n# Part 2\nstream_input\n|&amp;gt; Stream.chunk_every(3, 1, :discard)\n|&amp;gt;
        Stream.map(&amp;amp;Enum.sum/1)\n|&amp;gt; Stream.scan({nil, 0}, fn\n    num,
        {prev, count} when num &amp;gt; prev -&amp;gt; {num, count + 1}\n    num,
        {_prev, count} -&amp;gt; {num, count}\n  end)\n|&amp;gt; Stream.take(-1)\n|&amp;gt;
        Enum.to_list\n|&amp;gt; Enum.at(0)\n|&amp;gt; elem(1)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvd5ko/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvd5ko", "created":
        1638406547.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638409715.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvewiq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gmfawcett",
        "can_mod_post": false, "created_utc": 1638407312.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_r864", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m not doing the whole thing in J this year, but here''s a complete Day
        1 solution:\n\n    echo (f,([:(f=.[:+/}:&lt;}.)(3+/\\]))) \".;._2 fread ''day01.txt''\n\n(and
        yes, I did golf it for extra reddit points)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not doing the whole thing in J this year,
        but here&amp;#39;s a complete Day 1 solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo
        (f,([:(f=.[:+/}:&amp;lt;}.)(3+/\\]))) &amp;quot;.;._2 fread &amp;#39;day01.txt&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(and
        yes, I did golf it for extra reddit points)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvewiq/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmvewiq", "created": 1638407312.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_hmvg1hk", "id": "hmvg1hk", "parent_id": "t1_hmvewiq", "depth": 1, "children":
        ["hmvg1hk"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvg4o4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Tethylis",
        "can_mod_post": false, "created_utc": 1638407842.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_4azbl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Windows Powershell\n\nPart 1\n\n    $NumberOfIncreases = 0\n    $NumberOfDecreases
        = 0\n    $Input = Get-Content -Path \"$env:USERPROFILE\\Desktop\\Day1-Input.txt\"\n    for
        ($i = 0-1; $i -lt $Input.Count; $i++) {\n        if ($i -eq 0) {\n            \"$($Input[$i])
        (N/A - no previous measurement))\"\n        }\n        elseif ($Input[$i]
        -gt $Input[$i-1]) {\n            \"$($Input[$i]) (increased)\"\n            $NumberOfIncreases++\n        }\n        elseif
        ($Input[$i] -lt $Input[$i-1]) {\n            \"$($Input[$i]) (decreased)\"\n            $NumberOfDecreases++\n        }\n    }\n    Write-Host
        \"`nNumber of increases: $NumberOfIncreases\"\n    Write-Host \"`nNumber of
        increases: $NumberOfDecreases\"\n\nPart 2\n\n    function Start-Challenge
        {\n        [CmdletBinding()]\n        param (  \n        )\n        process
        {\n            $ChallengeInput = @(199, 200, 208, 210, 200, 207, 240, 269,
        260, 263)\n            #$ChallengeInput = Get-Content -Path \"$env:USERPROFILE\\Desktop\\Day1-Input.txt\"\n            $NumberOfDecreases
        = 0\n            $NumberOfIncreases = 0\n    \n            for ($i = 0; $i
        -lt $ChallengeInput.Count-3; $i++) {\n                $FirstSum = ($(@($ChallengeInput[$i,($i+1),($i+2)]))
        | Measure-Object -Sum).Sum\n                $SecondSum = ($(@($ChallengeInput[($i+1),($i+2),($i+3)]))
        | Measure-Object -Sum).Sum\n                Write-Verbose \"Index: $i\"\n                Write-Verbose
        \"FirstSum: $FirstSum, SecondSum: $SecondSum\"\n    \n                if ($i
        -eq 0) {\n                    \"$FirstSum (N/A - no previous sum))\"\n                }\n                if
        ($FirstSum -eq $SecondSum) {\n                    \"$SecondSum (no change)\"\n                }\n                if
        ($FirstSum -lt $SecondSum) {\n                    \"$SecondSum (increased)\"\n                    $NumberOfIncreases++\n                }\n                if
        ($FirstSum -gt $SecondSum) {\n                    \"$SecondSum (decreased)\"\n                    $NumberOfDecreases++\n                }\n            }\n            Write-Host
        \"Number of Increases: $NumberOfIncreases\"\n            Write-Host \"Number
        of Decreases: $NumberOfDecreases\"\n        }\n    }\n    Start-Challenge",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Windows Powershell&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$NumberOfIncreases = 0\n$NumberOfDecreases
        = 0\n$Input = Get-Content -Path &amp;quot;$env:USERPROFILE\\Desktop\\Day1-Input.txt&amp;quot;\nfor
        ($i = 0-1; $i -lt $Input.Count; $i++) {\n    if ($i -eq 0) {\n        &amp;quot;$($Input[$i])
        (N/A - no previous measurement))&amp;quot;\n    }\n    elseif ($Input[$i]
        -gt $Input[$i-1]) {\n        &amp;quot;$($Input[$i]) (increased)&amp;quot;\n        $NumberOfIncreases++\n    }\n    elseif
        ($Input[$i] -lt $Input[$i-1]) {\n        &amp;quot;$($Input[$i]) (decreased)&amp;quot;\n        $NumberOfDecreases++\n    }\n}\nWrite-Host
        &amp;quot;`nNumber of increases: $NumberOfIncreases&amp;quot;\nWrite-Host
        &amp;quot;`nNumber of increases: $NumberOfDecreases&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function Start-Challenge {\n    [CmdletBinding()]\n    param
        (  \n    )\n    process {\n        $ChallengeInput = @(199, 200, 208, 210,
        200, 207, 240, 269, 260, 263)\n        #$ChallengeInput = Get-Content -Path
        &amp;quot;$env:USERPROFILE\\Desktop\\Day1-Input.txt&amp;quot;\n        $NumberOfDecreases
        = 0\n        $NumberOfIncreases = 0\n\n        for ($i = 0; $i -lt $ChallengeInput.Count-3;
        $i++) {\n            $FirstSum = ($(@($ChallengeInput[$i,($i+1),($i+2)]))
        | Measure-Object -Sum).Sum\n            $SecondSum = ($(@($ChallengeInput[($i+1),($i+2),($i+3)]))
        | Measure-Object -Sum).Sum\n            Write-Verbose &amp;quot;Index: $i&amp;quot;\n            Write-Verbose
        &amp;quot;FirstSum: $FirstSum, SecondSum: $SecondSum&amp;quot;\n\n            if
        ($i -eq 0) {\n                &amp;quot;$FirstSum (N/A - no previous sum))&amp;quot;\n            }\n            if
        ($FirstSum -eq $SecondSum) {\n                &amp;quot;$SecondSum (no change)&amp;quot;\n            }\n            if
        ($FirstSum -lt $SecondSum) {\n                &amp;quot;$SecondSum (increased)&amp;quot;\n                $NumberOfIncreases++\n            }\n            if
        ($FirstSum -gt $SecondSum) {\n                &amp;quot;$SecondSum (decreased)&amp;quot;\n                $NumberOfDecreases++\n            }\n        }\n        Write-Host
        &amp;quot;Number of Increases: $NumberOfIncreases&amp;quot;\n        Write-Host
        &amp;quot;Number of Decreases: $NumberOfDecreases&amp;quot;\n    }\n}\nStart-Challenge\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvg4o4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvg4o4", "created":
        1638407842.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvianz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aoc-fan",
        "can_mod_post": false, "created_utc": 1638408782.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_13cqpt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "TypeScript (Single function for both the parts) and F#\n\n    const countIncrements
        = (ms: number[], indexToCompare = 1) =&gt; \n         ms.reduce(\n            (c,
        m, i) =&gt; i &gt;= indexToCompare &amp;&amp; m &gt; ms[i - indexToCompare]
        \n                         ? \n                         c + 1 : c\n        ,
        0);\n\nCheck repo for [complete code](https://github.com/bhosale-ajay/adventofcode/blob/master/2021/ts/D01.test.ts)
        and [F# code](https://github.com/bhosale-ajay/adventofcode/blob/master/2021/fs/D01.fs).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;TypeScript (Single function
        for both the parts) and F#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const countIncrements
        = (ms: number[], indexToCompare = 1) =&amp;gt; \n     ms.reduce(\n        (c,
        m, i) =&amp;gt; i &amp;gt;= indexToCompare &amp;amp;&amp;amp; m &amp;gt; ms[i
        - indexToCompare] \n                     ? \n                     c + 1 :
        c\n    , 0);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Check repo for &lt;a href=\"https://github.com/bhosale-ajay/adventofcode/blob/master/2021/ts/D01.test.ts\"&gt;complete
        code&lt;/a&gt; and &lt;a href=\"https://github.com/bhosale-ajay/adventofcode/blob/master/2021/fs/D01.fs\"&gt;F#
        code&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvianz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvianz", "created":
        1638408782.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvjdt8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aimor_",
        "can_mod_post": false, "created_utc": 1638409255.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_h4uoirfu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "After doing previous years in Rust (had a blast!) I''ve decided to take it
        easy sleazy this year and do all my solutions in MATLAB :) Have fun everyone!\n\n    %
        Advent of Code Day 1\n    input = \"./input-01-0.txt\";\n    depth = textread(input);\n\n    %
        Part 1\n    inc = diff(depth) &gt; 0;\n    ans_1 = sum(inc)\n\n    % Part
        2\n    filt_depth = conv(depth, [1,1,1], ''valid'');\n    filt_inc = diff(filt_depth)
        &gt; 0;\n    ans_2 = sum(filt_inc)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;After doing previous years in Rust (had a blast!)
        I&amp;#39;ve decided to take it easy sleazy this year and do all my solutions
        in MATLAB :) Have fun everyone!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;% Advent
        of Code Day 1\ninput = &amp;quot;./input-01-0.txt&amp;quot;;\ndepth = textread(input);\n\n%
        Part 1\ninc = diff(depth) &amp;gt; 0;\nans_1 = sum(inc)\n\n% Part 2\nfilt_depth
        = conv(depth, [1,1,1], &amp;#39;valid&amp;#39;);\nfilt_inc = diff(filt_depth)
        &amp;gt; 0;\nans_2 = sum(filt_inc)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvjdt8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvjdt8", "created":
        1638409255.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvpp3m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "P0t4t0W4rri0r",
        "can_mod_post": false, "created_utc": 1638411983.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_7vrgu6ff", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''ve made a oneliner in Haskell for part one:\n\nincrease x = foldr1 (+)
        \\[ 1 | (a,b) &lt;- zip x (tail x), a &lt; b\\]", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve made a oneliner in Haskell for part
        one:&lt;/p&gt;\n\n&lt;p&gt;increase x = foldr1 (+) [ 1 | (a,b) &amp;lt;- zip
        x (tail x), a &amp;lt; b]&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvpp3m/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvpp3m", "created":
        1638411983.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvr6mx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmvr6mx", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvr6mx/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638412628.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638412628.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmvsjar", "id": "hmvsjar", "parent_id":
        "t1_hmvr6mx", "depth": 1, "children": ["hmvsjar", "hmvwd2o"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638454871.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvzpzx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sniipermoney",
        "can_mod_post": false, "created_utc": 1638416398.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_51woae9s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 1 \ud83e\uddf9 JavaScript Solution: [https://github.com/Nishoake/2021-advent-of-code-js/tree/main/solutions/01](https://github.com/Nishoake/2021-advent-of-code-js/tree/main/solutions/01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day 1 \ud83e\uddf9 JavaScript
        Solution: &lt;a href=\"https://github.com/Nishoake/2021-advent-of-code-js/tree/main/solutions/01\"&gt;https://github.com/Nishoake/2021-advent-of-code-js/tree/main/solutions/01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvzpzx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvzpzx", "created":
        1638416398.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmyo9gp", "id": "hmyo9gp", "parent_id":
        "t1_hmvzpzx", "depth": 1, "children": ["hmyo9gp"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw3f07",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "cerrosafe",
        "can_mod_post": false, "created_utc": 1638418163.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_s7qim", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Playing late, but I did mine in OCaml. After an unbelievable difficulty discovering
        input_line won''t implicitly cast to int and being off-by-one because 976
        is not less than 1004, it was very easy. In fact, the pattern matching makes
        part 2 basically identical to part 1:\n\n    \n        \n    let input = \"1input.txt\"\n    \n    open
        Printf\n    \n    let read_lines name : int list =\n      let ic = open_in
        name in\n      let try_read () =\n        try Some (input_line ic) with End_of_file
        -&gt; None in\n      let rec loop acc = match try_read () with\n        |
        Some s -&gt; loop (s :: acc)\n        | None -&gt; close_in ic; List.map int_of_string
        (List.rev acc) in\n      loop []\n    \n    let result a b = if a &lt; b then
        1 else 0\n    \n    let rec increasing acc l =\n      match l with\n      |
        [] -&gt; acc\n      | [only] -&gt; acc\n      | first :: second :: rest -&gt;
        increasing (acc + result first second)\n                                     (second
        :: rest)\n    \n    let rec three_increasing acc l =\n      match l with\n      |
        [] -&gt; acc\n      | [only] -&gt; acc\n      | a::b::c::d::rest -&gt; three_increasing
        (acc + (result (a+b+c) (b+c+d))) (b::c::d::rest)\n      | _ -&gt; acc\n    ;;\n    \n    let
        lines = read_lines input in\n    printf \"%d %d\\n\" (increasing 0 lines)
        (three_increasing 0 lines)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Playing
        late, but I did mine in OCaml. After an unbelievable difficulty discovering
        input_line won&amp;#39;t implicitly cast to int and being off-by-one because
        976 is not less than 1004, it was very easy. In fact, the pattern matching
        makes part 2 basically identical to part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        input = &amp;quot;1input.txt&amp;quot;\n\nopen Printf\n\nlet read_lines name
        : int list =\n  let ic = open_in name in\n  let try_read () =\n    try Some
        (input_line ic) with End_of_file -&amp;gt; None in\n  let rec loop acc = match
        try_read () with\n    | Some s -&amp;gt; loop (s :: acc)\n    | None -&amp;gt;
        close_in ic; List.map int_of_string (List.rev acc) in\n  loop []\n\nlet result
        a b = if a &amp;lt; b then 1 else 0\n\nlet rec increasing acc l =\n  match
        l with\n  | [] -&amp;gt; acc\n  | [only] -&amp;gt; acc\n  | first :: second
        :: rest -&amp;gt; increasing (acc + result first second)\n                                 (second
        :: rest)\n\nlet rec three_increasing acc l =\n  match l with\n  | [] -&amp;gt;
        acc\n  | [only] -&amp;gt; acc\n  | a::b::c::d::rest -&amp;gt; three_increasing
        (acc + (result (a+b+c) (b+c+d))) (b::c::d::rest)\n  | _ -&amp;gt; acc\n;;\n\nlet
        lines = read_lines input in\nprintf &amp;quot;%d %d\\n&amp;quot; (increasing
        0 lines) (three_increasing 0 lines)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw3f07/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw3f07", "created":
        1638418163.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638418853.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmw3kbw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "RiemannIntegirl",
        "can_mod_post": false, "created_utc": 1638418237.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_577uxno7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3.9\n\nI hope I am formatting this correctly, since this is my first
        time posting code here...\n\nI did some partial sum/difference of partial
        sum computation, using a secondary list for part 2, before I realized while
        on my morning walk, that of course:\n\n(x\\_1+x\\_2+x\\_3)-(x\\_2+x\\_3+x\\_4)=x\\_1-x\\_4\n\nHence:
        part 2 really only required changing the distance forward we look for our
        difference, rather than partial sum computations.\n\n    depths=[int(x) for
        x in open(''depths.txt'').read().split(''\\n'')]\n    print(sum([1 for i in
        range(len(depths)-1) if depths[i+1]&gt;depths[i]]))#part 1\n    print(sum([1
        for i in range(len(depths)-3) if depths[i+3]&gt;depths[i]]))#part 2", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3.9&lt;/p&gt;\n\n&lt;p&gt;I hope
        I am formatting this correctly, since this is my first time posting code here...&lt;/p&gt;\n\n&lt;p&gt;I
        did some partial sum/difference of partial sum computation, using a secondary
        list for part 2, before I realized while on my morning walk, that of course:&lt;/p&gt;\n\n&lt;p&gt;(x_1+x_2+x_3)-(x_2+x_3+x_4)=x_1-x_4&lt;/p&gt;\n\n&lt;p&gt;Hence:
        part 2 really only required changing the distance forward we look for our
        difference, rather than partial sum computations.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depths=[int(x)
        for x in open(&amp;#39;depths.txt&amp;#39;).read().split(&amp;#39;\\n&amp;#39;)]\nprint(sum([1
        for i in range(len(depths)-1) if depths[i+1]&amp;gt;depths[i]]))#part 1\nprint(sum([1
        for i in range(len(depths)-3) if depths[i+3]&amp;gt;depths[i]]))#part 2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw3kbw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw3kbw", "created":
        1638418237.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmwmvs1", "id": "hmwmvs1", "parent_id":
        "t1_hmw3kbw", "depth": 1, "children": ["hmwmvs1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw3zoj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "terryp",
        "can_mod_post": false, "created_utc": 1638418453.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_1u57", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3.9.7\n\nPart 1\n\n    real_input = [ ... ]\n    increased = 0\n    \n    for
        index, value in enumerate(real_input):\n        behind = real_input[index]
        if index == 0 else real_input[index - 1]\n        if value &gt; behind:\n            increased
        += 1\n    \n    print(increased)\n\nPart 2\n\n    real_input = [ ... ]\n    increased
        = 0\n    \n    for index, value in enumerate(real_input[:-3]):\n        window_1
        = sum(real_input[index:index+3])\n        window_2 = sum(real_input[index+1:index+4])\n        if
        window_1 &lt; window_2:\n            increased += 1\n    \n    print(increased)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3.9.7&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;real_input = [ ... ]\nincreased = 0\n\nfor
        index, value in enumerate(real_input):\n    behind = real_input[index] if
        index == 0 else real_input[index - 1]\n    if value &amp;gt; behind:\n        increased
        += 1\n\nprint(increased)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;real_input
        = [ ... ]\nincreased = 0\n\nfor index, value in enumerate(real_input[:-3]):\n    window_1
        = sum(real_input[index:index+3])\n    window_2 = sum(real_input[index+1:index+4])\n    if
        window_1 &amp;lt; window_2:\n        increased += 1\n\nprint(increased)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw3zoj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw3zoj", "created":
        1638418453.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmw4q6d", "id": "hmw4q6d", "parent_id":
        "t1_hmw3zoj", "depth": 1, "children": ["hmw4q6d"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmweook",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Archek",
        "can_mod_post": false, "created_utc": 1638424292.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_c0mya", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[**Hack Assembly Language**](https://github.com/deosjr/nand2tetris/blob/master/asm/aoc2021-01.asm)\n\nI
        just finished writing my assembler for [Hack](https://www.nand2tetris.org)
        and thought I would try this year''s Advent of Code with it (at least day
        1!). It runs on my own simulator that I wrote while following the nand2tetris
        course, simulating a 16-bit computer from NAND operations (although I did
        optimise it a little when getting sufficiently high in abstractions).", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/deosjr/nand2tetris/blob/master/asm/aoc2021-01.asm\"&gt;&lt;strong&gt;Hack
        Assembly Language&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I just finished
        writing my assembler for &lt;a href=\"https://www.nand2tetris.org\"&gt;Hack&lt;/a&gt;
        and thought I would try this year&amp;#39;s Advent of Code with it (at least
        day 1!). It runs on my own simulator that I wrote while following the nand2tetris
        course, simulating a 16-bit computer from NAND operations (although I did
        optimise it a little when getting sufficiently high in abstractions).&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmweook/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmweook", "created":
        1638424292.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwfe3o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tslater2006",
        "can_mod_post": false, "created_utc": 1638424727.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_9q53a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my solution in [Rust](https://topaz.github.io/paste/#XQAAAQDiBAAAAAAAAAAxm8oZxjYXODLY7Is+YTh+Idd5a2cPTe/bthmt6qryH2xDMNTVgsNq7/7MFs6kv5+gi2TBb12VVYKEZC7HW11Uco4mLls/Frd4vDo9uquB5+YgthcKYNSWM7n/jz24gf57KQGA0k36D+Vja3DJ3M1NYwr+WgGewYbAI2s8dNUUhpcWLbHup4uNgOsy98B+6EaDw2SHr72Mv9nw7eB8mGj+5nUo4otZXj7FEteXfNmhQubsdSRqvSIUzDQgpSTlpADhORC1Mercow7dXX9oIHN1ZCAfQyNDoXhtMroeF5ktp68CQQZrEtPhPnQLV+E2WrlIkb5OMuw6rWcPLtwo0j/7679ID6nE12AE2QiaqJWkap3q9AfMCqv+/5MVIFh9tUlyokNVb8L0ITFMspWDsnTD2ghxTETsS2uJeC+7fwC1AItbnEsuigJaFfBRuatHT8gMS6G/g9lcbZBZ4BVOnzxPZJsCyWRUAS5dDNVhk+HDM/BNXsKp/qDUPV3+a23htpskPz1yXJqpcfBvxNm41sxXkfQAHOxwXqCiLtcXgrqnB+7rBHYUAt/KRyz+ooriTxlbhnBCI7FpZVHl/UUQdg==)\n\nThe
        commented out blocks was my 2nd implementation (lost my first one, it was
        gross). The final code was inspired by other Rust solutions I found in the
        thread.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        my solution in &lt;a href=\"https://topaz.github.io/paste/#XQAAAQDiBAAAAAAAAAAxm8oZxjYXODLY7Is+YTh+Idd5a2cPTe/bthmt6qryH2xDMNTVgsNq7/7MFs6kv5+gi2TBb12VVYKEZC7HW11Uco4mLls/Frd4vDo9uquB5+YgthcKYNSWM7n/jz24gf57KQGA0k36D+Vja3DJ3M1NYwr+WgGewYbAI2s8dNUUhpcWLbHup4uNgOsy98B+6EaDw2SHr72Mv9nw7eB8mGj+5nUo4otZXj7FEteXfNmhQubsdSRqvSIUzDQgpSTlpADhORC1Mercow7dXX9oIHN1ZCAfQyNDoXhtMroeF5ktp68CQQZrEtPhPnQLV+E2WrlIkb5OMuw6rWcPLtwo0j/7679ID6nE12AE2QiaqJWkap3q9AfMCqv+/5MVIFh9tUlyokNVb8L0ITFMspWDsnTD2ghxTETsS2uJeC+7fwC1AItbnEsuigJaFfBRuatHT8gMS6G/g9lcbZBZ4BVOnzxPZJsCyWRUAS5dDNVhk+HDM/BNXsKp/qDUPV3+a23htpskPz1yXJqpcfBvxNm41sxXkfQAHOxwXqCiLtcXgrqnB+7rBHYUAt/KRyz+ooriTxlbhnBCI7FpZVHl/UUQdg==\"&gt;Rust&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The
        commented out blocks was my 2nd implementation (lost my first one, it was
        gross). The final code was inspired by other Rust solutions I found in the
        thread.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwfe3o/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwfe3o", "created":
        1638424727.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmz77vb", "id": "hmz77vb", "parent_id":
        "t1_hmwfe3o", "depth": 1, "children": ["hmz77vb"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwkskt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "C0minis",
        "can_mod_post": false, "created_utc": 1638428306.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_4ic96pyy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "KOTLIN\n\n    val list = getInputAsList()\n\nPart 1:\n\n    val result =
        0  \n    list.reduce { prev, curr -&gt;  if (curr &gt; prev) result++; curr
        }  \n\nPart 2:\n\n    val result = 0\n    for (i in 2 until list.count() -
        1) if (list[i + 1] &gt; list[i - 2]) result++", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;KOTLIN&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val list
        = getInputAsList()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val
        result = 0  \nlist.reduce { prev, curr -&amp;gt;  if (curr &amp;gt; prev)
        result++; curr }  \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val
        result = 0\nfor (i in 2 until list.count() - 1) if (list[i + 1] &amp;gt; list[i
        - 2]) result++\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwkskt/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmwkskt", "created": 1638428306.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638429426.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwkw6o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1638428379.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### Prolog (Scryer)\n\nI did APL and PowerShell in a couple of minutes, and
        Prolog took me hours. Literally hours.\n\n    :- use_module(library(dcgs)).\n    :-
        use_module(library(pio)).\n    :- use_module(library(lists)).\n    \n    %
        a text digit, a number made of a list of digits.\n    digit(D) --&gt; [D],
        { member(D, \"0123456789\") }.\n    \n    number([D])   --&gt; digit(D).\n    number([D|T])
        --&gt; digit(D), number(T).\n    \n    % a line from the file is digits, made
        into a number, and then a newline.\n    line(Number) --&gt; number(Chars),
        { number_chars(Number, Chars) }, \"\\n\".\n    \n    % a list of lines represents
        the file, plus a spurious newline(?)\n    lines([])    --&gt; [], \"\\n\".\n    lines([L|T])
        --&gt; line(L), lines(T).\n    \n    \n    % solution\n    \n    count_stepdown([_],
        0).\n    count_stepdown([Num1, Num2|T], Count) :-\n        count_stepdown([Num2|T],
        TCount),\n        (Num1 &lt; Num2  -&gt;\n            Count is 1 + TCount\n        ;   Count
        is TCount).\n    \n    part1(Numbers) :-\n        count_stepdown(Numbers,
        Answer),\n        write(''Part 1: ''), write(Answer), nl.\n    \n    \n    windowed_sum([_,_],
        []).\n    windowed_sum([H1, H2, H3|T], [X|Y]) :-\n        X is H1 + H2 + H3,\n        windowed_sum([H2,
        H3|T], Y).\n    \n    part2(Numbers) :-\n        windowed_sum(Numbers, Windows),\n        count_stepdown(Windows,
        Answer),\n        write(''Part 2: ''), write(Answer), nl.\n    \n    go :-\n        phrase_from_file(lines(Numbers),
        ''/tmp/adventofcode/1.txt''),\n        part1(Numbers), part2(Numbers), halt.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h3&gt;Prolog (Scryer)&lt;/h3&gt;\n\n&lt;p&gt;I
        did APL and PowerShell in a couple of minutes, and Prolog took me hours. Literally
        hours.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;:- use_module(library(dcgs)).\n:-
        use_module(library(pio)).\n:- use_module(library(lists)).\n\n% a text digit,
        a number made of a list of digits.\ndigit(D) --&amp;gt; [D], { member(D, &amp;quot;0123456789&amp;quot;)
        }.\n\nnumber([D])   --&amp;gt; digit(D).\nnumber([D|T]) --&amp;gt; digit(D),
        number(T).\n\n% a line from the file is digits, made into a number, and then
        a newline.\nline(Number) --&amp;gt; number(Chars), { number_chars(Number,
        Chars) }, &amp;quot;\\n&amp;quot;.\n\n% a list of lines represents the file,
        plus a spurious newline(?)\nlines([])    --&amp;gt; [], &amp;quot;\\n&amp;quot;.\nlines([L|T])
        --&amp;gt; line(L), lines(T).\n\n\n% solution\n\ncount_stepdown([_], 0).\ncount_stepdown([Num1,
        Num2|T], Count) :-\n    count_stepdown([Num2|T], TCount),\n    (Num1 &amp;lt;
        Num2  -&amp;gt;\n        Count is 1 + TCount\n    ;   Count is TCount).\n\npart1(Numbers)
        :-\n    count_stepdown(Numbers, Answer),\n    write(&amp;#39;Part 1: &amp;#39;),
        write(Answer), nl.\n\n\nwindowed_sum([_,_], []).\nwindowed_sum([H1, H2, H3|T],
        [X|Y]) :-\n    X is H1 + H2 + H3,\n    windowed_sum([H2, H3|T], Y).\n\npart2(Numbers)
        :-\n    windowed_sum(Numbers, Windows),\n    count_stepdown(Windows, Answer),\n    write(&amp;#39;Part
        2: &amp;#39;), write(Answer), nl.\n\ngo :-\n    phrase_from_file(lines(Numbers),
        &amp;#39;/tmp/adventofcode/1.txt&amp;#39;),\n    part1(Numbers), part2(Numbers),
        halt.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwkw6o/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwkw6o", "created":
        1638428379.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638433702.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwq120", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "HAITIAN_HANK",
        "can_mod_post": false, "created_utc": 1638432273.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_12w2s9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "using c# \nHow I imported the inputs\n\n    List&lt;int&gt; inputs = File.ReadAllLines(@\"C:\\Users\\14027\\Documents\\C#
        Course work\\ADVENT\\ADVENT\\ADVENT\\Day1.txt\").Select(x =&gt; int.Parse(x)).ToList();\npart
        1\n\n    inputs.Where((num, index) =&gt; index &gt; 0 &amp;&amp; num &gt;
        nums[index - 1]).Count();\n\npart 2\n\n    inputs.Where((num, index) =&gt;
        index &gt; 0 &amp;&amp; index &lt; nums.Count - 2 &amp;&amp; num + nums[index
        + 1] + nums[index + 2] &gt; nums[index - 1] + num + nums[index + 1]).Count();\n\nEDIT:
        \nGoing through I saw other people figured out for part 2 you could just compare
        every number with the number 3 behind it since they share the 2 numbers in
        between, hence you don''t even need to add. Shrank my code to this: \n\n    inputs.Where((num,
        index) =&gt; index &gt; 2 &amp;&amp; num &gt; nums[index - 3]).Count();",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;using c# \nHow I imported
        the inputs&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;List&amp;lt;int&amp;gt; inputs
        = File.ReadAllLines(@&amp;quot;C:\\Users\\14027\\Documents\\C# Course work\\ADVENT\\ADVENT\\ADVENT\\Day1.txt&amp;quot;).Select(x
        =&amp;gt; int.Parse(x)).ToList();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;inputs.Where((num, index) =&amp;gt;
        index &amp;gt; 0 &amp;amp;&amp;amp; num &amp;gt; nums[index - 1]).Count();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;inputs.Where((num, index) =&amp;gt;
        index &amp;gt; 0 &amp;amp;&amp;amp; index &amp;lt; nums.Count - 2 &amp;amp;&amp;amp;
        num + nums[index + 1] + nums[index + 2] &amp;gt; nums[index - 1] + num + nums[index
        + 1]).Count();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT: \nGoing through
        I saw other people figured out for part 2 you could just compare every number
        with the number 3 behind it since they share the 2 numbers in between, hence
        you don&amp;#39;t even need to add. Shrank my code to this: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;inputs.Where((num,
        index) =&amp;gt; index &amp;gt; 2 &amp;amp;&amp;amp; num &amp;gt; nums[index
        - 3]).Count();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwq120/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmwq120", "created": 1638432273.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmx2j5g", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "extensie", "can_mod_post": false, "created_utc":
        1638442801.0, "send_replies": true, "parent_id": "t1_hmwq120", "score": 3,
        "author_fullname": "t2_36kf8", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "`.Select(int.Parse)` is
        even shorter", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;.Select(int.Parse)&lt;/code&gt;
        is even shorter&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmx2j5g/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmx2j5g", "created":
        1638442801.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwqv7g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rasqall",
        "can_mod_post": false, "created_utc": 1638432946.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_1zm82i70", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell:\n```\n\nimport System.IO()\n\nmain :: IO()\nmain = do vals &lt;-
        getVals \"input.txt\"\n          print (part1 vals)\n          print (part2
        vals)\n\n\ngetVals :: FilePath -&gt; IO [Int]\ngetVals path = do contents
        &lt;- readFile path\n                  return (map (read::String-&gt;Int)
        (lines contents))\n\npart1 :: [Int] -&gt; Int\npart1 xs = sum $ zipWith (\\a
        b -&gt; if a &lt; b then 1 else 0) xs (tail xs)\n\npart2 :: [Int] -&gt; Int\npart2
        xs = part1 $ zipWith3 (\\a b c -&gt; a+b+c) xs (tail xs) (drop 2 xs)\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell:\n```&lt;/p&gt;\n\n&lt;p&gt;import
        System.IO()&lt;/p&gt;\n\n&lt;p&gt;main :: IO()\nmain = do vals &amp;lt;- getVals
        &amp;quot;input.txt&amp;quot;\n          print (part1 vals)\n          print
        (part2 vals)&lt;/p&gt;\n\n&lt;p&gt;getVals :: FilePath -&amp;gt; IO [Int]\ngetVals
        path = do contents &amp;lt;- readFile path\n                  return (map
        (read::String-&amp;gt;Int) (lines contents))&lt;/p&gt;\n\n&lt;p&gt;part1 ::
        [Int] -&amp;gt; Int\npart1 xs = sum $ zipWith (\\a b -&amp;gt; if a &amp;lt;
        b then 1 else 0) xs (tail xs)&lt;/p&gt;\n\n&lt;p&gt;part2 :: [Int] -&amp;gt;
        Int\npart2 xs = part1 $ zipWith3 (\\a b c -&amp;gt; a+b+c) xs (tail xs) (drop
        2 xs)\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwqv7g/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwqv7g", "created":
        1638432946.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmza8dl", "id": "hmza8dl", "parent_id":
        "t1_hmwqv7g", "depth": 1, "children": ["hmza8dl", "hn7vjrq"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwu69l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "staletic",
        "can_mod_post": false, "created_utc": 1638435717.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_5x6f16tm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A day late, but C++ compile time solution:\n\nhttps://godbolt.org/z/WGPKoY9fY",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A day late, but C++
        compile time solution:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://godbolt.org/z/WGPKoY9fY\"&gt;https://godbolt.org/z/WGPKoY9fY&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwu69l/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwu69l", "created":
        1638435717.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwzc9n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Smylers",
        "can_mod_post": false, "created_utc": 1638440134.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_13cudg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Belated **Perl** and **Raku** one-liners which process the input as they
        go \u2014 no reading in the whole file first. They take a `-w` switch for
        the window size. Part\u00a01 in Perl is:\n\n    perl -sE ''say scalar grep
        { (push @s, $_) &gt; $w &amp;&amp; shift @s &lt; $_ } &lt;&gt;'' -- -w=1 input\n\n(On
        Windows use `\"` double quotes instead of `''` single ones.)\n\nThen for part
        2 just change `-w=1` to `-w=3`.\n\nRaku doesn''t require the `--` to separate
        our options from its own, and has a nicer way of specifying the allowed options
        (and their defaults, and it validates them). But that involves declaring `sub
        MAIN`, which makes it a bit longer for a one-liner, as does needing to declare
        `@s` (with `state`). And `scalar` is now just `+`, but it still ends up a
        little longer:\n\n    rakudo -e ''sub MAIN($f, :$w = 1) { say +$f.IO.lines.grep:
        { state @s.push($_) &gt; $w &amp;&amp; @s.shift &lt; $_ } }'' -w=1 input",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Belated &lt;strong&gt;Perl&lt;/strong&gt;
        and &lt;strong&gt;Raku&lt;/strong&gt; one-liners which process the input as
        they go \u2014 no reading in the whole file first. They take a &lt;code&gt;-w&lt;/code&gt;
        switch for the window size. Part\u00a01 in Perl is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;perl
        -sE &amp;#39;say scalar grep { (push @s, $_) &amp;gt; $w &amp;amp;&amp;amp;
        shift @s &amp;lt; $_ } &amp;lt;&amp;gt;&amp;#39; -- -w=1 input\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(On
        Windows use &lt;code&gt;&amp;quot;&lt;/code&gt; double quotes instead of &lt;code&gt;&amp;#39;&lt;/code&gt;
        single ones.)&lt;/p&gt;\n\n&lt;p&gt;Then for part 2 just change &lt;code&gt;-w=1&lt;/code&gt;
        to &lt;code&gt;-w=3&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Raku doesn&amp;#39;t
        require the &lt;code&gt;--&lt;/code&gt; to separate our options from its own,
        and has a nicer way of specifying the allowed options (and their defaults,
        and it validates them). But that involves declaring &lt;code&gt;sub MAIN&lt;/code&gt;,
        which makes it a bit longer for a one-liner, as does needing to declare &lt;code&gt;@s&lt;/code&gt;
        (with &lt;code&gt;state&lt;/code&gt;). And &lt;code&gt;scalar&lt;/code&gt;
        is now just &lt;code&gt;+&lt;/code&gt;, but it still ends up a little longer:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;rakudo
        -e &amp;#39;sub MAIN($f, :$w = 1) { say +$f.IO.lines.grep: { state @s.push($_)
        &amp;gt; $w &amp;amp;&amp;amp; @s.shift &amp;lt; $_ } }&amp;#39; -w=1 input\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwzc9n/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwzc9n", "created":
        1638440134.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638447123.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmx7741", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "amishb",
        "can_mod_post": false, "created_utc": 1638446314.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_4gmmo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nim\n\n\n    import std/strutils, std/sequtils\n\n    let fileData = readFile(\"input1.txt\")\n    let
        inputData = fileData.splitLines.filterIt(it != \"\").map(parseInt)\n\n    #
        Part 1\n    var part1IncreasingTotal = 0\n    for idx, val in inputData.pairs:\n        if
        idx == 0: continue\n\n        if val-inputData[idx-1] &gt; 0:\n            part1IncreasingTotal
        += 1\n\n    echo \"Part 1: \", part1IncreasingTotal\n\n\n    # Part 1\n    var
        part2IncreasingTotal = 0\n    for idx, val in inputData.pairs:\n        if
        idx &lt; 3: continue\n\n        if foldl(inputData[idx-2 .. idx], a+b) - foldl(inputData[idx-3
        .. idx-1], a+b) &gt; 0:\n            part2IncreasingTotal += 1\n\n    echo
        \"Part 2: \", part2IncreasingTotal", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Nim&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import std/strutils,
        std/sequtils\n\nlet fileData = readFile(&amp;quot;input1.txt&amp;quot;)\nlet
        inputData = fileData.splitLines.filterIt(it != &amp;quot;&amp;quot;).map(parseInt)\n\n#
        Part 1\nvar part1IncreasingTotal = 0\nfor idx, val in inputData.pairs:\n    if
        idx == 0: continue\n\n    if val-inputData[idx-1] &amp;gt; 0:\n        part1IncreasingTotal
        += 1\n\necho &amp;quot;Part 1: &amp;quot;, part1IncreasingTotal\n\n\n# Part
        1\nvar part2IncreasingTotal = 0\nfor idx, val in inputData.pairs:\n    if
        idx &amp;lt; 3: continue\n\n    if foldl(inputData[idx-2 .. idx], a+b) - foldl(inputData[idx-3
        .. idx-1], a+b) &amp;gt; 0:\n        part2IncreasingTotal += 1\n\necho &amp;quot;Part
        2: &amp;quot;, part2IncreasingTotal\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmx7741/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmx7741", "created":
        1638446314.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmx84pc", "id": "hmx84pc", "parent_id":
        "t1_hmx7741", "depth": 1, "children": ["hmx84pc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmxer2i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WarriorKatHun",
        "can_mod_post": false, "created_utc": 1638450949.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_ubuh9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell:\n\n    depthSweeper :: [Integer] -&gt; Int\n    depthSweeper input
        = sum $ zipWith (\\x a -&gt; if x &lt; a then 1 else 0) input (tail input)\n    \n    denoiseData
        :: [Integer] -&gt; [Integer] \n    denoiseData (x:xs) = if length xs &lt;
        2 then [] else (x + xs!!0 + xs!!1) : denoiseData xs\n    \n    depthSweeperDenoised
        :: [Integer] -&gt; Int \n    depthSweeperDenoised = depthSweeper . denoiseData",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depthSweeper
        :: [Integer] -&amp;gt; Int\ndepthSweeper input = sum $ zipWith (\\x a -&amp;gt;
        if x &amp;lt; a then 1 else 0) input (tail input)\n\ndenoiseData :: [Integer]
        -&amp;gt; [Integer] \ndenoiseData (x:xs) = if length xs &amp;lt; 2 then []
        else (x + xs!!0 + xs!!1) : denoiseData xs\n\ndepthSweeperDenoised :: [Integer]
        -&amp;gt; Int \ndepthSweeperDenoised = depthSweeper . denoiseData\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxer2i/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmxer2i", "created":
        1638450949.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638455924.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmxoenc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "maneatingape",
        "can_mod_post": false, "created_utc": 1638455682.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_6mzqyuze", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Scala solution](https://github.com/maneatingape/advent-of-code/blob/main/src/main/scala/AdventOfCode2021/Day01.scala)\n\nStraightforward
        use of the `sliding` method to group the windows.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/maneatingape/advent-of-code/blob/main/src/main/scala/AdventOfCode2021/Day01.scala\"&gt;Scala
        solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Straightforward use of the &lt;code&gt;sliding&lt;/code&gt;
        method to group the windows.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxoenc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmxoenc", "created":
        1638455682.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmxsojx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ObviouslyNotSimon",
        "can_mod_post": false, "created_utc": 1638457540.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_q0lid", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Can someone help me? I don''t understeand why my output is 1386 when it should
        be 1387. (day 1 part 1 python)\n\n    inputFile = open(''input.txt'',''r'')\n    Lines
        = inputFile.readlines()\n    count = 0\n    for index, line in enumerate(Lines):\n        if
        (index+1 &lt; len(Lines) and index - 1 &gt;= 0):\n            currElem = int(line)\n            nexteLEM
        = int(Lines[index+1])\n            if(nexteLEM &gt; currElem):\n                count
        = count + 1\n    print(count)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Can someone help me? I don&amp;#39;t understeand
        why my output is 1386 when it should be 1387. (day 1 part 1 python)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;inputFile
        = open(&amp;#39;input.txt&amp;#39;,&amp;#39;r&amp;#39;)\nLines = inputFile.readlines()\ncount
        = 0\nfor index, line in enumerate(Lines):\n    if (index+1 &amp;lt; len(Lines)
        and index - 1 &amp;gt;= 0):\n        currElem = int(line)\n        nexteLEM
        = int(Lines[index+1])\n        if(nexteLEM &amp;gt; currElem):\n            count
        = count + 1\nprint(count)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxsojx/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmxsojx", "created": 1638457540.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmyj5hd", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "pooele", "can_mod_post": false, "created_utc":
        1638467973.0, "send_replies": true, "parent_id": "t1_hmxsojx", "score": 3,
        "author_fullname": "t2_h59fzyp6", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Your list Lines contains
        strings instead of integers. Read the inputs as integers and you should get
        the correct result. \n\n    Lines = [int(line) for line in inputFile.readlines()]\nor
        \n    Lines = []\nfor line in inputFile.readlines():\n        Lines.append(int(line))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your list Lines contains
        strings instead of integers. Read the inputs as integers and you should get
        the correct result. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Lines = [int(line)
        for line in inputFile.readlines()]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or
        \n    Lines = []\nfor line in inputFile.readlines():\n        Lines.append(int(line))&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyj5hd/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmyj5hd", "created":
        1638467973.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmz7az8", "id": "hmz7az8", "parent_id":
        "t1_hmxsojx", "depth": 1, "children": ["hmz7az8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638656319.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmxzdlr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gwangjinkim",
        "can_mod_post": false, "created_utc": 1638460322.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_25xiz5xy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\n```\nl = [*map(int,open(\"input.txt\"))]                                   #
        Task 1\nprint(sum(y &gt; x for x, y in zip(l, l[1:])))     \nl = [sum(x) for
        x in zip(l, l[1:], l[2:])]                          # Task 2   \nprint(sum(y
        &gt; x for x, y in zip(l, l[1:])))\n```\nThis uses the trick that `zip(l,
        l[1:])` builds \"previous-and-current-pairs\" and the trick that `sum()` counts
        boolean `True` as `1` and `False` as `0`.\nSimilarly, `zip(l, l[1:], l[2:])`
        groups `l` into tiling trimers (stopping with the last complete trimer). Counting
        is then done like in Task 1.\n`[*map(f,l)]` is a short form of `list(map(f,l))`.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nl
        = [*map(int,open(&amp;quot;input.txt&amp;quot;))]                                   #
        Task 1\nprint(sum(y &amp;gt; x for x, y in zip(l, l[1:])))     \nl = [sum(x)
        for x in zip(l, l[1:], l[2:])]                          # Task 2   \nprint(sum(y
        &amp;gt; x for x, y in zip(l, l[1:])))\n&lt;/code&gt;\nThis uses the trick
        that &lt;code&gt;zip(l, l[1:])&lt;/code&gt; builds &amp;quot;previous-and-current-pairs&amp;quot;
        and the trick that &lt;code&gt;sum()&lt;/code&gt; counts boolean &lt;code&gt;True&lt;/code&gt;
        as &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; as &lt;code&gt;0&lt;/code&gt;.\nSimilarly,
        &lt;code&gt;zip(l, l[1:], l[2:])&lt;/code&gt; groups &lt;code&gt;l&lt;/code&gt;
        into tiling trimers (stopping with the last complete trimer). Counting is
        then done like in Task 1.\n&lt;code&gt;[*map(f,l)]&lt;/code&gt; is a short
        form of &lt;code&gt;list(map(f,l))&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxzdlr/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmxzdlr", "created":
        1638460322.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmy0kqq", "id": "hmy0kqq", "parent_id":
        "t1_hmxzdlr", "depth": 1, "children": ["hmy0kqq", "hn3cr6i", "hmy56n2"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmy215d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Zweedeend",
        "can_mod_post": false, "created_utc": 1638461389.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 3, "author_fullname": "t2_d2j5c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python\n\nAs short as I could make it:\n\n    d = list(map(int, open(\"day1.txt\")))\n    print(sum(a
        &lt; b for a, b in zip(d, d[1:])))\n    print(sum(a &lt; b for a, b in zip(d,
        d[3:])))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;As
        short as I could make it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d = list(map(int,
        open(&amp;quot;day1.txt&amp;quot;)))\nprint(sum(a &amp;lt; b for a, b in zip(d,
        d[1:])))\nprint(sum(a &amp;lt; b for a, b in zip(d, d[3:])))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy215d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmy215d", "created":
        1638461389.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmy2e1f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ObviouslyNotSimon",
        "can_mod_post": false, "created_utc": 1638461534.0, "send_replies": true,
        "parent_id": "t1_hmy215d", "score": 3, "author_fullname": "t2_q0lid", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "what the hell is this magic", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;what
        the hell is this magic&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy2e1f/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmy2e1f", "created":
        1638461534.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638462891.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmy4y4z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wasimaster",
        "can_mod_post": false, "created_utc": 1638462536.0, "send_replies": true,
        "parent_id": "t1_hmy2e1f", "score": 3, "author_fullname": "t2_5921pvjz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### The first line\nWe create a d variable where we open the file called
        day1.txt then make all the elements (lines) of the file an int using map then
        we cast the map object to a list (I think this part is unnecessary)\n### The
        second line\nWe loop through the original list of numbers and the list of
        numbers starting from index 1.\nSo for example let''s say we have a list `1,
        2, 3, 4, 5` Then it would return a list of tuples each containing 2 items
        like this\n```\n(1, 2)\n(2, 3)\n(3, 4)\n(4, 5)\n```\nThen we just compare
        the items and then we would get a True or False, now here''s the fun part,
        True and False is basically 1 and 0 since the `False` object is of type bool
        which is a subclass of int, we can do\n```python\n&gt;&gt;&gt; int(True)\n1\n&gt;&gt;&gt;
        int(False)\n0\n&gt;&gt;&gt; True + True\n2\n&gt;&gt;&gt; True + False + True\n2\n```\nAnd
        this takes advantage of that by using the sum method to count the number of
        true items. Now this is a bit confusing for beginners so I would suggest something
        like a list comprehension for cleaner code but this wasn''t the goal.\n###
        The third line\nBasically same as the second line but starting from the 3rd
        item instead of 1st. So if we have `1, 2, 3, 4, 5, 6, 7, 8, 9, 10` Then it
        would start the first list from 1 and the second list from 4\n```python\n(1,
        4)\n(2, 5)\n(3, 6)\n(4, 7)\n(5, 8)\n(6, 9)\n(7, 10)\n```", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h3&gt;The first line&lt;/h3&gt;\n\n&lt;p&gt;We
        create a d variable where we open the file called day1.txt then make all the
        elements (lines) of the file an int using map then we cast the map object
        to a list (I think this part is unnecessary)&lt;/p&gt;\n\n&lt;h3&gt;The second
        line&lt;/h3&gt;\n\n&lt;p&gt;We loop through the original list of numbers and
        the list of numbers starting from index 1.\nSo for example let&amp;#39;s say
        we have a list &lt;code&gt;1, 2, 3, 4, 5&lt;/code&gt; Then it would return
        a list of tuples each containing 2 items like this\n&lt;code&gt;\n(1, 2)\n(2,
        3)\n(3, 4)\n(4, 5)\n&lt;/code&gt;\nThen we just compare the items and then
        we would get a True or False, now here&amp;#39;s the fun part, True and False
        is basically 1 and 0 since the &lt;code&gt;False&lt;/code&gt; object is of
        type bool which is a subclass of int, we can do\n```python&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;int(True)\n1\nint(False)\n0\nTrue
        + True\n2\nTrue + False + True\n2\n```\nAnd this takes advantage of that by
        using the sum method to count the number of true items. Now this is a bit
        confusing for beginners so I would suggest something like a list comprehension
        for cleaner code but this wasn&amp;#39;t the goal.&lt;/p&gt;\n\n&lt;h3&gt;The
        third line&lt;/h3&gt;\n\n&lt;p&gt;Basically same as the second line but starting
        from the 3rd item instead of 1st. So if we have &lt;code&gt;1, 2, 3, 4, 5,
        6, 7, 8, 9, 10&lt;/code&gt; Then it would start the first list from 1 and
        the second list from 4\n&lt;code&gt;python\n(1, 4)\n(2, 5)\n(3, 6)\n(4, 7)\n(5,
        8)\n(6, 9)\n(7, 10)\n&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/blockquote&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy4y4z/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmy4y4z", "created":
        1638462536.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmy51d9", "id": "hmy51d9", "parent_id":
        "t1_hmy4y4z", "depth": 3, "children": ["hmy51d9"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_hmynb7p", "id": "hmynb7p", "parent_id": "t1_hmy215d",
        "depth": 1, "children": ["hmynb7p"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 5,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrtjc7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Sourish17",
        "can_mod_post": false, "created_utc": 1638345117.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 5, "author_fullname": "t2_56bk8pep", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python one-liners on my website:\n\n[sourishsharma.com](https://www.sourishsharma.com/day-1)\n\n:)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python one-liners on
        my website:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.sourishsharma.com/day-1\"&gt;sourishsharma.com&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;:)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtjc7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrtjc7", "created":
        1638345117.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrz8my", "id": "hmrz8my", "parent_id":
        "t1_hmrtjc7", "depth": 1, "children": ["hmrz8my", "hmrtkq7"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmupwiu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "zazzedcoffee",
        "can_mod_post": false, "created_utc": 1638396519.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_bh9ilzdq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "The Python solution is quite compact for this one:\n\n    with open(''input_files/day01'')
        as f:\n        data = [int(x) for x in f]\n    \n    print(sum(x &lt; y for
        x, y in zip(data, data[1:])))\n    print(sum(x &lt; y for x, y in zip(data,
        data[3:])))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The
        Python solution is quite compact for this one:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;input_files/day01&amp;#39;) as f:\n    data = [int(x) for x
        in f]\n\nprint(sum(x &amp;lt; y for x, y in zip(data, data[1:])))\nprint(sum(x
        &amp;lt; y for x, y in zip(data, data[3:])))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmupwiu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmupwiu", "created":
        1638396519.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_hmuyel8", "id": "hmuyel8", "parent_id":
        "t1_hmupwiu", "depth": 1, "children": ["hmuyel8", "hmvs70n"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrel6r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BumbleBeeBleep",
        "can_mod_post": false, "created_utc": 1638335362.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_134edk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python 3.10 (444/227)\n\nThe very ugly solution that I made in 3.5 minutes:\n\n\n    with
        open(file) as fp:\n        nums = [int(x) for x in fp]\n\n    x = 0\n    for
        i in range(1, len(nums)):\n        if nums[i - 1] &lt; nums[i]:\n            x
        += 1\n    print(x)\n\n    x = 0\n    for i in range(len(nums) - 3):\n        if
        sum(nums[i : i + 3]) &lt; sum(nums[i + 1 : i + 4]):\n            x += 1\n    print(x)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python 3.10 (444/227)&lt;/h1&gt;\n\n&lt;p&gt;The
        very ugly solution that I made in 3.5 minutes:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(file) as fp:\n    nums = [int(x) for x in fp]\n\nx = 0\nfor i in range(1,
        len(nums)):\n    if nums[i - 1] &amp;lt; nums[i]:\n        x += 1\nprint(x)\n\nx
        = 0\nfor i in range(len(nums) - 3):\n    if sum(nums[i : i + 3]) &amp;lt;
        sum(nums[i + 1 : i + 4]):\n        x += 1\nprint(x)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrel6r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrel6r", "created":
        1638335362.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrlsr6", "id": "hmrlsr6", "parent_id":
        "t1_hmrel6r", "depth": 1, "children": ["hmrlsr6"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmreq4n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "abnew123",
        "can_mod_post": false, "created_utc": 1638335439.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_n201opk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java 120/86\n\nGot hit with 2 gateway timeouts :/ one on main page one of
        input page. Oh well. Here''s a very long winded Java solution.\n\n\tpackage
        aoc2021;\n\t\n\timport java.io.*;\n\timport java.util.*;\n\t\n\tpublic class
        Day1 {\n\t\tpublic static void main(String[] args) throws FileNotFoundException
        {\n\t\t\tboolean is_part1 = false;\n\t\t\tint day = 1;\n\t\t\tFile file =
        new File(\"./aoc2021/day\" + day + \".txt\");\n\t\t\tScanner in = new Scanner(file);\n\t\t\tint
        answer = 0;\n\t\t\tList&lt;Integer&gt; nums = new ArrayList&lt;&gt;();\n\t\t\tList&lt;Integer&gt;
        nums2 = new ArrayList&lt;&gt;();\n\t\t\twhile(in.hasNext()) {\n\t\t\t\tnums.add(in.nextInt());\n\t\t\t}\n\t\t\tfor(int
        i = 0; i &lt; nums.size()-2; i++) {\n\t\t\t\tnums2.add(nums.get(i) + nums.get(i+1)
        + nums.get(i+2));\n\t\t\t}\n\t\t\tif(is_part1) {\n\t\t\t\tfor(int i = 1; i
        &lt; nums.size(); i++) {\n\t\t\t\t\tif(nums.get(i) &gt; nums.get(i-1)) {\n\t\t\t\t\t\tanswer+=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse
        {\n\t\t\t\tfor(int i = 1; i &lt; nums2.size(); i++) {\n\t\t\t\t\tif(nums2.get(i)
        &gt; nums2.get(i-1)) {\n\t\t\t\t\t\tanswer+=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(answer);\n\t\t\tin.close();\n\t\t}\n\t}",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java 120/86&lt;/p&gt;\n\n&lt;p&gt;Got
        hit with 2 gateway timeouts :/ one on main page one of input page. Oh well.
        Here&amp;#39;s a very long winded Java solution.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        aoc2021;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class Day1 {\n    public
        static void main(String[] args) throws FileNotFoundException {\n        boolean
        is_part1 = false;\n        int day = 1;\n        File file = new File(&amp;quot;./aoc2021/day&amp;quot;
        + day + &amp;quot;.txt&amp;quot;);\n        Scanner in = new Scanner(file);\n        int
        answer = 0;\n        List&amp;lt;Integer&amp;gt; nums = new ArrayList&amp;lt;&amp;gt;();\n        List&amp;lt;Integer&amp;gt;
        nums2 = new ArrayList&amp;lt;&amp;gt;();\n        while(in.hasNext()) {\n            nums.add(in.nextInt());\n        }\n        for(int
        i = 0; i &amp;lt; nums.size()-2; i++) {\n            nums2.add(nums.get(i)
        + nums.get(i+1) + nums.get(i+2));\n        }\n        if(is_part1) {\n            for(int
        i = 1; i &amp;lt; nums.size(); i++) {\n                if(nums.get(i) &amp;gt;
        nums.get(i-1)) {\n                    answer+=1;\n                }\n            }\n        }\n        else
        {\n            for(int i = 1; i &amp;lt; nums2.size(); i++) {\n                if(nums2.get(i)
        &amp;gt; nums2.get(i-1)) {\n                    answer+=1;\n                }\n            }\n        }\n        System.out.println(answer);\n        in.close();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmreq4n/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmreq4n", "created":
        1638335439.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrevqd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "emilys_kid_sister",
        "can_mod_post": false, "created_utc": 1638335523.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_byeuz331", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust 390 / 515\n\nThis year, I''m going to try recording my solutions. [Let
        me know what you think!](https://www.youtube.com/watch?v=Y-7CTTo83dA)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Rust 390 / 515&lt;/p&gt;\n\n&lt;p&gt;This
        year, I&amp;#39;m going to try recording my solutions. &lt;a href=\"https://www.youtube.com/watch?v=Y-7CTTo83dA\"&gt;Let
        me know what you think!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrevqd/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrevqd", "created": 1638335523.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrf4pv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "geckothegeek42", "can_mod_post": false,
        "created_utc": 1638335661.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_eggyf", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "\\#1252/#367 which
        honestly better than I thought, rust compilation time screwed me out of the
        first part\n\n    pub fn part1(input: &amp;str) -&gt; usize {  \n        input  \n        .lines()  \n        .map(|s|
        s.parse::&lt;usize&gt;().unwrap())  \n        .tuple\\_windows()  \n        .filter(|(a,
        b)| b &gt; a)  \n        .count()  \n    }  \n    pub fn part2(input: &amp;str)
        -&gt; usize {  \n        // input  \n        //     .lines()  \n        //     .map(|s|
        s.parse::&lt;usize&gt;().unwrap())  \n        //     .tuple\\_windows()  \n        //     .map(|(a,
        b, c)| a + b + c)  \n        //     .tuple\\_windows()  \n        //     .filter(|(a,
        b)| b &gt; a)  \n        //     .count()  \n        input  \n        .lines()  \n        .map(|s|
        s.parse::&lt;usize&gt;().unwrap())  \n        .tuple\\_windows()  \n        .filter(|(a,
        \\_, \\_, b)| b &gt; a)  \n        .count()  \n    }\n\nPretty straightforward
        rust solution, I used tuple\\_windows from Itertools but you can use `collect().array_windows()`
        for pure rust.\n\nAnyone looking to optimize might note that you don''t have
        to do any summation for part 2. Use a 4 wide sliding window and compare the
        first and last. This is because when you slide the 3-sum you are adding the
        last number and subtracting the first number, so increase/decrease just depends
        on the comparison of those 2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;#1252/#367
        which honestly better than I thought, rust compilation time screwed me out
        of the first part&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub fn part1(input:
        &amp;amp;str) -&amp;gt; usize {  \n    input  \n    .lines()  \n    .map(|s|
        s.parse::&amp;lt;usize&amp;gt;().unwrap())  \n    .tuple\\_windows()  \n    .filter(|(a,
        b)| b &amp;gt; a)  \n    .count()  \n}  \npub fn part2(input: &amp;amp;str)
        -&amp;gt; usize {  \n    // input  \n    //     .lines()  \n    //     .map(|s|
        s.parse::&amp;lt;usize&amp;gt;().unwrap())  \n    //     .tuple\\_windows()  \n    //     .map(|(a,
        b, c)| a + b + c)  \n    //     .tuple\\_windows()  \n    //     .filter(|(a,
        b)| b &amp;gt; a)  \n    //     .count()  \n    input  \n    .lines()  \n    .map(|s|
        s.parse::&amp;lt;usize&amp;gt;().unwrap())  \n    .tuple\\_windows()  \n    .filter(|(a,
        \\_, \\_, b)| b &amp;gt; a)  \n    .count()  \n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Pretty
        straightforward rust solution, I used tuple_windows from Itertools but you
        can use &lt;code&gt;collect().array_windows()&lt;/code&gt; for pure rust.&lt;/p&gt;\n\n&lt;p&gt;Anyone
        looking to optimize might note that you don&amp;#39;t have to do any summation
        for part 2. Use a 4 wide sliding window and compare the first and last. This
        is because when you slide the 3-sum you are adding the last number and subtracting
        the first number, so increase/decrease just depends on the comparison of those
        2&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf4pv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrf4pv", "created":
        1638335661.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638336487.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrf4te", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "erlangguy",
        "can_mod_post": false, "created_utc": 1638335662.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_mpah5du", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Erlang\n\nPart 1 (ignoring I/O and entry point):\n```\ncount_increases([],
        _Prev, Tally) -&gt;\n    Tally;\ncount_increases([H|T], Prev, Tally) when
        H &gt; Prev -&gt;\n    count_increases(T, H, Tally+1);\ncount_increases([H|T],
        _Prev, Tally) -&gt;\n    count_increases(T, H, Tally).\n```\n\nPart 2\n```\ncount_increases([_T1,_T2],
        _Prev, Tally) -&gt;\n    Tally;\ncount_increases([H1,H2,H3|T], Prev, Tally)
        when H1+H2+H3 &gt; Prev -&gt;\n    count_increases([H2,H3|T], H1+H2+H3, Tally+1);\ncount_increases([H1,H2,H3|T],
        _Prev, Tally) -&gt;\n    count_increases([H2,H3|T], H1+H2+H3, Tally).\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Erlang&lt;/h2&gt;\n\n&lt;p&gt;Part
        1 (ignoring I/O and entry point):\n&lt;code&gt;\ncount_increases([], _Prev,
        Tally) -&amp;gt;\n    Tally;\ncount_increases([H|T], Prev, Tally) when H &amp;gt;
        Prev -&amp;gt;\n    count_increases(T, H, Tally+1);\ncount_increases([H|T],
        _Prev, Tally) -&amp;gt;\n    count_increases(T, H, Tally).\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2\n&lt;code&gt;\ncount_increases([_T1,_T2], _Prev, Tally) -&amp;gt;\n    Tally;\ncount_increases([H1,H2,H3|T],
        Prev, Tally) when H1+H2+H3 &amp;gt; Prev -&amp;gt;\n    count_increases([H2,H3|T],
        H1+H2+H3, Tally+1);\ncount_increases([H1,H2,H3|T], _Prev, Tally) -&amp;gt;\n    count_increases([H2,H3|T],
        H1+H2+H3, Tally).\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf4te/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrf4te", "created": 1638335662.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrf59h", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ritobanrc", "can_mod_post": false, "created_utc":
        1638335668.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_16tntq", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "[Rust](https://github.com/ritobanrc/aoc2021/blob/main/src/day01.rs),
        quite slow though, because the script I had to get the input automatically
        didn''t use EST initially and I had to fix it, losing like 5 minutes. But
        was quite easy with `Itertools::tuple_windows` (though `array_windows` in
        `std` would have been even nicer, once that lands on stable).", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/ritobanrc/aoc2021/blob/main/src/day01.rs\"&gt;Rust&lt;/a&gt;,
        quite slow though, because the script I had to get the input automatically
        didn&amp;#39;t use EST initially and I had to fix it, losing like 5 minutes.
        But was quite easy with &lt;code&gt;Itertools::tuple_windows&lt;/code&gt;
        (though &lt;code&gt;array_windows&lt;/code&gt; in &lt;code&gt;std&lt;/code&gt;
        would have been even nicer, once that lands on stable).&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf59h/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrf59h", "created":
        1638335668.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrh13d", "id": "hmrh13d", "parent_id":
        "t1_hmrf59h", "depth": 1, "children": ["hmrh13d"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638336571.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrf8rs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LeSomeguy",
        "can_mod_post": false, "created_utc": 1638335720.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ka24d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\nUsing Advent of Code to learn Rust this year, please let me know
        if anything could be written more idiomatically!\n\n_Part 1_\n\n    pub fn
        solve_part_one(input: &amp;String) -&gt; i32 {\n        let vals = input.lines()\n            .map(|s|
        s.parse().unwrap())\n            .collect::&lt;Vec&lt;i32&gt;&gt;();\n        vals.iter()\n            .zip(vals.iter().skip(1))\n            .filter(|(prev,
        curr)| *curr &gt; *prev)\n            .count() as i32\n    }\n\n\n_Part 2_\n\n    pub
        fn solve_part_two(input: &amp;String) -&gt; i32 {\n        let vals = input.lines()\n            .map(|s|
        s.parse().unwrap())\n            .collect::&lt;Vec&lt;i32&gt;&gt;();\n    \n        let
        vals = vals.iter()\n            .enumerate()\n            .take(vals.len()
        - 2)\n            .map(|(i, c)| c + vals[i + 1] + vals[i + 2])\n            .map(|x|
        dbg!(x))\n            .collect::&lt;Vec&lt;i32&gt;&gt;();\n    \n        vals.iter()\n            .zip(vals.iter().skip(1))\n            .filter(|(prev,
        curr)| *curr &gt; *prev)\n            .count() as i32\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Using
        Advent of Code to learn Rust this year, please let me know if anything could
        be written more idiomatically!&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Part 1&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn solve_part_one(input: &amp;amp;String) -&amp;gt; i32 {\n    let vals =
        input.lines()\n        .map(|s| s.parse().unwrap())\n        .collect::&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;();\n    vals.iter()\n        .zip(vals.iter().skip(1))\n        .filter(|(prev,
        curr)| *curr &amp;gt; *prev)\n        .count() as i32\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Part
        2&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub fn solve_part_two(input:
        &amp;amp;String) -&amp;gt; i32 {\n    let vals = input.lines()\n        .map(|s|
        s.parse().unwrap())\n        .collect::&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;();\n\n    let
        vals = vals.iter()\n        .enumerate()\n        .take(vals.len() - 2)\n        .map(|(i,
        c)| c + vals[i + 1] + vals[i + 2])\n        .map(|x| dbg!(x))\n        .collect::&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;();\n\n    vals.iter()\n        .zip(vals.iter().skip(1))\n        .filter(|(prev,
        curr)| *curr &amp;gt; *prev)\n        .count() as i32\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf8rs/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrf8rs", "created":
        1638335720.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmrfy4z", "id": "hmrfy4z", "parent_id":
        "t1_hmrf8rs", "depth": 1, "children": ["hmrfy4z", "hmrfhzt"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrf92d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "PendragonDaGreat",
        "can_mod_post": false, "created_utc": 1638335724.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_7nqwk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# it ain''t compact, but it pretty fast. 40.4 ms, 40 of which is parsing
        the input to an int list.\n\nhttps://github.com/Bpendragon/AdventOfCodeCSharp/blob/master/AdventOfCode/Solutions/Year2021/Day01-Solution.cs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C# it ain&amp;#39;t
        compact, but it pretty fast. 40.4 ms, 40 of which is parsing the input to
        an int list.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Bpendragon/AdventOfCodeCSharp/blob/master/AdventOfCode/Solutions/Year2021/Day01-Solution.cs\"&gt;https://github.com/Bpendragon/AdventOfCodeCSharp/blob/master/AdventOfCode/Solutions/Year2021/Day01-Solution.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf92d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrf92d", "created":
        1638335724.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmrfpck", "id": "hmrfpck", "parent_id":
        "t1_hmrf92d", "depth": 1, "children": ["hmrfpck", "hmrgqix"]}}, {"kind": "more",
        "data": {"count": 775, "name": "t1_hmrfj4u", "id": "hmrfj4u", "parent_id":
        "t3_r66vow", "depth": 0, "children": ["hmrfj4u", "hmrfsij", "hmrfk32", "hmrfv48",
        "hmrhdgc", "hmrfpg5", "hmrg6cr", "hmrl92g", "hmrg937", "hmrhvmq", "hmrhqsr",
        "hmrh1r4", "hmrg1kh", "hmrgfud", "hmrins1", "hmrz40u", "hmrlffy", "hmrgg3c",
        "hmrgey5", "hmrjghk", "hmrrbe6", "hmrr3w3", "hmrtbjq", "hmrhdk2", "hmrino9",
        "hmrgty5", "hmrx7fx", "hmrh7ku", "hmrh2vk", "hmrj5v8", "hmrs1dg", "hms2u4s",
        "hmse1bp", "hmrzmu2", "hmrsklw", "hmrjd7f", "hmrmjt8", "hmrjrhv", "hmrguh8",
        "hmrs30t", "hmrqozx", "hms009r", "hmru0e5", "hmrtaig", "hmrr4l8", "hms1s6r",
        "hms9kby", "hmrs8pi", "hmrio89", "hmrlidz", "hmrtnc5", "hmrhr75", "hms6rw6",
        "hmrxcqk", "hms5s4x", "hmri0oz", "hmrjmin", "hmrruww", "hmrk31c", "hmrmn6p",
        "hms1fac", "hms24ql", "hmryepf", "hmss6je", "hmshtm9", "hmtbcpy", "hmtp273",
        "hmsr9et", "hmsumbu", "hms7gau", "hmt5dgk", "hmrk087", "hmru1rn", "hmrzl7z",
        "hms0wwq", "hmrkjxn", "hmt7y0e", "hmsa0hn", "hmsrb47", "hms4w5y", "hmsr243",
        "hmsbmj1", "hmrt4yg", "hms2ee2", "hmvoa64", "hmyfdr9", "hmsmzua", "hms8odm",
        "hmrydbs", "hmsnmhw", "hmsogj4", "hmtqtlx", "hms8x51", "hmsvx7j", "hmtou21",
        "hmrtiig", "hmsr79d", "hmrn5eh", "hmrmuci", "hms1j6d", "hmrs7po", "hmsi1lb",
        "hmshy76", "hms6jxx", "hmso78b", "hmt2d0z", "hmswer6", "hmshxa7", "hms1z0o",
        "hmuox3j", "hmsd95d", "hmriaqg", "hms455t", "hmunovu", "hmso475", "hms21cb",
        "hms98ik", "hms50ta", "hmrxsyi", "hmsf2pc", "hmrwqat", "hmtkx5u", "hmtfafr",
        "hmsvo2v", "hms8ikj", "hmt02z0", "hmt8pge", "hmvxl2c", "hmv395f", "hmrfr8r",
        "hmtzrre", "hmtou73", "hmvae71", "hmsdp0m", "hmt0ynh", "hmt9f7j", "hmuxfuh",
        "hms93us", "hmwc3gl", "hmvffrj", "hmsc6zx", "hmw42an", "hmsll5m", "hmryh40",
        "hmtpxvo", "hms3lqj", "hmveoia", "hmtomhu", "hmrfld2", "hmrtomh", "hmu7i0g",
        "hmy3con", "hmwegvt", "hmssgwx", "hmw4ek2", "hmvp1xr", "hmvttxb", "hmukafq",
        "hmwtvl7", "hmvg97r", "hmu172l", "hmsr7zw", "hmy32s1", "hmvszqc", "hms4ewo",
        "hmusj18", "hmwnrhk", "hmvhiw7", "hmsnokd", "hmtteup", "hmsr3as", "hmrxxk9",
        "hmu2gx2", "hms0omp", "hmsrgeu", "hmteqky", "hmsst3c", "hmtypln", "hmtimr9",
        "hmtf0lj", "hmtfl5k", "hmt3c9q", "hmxm0oa", "hmva7zl", "hmsw7qt", "hmst5oy",
        "hmsrqka", "hmtqurm", "hmtublx", "hmscvvl", "hms3twz", "hmu9qut", "hmsszew",
        "hmtvyoj", "hmtyhqw", "hmxgs6y", "hmum4io", "hmtith2", "hmve44r", "hmt1dsj",
        "hmsoygk", "hmrf0j6", "hmrr8s5", "hmt833f", "hmvjxdh", "hmumga1", "hmu6yri",
        "hmtfxz8", "hmtskg5", "hmu4r0v", "hmul1w0", "hmupha0", "hmu41kj", "hmreik6",
        "hmsaolj", "hms4lux", "hmsj2yt", "hmubq5y", "hmt42bv", "hmvyzz7", "hmubyyr",
        "hmsqyxj", "hmsd2vf", "hmvu8v1", "hmuu8ya", "hms3qzs", "hmsit0y", "hmsioan",
        "hmsvczl", "hmunpx2", "hmu2ehy", "hmunk6r", "hmu7mkh", "hmt0d6b", "hmu2rw9",
        "hmuc4hm", "hmy90co", "hmtytou", "hmvo3y7", "hmtp9ng", "hmxn3xv", "hms028u",
        "hmuvznj", "hmuxrtd", "hmwpkjo", "hmvcmtf", "hmur5u6", "hmv7xhs", "hmwxxf7",
        "hmuqjav", "hmul0m8", "hmrz22v", "hmrhcqc", "hmtx4jg", "hmu9yeq", "hmsqpii",
        "hmv8bqt", "hmuvxcd", "hmtkjc8", "hmvd82d", "hms0m82", "hmwwi7l", "hmt5mu9",
        "hmsmh1y", "hmtxaje", "hmt84zy", "hmti8v3", "hmvqboh", "hmtil9k", "hmuuxtj",
        "hmtb264", "hmt7ejw", "hmv8xhi", "hmv7e6n", "hmto2mk", "hmsebbs", "hmtdkt1",
        "hmu297u", "hmvy97q", "hmrzrtr", "hmspb17", "hmrz2jn", "hmxdpt3", "hmvvm80",
        "hmvh953", "hmren52", "hmrh3m6", "hmwtwoc", "hmtrv9z", "hmswb9a", "hmugkix",
        "hmut6fx", "hmw21oo", "hmwb2ra", "hmucq9b", "hmvcobg", "hmrf2g0", "hmrfuew",
        "hmsic35", "hmul9ls", "hmvbdu3", "hmt4tjc", "hms2tdh", "hmwtk1w", "hmwxwzb",
        "hmu51kx", "hmua6gz", "hms97z3", "hmretnt", "hmxf61e", "hmy8v67", "hmtqk3y",
        "hmsxnbq", "hmx74kk", "hmxa298", "hmuxks0", "hmwdb3a", "hmurtrn", "hms8zqs",
        "hmtpdh1", "hmwx4lt", "hmukph5", "hmsipx1", "hmvn98k", "hmunt9t", "hmtouj5",
        "hmu2d91", "hms92lp", "hmuy2yb", "hmvd24s", "hms9me8", "hmuijjn", "hmrf0gg",
        "hmss2k9", "hmsthqs", "hms8x4k", "hmy5y2j", "hmrfa3v", "hmw1jxb", "hmuz7ba",
        "hms8upn", "hmtlqdt", "hmvnyic", "hmuwc2v", "hmy9ke6", "hmts3v2", "hmx4oh4",
        "hmuy7px", "hmrf87m", "hmupvsh", "hmrklsj", "hmrf9ck", "hmuf6r8", "hmrfhj6",
        "hmrel8t", "hmxa4gk", "hmrhr14", "hmxrx3s", "hmrks2m", "hmw8zxm", "hmupg0c",
        "hmt2qvg", "hmuc4p0", "hmuvltl", "hmy98ot", "hmrzgee", "hmrfvru", "hmurivu",
        "hmse2jo", "hmw9ssu", "hmx8h5l", "hmu9x7q", "hms0ovt", "hmwg4mh", "hmrt2sw",
        "hms6qq4", "hmuqc8p", "hmu7g9d", "hmtpgu7", "hmwk3gr", "hmtl4l8", "hmtcewm",
        "hmrezlc", "hmris2x", "hmvqsha", "hmsnt19", "hmwgacu", "hmtw0cl", "hmtbaw0",
        "hmvwtzm", "hmrn1qi", "hmriplw", "hmux6rf", "hmwn65l", "hms9kem", "hmsrw4q",
        "hmuwikk", "hmuwdqz", "hmuwsn3", "hmvwd6n", "hmubzlt", "hmshy8w", "hmvqe6x",
        "hmssbuw", "hmv06au", "hmx4u0j", "hmry7u5", "hms0h5d", "hmvq4sq", "hmx7ocb",
        "hmu47y6", "hms2it8", "hmuszg8", "hms9w78", "hmuu15c", "hmtnoc6", "hmtl0p6",
        "hmreons", "hmtckwf", "hmtb5yc", "hmvwuer", "hmygsqt"]}}], true]], [0, 12,
        "attr", "things"], [12, 13, "call", ["t1_hmsvdty"]], [13, 14, "attr", "focus"],
        [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call", ["None"]],
        [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]], [19, 20,
        "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:18 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:18 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=yJDda5LLDcxzBuEW3V; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:18 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmrfj4u,hmrfsij,hmrfk32,hmrfv48,hmrhdgc,hmrfpg5,hmrg6cr,hmrl92g,hmrg937,hmrhvmq,hmrhqsr,hmrh1r4,hmrg1kh,hmrgfud,hmrins1,hmrz40u,hmrlffy,hmrgg3c,hmrgey5,hmrjghk,hmrrbe6,hmrr3w3,hmrtbjq,hmrhdk2,hmrino9,hmrgty5,hmrx7fx,hmrh7ku,hmrh2vk,hmrj5v8,hmrs1dg,hms2u4s,hmse1bp,hmrzmu2,hmrsklw,hmrjd7f,hmrmjt8,hmrjrhv,hmrguh8,hmrs30t,hmrqozx,hms009r,hmru0e5,hmrtaig,hmrr4l8,hms1s6r,hms9kby,hmrs8pi,hmrio89,hmrlidz,hmrtnc5,hmrhr75,hms6rw6,hmrxcqk,hms5s4x,hmri0oz,hmrjmin,hmrruww,hmrk31c,hmrmn6p,hms1fac,hms24ql,hmryepf,hmss6je,hmshtm9,hmtbcpy,hmtp273,hmsr9et,hmsumbu,hms7gau,hmt5dgk,hmrk087,hmru1rn,hmrzl7z,hms0wwq,hmrkjxn,hmt7y0e,hmsa0hn,hmsrb47,hms4w5y,hmsr243,hmsbmj1,hmrt4yg,hms2ee2,hmvoa64,hmyfdr9,hmsmzua,hms8odm,hmrydbs,hmsnmhw,hmsogj4,hmtqtlx,hms8x51,hmsvx7j,hmtou21,hmrtiig,hmsr79d,hmrn5eh,hmrmuci,hms1j6d,hmrs7po,hmsi1lb,hmshy76,hms6jxx,hmso78b,hmt2d0z,hmswer6,hmshxa7,hms1z0o,hmuox3j,hmsd95d,hmriaqg,hms455t,hmunovu,hmso475,hms21cb,hms98ik,hms50ta,hmrxsyi,hmsf2pc,hmrwqat,hmtkx5u,hmtfafr,hmsvo2v,hms8ikj,hmt02z0,hmt8pge,hmvxl2c,hmv395f,hmrfr8r,hmtzrre,hmtou73,hmvae71,hmsdp0m,hmt0ynh,hmt9f7j,hmuxfuh,hms93us,hmwc3gl,hmvffrj,hmsc6zx,hmw42an,hmsll5m,hmryh40,hmtpxvo,hms3lqj,hmveoia,hmtomhu,hmrfld2,hmrtomh,hmu7i0g,hmy3con,hmwegvt,hmssgwx,hmw4ek2,hmvp1xr,hmvttxb,hmukafq,hmwtvl7,hmvg97r,hmu172l,hmsr7zw,hmy32s1,hmvszqc,hms4ewo,hmusj18,hmwnrhk,hmvhiw7,hmsnokd,hmtteup,hmsr3as,hmrxxk9,hmu2gx2,hms0omp,hmsrgeu,hmteqky,hmsst3c,hmtypln,hmtimr9,hmtf0lj,hmtfl5k,hmt3c9q,hmxm0oa,hmva7zl,hmsw7qt,hmst5oy,hmsrqka,hmtqurm,hmtublx,hmscvvl,hms3twz,hmu9qut,hmsszew,hmtvyoj,hmtyhqw,hmxgs6y,hmum4io,hmtith2,hmve44r,hmt1dsj,hmsoygk,hmrf0j6,hmrr8s5,hmt833f,hmvjxdh,hmumga1,hmu6yri,hmtfxz8,hmtskg5,hmu4r0v,hmul1w0,hmupha0,hmu41kj,hmreik6,hmsaolj,hms4lux,hmsj2yt,hmubq5y,hmt42bv,hmvyzz7,hmubyyr,hmsqyxj,hmsd2vf,hmvu8v1,hmuu8ya,hms3qzs,hmsit0y,hmsioan,hmsvczl,hmunpx2,hmu2ehy,hmunk6r,hmu7mkh,hmt0d6b,hmu2rw9,hmuc4hm,hmy90co,hmtytou,hmvo3y7,hmtp9ng,hmxn3xv,hms028u,hmuvznj,hmuxrtd,hmwpkjo,hmvcmtf,hmur5u6,hmv7xhs,hmwxxf7,hmuqjav,hmul0m8,hmrz22v,hmrhcqc,hmtx4jg,hmu9yeq,hmsqpii,hmv8bqt,hmuvxcd,hmtkjc8,hmvd82d,hms0m82,hmwwi7l,hmt5mu9,hmsmh1y,hmtxaje,hmt84zy,hmti8v3,hmvqboh,hmtil9k,hmuuxtj,hmtb264,hmt7ejw,hmv8xhi,hmv7e6n,hmto2mk,hmsebbs,hmtdkt1,hmu297u,hmvy97q,hmrzrtr,hmspb17,hmrz2jn,hmxdpt3,hmvvm80,hmvh953,hmren52,hmrh3m6,hmwtwoc,hmtrv9z,hmswb9a,hmugkix,hmut6fx,hmw21oo,hmwb2ra,hmucq9b,hmvcobg,hmrf2g0,hmrfuew,hmsic35,hmul9ls,hmvbdu3,hmt4tjc,hms2tdh,hmwtk1w,hmwxwzb,hmu51kx,hmua6gz,hms97z3,hmretnt,hmxf61e,hmy8v67,hmtqk3y,hmsxnbq,hmx74kk,hmxa298,hmuxks0,hmwdb3a,hmurtrn,hms8zqs,hmtpdh1,hmwx4lt,hmukph5,hmsipx1,hmvn98k,hmunt9t,hmtouj5,hmu2d91,hms92lp,hmuy2yb,hmvd24s,hms9me8,hmuijjn,hmrf0gg,hmss2k9,hmsthqs,hms8x4k,hmy5y2j,hmrfa3v,hmw1jxb,hmuz7ba,hms8upn,hmtlqdt,hmvnyic,hmuwc2v,hmy9ke6,hmts3v2,hmx4oh4,hmuy7px,hmrf87m,hmupvsh,hmrklsj,hmrf9ck,hmuf6r8,hmrfhj6,hmrel8t,hmxa4gk,hmrhr14,hmxrx3s,hmrks2m,hmw8zxm,hmupg0c,hmt2qvg,hmuc4p0,hmuvltl,hmy98ot,hmrzgee,hmrfvru,hmurivu,hmse2jo,hmw9ssu,hmx8h5l,hmu9x7q,hms0ovt,hmwg4mh,hmrt2sw,hms6qq4,hmuqc8p,hmu7g9d,hmtpgu7,hmwk3gr,hmtl4l8,hmtcewm,hmrezlc,hmris2x,hmvqsha,hmsnt19,hmwgacu,hmtw0cl,hmtbaw0,hmvwtzm,hmrn1qi,hmriplw,hmux6rf,hmwn65l,hms9kem,hmsrw4q,hmuwikk,hmuwdqz,hmuwsn3,hmvwd6n,hmubzlt,hmshy8w,hmvqe6x,hmssbuw,hmv06au,hmx4u0j,hmry7u5,hms0h5d,hmvq4sq,hmx7ocb,hmu47y6,hms2it8,hmuszg8,hms9w78,hmuu15c,hmtnoc6,hmtl0p6,hmreons,hmtckwf,hmtb5yc,hmvwuer,hmygsqt
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '37400'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg62thqm.2.1741472959044.Z0FBQUFBQm56TVNfR1FFZldWa0VoMzJPeWd0NFB6UW9yTlVJd3plZzhDUW1iaS1DQWFpdXZKWGtQdmdXTzlSd1YzemhFazlaQmQ3SW0xbmhBM3FiUGtYTmxOZjRjN05CQTBtTTBYQjVTZU5MTzM2ZE1mZm5mTWJZZ1lsWUNMRUFPLUZfOUdRRWhZclk;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:19
        GMT; secure, session_tracker=bjkakrhpcmhblhfgog.0.1741472959058.Z0FBQUFBQm56TVNfUzBpTjZVeFhZZUpYa18xeEt4cDFpYmZNaFBQX0lia1kwNFVkd3BJRVozZ19QUWhPSmdyeHlhUkpMaU5kbV9xck05M0s4VkU0eVhmdUtwVlpOVjk2MTJkZ2NSd2pVUWtsZlQxTUlELWlEOW9haTUyYmZzYURhdHpyS0ZyUTlfSlo;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:19
        GMT; secure, edgebucket=POhbEPTTJeMJ6HSiv6; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '62'
      x-ratelimit-remaining:
      - '38.0'
      x-ratelimit-reset:
      - '40'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:19 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfj4u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "PentakilI",
        "can_mod_post": false, "created_utc": 1638335878.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_gngrt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin\n\n    override fun part1(input: Sequence&lt;Int&gt;): Any {\n        return
        input.zipWithNext().count { it.second &gt; it.first }\n    }\n\n    override
        fun part2(input: Sequence&lt;Int&gt;): Any {\n        val windows = input.windowed(3).map
        { it.sum() }\n        return part1(windows)\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Kotlin&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;override
        fun part1(input: Sequence&amp;lt;Int&amp;gt;): Any {\n    return input.zipWithNext().count
        { it.second &amp;gt; it.first }\n}\n\noverride fun part2(input: Sequence&amp;lt;Int&amp;gt;):
        Any {\n    val windows = input.windowed(3).map { it.sum() }\n    return part1(windows)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfj4u/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfj4u", "created":
        1638335878.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrn5kg", "id": "hmrn5kg", "parent_id":
        "t1_hmrfj4u", "depth": 1, "children": ["hmrn5kg"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfk32",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MasterMedo",
        "can_mod_post": false, "created_utc": 1638335893.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_xdp9x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python one liners\n\n    with open(\"../input/1.txt\") as f:\n        depths
        = list(map(int, f.readlines()))\n    \n    print(sum(depths[i - 1] &lt; depths[i]
        for i in range(1, len(depths))))\n    print(\n        sum(\n            sum(depths[i
        - 3 : i]) &lt; sum(depths[i - 2 : i + 1])\n            for i in range(3, len(depths))\n        )\n    )",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python one liners&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;../input/1.txt&amp;quot;) as f:\n    depths = list(map(int,
        f.readlines()))\n\nprint(sum(depths[i - 1] &amp;lt; depths[i] for i in range(1,
        len(depths))))\nprint(\n    sum(\n        sum(depths[i - 3 : i]) &amp;lt;
        sum(depths[i - 2 : i + 1])\n        for i in range(3, len(depths))\n    )\n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfk32/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfk32", "created":
        1638335893.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmrk48s", "id": "hmrk48s", "parent_id":
        "t1_hmrfk32", "depth": 1, "children": ["hmrk48s"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638338698.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrfpg5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "xelf",
        "can_mod_post": false, "created_utc": 1638335973.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_3k2at", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python.\nsum of a generator.\n\n    depths = [*map(int, aoc_input)]\n    part_1
        = sum(b&gt;a for a,b in zip(depths, depths[1:]))\n    depths = [sum(depths[i-3:i])
        for i in range(3,len(depths)+1)]\n    part_2 = sum(b&gt;a for a,b in zip(depths,
        depths[1:]))\n\nrevamped, now with more lambda\n\n    def day1(aoc_input):\n        d
        = [*map(int, aoc_input)]\n        s = lambda d:sum(b&gt;a for a,b in zip(d,
        d[1:]))\n        return s(d), s([sum(d[i-3:i]) for i in range(3,len(d)+1)])\n    p1,p2
        = day1(open(aoc_data).readlines())", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python.\nsum of a generator.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depths
        = [*map(int, aoc_input)]\npart_1 = sum(b&amp;gt;a for a,b in zip(depths, depths[1:]))\ndepths
        = [sum(depths[i-3:i]) for i in range(3,len(depths)+1)]\npart_2 = sum(b&amp;gt;a
        for a,b in zip(depths, depths[1:]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;revamped,
        now with more lambda&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def day1(aoc_input):\n    d
        = [*map(int, aoc_input)]\n    s = lambda d:sum(b&amp;gt;a for a,b in zip(d,
        d[1:]))\n    return s(d), s([sum(d[i-3:i]) for i in range(3,len(d)+1)])\np1,p2
        = day1(open(aoc_data).readlines())\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfpg5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfpg5", "created":
        1638335973.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_hmrk8pk", "id": "hmrk8pk", "parent_id":
        "t1_hmrfpg5", "depth": 1, "children": ["hmrk8pk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfsij",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Autom3",
        "can_mod_post": false, "created_utc": 1638336018.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_b5bak", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JS 511/180\n\nScrew sliding windows\n\nCommon:\n\n    const inputBuffer =
        await fs.readFile(''input.txt'')\n    const input = inputBuffer.toString().trim().split(''\\n'').map(n
        =&gt; parseInt(n))\n\nPart 1: `input.reduce((acc, n, i, arr) =&gt; n &gt;
        arr[i - 1] ? acc + 1 : acc, 0)`\n\nPart 2: `input.reduce((acc, n, i, arr)
        =&gt; n &gt; arr[i - 3] ? acc + 1 : acc, 0)`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;JS 511/180&lt;/p&gt;\n\n&lt;p&gt;Screw sliding windows&lt;/p&gt;\n\n&lt;p&gt;Common:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        inputBuffer = await fs.readFile(&amp;#39;input.txt&amp;#39;)\nconst input
        = inputBuffer.toString().trim().split(&amp;#39;\\n&amp;#39;).map(n =&amp;gt;
        parseInt(n))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 1: &lt;code&gt;input.reduce((acc,
        n, i, arr) =&amp;gt; n &amp;gt; arr[i - 1] ? acc + 1 : acc, 0)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2: &lt;code&gt;input.reduce((acc, n, i, arr) =&amp;gt; n &amp;gt; arr[i -
        3] ? acc + 1 : acc, 0)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfsij/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrfsij", "created": 1638336018.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmrqstu", "id": "hmrqstu", "parent_id": "t1_hmrfsij", "depth": 1, "children":
        ["hmrqstu"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638341369.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrfv48", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "giftpflanze",
        "can_mod_post": false, "created_utc": 1638336057.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_d9rz7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Factor\n\n    \"input\" utf8 file-lines\n    [ string&gt;number ] map dup\n    2
        clump [ first2 &lt; ] count .\n    3 clump [ sum ] map\n    2 clump [ first2
        &lt; ] count .\n\nPart 2 could be\n\n    4 clump [ [ first ] [ last ] bi &lt;
        ] count .\n\nbut I''m not sure if I like it better.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Factor&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;quot;input&amp;quot;
        utf8 file-lines\n[ string&amp;gt;number ] map dup\n2 clump [ first2 &amp;lt;
        ] count .\n3 clump [ sum ] map\n2 clump [ first2 &amp;lt; ] count .\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 could be&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;4 clump [ [ first ] [ last
        ] bi &amp;lt; ] count .\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but I&amp;#39;m
        not sure if I like it better.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfv48/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrfv48", "created": 1638336057.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_r66vow", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "hmrg1kh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_r66vow", "score": 2, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Pascal  [3362](https://github.com/mikewarot/Advent_of_Code_in_Pascal/blob/master/advent2021_01a.lpr)/[2895](https://github.com/mikewarot/Advent_of_Code_in_Pascal/blob/master/advent2021_01b.lpr)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmrg1kh",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pascal  &lt;a
        href=\"https://github.com/mikewarot/Advent_of_Code_in_Pascal/blob/master/advent2021_01a.lpr\"&gt;3362&lt;/a&gt;/&lt;a
        href=\"https://github.com/mikewarot/Advent_of_Code_in_Pascal/blob/master/advent2021_01b.lpr\"&gt;2895&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrg1kh/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638336153.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638336153.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrg6cr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "goldenlion5648",
        "can_mod_post": false, "created_utc": 1638336222.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ymgq8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python \\(849/602\\)](https://github.com/Goldenlion5648/AdventOfCode2021/blob/master/1.py)\n\nVideo
        of me (failing at) solving (and freaking out) here: https://youtu.be/REUK-2E7VV0",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/Goldenlion5648/AdventOfCode2021/blob/master/1.py\"&gt;Python
        (849/602)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Video of me (failing at) solving
        (and freaking out) here: &lt;a href=\"https://youtu.be/REUK-2E7VV0\"&gt;https://youtu.be/REUK-2E7VV0&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrg6cr/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrg6cr", "created":
        1638336222.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638338823.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrg937", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Saluton",
        "can_mod_post": false, "created_utc": 1638336262.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_7j7mf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Dart (modified for brevity)\n\n    import ''dart:io'';\n\n    void main()
        {\n      final input = File(\"1_input\").readAsLinesSync().map(int.parse).toList();\n      print(part1(input));\n      print(part2(input));\n    }\n\n    String
        part1(List&lt;int&gt; input) {\n      int count = 0;\n      for (var i = 1;
        i &lt; input.length; i++) if (input[i] &gt; input [i-1]) count++;\n      return
        count.toString();\n    }\n\n    String part2(List&lt;int&gt; input) {\n      int
        count = 0;\n      for (var i = 0; i &lt; input.length - 3; i++) if (input[i]
        &lt; input[i+3]) count++;\n      return count.toString();\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Dart (modified for brevity)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        &amp;#39;dart:io&amp;#39;;\n\nvoid main() {\n  final input = File(&amp;quot;1_input&amp;quot;).readAsLinesSync().map(int.parse).toList();\n  print(part1(input));\n  print(part2(input));\n}\n\nString
        part1(List&amp;lt;int&amp;gt; input) {\n  int count = 0;\n  for (var i = 1;
        i &amp;lt; input.length; i++) if (input[i] &amp;gt; input [i-1]) count++;\n  return
        count.toString();\n}\n\nString part2(List&amp;lt;int&amp;gt; input) {\n  int
        count = 0;\n  for (var i = 0; i &amp;lt; input.length - 3; i++) if (input[i]
        &amp;lt; input[i+3]) count++;\n  return count.toString();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrg937/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrg937", "created":
        1638336262.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrgey5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "RFMarkus",
        "can_mod_post": false, "created_utc": 1638336351.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4bn6cwlf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Go** 875/2369\n\nhttps://github.com/MarkusFreitag/advent-of-code/blob/master/puzzles/year2021/day1/day1.go",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Go&lt;/strong&gt;
        875/2369&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/MarkusFreitag/advent-of-code/blob/master/puzzles/year2021/day1/day1.go\"&gt;https://github.com/MarkusFreitag/advent-of-code/blob/master/puzzles/year2021/day1/day1.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgey5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgey5", "created":
        1638336351.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638337231.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrgfud", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sim642",
        "can_mod_post": false, "created_utc": 1638336365.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_49npq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My **Scala** solution](https://github.com/sim642/adventofcode/blob/master/src/main/scala/eu/sim642/adventofcode2021/Day1.scala).\n\nOne
        `sliding` for part 2, the other `sliding` for just getting consecutive pairs.\n\n**EDIT:**
        Remembered I have `zipWithTail` in my AoC library that I could use for consecutive
        pairs...", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/sim642/adventofcode/blob/master/src/main/scala/eu/sim642/adventofcode2021/Day1.scala\"&gt;My
        &lt;strong&gt;Scala&lt;/strong&gt; solution&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;One
        &lt;code&gt;sliding&lt;/code&gt; for part 2, the other &lt;code&gt;sliding&lt;/code&gt;
        for just getting consecutive pairs.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;
        Remembered I have &lt;code&gt;zipWithTail&lt;/code&gt; in my AoC library that
        I could use for consecutive pairs...&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgfud/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrgfud", "created": 1638336365.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrgg3c", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "PerturbedHamster", "can_mod_post": false,
        "created_utc": 1638336369.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_46ky7kqj", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Python3 with numpy:\n\n`import
        numpy as np`  \n`dat=np.loadtxt(''input_dec_1.txt'')`  \n`print(np.sum(np.diff(dat)&gt;0))`  \n`dat2=dat[:-2]+dat[1:-1]+dat[2:]`  \n`print(np.sum(np.diff(dat2)&gt;0))`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3 with numpy:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;import
        numpy as np&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;dat=np.loadtxt(&amp;#39;input_dec_1.txt&amp;#39;)&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;print(np.sum(np.diff(dat)&amp;gt;0))&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;dat2=dat[:-2]+dat[1:-1]+dat[2:]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;print(np.sum(np.diff(dat2)&amp;gt;0))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgg3c/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgg3c", "created":
        1638336369.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638337158.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrgty5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BradleySigma",
        "can_mod_post": false, "created_utc": 1638336586.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_bq0pq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#python 3\n\n    import aoc\n    data = aoc.intlist(1)\n    print(sum(i &lt;
        j for i, j in zip(data, data[1:])))\n    print(sum(i &lt; j for i, j in zip(data,
        data[3:])))\n\nIn Part Two, two of the three elements are shared between the
        sums. As such, you only need to compare the first element with the last element.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;python 3&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        aoc\ndata = aoc.intlist(1)\nprint(sum(i &amp;lt; j for i, j in zip(data, data[1:])))\nprint(sum(i
        &amp;lt; j for i, j in zip(data, data[3:])))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In
        Part Two, two of the three elements are shared between the sums. As such,
        you only need to compare the first element with the last element.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgty5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgty5", "created":
        1638336586.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrh6rn", "id": "hmrh6rn", "parent_id":
        "t1_hmrgty5", "depth": 1, "children": ["hmrh6rn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638384671.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrguh8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "101donutman",
        "can_mod_post": false, "created_utc": 1638336595.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_2my4smdb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Part 1 and two, both in c [paste](https://topaz.github.io/paste/#XQAAAQBCBAAAAAAAAAAhiAEGs5o5BnOCuqV9heG16a6JXRU0r1MO6wD09/MKkzGvNoaP8jVgQYlmWlxyDpU4ioIZwkALESssPP81dhiiKvpK2lszuqUzQ7KHmFyO0U1MiZ5dLRrmVKuy+/w/gN99jfq564mrhhPIQZYL57evyUhwfma8n575d5f6l8HtJ3JAeNTVpw1MmWziZiLhUE7OXwpmIrZLMXJSacvZK4PxNuwG3Kc3nkN6FpsRSpnBz160oDrbEL1BFNqckLiWAYeOCJJxZBoB51w2M8PrIF8A1tivR/YT8Qxddohdtla2wPH+Tg5upK5DjtJsarGgrMiFjV17yFklvLsgq0GQwA/u99hkK1i89SqQOBbNDGu22p0QA0bzE33X3pVUfWjrB3BTEZDUG44fboYrqy1vq0wNzUY0cf5oVXiHGc2tElE45oxxNfI58D6YKMywaTxe/9Crng1t1ocxFkoF060tK9VIvPs81es=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part 1 and two, both
        in c &lt;a href=\"https://topaz.github.io/paste/#XQAAAQBCBAAAAAAAAAAhiAEGs5o5BnOCuqV9heG16a6JXRU0r1MO6wD09/MKkzGvNoaP8jVgQYlmWlxyDpU4ioIZwkALESssPP81dhiiKvpK2lszuqUzQ7KHmFyO0U1MiZ5dLRrmVKuy+/w/gN99jfq564mrhhPIQZYL57evyUhwfma8n575d5f6l8HtJ3JAeNTVpw1MmWziZiLhUE7OXwpmIrZLMXJSacvZK4PxNuwG3Kc3nkN6FpsRSpnBz160oDrbEL1BFNqckLiWAYeOCJJxZBoB51w2M8PrIF8A1tivR/YT8Qxddohdtla2wPH+Tg5upK5DjtJsarGgrMiFjV17yFklvLsgq0GQwA/u99hkK1i89SqQOBbNDGu22p0QA0bzE33X3pVUfWjrB3BTEZDUG44fboYrqy1vq0wNzUY0cf5oVXiHGc2tElE45oxxNfI58D6YKMywaTxe/9Crng1t1ocxFkoF060tK9VIvPs81es=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrguh8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrguh8", "created":
        1638336595.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrh52l", "id": "hmrh52l", "parent_id":
        "t1_hmrguh8", "depth": 1, "children": ["hmrh52l"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638598806.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrh1r4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Rascal_Two",
        "can_mod_post": false, "created_utc": 1638336713.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_kxv37", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python (388/1181)\n\nGreat start, as is tradition I misread the 2nd part
        - thought it was to count the windows that had all values increasing - but
        all''s well that ends well!\n\n## [Unoptimized](https://topaz.github.io/paste/#XQAAAQBRAgAAAAAAAAAyGUj/T32X5leaNBUXWHuDoBcpGqRbMpcb802VdsMZ2uHInf1tEKiAFcTOBf0+y/9LfDREMWeJXbaUJ0pkp8ziBPbLEGe8uMEBCb9nhU8AcqwpjazMnywqclSU8qAIBbp1ZuJS4Z4yMXkG9TOZ4/jGTN7QQtIAwRJ8mhOE3RsTxxBXh8IoxlgNtQyVsXzCTBKM3VV0FYxV0Lo5kpjO++2ouaZZZoLJ5Cr1Lu/mMZ4Y4qNwPUD6vqJiCayOhbbX3V0n9VkKLajOhqxQOCwykek34ED3ADmBvb6iYAhhZVBX3VM1hTsXPh7M9i3SNESKtQOt1ikxTuOcRT2TN/sFMqBPDgw5prirZh9QVKeeb+CGQFsiSyemgIpvOPX6/+NYxaY=)\n\n##
        [Optimized](https://topaz.github.io/paste/#XQAAAQDeAQAAAAAAAAAyGUj/T32X5leaNBUXWHuDoBcpGqRbMpcb802VdsMZ2uHInf1tEKiAFcTOBf0+y/9LfDREMWeJXbaUJ0pkp8ziBPbLEGe8uMEBCb9nhU3a50LLN6RFepDlN8NfU4DgUiSzIBV9+iIuHlVTJ1ilcCZgcTGNPq1kO3WX/g6MctUXosWJWzVGuKwCzl/87g5xvsykDFMgtsE45NV2bS0tKmuuyxZYhR0496nTNqMgEHkwSZOWuVkVhqsXMaXNeh2zwrAEe59DSZ5QezoKDoEbbEoxzJacTNcFmDQwJo6Glg9h7prGzzwuxlxhgdM832KoP//BouKi)\n\nMost
        of the cleanup was just one-lining things, only real optimization is performing
        the window-sliding and summing at the same time.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Python (388/1181)&lt;/h1&gt;\n\n&lt;p&gt;Great start,
        as is tradition I misread the 2nd part - thought it was to count the windows
        that had all values increasing - but all&amp;#39;s well that ends well!&lt;/p&gt;\n\n&lt;h2&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBRAgAAAAAAAAAyGUj/T32X5leaNBUXWHuDoBcpGqRbMpcb802VdsMZ2uHInf1tEKiAFcTOBf0+y/9LfDREMWeJXbaUJ0pkp8ziBPbLEGe8uMEBCb9nhU8AcqwpjazMnywqclSU8qAIBbp1ZuJS4Z4yMXkG9TOZ4/jGTN7QQtIAwRJ8mhOE3RsTxxBXh8IoxlgNtQyVsXzCTBKM3VV0FYxV0Lo5kpjO++2ouaZZZoLJ5Cr1Lu/mMZ4Y4qNwPUD6vqJiCayOhbbX3V0n9VkKLajOhqxQOCwykek34ED3ADmBvb6iYAhhZVBX3VM1hTsXPh7M9i3SNESKtQOt1ikxTuOcRT2TN/sFMqBPDgw5prirZh9QVKeeb+CGQFsiSyemgIpvOPX6/+NYxaY=\"&gt;Unoptimized&lt;/a&gt;&lt;/h2&gt;\n\n&lt;h2&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDeAQAAAAAAAAAyGUj/T32X5leaNBUXWHuDoBcpGqRbMpcb802VdsMZ2uHInf1tEKiAFcTOBf0+y/9LfDREMWeJXbaUJ0pkp8ziBPbLEGe8uMEBCb9nhU3a50LLN6RFepDlN8NfU4DgUiSzIBV9+iIuHlVTJ1ilcCZgcTGNPq1kO3WX/g6MctUXosWJWzVGuKwCzl/87g5xvsykDFMgtsE45NV2bS0tKmuuyxZYhR0496nTNqMgEHkwSZOWuVkVhqsXMaXNeh2zwrAEe59DSZ5QezoKDoEbbEoxzJacTNcFmDQwJo6Glg9h7prGzzwuxlxhgdM832KoP//BouKi\"&gt;Optimized&lt;/a&gt;&lt;/h2&gt;\n\n&lt;p&gt;Most
        of the cleanup was just one-lining things, only real optimization is performing
        the window-sliding and summing at the same time.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrh1r4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrh1r4", "created":
        1638336713.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrh2vk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Gr1mhound",
        "can_mod_post": false, "created_utc": 1638336731.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_byvad", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3\n\n    depths = read_file()\n    bigger_than_last = sum([1 for i
        in range(1, len(depths)) if int(depths[i][0]) &gt; int(depths[i-1][0])])\n    print(bigger_than_last)\n    \n    bigger_than_last
        = sum([1 for i in range(3, len(depths)) if int(depths[i][0]) &gt; int(depths[i-3][0])])\n    print(bigger_than_last)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depths
        = read_file()\nbigger_than_last = sum([1 for i in range(1, len(depths)) if
        int(depths[i][0]) &amp;gt; int(depths[i-1][0])])\nprint(bigger_than_last)\n\nbigger_than_last
        = sum([1 for i in range(3, len(depths)) if int(depths[i][0]) &amp;gt; int(depths[i-3][0])])\nprint(bigger_than_last)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrh2vk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrh2vk", "created":
        1638336731.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrh7ku",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "michaelgallagher",
        "can_mod_post": false, "created_utc": 1638336806.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_9hr7h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python\n\n[Nothing fancy](https://github.com/michaeljgallagher/Advent-of-Code/blob/master/2021/01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/michaeljgallagher/Advent-of-Code/blob/master/2021/01.py\"&gt;Nothing
        fancy&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": true,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrh7ku/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrh7ku", "created":
        1638336806.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrhdgc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Markavian",
        "can_mod_post": false, "created_utc": 1638336899.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_7uy5y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Node JS - Calculated diff between current and previous row, and then filtered
        for positive diffs:\n\nhttps://github.com/johnbeech/advent-of-code-2021/blob/main/solutions/day1/solution.js\n\nPart
        2: used the same approach, but calculated the diff using the sliding window
        using current, and previous two rows.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Node JS - Calculated diff between current and previous
        row, and then filtered for positive diffs:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/johnbeech/advent-of-code-2021/blob/main/solutions/day1/solution.js\"&gt;https://github.com/johnbeech/advent-of-code-2021/blob/main/solutions/day1/solution.js&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2: used the same approach, but calculated the diff using the sliding window
        using current, and previous two rows.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhdgc/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrhdgc", "created": 1638336899.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638337773.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrhdk2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Kermitnirmit",
        "can_mod_post": false, "created_utc": 1638336901.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ckn59", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3\nPretty simple day 1! I took so darn long to remember how pandas
        worked. \n[My solution](https://github.com/kermitnirmit/Advent-of-Code-2021/blob/master/day_01/solution.py)
        / used zip to shift and compare ~~as well as using pandas'' rolling sum feature
        for part 2~~. \n\n[Edit] Realized that there are common values in the sum
        for part 2, so you only need to check elements 3 apart, used zip for that
        too.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3\nPretty simple day 1! I took so darn long to remember how pandas worked.
        \n&lt;a href=\"https://github.com/kermitnirmit/Advent-of-Code-2021/blob/master/day_01/solution.py\"&gt;My
        solution&lt;/a&gt; / used zip to shift and compare &lt;del&gt;as well as using
        pandas&amp;#39; rolling sum feature for part 2&lt;/del&gt;. &lt;/p&gt;\n\n&lt;p&gt;[Edit]
        Realized that there are common values in the sum for part 2, so you only need
        to check elements 3 apart, used zip for that too.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhdk2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrhdk2", "created":
        1638336901.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmri3cz", "id": "hmri3cz", "parent_id":
        "t1_hmrhdk2", "depth": 1, "children": ["hmri3cz"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638337353.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrhqsr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Retina (part 2)\n\n    [0-9]+\n    $0;$0 \n    ([0-9]+)\u00b6([0-9]+)
        \n    $2\u00b6$1 \n    ([0-9]+);([0-9]+) \n    $2;$1 \n    ^(.*\u00b6)\n    \n    \u00b6.*$\n    \n    [0-9]+
        $0*a (a+)\u00b6\\1\n    &gt;\n    &gt;a\n\n[https://tio.run/##K0otycxLNPz/P9pA1zJWm0vFwFrFgEsDwtM8tA3G4lIxOrRNxRAuY40kYQ0Uj9PTOrSNi@vQNj0tFS4uuGFaiVwaiSBzYgy57LjsEv//BwA](https://tio.run/##K0otycxLNPz/P9pA1zJWm0vFwFrFgEsDwtM8tA3G4lIxOrRNxRAuY40kYQ0Uj9PTOrSNi@vQNj0tFS4uuGFaiVwaiSBzYgy57LjsEv//BwA)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmrhqsr",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Retina
        (part 2)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[0-9]+\n$0;$0 \n([0-9]+)\u00b6([0-9]+)
        \n$2\u00b6$1 \n([0-9]+);([0-9]+) \n$2;$1 \n^(.*\u00b6)\n\n\u00b6.*$\n\n[0-9]+
        $0*a (a+)\u00b6\\1\n&amp;gt;\n&amp;gt;a\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://tio.run/##K0otycxLNPz/P9pA1zJWm0vFwFrFgEsDwtM8tA3G4lIxOrRNxRAuY40kYQ0Uj9PTOrSNi@vQNj0tFS4uuGFaiVwaiSBzYgy57LjsEv//BwA\"&gt;https://tio.run/##K0otycxLNPz/P9pA1zJWm0vFwFrFgEsDwtM8tA3G4lIxOrRNxRAuY40kYQ0Uj9PTOrSNi@vQNj0tFS4uuGFaiVwaiSBzYgy57LjsEv//BwA&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhqsr/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638337114.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638337114.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638620331.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrhr75", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kap89",
        "can_mod_post": false, "created_utc": 1638337120.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_40ydynyd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# TypeScript\n\n[GitHub](https://github.com/caderek/aoc2021/tree/main/src/day01)\n\n    +---
        AoC 2021 Day 01 - AOC TIMER --------------------+\n    |                                                    |\n    |
        Linux (x64) 8GB RAM                                |\n    | Intel(R) Core(TM)
        i7-3630QM CPU @ 2.40GHz          |\n    |                                                    |\n    |
        Language: TypeScript                               |\n    |                                                    |\n    |
        Time: 1.31ms                    Points: 1024       |\n    | Benchmark: 0.027%               Level:
        **********  |\n    |                                                    |\n    +-----------------------------------
        git.io/JL9Qu ---+", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;TypeScript&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/caderek/aoc2021/tree/main/src/day01\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;+---
        AoC 2021 Day 01 - AOC TIMER --------------------+\n|                                                    |\n|
        Linux (x64) 8GB RAM                                |\n| Intel(R) Core(TM)
        i7-3630QM CPU @ 2.40GHz          |\n|                                                    |\n|
        Language: TypeScript                               |\n|                                                    |\n|
        Time: 1.31ms                    Points: 1024       |\n| Benchmark: 0.027%               Level:
        **********  |\n|                                                    |\n+-----------------------------------
        git.io/JL9Qu ---+\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhr75/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrhr75", "created": 1638337120.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmt1kyc", "id": "hmt1kyc", "parent_id": "t1_hmrhr75", "depth": 1, "children":
        ["hmt1kyc"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrhvmq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nlowe_",
        "can_mod_post": false, "created_utc": 1638337193.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_56rgazd6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Go, 653/1522](https://github.com/nlowe/aoc2021/commit/fa2170d9dac33c5a46b404e6500bfb55619af2a8)\n\nLost
        some time due to a broken generator for the day, but probably wouldn''t have
        made the leaderboard regardless. I''m so happy it''s AoC time again!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/nlowe/aoc2021/commit/fa2170d9dac33c5a46b404e6500bfb55619af2a8\"&gt;Go,
        653/1522&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Lost some time due to a broken generator
        for the day, but probably wouldn&amp;#39;t have made the leaderboard regardless.
        I&amp;#39;m so happy it&amp;#39;s AoC time again!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhvmq/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrhvmq", "created":
        1638337193.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638337693.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmri0oz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Multipl",
        "can_mod_post": false, "created_utc": 1638337278.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_mi3bz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3\n\nhttps://pastebin.com/EHk91snq\n\nStraightforward. Although as
        is tradition, I initially ran into a silly parsing mistake (forgot to convert
        to int lol).", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/EHk91snq\"&gt;https://pastebin.com/EHk91snq&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Straightforward.
        Although as is tradition, I initially ran into a silly parsing mistake (forgot
        to convert to int lol).&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmri0oz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmri0oz", "created":
        1638337278.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmriaqg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "x3nophus",
        "can_mod_post": false, "created_utc": 1638337445.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_399k2n2n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [Elixir](https://topaz.github.io/paste/#XQAAAQA+BAAAAAAAAAAyGUkFUehZxfOWmzxJycYy7/x8IZmoRuJlo29eCAPS843ESp/6HM/KHVpl6d6s6SyL+DJKetmKFJtb872NuI2yGEcePyH/i+sx6O9pwvLD7Q9a2SeaTDU0HvXsPV6jGCoP6v2MFMVFwi7bHQ6cYO2rbC704g3NsCmBTvI/N2Pa2sww5xhy2tY3Kmb/sIf4U8pRfgnjFa4aZowqqIYNPN50sWLiJq3WoOO4YpTlRsrq+3OA3jc0aZxty2uPgY75QNEeE8KS0nS8rSRD+mIYkdyiVzu+XRe1f1gZUEupeLN29UNWMkcYZmlzqbBEdRrW8cJX87CBluwswZ2YSP4aBDVL9hiv6AU/GagqfNmK1W4oSERTtxg6vgqs+AzSRbxKdekRRBn0rUsRhQ7w8a9f9IJpvXPBZmU7sqE92/gS0dT8cUK25rzNS3lSHFNZF7jsgtXP9HIjwUVGMZgEltC3GwLQNjhhwX0+RXPmStJC6iRCfFr7taAEem37UMX+z8Bb)\n\nJust
        starting to dust off the Elixir cobwebs", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQA+BAAAAAAAAAAyGUkFUehZxfOWmzxJycYy7/x8IZmoRuJlo29eCAPS843ESp/6HM/KHVpl6d6s6SyL+DJKetmKFJtb872NuI2yGEcePyH/i+sx6O9pwvLD7Q9a2SeaTDU0HvXsPV6jGCoP6v2MFMVFwi7bHQ6cYO2rbC704g3NsCmBTvI/N2Pa2sww5xhy2tY3Kmb/sIf4U8pRfgnjFa4aZowqqIYNPN50sWLiJq3WoOO4YpTlRsrq+3OA3jc0aZxty2uPgY75QNEeE8KS0nS8rSRD+mIYkdyiVzu+XRe1f1gZUEupeLN29UNWMkcYZmlzqbBEdRrW8cJX87CBluwswZ2YSP4aBDVL9hiv6AU/GagqfNmK1W4oSERTtxg6vgqs+AzSRbxKdekRRBn0rUsRhQ7w8a9f9IJpvXPBZmU7sqE92/gS0dT8cUK25rzNS3lSHFNZF7jsgtXP9HIjwUVGMZgEltC3GwLQNjhhwX0+RXPmStJC6iRCfFr7taAEem37UMX+z8Bb\"&gt;Elixir&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;Just
        starting to dust off the Elixir cobwebs&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmriaqg/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmriaqg", "created": 1638337445.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_hmrkebf", "id": "hmrkebf", "parent_id": "t1_hmriaqg", "depth": 1, "children":
        ["hmrkebf"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrino9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "i4guar",
        "can_mod_post": false, "created_utc": 1638337660.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_54i2ng40", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solutions for **Swift:**\n\nhttps://www.felixlarsen.com/blog/1st-december-solution-advent-of-code-2021-swift",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solutions for &lt;strong&gt;Swift:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.felixlarsen.com/blog/1st-december-solution-advent-of-code-2021-swift\"&gt;https://www.felixlarsen.com/blog/1st-december-solution-advent-of-code-2021-swift&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrino9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrino9", "created":
        1638337660.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrins1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Chrinkus",
        "can_mod_post": false, "created_utc": 1638337662.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_n38jn1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [My C Solution](https://github.com/Chrinkus/advent-of-code/blob/main/2021/c/2101.c)\n\nLast
        year I planned to do the event in C but abandoned it pretty early. We''re
        going all the way this year, baby!", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://github.com/Chrinkus/advent-of-code/blob/main/2021/c/2101.c\"&gt;My
        C Solution&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;Last year I planned to do the
        event in C but abandoned it pretty early. We&amp;#39;re going all the way
        this year, baby!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrins1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrins1", "created":
        1638337662.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrjocq", "id": "hmrjocq", "parent_id":
        "t1_hmrins1", "depth": 1, "children": ["hmrjocq"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrio89", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "First time using OCaml in a while... so lots of mistakes,
        but here we go: [https://github.com/hellopatrick/xmas/blob/main/day01/main.ml](https://github.com/hellopatrick/xmas/blob/main/day01/main.ml)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmrio89",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First
        time using OCaml in a while... so lots of mistakes, but here we go: &lt;a
        href=\"https://github.com/hellopatrick/xmas/blob/main/day01/main.ml\"&gt;https://github.com/hellopatrick/xmas/blob/main/day01/main.ml&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrio89/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638337669.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638337669.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638377584.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrj5v8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "frflaie",
        "can_mod_post": false, "created_utc": 1638337967.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_11xdki", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin (with my helpers)\n\n    private fun solve(size: Int) =  \n        inputList.ints()\n            .windowed(size).map
        { it.sum() }\n            .windowed(2).count { it.last() &gt; it.first() }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin (with my helpers)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private
        fun solve(size: Int) =  \n    inputList.ints()\n        .windowed(size).map
        { it.sum() }\n        .windowed(2).count { it.last() &amp;gt; it.first() }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrj5v8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrj5v8", "created":
        1638337967.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrjd7f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "badgirlmonkey",
        "can_mod_post": false, "created_utc": 1638338091.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_8jvsjpd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript\n\nNot as beautiful as other people here but it got the job done.\n\nhttps://pastebin.com/Vg9cUbUc",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript&lt;/p&gt;\n\n&lt;p&gt;Not
        as beautiful as other people here but it got the job done.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/Vg9cUbUc\"&gt;https://pastebin.com/Vg9cUbUc&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrjd7f/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrjd7f", "created":
        1638338091.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrjghk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "icyFur",
        "can_mod_post": false, "created_utc": 1638338144.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_704a4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[AWK solution part one](https://getsturdy.com/advent-of-code-2021-uoeIDQk/browse/day01/kiril/partOne.awk)\n\n[AWK
        solution part two](https://getsturdy.com/advent-of-code-2021-uoeIDQk/browse/day01/kiril/partTwo.awk)\n\nAt
        first I thought that the \"free\" for loop that you get is an advantage but
        I [first solved it in go](https://getsturdy.com/advent-of-code-2021-uoeIDQk/e141e44c-ef88-4d7c-bcee-9f76e29ef9e7).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://getsturdy.com/advent-of-code-2021-uoeIDQk/browse/day01/kiril/partOne.awk\"&gt;AWK
        solution part one&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://getsturdy.com/advent-of-code-2021-uoeIDQk/browse/day01/kiril/partTwo.awk\"&gt;AWK
        solution part two&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;At first I thought that
        the &amp;quot;free&amp;quot; for loop that you get is an advantage but I &lt;a
        href=\"https://getsturdy.com/advent-of-code-2021-uoeIDQk/e141e44c-ef88-4d7c-bcee-9f76e29ef9e7\"&gt;first
        solved it in go&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrjghk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrjghk", "created":
        1638338144.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrjmin",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "compdog",
        "can_mod_post": false, "created_utc": 1638338244.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_9575q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript [[Part 1](https://github.com/warriordog/advent-of-code-2021/blob/main/day01/day1part1.js)]
        [[Part 2](https://github.com/warriordog/advent-of-code-2021/blob/main/day01/day1part2.js)]\n\n---\n\nBasic,
        naive solutions to both parts. Part 2 tripped me up because I had an off-by-one
        error in my loops. I had to make the outer loop `&lt;=` instead of just `&lt;`,
        otherwise the final window was skipped.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Javascript [&lt;a href=\"https://github.com/warriordog/advent-of-code-2021/blob/main/day01/day1part1.js\"&gt;Part
        1&lt;/a&gt;] [&lt;a href=\"https://github.com/warriordog/advent-of-code-2021/blob/main/day01/day1part2.js\"&gt;Part
        2&lt;/a&gt;]&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Basic, naive solutions to
        both parts. Part 2 tripped me up because I had an off-by-one error in my loops.
        I had to make the outer loop &lt;code&gt;&amp;lt;=&lt;/code&gt; instead of
        just &lt;code&gt;&amp;lt;&lt;/code&gt;, otherwise the final window was skipped.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrjmin/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrjmin", "created":
        1638338244.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638340382.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrjrhv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "prendradjaja",
        "can_mod_post": false, "created_utc": 1638338330.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4uw2bk4a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Direct port of my [Python solution](https://www.reddit.com/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgk3j/)
        to Haskell. There are a couple places I''d be curious about improving (see
        comments in code) -- anyone have any suggestions for me?\n\n[paste](https://topaz.github.io/paste/#XQAAAQDEAwAAAAAAAAA2mElyhGcUBsnCXEQ5nBxb1JN2u0SfAMU92Rn1ayFV54+tk9opsFjuTgdRaZuQbmQ+Xyu+/7VfNlqwBXVmI0Dny4pmj5iYOEKrCYE8FDIHmOR4MftzjuplMiENIk2YwaJuAXBS6QqGD3C4JHgphBKnOn0KVWBXrUss6dZIKY++IiqAVvgVlh4Zj7wNTkbG/jVaEADUAeNkY3+Otx/x3NysLSitRRLKHJ/RYo426a0HBCXWfsPAPIH2LVTsX+kU7qzc6Wu4rdJ+KprzvSiX7Up+EC6mFEG7gfrb9DzCNuGVSzGp+0BukEam4Zs8Fqe/KpOVnFUfozmIfiOLYIVMZvGoDcKuY7CqcZuKiR/tUpwHG/9eHw66rIsDpe9bj6XzFXAH/2xWiS7SXgojBw8YpWd2cNMFcVDqPLLL5Kc5yLWQnkw4IYHIK0xNtB8VZgUpM3D6gI6Gax2cbyjZ2jDxagJgSpL2BsVU9s1C/rSDCdtpECXU8GZTuzkYoCK6aigBOiDu7mEOrok+Pu9qH6laUjbLrlx0VvL8ZVcy6O7sojhXFw/nC+1O6x7/j7tgm3PRrnLW26rE97zu+j2EDQi6iqUVctRalkt9U/ynlWOAD5dq63c2cHTz4mXMJWqRQIoa08cyUFsHF+t2T/8oOfddth3opa3oC6tQuClA+TInfsX6KP1w)\n\nEdit:
        Ah, found an answer to my first question -- I can add a type annotation to
        the `read` function by changing `read` to `(read :: String -&gt; Int)`. Thanks,
        /u/TaslemGuy from [7 years ago](https://www.reddit.com/r/haskell/comments/2jdgyz/question_about_using_read_and_map/)!\n\nUpdated:
        [paste](https://topaz.github.io/paste/#XQAAAQDQAgAAAAAAAAA2mElyhGcUBsnCXEQ5nBxb1JN2u0SfAMU92Rn1ayFV4zv8lQeUVNXFP1KTUGxYzgSjqOLJliaV2yC1sZMY/vMlaCBj+5GrUVLcN8YGi+5bIqv8FZNrWC/2oZToRn1WJLt93Wh9cjbW3moNkZMCxkcBX5EFAS/+cMv3is4BngNH+pn88H5BVvGD2gtyVMtBuVLDfP6kWXmyQXhnihV1LGotSAmvr9WA1LBl7toLkmhX/KatpBo6lg/MmnPDPHx5DQFt4kMDP0yscdQ98TtiHMeApcUI3+V9/SAkxO7TQldM5+BfWERGKdhHKuiKQPsIPWc+OLmFNzXWgVPaE2TpRoIUzPoL+xgIqnyf8guIOU8Et6nGB/DGTVi8RpV44x9f+jIH245AjAgqY/wQ5wFhyoJau47eRnBRBlpYLyJzvFM/g/BGSdgkGjLFY/3NSri2Gla0VXYJ3Z1umG50Ob3MSr05nZrokmR22e9QPhY5HJUbacb8V4Rr)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Direct port of my &lt;a
        href=\"https://www.reddit.com/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgk3j/\"&gt;Python
        solution&lt;/a&gt; to Haskell. There are a couple places I&amp;#39;d be curious
        about improving (see comments in code) -- anyone have any suggestions for
        me?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDEAwAAAAAAAAA2mElyhGcUBsnCXEQ5nBxb1JN2u0SfAMU92Rn1ayFV54+tk9opsFjuTgdRaZuQbmQ+Xyu+/7VfNlqwBXVmI0Dny4pmj5iYOEKrCYE8FDIHmOR4MftzjuplMiENIk2YwaJuAXBS6QqGD3C4JHgphBKnOn0KVWBXrUss6dZIKY++IiqAVvgVlh4Zj7wNTkbG/jVaEADUAeNkY3+Otx/x3NysLSitRRLKHJ/RYo426a0HBCXWfsPAPIH2LVTsX+kU7qzc6Wu4rdJ+KprzvSiX7Up+EC6mFEG7gfrb9DzCNuGVSzGp+0BukEam4Zs8Fqe/KpOVnFUfozmIfiOLYIVMZvGoDcKuY7CqcZuKiR/tUpwHG/9eHw66rIsDpe9bj6XzFXAH/2xWiS7SXgojBw8YpWd2cNMFcVDqPLLL5Kc5yLWQnkw4IYHIK0xNtB8VZgUpM3D6gI6Gax2cbyjZ2jDxagJgSpL2BsVU9s1C/rSDCdtpECXU8GZTuzkYoCK6aigBOiDu7mEOrok+Pu9qH6laUjbLrlx0VvL8ZVcy6O7sojhXFw/nC+1O6x7/j7tgm3PRrnLW26rE97zu+j2EDQi6iqUVctRalkt9U/ynlWOAD5dq63c2cHTz4mXMJWqRQIoa08cyUFsHF+t2T/8oOfddth3opa3oC6tQuClA+TInfsX6KP1w\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        Ah, found an answer to my first question -- I can add a type annotation to
        the &lt;code&gt;read&lt;/code&gt; function by changing &lt;code&gt;read&lt;/code&gt;
        to &lt;code&gt;(read :: String -&amp;gt; Int)&lt;/code&gt;. Thanks, &lt;a
        href=\"/u/TaslemGuy\"&gt;/u/TaslemGuy&lt;/a&gt; from &lt;a href=\"https://www.reddit.com/r/haskell/comments/2jdgyz/question_about_using_read_and_map/\"&gt;7
        years ago&lt;/a&gt;!&lt;/p&gt;\n\n&lt;p&gt;Updated: &lt;a href=\"https://topaz.github.io/paste/#XQAAAQDQAgAAAAAAAAA2mElyhGcUBsnCXEQ5nBxb1JN2u0SfAMU92Rn1ayFV4zv8lQeUVNXFP1KTUGxYzgSjqOLJliaV2yC1sZMY/vMlaCBj+5GrUVLcN8YGi+5bIqv8FZNrWC/2oZToRn1WJLt93Wh9cjbW3moNkZMCxkcBX5EFAS/+cMv3is4BngNH+pn88H5BVvGD2gtyVMtBuVLDfP6kWXmyQXhnihV1LGotSAmvr9WA1LBl7toLkmhX/KatpBo6lg/MmnPDPHx5DQFt4kMDP0yscdQ98TtiHMeApcUI3+V9/SAkxO7TQldM5+BfWERGKdhHKuiKQPsIPWc+OLmFNzXWgVPaE2TpRoIUzPoL+xgIqnyf8guIOU8Et6nGB/DGTVi8RpV44x9f+jIH245AjAgqY/wQ5wFhyoJau47eRnBRBlpYLyJzvFM/g/BGSdgkGjLFY/3NSri2Gla0VXYJ3Z1umG50Ob3MSr05nZrokmR22e9QPhY5HJUbacb8V4Rr\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrjrhv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrjrhv", "created":
        1638338330.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrpvis", "id": "hmrpvis", "parent_id":
        "t1_hmrjrhv", "depth": 1, "children": ["hmrpvis", "hmrtbwq"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrk087",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sakisan_be",
        "can_mod_post": false, "created_utc": 1638338480.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_kf762", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell\n\n    main = interact $ maybe \"\" output . traverse readMaybe .
        lines\n    output i = show (part1 i) ++ \"\\n\" ++ show (part2 i)\n    part1
        xs = sum [ 1 | True &lt;- zipWith (&lt;) xs (tail xs) ]\n    part2 xs@(_:y:z)
        = part1 $ zipWith3 (\\a b c -&gt; a + b + c) xs (y:z) z\n\n\nElm [https://gitlab.com/sakisan/adventofcode/-/blob/2021/Elm/Day01.elm](https://gitlab.com/sakisan/adventofcode/-/blob/2021/Elm/Day01.elm)
        (didn''t do any clean up after it got me the answer)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Haskell&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;main
        = interact $ maybe &amp;quot;&amp;quot; output . traverse readMaybe . lines\noutput
        i = show (part1 i) ++ &amp;quot;\\n&amp;quot; ++ show (part2 i)\npart1 xs
        = sum [ 1 | True &amp;lt;- zipWith (&amp;lt;) xs (tail xs) ]\npart2 xs@(_:y:z)
        = part1 $ zipWith3 (\\a b c -&amp;gt; a + b + c) xs (y:z) z\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Elm
        &lt;a href=\"https://gitlab.com/sakisan/adventofcode/-/blob/2021/Elm/Day01.elm\"&gt;https://gitlab.com/sakisan/adventofcode/-/blob/2021/Elm/Day01.elm&lt;/a&gt;
        (didn&amp;#39;t do any clean up after it got me the answer)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrk087/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrk087", "created":
        1638338480.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638341445.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrkjxn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Swynndla",
        "can_mod_post": false, "created_utc": 1638338824.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_jzqtvr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nim\n\n    import std/[strutils, sequtils]\n    \n    func countInc(s: seq[int]):
        int =\n      for i in 0..s.high:\n        if i == 0: continue\n        if
        s[i] &gt; s[i - 1]:\n          inc result\n    \n    let nums = readFile(\"inputs/01.txt\").strip.splitLines.map(parseInt)\n    \n    echo
        \"part1: \", countInc(nums)\n    \n    var nums2: seq[int]\n    for i in 0
        .. nums.high:\n      if i &lt; 2: continue\n      nums2.add (nums[i] + nums[i
        - 1] + nums[i - 2])\n    \n    echo \"part2: \", countInc(nums2)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Nim&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        std/[strutils, sequtils]\n\nfunc countInc(s: seq[int]): int =\n  for i in
        0..s.high:\n    if i == 0: continue\n    if s[i] &amp;gt; s[i - 1]:\n      inc
        result\n\nlet nums = readFile(&amp;quot;inputs/01.txt&amp;quot;).strip.splitLines.map(parseInt)\n\necho
        &amp;quot;part1: &amp;quot;, countInc(nums)\n\nvar nums2: seq[int]\nfor i
        in 0 .. nums.high:\n  if i &amp;lt; 2: continue\n  nums2.add (nums[i] + nums[i
        - 1] + nums[i - 2])\n\necho &amp;quot;part2: &amp;quot;, countInc(nums2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrkjxn/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrkjxn", "created":
        1638338824.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrl1l9", "id": "hmrl1l9", "parent_id":
        "t1_hmrkjxn", "depth": 1, "children": ["hmrl1l9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrl92g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "oddolatry",
        "can_mod_post": false, "created_utc": 1638339271.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_sggc8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### **PureScript**\n\nI did not get a chance to dive into Zig in the months
        leading up to this year''s AoC, so I''m rolling through again with PureScript.
        I''ve learned to love this lang over the last year, so that''s all right!\n\n[Paste](https://topaz.github.io/paste/#XQAAAQBgBQAAAAAAAAA2m8ixrhLu7WHaja2SXilMAUccy8nv/LAbBIgSwBN3CSK1A4G6MaU39ydkOISsB2a2HfEeNt0MsbYeHMB13hK2fmiBYj/rgUJAAAru6HTNyoiTU2/zz8uQVVG6Fug16K2YlT6ewv8O4Z1SHeBjnOXGFAODlo98ih7VG07OsAXL9hVT3M8tESwCXp3JJ6krALzMR1HinsL02vGRwwyMka7Gy+bnWfSELACRBqx8sS/nJ15merlBRGLPhO3J9tpEt3bgoozm9UaUgVJQ/mUruAMFZ3X6Kh1Di6WUyjd1fB9a4g+2t9yygNZ+yldkfWxmVrGvABIfMc2Fv490rlZs6xk+ytKr8D2yjMi9LZGe0NVSRRB9ldWNJKPAciFBcgzihCvdh163m1TH3h1geal7hWU3Mm2B5IRPizDQlzdOF1yMx/V8MjB2dc+h6YS1QU2Mta9Q+OJj15AT9zL4i7oMZKCETPa5ZQA66HdeicbLQKMoW1EzbavjaBzkHeJ0yPotyMkqjcvIij0EbS+iVMv8PV1XBPVAmi6Avsv6UBy35QX/LWsJmHsbr4UuKA0Cw4QFN4N7SnuxmF7q53z7iOltxifLHenopFTqErZ08BpcftseDzmY9nlV2VT2UOXZ751xZceZsh4Z2si6IqYf1xzCoJpFko+a4fZwKG64oe39D0FlOyQHHi/RDfdHOcXb30oO0pP1PxfptQiZoN7wFTmgLNBpJDtpucf/TQGLAA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h3&gt;&lt;strong&gt;PureScript&lt;/strong&gt;&lt;/h3&gt;\n\n&lt;p&gt;I
        did not get a chance to dive into Zig in the months leading up to this year&amp;#39;s
        AoC, so I&amp;#39;m rolling through again with PureScript. I&amp;#39;ve learned
        to love this lang over the last year, so that&amp;#39;s all right!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBgBQAAAAAAAAA2m8ixrhLu7WHaja2SXilMAUccy8nv/LAbBIgSwBN3CSK1A4G6MaU39ydkOISsB2a2HfEeNt0MsbYeHMB13hK2fmiBYj/rgUJAAAru6HTNyoiTU2/zz8uQVVG6Fug16K2YlT6ewv8O4Z1SHeBjnOXGFAODlo98ih7VG07OsAXL9hVT3M8tESwCXp3JJ6krALzMR1HinsL02vGRwwyMka7Gy+bnWfSELACRBqx8sS/nJ15merlBRGLPhO3J9tpEt3bgoozm9UaUgVJQ/mUruAMFZ3X6Kh1Di6WUyjd1fB9a4g+2t9yygNZ+yldkfWxmVrGvABIfMc2Fv490rlZs6xk+ytKr8D2yjMi9LZGe0NVSRRB9ldWNJKPAciFBcgzihCvdh163m1TH3h1geal7hWU3Mm2B5IRPizDQlzdOF1yMx/V8MjB2dc+h6YS1QU2Mta9Q+OJj15AT9zL4i7oMZKCETPa5ZQA66HdeicbLQKMoW1EzbavjaBzkHeJ0yPotyMkqjcvIij0EbS+iVMv8PV1XBPVAmi6Avsv6UBy35QX/LWsJmHsbr4UuKA0Cw4QFN4N7SnuxmF7q53z7iOltxifLHenopFTqErZ08BpcftseDzmY9nlV2VT2UOXZ751xZceZsh4Z2si6IqYf1xzCoJpFko+a4fZwKG64oe39D0FlOyQHHi/RDfdHOcXb30oO0pP1PxfptQiZoN7wFTmgLNBpJDtpucf/TQGLAA==\"&gt;Paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrl92g/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrl92g", "created":
        1638339271.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrlffy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Rust:\n\n[https://github.com/tranzystorek-io/aoc2021-rust/blob/master/src/days/d01p1.rs](https://github.com/tranzystorek-io/aoc2021-rust/blob/master/src/days/d01p1.rs)\n\nhttps://github.com/tranzystorek-io/aoc2021-rust/blob/master/src/days/d01p2.rs",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmrlffy",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/tranzystorek-io/aoc2021-rust/blob/master/src/days/d01p1.rs\"&gt;https://github.com/tranzystorek-io/aoc2021-rust/blob/master/src/days/d01p1.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/tranzystorek-io/aoc2021-rust/blob/master/src/days/d01p2.rs\"&gt;https://github.com/tranzystorek-io/aoc2021-rust/blob/master/src/days/d01p2.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrlffy/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638339386.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638339386.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmrmmdm", "id": "hmrmmdm", "parent_id":
        "t1_hmrlffy", "depth": 1, "children": ["hmrmmdm"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrlidz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "theboogle2",
        "can_mod_post": false, "created_utc": 1638339440.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_bqo6sgb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    -- wrote in Luau (Roblox Lua)\n    \n        local input = require(script.Parent.input)\n        \n        \n        local
        LastNumber = nil\n        \n        local result = 0\n        \n        \n        --
        1st part\n        for _, v in ipairs(input) do\n        \tif LastNumber and
        v &gt; LastNumber then\n        \t\tresult += 1\n        \tend\n        \tLastNumber
        = v\n        end\n        \n        -- 2nd Part\n        for n = 1, #input
        do\n        \tpcall(function()\n        \t\tlocal sum = input[n] + input[n
        + 1] + input[n + 2]\n        \n        \t\tif LastNumber and sum &gt; LastNumber
        then\n        \t\t\tresult += 1\n        \t\tend\n        \t\tLastNumber =
        sum\n        \tend)\n        end\n        \n        print(result)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;-- wrote in Luau (Roblox Lua)\n\n    local
        input = require(script.Parent.input)\n\n\n    local LastNumber = nil\n\n    local
        result = 0\n\n\n    -- 1st part\n    for _, v in ipairs(input) do\n        if
        LastNumber and v &amp;gt; LastNumber then\n            result += 1\n        end\n        LastNumber
        = v\n    end\n\n    -- 2nd Part\n    for n = 1, #input do\n        pcall(function()\n            local
        sum = input[n] + input[n + 1] + input[n + 2]\n\n            if LastNumber
        and sum &amp;gt; LastNumber then\n                result += 1\n            end\n            LastNumber
        = sum\n        end)\n    end\n\n    print(result)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrlidz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrlidz", "created":
        1638339440.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1644143027.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrmjt8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "uas90s",
        "can_mod_post": false, "created_utc": 1638340101.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_6zj7x0yp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# NodeJS\n\nPart 1\n    const fs = require(\"fs\");\n    \n    const dataInput
        = fs.readFileSync(\"./input.txt\", {\n      encoding: \"utf-8\",\n      flag:
        \"r\",\n    });\n\n    const input = dataInput.split(\"\\n\").map((val) =&gt;
        parseInt(val));\n\n    let count = 0;\n    for (let i = 1; i &lt; input.length;
        i++) {\n      if (input[i] &gt; input[i - 1]) {\n        count++;\n      }\n    }\n\n    console.log(count);\n\n\nPart
        2\n\n    const slidingWindow = input\n      .map((_, i, array) =&gt; array[i]
        + array[i + 1] + array[i + 2])\n      .filter((item) =&gt; item !== undefined);\n\n    let
        slidingCount = 0;\n    for (let i = 1; i &lt; slidingWindow.length; i++) {\n      if
        (slidingWindow[i] &gt; slidingWindow[i - 1]) slidingCount++;\n    }\n\n    console.log(slidingCount);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;NodeJS&lt;/h1&gt;\n\n&lt;p&gt;Part
        1\n    const fs = require(&amp;quot;fs&amp;quot;);&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        dataInput = fs.readFileSync(&amp;quot;./input.txt&amp;quot;, {\n  encoding:
        &amp;quot;utf-8&amp;quot;,\n  flag: &amp;quot;r&amp;quot;,\n});\n\nconst input
        = dataInput.split(&amp;quot;\\n&amp;quot;).map((val) =&amp;gt; parseInt(val));\n\nlet
        count = 0;\nfor (let i = 1; i &amp;lt; input.length; i++) {\n  if (input[i]
        &amp;gt; input[i - 1]) {\n    count++;\n  }\n}\n\nconsole.log(count);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const slidingWindow = input\n  .map((_,
        i, array) =&amp;gt; array[i] + array[i + 1] + array[i + 2])\n  .filter((item)
        =&amp;gt; item !== undefined);\n\nlet slidingCount = 0;\nfor (let i = 1; i
        &amp;lt; slidingWindow.length; i++) {\n  if (slidingWindow[i] &amp;gt; slidingWindow[i
        - 1]) slidingCount++;\n}\n\nconsole.log(slidingCount);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrmjt8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrmjt8", "created":
        1638340101.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrmu2n", "id": "hmrmu2n", "parent_id":
        "t1_hmrmjt8", "depth": 1, "children": ["hmrmu2n"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrmn6p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WilkoTom",
        "can_mod_post": false, "created_utc": 1638340162.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_90ypf105", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust:\n\n[https://github.com/wilkotom/AoC2021/blob/main/day01/src/main.rs](https://github.com/wilkotom/AoC2021/blob/main/day01/src/main.rs)  \n\n\nNot
        so complex, this one, so not much to say.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rust:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/wilkotom/AoC2021/blob/main/day01/src/main.rs\"&gt;https://github.com/wilkotom/AoC2021/blob/main/day01/src/main.rs&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;Not
        so complex, this one, so not much to say.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrmn6p/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrmn6p", "created": 1638340162.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrn5eh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Ghlave", "can_mod_post": false, "created_utc":
        1638340498.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_6wy85", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**PowerShell**\n\nPart 1\n\n    $array
        = get-content .\\input.txt\n    $k = 0\n    for ($i = 0; $i -lt $array.Count;
        $i++) {\n        $now = [int]$array[$i]\n        $prev = [int]$array[$i-1]\n        if
        ($now -gt $prev) {\n            $k++\n        }\n    }\n    $k    \n\nPart
        2\n\n    $array = get-content .\\input.txt\n    $k = 0\n    for ($i = 3; $i
        -lt $array.Count; $i++) {\n        \n        $now = [int]$array[$i] + [int]$array[$i-1]
        + [int]$array[$i-2]\n        $prev = [int]$array[$i-1] + [int]$array[$i-2]
        + [int]$array[$i-3]\n        if ($now -gt $prev) {\n            $k++\n        }\n    }\n    $k",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PowerShell&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$array = get-content .\\input.txt\n$k
        = 0\nfor ($i = 0; $i -lt $array.Count; $i++) {\n    $now = [int]$array[$i]\n    $prev
        = [int]$array[$i-1]\n    if ($now -gt $prev) {\n        $k++\n    }\n}\n$k    \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$array = get-content .\\input.txt\n$k
        = 0\nfor ($i = 3; $i -lt $array.Count; $i++) {\n\n    $now = [int]$array[$i]
        + [int]$array[$i-1] + [int]$array[$i-2]\n    $prev = [int]$array[$i-1] + [int]$array[$i-2]
        + [int]$array[$i-3]\n    if ($now -gt $prev) {\n        $k++\n    }\n}\n$k\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrn5eh/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrn5eh", "created":
        1638340498.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638350904.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrr3w3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Cpt__Cookie",
        "can_mod_post": false, "created_utc": 1638343284.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_6lb4msar", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "***Python:*** \n\n    from typing import Iterable, List\n\n\n    def find_incresing(seq:
        Iterable[int]):\n        return len([n for i, n in enumerate(seq[1:]) if n
        &gt; seq[i]])\n\n\n    def parse_input(puzzle_input: str) -&gt; List[int]:\n        return
        [int(n) for n in puzzle_input.splitlines() if n != \"\"]\n\n\n    def solution_1(puzzle_input:
        str):\n        return find_incresing(parse_input(puzzle_input))\n\n\n    def
        solution_2(puzzle_input: str):\n        deeps = parse_input(puzzle_input)\n        deep_sums
        = [n + deeps[i + 1] + deeps[i + 2] for i, n in enumerate(deeps[:-2])]\n        return
        find_incresing(deep_sums)\n\n\n[GitHub](https://github.com/CptCookie/AOC/blob/master/Python/2021/Day1/solution.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Python:&lt;/em&gt;&lt;/strong&gt;
        &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from typing import Iterable, List\n\n\ndef
        find_incresing(seq: Iterable[int]):\n    return len([n for i, n in enumerate(seq[1:])
        if n &amp;gt; seq[i]])\n\n\ndef parse_input(puzzle_input: str) -&amp;gt; List[int]:\n    return
        [int(n) for n in puzzle_input.splitlines() if n != &amp;quot;&amp;quot;]\n\n\ndef
        solution_1(puzzle_input: str):\n    return find_incresing(parse_input(puzzle_input))\n\n\ndef
        solution_2(puzzle_input: str):\n    deeps = parse_input(puzzle_input)\n    deep_sums
        = [n + deeps[i + 1] + deeps[i + 2] for i, n in enumerate(deeps[:-2])]\n    return
        find_incresing(deep_sums)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/CptCookie/AOC/blob/master/Python/2021/Day1/solution.py\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrr3w3/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrr3w3", "created":
        1638343284.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrt0g0", "id": "hmrt0g0", "parent_id":
        "t1_hmrr3w3", "depth": 1, "children": ["hmrt0g0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrr4l8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "zxywx",
        "can_mod_post": false, "created_utc": 1638343297.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_pbtkx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Ruby\n\n    module Year2021\n      class Day01\n        def part_1(input)\n          input.lines(chomp:
        true).map(&amp;:to_i).each_cons(2).inject(0) do |count, depths|\n            depths[0]
        &lt; depths[1] ? count + 1 : count\n          end\n        end\n    \n        def
        part_2(input)\n          input.lines(chomp: true).map(&amp;:to_i).each_cons(3).map(&amp;:sum).each_cons(2).inject(0)
        do |count, depths|\n            depths[0] &lt; depths[1] ? count + 1 : count\n          end\n        end\n      end\n    end",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Ruby&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;module
        Year2021\n  class Day01\n    def part_1(input)\n      input.lines(chomp: true).map(&amp;amp;:to_i).each_cons(2).inject(0)
        do |count, depths|\n        depths[0] &amp;lt; depths[1] ? count + 1 : count\n      end\n    end\n\n    def
        part_2(input)\n      input.lines(chomp: true).map(&amp;amp;:to_i).each_cons(3).map(&amp;amp;:sum).each_cons(2).inject(0)
        do |count, depths|\n        depths[0] &amp;lt; depths[1] ? count + 1 : count\n      end\n    end\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrr4l8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrr4l8", "created":
        1638343297.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmrsn0t", "id": "hmrsn0t", "parent_id":
        "t1_hmrr4l8", "depth": 1, "children": ["hmrsn0t"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrrbe6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "cubehouse",
        "can_mod_post": false, "created_utc": 1638343434.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_a9k53", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**JavaScript / Node JS**\n\nIf my baby had woken up a few hours earlier I
        may have been able to fight for the leaderboard... 05:00 UTC is just not possible!\n\nQuick
        reduce to count up the increases, smushed and lazy-used the same reduce for
        part 2.\n\n[https://github.com/cubehouse/AdventOfCode2021/blob/main/01.js](https://github.com/cubehouse/AdventOfCode2021/blob/main/01.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;JavaScript
        / Node JS&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If my baby had woken up a few
        hours earlier I may have been able to fight for the leaderboard... 05:00 UTC
        is just not possible!&lt;/p&gt;\n\n&lt;p&gt;Quick reduce to count up the increases,
        smushed and lazy-used the same reduce for part 2.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/cubehouse/AdventOfCode2021/blob/main/01.js\"&gt;https://github.com/cubehouse/AdventOfCode2021/blob/main/01.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrrbe6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrrbe6", "created":
        1638343434.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrruww",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "DrSkookumChoocher",
        "can_mod_post": false, "created_utc": 1638343842.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_otkh0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# TypeScript / Deno\n\n## Part1\n\n    function part1(data: string): number
        {\n      let previousDepth = Infinity;\n      let depthIncreaseCount = 0;\n      for
        (const currentDepth of data.split(\"\\n\").map(Number)) {\n        if (currentDepth
        &gt; previousDepth) {\n          depthIncreaseCount++;\n        }\n        previousDepth
        = currentDepth;\n      }\n      return depthIncreaseCount;\n    }\n\n## Part2\n\n    function
        part2(data: string): number {\n      const nums = data.split(\"\\n\").map(Number);\n      let
        previousSum = nums[0] + nums[1] + nums[2];\n      let depthIncreaseCount =
        0;\n      for (let i = 3; i &lt; nums.length; i++) {\n        const currentSum
        = previousSum + nums[i] - nums[i - 3];\n        if (currentSum &gt; previousSum)
        {\n          depthIncreaseCount++;\n        }\n        previousSum = currentSum;\n      }\n      return
        depthIncreaseCount;\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;TypeScript
        / Deno&lt;/h1&gt;\n\n&lt;h2&gt;Part1&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        part1(data: string): number {\n  let previousDepth = Infinity;\n  let depthIncreaseCount
        = 0;\n  for (const currentDepth of data.split(&amp;quot;\\n&amp;quot;).map(Number))
        {\n    if (currentDepth &amp;gt; previousDepth) {\n      depthIncreaseCount++;\n    }\n    previousDepth
        = currentDepth;\n  }\n  return depthIncreaseCount;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Part2&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        part2(data: string): number {\n  const nums = data.split(&amp;quot;\\n&amp;quot;).map(Number);\n  let
        previousSum = nums[0] + nums[1] + nums[2];\n  let depthIncreaseCount = 0;\n  for
        (let i = 3; i &amp;lt; nums.length; i++) {\n    const currentSum = previousSum
        + nums[i] - nums[i - 3];\n    if (currentSum &amp;gt; previousSum) {\n      depthIncreaseCount++;\n    }\n    previousSum
        = currentSum;\n  }\n  return depthIncreaseCount;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrruww/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrruww", "created":
        1638343842.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638386535.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrs1dg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "baktix",
        "can_mod_post": false, "created_utc": 1638343982.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_9yxt3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\nMy first time ever really using Rust (I started the book earlier
        this week). I would love some feedback if anybody has any! Especially regarding
        more idiomatic ways of writing my code or areas that might be unnecessarily
        inefficient.\n\n[Part 1](https://topaz.github.io/paste/#XQAAAQAjAgAAAAAAAAA6nMjJFMpQiatRvuJoLBgJ7585Mvv1j2ishJ/IK/xnmnkUhLh3pUl3/cHaEQspn7QFWqe6yZQ32p0xVoLZgqo2JQwqWKYz6WpEdSC79AfXQQlPHnSnqxc5KBchzTcl4ZsC6pvY5Fq+0OvtEpXnT0j6ITYFjDEKvDfrLUp+6HVfhCw/7owhBOC/qgAKkxFYGDLvqLRFdL8vLRRBTYS8hOTIxn2EL343WzxNXRV+6KbZnGr2Kp2s54SpqIolti3+V6YKYf5qXdg8e7jj21OhbhPjkhvDLLqMs8s5HbUuEBEfyrAfkqq4iMfRCa211XyyAKkAhbwKi0K5y1ptHI56NNNQG23gV0vnuLtcDiEGfSVcWFelVWbvxjh50/ebVjFbjiakTyCPtNTu2d4YvWeg7h5IgAJNewV15f+4QLJA)\n\n[Part
        2](https://topaz.github.io/paste/#XQAAAQDBAgAAAAAAAAA6nMjJFMpQiatRvuJoLBgJ7585Mvv1j2ishJ/IK/xnmnkUhLh3pUl3/cHaEQspn7QFWqe6yZQ32p0xVoLZgqo2JQwqWKYz6WpEdSC79AfXQQlPHnSnqxc5KBchzTcl4ZsC6pvY5Fq+0OvtEpXnT0j6ITYFjDEKvDfrLUp+6NsGlKJzAhPdtXUug0Zsts5tYyOV5cutw6SBMUutiTcuMig6VxbipwLCEuPw0HE7aEwNuT4SnsS9XruYbu7XgVMCXYUS83WdlHKtoZfljnlS7TrORGULz57eCgtF9BMrVVTZqtaGGkchDzOJSLzBVYQKtsJzG3IcG/l65C51dpKGxJ+zm7YH3fO9vbX0u9TxgwpAlZsjVxzdcu7CoeMIXcr4KcoSMNEPrKtIi8UkMz4W8Q9aiml4Lx8l9s5xIs4FdqzwOxz9b8UHjZGM1Sc6Crqbq+c482iQ/7JZtcA=)\n\n&amp;#x200B;\n\n*Edit*:
        made the changes suggested down below.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        first time ever really using Rust (I started the book earlier this week).
        I would love some feedback if anybody has any! Especially regarding more idiomatic
        ways of writing my code or areas that might be unnecessarily inefficient.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQAjAgAAAAAAAAA6nMjJFMpQiatRvuJoLBgJ7585Mvv1j2ishJ/IK/xnmnkUhLh3pUl3/cHaEQspn7QFWqe6yZQ32p0xVoLZgqo2JQwqWKYz6WpEdSC79AfXQQlPHnSnqxc5KBchzTcl4ZsC6pvY5Fq+0OvtEpXnT0j6ITYFjDEKvDfrLUp+6HVfhCw/7owhBOC/qgAKkxFYGDLvqLRFdL8vLRRBTYS8hOTIxn2EL343WzxNXRV+6KbZnGr2Kp2s54SpqIolti3+V6YKYf5qXdg8e7jj21OhbhPjkhvDLLqMs8s5HbUuEBEfyrAfkqq4iMfRCa211XyyAKkAhbwKi0K5y1ptHI56NNNQG23gV0vnuLtcDiEGfSVcWFelVWbvxjh50/ebVjFbjiakTyCPtNTu2d4YvWeg7h5IgAJNewV15f+4QLJA\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDBAgAAAAAAAAA6nMjJFMpQiatRvuJoLBgJ7585Mvv1j2ishJ/IK/xnmnkUhLh3pUl3/cHaEQspn7QFWqe6yZQ32p0xVoLZgqo2JQwqWKYz6WpEdSC79AfXQQlPHnSnqxc5KBchzTcl4ZsC6pvY5Fq+0OvtEpXnT0j6ITYFjDEKvDfrLUp+6NsGlKJzAhPdtXUug0Zsts5tYyOV5cutw6SBMUutiTcuMig6VxbipwLCEuPw0HE7aEwNuT4SnsS9XruYbu7XgVMCXYUS83WdlHKtoZfljnlS7TrORGULz57eCgtF9BMrVVTZqtaGGkchDzOJSLzBVYQKtsJzG3IcG/l65C51dpKGxJ+zm7YH3fO9vbX0u9TxgwpAlZsjVxzdcu7CoeMIXcr4KcoSMNEPrKtIi8UkMz4W8Q9aiml4Lx8l9s5xIs4FdqzwOxz9b8UHjZGM1Sc6Crqbq+c482iQ/7JZtcA=\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Edit&lt;/em&gt;:
        made the changes suggested down below.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrs1dg/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrs1dg", "created": 1638343982.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_hmrtht6", "id": "hmrtht6", "parent_id": "t1_hmrs1dg", "depth": 1, "children":
        ["hmrtht6"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638435990.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrs30t", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Pyr0Byt3",
        "can_mod_post": false, "created_utc": 1638344017.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_b4y19", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [Go/Golang](https://github.com/mnml/aoc/blob/main/2021/01/2.go)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://github.com/mnml/aoc/blob/main/2021/01/2.go\"&gt;Go/Golang&lt;/a&gt;&lt;/h1&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrs30t/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrs30t", "created":
        1638344017.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrs7po", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[Scala solution](https://github.com/bbstilson/adventofcode/blob/main/adventofcode/src/bbstilson/aoc2021/Day1.scala)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmrs7po",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/bbstilson/adventofcode/blob/main/adventofcode/src/bbstilson/aoc2021/Day1.scala\"&gt;Scala
        solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrs7po/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638344112.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638344112.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrsklw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "cccc828",
        "can_mod_post": false, "created_utc": 1638344380.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_97yage9t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C Solution**\n\n[Day  01 C Solution ](https://topaz.github.io/paste/#XQAAAQAVBAAAAAAAAAARmknGRw8TogB3OyPPwW5K8Q8ohQvj8m6aOXY901m0n6h8CyuI7If89gI+/LG4XOM6FVg7WSQkInobY0ikANv3JdI+7lOGJ0GkhrKsyoHLHe9LtU5MMSfcgOKZKJeR425RK6aap5rNUXIkg/uJx1CEuhOOi+5OoOTli1VR+EfPYeYnMqTL5xVV7G0+ffmuzfkOJ4R4/a/3d9We/XlKNDIgFPEqtxLczea25dKOdbKCongfRtnNrR25opbid8i735oNc8ur+2Oq3QWHLkipZRXUif7JMA79N5iiXJilMR5Lczs7lXy3sDyaitBOZ0dmDHzIDcQ44vIm/mtu+qnePscfa0APrTjv/+m6EP1KateGXaoOUxVTKu4HgE7PqSsHP0qcYMY5yxCVdkdcMzp4fkimVnX6L+6ZDeH/DL7rySNAPErad8CaX0arLFQxBFBT1DonS5h9yz24WUGlZmqdiJWHYcsxm+fdGRKSvXWwdyKXpbPKLHJmx/zBQoKPyQl3C+MX2MS6qSbl0Etix27kbSN71Ce366zU2slbKU+CLZX095kw3FNAHCiVMmguESm9WqJJsaVcrFov2xBuJU22eQPqblVhSVHJvGooAYEe1/Q5SaEown1XeIEkLuuJPoVPF1pa57cZyVp6rPMXicpa8GB2SMm4DI7vWBAkYVqoA1VAxo937Vrl2WeDU6RUIh8Fg5ksAfxgYHND0hkLVgiPgJ5nv9b/9ZNXdQ==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C Solution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQAVBAAAAAAAAAARmknGRw8TogB3OyPPwW5K8Q8ohQvj8m6aOXY901m0n6h8CyuI7If89gI+/LG4XOM6FVg7WSQkInobY0ikANv3JdI+7lOGJ0GkhrKsyoHLHe9LtU5MMSfcgOKZKJeR425RK6aap5rNUXIkg/uJx1CEuhOOi+5OoOTli1VR+EfPYeYnMqTL5xVV7G0+ffmuzfkOJ4R4/a/3d9We/XlKNDIgFPEqtxLczea25dKOdbKCongfRtnNrR25opbid8i735oNc8ur+2Oq3QWHLkipZRXUif7JMA79N5iiXJilMR5Lczs7lXy3sDyaitBOZ0dmDHzIDcQ44vIm/mtu+qnePscfa0APrTjv/+m6EP1KateGXaoOUxVTKu4HgE7PqSsHP0qcYMY5yxCVdkdcMzp4fkimVnX6L+6ZDeH/DL7rySNAPErad8CaX0arLFQxBFBT1DonS5h9yz24WUGlZmqdiJWHYcsxm+fdGRKSvXWwdyKXpbPKLHJmx/zBQoKPyQl3C+MX2MS6qSbl0Etix27kbSN71Ce366zU2slbKU+CLZX095kw3FNAHCiVMmguESm9WqJJsaVcrFov2xBuJU22eQPqblVhSVHJvGooAYEe1/Q5SaEown1XeIEkLuuJPoVPF1pa57cZyVp6rPMXicpa8GB2SMm4DI7vWBAkYVqoA1VAxo937Vrl2WeDU6RUIh8Fg5ksAfxgYHND0hkLVgiPgJ5nv9b/9ZNXdQ==\"&gt;Day  01
        C Solution &lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrsklw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrsklw", "created":
        1638344380.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hms0rcc", "id": "hms0rcc", "parent_id":
        "t1_hmrsklw", "depth": 1, "children": ["hms0rcc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638345220.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrt4yg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SadBunnyNL",
        "can_mod_post": false, "created_utc": 1638344811.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ly04c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Bash/(Gnu)Awk oneliners:\n\n    # day 1\n    cat input.txt|gawk ''\n        {\n            prev=val;
        val=$0;\n            if(NR&gt;1 &amp;&amp; val&gt;prev){count++;}\n        }\n        END{print
        count;}\n    ''\n    \n    # day 2\n    cat input.txt|gawk ''\n        {\n            ar[NR%3]=$0;
        psum=sum; sum=ar[0]+ar[1]+ar[2];\n            if(NR&gt;3 &amp;&amp; sum&gt;psum){count++;}\n        }\n        END{print
        count;}\n    ''", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bash/(Gnu)Awk
        oneliners:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# day 1\ncat input.txt|gawk
        &amp;#39;\n    {\n        prev=val; val=$0;\n        if(NR&amp;gt;1 &amp;amp;&amp;amp;
        val&amp;gt;prev){count++;}\n    }\n    END{print count;}\n&amp;#39;\n\n# day
        2\ncat input.txt|gawk &amp;#39;\n    {\n        ar[NR%3]=$0; psum=sum; sum=ar[0]+ar[1]+ar[2];\n        if(NR&amp;gt;3
        &amp;amp;&amp;amp; sum&amp;gt;psum){count++;}\n    }\n    END{print count;}\n&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrt4yg/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrt4yg", "created":
        1638344811.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrtaig",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "FBH_92",
        "can_mod_post": false, "created_utc": 1638344931.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ant527lf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#:\n\n    public class Day1 : ISolution\r\n    {\r\n        public string
        SolveFirst()\r\n        {\r\n            return Solve(1)\r\n                .ToString();\r\n        }\r\n\r\n        public
        string SolveSecond()\r\n        {\r\n            return Solve(3)\r\n                .ToString();\r\n        }\r\n\r\n        private
        int Solve(int lookBack)\r\n        {\r\n            var input = GetInput();\r\n\r\n            return
        input\r\n                .Where((e, i) =&gt; i &gt;= lookBack &amp;&amp; e
        &gt; input[i - lookBack])\r\n                .Count();\r\n        }\r\n\r\n        private
        IList&lt;int&gt; GetInput()\r\n        {\r\n            const string FileName
        = \"Inputs/Day1.txt\";\r\n\r\n            var contents = File.ReadAllLines(FileName);\r\n\r\n            return
        contents\r\n                .Select(int.Parse)\r\n                .ToList();\r\n        }\r\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        class Day1 : ISolution\n{\n    public string SolveFirst()\n    {\n        return
        Solve(1)\n            .ToString();\n    }\n\n    public string SolveSecond()\n    {\n        return
        Solve(3)\n            .ToString();\n    }\n\n    private int Solve(int lookBack)\n    {\n        var
        input = GetInput();\n\n        return input\n            .Where((e, i) =&amp;gt;
        i &amp;gt;= lookBack &amp;amp;&amp;amp; e &amp;gt; input[i - lookBack])\n            .Count();\n    }\n\n    private
        IList&amp;lt;int&amp;gt; GetInput()\n    {\n        const string FileName
        = &amp;quot;Inputs/Day1.txt&amp;quot;;\n\n        var contents = File.ReadAllLines(FileName);\n\n        return
        contents\n            .Select(int.Parse)\n            .ToList();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtaig/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrtaig", "created":
        1638344931.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmry45t", "id": "hmry45t", "parent_id":
        "t1_hmrtaig", "depth": 1, "children": ["hmry45t", "hmsddsm"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638345321.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrtbjq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bobby45800",
        "can_mod_post": false, "created_utc": 1638344952.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_movdu2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Unreal Engine Blueprint\n\n[Unreal Engine Blueprints solution](https://pasteboard.co/FLLqDJfRalnS.png)\n\nI
        wrote my solution in Python first but you''ve probably seen that solution
        many times before and this is definitely more interesting :)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Unreal Engine Blueprint&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pasteboard.co/FLLqDJfRalnS.png\"&gt;Unreal Engine Blueprints
        solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I wrote my solution in Python first
        but you&amp;#39;ve probably seen that solution many times before and this
        is definitely more interesting :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtbjq/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrtbjq", "created": 1638344952.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638346157.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrtiig",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Computergy22",
        "can_mod_post": false, "created_utc": 1638345099.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_dpi7khy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### Python\n#### Part Two\n\nNot the shortest solution but easy to understand
        and doesn''t load the complete file into memory.\n\n    if __name__ == ''__main__'':\n        file
        = open(''input.txt'', ''r'')\n        prev_lines = []\n        times_increased
        = 0\n\n        while True:\n            line = file.readline()\n            if
        not line:\n                print(times_increased)\n                break\n\n            prev_lines.append(int(line))\n\n            if
        len(prev_lines) &gt; 3:\n                sum_a = prev_lines[0] + prev_lines[1]
        + prev_lines[2]\n                sum_b = prev_lines[-1] + prev_lines[-2] +
        prev_lines[-3]\n\n                if sum_b &gt; sum_a:\n                    times_increased
        += 1\n\n                prev_lines.pop(0)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h3&gt;Python&lt;/h3&gt;\n\n&lt;h4&gt;Part Two&lt;/h4&gt;\n\n&lt;p&gt;Not
        the shortest solution but easy to understand and doesn&amp;#39;t load the
        complete file into memory.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if __name__
        == &amp;#39;__main__&amp;#39;:\n    file = open(&amp;#39;input.txt&amp;#39;,
        &amp;#39;r&amp;#39;)\n    prev_lines = []\n    times_increased = 0\n\n    while
        True:\n        line = file.readline()\n        if not line:\n            print(times_increased)\n            break\n\n        prev_lines.append(int(line))\n\n        if
        len(prev_lines) &amp;gt; 3:\n            sum_a = prev_lines[0] + prev_lines[1]
        + prev_lines[2]\n            sum_b = prev_lines[-1] + prev_lines[-2] + prev_lines[-3]\n\n            if
        sum_b &amp;gt; sum_a:\n                times_increased += 1\n\n            prev_lines.pop(0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtiig/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrtiig", "created":
        1638345099.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrvoc8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hmrtiig", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Doing your counting *while reading the file* gives me
        anxiety for some reason.\n\n(Good job ofc)", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmrvoc8", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Doing your counting &lt;em&gt;while reading
        the file&lt;/em&gt; gives me anxiety for some reason.&lt;/p&gt;\n\n&lt;p&gt;(Good
        job ofc)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "can_gild":
        false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrvoc8/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638346790.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638346790.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hms2kpf", "id": "hms2kpf", "parent_id":
        "t1_hmrvoc8", "depth": 2, "children": ["hms2kpf"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_hmrtqw9", "id": "hmrtqw9", "parent_id": "t1_hmrtiig",
        "depth": 1, "children": ["hmrtqw9"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1638345511.0, "mod_reason_by": null, "banned_by": null, "ups":
        2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrtnc5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vypxl",
        "can_mod_post": false, "created_utc": 1638345202.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_2pbhezcb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Haskell** \\- nice and clean\n\n    part1 :: [Int] -&gt; Int\n    part1
        [] = 0\n    part1 [_] = 0\n    part1 (x:y:xs) = (if y &gt; x then 1 else 0)
        + part1 (y:xs)\n    \n    part2 :: [Int] -&gt; Int\n    part2 = part1 . slide\n        where
        slide [] = []\n              slide [_] = []\n              slide [_, _] =
        []\n              slide (x:y:z:xs) = (x + y + z) : slide (y:z:xs)\n\n[Full
        Code](https://github.com/vypxl/aoc/blob/main/2021/Day1.hs)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Haskell&lt;/strong&gt; - nice
        and clean&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part1 :: [Int] -&amp;gt; Int\npart1
        [] = 0\npart1 [_] = 0\npart1 (x:y:xs) = (if y &amp;gt; x then 1 else 0) +
        part1 (y:xs)\n\npart2 :: [Int] -&amp;gt; Int\npart2 = part1 . slide\n    where
        slide [] = []\n          slide [_] = []\n          slide [_, _] = []\n          slide
        (x:y:z:xs) = (x + y + z) : slide (y:z:xs)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/vypxl/aoc/blob/main/2021/Day1.hs\"&gt;Full Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtnc5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrtnc5", "created":
        1638345202.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638345490.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrtomh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[My Python solution](https://github.com/marcelblijleven/adventofcode/blob/master/src/adventofcode/year_2021/day_01_2021.py)\n\nI
        used a deque to always have a window with a max length of 3.\n\n2021 day 01
        part 01: 1301 in 0.34 ms  \n2021 day 01 part 02: 1346 in 1.44 ms", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmrtomh", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/marcelblijleven/adventofcode/blob/master/src/adventofcode/year_2021/day_01_2021.py\"&gt;My
        Python solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I used a deque to always have
        a window with a max length of 3.&lt;/p&gt;\n\n&lt;p&gt;2021 day 01 part 01:
        1301 in 0.34 ms&lt;br/&gt;\n2021 day 01 part 02: 1346 in 1.44 ms&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtomh/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638345228.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638345228.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmru0e5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "r1ppch3n",
        "can_mod_post": false, "created_utc": 1638345477.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_j7xwl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [Rust](https://gitlab.com/mboehnke/advent-of-code/-/blob/main/aoc-2021/aoc-2021-01/src/main.rs)\n\nsignificantly
        more boilerplate than actual code...", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://gitlab.com/mboehnke/advent-of-code/-/blob/main/aoc-2021/aoc-2021-01/src/main.rs\"&gt;Rust&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;significantly
        more boilerplate than actual code...&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmru0e5/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmru0e5", "created": 1638345477.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_hmrw4d2", "id": "hmrw4d2", "parent_id": "t1_hmru0e5", "depth": 1, "children":
        ["hmrw4d2", "hmrxhod", "hmrwk7w"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmru1rn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "frerich",
        "can_mod_post": false, "created_utc": 1638345506.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_tagtm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Elixir\n\n[https://github.com/frerich/aoc2021/blob/main/day1/lib/day1.ex](https://github.com/frerich/aoc2021/blob/main/day1/lib/day1.ex)\n\nI
        was looking forward to use `Enum.count/2` which permits specifying a predicate
        selecting the elements to count. :-)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/frerich/aoc2021/blob/main/day1/lib/day1.ex\"&gt;https://github.com/frerich/aoc2021/blob/main/day1/lib/day1.ex&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        was looking forward to use &lt;code&gt;Enum.count/2&lt;/code&gt; which permits
        specifying a predicate selecting the elements to count. :-)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmru1rn/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmru1rn", "created":
        1638345506.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrzkvw", "id": "hmrzkvw", "parent_id":
        "t1_hmru1rn", "depth": 1, "children": ["hmrzkvw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrwqat",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ml01",
        "can_mod_post": false, "created_utc": 1638347665.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_16aijw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# go\n\nhttps://github.com/MarcoLucidi01/aoc/blob/master/2021/1/1.go", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;go&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/MarcoLucidi01/aoc/blob/master/2021/1/1.go\"&gt;https://github.com/MarcoLucidi01/aoc/blob/master/2021/1/1.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrwqat/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrwqat", "created":
        1638347665.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638526456.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrx7fx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "blacai",
        "can_mod_post": false, "created_utc": 1638348062.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_gnlzn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nice to give it a try again this year. I continue with F# (Almost forgot
        everything I learned last year :D\n\n**F#**\n\n    let rec getByNumber (num,
        lista: ''a list) : ''a list = \n    match num &lt;= lista.Length with\n    |
        true -&gt; [(lista |&gt; List.take num |&gt; List.sum)] @ (getByNumber(num,
        (lista |&gt; List.skip 1)))\n    | false -&gt; []\n    let groupedByThree
        = getByNumber(3, inputLines) groupedByThree |&gt; List.pairwise |&gt; List.filter
        (fun (x,y) -&gt; y &gt; x) |&gt; List.length", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Nice to give it a try again this year. I continue
        with F# (Almost forgot everything I learned last year :D&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;F#&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        rec getByNumber (num, lista: &amp;#39;a list) : &amp;#39;a list = \nmatch
        num &amp;lt;= lista.Length with\n| true -&amp;gt; [(lista |&amp;gt; List.take
        num |&amp;gt; List.sum)] @ (getByNumber(num, (lista |&amp;gt; List.skip 1)))\n|
        false -&amp;gt; []\nlet groupedByThree = getByNumber(3, inputLines) groupedByThree
        |&amp;gt; List.pairwise |&amp;gt; List.filter (fun (x,y) -&amp;gt; y &amp;gt;
        x) |&amp;gt; List.length\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrx7fx/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrx7fx", "created": 1638348062.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638349733.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrxcqk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sidewaysthinking",
        "can_mod_post": false, "created_utc": 1638348182.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_cy6rppc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[C# solution.](https://github.com/oparkerj/AdventOfCode/blob/master/AdventOfCode2021/Puzzles/Day1.cs)
        Was 1:51. I would have been earlier but I accidentally counted the length
        of the input instead of the increasing pairs, so I had to wait the penalty
        time.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/oparkerj/AdventOfCode/blob/master/AdventOfCode2021/Puzzles/Day1.cs\"&gt;C#
        solution.&lt;/a&gt; Was 1:51. I would have been earlier but I accidentally
        counted the length of the input instead of the increasing pairs, so I had
        to wait the penalty time.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrxcqk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrxcqk", "created":
        1638348182.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638393067.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrxsyi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sadam36",
        "can_mod_post": false, "created_utc": 1638348557.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ioqkq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Mine (not very sophisticated) [solution in python](https://github.com/a-mroz/adventofcode2021/blob/master/day1.py).\n\nI''m
        not a python programmer, but I enjoy to play with it from time to time. AoC
        is a great opportunity :)\n\nEdit: I wrote a [tiny blogpost](https://a-mroz.github.io/2021/12/01/advent-of-code-2021-day1.html)
        about the solution.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Mine
        (not very sophisticated) &lt;a href=\"https://github.com/a-mroz/adventofcode2021/blob/master/day1.py\"&gt;solution
        in python&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not a python programmer,
        but I enjoy to play with it from time to time. AoC is a great opportunity
        :)&lt;/p&gt;\n\n&lt;p&gt;Edit: I wrote a &lt;a href=\"https://a-mroz.github.io/2021/12/01/advent-of-code-2021-day1.html\"&gt;tiny
        blogpost&lt;/a&gt; about the solution.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrxsyi/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrxsyi", "created": 1638348557.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrydbs", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Spook1313", "can_mod_post": false, "created_utc":
        1638349030.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_dz16p", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "JavaScript using filter\n\n```\nconst
        fs = require(\"fs\");\nconst input = fs.readFileSync(\"input.txt\").toString().split(\"\\n\").map(i
        =&gt; +i);\n\nconst solutionPart1 = input.filter((n, i) =&gt; input[i] &lt;
        input[i + 1]).length\nconsole.log(solutionPart1)\n\nconst solutionPart2 =
        input.filter((n, i) =&gt; input[i] + input[i+1] + input[i+2] &lt; input[i
        + 1] + input[i + 2] + input[i + 3]).length\nconsole.log(solutionPart2)\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript using filter&lt;/p&gt;\n\n&lt;p&gt;```\nconst
        fs = require(&amp;quot;fs&amp;quot;);\nconst input = fs.readFileSync(&amp;quot;input.txt&amp;quot;).toString().split(&amp;quot;\\n&amp;quot;).map(i
        =&amp;gt; +i);&lt;/p&gt;\n\n&lt;p&gt;const solutionPart1 = input.filter((n,
        i) =&amp;gt; input[i] &amp;lt; input[i + 1]).length\nconsole.log(solutionPart1)&lt;/p&gt;\n\n&lt;p&gt;const
        solutionPart2 = input.filter((n, i) =&amp;gt; input[i] + input[i+1] + input[i+2]
        &amp;lt; input[i + 1] + input[i + 2] + input[i + 3]).length\nconsole.log(solutionPart2)\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrydbs/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrydbs", "created":
        1638349030.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrzcjk", "id": "hmrzcjk", "parent_id":
        "t1_hmrydbs", "depth": 1, "children": ["hmrzcjk", "hms4ium"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmryh40",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "DrugCrazed",
        "can_mod_post": false, "created_utc": 1638349122.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4iorz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Typescript funtimes!](https://github.com/PatrickRose/advent-of-code/blob/master/typescript/2021/src/01\\_SonarSweep.ts)
        \n\n\nAs a UK resident I''m not going to bother fighting for leaderboard position,
        but I''ll fight for it on my private leaderboard (though it looks like some
        people get up earlier than I do...)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/PatrickRose/advent-of-code/blob/master/typescript/2021/src/01_SonarSweep.ts\"&gt;Typescript
        funtimes!&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;As a UK resident I&amp;#39;m not
        going to bother fighting for leaderboard position, but I&amp;#39;ll fight
        for it on my private leaderboard (though it looks like some people get up
        earlier than I do...)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmryh40/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmryh40", "created":
        1638349122.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrz40u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ultra_mind",
        "can_mod_post": false, "created_utc": 1638349668.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_46pbemg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JS\nDay1 in a one liner\nhttps://github.com/TheAngularGuy/aoc2021", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;JS\nDay1 in a one liner\n&lt;a href=\"https://github.com/TheAngularGuy/aoc2021\"&gt;https://github.com/TheAngularGuy/aoc2021&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrz40u/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrz40u", "created":
        1638349668.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrzl7z",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "devcodex",
        "can_mod_post": false, "created_utc": 1638350084.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_475mh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++ with ranges-v3 solutions + tests\n\n[https://github.com/apathyboy/advent-of-code-cpp/blob/master/puzzles/2021/day01/main.cpp](https://github.com/apathyboy/advent-of-code-cpp/blob/master/puzzles/2021/day01/main.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++ with ranges-v3 solutions
        + tests&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/apathyboy/advent-of-code-cpp/blob/master/puzzles/2021/day01/main.cpp\"&gt;https://github.com/apathyboy/advent-of-code-cpp/blob/master/puzzles/2021/day01/main.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrzl7z/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrzl7z", "created":
        1638350084.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_hmscdix", "id": "hmscdix", "parent_id":
        "t1_hmrzl7z", "depth": 1, "children": ["hmscdix", "hmsh5x2"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638350577.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrzmu2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mathsaey",
        "can_mod_post": false, "created_utc": 1638350123.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_58311axp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Elixir\n\nhttps://github.com/mathsaey/adventofcode/blob/master/lib/2021/1.ex\n\nI''m
        sure this can be made shorter, so I might be reworking this if I''m bored
        :).\n\nEDIT: modified it to use `Stream.chunk_every` after seeing /u/frerich
        ''s solution.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mathsaey/adventofcode/blob/master/lib/2021/1.ex\"&gt;https://github.com/mathsaey/adventofcode/blob/master/lib/2021/1.ex&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        sure this can be made shorter, so I might be reworking this if I&amp;#39;m
        bored :).&lt;/p&gt;\n\n&lt;p&gt;EDIT: modified it to use &lt;code&gt;Stream.chunk_every&lt;/code&gt;
        after seeing &lt;a href=\"/u/frerich\"&gt;/u/frerich&lt;/a&gt; &amp;#39;s
        solution.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrzmu2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrzmu2", "created":
        1638350123.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms009r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Recombinatrix",
        "can_mod_post": false, "created_utc": 1638350452.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_3o5o8qql", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hello everyone! I''m using AOC2021 to get familiar with numpy, so [here is
        my (inelegant) numpy solution](https://github.com/recombinatrix/AOC/blob/main/AOC2021/solution-01.py).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hello everyone! I&amp;#39;m
        using AOC2021 to get familiar with numpy, so &lt;a href=\"https://github.com/recombinatrix/AOC/blob/main/AOC2021/solution-01.py\"&gt;here
        is my (inelegant) numpy solution&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms009r/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms009r", "created": 1638350452.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmxnsb9", "id": "hmxnsb9", "parent_id": "t1_hms009r", "depth": 1, "children":
        ["hmxnsb9"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638364855.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms0omp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vraGG_",
        "can_mod_post": false, "created_utc": 1638351046.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_gpw69", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\n    def pt_0(data):\n        descends = sum([\n            1 for\n            i
        in range(1, len(data))\n            if data[i] &gt; data[i-1]\n        ])\n        return
        descends\n    \n    def pt_1(data):\n        return sum([\n            1 if
        sum(data[i:i+3]) &lt; sum(data[i+1:i+4]) else 0\n            for i in range(0,
        len(data)-3)\n        ])\n    \n    if __name__ == ''__main__'':\n        with
        open(''input.txt'', ''r'') as f:\n                data = [int(i) for i in
        f.readlines()]\n        print(pt_0(data))\n        print(pt_1(data))\n\nMaybe
        I can do oneliners in standard python lib. I suspect there might be a better
        way to count, other than returning 0 and 1 and then summing.\n\nHere are my
        two attempts:\n\n~~Question: Ranking is calculated based on submission time,
        right? Meaning if I don''t get up in the middle of the night, I can''t compete?
        :(~~\n\nE: Nevermind, apparently I can''t ask here?", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def pt_0(data):\n    descends
        = sum([\n        1 for\n        i in range(1, len(data))\n        if data[i]
        &amp;gt; data[i-1]\n    ])\n    return descends\n\ndef pt_1(data):\n    return
        sum([\n        1 if sum(data[i:i+3]) &amp;lt; sum(data[i+1:i+4]) else 0\n        for
        i in range(0, len(data)-3)\n    ])\n\nif __name__ == &amp;#39;__main__&amp;#39;:\n    with
        open(&amp;#39;input.txt&amp;#39;, &amp;#39;r&amp;#39;) as f:\n            data
        = [int(i) for i in f.readlines()]\n    print(pt_0(data))\n    print(pt_1(data))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Maybe
        I can do oneliners in standard python lib. I suspect there might be a better
        way to count, other than returning 0 and 1 and then summing.&lt;/p&gt;\n\n&lt;p&gt;Here
        are my two attempts:&lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;Question: Ranking is
        calculated based on submission time, right? Meaning if I don&amp;#39;t get
        up in the middle of the night, I can&amp;#39;t compete? :(&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;E:
        Nevermind, apparently I can&amp;#39;t ask here?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms0omp/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms0omp", "created":
        1638351046.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hms1ip2", "id": "hms1ip2", "parent_id":
        "t1_hms0omp", "depth": 1, "children": ["hms1ip2", "hms4gtu"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms0wwq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "theoilykeyboard",
        "can_mod_post": false, "created_utc": 1638351248.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_n9mhl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Lua](https://github.com/khayyamsaleem/advent-of-code/tree/main/2021%2F01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/khayyamsaleem/advent-of-code/tree/main/2021%2F01\"&gt;Lua&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms0wwq/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms0wwq", "created":
        1638351248.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms1fac", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Very basic [Python](https://github.com/neelakantankk/Advent_of_Code_2021/tree/main/Day_01).
        Pretty nice introductory puzzle. I can''t wait to see what shenanigans we
        get up to with this submarine.", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hms1fac", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Very basic &lt;a href=\"https://github.com/neelakantankk/Advent_of_Code_2021/tree/main/Day_01\"&gt;Python&lt;/a&gt;.
        Pretty nice introductory puzzle. I can&amp;#39;t wait to see what shenanigans
        we get up to with this submarine.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms1fac/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638351698.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638351698.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms1j6d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "shiba_coin",
        "can_mod_post": false, "created_utc": 1638351793.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_2ry1p7pi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    (def chars (let [f (file/open \"2021/day_01/input.txt\")] (file/read
        f :all)))\n    (def numbers (string/split \"\\n\" chars))\n    (def parsed
        (map (fn [x] (int/u64 x)) (array/slice numbers 0 (- (length numbers) 1))))\n    \n    #
        part 1\n    \n    (print (sum\n      (map \n        (fn [idx] (if (&gt; (get
        parsed idx) (get parsed (- idx 1))) 1 0))\n        (range 1 (length parsed)))))\n    \n    \n    #
        part 2\n    \n    (print (sum\n      (map \n        (fn [idx]\n          (if
        (&gt;\n                (sum (array/slice parsed (+ idx 1) (+ idx 4)))\n                (sum
        (array/slice parsed idx (+ idx 3))))\n            1 0))\n        (range 0
        (- (length parsed) 3)))))\n    \n\nTrying Janet this year, very nice so far",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;(def chars
        (let [f (file/open &amp;quot;2021/day_01/input.txt&amp;quot;)] (file/read
        f :all)))\n(def numbers (string/split &amp;quot;\\n&amp;quot; chars))\n(def
        parsed (map (fn [x] (int/u64 x)) (array/slice numbers 0 (- (length numbers)
        1))))\n\n# part 1\n\n(print (sum\n  (map \n    (fn [idx] (if (&amp;gt; (get
        parsed idx) (get parsed (- idx 1))) 1 0))\n    (range 1 (length parsed)))))\n\n\n#
        part 2\n\n(print (sum\n  (map \n    (fn [idx]\n      (if (&amp;gt;\n            (sum
        (array/slice parsed (+ idx 1) (+ idx 4)))\n            (sum (array/slice parsed
        idx (+ idx 3))))\n        1 0))\n    (range 0 (- (length parsed) 3)))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Trying
        Janet this year, very nice so far&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms1j6d/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms1j6d", "created": 1638351793.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638352723.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms1s6r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fsed123",
        "can_mod_post": false, "created_utc": 1638352010.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_2lwv2ppr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[python and rust](https://github.com/Fadi88/AoC/tree/master/2021)\n\npretty
        basic Rust as i am using the challenge to learn it, but mind-blowing speed
        coming from python like microseconds!\n\njust a small hint, for second part
        no need to sum because two elements in the middle will cancel each other out
        we just need to compare one element to one element and play with the idx a
        bit", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/Fadi88/AoC/tree/master/2021\"&gt;python and rust&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;pretty
        basic Rust as i am using the challenge to learn it, but mind-blowing speed
        coming from python like microseconds!&lt;/p&gt;\n\n&lt;p&gt;just a small hint,
        for second part no need to sum because two elements in the middle will cancel
        each other out we just need to compare one element to one element and play
        with the idx a bit&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms1s6r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms1s6r", "created":
        1638352010.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms1z0o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Elixir\n\n    def two() do\n    Read_File_Utils.read_file(\"2021/f1.txt\")\n    |&gt;
        Enum.map(&amp;String.to_integer/1)\n    |&gt; Enum.chunk_every(3, 1, :discard)\n    |&gt;
        Enum.map(&amp;Enum.sum/1)\n    |&gt; Enum.chunk_every(2, 1, :discard)\n    |&gt;
        Enum.count(fn [a, b] -&gt; b &gt; a end)\n  end", "awarders": [], "downs":
        0, "author_flair_css_class": null, "name": "t1_hms1z0o", "collapsed": false,
        "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elixir&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        two() do\nRead_File_Utils.read_file(&amp;quot;2021/f1.txt&amp;quot;)\n|&amp;gt;
        Enum.map(&amp;amp;String.to_integer/1)\n|&amp;gt; Enum.chunk_every(3, 1, :discard)\n|&amp;gt;
        Enum.map(&amp;amp;Enum.sum/1)\n|&amp;gt; Enum.chunk_every(2, 1, :discard)\n|&amp;gt;
        Enum.count(fn [a, b] -&amp;gt; b &amp;gt; a end)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;end&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms1z0o/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638352177.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638352177.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638368260.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms21cb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mschaap",
        "can_mod_post": false, "created_utc": 1638352230.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_13dwf0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Raku**, using two one-liners:\n\n    say \"Part 1: \", $inputfile.words.rotor(2=&gt;-1).map(-&gt;
        ($a, $b) { $b &gt; $a }).sum;\n    say \"Part 2: \", $inputfile.words.rotor(3=&gt;-2)\u00bb.sum\n                                    .rotor(2=&gt;-1).map(-&gt;
        ($a, $b) { $b &gt; $a }).sum;\n\n[@Github](https://github.com/mscha/aoc/blob/master/aoc2021/aoc01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Raku&lt;/strong&gt;,
        using two one-liners:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;say &amp;quot;Part
        1: &amp;quot;, $inputfile.words.rotor(2=&amp;gt;-1).map(-&amp;gt; ($a, $b)
        { $b &amp;gt; $a }).sum;\nsay &amp;quot;Part 2: &amp;quot;, $inputfile.words.rotor(3=&amp;gt;-2)\u00bb.sum\n                                .rotor(2=&amp;gt;-1).map(-&amp;gt;
        ($a, $b) { $b &amp;gt; $a }).sum;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mscha/aoc/blob/master/aoc2021/aoc01\"&gt;@Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms21cb/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms21cb", "created":
        1638352230.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmsab2m", "id": "hmsab2m", "parent_id":
        "t1_hms21cb", "depth": 1, "children": ["hmsab2m"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms24ql",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tomribbens",
        "can_mod_post": false, "created_utc": 1638352310.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_qookn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in Python:\n\n[https://github.com/tomribbens/AoC/tree/main/2021/day01](https://github.com/tomribbens/AoC/tree/main/2021/day01)\n\n&amp;#x200B;\n\nI
        tried AoC last year with Python, and got halfway or so. That was my first
        experience with Python, haven''t touched it since. If you have any suggestions
        for my code, it''s more than welcome.\n\nI have the impression that especially
        my second part solution is not really the best way to do it in Python. I usually
        really want to use my indices on an array, but Python is not built for that,
        right?", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution in Python:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/tomribbens/AoC/tree/main/2021/day01\"&gt;https://github.com/tomribbens/AoC/tree/main/2021/day01&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I
        tried AoC last year with Python, and got halfway or so. That was my first
        experience with Python, haven&amp;#39;t touched it since. If you have any
        suggestions for my code, it&amp;#39;s more than welcome.&lt;/p&gt;\n\n&lt;p&gt;I
        have the impression that especially my second part solution is not really
        the best way to do it in Python. I usually really want to use my indices on
        an array, but Python is not built for that, right?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms24ql/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms24ql", "created":
        1638352310.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hms2o7i", "id": "hms2o7i", "parent_id":
        "t1_hms24ql", "depth": 1, "children": ["hms2o7i", "hms2oyh"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms2ee2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LyleiLanar",
        "can_mod_post": false, "created_utc": 1638352546.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_92xl1c2x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My ruby solution: [\\[2021 Day 1\\]](https://github.com/LyleiLanar/advent-of-code/blob/main/2021/day_1.rb)  \nNot
        the best, but Ruby is very new for me.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My ruby solution: &lt;a href=\"https://github.com/LyleiLanar/advent-of-code/blob/main/2021/day_1.rb\"&gt;[2021
        Day 1]&lt;/a&gt;&lt;br/&gt;\nNot the best, but Ruby is very new for me.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms2ee2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms2ee2", "created":
        1638352546.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638437022.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms2u4s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Snoo_41044",
        "can_mod_post": false, "created_utc": 1638352929.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_6pco1x7d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++\n# Part 1\n\nIterate over input\n\n```c++\nconst int INF = 1e8;\nint
        main() {\n    freopen(\"inputs/input1.txt\", \"r\", stdin);\n    freopen(\"outputs/output1.txt\",
        \"w\", stdout);\n    string tmp;\n    int cnt = 0, depth, pDepth = INF;\n    while(getline(cin,
        tmp)) {\n        depth = stoi(tmp);\n        cnt += (depth&gt;pDepth);\n        pDepth
        = depth;\n    }\n    cout&lt;&lt;cnt&lt;&lt;endl;\n}\n```\n\n# Part 2\n\nCompare
        the elements  \n\n```c++\nint main() {\n    freopen(\"inputs/input1.txt\",
        \"r\", stdin);\n    freopen(\"outputs/output2.txt\", \"w\", stdout);\n    string
        tmp;\n    int cnt = 0, depth;\n    vector&lt;int&gt; depths;\n    while(getline(cin,
        tmp)) {\n        depth = stoi(tmp); \n        depths.push_back(depth);\n    }\n    for(int
        i=3; i&lt;depths.size(); i++) {\n        cnt += (depths[i]&gt;depths[i-3]);\n    }\n    cout&lt;&lt;cnt&lt;&lt;endl;\n}\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++&lt;/p&gt;\n\n&lt;h1&gt;Part
        1&lt;/h1&gt;\n\n&lt;p&gt;Iterate over input&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;c++\nconst
        int INF = 1e8;\nint main() {\n    freopen(&amp;quot;inputs/input1.txt&amp;quot;,
        &amp;quot;r&amp;quot;, stdin);\n    freopen(&amp;quot;outputs/output1.txt&amp;quot;,
        &amp;quot;w&amp;quot;, stdout);\n    string tmp;\n    int cnt = 0, depth,
        pDepth = INF;\n    while(getline(cin, tmp)) {\n        depth = stoi(tmp);\n        cnt
        += (depth&amp;gt;pDepth);\n        pDepth = depth;\n    }\n    cout&amp;lt;&amp;lt;cnt&amp;lt;&amp;lt;endl;\n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;h1&gt;Part
        2&lt;/h1&gt;\n\n&lt;p&gt;Compare the elements  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;c++\nint
        main() {\n    freopen(&amp;quot;inputs/input1.txt&amp;quot;, &amp;quot;r&amp;quot;,
        stdin);\n    freopen(&amp;quot;outputs/output2.txt&amp;quot;, &amp;quot;w&amp;quot;,
        stdout);\n    string tmp;\n    int cnt = 0, depth;\n    vector&amp;lt;int&amp;gt;
        depths;\n    while(getline(cin, tmp)) {\n        depth = stoi(tmp); \n        depths.push_back(depth);\n    }\n    for(int
        i=3; i&amp;lt;depths.size(); i++) {\n        cnt += (depths[i]&amp;gt;depths[i-3]);\n    }\n    cout&amp;lt;&amp;lt;cnt&amp;lt;&amp;lt;endl;\n}\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms2u4s/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms2u4s", "created":
        1638352929.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hms4agv", "id": "hms4agv", "parent_id":
        "t1_hms2u4s", "depth": 1, "children": ["hms4agv"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms3lqj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hms3lqj", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms3lqj/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638353597.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638353597.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmu74wk", "id": "hmu74wk", "parent_id":
        "t1_hms3lqj", "depth": 1, "children": ["hmu74wk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms3qzs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "k2bd-dev",
        "can_mod_post": false, "created_utc": 1638353725.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_dznisxxw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[A solution in Python](https://github.com/k2bd/advent-of-code/blob/main/src/advent_of_code/y2021/d1.py)
        focussing on writing production code, as a reference for some friends learning
        Python.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/k2bd/advent-of-code/blob/main/src/advent_of_code/y2021/d1.py\"&gt;A
        solution in Python&lt;/a&gt; focussing on writing production code, as a reference
        for some friends learning Python.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms3qzs/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms3qzs", "created": 1638353725.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hms3twz", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mstksg", "can_mod_post": false, "created_utc":
        1638353796.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 3,
        "author_fullname": "t2_5cbmr", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Like every year, i have
        my haskell solutions and reflections every day here :) https://github.com/mstksg/advent-of-code-2021\n\n\\------\n\n&amp;#x200B;\n\nAs
        a simple data processing thing, this one shines pretty well in Haskell :)\n\nAssuming
        we have a list, we can get the consecutive items with a combination of `zipWith`
        and `drop`.  Then we can just count how many pairs of items match the predicate
        (strictly increasing):\n\n    countIncreasesPart1 :: [Int] -&gt; Int\n    countIncreasesPart1
        xs = length (filter (== True) (zipWith (&lt;) xs (drop 1 xs)))\n\nYes, `filter
        (== True)` is the same as `filter id`, but it''s a bit easier to read this
        way :)\n\nRemember that if `xs` is `[2,4,6,5]`, then `drop 1 xs` is `[4,6,5]`,
        and so `zip xs (drop 1 xs)` is `[(2,4), (4,6), (6,5)]`  So `zipWith (&lt;)
        xs (drop 1 xs)` is `[True, True, False]`.  So counting all of the `True` items
        yields the right answer!\n\nPart 2 is very similar, but we need to check if
        items *three* positions apart are increasing.  That''s because for each window,
        the sum of the window is increasing if the new item gained is bigger than
        the item that was just lost. So for an example like `[3,5,6,4,7,8]`, as we
        move from `[3,5,6]` to `[5,6,4]`, we only need to check if `4` is greater
        than `3`.  So we only need to compare 4 and 3, 7 and 5, and then 8 and 6.\n\n    countIncreasesPart2
        :: [Int] -&gt; Int\n    countIncreasesPart2 xs = length (filter (== True)
        (zipWith (&lt;) xs (drop 3 xs)))\n\nWe just need to replace `drop 1 xs` with
        `drop 3 xs` to compare three-away items.\n\nAnyway the parsing in Haskell
        is straightforward, at least -- we can just do `map read . lines`, to split
        our input into lines and then map `read :: String -&gt; Int` over each line.  Ta
        dah!  Fun start to the year :)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Like every year, i have my haskell solutions and
        reflections every day here :) &lt;a href=\"https://github.com/mstksg/advent-of-code-2021\"&gt;https://github.com/mstksg/advent-of-code-2021&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;------&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;As
        a simple data processing thing, this one shines pretty well in Haskell :)&lt;/p&gt;\n\n&lt;p&gt;Assuming
        we have a list, we can get the consecutive items with a combination of &lt;code&gt;zipWith&lt;/code&gt;
        and &lt;code&gt;drop&lt;/code&gt;.  Then we can just count how many pairs
        of items match the predicate (strictly increasing):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;countIncreasesPart1
        :: [Int] -&amp;gt; Int\ncountIncreasesPart1 xs = length (filter (== True)
        (zipWith (&amp;lt;) xs (drop 1 xs)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Yes,
        &lt;code&gt;filter (== True)&lt;/code&gt; is the same as &lt;code&gt;filter
        id&lt;/code&gt;, but it&amp;#39;s a bit easier to read this way :)&lt;/p&gt;\n\n&lt;p&gt;Remember
        that if &lt;code&gt;xs&lt;/code&gt; is &lt;code&gt;[2,4,6,5]&lt;/code&gt;,
        then &lt;code&gt;drop 1 xs&lt;/code&gt; is &lt;code&gt;[4,6,5]&lt;/code&gt;,
        and so &lt;code&gt;zip xs (drop 1 xs)&lt;/code&gt; is &lt;code&gt;[(2,4),
        (4,6), (6,5)]&lt;/code&gt;  So &lt;code&gt;zipWith (&amp;lt;) xs (drop 1 xs)&lt;/code&gt;
        is &lt;code&gt;[True, True, False]&lt;/code&gt;.  So counting all of the &lt;code&gt;True&lt;/code&gt;
        items yields the right answer!&lt;/p&gt;\n\n&lt;p&gt;Part 2 is very similar,
        but we need to check if items &lt;em&gt;three&lt;/em&gt; positions apart are
        increasing.  That&amp;#39;s because for each window, the sum of the window
        is increasing if the new item gained is bigger than the item that was just
        lost. So for an example like &lt;code&gt;[3,5,6,4,7,8]&lt;/code&gt;, as we
        move from &lt;code&gt;[3,5,6]&lt;/code&gt; to &lt;code&gt;[5,6,4]&lt;/code&gt;,
        we only need to check if &lt;code&gt;4&lt;/code&gt; is greater than &lt;code&gt;3&lt;/code&gt;.  So
        we only need to compare 4 and 3, 7 and 5, and then 8 and 6.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;countIncreasesPart2
        :: [Int] -&amp;gt; Int\ncountIncreasesPart2 xs = length (filter (== True)
        (zipWith (&amp;lt;) xs (drop 3 xs)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;We
        just need to replace &lt;code&gt;drop 1 xs&lt;/code&gt; with &lt;code&gt;drop
        3 xs&lt;/code&gt; to compare three-away items.&lt;/p&gt;\n\n&lt;p&gt;Anyway
        the parsing in Haskell is straightforward, at least -- we can just do &lt;code&gt;map
        read . lines&lt;/code&gt;, to split our input into lines and then map &lt;code&gt;read
        :: String -&amp;gt; Int&lt;/code&gt; over each line.  Ta dah!  Fun start to
        the year :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms3twz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms3twz", "created":
        1638353796.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms4ewo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "red_shifter",
        "can_mod_post": false, "created_utc": 1638354294.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_n75u8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Solution in R\n\n**INPUT**\n\n    input &lt;- read.table(\"day-1-input.txt\")\n\n**PART
        1**\n\n    current &lt;- 0\n    prev &lt;- 0\n    count_increases &lt;- 0\n    for
        (i in 2:length(input$V1)){\n      current &lt;- input$V1[i]\n      prev &lt;-
        input$V1[i-1]\n      if (current&gt;prev){\n        count_increases &lt;-
        count_increases+1\n      }\n    }\n    print(count_increases)\n\n**PART 2**\n\n    depth1
        &lt;- 0\n    depth2 &lt;- 0\n    depth3 &lt;- 0\n    current_sum &lt;- 0\n    prev_sum
        &lt;- 0\n    counter &lt;- 1\n    count_increases &lt;- -1\n    while(counter&lt;=length(input$V1)-2){\n      depth1
        &lt;- input$V1[counter]\n      depth2 &lt;- input$V1[counter+1]\n      depth3
        &lt;- input$V1[counter+2]\n      current_sum &lt;- depth1+depth2+depth3\n      #print(c(prev_sum,
        current_sum))\n      if(current_sum&gt;prev_sum){\n        count_increases
        &lt;- count_increases+1\n      }\n      prev_sum &lt;- current_sum\n      counter
        &lt;- counter+1\n    }\n    print(count_increases)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Solution in R&lt;/h1&gt;\n\n&lt;p&gt;&lt;strong&gt;INPUT&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input
        &amp;lt;- read.table(&amp;quot;day-1-input.txt&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;PART
        1&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;current &amp;lt;- 0\nprev
        &amp;lt;- 0\ncount_increases &amp;lt;- 0\nfor (i in 2:length(input$V1)){\n  current
        &amp;lt;- input$V1[i]\n  prev &amp;lt;- input$V1[i-1]\n  if (current&amp;gt;prev){\n    count_increases
        &amp;lt;- count_increases+1\n  }\n}\nprint(count_increases)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;PART
        2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depth1 &amp;lt;- 0\ndepth2
        &amp;lt;- 0\ndepth3 &amp;lt;- 0\ncurrent_sum &amp;lt;- 0\nprev_sum &amp;lt;-
        0\ncounter &amp;lt;- 1\ncount_increases &amp;lt;- -1\nwhile(counter&amp;lt;=length(input$V1)-2){\n  depth1
        &amp;lt;- input$V1[counter]\n  depth2 &amp;lt;- input$V1[counter+1]\n  depth3
        &amp;lt;- input$V1[counter+2]\n  current_sum &amp;lt;- depth1+depth2+depth3\n  #print(c(prev_sum,
        current_sum))\n  if(current_sum&amp;gt;prev_sum){\n    count_increases &amp;lt;-
        count_increases+1\n  }\n  prev_sum &amp;lt;- current_sum\n  counter &amp;lt;-
        counter+1\n}\nprint(count_increases)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms4ewo/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms4ewo", "created":
        1638354294.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms4lux",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "artesea",
        "can_mod_post": false, "created_utc": 1638354458.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_c2pur", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## PHP\n\nTrying to make sure that I''m putting stuff on GitHub\n\n[https://github.com/artesea/advent-of-code/blob/main/2021/01a.php](https://github.com/artesea/advent-of-code/blob/main/2021/01a.php)\n\n[https://github.com/artesea/advent-of-code/blob/main/2021/01b.php](https://github.com/artesea/advent-of-code/blob/main/2021/01b.php)\n\nMore
        code in my default wrapper to read the text file and work out the runtime
        than the actual puzzle.\n\nAlso spent too long going, pretty sure I just need
        to work out the difference with an interval of 3 for part 2 instead of summing
        each window. This game makes me doubt basic maths.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h2&gt;PHP&lt;/h2&gt;\n\n&lt;p&gt;Trying to make sure that
        I&amp;#39;m putting stuff on GitHub&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/artesea/advent-of-code/blob/main/2021/01a.php\"&gt;https://github.com/artesea/advent-of-code/blob/main/2021/01a.php&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/artesea/advent-of-code/blob/main/2021/01b.php\"&gt;https://github.com/artesea/advent-of-code/blob/main/2021/01b.php&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;More
        code in my default wrapper to read the text file and work out the runtime
        than the actual puzzle.&lt;/p&gt;\n\n&lt;p&gt;Also spent too long going, pretty
        sure I just need to work out the difference with an interval of 3 for part
        2 instead of summing each window. This game makes me doubt basic maths.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms4lux/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms4lux", "created":
        1638354458.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638395812.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms4w5y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "zedrdave",
        "can_mod_post": false, "created_utc": 1638354698.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4zos4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First ever **Rust** attempt. Welcoming any suggestions on how to make it
        more idiomatic/better.\n(I did get a bit lazy with the types\u2026 guessing
        there''s a cleaner way to do that)\n\n```\n    \n    use itertools::izip;\n    use
        std::fs;\n\n    fn read_ints(filename: &amp;str) -&gt; Vec&lt;u32&gt; {\n        fs::read_to_string(filename)\n            .expect(\"Something
        went wrong reading input\")\n            .split(\"\\n\")\n            .map(|x|
        x.parse::&lt;u32&gt;().unwrap())\n            .collect::&lt;Vec&lt;u32&gt;&gt;()\n    }\n\n    fn
        count_increases(data: &amp;Vec&lt;u32&gt;) -&gt; u32 {\n        data.iter()\n            .zip(data[1..].iter())\n            .map(|(a,
        b)| (b &gt; a) as u32)\n            .sum::&lt;u32&gt;()\n    }\n\n    fn main()
        {\n        let data = read_ints(\"../input.txt\");\n        println!(\"Part
        1: {}\", count_increases(&amp;data));\n\n        let triplets = izip!(data.iter(),
        data[1..].iter(), data[2..].iter())\n            .map(|(a, b, c)| a + b +
        c)\n            .collect::&lt;Vec&lt;u32&gt;&gt;();\n        println!(\"Part
        2: {:?}\", count_increases(&amp;triplets))\n    }\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;First ever &lt;strong&gt;Rust&lt;/strong&gt; attempt.
        Welcoming any suggestions on how to make it more idiomatic/better.\n(I did
        get a bit lazy with the types\u2026 guessing there&amp;#39;s a cleaner way
        to do that)&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        itertools::izip;\nuse std::fs;\n\nfn read_ints(filename: &amp;amp;str) -&amp;gt;
        Vec&amp;lt;u32&amp;gt; {\n    fs::read_to_string(filename)\n        .expect(&amp;quot;Something
        went wrong reading input&amp;quot;)\n        .split(&amp;quot;\\n&amp;quot;)\n        .map(|x|
        x.parse::&amp;lt;u32&amp;gt;().unwrap())\n        .collect::&amp;lt;Vec&amp;lt;u32&amp;gt;&amp;gt;()\n}\n\nfn
        count_increases(data: &amp;amp;Vec&amp;lt;u32&amp;gt;) -&amp;gt; u32 {\n    data.iter()\n        .zip(data[1..].iter())\n        .map(|(a,
        b)| (b &amp;gt; a) as u32)\n        .sum::&amp;lt;u32&amp;gt;()\n}\n\nfn main()
        {\n    let data = read_ints(&amp;quot;../input.txt&amp;quot;);\n    println!(&amp;quot;Part
        1: {}&amp;quot;, count_increases(&amp;amp;data));\n\n    let triplets = izip!(data.iter(),
        data[1..].iter(), data[2..].iter())\n        .map(|(a, b, c)| a + b + c)\n        .collect::&amp;lt;Vec&amp;lt;u32&amp;gt;&amp;gt;();\n    println!(&amp;quot;Part
        2: {:?}&amp;quot;, count_increases(&amp;amp;triplets))\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms4w5y/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms4w5y", "created":
        1638354698.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hms57h9", "id": "hms57h9", "parent_id":
        "t1_hms4w5y", "depth": 1, "children": ["hms57h9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms50ta",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "RadiantPurpose3028",
        "can_mod_post": false, "created_utc": 1638354806.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_6wdsrm5j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Dataweave (Mulesoft Scripting Language)\n\nTry it yourself at [https://developer.mulesoft.com/learn/dataweave/](https://developer.mulesoft.com/learn/dataweave/)\n\nPart1:\n\n`%dw
        2.0`\n\n`output application/json`\n\n`var splitted = payload splitBy ''\\n''
        map ($ as Number)`\n\n`var results = splitted map (value, key) -&gt; {`\n\n`increase:
        if (value &gt; (splitted[key-1] default 5000)) 1 else 0,`\n\n`field: value`\n\n`}`\n\n`---`\n\n`sum(results.*increase)`\n\nPart
        2:\n\n`%dw 2.0`\n\n`output application/json`\n\n`var splitted = payload splitBy
        ''\\n'' map ($ as Number)`\n\n`var results = splitted map (value, key) -&gt;
        {`\n\n`increase: if ((value + (splitted[key+1] default 0) + (splitted[key+2]
        default 0)) &gt; (splitted[key-1] + value + (splitted[key+1] default 0)))
        1 else 0`\n\n`}`\n\n`---`\n\n`sum(results.*increase)`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Dataweave (Mulesoft Scripting Language)&lt;/h1&gt;\n\n&lt;p&gt;Try
        it yourself at &lt;a href=\"https://developer.mulesoft.com/learn/dataweave/\"&gt;https://developer.mulesoft.com/learn/dataweave/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part1:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;%dw
        2.0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;output application/json&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var
        splitted = payload splitBy &amp;#39;\\n&amp;#39; map ($ as Number)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var
        results = splitted map (value, key) -&amp;gt; {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;increase:
        if (value &amp;gt; (splitted[key-1] default 5000)) 1 else 0,&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;field:
        value&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;---&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sum(results.*increase)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;%dw 2.0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;output
        application/json&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var splitted
        = payload splitBy &amp;#39;\\n&amp;#39; map ($ as Number)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var
        results = splitted map (value, key) -&amp;gt; {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;increase:
        if ((value + (splitted[key+1] default 0) + (splitted[key+2] default 0)) &amp;gt;
        (splitted[key-1] + value + (splitted[key+1] default 0))) 1 else 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;---&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sum(results.*increase)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms50ta/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms50ta", "created":
        1638354806.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638356191.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms5s4x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BastienDussap",
        "can_mod_post": false, "created_utc": 1638355435.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_f6vopubz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My (modest) solution in Python](https://gitlab.com/bastiendussapapb/adventofcode-2021/-/blob/main/Notebook/day1.ipynb).
        \n\nI hid the import function because it''s not very interesting.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://gitlab.com/bastiendussapapb/adventofcode-2021/-/blob/main/Notebook/day1.ipynb\"&gt;My
        (modest) solution in Python&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;I hid the import
        function because it&amp;#39;s not very interesting.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms5s4x/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms5s4x", "created":
        1638355435.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms6jxx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "cetttbycettt",
        "can_mod_post": false, "created_utc": 1638356073.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5ahna3lm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "only one line for both parts in R  \n`sapply(c(1, 3), \\(k) sum(diff(read.table(\"day01.txt\")[,1],
        lag = k) &gt; 0))`", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;only
        one line for both parts in R&lt;br/&gt;\n&lt;code&gt;sapply(c(1, 3), \\(k)
        sum(diff(read.table(&amp;quot;day01.txt&amp;quot;)[,1], lag = k) &amp;gt;
        0))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms6jxx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms6jxx", "created":
        1638356073.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hn21foj", "id": "hn21foj", "parent_id":
        "t1_hms6jxx", "depth": 1, "children": ["hn21foj", "hn218x7"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms6rw6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hbunk",
        "can_mod_post": false, "created_utc": 1638356256.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_h0wtdvrc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin:\n\n    fun solveDay01Part1(input: List&lt;String&gt;): Int = input\n        .map
        { it.toInt() }\n        .countDepthIncreases()\n    \n    fun solveDay01Part2(input:
        List&lt;String&gt;): Int = input\n        .map { it.toInt() }\n        .sumNeighbours(2)\n        .countDepthIncreases()\n    \n    private
        fun List&lt;Int&gt;.sumNeighbours(neighbours: Int): List&lt;Int&gt; =\n        List(size)
        { index -&gt;\n            subList(index, min(index + neighbours + 1, size)).sum()\n        }\n    \n    private
        fun List&lt;Int&gt;.countDepthIncreases(): Int =\n        mapIndexed { index,
        value -&gt;\n            if (index != 0 &amp;&amp; get(index - 1) &lt; value)
        1 else 0\n        }.sum()", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun
        solveDay01Part1(input: List&amp;lt;String&amp;gt;): Int = input\n    .map
        { it.toInt() }\n    .countDepthIncreases()\n\nfun solveDay01Part2(input: List&amp;lt;String&amp;gt;):
        Int = input\n    .map { it.toInt() }\n    .sumNeighbours(2)\n    .countDepthIncreases()\n\nprivate
        fun List&amp;lt;Int&amp;gt;.sumNeighbours(neighbours: Int): List&amp;lt;Int&amp;gt;
        =\n    List(size) { index -&amp;gt;\n        subList(index, min(index + neighbours
        + 1, size)).sum()\n    }\n\nprivate fun List&amp;lt;Int&amp;gt;.countDepthIncreases():
        Int =\n    mapIndexed { index, value -&amp;gt;\n        if (index != 0 &amp;amp;&amp;amp;
        get(index - 1) &amp;lt; value) 1 else 0\n    }.sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms6rw6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms6rw6", "created":
        1638356256.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms7gau",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rv3392",
        "can_mod_post": false, "created_utc": 1638356797.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_rl5un", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust: [https://github.com/rv3392/advent-of-code-2021/blob/master/src/day1.rs](https://github.com/rv3392/advent-of-code-2021/blob/master/src/day1.rs)\n\nNot
        particularly short or efficient (or idiomatic) since I''m still learning rust
        and this is literally my first rust code. Any suggestions would be appreciated!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust: &lt;a href=\"https://github.com/rv3392/advent-of-code-2021/blob/master/src/day1.rs\"&gt;https://github.com/rv3392/advent-of-code-2021/blob/master/src/day1.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Not
        particularly short or efficient (or idiomatic) since I&amp;#39;m still learning
        rust and this is literally my first rust code. Any suggestions would be appreciated!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms7gau/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms7gau", "created":
        1638356797.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms8ikj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "cptwunderlich",
        "can_mod_post": false, "created_utc": 1638357631.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_d2jrb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++ but trying to use std algorithms. Part 1 is nice, but part 2 is a bit
        ugly. Any suggestions on how to do a sliding window with standard algos?\n\n    int
        count_increases(vec_input_it begin, vec_input_it end) {\n        return std::transform_reduce(begin,
        std::prev(end),\n            std::next(begin), 0,\n            std::plus&lt;&gt;(),\n            [](int
        l, int r) { return (l &lt; r) ? 1 : 0; });\n    }\n\n    int main() {\n\n        std::vector&lt;int&gt;
        inp;\n        read_input(inp);\n\n        int res1 = count_increases(inp.cbegin(),
        inp.cend());\n\n        std::cout &lt;&lt; \"Part 1: \" &lt;&lt; res1 &lt;&lt;
        ''\\n'';\n\n        // Part 2\n\n        std::vector&lt;int&gt; inp_cpy =
        inp;\n\n        // Sliding window: a + b\n        std::transform(inp.cbegin(),
        --(--inp.cend()),\n            std::next(inp_cpy.cbegin()), inp_cpy.begin(),
        std::plus&lt;&gt;());\n\n        // Last element invalid\n        inp_cpy.pop_back();\n\n        //
        Sliding window: (a + b) + c\n        std::transform(++(++inp.cbegin()), inp.cend(),\n            inp_cpy.cbegin(),
        inp_cpy.begin(), std::plus&lt;&gt;());\n\n        // Last element invalid\n        inp_cpy.pop_back();\n\n        int
        res2 = count_increases(inp_cpy.cbegin(), inp_cpy.cend());\n\n        std::cout
        &lt;&lt; \"Part 2: \" &lt;&lt; res2 &lt;&lt; ''\\n'';\n\n        return 0;\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++ but trying to use
        std algorithms. Part 1 is nice, but part 2 is a bit ugly. Any suggestions
        on how to do a sliding window with standard algos?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        count_increases(vec_input_it begin, vec_input_it end) {\n    return std::transform_reduce(begin,
        std::prev(end),\n        std::next(begin), 0,\n        std::plus&amp;lt;&amp;gt;(),\n        [](int
        l, int r) { return (l &amp;lt; r) ? 1 : 0; });\n}\n\nint main() {\n\n    std::vector&amp;lt;int&amp;gt;
        inp;\n    read_input(inp);\n\n    int res1 = count_increases(inp.cbegin(),
        inp.cend());\n\n    std::cout &amp;lt;&amp;lt; &amp;quot;Part 1: &amp;quot;
        &amp;lt;&amp;lt; res1 &amp;lt;&amp;lt; &amp;#39;\\n&amp;#39;;\n\n    // Part
        2\n\n    std::vector&amp;lt;int&amp;gt; inp_cpy = inp;\n\n    // Sliding window:
        a + b\n    std::transform(inp.cbegin(), --(--inp.cend()),\n        std::next(inp_cpy.cbegin()),
        inp_cpy.begin(), std::plus&amp;lt;&amp;gt;());\n\n    // Last element invalid\n    inp_cpy.pop_back();\n\n    //
        Sliding window: (a + b) + c\n    std::transform(++(++inp.cbegin()), inp.cend(),\n        inp_cpy.cbegin(),
        inp_cpy.begin(), std::plus&amp;lt;&amp;gt;());\n\n    // Last element invalid\n    inp_cpy.pop_back();\n\n    int
        res2 = count_increases(inp_cpy.cbegin(), inp_cpy.cend());\n\n    std::cout
        &amp;lt;&amp;lt; &amp;quot;Part 2: &amp;quot; &amp;lt;&amp;lt; res2 &amp;lt;&amp;lt;
        &amp;#39;\\n&amp;#39;;\n\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms8ikj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms8ikj", "created":
        1638357631.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hms9tbw", "id": "hms9tbw", "parent_id":
        "t1_hms8ikj", "depth": 1, "children": ["hms9tbw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms8odm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "0x5ubt13",
        "can_mod_post": false, "created_utc": 1638357755.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_h41x0t7s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "It makes sense my first contribution to Reddit is a humble python3 solution
        to the first day of AoC :)\n\n[paste](https://topaz.github.io/paste/#XQAAAQDxAgAAAAAAAAARiEJHiiMzw3cPM/1YZx9ePvs39Hy5ScZF80SiHJ6YHwbeWmmhDQS9hig8ci4pLSA+05XdMUy7g66LwzN58IYwz1Ohg0CTEsLOPbKAU7ery30Na+TucjkBfwmkcFbReJ5+qZH7Dr7z+/zkep3ylnhJj3rVodDqMaVbELriiFpKzGj43DgjZDVpuBjWRCoIBGlJ3kKx7OKxj75fPM/MUxY8kYORtj5EEagKQ+JeP0jFdm3jc7G1L/tgxHGg4wJwgw8N/hnxgeKqkcPCrB+u/so2BoUm5yZdH2LqDHJYBjaaaVgWm6D6ujkRe3YLKzN0jX0ATOjgo6PJt3CJJoxryjnyz65a1SIororf53VY4NJcDNdqSFiSg9sGGZtBZ6KBZF7VsTJWoHeBfyxfREKoxbMaiIZ/XjSeKFt78YKQdr1JFtLcWDFU4/iKM/jZzR+bPEJErqfu0UsvWzFKLiqO//DH2JU=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It makes sense my first
        contribution to Reddit is a humble python3 solution to the first day of AoC
        :)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDxAgAAAAAAAAARiEJHiiMzw3cPM/1YZx9ePvs39Hy5ScZF80SiHJ6YHwbeWmmhDQS9hig8ci4pLSA+05XdMUy7g66LwzN58IYwz1Ohg0CTEsLOPbKAU7ery30Na+TucjkBfwmkcFbReJ5+qZH7Dr7z+/zkep3ylnhJj3rVodDqMaVbELriiFpKzGj43DgjZDVpuBjWRCoIBGlJ3kKx7OKxj75fPM/MUxY8kYORtj5EEagKQ+JeP0jFdm3jc7G1L/tgxHGg4wJwgw8N/hnxgeKqkcPCrB+u/so2BoUm5yZdH2LqDHJYBjaaaVgWm6D6ujkRe3YLKzN0jX0ATOjgo6PJt3CJJoxryjnyz65a1SIororf53VY4NJcDNdqSFiSg9sGGZtBZ6KBZF7VsTJWoHeBfyxfREKoxbMaiIZ/XjSeKFt78YKQdr1JFtLcWDFU4/iKM/jZzR+bPEJErqfu0UsvWzFKLiqO//DH2JU=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms8odm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms8odm", "created":
        1638357755.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms8x51",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WakiMiko",
        "can_mod_post": false, "created_utc": 1638357939.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ccp4i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust \n\n    fn main() {\n        let depths: Vec&lt;usize&gt; = include_str!(\"../input\")\n            .lines()\n            .map(|l|
        l.parse().unwrap())\n            .collect();\n\n        println!(\n            \"Part
        1: {}\\nPart 2: {}\",\n            increments(&amp;depths, 1),\n            increments(&amp;depths,
        3)\n        );\n    }\n\n    fn increments(depths: &amp;[usize], window: usize)
        -&gt; usize {\n        depths\n            .iter()\n            .zip(depths[window..].iter())\n            .filter(|(a,
        b)| a &lt; b)\n            .count()\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rust &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn main()
        {\n    let depths: Vec&amp;lt;usize&amp;gt; = include_str!(&amp;quot;../input&amp;quot;)\n        .lines()\n        .map(|l|
        l.parse().unwrap())\n        .collect();\n\n    println!(\n        &amp;quot;Part
        1: {}\\nPart 2: {}&amp;quot;,\n        increments(&amp;amp;depths, 1),\n        increments(&amp;amp;depths,
        3)\n    );\n}\n\nfn increments(depths: &amp;amp;[usize], window: usize) -&amp;gt;
        usize {\n    depths\n        .iter()\n        .zip(depths[window..].iter())\n        .filter(|(a,
        b)| a &amp;lt; b)\n        .count()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms8x51/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms8x51", "created":
        1638357939.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms98ik",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SDDuk",
        "can_mod_post": false, "created_utc": 1638358180.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_8ceqv1wx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust:\n\n```rust\nfn main() -&gt; anyhow::Result&lt;()&gt; {\n    let s:
        Vec&lt;_&gt; = include_str!(\"input-01.txt\")\n        .split(''\\n'')\n        .filter_map(|s|
        s.parse::&lt;i64&gt;().ok())\n        .collect();\n\n    let part1 = s.iter().zip(s.iter().skip(1))\n        .map(|(a,
        b)| b &gt; a)\n        .filter(|&amp;x|x)\n        .count();\n\n    println!(\"Part
        1: {:?}\", &amp;part1);\n\n    let part2 = s.iter().zip(s.iter().skip(3))\n        .map(|(a,
        b)| b &gt; a)\n        .filter(|&amp;x|x)\n        .count();\n\n    println!(\"Part
        2: {:?}\", &amp;part2);\n\n    Ok(())\n}\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rust:&lt;/p&gt;\n\n&lt;p&gt;```rust\nfn main() -&amp;gt;
        anyhow::Result&amp;lt;()&amp;gt; {\n    let s: Vec&amp;lt;_&amp;gt; = include_str!(&amp;quot;input-01.txt&amp;quot;)\n        .split(&amp;#39;\\n&amp;#39;)\n        .filter_map(|s|
        s.parse::&amp;lt;i64&amp;gt;().ok())\n        .collect();&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        part1 = s.iter().zip(s.iter().skip(1))\n    .map(|(a, b)| b &amp;gt; a)\n    .filter(|&amp;amp;x|x)\n    .count();\n\nprintln!(&amp;quot;Part
        1: {:?}&amp;quot;, &amp;amp;part1);\n\nlet part2 = s.iter().zip(s.iter().skip(3))\n    .map(|(a,
        b)| b &amp;gt; a)\n    .filter(|&amp;amp;x|x)\n    .count();\n\nprintln!(&amp;quot;Part
        2: {:?}&amp;quot;, &amp;amp;part2);\n\nOk(())\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms98ik/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms98ik", "created":
        1638358180.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsanmv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Gnidleif",
        "can_mod_post": false, "created_utc": 1638359223.0, "send_replies": true,
        "parent_id": "t1_hms98ik", "score": 5, "author_fullname": "t2_xdr49", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hi there! Your solution is way neater than mine, but I still have to say
        something:\n\nInstead of using .split(''\\\\n'') on the string, wouldn''t
        .lines() work just as well?\n\nAlso, instead of using .map().filter() couldn''t
        you just use filter?", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hi
        there! Your solution is way neater than mine, but I still have to say something:&lt;/p&gt;\n\n&lt;p&gt;Instead
        of using .split(&amp;#39;\\n&amp;#39;) on the string, wouldn&amp;#39;t .lines()
        work just as well?&lt;/p&gt;\n\n&lt;p&gt;Also, instead of using .map().filter()
        couldn&amp;#39;t you just use filter?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsanmv/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsanmv", "created": 1638359223.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_hmslbuq", "id": "hmslbuq", "parent_id": "t1_hmsanmv", "depth": 2, "children":
        ["hmslbuq"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsfe2z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hms98ik", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmsfe2z", "collapsed": true, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsfe2z/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638362423.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638362423.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmslgui", "id": "hmslgui", "parent_id":
        "t1_hmsfe2z", "depth": 2, "children": ["hmslgui"]}}, {"kind": "more", "data":
        {"count": 2, "name": "t1_hmsck4v", "id": "hmsck4v", "parent_id": "t1_hms98ik",
        "depth": 1, "children": ["hmsck4v", "hmw220t"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms9kby",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JarnePl",
        "can_mod_post": false, "created_utc": 1638358428.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4ex8ii08", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Javascript:\n\n[https://github.com/d1ff1cult0/aoc2021/blob/main/Day1/Day1.js](https://github.com/d1ff1cult0/aoc2021/blob/main/Day1/Day1.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Javascript:&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/d1ff1cult0/aoc2021/blob/main/Day1/Day1.js\"&gt;https://github.com/d1ff1cult0/aoc2021/blob/main/Day1/Day1.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms9kby/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms9kby", "created":
        1638358428.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 10, "name": "t1_hmsbknz", "id": "hmsbknz", "parent_id":
        "t1_hms9kby", "depth": 1, "children": ["hmsbknz", "hmsbtq0"]}}, {"kind": "more",
        "data": {"count": 570, "name": "t1_hmsa0hn", "id": "hmsa0hn", "parent_id":
        "t3_r66vow", "depth": 0, "children": ["hmsa0hn", "hmsaolj", "hmsc6zx", "hmsbmj1",
        "hmsd2vf", "hmse1bp", "hmsebbs", "hmsmzua", "hmscvvl", "hmshy76", "hmsd95d",
        "hmsf2pc", "hmshtm9", "hmsi1lb", "hmsr243", "hmsr7zw", "hmsr3as", "hmsnmhw",
        "hmsrqka", "hmsj2yt", "hmso78b", "hmshxa7", "hmso475", "hmsioan", "hmsszew",
        "hmss6je", "hmsll5m", "hmt7ejw", "hmtb264", "hmtomhu", "hmssgwx", "hmsrb47",
        "hmu51kx", "hmsr79d", "hmt2qvg", "hmt5dgk", "hmsogj4", "hmsvx7j", "hmst5oy",
        "hmtyhqw", "hmt2d0z", "hmtcewm", "hmswer6", "hmtfxz8", "hmsoygk", "hmssbuw",
        "hmsqyxj", "hmsit0y", "hmsvczl", "hmsvo2v", "hmt02z0", "hmt8pge", "hmt9f7j",
        "hmtp273", "hmsr9et", "hmu172l", "hmukafq", "hmuuxtj", "hmtpxvo", "hmw4ek2",
        "hmt7y0e", "hmt42bv", "hmvp1xr", "hmtqtlx", "hmwnrhk", "hmvszqc", "hmtqk3y",
        "hmvae71", "hmyfdr9", "hmtimr9", "hmteqky", "hmtouj5", "hmsst3c", "hmtf0lj",
        "hmsw7qt", "hmtqurm", "hmtith2", "hmwgacu", "hmu9qut", "hmtvyoj", "hmu2gx2",
        "hmumga1", "hmtpgu7", "hmt833f", "hmuox3j", "hmtw0cl", "hmuc4hm", "hmu41kj",
        "hmsrgeu", "hmvttxb", "hmu47y6", "hmt1dsj", "hmtb5yc", "hmsumbu", "hmu2ehy",
        "hmt84zy", "hmtbcpy", "hmtfafr", "hmt0d6b", "hmu297u", "hmtytou", "hmvxl2c",
        "hmx7ocb", "hms028u", "hmtzrre", "hmur5u6", "hmt0ynh", "hmu7mkh", "hmuxfuh",
        "hmwc3gl", "hmv7e6n", "hmw42an", "hmretnt", "hmveoia", "hmsxnbq", "hmrfr8r",
        "hmrfld2", "hmwtwoc", "hmuy2yb", "hmu7i0g", "hmwegvt", "hmwtk1w", "hmrf9ck",
        "hms2it8", "hmrf2g0", "hmwtvl7", "hmwxwzb", "hms93us", "hmua6gz", "hmxrx3s",
        "hms8zqs", "hmusj18", "hmrzgee", "hmukph5", "hmtteup", "hmygsqt", "hmunt9t",
        "hmvcmtf", "hmtypln", "hms9me8", "hmuwc2v", "hmvg97r", "hmtou21", "hmuz7ba",
        "hmtfl5k", "hmt3c9q", "hmxm0oa", "hmtublx", "hmupg0c", "hmuf6r8", "hmrhr14",
        "hmrh3m6", "hmupha0", "hmve44r", "hmtdkt1", "hmunovu", "hmum4io", "hmreik6",
        "hmvq4sq", "hmtskg5", "hmu6yri", "hmunpx2", "hmrezlc", "hmvjxdh", "hmvo3y7",
        "hmx8h5l", "hmuu8ya", "hmul9ls", "hmshy8w", "hmuwsn3", "hmxgs6y", "hmtkx5u",
        "hmugkix", "hmubq5y", "hmvoa64", "hmsmh1y", "hmvu8v1", "hmtou73", "hmw9ssu",
        "hmsnokd", "hmwwi7l", "hmunk6r", "hmreons", "hmtil9k", "hmu2rw9", "hmtl4l8",
        "hmu7g9d", "hmu4r0v", "hmss2k9", "hmvvm80", "hmuvznj", "hmrf87m", "hmwpkjo",
        "hmtxaje", "hmv7xhs", "hmse2jo", "hmul0m8", "hmvh953", "hmti8v3", "hmu9yeq",
        "hmv8bqt", "hmv395f", "hms0m82", "hmtl0p6", "hmvqe6x", "hmsrw4q", "hmv8xhi",
        "hmvqboh", "hmuszg8", "hmwxxf7", "hmrzrtr", "hmrz2jn", "hmwdb3a", "hms6qq4",
        "hms0ovt", "hmtp9ng", "hmwx4lt", "hmvy97q", "hmxdpt3", "hmrfuew", "hmw8zxm",
        "hms92lp", "hmy3con", "hmy90co", "hmswb9a", "hmuijjn", "hmul1w0", "hmw21oo",
        "hms8upn", "hmvcobg", "hmtckwf", "hmriplw", "hmvnyic", "hmt5mu9", "hms2tdh",
        "hmy9ke6", "hmxa298", "hmx74kk", "hmuy7px", "hmuc4p0", "hms97z3", "hmxf61e",
        "hmts3v2", "hms0h5d", "hmrxxk9", "hmrfhj6", "hmrz22v", "hmvhiw7", "hmvd24s",
        "hmuxks0", "hmurtrn", "hmrf0gg", "hmtpdh1", "hmrr8s5", "hmsthqs", "hmvn98k",
        "hmrfvru", "hmu2d91", "hmw1jxb", "hmsdp0m", "hmtbaw0", "hms9w78", "hmvwuer",
        "hms8x4k", "hmy5y2j", "hmvyzz7", "hmupvsh", "hmris2x", "hmtlqdt", "hmy32s1",
        "hmtkjc8", "hmx4oh4", "hmvqsha", "hmucq9b", "hmva7zl", "hmrklsj", "hmsic35",
        "hmvwtzm", "hmrel8t", "hmren52", "hmxa4gk", "hmtnoc6", "hmtrv9z", "hmspb17",
        "hmrks2m", "hmuqjav", "hmut6fx", "hmvffrj", "hmuvxcd", "hmrhcqc", "hmuvltl",
        "hmy98ot", "hmwg4mh", "hmvwd6n", "hmrf0j6", "hmurivu", "hmvd82d", "hmto2mk",
        "hmu9x7q", "hmrfa3v", "hmrt2sw", "hmsipx1", "hmvbdu3", "hmuqc8p", "hmtx4jg",
        "hmwk3gr", "hmt4tjc", "hmy8v67", "hmrn1qi", "hms9kem", "hmuu15c", "hmxn3xv",
        "hmsnt19", "hmwb2ra", "hmuwdqz", "hmubyyr", "hmux6rf", "hmv06au", "hmwn65l",
        "hmsqpii", "hmuxrtd", "hmuwikk", "hmx4u0j", "hmubzlt", "hmry7u5"]}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmrfj4u"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:19 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:19 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=gCgBjsdz1HrBEB9KVB; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:19 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmsa0hn,hmsaolj,hmsc6zx,hmsbmj1,hmsd2vf,hmse1bp,hmsebbs,hmsmzua,hmscvvl,hmshy76,hmsd95d,hmsf2pc,hmshtm9,hmsi1lb,hmsr243,hmsr7zw,hmsr3as,hmsnmhw,hmsrqka,hmsj2yt,hmso78b,hmshxa7,hmso475,hmsioan,hmsszew,hmss6je,hmsll5m,hmt7ejw,hmtb264,hmtomhu,hmssgwx,hmsrb47,hmu51kx,hmsr79d,hmt2qvg,hmt5dgk,hmsogj4,hmsvx7j,hmst5oy,hmtyhqw,hmt2d0z,hmtcewm,hmswer6,hmtfxz8,hmsoygk,hmssbuw,hmsqyxj,hmsit0y,hmsvczl,hmsvo2v,hmt02z0,hmt8pge,hmt9f7j,hmtp273,hmsr9et,hmu172l,hmukafq,hmuuxtj,hmtpxvo,hmw4ek2,hmt7y0e,hmt42bv,hmvp1xr,hmtqtlx,hmwnrhk,hmvszqc,hmtqk3y,hmvae71,hmyfdr9,hmtimr9,hmteqky,hmtouj5,hmsst3c,hmtf0lj,hmsw7qt,hmtqurm,hmtith2,hmwgacu,hmu9qut,hmtvyoj,hmu2gx2,hmumga1,hmtpgu7,hmt833f,hmuox3j,hmtw0cl,hmuc4hm,hmu41kj,hmsrgeu,hmvttxb,hmu47y6,hmt1dsj,hmtb5yc,hmsumbu,hmu2ehy,hmt84zy,hmtbcpy,hmtfafr,hmt0d6b,hmu297u,hmtytou,hmvxl2c,hmx7ocb,hms028u,hmtzrre,hmur5u6,hmt0ynh,hmu7mkh,hmuxfuh,hmwc3gl,hmv7e6n,hmw42an,hmretnt,hmveoia,hmsxnbq,hmrfr8r,hmrfld2,hmwtwoc,hmuy2yb,hmu7i0g,hmwegvt,hmwtk1w,hmrf9ck,hms2it8,hmrf2g0,hmwtvl7,hmwxwzb,hms93us,hmua6gz,hmxrx3s,hms8zqs,hmusj18,hmrzgee,hmukph5,hmtteup,hmygsqt,hmunt9t,hmvcmtf,hmtypln,hms9me8,hmuwc2v,hmvg97r,hmtou21,hmuz7ba,hmtfl5k,hmt3c9q,hmxm0oa,hmtublx,hmupg0c,hmuf6r8,hmrhr14,hmrh3m6,hmupha0,hmve44r,hmtdkt1,hmunovu,hmum4io,hmreik6,hmvq4sq,hmtskg5,hmu6yri,hmunpx2,hmrezlc,hmvjxdh,hmvo3y7,hmx8h5l,hmuu8ya,hmul9ls,hmshy8w,hmuwsn3,hmxgs6y,hmtkx5u,hmugkix,hmubq5y,hmvoa64,hmsmh1y,hmvu8v1,hmtou73,hmw9ssu,hmsnokd,hmwwi7l,hmunk6r,hmreons,hmtil9k,hmu2rw9,hmtl4l8,hmu7g9d,hmu4r0v,hmss2k9,hmvvm80,hmuvznj,hmrf87m,hmwpkjo,hmtxaje,hmv7xhs,hmse2jo,hmul0m8,hmvh953,hmti8v3,hmu9yeq,hmv8bqt,hmv395f,hms0m82,hmtl0p6,hmvqe6x,hmsrw4q,hmv8xhi,hmvqboh,hmuszg8,hmwxxf7,hmrzrtr,hmrz2jn,hmwdb3a,hms6qq4,hms0ovt,hmtp9ng,hmwx4lt,hmvy97q,hmxdpt3,hmrfuew,hmw8zxm,hms92lp,hmy3con,hmy90co,hmswb9a,hmuijjn,hmul1w0,hmw21oo,hms8upn,hmvcobg,hmtckwf,hmriplw,hmvnyic,hmt5mu9,hms2tdh,hmy9ke6,hmxa298,hmx74kk,hmuy7px,hmuc4p0,hms97z3,hmxf61e,hmts3v2,hms0h5d,hmrxxk9,hmrfhj6,hmrz22v,hmvhiw7,hmvd24s,hmuxks0,hmurtrn,hmrf0gg,hmtpdh1,hmrr8s5,hmsthqs,hmvn98k,hmrfvru,hmu2d91,hmw1jxb,hmsdp0m,hmtbaw0,hms9w78,hmvwuer,hms8x4k,hmy5y2j,hmvyzz7,hmupvsh,hmris2x,hmtlqdt,hmy32s1,hmtkjc8,hmx4oh4,hmvqsha,hmucq9b,hmva7zl,hmrklsj,hmsic35,hmvwtzm,hmrel8t,hmren52,hmxa4gk,hmtnoc6,hmtrv9z,hmspb17,hmrks2m,hmuqjav,hmut6fx,hmvffrj,hmuvxcd,hmrhcqc,hmuvltl,hmy98ot,hmwg4mh,hmvwd6n,hmrf0j6,hmurivu,hmvd82d,hmto2mk,hmu9x7q,hmrfa3v,hmrt2sw,hmsipx1,hmvbdu3,hmuqc8p,hmtx4jg,hmwk3gr,hmt4tjc,hmy8v67,hmrn1qi,hms9kem,hmuu15c,hmxn3xv,hmsnt19,hmwb2ra,hmuwdqz,hmubyyr,hmux6rf,hmv06au,hmwn65l,hmsqpii,hmuxrtd,hmuwikk,hmx4u0j,hmubzlt,hmry7u5
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '37568'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg62yrme.2.1741472959833.Z0FBQUFBQm56TVRBV25DeUNsQ2xEbWJvbFg0Z1RUSTRjMUo4SHNqZWEwSFBIWFNTdmlqNk5jNWtSc01majlRYkUxc2pma3FIV2ZNVF80QU5DSEJpWlhIejM4NTJzbU5QUm50YWFaeUVUcW1jUDdHUXN1ZzI1RjFNTVZTbHdwdVVrTDZhV2VXdktMWEU;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:20
        GMT; secure, session_tracker=qhdgmgmcomqiqpkpcn.0.1741472959846.Z0FBQUFBQm56TVRBb0tmSUVHY3Zta3RVNDNYS2JQbDRyWnROSkl4RVd3QTBCOG13Q2NNektaQjN0ZTR1OTlFMXlQXzlWd3NmTHVGOFVMR3UyWmV6Uy1ZdVVpV2Y5UEtGSXctNDNwZ25veUh5RXdyZ2xHOTR2cnd5V3MxNUtWeEpNV3UyQ2hmTWhGMFE;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:20
        GMT; secure, edgebucket=6IUCH6Bs7dsjzAwByw; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '63'
      x-ratelimit-remaining:
      - '37.0'
      x-ratelimit-reset:
      - '40'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:20 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638444204.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsa0hn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Sebbern",
        "can_mod_post": false, "created_utc": 1638358755.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5xuh8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "We back, python 3 again this year.\n\nPart 1:\n\n[https://github.com/Sebbern/Advent-of-Code/blob/master/2021/day01/day01.py](https://github.com/Sebbern/Advent-of-Code/blob/master/2021/day01/day01.py)\n\n    depth
        = open(\"input.txt\", \"r\").read().splitlines()\n    increase = 0\n    temp
        = 0\n\n    for i in depth:\n        if temp != 0:\n            if temp &lt;
        int(i):\n                increase += 1\n\n        temp = int(i)\n\n    print(increase)\n\nPart
        2:\n\n[https://github.com/Sebbern/Advent-of-Code/blob/master/2021/day01/day01\\_2.py](https://github.com/Sebbern/Advent-of-Code/blob/master/2021/day01/day01_2.py)\n\n    depth
        = open(\"input.txt\", \"r\").read().splitlines()\n    increase = 0\n    depthlist
        = []\n    groupA = 0\n    groupB = 0\n\n    for i in depth:\n        depthlist.append(i)\n        \n    while
        len(depthlist) &gt; 3:\n        groupA = int(depthlist[0]) + int(depthlist[1])
        + int(depthlist[2])\n        groupB = int(depthlist[1]) + int(depthlist[2])
        + int(depthlist[3])\n        if groupA &lt; groupB:\n            increase
        += 1\n        depthlist = depthlist[1:]\n\n    print(increase)\n\nKinda basic,
        but hey, they work.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We
        back, python 3 again this year.&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Sebbern/Advent-of-Code/blob/master/2021/day01/day01.py\"&gt;https://github.com/Sebbern/Advent-of-Code/blob/master/2021/day01/day01.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depth
        = open(&amp;quot;input.txt&amp;quot;, &amp;quot;r&amp;quot;).read().splitlines()\nincrease
        = 0\ntemp = 0\n\nfor i in depth:\n    if temp != 0:\n        if temp &amp;lt;
        int(i):\n            increase += 1\n\n    temp = int(i)\n\nprint(increase)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Sebbern/Advent-of-Code/blob/master/2021/day01/day01_2.py\"&gt;https://github.com/Sebbern/Advent-of-Code/blob/master/2021/day01/day01_2.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depth
        = open(&amp;quot;input.txt&amp;quot;, &amp;quot;r&amp;quot;).read().splitlines()\nincrease
        = 0\ndepthlist = []\ngroupA = 0\ngroupB = 0\n\nfor i in depth:\n    depthlist.append(i)\n\nwhile
        len(depthlist) &amp;gt; 3:\n    groupA = int(depthlist[0]) + int(depthlist[1])
        + int(depthlist[2])\n    groupB = int(depthlist[1]) + int(depthlist[2]) +
        int(depthlist[3])\n    if groupA &amp;lt; groupB:\n        increase += 1\n    depthlist
        = depthlist[1:]\n\nprint(increase)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Kinda
        basic, but hey, they work.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsa0hn/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsa0hn", "created":
        1638358755.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsaolj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**POWERSHELL**\n\nAfter getting over the hurdle of dealing
        with strings rather than int, though the test inputs were correct below is
        part 1 and 2 for PowerShell. \n\nIt''s quite verbose and no doubt could have
        played code golf with it, but it''s good for review if ever I need it in the
        future. \n\n# part 1\n    $content = get-content(\".\\input.txt\")\n    $previous,
        $count = 0\n    \n    for ($i = 0; $i -lt $content.Length; $i++) {\n        [int]$num
        = $content[$i]\n        if ($i -eq 0) {\n            write-host \"$($num)
        (N/A - No previous measurement)\"\n            continue\n        } \n    \n        if
        ($num -gt $previous) { \n            write-host \"$($content[$i]) (increase)\"\n            $count++\n        }
        else {\n            write-host \"$($content[$i]) (decrease)\"\n        }\n        $previous
        = $content[$i]\n    }\n    \n    write-host \"$($count)\"\n\n\n# part 2\n\n    $content
        = get-content(\".\\input.txt\")\n    $previous, $count = 0\n    \n    for
        ($i = 0; $i -lt $content.Length; $i++) { \n        [int]$CurrentRowNum = $([int]$content[$i]
        + [int]$content[$i + 1] + [int]$content[$i + 2])\n    \n        if ([int]$content[$i
        + 2] -eq \"\") { \n            continue\n        }\n    \n        if ($i -eq
        0) {\n            write-host \"$($CurrentRowNum) (N/A - No previous measurement)\"\n            continue\n        }
        \n    \n        if ($CurrentRowNum -gt $PreviousRowNum) { \n            write-host
        \"$($CurrentRowNum) (increase)\"\n            $count++\n        } else {\n            write-host
        \"$($CurrentRowNum) (decrease)\"\n        }\n        $PreviousRowNum = $CurrentRowNum\n    }\n    \n    write-host
        \"$($count)\"", "awarders": [], "downs": 0, "author_flair_css_class": null,
        "name": "t1_hmsaolj", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;POWERSHELL&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;After
        getting over the hurdle of dealing with strings rather than int, though the
        test inputs were correct below is part 1 and 2 for PowerShell. &lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s
        quite verbose and no doubt could have played code golf with it, but it&amp;#39;s
        good for review if ever I need it in the future. &lt;/p&gt;\n\n&lt;h1&gt;part
        1&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;$content = get-content(&amp;quot;.\\input.txt&amp;quot;)\n$previous,
        $count = 0\n\nfor ($i = 0; $i -lt $content.Length; $i++) {\n    [int]$num
        = $content[$i]\n    if ($i -eq 0) {\n        write-host &amp;quot;$($num)
        (N/A - No previous measurement)&amp;quot;\n        continue\n    } \n\n    if
        ($num -gt $previous) { \n        write-host &amp;quot;$($content[$i]) (increase)&amp;quot;\n        $count++\n    }
        else {\n        write-host &amp;quot;$($content[$i]) (decrease)&amp;quot;\n    }\n    $previous
        = $content[$i]\n}\n\nwrite-host &amp;quot;$($count)&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;part
        2&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;$content = get-content(&amp;quot;.\\input.txt&amp;quot;)\n$previous,
        $count = 0\n\nfor ($i = 0; $i -lt $content.Length; $i++) { \n    [int]$CurrentRowNum
        = $([int]$content[$i] + [int]$content[$i + 1] + [int]$content[$i + 2])\n\n    if
        ([int]$content[$i + 2] -eq &amp;quot;&amp;quot;) { \n        continue\n    }\n\n    if
        ($i -eq 0) {\n        write-host &amp;quot;$($CurrentRowNum) (N/A - No previous
        measurement)&amp;quot;\n        continue\n    } \n\n    if ($CurrentRowNum
        -gt $PreviousRowNum) { \n        write-host &amp;quot;$($CurrentRowNum) (increase)&amp;quot;\n        $count++\n    }
        else {\n        write-host &amp;quot;$($CurrentRowNum) (decrease)&amp;quot;\n    }\n    $PreviousRowNum
        = $CurrentRowNum\n}\n\nwrite-host &amp;quot;$($count)&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsaolj/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638359242.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638359242.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmszy4j", "id": "hmszy4j", "parent_id":
        "t1_hmsaolj", "depth": 1, "children": ["hmszy4j", "hmsqi8o"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsbmj1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "horstg99",
        "can_mod_post": false, "created_utc": 1638359921.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_dyxqqbtv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\n[Part 1 and Part 2](https://github.com/tobstern/AOC_2021/blob/main/day01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/tobstern/AOC_2021/blob/main/day01.py\"&gt;Part 1
        and Part 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsbmj1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsbmj1", "created":
        1638359921.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638362196.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsc6zx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sonro",
        "can_mod_post": false, "created_utc": 1638360322.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_u7y2s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust part 2 solution (edited thanks to comments):\n\n    use std::io::{stdin,
        BufRead};\n    \n    fn main() {\n        println!(\n            \"{}\",\n            stdin()\n                .lock()\n                .lines()\n                .filter_map(|s|
        s.unwrap().parse().ok())\n                .collect::&lt;Vec&lt;u32&gt;&gt;()\n                .windows(4)\n                .filter(|&amp;t|
        t[0] &lt; t[3])\n                .count()\n        );\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Rust part 2 solution (edited thanks to comments):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        std::io::{stdin, BufRead};\n\nfn main() {\n    println!(\n        &amp;quot;{}&amp;quot;,\n        stdin()\n            .lock()\n            .lines()\n            .filter_map(|s|
        s.unwrap().parse().ok())\n            .collect::&amp;lt;Vec&amp;lt;u32&amp;gt;&amp;gt;()\n            .windows(4)\n            .filter(|&amp;amp;t|
        t[0] &amp;lt; t[3])\n            .count()\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsc6zx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsc6zx", "created":
        1638360322.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmscynu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "eatenbyalion",
        "can_mod_post": false, "created_utc": 1638360851.0, "send_replies": true,
        "parent_id": "t1_hmsc6zx", "score": 4, "author_fullname": "t2_bdi4s2vr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "The silent maths teacher in my soul wants to give the lesson on cancellation
        of terms.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The
        silent maths teacher in my soul wants to give the lesson on cancellation of
        terms.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmscynu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmscynu", "created":
        1638360851.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_hmsd8c6", "id": "hmsd8c6", "parent_id":
        "t1_hmscynu", "depth": 2, "children": ["hmsd8c6"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmscvvl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmscvvl", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmscvvl/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638360798.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638360798.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmw1gnw", "id": "hmw1gnw", "parent_id":
        "t1_hmscvvl", "depth": 1, "children": ["hmw1gnw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638362003.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsd2vf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Alligatronica",
        "can_mod_post": false, "created_utc": 1638360931.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ehco4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[JavaScript solutions, already settled back into the habit of relying on
        reduce functions](https://github.com/davidsharp/advent-of-code/blob/main/2021/days/1.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/davidsharp/advent-of-code/blob/main/2021/days/1.js\"&gt;JavaScript
        solutions, already settled back into the habit of relying on reduce functions&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsd2vf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsd2vf", "created":
        1638360931.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsd95d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wizards_tower",
        "can_mod_post": false, "created_utc": 1638361047.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_10cpsj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C solution\n\nhttps://github.com/breakthatbass/advent\\_of\\_code2021/blob/main/day01/a.c",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C solution&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/breakthatbass/advent%5C_of%5C_code2021/blob/main/day01/a.c\"&gt;https://github.com/breakthatbass/advent\\_of\\_code2021/blob/main/day01/a.c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsd95d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsd95d", "created":
        1638361047.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638362041.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmse1bp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hlamushka",
        "can_mod_post": false, "created_utc": 1638361568.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_9h869fac", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\#python\n\n    with open(''task1.txt'') as data:\n\n       numbers = list(map(lambda
        x: int(x.strip()), data.readlines()))\n\n    l = len(numbers)\n\n    total
        = 0\n\n    for i in range(l-1):\n\n       if numbers\\[i\\] &lt; numbers\\[i+1\\]:\n\n          total
        += 1\n\n    total2 = 0\n\n    for i in range(l-3):\n\n       if sum(numbers\\[i:i+3\\])
        &lt; sum(numbers\\[i+1:i+4\\]):\n\n          total2 += 1", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;#python&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;task1.txt&amp;#39;) as data:\n\n   numbers = list(map(lambda
        x: int(x.strip()), data.readlines()))\n\nl = len(numbers)\n\ntotal = 0\n\nfor
        i in range(l-1):\n\n   if numbers\\[i\\] &amp;lt; numbers\\[i+1\\]:\n\n      total
        += 1\n\ntotal2 = 0\n\nfor i in range(l-3):\n\n   if sum(numbers\\[i:i+3\\])
        &amp;lt; sum(numbers\\[i+1:i+4\\]):\n\n      total2 += 1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmse1bp/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmse1bp", "created":
        1638361568.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsebbs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MarcoDelmastro",
        "can_mod_post": false, "created_utc": 1638361747.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_55jom9u2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python + Numpy FTW! :-)\n\nhttps://github.com/marcodelmastro/AdventOfCode2021/blob/main/Day01.ipynb",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python + Numpy FTW!
        :-)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/marcodelmastro/AdventOfCode2021/blob/main/Day01.ipynb\"&gt;https://github.com/marcodelmastro/AdventOfCode2021/blob/main/Day01.ipynb&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsebbs/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsebbs", "created":
        1638361747.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmshkqr", "id": "hmshkqr", "parent_id":
        "t1_hmsebbs", "depth": 1, "children": ["hmshkqr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsf2pc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "barsa00",
        "can_mod_post": false, "created_utc": 1638362227.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_3qcodcb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**RUST**\n\n[day 1 solution on github](https://github.com/barsa2000/AOC2021/blob/master/src/day01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;RUST&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/barsa2000/AOC2021/blob/master/src/day01.rs\"&gt;day
        1 solution on github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsf2pc/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsf2pc", "created": 1638362227.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmsraum", "id": "hmsraum", "parent_id": "t1_hmsf2pc", "depth": 1, "children":
        ["hmsraum"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638364164.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmshtm9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "GrazianoS86",
        "can_mod_post": false, "created_utc": 1638363842.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_hn819it", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Javascript solution](https://github.com/Akallabet/advent-of-code/blob/master/src/2021/1/1.js)
        using Ramda \n\n    import { addIndex, map, pipe, sum } from ''ramda'';\n    \n    const
        mapWithMeasurements = (predicate) =&gt; (measurements) =&gt; addIndex(map)(predicate(measurements),
        measurements);\n    \n    const isMeasureIncremented = (measurements) =&gt;
        (measurement, i) =&gt; (measurements[i - 1] || 0) &lt; measurement;\n    \n    const
        previousThreeMeasurements = (measurements) =&gt; (_, i) =&gt; (measurements[i
        - 1] || 0) + (measurements[i - 2] || 0) + measurements[i - 3] || 0;\n    \n    const
        removeFirst = ([_, ...data]) =&gt; data;\n    \n    export const part1 = pipe(mapWithMeasurements(isMeasureIncremented),
        removeFirst, sum);\n    \n    export const part2 = pipe(mapWithMeasurements(previousThreeMeasurements),
        part1);", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/Akallabet/advent-of-code/blob/master/src/2021/1/1.js\"&gt;Javascript
        solution&lt;/a&gt; using Ramda &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        { addIndex, map, pipe, sum } from &amp;#39;ramda&amp;#39;;\n\nconst mapWithMeasurements
        = (predicate) =&amp;gt; (measurements) =&amp;gt; addIndex(map)(predicate(measurements),
        measurements);\n\nconst isMeasureIncremented = (measurements) =&amp;gt; (measurement,
        i) =&amp;gt; (measurements[i - 1] || 0) &amp;lt; measurement;\n\nconst previousThreeMeasurements
        = (measurements) =&amp;gt; (_, i) =&amp;gt; (measurements[i - 1] || 0) + (measurements[i
        - 2] || 0) + measurements[i - 3] || 0;\n\nconst removeFirst = ([_, ...data])
        =&amp;gt; data;\n\nexport const part1 = pipe(mapWithMeasurements(isMeasureIncremented),
        removeFirst, sum);\n\nexport const part2 = pipe(mapWithMeasurements(previousThreeMeasurements),
        part1);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmshtm9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmshtm9", "created":
        1638363842.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmshxa7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Artiiie",
        "can_mod_post": false, "created_utc": 1638363900.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_14ocny", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 1 Golang solution: [github](https://github.com/ArtKelly/AoC2021/blob/main/Challenges/day1.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day 1 Golang solution:
        &lt;a href=\"https://github.com/ArtKelly/AoC2021/blob/main/Challenges/day1.go\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmshxa7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmshxa7", "created":
        1638363900.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638364903.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmshy76", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JackG254",
        "can_mod_post": false, "created_utc": 1638363914.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_h45cxf7j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I made a simple python script to count how many times currently set value
        is larger than the previous one. Took me a bit of troubleshooting since I
        made a mistake in importing via text file that happened to skip every other
        value. After 3 guesses, I managed to fix the code and it works right now.\n\n[Solution](https://gist.github.com/JackG256/a3637fa95e2dc4d945aabb041d62ad5c)\n\nCurrently
        working on the second part of today, will post here too.  \nEDIT:  \nI managed
        to finish the second part with this solution:  \n[Solution](https://gist.github.com/JackG256/fbf0a9abc61ca6c7f0e7299802afb908)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I made a simple python
        script to count how many times currently set value is larger than the previous
        one. Took me a bit of troubleshooting since I made a mistake in importing
        via text file that happened to skip every other value. After 3 guesses, I
        managed to fix the code and it works right now.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gist.github.com/JackG256/a3637fa95e2dc4d945aabb041d62ad5c\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Currently
        working on the second part of today, will post here too.&lt;br/&gt;\nEDIT:&lt;br/&gt;\nI
        managed to finish the second part with this solution:&lt;br/&gt;\n&lt;a href=\"https://gist.github.com/JackG256/fbf0a9abc61ca6c7f0e7299802afb908\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmshy76/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmshy76", "created":
        1638363914.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsi1lb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hrunt",
        "can_mod_post": false, "created_utc": 1638363966.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_6xomu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python solution, parts 1 and 2 handled with a window-size parameter:\n\n    #!/usr/bin/env
        python3\n    \n    import pathlib\n    import sys\n    \n    from typing import
        List\n    \n    sys.path.append(str(pathlib.Path(__file__).resolve().parent.parent
        / ''lib''))\n    \n    import aoc\n    \n    def count_increases(heights:
        List[int], window: int) -&gt; int:\n      count = 0\n      prev_sum = sum(heights[0:window])\n      for
        i in range(1, len(heights) - window + 1):\n        next_sum = prev_sum - heights[i
        - 1] + heights[i + window - 1]\n        if next_sum &gt; prev_sum:\n          count
        += 1\n        prev_sum = next_sum\n      return count\n    \n    def run()
        -&gt; None:\n      input_file = aoc.inputfile(''input.txt'')\n      heights
        = [int(x) for x in open(input_file).readlines()]\n      print(f''Measurement
        increases {count_increases(heights, 1)}'')\n      print(f''Sliding window
        increases {count_increases(heights, 3)}'')\n    \n    if __name__ == ''__main__'':\n      run()\n      sys.exit(0)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python solution, parts
        1 and 2 handled with a window-size parameter:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env
        python3\n\nimport pathlib\nimport sys\n\nfrom typing import List\n\nsys.path.append(str(pathlib.Path(__file__).resolve().parent.parent
        / &amp;#39;lib&amp;#39;))\n\nimport aoc\n\ndef count_increases(heights: List[int],
        window: int) -&amp;gt; int:\n  count = 0\n  prev_sum = sum(heights[0:window])\n  for
        i in range(1, len(heights) - window + 1):\n    next_sum = prev_sum - heights[i
        - 1] + heights[i + window - 1]\n    if next_sum &amp;gt; prev_sum:\n      count
        += 1\n    prev_sum = next_sum\n  return count\n\ndef run() -&amp;gt; None:\n  input_file
        = aoc.inputfile(&amp;#39;input.txt&amp;#39;)\n  heights = [int(x) for x in
        open(input_file).readlines()]\n  print(f&amp;#39;Measurement increases {count_increases(heights,
        1)}&amp;#39;)\n  print(f&amp;#39;Sliding window increases {count_increases(heights,
        3)}&amp;#39;)\n\nif __name__ == &amp;#39;__main__&amp;#39;:\n  run()\n  sys.exit(0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsi1lb/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsi1lb", "created":
        1638363966.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638369960.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsioan", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mist_mud",
        "can_mod_post": false, "created_utc": 1638364319.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_fg06n1i0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript solution from a newbie.  I changed the 1''s to 3''s for part 2.  Thanks
        to PalingENes15 who suggested  .map(Number) rather than parseInt - I hadn''t
        seen that one but have implemented and will remember it!\n\n        const
        fs = require(''fs'')\n        const input = fs.readFileSync(''input.txt'',
        ''utf-8'').split(/\\r\\n/).map(Number)\n        let count = 0\n        \n        for
        (let i = 0; i &lt; input.length - 1; i++) {\n            if (input[i] &lt;
        input[i + 1]) count++\n        }\n        \n        console.log(count)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript solution from a newbie.  I changed
        the 1&amp;#39;s to 3&amp;#39;s for part 2.  Thanks to PalingENes15 who suggested  .map(Number)
        rather than parseInt - I hadn&amp;#39;t seen that one but have implemented
        and will remember it!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    const fs = require(&amp;#39;fs&amp;#39;)\n    const
        input = fs.readFileSync(&amp;#39;input.txt&amp;#39;, &amp;#39;utf-8&amp;#39;).split(/\\r\\n/).map(Number)\n    let
        count = 0\n\n    for (let i = 0; i &amp;lt; input.length - 1; i++) {\n        if
        (input[i] &amp;lt; input[i + 1]) count++\n    }\n\n    console.log(count)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsioan/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsioan", "created":
        1638364319.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsit0y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmsit0y", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsit0y/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638364391.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638364391.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmsjyaa", "id": "hmsjyaa", "parent_id":
        "t1_hmsit0y", "depth": 1, "children": ["hmsjyaa"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsj2yt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Marterich",
        "can_mod_post": false, "created_utc": 1638364545.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_kqb31", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 01 Solution.\n\nPython 3 with optional debug output\n\nhttps://github.com/Marterich/AoC/blob/main/2021/day01/solve.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day 01 Solution.&lt;/p&gt;\n\n&lt;p&gt;Python
        3 with optional debug output&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Marterich/AoC/blob/main/2021/day01/solve.py\"&gt;https://github.com/Marterich/AoC/blob/main/2021/day01/solve.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsj2yt/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsj2yt", "created":
        1638364545.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsll5m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "A_Travelling_Man",
        "can_mod_post": false, "created_utc": 1638365899.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_bd7uz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nice little warmup, quick and simple solution in Rust.\n\nPart 1:\n\n    use
        std::fs::File;\n    use std::io::{BufReader, BufRead};\n    \n    const FNAME:
        &amp;str = \"../data/input.txt\";\n    fn main() {\n        let f = File::open(FNAME).expect(\"Unable
        to open data file\");\n        let reader = BufReader::new(f);\n        let
        vec: Vec&lt;String&gt; = reader\n            .lines()\n            .collect::&lt;Result&lt;_,
        _&gt;&gt;()\n            .unwrap();\n        let mut nums: Vec&lt;i32&gt;
        = vec.into_iter()\n            .map(|x| x.parse::&lt;i32&gt;().unwrap())\n            .collect();\n    \n        let
        mut increases = 0;\n        let mut current = nums[0];\n        for i in 1..nums.len()
        {\n            if nums[i] &gt; current { increases += 1 }\n            current
        = nums[i];\n        }\n        println!(\"{}\", increases);\n    }\n\nPart
        2 (slight modification to part 1):\n\n    use std::fs::File;\n    use std::io::{BufReader,
        BufRead};\n    \n    const FNAME: &amp;str = \"../data/input.txt\";\n    fn
        main() {\n        let f = File::open(FNAME).expect(\"Unable to open data file\");\n        let
        reader = BufReader::new(f);\n        let vec: Vec&lt;String&gt; = reader\n            .lines()\n            .collect::&lt;Result&lt;_,
        _&gt;&gt;()\n            .unwrap();\n        let mut nums: Vec&lt;i32&gt;
        = vec.into_iter()\n            .map(|x| x.parse::&lt;i32&gt;().unwrap())\n            .collect();\n    \n        let
        mut increases = 0;\n        let mut current = nums[0] + nums[1] + nums[2];\n        for
        i in 1..nums.len()-2 {\n            let slide = nums[i] + nums[i+1] + nums[i+2];\n            if
        slide &gt; current { increases += 1 }\n            current = slide;\n        }\n        println!(\"{}\",
        increases);\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice
        little warmup, quick and simple solution in Rust.&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::fs::File;\nuse std::io::{BufReader,
        BufRead};\n\nconst FNAME: &amp;amp;str = &amp;quot;../data/input.txt&amp;quot;;\nfn
        main() {\n    let f = File::open(FNAME).expect(&amp;quot;Unable to open data
        file&amp;quot;);\n    let reader = BufReader::new(f);\n    let vec: Vec&amp;lt;String&amp;gt;
        = reader\n        .lines()\n        .collect::&amp;lt;Result&amp;lt;_, _&amp;gt;&amp;gt;()\n        .unwrap();\n    let
        mut nums: Vec&amp;lt;i32&amp;gt; = vec.into_iter()\n        .map(|x| x.parse::&amp;lt;i32&amp;gt;().unwrap())\n        .collect();\n\n    let
        mut increases = 0;\n    let mut current = nums[0];\n    for i in 1..nums.len()
        {\n        if nums[i] &amp;gt; current { increases += 1 }\n        current
        = nums[i];\n    }\n    println!(&amp;quot;{}&amp;quot;, increases);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 (slight modification to part 1):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        std::fs::File;\nuse std::io::{BufReader, BufRead};\n\nconst FNAME: &amp;amp;str
        = &amp;quot;../data/input.txt&amp;quot;;\nfn main() {\n    let f = File::open(FNAME).expect(&amp;quot;Unable
        to open data file&amp;quot;);\n    let reader = BufReader::new(f);\n    let
        vec: Vec&amp;lt;String&amp;gt; = reader\n        .lines()\n        .collect::&amp;lt;Result&amp;lt;_,
        _&amp;gt;&amp;gt;()\n        .unwrap();\n    let mut nums: Vec&amp;lt;i32&amp;gt;
        = vec.into_iter()\n        .map(|x| x.parse::&amp;lt;i32&amp;gt;().unwrap())\n        .collect();\n\n    let
        mut increases = 0;\n    let mut current = nums[0] + nums[1] + nums[2];\n    for
        i in 1..nums.len()-2 {\n        let slide = nums[i] + nums[i+1] + nums[i+2];\n        if
        slide &amp;gt; current { increases += 1 }\n        current = slide;\n    }\n    println!(&amp;quot;{}&amp;quot;,
        increases);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsll5m/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsll5m", "created": 1638365899.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmsmzua", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "farkasmarton", "can_mod_post": false,
        "created_utc": 1638366620.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_3tz3t5ae", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Simple Node-less JavaScript
        solution:\n\nPart 1:\n\n    var input = []\n    var counter = 0\n    var Reader
        = new FileReader()\n    \n    function read() {\n        Reader.onload = function()
        {\n            input = Reader.result.split(\"\\r\\n\")\n            for (let
        i = 1; i &lt; input.length; i++) {\n                counter = (Number(input[i
        - 1]) &lt; Number(input[i])) ? counter + 1 : counter\n            }\n            console.log(counter)\n        }\n        Reader.readAsText(document.getElementById(\"inputfile\").files[0])\n    }\n\nPart
        2:\n\n    var input = []\n    var counter = 0\n    var Reader = new FileReader()\n    \n    function
        read() {\n        Reader.onload = function() {\n            input = Reader.result.split(\"\\r\\n\")\n            for
        (let i = 3; i &lt; input.length; i++) {\n                counter = (Number(input[i
        - 3]) + Number(input[i - 2]) + Number(input[i - 1]) &lt; Number(input[i -
        2]) + Number(input[i - 1]) + Number(input[i])) ? counter + 1 : counter\n            }\n            console.log(counter)\n        }\n        Reader.readAsText(document.getElementById(\"inputfile\").files[0])\n    }\n\nFairly
        inexperienced programmer here, but I thought I''d post this just for fun.
        Also first time reading from file with JS, was one heck of a ride! :D", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Simple Node-less JavaScript solution:&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var input = []\nvar counter = 0\nvar
        Reader = new FileReader()\n\nfunction read() {\n    Reader.onload = function()
        {\n        input = Reader.result.split(&amp;quot;\\r\\n&amp;quot;)\n        for
        (let i = 1; i &amp;lt; input.length; i++) {\n            counter = (Number(input[i
        - 1]) &amp;lt; Number(input[i])) ? counter + 1 : counter\n        }\n        console.log(counter)\n    }\n    Reader.readAsText(document.getElementById(&amp;quot;inputfile&amp;quot;).files[0])\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var input = []\nvar counter = 0\nvar
        Reader = new FileReader()\n\nfunction read() {\n    Reader.onload = function()
        {\n        input = Reader.result.split(&amp;quot;\\r\\n&amp;quot;)\n        for
        (let i = 3; i &amp;lt; input.length; i++) {\n            counter = (Number(input[i
        - 3]) + Number(input[i - 2]) + Number(input[i - 1]) &amp;lt; Number(input[i
        - 2]) + Number(input[i - 1]) + Number(input[i])) ? counter + 1 : counter\n        }\n        console.log(counter)\n    }\n    Reader.readAsText(document.getElementById(&amp;quot;inputfile&amp;quot;).files[0])\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Fairly
        inexperienced programmer here, but I thought I&amp;#39;d post this just for
        fun. Also first time reading from file with JS, was one heck of a ride! :D&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsmzua/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsmzua", "created":
        1638366620.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638433298.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsnmhw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gerolfscherr",
        "can_mod_post": false, "created_utc": 1638366928.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_cyuvhqc1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#Java\n\n(a little bit oldschool, i know)\n\nhttps://github.com/gerolfscherr/aoc2021/blob/main/src/AOC1.java\n\nusing
        BufferedReader\n[paste](https://topaz.github.io/paste/#XQAAAQAPBQAAAAAAAAA0m0pnuFI8c9/wau+qtGVPyLh91C+daD5uJJxvy02zZOc4kA+HHZUL8YWs2szB1T3YItv8vfZgxsAh2Ab5O5t9PnP5LZrJxQluJa8C0pLftEMZVprjoM4Ug6SSHGhP9zUsRWPOtFbjCOFEh0TrMgYaSftDyHzRAgzIOLmxU/ucWUMjXsUQblpiTfGGVG5vKEn5ocjlnXQhf8s7yQVgkWYDEJfg7sxFfSXghy9vYPvttd2NpP8/Y/v7RGPM4uZY1h09vd3xcAl9pyXYw37ncrhdiV2JJ6I2xea+croDrbyWBgH48INWExOkyCLtvr+TqE7QmH0/9A0OspgdsyOEKCgq+OJApq+YsS1vHThSkZmxfxVgeDxDZePozW3rtpRZ8Wr5jj5xLn9HfgrVAndjDa/ctNTWwQBHDIZ699nuyvv571VHKfK6V/94Mj5HbDAiBxXQG4hC/LhSyOouBHIwMU0+1RV8LQUx70S9GrrvfkHIch6c3XzYFPjC/2ao0ZHXTzj/8y+L5g==)\n\nusing
        java.util.Scanner\n\n[paste](https://topaz.github.io/paste/#XQAAAQA6BAAAAAAAAAA0m0pnuFI8c9/wau+qtGVPyaqZd0m0omKyFO5Qq7myKDzuwo02ZJ4QEQlP463P44yLy9Nr9lyhdrIHbGo7h64HSG3Nlig01zIRC+SmAheAzI3NhbCu9qIEgkxVii6+nEtfQ4Jz3kLd5a1rAGK0T3wkJzgMvEw7vXXyKxIqspQ50y+a92UJqSU94MElO53n7MBjxCr5MSdtjfaruCXW62chuY1TOhXDkEShye5iyDxDBxSi9A40/8N9oaERFDcOCMGKflz2zr6RqytT9kHD+/zERdJGV2be0eXCvTgUBFjuueIf9ithuXXdwDgBIKIUSzKXWf9KyGRMZS/G1SUyUMUBDD6L3G/QyyOWG0Oh40NPEqSgIefUpLjfRGlYKth+Jnfy3Vsa3ip08sRlQ3UYkDFG0g4mqlABDNpduSY0PEnzkch80+3VU1Z9+Xv0sdbgZ2bDnTw8ZG15IiFpedlxoqZTYFOJHWdWDQ7f/z+7ZwA=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Java&lt;/h1&gt;\n\n&lt;p&gt;(a
        little bit oldschool, i know)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gerolfscherr/aoc2021/blob/main/src/AOC1.java\"&gt;https://github.com/gerolfscherr/aoc2021/blob/main/src/AOC1.java&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;using
        BufferedReader\n&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAPBQAAAAAAAAA0m0pnuFI8c9/wau+qtGVPyLh91C+daD5uJJxvy02zZOc4kA+HHZUL8YWs2szB1T3YItv8vfZgxsAh2Ab5O5t9PnP5LZrJxQluJa8C0pLftEMZVprjoM4Ug6SSHGhP9zUsRWPOtFbjCOFEh0TrMgYaSftDyHzRAgzIOLmxU/ucWUMjXsUQblpiTfGGVG5vKEn5ocjlnXQhf8s7yQVgkWYDEJfg7sxFfSXghy9vYPvttd2NpP8/Y/v7RGPM4uZY1h09vd3xcAl9pyXYw37ncrhdiV2JJ6I2xea+croDrbyWBgH48INWExOkyCLtvr+TqE7QmH0/9A0OspgdsyOEKCgq+OJApq+YsS1vHThSkZmxfxVgeDxDZePozW3rtpRZ8Wr5jj5xLn9HfgrVAndjDa/ctNTWwQBHDIZ699nuyvv571VHKfK6V/94Mj5HbDAiBxXQG4hC/LhSyOouBHIwMU0+1RV8LQUx70S9GrrvfkHIch6c3XzYFPjC/2ao0ZHXTzj/8y+L5g==\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;using
        java.util.Scanner&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQA6BAAAAAAAAAA0m0pnuFI8c9/wau+qtGVPyaqZd0m0omKyFO5Qq7myKDzuwo02ZJ4QEQlP463P44yLy9Nr9lyhdrIHbGo7h64HSG3Nlig01zIRC+SmAheAzI3NhbCu9qIEgkxVii6+nEtfQ4Jz3kLd5a1rAGK0T3wkJzgMvEw7vXXyKxIqspQ50y+a92UJqSU94MElO53n7MBjxCr5MSdtjfaruCXW62chuY1TOhXDkEShye5iyDxDBxSi9A40/8N9oaERFDcOCMGKflz2zr6RqytT9kHD+/zERdJGV2be0eXCvTgUBFjuueIf9ithuXXdwDgBIKIUSzKXWf9KyGRMZS/G1SUyUMUBDD6L3G/QyyOWG0Oh40NPEqSgIefUpLjfRGlYKth+Jnfy3Vsa3ip08sRlQ3UYkDFG0g4mqlABDNpduSY0PEnzkch80+3VU1Z9+Xv0sdbgZ2bDnTw8ZG15IiFpedlxoqZTYFOJHWdWDQ7f/z+7ZwA=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsnmhw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsnmhw", "created":
        1638366928.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmso475",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "toi80QC",
        "can_mod_post": false, "created_utc": 1638367174.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_p4xawrj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Cheap JavaScript solution in a codepen: https://codepen.io/toifel/pen/ZEXYrLo",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cheap JavaScript solution
        in a codepen: &lt;a href=\"https://codepen.io/toifel/pen/ZEXYrLo\"&gt;https://codepen.io/toifel/pen/ZEXYrLo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmso475/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmso475", "created":
        1638367174.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmso78b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Grescho",
        "can_mod_post": false, "created_utc": 1638367216.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_2t2i783g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Java**\n\nsolution for both problems:  \nhttps://github.com/SchGre/aoc2021/blob/main/day1/src/App.java\n\n    import
        java.io.FileInputStream;\n    import java.io.FileNotFoundException; \n    import
        java.util.ArrayList; \n    import java.util.List; \n    import java.util.Scanner;\n    \n    public
        class App { public static void main(String[] args) {         \n        List&lt;Integer&gt;
        depths = new ArrayList&lt;Integer&gt;(); depths = init();\n        // PART
        ONE\n        int positiveChanges = part_one(depths);\n        System.out.println(\"Part
        One: \" + positiveChanges);\n    \n        // PART TWO\n        positiveChanges
        = part_two(depths);\n        System.out.println(\"Part Two: \" + positiveChanges);\n    }\n    \n    /**\n     *
        creates a list, to which it adds all numbers from the file\n     * @return
        a list with all numbers\n     */\n    public static List&lt;Integer&gt; init()
        {\n        List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();        \n        try
        {\n            FileInputStream file = new FileInputStream(\"input.txt\");\n            Scanner
        sc = new Scanner(file);\n            while(sc.hasNextLine()) {\n                list.add(Integer.parseInt(sc.nextLine()));\n            }\n            sc.close();\n        }
        catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n        return
        list;\n    }\n    \n    /**\n     * counts the times where the following number
        is greater then the number before\n     * @param list contains all the numbers\n     *
        @return the number times the measurement increases\n     */\n    public static
        int part_one(List&lt;Integer&gt; list) {\n        int n = 0;\n        for(int
        i = 0; i &lt; list.size() - 1; i++) {\n            if (list.get(i) &lt; list.get(i
        + 1)) {\n                n++;\n            }\n        }\n        return n;\n    }\n    \n    /**\n     *
        counts the times\n     * @param list contains all the numbers\n     * @return
        the number of times the sum of three-measurements sliding window increases\n     */\n    public
        static int part_two(List&lt;Integer&gt; list) {\n        int n = 0;\n        for
        (int i = 0; i &lt; list.size() - 3; i++) {\n            if (list.get(i) +
        list.get(i + 1) + list.get(i + 2) &lt; list.get(i + 1) + list.get(i + 2) +
        list.get(i + 3)) {\n                n++;\n            }\n        }\n        return
        n;\n    }\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;solution
        for both problems:&lt;br/&gt;\n&lt;a href=\"https://github.com/SchGre/aoc2021/blob/main/day1/src/App.java\"&gt;https://github.com/SchGre/aoc2021/blob/main/day1/src/App.java&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        java.io.FileInputStream;\nimport java.io.FileNotFoundException; \nimport java.util.ArrayList;
        \nimport java.util.List; \nimport java.util.Scanner;\n\npublic class App {
        public static void main(String[] args) {         \n    List&amp;lt;Integer&amp;gt;
        depths = new ArrayList&amp;lt;Integer&amp;gt;(); depths = init();\n    //
        PART ONE\n    int positiveChanges = part_one(depths);\n    System.out.println(&amp;quot;Part
        One: &amp;quot; + positiveChanges);\n\n    // PART TWO\n    positiveChanges
        = part_two(depths);\n    System.out.println(&amp;quot;Part Two: &amp;quot;
        + positiveChanges);\n}\n\n/**\n * creates a list, to which it adds all numbers
        from the file\n * @return a list with all numbers\n */\npublic static List&amp;lt;Integer&amp;gt;
        init() {\n    List&amp;lt;Integer&amp;gt; list = new ArrayList&amp;lt;Integer&amp;gt;();        \n    try
        {\n        FileInputStream file = new FileInputStream(&amp;quot;input.txt&amp;quot;);\n        Scanner
        sc = new Scanner(file);\n        while(sc.hasNextLine()) {\n            list.add(Integer.parseInt(sc.nextLine()));\n        }\n        sc.close();\n    }
        catch (FileNotFoundException e) {\n        e.printStackTrace();\n    }\n    return
        list;\n}\n\n/**\n * counts the times where the following number is greater
        then the number before\n * @param list contains all the numbers\n * @return
        the number times the measurement increases\n */\npublic static int part_one(List&amp;lt;Integer&amp;gt;
        list) {\n    int n = 0;\n    for(int i = 0; i &amp;lt; list.size() - 1; i++)
        {\n        if (list.get(i) &amp;lt; list.get(i + 1)) {\n            n++;\n        }\n    }\n    return
        n;\n}\n\n/**\n * counts the times\n * @param list contains all the numbers\n
        * @return the number of times the sum of three-measurements sliding window
        increases\n */\npublic static int part_two(List&amp;lt;Integer&amp;gt; list)
        {\n    int n = 0;\n    for (int i = 0; i &amp;lt; list.size() - 3; i++) {\n        if
        (list.get(i) + list.get(i + 1) + list.get(i + 2) &amp;lt; list.get(i + 1)
        + list.get(i + 2) + list.get(i + 3)) {\n            n++;\n        }\n    }\n    return
        n;\n}\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmso78b/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmso78b", "created":
        1638367216.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638367603.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsogj4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JustSomeSnake",
        "can_mod_post": false, "created_utc": 1638367342.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_h45txn2g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Simple **JavaScript** solution in simple imperative style without any explicit
        indexing: https://gist.github.com/Snaker1/bfb5bf7008f61ad60baddba0cadde849",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Simple &lt;strong&gt;JavaScript&lt;/strong&gt;
        solution in simple imperative style without any explicit indexing: &lt;a href=\"https://gist.github.com/Snaker1/bfb5bf7008f61ad60baddba0cadde849\"&gt;https://gist.github.com/Snaker1/bfb5bf7008f61ad60baddba0cadde849&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsogj4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsogj4", "created":
        1638367342.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsoygk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "paweu12",
        "can_mod_post": false, "created_utc": 1638367589.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_15gpegas", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in [C++](https://github.com/pawelzydziak/advent-of-code-2021/tree/main/Day_1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in &lt;a
        href=\"https://github.com/pawelzydziak/advent-of-code-2021/tree/main/Day_1\"&gt;C++&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsoygk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsoygk", "created":
        1638367589.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsqyxj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ni3t",
        "can_mod_post": false, "created_utc": 1638368556.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4mqbv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Ruby (4644/4137)\n\nKnocked quite a bit of data manipulation rust off tonight.
        I like to see the inputs in-line on the page so I use the DATA/__END__ pattern.\n\n    @data
        = DATA.each_line.map(&amp;:chomp)\n\n    @data.map(&amp;:to_i).each_cons(4).map
        do |a, b, c, d|\n      [b &gt; a, [b, c, d].sum &gt; [a, b, c].sum]\n    end.transpose.map
        { |e| e.count(true) }.tap(&amp;method(:puts))\n\n    __END__\n    ...input",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Ruby (4644/4137)&lt;/h1&gt;\n\n&lt;p&gt;Knocked
        quite a bit of data manipulation rust off tonight. I like to see the inputs
        in-line on the page so I use the DATA/&lt;strong&gt;END&lt;/strong&gt; pattern.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@data
        = DATA.each_line.map(&amp;amp;:chomp)\n\n@data.map(&amp;amp;:to_i).each_cons(4).map
        do |a, b, c, d|\n  [b &amp;gt; a, [b, c, d].sum &amp;gt; [a, b, c].sum]\nend.transpose.map
        { |e| e.count(true) }.tap(&amp;amp;method(:puts))\n\n__END__\n...input\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsqyxj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsqyxj", "created":
        1638368556.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hq6rjd9", "id": "hq6rjd9", "parent_id":
        "t1_hmsqyxj", "depth": 1, "children": ["hq6rjd9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsr243",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "youaremean_YAM",
        "can_mod_post": false, "created_utc": 1638368597.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_14969o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My [Javascript solution](https://github.com/agardes/adventofcode2021/blob/master/day01.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My &lt;a href=\"https://github.com/agardes/adventofcode2021/blob/master/day01.js\"&gt;Javascript
        solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsr243/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsr243", "created":
        1638368597.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsr3as",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "usesbiggerwords",
        "can_mod_post": false, "created_utc": 1638368613.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_13zzfm8z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First time posting on the current year''s AoC!\n\nPython3:\n\n&amp;#x200B;\n\n    depths
        = list(map(int, input().splitlines()))\n    diffs = []\n    for i in range(len(depths)
        - 1):\n        diffs.append(depths[i+1] - depths[i])\n    print(''Part 1:'',
        len([diff for diff in diffs if diff &gt; 0]))\n    windows = 0\n    for i
        in range(len(depths) - 3):\n        window1 = [depths[i] for i in range(i,
        i+3)]\n        window2 = [depths[i] for i in range(i+1, i+4)]\n        if
        sum(window2) &gt; sum(window1):\n            windows += 1\n    print(''Part
        2:'', windows)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First
        time posting on the current year&amp;#39;s AoC!&lt;/p&gt;\n\n&lt;p&gt;Python3:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depths
        = list(map(int, input().splitlines()))\ndiffs = []\nfor i in range(len(depths)
        - 1):\n    diffs.append(depths[i+1] - depths[i])\nprint(&amp;#39;Part 1:&amp;#39;,
        len([diff for diff in diffs if diff &amp;gt; 0]))\nwindows = 0\nfor i in range(len(depths)
        - 3):\n    window1 = [depths[i] for i in range(i, i+3)]\n    window2 = [depths[i]
        for i in range(i+1, i+4)]\n    if sum(window2) &amp;gt; sum(window1):\n        windows
        += 1\nprint(&amp;#39;Part 2:&amp;#39;, windows)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsr3as/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsr3as", "created":
        1638368613.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638368844.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsr79d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "clumsveed",
        "can_mod_post": false, "created_utc": 1638368664.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_8dpsz5p1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# JAVA Solution\n\n[day 1 solution](https://topaz.github.io/paste/#XQAAAQCmAgAAAAAAAAAFYCDofRLInCowCV4SnDo/0/PyxU5+1s/vAroA3tzh+MEU+qRBUX/NkgFAGfBsltYBMwEoI0oS7VL+0agkAmBxDHwXzcj5Lue0ULgCDeTq9aDanndbMwMKcitcjb3pMbaDQnB0nkIZ1uDGNT748xTeQQg8gYfb605XD1G2e1xmEv0na7jhx1fS2iJCcD5oc317hoGWhDgNnwnBrewAMgjhLVR/JleOhobtrXW3xblvGIdUCJlCf3UlyxdjcHBoGY+qUudkNbrfLSL36pXWvEdcQcDoajNcV8Z6k7NaT5WvkTPcWY0UF6AM3NFxf8zhBr5V3M/0ist+dYVq2EoVqRRaDIPJhdGxHvOgC06hGSzICNmPejU0a2C85OPWnY3iATXPW3FfR5ITAxulfP/pdZ8+)\n\n\n[all
        solutions - repl.it](https://replit.com/@BrianMoore1/AdventOfCode2021#Main.java)\n\nSo
        good to be back!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;JAVA
        Solution&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCmAgAAAAAAAAAFYCDofRLInCowCV4SnDo/0/PyxU5+1s/vAroA3tzh+MEU+qRBUX/NkgFAGfBsltYBMwEoI0oS7VL+0agkAmBxDHwXzcj5Lue0ULgCDeTq9aDanndbMwMKcitcjb3pMbaDQnB0nkIZ1uDGNT748xTeQQg8gYfb605XD1G2e1xmEv0na7jhx1fS2iJCcD5oc317hoGWhDgNnwnBrewAMgjhLVR/JleOhobtrXW3xblvGIdUCJlCf3UlyxdjcHBoGY+qUudkNbrfLSL36pXWvEdcQcDoajNcV8Z6k7NaT5WvkTPcWY0UF6AM3NFxf8zhBr5V3M/0ist+dYVq2EoVqRRaDIPJhdGxHvOgC06hGSzICNmPejU0a2C85OPWnY3iATXPW3FfR5ITAxulfP/pdZ8+\"&gt;day
        1 solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://replit.com/@BrianMoore1/AdventOfCode2021#Main.java\"&gt;all
        solutions - repl.it&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So good to be back!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsr79d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsr79d", "created":
        1638368664.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsr7zw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kwenti",
        "can_mod_post": false, "created_utc": 1638368673.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4vpfyf4x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My [solution](https://github.com/qagren/aoc2021/blob/main/day01.py) in Python,
        using boolean sums.\n\nCheers everyone, and happy AOC :)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My &lt;a href=\"https://github.com/qagren/aoc2021/blob/main/day01.py\"&gt;solution&lt;/a&gt;
        in Python, using boolean sums.&lt;/p&gt;\n\n&lt;p&gt;Cheers everyone, and
        happy AOC :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsr7zw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsr7zw", "created":
        1638368673.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsr9et",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "p88h",
        "can_mod_post": false, "created_utc": 1638368692.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_w7wi5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Elixir](https://github.com/p88h/aoc2021/blob/main/lib/day01.ex) \\+first
        time using it, so.. Not sure if this can be expressed more idiomatically,
        just some tail recursion here.\n\n    defmodule Aoc2021.Day01 do\n      def
        tail1([a, b | tail ], acc) do\n        tmp = if a &lt; b do acc+1 else acc
        end\n        tail1([ b | tail ], tmp)\n      end\n    \n      def tail1(_
        , acc) do\n        acc\n      end\n    \n      def part1(args) do\n        args
        |&gt; Enum.map(&amp;String.to_integer/1)\n             |&gt; tail1(0)\n      end\n    \n      def
        tail2([a, b, c, d | tail ], acc) do\n        tmp = if a &lt; d do acc+1 else
        acc end\n        tail2([ b, c, d | tail ], tmp)\n      end\n    \n      def
        tail2(_ , acc) do\n        acc\n      end\n    \n      def part2(args) do\n        args
        |&gt; Enum.map(&amp;String.to_integer/1)\n             |&gt; tail2(0)\n      end\n    end",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/p88h/aoc2021/blob/main/lib/day01.ex\"&gt;Elixir&lt;/a&gt;
        +first time using it, so.. Not sure if this can be expressed more idiomatically,
        just some tail recursion here.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        Aoc2021.Day01 do\n  def tail1([a, b | tail ], acc) do\n    tmp = if a &amp;lt;
        b do acc+1 else acc end\n    tail1([ b | tail ], tmp)\n  end\n\n  def tail1(_
        , acc) do\n    acc\n  end\n\n  def part1(args) do\n    args |&amp;gt; Enum.map(&amp;amp;String.to_integer/1)\n         |&amp;gt;
        tail1(0)\n  end\n\n  def tail2([a, b, c, d | tail ], acc) do\n    tmp = if
        a &amp;lt; d do acc+1 else acc end\n    tail2([ b, c, d | tail ], tmp)\n  end\n\n  def
        tail2(_ , acc) do\n    acc\n  end\n\n  def part2(args) do\n    args |&amp;gt;
        Enum.map(&amp;amp;String.to_integer/1)\n         |&amp;gt; tail2(0)\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsr9et/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsr9et", "created":
        1638368692.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmtzpl6", "id": "hmtzpl6", "parent_id":
        "t1_hmsr9et", "depth": 1, "children": ["hmtzpl6", "hmszfx9"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsrb47",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Harkonnen",
        "can_mod_post": false, "created_utc": 1638368714.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_3r6m4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Java**\n\nhttps://topaz.github.io/paste/#XQAAAQARBQAAAAAAAAA4GEiZzRd1JAgSuMmUkOzMIBUTij+PI1WmhI5jAw0wrhaU5FjW1bdRqxSxVJ8X2Q79h965YCBgxjyZ3AwGQKEF7WGIFwRFHafehCPAXjpnilPyauiyQVJHmDakLAGNtSjA0bqLDcm6ssJsjrQ+MlYyXPzqX6i0a2LOmHlsJxbIVwCyDwAig2XnPx3rSEXW15JFdNjDf+EyXon+2+pgjK1hunesLU+0A7QAny4eQj5bTWCGQ7ICb6sT+0Y5dY7drqK77jA1GPgtDhdtVBc7gx65G5cWlck/BS5dFNR09ccdELT+ZdkYdYor0vwHJWlKxpbotKrdOKUVH7S9+eo2U9+FbKT5MOM/4F3/I+EKVBbbMKNLxcxuOKY2VTEV39eD029W+y3gk43obEqvIMSdSuCLliyqq/o2XHaG91ufgfvLpgpy+a1DLYrDUlb7GEriCXJPbPmqrCcUSV8n08j4uHwhy2HAOrm/7RHz2bIIDw0mUKFHZ0sa3V0mwA/Yg+PAzRKZFqqlbO86+6uXpkarKhZPAT/P2gKXEJ8dSwB/W6x6OnIpnQCDSmVq1ILux60EsWbiF3wfTQrMbTTxH+qZ/6rXQLJM0DGxGwJ2iOcs3KaFHthwt4/1wNfJJhUT85QpGw7nsj5OqzdQudcppWD3GNYiS+Dr5f7xYNX/YLjOFNHhpu7Wi9gMsrozlpr/bcLuAA==",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQARBQAAAAAAAAA4GEiZzRd1JAgSuMmUkOzMIBUTij+PI1WmhI5jAw0wrhaU5FjW1bdRqxSxVJ8X2Q79h965YCBgxjyZ3AwGQKEF7WGIFwRFHafehCPAXjpnilPyauiyQVJHmDakLAGNtSjA0bqLDcm6ssJsjrQ+MlYyXPzqX6i0a2LOmHlsJxbIVwCyDwAig2XnPx3rSEXW15JFdNjDf+EyXon+2+pgjK1hunesLU+0A7QAny4eQj5bTWCGQ7ICb6sT+0Y5dY7drqK77jA1GPgtDhdtVBc7gx65G5cWlck/BS5dFNR09ccdELT+ZdkYdYor0vwHJWlKxpbotKrdOKUVH7S9+eo2U9+FbKT5MOM/4F3/I+EKVBbbMKNLxcxuOKY2VTEV39eD029W+y3gk43obEqvIMSdSuCLliyqq/o2XHaG91ufgfvLpgpy+a1DLYrDUlb7GEriCXJPbPmqrCcUSV8n08j4uHwhy2HAOrm/7RHz2bIIDw0mUKFHZ0sa3V0mwA/Yg+PAzRKZFqqlbO86+6uXpkarKhZPAT/P2gKXEJ8dSwB/W6x6OnIpnQCDSmVq1ILux60EsWbiF3wfTQrMbTTxH+qZ/6rXQLJM0DGxGwJ2iOcs3KaFHthwt4/1wNfJJhUT85QpGw7nsj5OqzdQudcppWD3GNYiS+Dr5f7xYNX/YLjOFNHhpu7Wi9gMsrozlpr/bcLuAA==\"&gt;https://topaz.github.io/paste/#XQAAAQARBQAAAAAAAAA4GEiZzRd1JAgSuMmUkOzMIBUTij+PI1WmhI5jAw0wrhaU5FjW1bdRqxSxVJ8X2Q79h965YCBgxjyZ3AwGQKEF7WGIFwRFHafehCPAXjpnilPyauiyQVJHmDakLAGNtSjA0bqLDcm6ssJsjrQ+MlYyXPzqX6i0a2LOmHlsJxbIVwCyDwAig2XnPx3rSEXW15JFdNjDf+EyXon+2+pgjK1hunesLU+0A7QAny4eQj5bTWCGQ7ICb6sT+0Y5dY7drqK77jA1GPgtDhdtVBc7gx65G5cWlck/BS5dFNR09ccdELT+ZdkYdYor0vwHJWlKxpbotKrdOKUVH7S9+eo2U9+FbKT5MOM/4F3/I+EKVBbbMKNLxcxuOKY2VTEV39eD029W+y3gk43obEqvIMSdSuCLliyqq/o2XHaG91ufgfvLpgpy+a1DLYrDUlb7GEriCXJPbPmqrCcUSV8n08j4uHwhy2HAOrm/7RHz2bIIDw0mUKFHZ0sa3V0mwA/Yg+PAzRKZFqqlbO86+6uXpkarKhZPAT/P2gKXEJ8dSwB/W6x6OnIpnQCDSmVq1ILux60EsWbiF3wfTQrMbTTxH+qZ/6rXQLJM0DGxGwJ2iOcs3KaFHthwt4/1wNfJJhUT85QpGw7nsj5OqzdQudcppWD3GNYiS+Dr5f7xYNX/YLjOFNHhpu7Wi9gMsrozlpr/bcLuAA==&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsrb47/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsrb47", "created":
        1638368714.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638739616.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsrgeu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jotac13",
        "can_mod_post": false, "created_utc": 1638368783.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_83mp7gsq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\\[TypeScript\\] Day1 Solution for both parts:\n\n[https://github.com/joao-conde/advents-of-code/blob/master/2021/src/day01.ts](https://github.com/joao-conde/advents-of-code/blob/master/2021/src/day01.ts)\n\nEDIT1:
        I welcome any ideas/tips/critiques!\n\nEDIT2: Updated link", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[TypeScript] Day1 Solution for both parts:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/joao-conde/advents-of-code/blob/master/2021/src/day01.ts\"&gt;https://github.com/joao-conde/advents-of-code/blob/master/2021/src/day01.ts&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;EDIT1:
        I welcome any ideas/tips/critiques!&lt;/p&gt;\n\n&lt;p&gt;EDIT2: Updated link&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsrgeu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsrgeu", "created":
        1638368783.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmtd0h6", "id": "hmtd0h6", "parent_id":
        "t1_hmsrgeu", "depth": 1, "children": ["hmtd0h6"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsrqka",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "KennyEvil",
        "can_mod_post": false, "created_utc": 1638368913.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4i93j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 1 Ruby (I loaded the values into an array called depths)\n\nincrease_count
        = 0\n\n(1..1999).each { |x| increase_count += 1 if depths[x] &gt; depths[x-1]
        }\n\nputs increase_count\n\nincrease_count = 0\n\n(3..1999).each { |x| increase_count
        += 1 if depths[x] &gt; depths[x-3] }\n\nputs increase_count", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Day 1 Ruby (I loaded the values into an
        array called depths)&lt;/p&gt;\n\n&lt;p&gt;increase_count = 0&lt;/p&gt;\n\n&lt;p&gt;(1..1999).each
        { |x| increase_count += 1 if depths[x] &amp;gt; depths[x-1] }&lt;/p&gt;\n\n&lt;p&gt;puts
        increase_count&lt;/p&gt;\n\n&lt;p&gt;increase_count = 0&lt;/p&gt;\n\n&lt;p&gt;(3..1999).each
        { |x| increase_count += 1 if depths[x] &amp;gt; depths[x-3] }&lt;/p&gt;\n\n&lt;p&gt;puts
        increase_count&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsrqka/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsrqka", "created":
        1638368913.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmto3j9", "id": "hmto3j9", "parent_id":
        "t1_hmsrqka", "depth": 1, "children": ["hmto3j9", "hmt3jqm", "hmsui9j", "hmvzvo2"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmss6je", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tenderspoon",
        "can_mod_post": false, "created_utc": 1638369119.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_rmz1kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Here''s](https://github.com/vollcheck/aoc/blob/master/y2021/day01/core.clj)
        my solution in **Clojure**. Feel free to correct me as I''m still beginner.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/vollcheck/aoc/blob/master/y2021/day01/core.clj\"&gt;Here&amp;#39;s&lt;/a&gt;
        my solution in &lt;strong&gt;Clojure&lt;/strong&gt;. Feel free to correct
        me as I&amp;#39;m still beginner.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmss6je/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmss6je", "created": 1638369119.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmt44y1", "id": "hmt44y1", "parent_id": "t1_hmss6je", "depth": 1, "children":
        ["hmt44y1"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmssbuw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aang333",
        "can_mod_post": false, "created_utc": 1638369186.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_lav9zfw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Javascript solutions pretty basic, but here it is:\n\n[Part 1](https://github.com/azhai333/AOC2021/blob/main/day1/part1.js)\n\n[Part
        2](https://github.com/azhai333/AOC2021/blob/main/day1/part2.js)\n\nI also
        spent time yesterday making a prep file which generates a folder for each
        day with 2 js files with the standard boilerplate code needed to parse the
        text from most AOC inputs, and it also automatically downloads my input and
        scrapes the examples from the problem into txt files:\n\n[Prep](https://github.com/azhai333/AdventofCode2021/blob/main/prep.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Javascript solutions
        pretty basic, but here it is:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/azhai333/AOC2021/blob/main/day1/part1.js\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/azhai333/AOC2021/blob/main/day1/part2.js\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I also spent time yesterday making a prep
        file which generates a folder for each day with 2 js files with the standard
        boilerplate code needed to parse the text from most AOC inputs, and it also
        automatically downloads my input and scrapes the examples from the problem
        into txt files:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/azhai333/AdventofCode2021/blob/main/prep.js\"&gt;Prep&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmssbuw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmssbuw", "created":
        1638369186.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmswkg0", "id": "hmswkg0", "parent_id":
        "t1_hmssbuw", "depth": 1, "children": ["hmswkg0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmssgwx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Gregalli02",
        "can_mod_post": false, "created_utc": 1638369252.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_h46ngbtg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**JAVA**  \nthis is the github with the files of day 1\n\nhttps://github.com/gregalli02/AdventOfCode2021",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;JAVA&lt;/strong&gt;&lt;br/&gt;\nthis
        is the github with the files of day 1&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gregalli02/AdventOfCode2021\"&gt;https://github.com/gregalli02/AdventOfCode2021&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmssgwx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmssgwx", "created":
        1638369252.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsst3c",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CJNorris",
        "can_mod_post": false, "created_utc": 1638369407.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4h262", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Swift**\n\nI used [Algorithms](https://github.com/apple/swift-algorithms)
        and took inspiration from Kotlin with it''s zipWithNext function.\n\n    func
        part1(_ input: [Int]) {\n        print(input.countIncreases())\n    }\n    \n    func
        part2(_ input: [Int]) {\n        let windows = input.windows(ofCount: 3)\n    \n        print(windows.map({
        $0.reduce(0, +) }).countIncreases())\n    }\n\n    extension Array where Element
        == Int {\n        func countIncreases() -&gt; Int {\n            zipWithNext().map({
        $0.1 - $0.0 }).filter({ $0 &gt; 0 }).count\n        }\n    }\n\nAnd the zipWithNext
        function:\n\n    public extension Collection {\n        func zipWithNext()
        -&gt; Array&lt;(Element, Element)&gt; {\n            return self.zipWithNext
        { a, b in (a, b) }\n        }\n    \n        private func zipWithNext&lt;R&gt;(transform:
        (Element, Element) -&gt; R) -&gt; Array&lt;R&gt; {\n            var iterator
        = self.makeIterator()\n            guard var current = iterator.next() else
        {\n                return []\n            }\n            var result = [R]()\n            while
        let value = iterator.next() {\n                result.append(transform(current,
        value))\n                current = value\n            }\n    \n            return
        result\n        }\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Swift&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        used &lt;a href=\"https://github.com/apple/swift-algorithms\"&gt;Algorithms&lt;/a&gt;
        and took inspiration from Kotlin with it&amp;#39;s zipWithNext function.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func
        part1(_ input: [Int]) {\n    print(input.countIncreases())\n}\n\nfunc part2(_
        input: [Int]) {\n    let windows = input.windows(ofCount: 3)\n\n    print(windows.map({
        $0.reduce(0, +) }).countIncreases())\n}\n\nextension Array where Element ==
        Int {\n    func countIncreases() -&amp;gt; Int {\n        zipWithNext().map({
        $0.1 - $0.0 }).filter({ $0 &amp;gt; 0 }).count\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And
        the zipWithNext function:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public extension
        Collection {\n    func zipWithNext() -&amp;gt; Array&amp;lt;(Element, Element)&amp;gt;
        {\n        return self.zipWithNext { a, b in (a, b) }\n    }\n\n    private
        func zipWithNext&amp;lt;R&amp;gt;(transform: (Element, Element) -&amp;gt;
        R) -&amp;gt; Array&amp;lt;R&amp;gt; {\n        var iterator = self.makeIterator()\n        guard
        var current = iterator.next() else {\n            return []\n        }\n        var
        result = [R]()\n        while let value = iterator.next() {\n            result.append(transform(current,
        value))\n            current = value\n        }\n\n        return result\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsst3c/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsst3c", "created":
        1638369407.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsszew",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "DanKafe",
        "can_mod_post": false, "created_utc": 1638369486.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_vd662", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3.\n[Part 1](https://github.com/katzuv/advent-of-code/blob/solve/2021-01/2021/d01/p1.py),
        [Part 2](https://github.com/katzuv/advent-of-code/blob/solve/2021-01/2021/d01/p2.py).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3.\n&lt;a href=\"https://github.com/katzuv/advent-of-code/blob/solve/2021-01/2021/d01/p1.py\"&gt;Part
        1&lt;/a&gt;, &lt;a href=\"https://github.com/katzuv/advent-of-code/blob/solve/2021-01/2021/d01/p2.py\"&gt;Part
        2&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsszew/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsszew", "created":
        1638369486.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmst5oy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "blodgrahm",
        "can_mod_post": false, "created_utc": 1638369566.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_8u7ex", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Rust\n\nhttps://github.com/natemcintosh/aoc_2021_rs/blob/main/examples/day01.rs\n\nGoing
        to try to write tests for each day as I work on them", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h2&gt;Rust&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/natemcintosh/aoc_2021_rs/blob/main/examples/day01.rs\"&gt;https://github.com/natemcintosh/aoc_2021_rs/blob/main/examples/day01.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Going
        to try to write tests for each day as I work on them&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmst5oy/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmst5oy", "created":
        1638369566.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsumbu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jenarvaezg",
        "can_mod_post": false, "created_utc": 1638370222.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_c3se4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Go\n\n[https://github.com/jenarvaezg/aoc2021/blob/b10ded7b2f4b99825400a9d639000bf154236645/days/day-01/day01.go](https://github.com/jenarvaezg/aoc2021/blob/b10ded7b2f4b99825400a9d639000bf154236645/days/day-01/day01.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Go&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jenarvaezg/aoc2021/blob/b10ded7b2f4b99825400a9d639000bf154236645/days/day-01/day01.go\"&gt;https://github.com/jenarvaezg/aoc2021/blob/b10ded7b2f4b99825400a9d639000bf154236645/days/day-01/day01.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsumbu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsumbu", "created":
        1638370222.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638370753.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsvczl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Niristius",
        "can_mod_post": false, "created_utc": 1638370539.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_25gkd7bb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python3**\n\nwith pandas\n\nPart 1\n\n    import pandas as pd\n    values
        = pd.read_csv(\"input\")\n    PreviousValue=values[''value''][0]\n    AmoutOfIncreases=0\n    for
        CurrentValue in values[''value'']:    \n        if CurrentValue &gt; PreviousValue:\n            AmoutOfIncreases
        = AmoutOfIncreases + 1    \n        PreviousValue = CurrentValue\n    print(AmoutOfIncreases)\n\nPart
        2\n\n    import pandas as pd\n    values = pd.read_csv(\"input\")\n    values[''Moving
        Average''] = values[''value''].rolling(window=3).mean()\n    PreviousValue=AmoutOfIncreases=0\n    for
        mean in values[''Moving Average'']:\n        CurrentValue = mean\n        if
        CurrentValue &gt; PreviousValue:\n            AmoutOfIncreases = AmoutOfIncreases
        +1\n        PreviousValue = CurrentValue\n    print(AmoutOfIncreases)\n\n\\------  \nEdit:
        Im not good with reddit Markdown yet.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;with
        pandas&lt;/p&gt;\n\n&lt;p&gt;Part 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        pandas as pd\nvalues = pd.read_csv(&amp;quot;input&amp;quot;)\nPreviousValue=values[&amp;#39;value&amp;#39;][0]\nAmoutOfIncreases=0\nfor
        CurrentValue in values[&amp;#39;value&amp;#39;]:    \n    if CurrentValue
        &amp;gt; PreviousValue:\n        AmoutOfIncreases = AmoutOfIncreases + 1    \n    PreviousValue
        = CurrentValue\nprint(AmoutOfIncreases)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import pandas as pd\nvalues = pd.read_csv(&amp;quot;input&amp;quot;)\nvalues[&amp;#39;Moving
        Average&amp;#39;] = values[&amp;#39;value&amp;#39;].rolling(window=3).mean()\nPreviousValue=AmoutOfIncreases=0\nfor
        mean in values[&amp;#39;Moving Average&amp;#39;]:\n    CurrentValue = mean\n    if
        CurrentValue &amp;gt; PreviousValue:\n        AmoutOfIncreases = AmoutOfIncreases
        +1\n    PreviousValue = CurrentValue\nprint(AmoutOfIncreases)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;------&lt;br/&gt;\nEdit:
        Im not good with reddit Markdown yet.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsvczl/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsvczl", "created": 1638370539.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_hmu0xny", "id": "hmu0xny", "parent_id": "t1_hmsvczl", "depth": 1, "children":
        ["hmu0xny"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsvo2v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LLBlumire",
        "can_mod_post": false, "created_utc": 1638370674.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_1616da", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust:\n\nhttps://github.com/LLBlumire/advent-of-code/blob/master/src/y2021d01.rs\n\nVideo:\n\nhttps://www.youtube.com/watch?v=pdvFQ38Q1Zw",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/LLBlumire/advent-of-code/blob/master/src/y2021d01.rs\"&gt;https://github.com/LLBlumire/advent-of-code/blob/master/src/y2021d01.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Video:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.youtube.com/watch?v=pdvFQ38Q1Zw\"&gt;https://www.youtube.com/watch?v=pdvFQ38Q1Zw&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsvo2v/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsvo2v", "created":
        1638370674.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsvx7j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "benz1n",
        "can_mod_post": false, "created_utc": 1638370787.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_13zypr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First time participating on AoC :D, it''s been a fun first day! So here is
        my [solution in Kotlin](https://github.com/gfioretti/AdventOfCode2021/blob/main/src/main/kotlin/Day1.kt).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First time participating
        on AoC :D, it&amp;#39;s been a fun first day! So here is my &lt;a href=\"https://github.com/gfioretti/AdventOfCode2021/blob/main/src/main/kotlin/Day1.kt\"&gt;solution
        in Kotlin&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsvx7j/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsvx7j", "created":
        1638370787.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsw7qt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SirWyvern1",
        "can_mod_post": false, "created_utc": 1638370917.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5rz8sf4e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C# .Net5\n\n[https://github.com/JKolkman/AdventOfCode](https://github.com/JKolkman/AdventOfCode)\n\nThis
        repo will contain probably all my solutions", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;C# .Net5&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/JKolkman/AdventOfCode\"&gt;https://github.com/JKolkman/AdventOfCode&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This
        repo will contain probably all my solutions&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsw7qt/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsw7qt", "created": 1638370917.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmsx0kp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ywgdana", "can_mod_post": false, "created_utc":
        1638371262.0, "send_replies": true, "parent_id": "t1_hmsw7qt", "score": 3,
        "author_fullname": "t2_1oo4", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Just as a note: I think
        the elves who run Advent of Code request that you not include the problem
        inputs in your github repos.\n\nBut also hurrah a fellow C#er!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Just as a note: I think the elves who run
        Advent of Code request that you not include the problem inputs in your github
        repos.&lt;/p&gt;\n\n&lt;p&gt;But also hurrah a fellow C#er!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsx0kp/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsx0kp", "created":
        1638371262.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsxaew",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SirWyvern1",
        "can_mod_post": false, "created_utc": 1638371381.0, "send_replies": true,
        "parent_id": "t1_hmsx0kp", "score": 3, "author_fullname": "t2_5rz8sf4e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ah, thanks for the Tip, will remove that", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Ah, thanks for the Tip, will remove that&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsxaew/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsxaew", "created":
        1638371381.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmsyk5e", "id": "hmsyk5e", "parent_id":
        "t1_hmsx0kp", "depth": 2, "children": ["hmsyk5e"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmswer6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "arvindkgs",
        "can_mod_post": false, "created_utc": 1638371002.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4umrqos8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python   \n\\----------\n\nProblem 1: [https://replit.com/@arvindkumar39/Adventofcode202111?v=1](https://replit.com/@arvindkumar39/Adventofcode202111?v=1)\n\nProblem
        2: [https://replit.com/@arvindkumar39/Adventofcode202112?v=1](https://replit.com/@arvindkumar39/Adventofcode202112?v=1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;br/&gt;\n----------&lt;/p&gt;\n\n&lt;p&gt;Problem
        1: &lt;a href=\"https://replit.com/@arvindkumar39/Adventofcode202111?v=1\"&gt;https://replit.com/@arvindkumar39/Adventofcode202111?v=1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Problem
        2: &lt;a href=\"https://replit.com/@arvindkumar39/Adventofcode202112?v=1\"&gt;https://replit.com/@arvindkumar39/Adventofcode202112?v=1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmswer6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmswer6", "created":
        1638371002.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt02z0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "damien_pirsy",
        "can_mod_post": false, "created_utc": 1638372568.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_kl4u8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**PHP**\n\nEasy and plain, I''m doing in the spare time during my office
        hours so I don''t have time for fancy stuff! \ud83d\ude05\n\nRepo page: [https://github.com/DamienPirsy/AoC\\_2021/blob/master/PHP/01/day01.php](https://github.com/DamienPirsy/AoC_2021/blob/master/PHP/01/day01.php)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Easy
        and plain, I&amp;#39;m doing in the spare time during my office hours so I
        don&amp;#39;t have time for fancy stuff! \ud83d\ude05&lt;/p&gt;\n\n&lt;p&gt;Repo
        page: &lt;a href=\"https://github.com/DamienPirsy/AoC_2021/blob/master/PHP/01/day01.php\"&gt;https://github.com/DamienPirsy/AoC_2021/blob/master/PHP/01/day01.php&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt02z0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt02z0", "created":
        1638372568.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmteh2u", "id": "hmteh2u", "parent_id":
        "t1_hmt02z0", "depth": 1, "children": ["hmteh2u"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt0d6b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "OrangeredStilton",
        "can_mod_post": false, "created_utc": 1638372688.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5h0r6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "High time I learned some Python, so I''m taking the initiative to do so through
        AoC. Fairly simple solutions for day 1, not going in for any fancy list comprehensions
        or the like _just_ yet:\n\nhttps://github.com/Two9A/advent-2021/blob/main/01.py  \nhttps://github.com/Two9A/advent-2021/blob/main/02.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;High time I learned
        some Python, so I&amp;#39;m taking the initiative to do so through AoC. Fairly
        simple solutions for day 1, not going in for any fancy list comprehensions
        or the like &lt;em&gt;just&lt;/em&gt; yet:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Two9A/advent-2021/blob/main/01.py\"&gt;https://github.com/Two9A/advent-2021/blob/main/01.py&lt;/a&gt;&lt;br/&gt;\n&lt;a
        href=\"https://github.com/Two9A/advent-2021/blob/main/02.py\"&gt;https://github.com/Two9A/advent-2021/blob/main/02.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt0d6b/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt0d6b", "created":
        1638372688.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638377230.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt0ynh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sojumaster",
        "can_mod_post": false, "created_utc": 1638372938.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_jljux", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Powershell v5\n\nPart 0:\n\n`$data = get-content \"sonardata.txt\"`\n\n`$increases
        = 0`\n\n`for($count=0;$count -lt $data.count;$count++) {`\n\n`if([int]$data[$count+1]
        -gt $data[$count]){$increases++}`\n\n`}`\n\n`write-host \"Number of increases
        is: \" $increases`\n\nPart 1:\n\n`$data = get-content \"sonardata.txt\"`\n\n`$increases
        = 0`\n\n`for($count=0; $count -lt $data.count; $count++){`\n\n`if($data[$count+2]
        -ne $null) {`\n\n`if([int]$data[$count+1] + [int]$data[$count+2] + [int]$data[$count+3]
        -gt [int]$data[$count] + [int]$data[$count+1] + [int]$data[$count+2]) { $increases++
        }`\n\n`}`\n\n`}`\n\n`write-host \"Number of increases is: \" $increases`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Powershell v5&lt;/p&gt;\n\n&lt;p&gt;Part
        0:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$data = get-content &amp;quot;sonardata.txt&amp;quot;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$increases
        = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for($count=0;$count -lt
        $data.count;$count++) {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if([int]$data[$count+1]
        -gt $data[$count]){$increases++}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;write-host
        &amp;quot;Number of increases is: &amp;quot; $increases&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$data = get-content &amp;quot;sonardata.txt&amp;quot;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$increases
        = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for($count=0; $count -lt
        $data.count; $count++){&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if($data[$count+2]
        -ne $null) {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if([int]$data[$count+1]
        + [int]$data[$count+2] + [int]$data[$count+3] -gt [int]$data[$count] + [int]$data[$count+1]
        + [int]$data[$count+2]) { $increases++ }&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;write-host
        &amp;quot;Number of increases is: &amp;quot; $increases&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt0ynh/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt0ynh", "created":
        1638372938.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmtfphx", "id": "hmtfphx", "parent_id":
        "t1_hmt0ynh", "depth": 1, "children": ["hmtfphx", "hmu0k53"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt1dsj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "campingD",
        "can_mod_post": false, "created_utc": 1638373111.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_kcdh9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "FYI im a total noob.\n\n**Part 1** \n\nin excel using a simple `=IF(A2&gt;A1;1;0)`
        in colum b. then selecting the whole of col be and look at the SUM at the
        bottom right in excel.   \n\n\n**Part 2** was a bit trickier to do in excel
        (no clue how to apply rolling window) I did remember how to do this un timeseries
        using R so I:  \n\n\n`Library(zoo)`\n\n`Advent_of_Code_day_1 &lt;- read_excel(\"D:/CREAM/advent
        of code/Advent of Code day 1.xlsx\",sheet = \"Sheet2\", col_names = FALSE)`\r  \n\r  \n\r`out
        &lt;- rollsum(Advent_of_Code_day_1, 3) #This is the rolling window formula`\r  \n\r  \n`write.table(out,
        file = \"out.txt\",`\r  \n`row.names = F) # get the data out an back to excel
        where I basically repeated step 1.` \n\nThe solution works but is super ugly
        given I had to use excel and R and sort of import-export the data.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;FYI im a total noob.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        1&lt;/strong&gt; &lt;/p&gt;\n\n&lt;p&gt;in excel using a simple &lt;code&gt;=IF(A2&amp;gt;A1;1;0)&lt;/code&gt;
        in colum b. then selecting the whole of col be and look at the SUM at the
        bottom right in excel.   &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Part 2&lt;/strong&gt;
        was a bit trickier to do in excel (no clue how to apply rolling window) I
        did remember how to do this un timeseries using R so I:  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Library(zoo)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Advent_of_Code_day_1
        &amp;lt;- read_excel(&amp;quot;D:/CREAM/advent of code/Advent of Code day
        1.xlsx&amp;quot;,sheet = &amp;quot;Sheet2&amp;quot;, col_names = FALSE)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;out
        &amp;lt;- rollsum(Advent_of_Code_day_1, 3) #This is the rolling window formula&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;write.table(out,
        file = &amp;quot;out.txt&amp;quot;,&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;row.names
        = F) # get the data out an back to excel where I basically repeated step 1.&lt;/code&gt;
        &lt;/p&gt;\n\n&lt;p&gt;The solution works but is super ugly given I had to
        use excel and R and sort of import-export the data.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt1dsj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt1dsj", "created":
        1638373111.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmt86j3", "id": "hmt86j3", "parent_id":
        "t1_hmt1dsj", "depth": 1, "children": ["hmt86j3"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638387962.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt2d0z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Python 3:\n\n\nDone!  \n\nFirst Part: https://pastebin.com/hpnCbFFH  \nSecond
        Part: https://pastebin.com/bzYXGDVK", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmt2d0z", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3:&lt;/p&gt;\n\n&lt;p&gt;Done!  &lt;/p&gt;\n\n&lt;p&gt;First
        Part: &lt;a href=\"https://pastebin.com/hpnCbFFH\"&gt;https://pastebin.com/hpnCbFFH&lt;/a&gt;&lt;br/&gt;\nSecond
        Part: &lt;a href=\"https://pastebin.com/bzYXGDVK\"&gt;https://pastebin.com/bzYXGDVK&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt2d0z/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638373521.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638373521.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmu0ec2", "id": "hmu0ec2", "parent_id":
        "t1_hmt2d0z", "depth": 1, "children": ["hmu0ec2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt2qvg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nirgle",
        "can_mod_post": false, "created_utc": 1638373681.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5cvua", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C#/LINQ** this year while also maintaining a dockerized build for the fun
        of it\n\n[Day01.cs](https://github.com/jasonincanada/aoc-2021/blob/main/AdventOfCode/AdventOfCode.CSharp/Day01.cs#L34)\n\nMy
        goal this year is to meld imperative and functional styles. So right away
        you can notice I have an indexed for loop but without actually using the index.  I
        might use F# at some point but I''m going to see how far I can get with just
        LINQ in C#\n\nDocker instructions (includes my account''s inputs): https://github.com/jasonincanada/aoc-2021/blob/main/Docs/Docker.md",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C#/LINQ&lt;/strong&gt;
        this year while also maintaining a dockerized build for the fun of it&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jasonincanada/aoc-2021/blob/main/AdventOfCode/AdventOfCode.CSharp/Day01.cs#L34\"&gt;Day01.cs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        goal this year is to meld imperative and functional styles. So right away
        you can notice I have an indexed for loop but without actually using the index.  I
        might use F# at some point but I&amp;#39;m going to see how far I can get
        with just LINQ in C#&lt;/p&gt;\n\n&lt;p&gt;Docker instructions (includes my
        account&amp;#39;s inputs): &lt;a href=\"https://github.com/jasonincanada/aoc-2021/blob/main/Docs/Docker.md\"&gt;https://github.com/jasonincanada/aoc-2021/blob/main/Docs/Docker.md&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt2qvg/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt2qvg", "created":
        1638373681.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt3c9q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ywgdana",
        "can_mod_post": false, "created_utc": 1638373922.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_1oo4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C#** \n\nThe core of my solution:\n\n    int sum = lines[0] + lines[1]
        + lines[2];\n    \n    int increasesPt1 = 0;\n    int increasesPt2 = 0;\n    for
        (int j = 1; j &lt; lines.Length; j++)\n    {\n        if (lines[j] &gt; lines[j
        - 1])\n            ++increasesPt1;\n    \n        if (j &lt; 3)\n            continue;\n    \n        int
        nextSum = sum - lines[j - 3] + lines[j];\n        if (nextSum &gt; sum)\n            ++increasesPt2;\n        sum
        = nextSum;\n    }\n\nI didn''t think to use a fancy Window() function like
        so many others. (I assume there''s probably one in Linq)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C#&lt;/strong&gt; &lt;/p&gt;\n\n&lt;p&gt;The
        core of my solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int sum = lines[0]
        + lines[1] + lines[2];\n\nint increasesPt1 = 0;\nint increasesPt2 = 0;\nfor
        (int j = 1; j &amp;lt; lines.Length; j++)\n{\n    if (lines[j] &amp;gt; lines[j
        - 1])\n        ++increasesPt1;\n\n    if (j &amp;lt; 3)\n        continue;\n\n    int
        nextSum = sum - lines[j - 3] + lines[j];\n    if (nextSum &amp;gt; sum)\n        ++increasesPt2;\n    sum
        = nextSum;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I didn&amp;#39;t think
        to use a fancy Window() function like so many others. (I assume there&amp;#39;s
        probably one in Linq)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt3c9q/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt3c9q", "created":
        1638373922.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638882762.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt42bv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "OverjoyedBanana",
        "can_mod_post": false, "created_utc": 1638374213.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_xhxgv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Haskell**\n\n    main = interact $ (++\"\\n\") . show . f . map (read ::
        String -&gt; Int) . lines\n\n    f :: [Int] -&gt; Int\n\n    -- ex1\n    f1
        l = length $ filter (==True) $ zipWith (&lt;) l (tail l)\n\n    -- ex2\n    f
        l = f1 $ zipWith3 (\\a b c -&gt; a+b+c) l (drop 1 l) (drop 2 l)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Haskell&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;main
        = interact $ (++&amp;quot;\\n&amp;quot;) . show . f . map (read :: String
        -&amp;gt; Int) . lines\n\nf :: [Int] -&amp;gt; Int\n\n-- ex1\nf1 l = length
        $ filter (==True) $ zipWith (&amp;lt;) l (tail l)\n\n-- ex2\nf l = f1 $ zipWith3
        (\\a b c -&amp;gt; a+b+c) l (drop 1 l) (drop 2 l)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt42bv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt42bv", "created":
        1638374213.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt5dgk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MissMormie",
        "can_mod_post": false, "created_utc": 1638374741.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ilvy2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java on github: https://github.com/MissMormie/adventOfCode2020/blob/main/src/main/java/days2021/day1_SonarSweep.java\n\nI
        spend 0 seconds on optimization which might''ve saved 0.2 seconds of runtime
        ;)\n\nCode be ugly.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java
        on github: &lt;a href=\"https://github.com/MissMormie/adventOfCode2020/blob/main/src/main/java/days2021/day1_SonarSweep.java\"&gt;https://github.com/MissMormie/adventOfCode2020/blob/main/src/main/java/days2021/day1_SonarSweep.java&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        spend 0 seconds on optimization which might&amp;#39;ve saved 0.2 seconds of
        runtime ;)&lt;/p&gt;\n\n&lt;p&gt;Code be ugly.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt5dgk/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmt5dgk", "created": 1638374741.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_hmty55w", "id": "hmty55w", "parent_id": "t1_hmt5dgk", "depth": 1, "children":
        ["hmty55w"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt7ejw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmt7ejw", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt7ejw/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638375567.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638375567.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtbmce",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "HenrikWL",
        "can_mod_post": false, "created_utc": 1638377237.0, "send_replies": true,
        "parent_id": "t1_hmt7ejw", "score": 3, "author_fullname": "t2_6nafw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Dude, this solution was *sweet!*\n\nI\u2019m doing Advent of Code in Kotlin
        this year because I want to get familiar with it, and in this case my first
        solution was very imperative, using for loops and brute forcing it. This kind
        of library knowledge is just the thing I\u2019m sorely lacking. \ud83d\ude48",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dude, this solution
        was &lt;em&gt;sweet!&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;I\u2019m doing Advent
        of Code in Kotlin this year because I want to get familiar with it, and in
        this case my first solution was very imperative, using for loops and brute
        forcing it. This kind of library knowledge is just the thing I\u2019m sorely
        lacking. \ud83d\ude48&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtbmce/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtbmce", "created":
        1638377237.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638430631.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt7y0e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "iamnguele",
        "can_mod_post": false, "created_utc": 1638375785.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_zpobo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Java (20295 / 18141)\n\n* [Part 1 &amp; 2](https://github.com/CodingNagger/advent-of-code-2021/blob/master/src/main/java/com/codingnagger/days/Day1.java)\n*
        Blog post: [The Advent of Code 2021 Day 1 log, starting slow](https://www.codingnagger.com/2021/12/01/the-advent-of-code-2021-day-1-log-starting-slow/)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Java (20295 / 18141)&lt;/h1&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a
        href=\"https://github.com/CodingNagger/advent-of-code-2021/blob/master/src/main/java/com/codingnagger/days/Day1.java\"&gt;Part
        1 &amp;amp; 2&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Blog post: &lt;a href=\"https://www.codingnagger.com/2021/12/01/the-advent-of-code-2021-day-1-log-starting-slow/\"&gt;The
        Advent of Code 2021 Day 1 log, starting slow&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt7y0e/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt7y0e", "created":
        1638375785.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmt8koo", "id": "hmt8koo", "parent_id":
        "t1_hmt7y0e", "depth": 1, "children": ["hmt8koo"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638376123.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt84zy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "atr1ka",
        "can_mod_post": false, "created_utc": 1638375860.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_h0crxsek", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in [C++](https://topaz.github.io/paste/#XQAAAQAWAgAAAAAAAAARmknGRw8TogB3Oxzri2QTFyHNmsUnNApHN7ntt1+q1pz9FVoHLChitAfAaX4nY5SD2/rYX5a3mx3P1MTh1scLJgCYF5PBp/eGaULOkLARAE2kAanze0NHBxSgk/YtEYz6HArAFGReqB6diAv+xiZWQhxbFBbhWBXsUjigXZhYLxWRVJWGm6SMcJ+vMwkumDiEjFxiGWfaZUA+prHibGpg/4vQAx4VTEYVSviaY5DyCvdGWM3rXHmG1Vh0/zXmeCOjjEsHIl+5IStbM7sbJ8Y9c+rHeEUj5fpFm3Qp2sv+GdsSMcQ5sjW9CKu2wlvOijPkv5PfFH+HiiFFpEy7X7RrVuDQK3X2mfvmv/oLXnqoEDdMwXqUZLrINrI37xNL/11pYgA=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in &lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQAWAgAAAAAAAAARmknGRw8TogB3Oxzri2QTFyHNmsUnNApHN7ntt1+q1pz9FVoHLChitAfAaX4nY5SD2/rYX5a3mx3P1MTh1scLJgCYF5PBp/eGaULOkLARAE2kAanze0NHBxSgk/YtEYz6HArAFGReqB6diAv+xiZWQhxbFBbhWBXsUjigXZhYLxWRVJWGm6SMcJ+vMwkumDiEjFxiGWfaZUA+prHibGpg/4vQAx4VTEYVSviaY5DyCvdGWM3rXHmG1Vh0/zXmeCOjjEsHIl+5IStbM7sbJ8Y9c+rHeEUj5fpFm3Qp2sv+GdsSMcQ5sjW9CKu2wlvOijPkv5PfFH+HiiFFpEy7X7RrVuDQK3X2mfvmv/oLXnqoEDdMwXqUZLrINrI37xNL/11pYgA=\"&gt;C++&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt84zy/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt84zy", "created":
        1638375860.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt8pge",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "NeilNjae",
        "can_mod_post": false, "created_utc": 1638376085.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_6836y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell. Short enough to include the whole thing here. [Full code on Gitlab](https://gitlab.com/NeilNjae/advent-of-code-21).\n\n    import
        Data.List\n\n    main :: IO ()\n    main = \n      do  numStrs &lt;- readFile
        \"data/advent01.txt\"\n          let nums = map (read @Int) $ lines numStrs\n          print
        $ part1 nums\n          print $ part2 nums\n\n    part1 :: [Int] -&gt; Int\n    part1
        = countIncreasing\n\n    part2 :: [Int] -&gt; Int\n    part2 nums = countIncreasing
        $ map sum windows\n      where windows = filter (\\w -&gt; length w == 3)
        $ map (take 3) $ tails nums\n\n    countIncreasing :: [Int] -&gt; Int\n    countIncreasing
        nums = length $ filter (&gt; 0) $ zipWith (-) (tail nums) nums", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell. Short enough to include the whole
        thing here. &lt;a href=\"https://gitlab.com/NeilNjae/advent-of-code-21\"&gt;Full
        code on Gitlab&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import Data.List\n\nmain
        :: IO ()\nmain = \n  do  numStrs &amp;lt;- readFile &amp;quot;data/advent01.txt&amp;quot;\n      let
        nums = map (read @Int) $ lines numStrs\n      print $ part1 nums\n      print
        $ part2 nums\n\npart1 :: [Int] -&amp;gt; Int\npart1 = countIncreasing\n\npart2
        :: [Int] -&amp;gt; Int\npart2 nums = countIncreasing $ map sum windows\n  where
        windows = filter (\\w -&amp;gt; length w == 3) $ map (take 3) $ tails nums\n\ncountIncreasing
        :: [Int] -&amp;gt; Int\ncountIncreasing nums = length $ filter (&amp;gt; 0)
        $ zipWith (-) (tail nums) nums\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt8pge/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt8pge", "created":
        1638376085.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638377368.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmt9f7j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JackyReacher",
        "can_mod_post": false, "created_utc": 1638376365.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_a17uuzq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Deno**\n\n```js\nconst data = (await Deno.readTextFile(''data.txt'')).split(''\\n'').map(Number);\nconst
        part1 = (data: Array&lt;number&gt;) =&gt; data.filter((item, index, arr) =&gt;
        index &gt; 0 &amp;&amp; item &gt; arr[index - 1]).length;\nconst part2 = (data:
        Array&lt;number&gt;) =&gt; {\n    const windows = [];\n    for (let i = 2;
        i &lt; data.length; i++) {\n        windows.push(data[i] + data[i - 1] + data[i
        - 2]);\n    }\n    return part1(windows);\n}\nconsole.log(part1(data), part2(data));\n```\n\nThat
        joy when I realized I could simply use the function from part1 in part2 :D",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Deno&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;js\nconst
        data = (await Deno.readTextFile(&amp;#39;data.txt&amp;#39;)).split(&amp;#39;\\n&amp;#39;).map(Number);\nconst
        part1 = (data: Array&amp;lt;number&amp;gt;) =&amp;gt; data.filter((item, index,
        arr) =&amp;gt; index &amp;gt; 0 &amp;amp;&amp;amp; item &amp;gt; arr[index
        - 1]).length;\nconst part2 = (data: Array&amp;lt;number&amp;gt;) =&amp;gt;
        {\n    const windows = [];\n    for (let i = 2; i &amp;lt; data.length; i++)
        {\n        windows.push(data[i] + data[i - 1] + data[i - 2]);\n    }\n    return
        part1(windows);\n}\nconsole.log(part1(data), part2(data));\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;That
        joy when I realized I could simply use the function from part1 in part2 :D&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt9f7j/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt9f7j", "created":
        1638376365.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtb264",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aardvark1231",
        "can_mod_post": false, "created_utc": 1638377016.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_24zg2nv1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My solution in C#](https://topaz.github.io/paste/#XQAAAQBTBgAAAAAAAAA6nMlWi076alCx9N1TtsVNiXecUoGeYT6aP6mR8mlULJpnBWlkXihMFNaRPYev6fF2iCZ7U+Cuf/y+wLt7aE4vFuBojMos7kq6n9Q96/JB58b5MVnhvn2aOltJaWIk4vAKarpi6qjnSt3b9MdbuKUzzaWMDuq5Zk5jjdA2baTRL8AMteAap+1SWMp9rMOy03v0rvgSJw6bXJKhmiWX02HUeT17swZRFCPonBiKVKbXvNLF/A5cQkZoQpH1Di/izOMpvup3GVf6lHrSGOSo2ox17w+5ALX+NhklCoPpSHy557KXtpsXo+Wcr+atX1TOoj3x8w5zKEUJuT86tfoxuvKPYREorny0TiCWmbPHTqCB4QIdmIiOMA4wTzpU7fScUD5DIJyqmlU8MtunV2Xc+Qf+xntUtYhtLinNFzDMJKWbfoHBmQWyrjAljvAZCKwQmV3SOo1KNyWvu9oSM3jXWnrqG3u4CDQNztwfIsuf+Ejra0Wz5UD+0F6Vqj+WAefeyoAGXm2+blQPzB/O4H7EU0WSHArr4xofONS406sEyepiiS6iI9kHhwiV/YmKVFGLeTdf724v0uTH5ZGhx1EjBZCnsCfCyuT8aSL+ywN/)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBTBgAAAAAAAAA6nMlWi076alCx9N1TtsVNiXecUoGeYT6aP6mR8mlULJpnBWlkXihMFNaRPYev6fF2iCZ7U+Cuf/y+wLt7aE4vFuBojMos7kq6n9Q96/JB58b5MVnhvn2aOltJaWIk4vAKarpi6qjnSt3b9MdbuKUzzaWMDuq5Zk5jjdA2baTRL8AMteAap+1SWMp9rMOy03v0rvgSJw6bXJKhmiWX02HUeT17swZRFCPonBiKVKbXvNLF/A5cQkZoQpH1Di/izOMpvup3GVf6lHrSGOSo2ox17w+5ALX+NhklCoPpSHy557KXtpsXo+Wcr+atX1TOoj3x8w5zKEUJuT86tfoxuvKPYREorny0TiCWmbPHTqCB4QIdmIiOMA4wTzpU7fScUD5DIJyqmlU8MtunV2Xc+Qf+xntUtYhtLinNFzDMJKWbfoHBmQWyrjAljvAZCKwQmV3SOo1KNyWvu9oSM3jXWnrqG3u4CDQNztwfIsuf+Ejra0Wz5UD+0F6Vqj+WAefeyoAGXm2+blQPzB/O4H7EU0WSHArr4xofONS406sEyepiiS6iI9kHhwiV/YmKVFGLeTdf724v0uTH5ZGhx1EjBZCnsCfCyuT8aSL+ywN/\"&gt;My
        solution in C#&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtb264/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtb264", "created":
        1638377016.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtb5yc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "POGtastic",
        "can_mod_post": false, "created_utc": 1638377059.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_9rleo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python.\n\nPart 1:\n\n    from more_itertools import pairwise, ilen\n\n    def
        part_1(filename):\n        with open(filename) as f:\n            return ilen(None
        for x, y in pairwise(map(int, f)) if x &lt; y)\n\nPart 2:\n\n    from more_itertools
        import pairwise, triplewise, ilen\n\n    def part_2(filename):\n        with
        open(filename) as f:\n            return ilen(\n                None for t1,
        t2 in pairwise(triplewise(map(int, f))) if sum(t1) &lt; sum(t2))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python.&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        more_itertools import pairwise, ilen\n\ndef part_1(filename):\n    with open(filename)
        as f:\n        return ilen(None for x, y in pairwise(map(int, f)) if x &amp;lt;
        y)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        more_itertools import pairwise, triplewise, ilen\n\ndef part_2(filename):\n    with
        open(filename) as f:\n        return ilen(\n            None for t1, t2 in
        pairwise(triplewise(map(int, f))) if sum(t1) &amp;lt; sum(t2))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtb5yc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtb5yc", "created":
        1638377059.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtbcpy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rafaelleru",
        "can_mod_post": false, "created_utc": 1638377132.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_14dghw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C++  \n\n\nGoing for C++ this year, I don''t know how far I will go but
        for the moment here it is my solution for day 1:\n\nhttps://github.com/rafaelleru/aoc2021/blob/main/1/1.cpp\n\n\nPD:
        I did not know the concept of windowing an array, probably C++ has some built-in
        solution for this, maybe I will revisit this in the next days...", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;C++&lt;/h1&gt;\n\n&lt;p&gt;Going for C++
        this year, I don&amp;#39;t know how far I will go but for the moment here
        it is my solution for day 1:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/rafaelleru/aoc2021/blob/main/1/1.cpp\"&gt;https://github.com/rafaelleru/aoc2021/blob/main/1/1.cpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;PD:
        I did not know the concept of windowing an array, probably C++ has some built-in
        solution for this, maybe I will revisit this in the next days...&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtbcpy/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtbcpy", "created":
        1638377132.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtcewm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "J-Swift",
        "can_mod_post": false, "created_utc": 1638377545.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4z1sk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Deno / Typescript\n\nhttps://github.com/J-Swift/advent-of-code-2021/tree/master/day_01",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Deno / Typescript&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/J-Swift/advent-of-code-2021/tree/master/day_01\"&gt;https://github.com/J-Swift/advent-of-code-2021/tree/master/day_01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtcewm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtcewm", "created":
        1638377545.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmteqky",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Ac3kas",
        "can_mod_post": false, "created_utc": 1638378467.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_11mdur", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**PHP**\n\n**PART I**\n\n`$list2 = array(\"199\", \"200\", \"208\", \"210\",
        \"200\", \"207\", \"240\", \"269\", \"260\", \"263\");`\n\n`$length = count($list2);`\n\n`$counter
        = 1;`\n\n`for($i = 0; $i &lt; length; ++$i) {`\n\n`if (current($list2) &lt;
        next($list2)) {`\n\n`print_r($counter++ . \" \");//last number is the one
        you need}`\n\n`}`\n\n**PART II**\n\n`$list2 = array(\"199\", \"200\", \"208\",
        \"210\", \"200\", \"207\", \"240\", \"269\", \"260\", \"263\");`\n\n`$length
        = count($list);`\n\n`$counter = 1;`\n\n`for($i = 3; $i &lt; $length; ++$i)
        {`\n\n`if ($list[$i] &gt; ($list[$i-3])) {`\n\n`print_r($counter++ . \" \");//last
        number is the one you need}`\n\n`}`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;PART
        I&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$list2 = array(&amp;quot;199&amp;quot;,
        &amp;quot;200&amp;quot;, &amp;quot;208&amp;quot;, &amp;quot;210&amp;quot;,
        &amp;quot;200&amp;quot;, &amp;quot;207&amp;quot;, &amp;quot;240&amp;quot;,
        &amp;quot;269&amp;quot;, &amp;quot;260&amp;quot;, &amp;quot;263&amp;quot;);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$length
        = count($list2);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$counter =
        1;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for($i = 0; $i &amp;lt;
        length; ++$i) {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if (current($list2)
        &amp;lt; next($list2)) {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print_r($counter++
        . &amp;quot; &amp;quot;);//last number is the one you need}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;PART
        II&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$list2 = array(&amp;quot;199&amp;quot;,
        &amp;quot;200&amp;quot;, &amp;quot;208&amp;quot;, &amp;quot;210&amp;quot;,
        &amp;quot;200&amp;quot;, &amp;quot;207&amp;quot;, &amp;quot;240&amp;quot;,
        &amp;quot;269&amp;quot;, &amp;quot;260&amp;quot;, &amp;quot;263&amp;quot;);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$length
        = count($list);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$counter =
        1;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for($i = 3; $i &amp;lt;
        $length; ++$i) {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if ($list[$i]
        &amp;gt; ($list[$i-3])) {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print_r($counter++
        . &amp;quot; &amp;quot;);//last number is the one you need}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmteqky/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmteqky", "created":
        1638378467.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtf0lj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tcbrindle",
        "can_mod_post": false, "created_utc": 1638378577.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_r2bvf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C++**\n\n    constexpr auto count_increasing = [](int win_sz, const auto&amp;
        input) {\n        return flow::zip_with(std::greater&lt;&gt;{}, flow::drop(input,
        win_sz), input)\n                    .count(true);\n    };\n\n    constexpr
        auto part1 = std::bind_front(count_increasing, 1);\n    constexpr auto part2
        = std::bind_front(count_increasing, 3);\n\n    constexpr std::array test_data
        = {199, 200, 208, 210, 200, 207, 240, 269, 260, 263};\n    static_assert(part1(test_data)
        == 7);\n    static_assert(part2(test_data) == 5);\n\nFull code: https://github.com/tcbrindle/advent_of_code_2021/blob/main/dec01/main.cpp",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;constexpr
        auto count_increasing = [](int win_sz, const auto&amp;amp; input) {\n    return
        flow::zip_with(std::greater&amp;lt;&amp;gt;{}, flow::drop(input, win_sz),
        input)\n                .count(true);\n};\n\nconstexpr auto part1 = std::bind_front(count_increasing,
        1);\nconstexpr auto part2 = std::bind_front(count_increasing, 3);\n\nconstexpr
        std::array test_data = {199, 200, 208, 210, 200, 207, 240, 269, 260, 263};\nstatic_assert(part1(test_data)
        == 7);\nstatic_assert(part2(test_data) == 5);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Full
        code: &lt;a href=\"https://github.com/tcbrindle/advent_of_code_2021/blob/main/dec01/main.cpp\"&gt;https://github.com/tcbrindle/advent_of_code_2021/blob/main/dec01/main.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtf0lj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtf0lj", "created":
        1638378577.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638436355.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtfafr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wasi0013",
        "can_mod_post": false, "created_utc": 1638378684.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_imfe0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Elixir**\n\n    defmodule Aoc.Y2021.Day01 do\n      import Aoc.Helper.IO\n      def
        run_part1(), do: get_input() |&gt; solve_part1() \n      def run_part2(),
        do: get_input() |&gt; solve_part2()\n      def solve_part1(data) do \n        data
        \n        |&gt; Enum.reduce({hd(data), 0}, fn item, {prev, acc} -&gt; {item,
        acc + if(prev &lt; item, do: 1, else: 0)} end) \n        |&gt; elem(1) \n      end\n      def
        solve_part2(data), do: data |&gt; chunk_sum |&gt; solve_part1() \n      defp
        chunk_sum(data), do: data |&gt; Enum.chunk_every(3, 1) |&gt; Enum.map(&amp;Enum.sum/1)
        \n      defp get_input(), do: get_integer_input(\"2021\", \"01\", \"\\n\")\n    end\n\n\n[The
        repository is available on Github](https://github.com/wasi0013/advent_of_code)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Elixir&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        Aoc.Y2021.Day01 do\n  import Aoc.Helper.IO\n  def run_part1(), do: get_input()
        |&amp;gt; solve_part1() \n  def run_part2(), do: get_input() |&amp;gt; solve_part2()\n  def
        solve_part1(data) do \n    data \n    |&amp;gt; Enum.reduce({hd(data), 0},
        fn item, {prev, acc} -&amp;gt; {item, acc + if(prev &amp;lt; item, do: 1,
        else: 0)} end) \n    |&amp;gt; elem(1) \n  end\n  def solve_part2(data), do:
        data |&amp;gt; chunk_sum |&amp;gt; solve_part1() \n  defp chunk_sum(data),
        do: data |&amp;gt; Enum.chunk_every(3, 1) |&amp;gt; Enum.map(&amp;amp;Enum.sum/1)
        \n  defp get_input(), do: get_integer_input(&amp;quot;2021&amp;quot;, &amp;quot;01&amp;quot;,
        &amp;quot;\\n&amp;quot;)\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/wasi0013/advent_of_code\"&gt;The repository is available
        on Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtfafr/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtfafr", "created":
        1638378684.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtfl5k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ponozka153",
        "can_mod_post": false, "created_utc": 1638378804.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_nsc0pqw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# JS\n\nI''ve used normal JavaScript in browser console, it''s kinda begginer
        like code but you know, if it works, it works.  \n\n\n[GitHub](https://github.com/ponozka153/AdventOfCode/blob/0f6c87dc08e467e7c1199d9376b1c81f9ea024bd/2021/Day1/index.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;JS&lt;/h1&gt;\n\n&lt;p&gt;I&amp;#39;ve
        used normal JavaScript in browser console, it&amp;#39;s kinda begginer like
        code but you know, if it works, it works.  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ponozka153/AdventOfCode/blob/0f6c87dc08e467e7c1199d9376b1c81f9ea024bd/2021/Day1/index.js\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtfl5k/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtfl5k", "created":
        1638378804.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638379235.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtfxz8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wesreisz",
        "can_mod_post": false, "created_utc": 1638378944.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_hfiqa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using Golang:\n\n* [Day 1, Part 1](https://github.com/wesreisz/advent_of_code/blob/day1%2Cpart1/12-01/day1.go)\n*
        [Day 1, Part 2](https://github.com/wesreisz/advent_of_code/blob/day1%2Cpart2/12-01/day1.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using Golang:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a
        href=\"https://github.com/wesreisz/advent_of_code/blob/day1%2Cpart1/12-01/day1.go\"&gt;Day
        1, Part 1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/wesreisz/advent_of_code/blob/day1%2Cpart2/12-01/day1.go\"&gt;Day
        1, Part 2&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtfxz8/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmtfxz8", "created": 1638378944.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_r66vow", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "hmtil9k", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_r66vow", "score": 2, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_hmtil9k", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtil9k/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638379984.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638379984.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmtzt73", "id": "hmtzt73", "parent_id":
        "t1_hmtil9k", "depth": 1, "children": ["hmtzt73"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtith2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "willkill07",
        "can_mod_post": false, "created_utc": 1638380073.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_7j0ca", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C++20\n\n    #include &lt;algorithm&gt;\n    #include &lt;iterator&gt;\n    #include
        &lt;iostream&gt;\n    #include &lt;numeric&gt;\n    #include &lt;ranges&gt;\n    #include
        &lt;vector&gt;\n    \n    template &lt;int N&gt;\n    int\n    increasing(std::ranges::contiguous_range
        auto vals) {\n        return std::ranges::count_if(\n            vals | std::views::take(int(std::ranges::size(vals)
        - N + 1)),\n            [] (auto&amp; val) {\n                auto window_sum
        = [] (auto &amp;v) { return std::accumulate(&amp;v + 1, &amp;v + N, v); };\n                int
        const curr = window_sum(val);\n                int const next = window_sum(*(std::addressof(val)
        + 1));\n                return next &gt; curr;\n            });\n    }\n\n    int
        main() {\n        std::vector&lt;int&gt; vals {std::istream_iterator&lt;int&gt;{std::cin},
        {}};\n        std::printf(\"Part 1: %d\\nPart 2: %d\\n\", increasing&lt;1&gt;(vals),
        increasing&lt;3&gt;(vals));\n        return 0;\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;C++20&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;algorithm&amp;gt;\n#include &amp;lt;iterator&amp;gt;\n#include &amp;lt;iostream&amp;gt;\n#include
        &amp;lt;numeric&amp;gt;\n#include &amp;lt;ranges&amp;gt;\n#include &amp;lt;vector&amp;gt;\n\ntemplate
        &amp;lt;int N&amp;gt;\nint\nincreasing(std::ranges::contiguous_range auto
        vals) {\n    return std::ranges::count_if(\n        vals | std::views::take(int(std::ranges::size(vals)
        - N + 1)),\n        [] (auto&amp;amp; val) {\n            auto window_sum
        = [] (auto &amp;amp;v) { return std::accumulate(&amp;amp;v + 1, &amp;amp;v
        + N, v); };\n            int const curr = window_sum(val);\n            int
        const next = window_sum(*(std::addressof(val) + 1));\n            return next
        &amp;gt; curr;\n        });\n}\n\nint main() {\n    std::vector&amp;lt;int&amp;gt;
        vals {std::istream_iterator&amp;lt;int&amp;gt;{std::cin}, {}};\n    std::printf(&amp;quot;Part
        1: %d\\nPart 2: %d\\n&amp;quot;, increasing&amp;lt;1&amp;gt;(vals), increasing&amp;lt;3&amp;gt;(vals));\n    return
        0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtith2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtith2", "created":
        1638380073.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtkx5u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Juice_Vodka",
        "can_mod_post": false, "created_utc": 1638380885.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4bqe7q3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# JAVA\n\nSimple, hardcoded length of data array as length of input +3\n\n[Solution](https://topaz.github.io/paste/#XQAAAQC4AgAAAAAAAAA0m0pnuFI8c9/wau+quqMcACwUQoa8v/gYVFIXf9J/VGAWSrTCObSrmMHjNrxPEgl/U/iQ06MGcOD7mUgPG5HqQM9RgBA1Stfyaywdu0Lgn7rkXZ7CFLquhMwVQl9QAndANKryYlfQWNv8g9b7mcYd1NHj1jNUPs9B4mog2zPsoBcv6xJKOXNnJchX/Ub9Fn57INt0jBLF/wglZn+abEyZR4uMiemXwHQQaQgPyw2erViai3YtO8J8gLjM28EoSVQX4ueDmY+0HZIqA5AonblhsKzEnqdzf70hQEGIQ6aOgnmuKXGfJ8D/TdCdvZ3aB+WmlLElGRj5QkEz3TVToHmKckrwMKPUc55TiUjQjHgzldB9WZ/V+NxeUMp31vJM7mjBvt0y1L0bRefeOhPs+v6SbNDDCtGsXvMq8DEVHm5lpwp4emRjgSnA2tqmEzX/66c8N2amLl8WAPWsFiPtgTQpja88QwwDplBijWKmM9m/vJePfnCDVcMiPMZ9WkQIOa777JvP)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;JAVA&lt;/h1&gt;\n\n&lt;p&gt;Simple,
        hardcoded length of data array as length of input +3&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQC4AgAAAAAAAAA0m0pnuFI8c9/wau+quqMcACwUQoa8v/gYVFIXf9J/VGAWSrTCObSrmMHjNrxPEgl/U/iQ06MGcOD7mUgPG5HqQM9RgBA1Stfyaywdu0Lgn7rkXZ7CFLquhMwVQl9QAndANKryYlfQWNv8g9b7mcYd1NHj1jNUPs9B4mog2zPsoBcv6xJKOXNnJchX/Ub9Fn57INt0jBLF/wglZn+abEyZR4uMiemXwHQQaQgPyw2erViai3YtO8J8gLjM28EoSVQX4ueDmY+0HZIqA5AonblhsKzEnqdzf70hQEGIQ6aOgnmuKXGfJ8D/TdCdvZ3aB+WmlLElGRj5QkEz3TVToHmKckrwMKPUc55TiUjQjHgzldB9WZ/V+NxeUMp31vJM7mjBvt0y1L0bRefeOhPs+v6SbNDDCtGsXvMq8DEVHm5lpwp4emRjgSnA2tqmEzX/66c8N2amLl8WAPWsFiPtgTQpja88QwwDplBijWKmM9m/vJePfnCDVcMiPMZ9WkQIOa777JvP\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtkx5u/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtkx5u", "created":
        1638380885.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtlqdt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "davichete",
        "can_mod_post": false, "created_utc": 1638381197.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_317fhm9v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Part 1 &amp; 2](https://topaz.github.io/paste/#XQAAAQDpAgAAAAAAAAAxmwhIY/U9T3viisPl+iEqrEkVwMyZG5nVJpuhVc6cytHCDTPvTGPFyHNcIdP/w+XmiQQLtg6gjPbHiVy5dHW2AflqzutdCNhRu17revyaKXPgdei4jkbNlfRRZz+dXX1QLpxKfpeIJq4BTk+CHIE9U8YC69DmAUIbKBvtrT/7N2gesyXKtyZNyxR1i1b60iRFkFIbaBswgkfOUefm21qN/N3///Rnm2Eb6N1Z3ojDlIwfzbxdJpT/8xgEJ+3qE7JoQXcxRUv+4PA9PmszxsHnch5Ok81/uFNYuuVuTAnK6CafAhxi3HnLi4zANNH36ysybdP/aKHxWbPAdOnV4fay8AHKU8Bia3nvDjZ/PVO3pu1t9fVXcQ5tKFxN62Df5eQYxw0J1NCBPRN3msKmH7F/oIZLAR068RDhNpzeqNXLa0EIrcV0SSvbOMiGgXr/07b9eA==)
        Kotlin", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDpAgAAAAAAAAAxmwhIY/U9T3viisPl+iEqrEkVwMyZG5nVJpuhVc6cytHCDTPvTGPFyHNcIdP/w+XmiQQLtg6gjPbHiVy5dHW2AflqzutdCNhRu17revyaKXPgdei4jkbNlfRRZz+dXX1QLpxKfpeIJq4BTk+CHIE9U8YC69DmAUIbKBvtrT/7N2gesyXKtyZNyxR1i1b60iRFkFIbaBswgkfOUefm21qN/N3///Rnm2Eb6N1Z3ojDlIwfzbxdJpT/8xgEJ+3qE7JoQXcxRUv+4PA9PmszxsHnch5Ok81/uFNYuuVuTAnK6CafAhxi3HnLi4zANNH36ysybdP/aKHxWbPAdOnV4fay8AHKU8Bia3nvDjZ/PVO3pu1t9fVXcQ5tKFxN62Df5eQYxw0J1NCBPRN3msKmH7F/oIZLAR068RDhNpzeqNXLa0EIrcV0SSvbOMiGgXr/07b9eA==\"&gt;Part
        1 &amp;amp; 2&lt;/a&gt; Kotlin&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtlqdt/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmtlqdt", "created": 1638381197.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638382804.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtomhu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bpiphany",
        "can_mod_post": false, "created_utc": 1638382314.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_15bo0c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3.9\n\nLearning how `convolve` and `correlate` work differently with
        (anti-)commutativity and `mode`.  \nSlightly obfuscated lesson in reduce and
        partial too.  \n\n\n    import sys\n    import numpy as np\n    from functools
        import reduce,partial\n    \n    depths = np.array([int(n.strip()) for n in
        sys.stdin.readlines()])\n    print(np.size(np.where(np.correlate(depths,(-1,1))&gt;0)))\n    print(np.size(np.where(reduce(partial(np.convolve,
        mode=''valid''), [depths, (1,1,1), (1,-1)]) &gt; 0)))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python 3.9&lt;/p&gt;\n\n&lt;p&gt;Learning how &lt;code&gt;convolve&lt;/code&gt;
        and &lt;code&gt;correlate&lt;/code&gt; work differently with (anti-)commutativity
        and &lt;code&gt;mode&lt;/code&gt;.&lt;br/&gt;\nSlightly obfuscated lesson
        in reduce and partial too.  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import sys\nimport
        numpy as np\nfrom functools import reduce,partial\n\ndepths = np.array([int(n.strip())
        for n in sys.stdin.readlines()])\nprint(np.size(np.where(np.correlate(depths,(-1,1))&amp;gt;0)))\nprint(np.size(np.where(reduce(partial(np.convolve,
        mode=&amp;#39;valid&amp;#39;), [depths, (1,1,1), (1,-1)]) &amp;gt; 0)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtomhu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtomhu", "created":
        1638382314.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmtrzxz", "id": "hmtrzxz", "parent_id":
        "t1_hmtomhu", "depth": 1, "children": ["hmtrzxz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtou21",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Atila_d_hun",
        "can_mod_post": false, "created_utc": 1638382395.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_jva6h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C++\n\n[Github Solution](https://github.com/daniel-meilak/Advent-of-Code-2021/tree/main/week_1/day_1)\n\nI
        ended up writing 3 solutions to day 1, a simple one, one using `std::inner_product`,
        and finally one using the source of `inner_product` (from cppreference) to
        calculate part1&amp;2 at the same time", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;C++&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/daniel-meilak/Advent-of-Code-2021/tree/main/week_1/day_1\"&gt;Github
        Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I ended up writing 3 solutions to
        day 1, a simple one, one using &lt;code&gt;std::inner_product&lt;/code&gt;,
        and finally one using the source of &lt;code&gt;inner_product&lt;/code&gt;
        (from cppreference) to calculate part1&amp;amp;2 at the same time&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtou21/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtou21", "created":
        1638382395.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtou73",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MicroBrewer",
        "can_mod_post": false, "created_utc": 1638382396.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4awwf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n\nPart 1\n\n    input\n        .Skip(1)\n        .Select((x,i) =&gt;
        x &gt; input[i] ? 1 : 0)\n        .Sum();\n\nPart 2 with MoreLinq\n\n    input\n        .Window(3)\n        .Select(Enumerable.Sum)\n        .Pairwise
        ((x, y) =&gt; y &gt; x ? 1 : 0)\n        .Sum();", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;p&gt;Part 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input\n    .Skip(1)\n    .Select((x,i)
        =&amp;gt; x &amp;gt; input[i] ? 1 : 0)\n    .Sum();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 with MoreLinq&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input\n    .Window(3)\n    .Select(Enumerable.Sum)\n    .Pairwise
        ((x, y) =&amp;gt; y &amp;gt; x ? 1 : 0)\n    .Sum();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtou73/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtou73", "created":
        1638382396.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638383010.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtouj5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Probie23",
        "can_mod_post": false, "created_utc": 1638382400.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_h4f223zy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "*Julia*\n\n    function count_increments(v::AbstractVector; k=3)\n        nincrements
        = 0\n        @inbounds for j in k+1:length(v)\n            if v[j] &gt; v[j-k]\n                nincrements
        += 1\n            end\n        end\n        nincrements\n    end", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;Julia&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        count_increments(v::AbstractVector; k=3)\n    nincrements = 0\n    @inbounds
        for j in k+1:length(v)\n        if v[j] &amp;gt; v[j-k]\n            nincrements
        += 1\n        end\n    end\n    nincrements\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtouj5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtouj5", "created":
        1638382400.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtp273",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ProPlayerPlayz",
        "can_mod_post": false, "created_utc": 1638382482.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5ahbryyv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "my solution to day 1 in Python\n\nPart 1:\n\n    f = open(\"puzzleinputq1.txt\",\"r\")\n    puzzleinput
        = f.read()\n    inplist = puzzleinput.split(''\\n'')\n    inplist = [int(i)
        for i in inplist]\n    prev = inplist[0]\n    count = 0\n    for i in inplist:\n        if
        i &gt; prev:\n            count += 1\n        prev = i\n    print(count)\n\nPart
        2:\n\n    f = open(\"puzzleinputq1.txt\",\"r\")\n    puzzleinput = f.read()\n    inplist
        = puzzleinput.split(''\\n'')\n    inplist = [int(i) for i in inplist]\n    count
        = 0\n    curr,nxt = 0,0\n    for i in range(len(inplist)-3):\n        curr
        = inplist[i]+inplist[i+1]+inplist[i+2]\n        nxt = inplist[i+1]+inplist[i+2]+inplist[i+3]\n        if
        nxt &gt; curr:\n            count += 1\n    print(count)\n\nplease forgive
        my \"very basic\"-ness :/", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;my
        solution to day 1 in Python&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f
        = open(&amp;quot;puzzleinputq1.txt&amp;quot;,&amp;quot;r&amp;quot;)\npuzzleinput
        = f.read()\ninplist = puzzleinput.split(&amp;#39;\\n&amp;#39;)\ninplist =
        [int(i) for i in inplist]\nprev = inplist[0]\ncount = 0\nfor i in inplist:\n    if
        i &amp;gt; prev:\n        count += 1\n    prev = i\nprint(count)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f = open(&amp;quot;puzzleinputq1.txt&amp;quot;,&amp;quot;r&amp;quot;)\npuzzleinput
        = f.read()\ninplist = puzzleinput.split(&amp;#39;\\n&amp;#39;)\ninplist =
        [int(i) for i in inplist]\ncount = 0\ncurr,nxt = 0,0\nfor i in range(len(inplist)-3):\n    curr
        = inplist[i]+inplist[i+1]+inplist[i+2]\n    nxt = inplist[i+1]+inplist[i+2]+inplist[i+3]\n    if
        nxt &amp;gt; curr:\n        count += 1\nprint(count)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;please
        forgive my &amp;quot;very basic&amp;quot;-ness :/&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtp273/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtp273", "created":
        1638382482.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtpgu7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Diaffractus99",
        "can_mod_post": false, "created_utc": 1638382636.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_6manyxzt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "LUA\n\n    local data_file = io.open(\"input.txt\")\n    local data = {}\n    --
        read file as numbers\n    for s in data_file:lines() do\n        table.insert(data,
        tonumber(s))\n    end\n    -- used for part 2 only\n    for i=1,#data-2 do\n        data[i]
        = data[i] + data[i+1] + data[i+2]\n    end\n    -- count ocurrences\n    local
        counter = 0\n    for i=2,#data-2 do\n        if data[i-1] &lt; data[i] then\n            counter
        = counter + 1\n        end\n    end\n    print(\"There are \" .. counter ..
        \" measurements larger than the previous\")", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;LUA&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;local data_file
        = io.open(&amp;quot;input.txt&amp;quot;)\nlocal data = {}\n-- read file as
        numbers\nfor s in data_file:lines() do\n    table.insert(data, tonumber(s))\nend\n--
        used for part 2 only\nfor i=1,#data-2 do\n    data[i] = data[i] + data[i+1]
        + data[i+2]\nend\n-- count ocurrences\nlocal counter = 0\nfor i=2,#data-2
        do\n    if data[i-1] &amp;lt; data[i] then\n        counter = counter + 1\n    end\nend\nprint(&amp;quot;There
        are &amp;quot; .. counter .. &amp;quot; measurements larger than the previous&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtpgu7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtpgu7", "created":
        1638382636.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtpxvo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "atrich",
        "can_mod_post": false, "created_utc": 1638382818.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_3o32q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Typescript:\n\n    console.log(input.map(s=&gt;parseInt(s)).reduce((p,c,i,a)=&gt;i&gt;0&amp;&amp;c&gt;a[i-1]?p+1:p,0));\n    console.log(input.map(s=&gt;parseInt(s)).map((v,i,a)=&gt;i&gt;2?v+a[i-1]+a[i-2]:0).reduce((p,c,i,a)=&gt;i&gt;0&amp;&amp;c&gt;a[i-1]?p+1:p,0));",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Typescript:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;console.log(input.map(s=&amp;gt;parseInt(s)).reduce((p,c,i,a)=&amp;gt;i&amp;gt;0&amp;amp;&amp;amp;c&amp;gt;a[i-1]?p+1:p,0));\nconsole.log(input.map(s=&amp;gt;parseInt(s)).map((v,i,a)=&amp;gt;i&amp;gt;2?v+a[i-1]+a[i-2]:0).reduce((p,c,i,a)=&amp;gt;i&amp;gt;0&amp;amp;&amp;amp;c&amp;gt;a[i-1]?p+1:p,0));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtpxvo/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtpxvo", "created":
        1638382818.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638383753.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtqk3y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AdamsAlterEgo",
        "can_mod_post": false, "created_utc": 1638383055.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_h4f5ovxx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell from someone who sucks at haskell:\n\n    module Main where\n    \n    increases
        :: Ord a =&gt; [a] -&gt; Int\n    increases input = length . filter id $ zipWith
        (&lt;) input (tail input)\n    \n    threeSum :: Num a =&gt; [a] -&gt; [a]\n    threeSum
        input = zipWith (+) (zipWith (+) input (tail input)) (tail (tail input))\n    \n    solve
        :: String -&gt; Int\n    solve = increases . threeSum . map read . lines\n    \n    main
        :: IO ()\n    main = do\n      input &lt;- readFile \"input.txt\"\n      print
        . solve $ input\n\n\nedit: just found out about zipWith3... ah well", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell from someone who sucks at haskell:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module
        Main where\n\nincreases :: Ord a =&amp;gt; [a] -&amp;gt; Int\nincreases input
        = length . filter id $ zipWith (&amp;lt;) input (tail input)\n\nthreeSum ::
        Num a =&amp;gt; [a] -&amp;gt; [a]\nthreeSum input = zipWith (+) (zipWith (+)
        input (tail input)) (tail (tail input))\n\nsolve :: String -&amp;gt; Int\nsolve
        = increases . threeSum . map read . lines\n\nmain :: IO ()\nmain = do\n  input
        &amp;lt;- readFile &amp;quot;input.txt&amp;quot;\n  print . solve $ input\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;edit:
        just found out about zipWith3... ah well&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtqk3y/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmtqk3y", "created": 1638383055.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmtqtlx", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "quarkstar02", "can_mod_post": false, "created_utc":
        1638383157.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_6k1icbwp", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "This is my first AOC.\nUsing
        Rust. \n\nNot the best. Seen much better solutions in this thread.\nhttps://github.com/rajputrajat/advent_of_code_2021/blob/master/day1/src/main.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is my first AOC.\nUsing
        Rust. &lt;/p&gt;\n\n&lt;p&gt;Not the best. Seen much better solutions in this
        thread.\n&lt;a href=\"https://github.com/rajputrajat/advent_of_code_2021/blob/master/day1/src/main.rs\"&gt;https://github.com/rajputrajat/advent_of_code_2021/blob/master/day1/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtqtlx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtqtlx", "created":
        1638383157.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638384267.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtqurm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "shasherazii",
        "can_mod_post": false, "created_utc": 1638383169.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_cxd1bb15", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3:\n\n&amp;#x200B;\n\nPart 1:\n\n    with open(''readings.txt'', ''r'')
        as f:\n    readings = f.readlines()\n    depths = 0\n    \n    for i in range(1,
        len(readings)):\n        if int(readings[i]) &gt; int(readings[i-1]):\n            depths
        += 1\n    \n    print(depths)\n\nPart 2:\n\n    with open(''readings.txt'',
        ''r'') as f:\n    readings = f.readlines()\n    depths = 0\n\n    for i in
        range(len(readings)-3):\n        readings_sum1 = int(readings[i]) + int(readings[i+1])
        + int(readings[i+2])\n        readings_sum2 = int(readings[i+1]) + int(readings[i+2])
        + int(readings[i+3])\n\n        if readings_sum2 &gt; readings_sum1:\n            depths
        += 1\n\n    print(depths)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;#39;readings.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as f:\nreadings = f.readlines()\ndepths = 0\n\nfor i
        in range(1, len(readings)):\n    if int(readings[i]) &amp;gt; int(readings[i-1]):\n        depths
        += 1\n\nprint(depths)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;readings.txt&amp;#39;, &amp;#39;r&amp;#39;) as f:\nreadings
        = f.readlines()\ndepths = 0\n\nfor i in range(len(readings)-3):\n    readings_sum1
        = int(readings[i]) + int(readings[i+1]) + int(readings[i+2])\n    readings_sum2
        = int(readings[i+1]) + int(readings[i+2]) + int(readings[i+3])\n\n    if readings_sum2
        &amp;gt; readings_sum1:\n        depths += 1\n\nprint(depths)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtqurm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtqurm", "created":
        1638383169.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtskg5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "joshbduncan",
        "can_mod_post": false, "created_utc": 1638383826.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_9t2qo339", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3\n\n    data = open(\"day1.in\").read()\n    puzzle = [int(d) for
        d in data.strip().split(\"\\n\")]\n\n    increases = [1 for n, d in enumerate(puzzle)
        if n &gt; 0 and d &gt; puzzle[n - 1]]\n    print(f\"Part 1: {sum(increases)}\")\n\n    increases
        = [\n        1\n        for n, d in enumerate(puzzle)\n        if n &gt; 2
        and sum(puzzle[n - 2 : n + 1]) &gt; sum(puzzle[n - 3 : n])\n    ]\n    print(f\"Part
        2: {sum(increases)}\")\n\nOddly enough, while in a hurry, I messed up part
        2 like below but still got the correct answer...\n\n    increases = [1 for
        n, x in enumerate(puzzle) if n &gt; 2 and x &gt; puzzle[n - 3]]\n    print(\"Part
        2:\", sum(increases))\n\nThis is completely wrong but it worked... I only
        noticed after I submitted my answer and was posting the code here \ud83e\udd37\u200d\u2642\ufe0f...",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data
        = open(&amp;quot;day1.in&amp;quot;).read()\npuzzle = [int(d) for d in data.strip().split(&amp;quot;\\n&amp;quot;)]\n\nincreases
        = [1 for n, d in enumerate(puzzle) if n &amp;gt; 0 and d &amp;gt; puzzle[n
        - 1]]\nprint(f&amp;quot;Part 1: {sum(increases)}&amp;quot;)\n\nincreases =
        [\n    1\n    for n, d in enumerate(puzzle)\n    if n &amp;gt; 2 and sum(puzzle[n
        - 2 : n + 1]) &amp;gt; sum(puzzle[n - 3 : n])\n]\nprint(f&amp;quot;Part 2:
        {sum(increases)}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Oddly enough,
        while in a hurry, I messed up part 2 like below but still got the correct
        answer...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;increases = [1 for n, x in enumerate(puzzle)
        if n &amp;gt; 2 and x &amp;gt; puzzle[n - 3]]\nprint(&amp;quot;Part 2:&amp;quot;,
        sum(increases))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is completely
        wrong but it worked... I only noticed after I submitted my answer and was
        posting the code here \ud83e\udd37\u200d\u2642\ufe0f...&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtskg5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtskg5", "created":
        1638383826.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtteup",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "UltraXDZN",
        "can_mod_post": false, "created_utc": 1638384149.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_x28retm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python\n\n[GitHub Solution Part 1](https://github.com/UltraXDZN/Infokup-pripreme/tree/master/Advent%20of%20code/2021/Day%201/Part%201)\n\n[GitHub
        Solution Part 2](https://github.com/UltraXDZN/Infokup-pripreme/tree/master/Advent%20of%20code/2021/Day%201/Part%202)\n\nI''ve
        used a very basic approach and written the explanation of my approach down.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/UltraXDZN/Infokup-pripreme/tree/master/Advent%20of%20code/2021/Day%201/Part%201\"&gt;GitHub
        Solution Part 1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/UltraXDZN/Infokup-pripreme/tree/master/Advent%20of%20code/2021/Day%201/Part%202\"&gt;GitHub
        Solution Part 2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve used a very basic
        approach and written the explanation of my approach down.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtteup/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtteup", "created":
        1638384149.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtublx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "k0ns3rv",
        "can_mod_post": false, "created_utc": 1638384505.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_6iwwd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\n\n    use crate::parse_lines;\n    \n    fn count_increments(readings:
        impl IntoIterator&lt;Item = u64&gt;) -&gt; u64 {\n        readings\n            .into_iter()\n            .fold((0,
        None), |(total, previous_value), value| {\n                if previous_value.map(|p|
        value &gt; p).unwrap_or(false) {\n                    (total + 1, Some(value))\n                }
        else {\n                    (total, Some(value))\n                }\n            })\n            .0\n    }\n    \n    pub
        fn star_one(input: &amp;str) -&gt; u64 {\n        count_increments(parse_lines::&lt;u64&gt;(input))\n    }\n    \n    pub
        fn star_two(input: &amp;str) -&gt; u64 {\n        let readings: Vec&lt;u64&gt;
        = parse_lines(input).collect();\n    \n        count_increments(readings.windows(3).map(|readings|
        readings.iter().sum()))\n    }\n\nLet''s see how far I get this year, I often
        fall off around day 15-20.\n\nNothing super notable here, `itertools` has
        a method that allows skipping the allocation for `star_two`. I have a few
        utility functions(such as `parse_lines`) in `lib.rs`.\n\n[On GitHub](https://github.com/k0nserv/advent-of-rust-2021/blob/main/src/day01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        crate::parse_lines;\n\nfn count_increments(readings: impl IntoIterator&amp;lt;Item
        = u64&amp;gt;) -&amp;gt; u64 {\n    readings\n        .into_iter()\n        .fold((0,
        None), |(total, previous_value), value| {\n            if previous_value.map(|p|
        value &amp;gt; p).unwrap_or(false) {\n                (total + 1, Some(value))\n            }
        else {\n                (total, Some(value))\n            }\n        })\n        .0\n}\n\npub
        fn star_one(input: &amp;amp;str) -&amp;gt; u64 {\n    count_increments(parse_lines::&amp;lt;u64&amp;gt;(input))\n}\n\npub
        fn star_two(input: &amp;amp;str) -&amp;gt; u64 {\n    let readings: Vec&amp;lt;u64&amp;gt;
        = parse_lines(input).collect();\n\n    count_increments(readings.windows(3).map(|readings|
        readings.iter().sum()))\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Let&amp;#39;s
        see how far I get this year, I often fall off around day 15-20.&lt;/p&gt;\n\n&lt;p&gt;Nothing
        super notable here, &lt;code&gt;itertools&lt;/code&gt; has a method that allows
        skipping the allocation for &lt;code&gt;star_two&lt;/code&gt;. I have a few
        utility functions(such as &lt;code&gt;parse_lines&lt;/code&gt;) in &lt;code&gt;lib.rs&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/k0nserv/advent-of-rust-2021/blob/main/src/day01.rs\"&gt;On
        GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtublx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtublx", "created":
        1638384505.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638390672.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtvyoj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Scroph",
        "can_mod_post": false, "created_utc": 1638385138.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_6p6h0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Trying out PHP this year. Part #2, the input is piped in :\n\n    &lt;?php\n    $counter
        = 0;\n    $queue = new ThreeSumQueue();\n    $queue-&gt;enqueue(trim(fgets(STDIN)));\n    $queue-&gt;enqueue(trim(fgets(STDIN)));\n    $queue-&gt;enqueue(trim(fgets(STDIN)));\n\n    while($measurement
        = fgets(STDIN))\n    {\n        $sum = $queue-&gt;getSum();\n        $queue-&gt;enqueue(trim($measurement));\n        $counter
        += $queue-&gt;getSum() &gt; $sum;\n    }\n\n    echo $counter;\n\n    class
        ThreeSumQueue extends \\SplQueue {\n        private int $sum = 0;\n        private
        int $size = 0;\n\n        public function enqueue($value): void\n        {\n            parent::enqueue($value);\n            $this-&gt;sum
        += $value;\n            if(++$this-&gt;size &gt; 3)\n            {\n                $this-&gt;dequeue();\n            }\n        }\n\n        public
        function dequeue(): int\n        {\n            $this-&gt;size--;\n            $value
        = parent::dequeue();\n            $this-&gt;sum -= $value;\n            return
        $value;\n        }\n\n        public function getSum(): int\n        {\n            return
        $this-&gt;sum;\n        }\n    }", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Trying out PHP this year. Part #2, the input is piped
        in :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n$counter = 0;\n$queue
        = new ThreeSumQueue();\n$queue-&amp;gt;enqueue(trim(fgets(STDIN)));\n$queue-&amp;gt;enqueue(trim(fgets(STDIN)));\n$queue-&amp;gt;enqueue(trim(fgets(STDIN)));\n\nwhile($measurement
        = fgets(STDIN))\n{\n    $sum = $queue-&amp;gt;getSum();\n    $queue-&amp;gt;enqueue(trim($measurement));\n    $counter
        += $queue-&amp;gt;getSum() &amp;gt; $sum;\n}\n\necho $counter;\n\nclass ThreeSumQueue
        extends \\SplQueue {\n    private int $sum = 0;\n    private int $size = 0;\n\n    public
        function enqueue($value): void\n    {\n        parent::enqueue($value);\n        $this-&amp;gt;sum
        += $value;\n        if(++$this-&amp;gt;size &amp;gt; 3)\n        {\n            $this-&amp;gt;dequeue();\n        }\n    }\n\n    public
        function dequeue(): int\n    {\n        $this-&amp;gt;size--;\n        $value
        = parent::dequeue();\n        $this-&amp;gt;sum -= $value;\n        return
        $value;\n    }\n\n    public function getSum(): int\n    {\n        return
        $this-&amp;gt;sum;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtvyoj/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmtvyoj", "created": 1638385138.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638388987.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtw0cl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jeffers0n",
        "can_mod_post": false, "created_utc": 1638385156.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4akw5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Got a late start today but here''s my solution in ruby: https://git.doublehack.me/s00ner/AoC2021/src/branch/master/day01/solution.rb",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Got a late start today
        but here&amp;#39;s my solution in ruby: &lt;a href=\"https://git.doublehack.me/s00ner/AoC2021/src/branch/master/day01/solution.rb\"&gt;https://git.doublehack.me/s00ner/AoC2021/src/branch/master/day01/solution.rb&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtw0cl/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtw0cl", "created":
        1638385156.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmtyd3x", "id": "hmtyd3x", "parent_id":
        "t1_hmtw0cl", "depth": 1, "children": ["hmtyd3x"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtyhqw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Redetheric",
        "can_mod_post": false, "created_utc": 1638386118.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_n92ne", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# JavaScript\n\nThe following code can be used directly in the Chrome Dev
        Tools Console tab.\n\n    // You can use $0 to target the selected element
        in the Chrome dev tools element inspector. \n    // When you''re presented
        with your numbers, open dev tools, select the &lt;pre&gt; element containing
        your input values and then use the follow code below in the console.\n    \n    //
        Part 1\n    $0.innerText\n    \t.split(\"\\n\")\n    \t.map((v) =&gt; parseInt(v))\n    \t.filter((currentVal,
        index, arr) =&gt; currentVal &amp;&amp; currentVal &gt; arr[index - 1])\n    \t.length;\n    \n    //
        Part 2\n    function getWindowTotal(arr, index, count) {\n    \tvar total
        = 0;\n    \tfor (var i = 0; i &lt; count; i++) {\n    \t\ttotal += arr[index
        + i];\n    \t}\n    \treturn total;\n    }\n    \n    $0.innerText\n    \t.split(\"\\n\")\n    \t.map((v)
        =&gt; parseInt(v))\n    \t.filter((currentVal, index, arr) =&gt; getWindowTotal(arr,
        index, 3) &gt; getWindowTotal(arr, index - 1, 3))\n    \t.length;", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;JavaScript&lt;/h1&gt;\n\n&lt;p&gt;The following
        code can be used directly in the Chrome Dev Tools Console tab.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        You can use $0 to target the selected element in the Chrome dev tools element
        inspector. \n// When you&amp;#39;re presented with your numbers, open dev
        tools, select the &amp;lt;pre&amp;gt; element containing your input values
        and then use the follow code below in the console.\n\n// Part 1\n$0.innerText\n    .split(&amp;quot;\\n&amp;quot;)\n    .map((v)
        =&amp;gt; parseInt(v))\n    .filter((currentVal, index, arr) =&amp;gt; currentVal
        &amp;amp;&amp;amp; currentVal &amp;gt; arr[index - 1])\n    .length;\n\n//
        Part 2\nfunction getWindowTotal(arr, index, count) {\n    var total = 0;\n    for
        (var i = 0; i &amp;lt; count; i++) {\n        total += arr[index + i];\n    }\n    return
        total;\n}\n\n$0.innerText\n    .split(&amp;quot;\\n&amp;quot;)\n    .map((v)
        =&amp;gt; parseInt(v))\n    .filter((currentVal, index, arr) =&amp;gt; getWindowTotal(arr,
        index, 3) &amp;gt; getWindowTotal(arr, index - 1, 3))\n    .length;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtyhqw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtyhqw", "created":
        1638386118.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638472738.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtypln", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vini_2003",
        "can_mod_post": false, "created_utc": 1638386202.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_odiqh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[**Kotlin**](https://github.com/vini2003/Advent-of-Code-2021/blob/dev/src/main/kotlin/dev/vini2003/adventofcode/solution/Day1Solution.kt)\n\nBeyond
        ashamed! Just wanted to get it done since today''s been a busy day.\n\n**EDIT:**
        Made it way nicer.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/vini2003/Advent-of-Code-2021/blob/dev/src/main/kotlin/dev/vini2003/adventofcode/solution/Day1Solution.kt\"&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Beyond
        ashamed! Just wanted to get it done since today&amp;#39;s been a busy day.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;
        Made it way nicer.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtypln/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtypln", "created":
        1638386202.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmv5ohs", "id": "hmv5ohs", "parent_id":
        "t1_hmtypln", "depth": 1, "children": ["hmv5ohs"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtytou", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "# Java:\n\nhttps://pastebin.com/eFvXHwK2\n\nHere goes
        only part one. I''m struggling to get part 2 done.", "awarders": [], "downs":
        0, "author_flair_css_class": null, "name": "t1_hmtytou", "collapsed": false,
        "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Java:&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/eFvXHwK2\"&gt;https://pastebin.com/eFvXHwK2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Here
        goes only part one. I&amp;#39;m struggling to get part 2 done.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtytou/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638386246.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638386246.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmvvfe9", "id": "hmvvfe9", "parent_id":
        "t1_hmtytou", "depth": 1, "children": ["hmvvfe9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtzrre",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "codeandboulder",
        "can_mod_post": false, "created_utc": 1638386606.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_fh1vwqhk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Scratch**\n\nHi folks, I made a solution in Scratch with a splitter and
        a loop.\n\nPart 1: https://scratch.mit.edu/projects/609683258/\n\nPart 2:
        https://scratch.mit.edu/projects/609744468/", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Scratch&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Hi
        folks, I made a solution in Scratch with a splitter and a loop.&lt;/p&gt;\n\n&lt;p&gt;Part
        1: &lt;a href=\"https://scratch.mit.edu/projects/609683258/\"&gt;https://scratch.mit.edu/projects/609683258/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2: &lt;a href=\"https://scratch.mit.edu/projects/609744468/\"&gt;https://scratch.mit.edu/projects/609744468/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtzrre/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtzrre", "created":
        1638386606.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu172l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "xelivous",
        "can_mod_post": false, "created_utc": 1638387157.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_n4yyw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "rust\n\nmain code:\n\n    pub fn part1(input: &amp;Vec&lt;usize&gt;) -&gt;
        usize {\n        input.windows(2).filter(|data| data[1] &gt; data[0]).count()\n    }\n\n    pub
        fn part2(input: &amp;Vec&lt;usize&gt;) -&gt; usize {\n        input.windows(4).filter(|data|
        data[3] &gt; data[0]).count()\n    }\n\ngeneric reused glue put in the top
        level libraries/examples/tests/etc:\n\n    pub fn input_to_vec&lt;T, P&gt;(input:
        P) -&gt; Vec&lt;T&gt; \n    where\n        P: AsRef&lt;Path&gt;,\n        T:
        FromStr,\n        &lt;T as FromStr&gt;::Err: std::fmt::Debug,\n    {\n        let
        data = read_to_string(input).expect(\"input file missing\");\n        data.lines().map(|x|
        x.parse::&lt;T&gt;().expect(\"unable to parse line\")).collect()\n    }\n\n    fn
        main() {\n        let input = input_to_vec(\"inputs/day1.txt\");\n        eprintln!(\"Part
        1: {}\", day1::part1(&amp;input));\n        eprintln!(\"Part 2: {}\", day1::part2(&amp;input));\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;rust&lt;/p&gt;\n\n&lt;p&gt;main
        code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub fn part1(input: &amp;amp;Vec&amp;lt;usize&amp;gt;)
        -&amp;gt; usize {\n    input.windows(2).filter(|data| data[1] &amp;gt; data[0]).count()\n}\n\npub
        fn part2(input: &amp;amp;Vec&amp;lt;usize&amp;gt;) -&amp;gt; usize {\n    input.windows(4).filter(|data|
        data[3] &amp;gt; data[0]).count()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;generic
        reused glue put in the top level libraries/examples/tests/etc:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn input_to_vec&amp;lt;T, P&amp;gt;(input: P) -&amp;gt; Vec&amp;lt;T&amp;gt;
        \nwhere\n    P: AsRef&amp;lt;Path&amp;gt;,\n    T: FromStr,\n    &amp;lt;T
        as FromStr&amp;gt;::Err: std::fmt::Debug,\n{\n    let data = read_to_string(input).expect(&amp;quot;input
        file missing&amp;quot;);\n    data.lines().map(|x| x.parse::&amp;lt;T&amp;gt;().expect(&amp;quot;unable
        to parse line&amp;quot;)).collect()\n}\n\nfn main() {\n    let input = input_to_vec(&amp;quot;inputs/day1.txt&amp;quot;);\n    eprintln!(&amp;quot;Part
        1: {}&amp;quot;, day1::part1(&amp;amp;input));\n    eprintln!(&amp;quot;Part
        2: {}&amp;quot;, day1::part2(&amp;amp;input));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu172l/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu172l", "created":
        1638387157.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu297u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jo0", "can_mod_post":
        false, "created_utc": 1638387566.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_59b0q", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "F# \n\nhttps://github.com/Jo0/AdventOfCode/tree/master/2021/Day01\n\nCode\n\n    open
        System\n    open System.IO\n    \n    let input = File.ReadAllLines(\"input.txt\")
        |&gt; Array.map(fun x -&gt; int x) |&gt; Array.toList\n    \n    let rec increasedCount
        (list:List&lt;int&gt;) =\n        match list with\n        | [] -&gt; 0\n        |
        [ _ ] -&gt; 0\n        | head :: tail -&gt; \n            if head &lt; tail.Head
        then \n                1 + (increasedCount tail)\n            else \n                increasedCount
        tail\n    \n    let increasedCountWithSlidingWindow(list:List&lt;int&gt;,
        windowSize:int) =\n        let rec buildSlidingWindow (list:List&lt;int&gt;,
        size:int) =\n            match list with \n            | [] -&gt; []\n            |
        sizeOfWindow when (list.Length = windowSize) -&gt; \n                [(sizeOfWindow
        |&gt; List.sum)]\n            | head :: tail -&gt; \n                let window
        = head + (tail |&gt; List.take (size-1) |&gt; List.sum)\n                [
        window ] @ buildSlidingWindow(tail, size)\n        \n        increasedCount
        (buildSlidingWindow(list,windowSize))\n    \n    \n    printfn $\"Increased
        count: {increasedCount input}\" //1451\n    printfn $\"Increased count of
        sliding window size 3: {increasedCountWithSlidingWindow(input, 3)}\" //1395",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;F# &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Jo0/AdventOfCode/tree/master/2021/Day01\"&gt;https://github.com/Jo0/AdventOfCode/tree/master/2021/Day01&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Code&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;open
        System\nopen System.IO\n\nlet input = File.ReadAllLines(&amp;quot;input.txt&amp;quot;)
        |&amp;gt; Array.map(fun x -&amp;gt; int x) |&amp;gt; Array.toList\n\nlet rec
        increasedCount (list:List&amp;lt;int&amp;gt;) =\n    match list with\n    |
        [] -&amp;gt; 0\n    | [ _ ] -&amp;gt; 0\n    | head :: tail -&amp;gt; \n        if
        head &amp;lt; tail.Head then \n            1 + (increasedCount tail)\n        else
        \n            increasedCount tail\n\nlet increasedCountWithSlidingWindow(list:List&amp;lt;int&amp;gt;,
        windowSize:int) =\n    let rec buildSlidingWindow (list:List&amp;lt;int&amp;gt;,
        size:int) =\n        match list with \n        | [] -&amp;gt; []\n        |
        sizeOfWindow when (list.Length = windowSize) -&amp;gt; \n            [(sizeOfWindow
        |&amp;gt; List.sum)]\n        | head :: tail -&amp;gt; \n            let window
        = head + (tail |&amp;gt; List.take (size-1) |&amp;gt; List.sum)\n            [
        window ] @ buildSlidingWindow(tail, size)\n\n    increasedCount (buildSlidingWindow(list,windowSize))\n\n\nprintfn
        $&amp;quot;Increased count: {increasedCount input}&amp;quot; //1451\nprintfn
        $&amp;quot;Increased count of sliding window size 3: {increasedCountWithSlidingWindow(input,
        3)}&amp;quot; //1395\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu297u/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmu297u", "created": 1638387566.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmu2ehy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "AuntieRob", "can_mod_post": false, "created_utc":
        1638387622.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_4ws4indr", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Wonderful to be back doing
        this challenge! My c++ is a bit rusty but it compiled\n\n[part one](https://github.com/ffamilyfriendly/Advent-Of-Code/blob/main/day_1/challange_1/main.cpp)\n\n[part
        two](https://github.com/ffamilyfriendly/Advent-Of-Code/blob/main/day_1/challange_2/main.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wonderful to be back
        doing this challenge! My c++ is a bit rusty but it compiled&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ffamilyfriendly/Advent-Of-Code/blob/main/day_1/challange_1/main.cpp\"&gt;part
        one&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ffamilyfriendly/Advent-Of-Code/blob/main/day_1/challange_2/main.cpp\"&gt;part
        two&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu2ehy/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu2ehy", "created":
        1638387622.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 420, "name": "t1_hmu2gx2", "id": "hmu2gx2", "parent_id":
        "t3_r66vow", "depth": 0, "children": ["hmu2gx2", "hmu2rw9", "hmu41kj", "hmu4r0v",
        "hmu7mkh", "hmu47y6", "hmu6yri", "hmu9qut", "hmu7i0g", "hmuf6r8", "hmuwc2v",
        "hmu51kx", "hmunovu", "hmum4io", "hmu7g9d", "hmuox3j", "hmuc4hm", "hmukafq",
        "hmumga1", "hmunk6r", "hmvp1xr", "hmy8v67", "hmveoia", "hmubq5y", "hmv395f",
        "hmupg0c", "hmv7e6n", "hmuuxtj", "hmvu8v1", "hmvq4sq", "hmvcmtf", "hmva7zl",
        "hmuqc8p", "hmupha0", "hmurivu", "hmuy2yb", "hmur5u6", "hmuxfuh", "hmunpx2",
        "hmvo3y7", "hmwxxf7", "hmwc3gl", "hmtkjc8", "hmwwi7l", "hmwtvl7", "hmwxwzb",
        "hmry7u5", "hmvoa64", "hmv8bqt", "hms2it8", "hmwtwoc", "hmvxl2c", "hmvae71",
        "hmyfdr9", "hmve44r", "hmrfuew", "hmy5y2j", "hmw8zxm", "hmwpkjo", "hmygsqt",
        "hmvwuer", "hmwtk1w", "hmvjxdh", "hmuu8ya", "hmwgacu", "hmuwsn3", "hmspb17",
        "hmvttxb", "hmuz7ba", "hmxdpt3", "hmvwtzm", "hmwnrhk", "hmrfvru", "hms93us",
        "hmvg97r", "hmunt9t", "hmrf0gg", "hmwegvt", "hmubzlt", "hms0m82", "hmwb2ra",
        "hmrz22v", "hmsthqs", "hmsipx1", "hmsdp0m", "hmtrv9z", "hmrf2g0", "hmsqpii",
        "hmss2k9", "hms8zqs", "hmxrx3s", "hmrel8t", "hmse2jo", "hmv7xhs", "hmreik6",
        "hmw42an", "hmuu15c", "hmsic35", "hmrz2jn", "hmsxnbq", "hmretnt", "hmuc4p0",
        "hmrf0j6", "hmxgs6y", "hmrezlc", "hmy32s1", "hmw4ek2", "hmut6fx", "hmrhcqc",
        "hms92lp", "hmul1w0", "hms97z3", "hmw1jxb", "hms0ovt", "hms2tdh", "hmxn3xv",
        "hmrfhj6", "hms8x4k", "hmrhr14", "hmy3con", "hmy90co", "hmw9ssu", "hmvyzz7",
        "hmren52", "hmris2x", "hmsnt19", "hmrfa3v", "hmrt2sw", "hmw21oo", "hmtbaw0",
        "hmtp9ng", "hmrfr8r", "hmubyyr", "hmrzrtr", "hmvszqc", "hms8upn", "hmrfld2",
        "hmx8h5l", "hmu9yeq", "hmwn65l", "hmxm0oa", "hmvffrj", "hmrr8s5", "hmuvltl",
        "hmucq9b", "hmx7ocb", "hmrks2m", "hmul0m8", "hmwk3gr", "hmukph5", "hmswb9a",
        "hmvhiw7", "hmvd24s", "hmv8xhi", "hmreons", "hmvbdu3", "hmuxrtd", "hmuy7px",
        "hmtnoc6", "hmxa4gk", "hmvd82d", "hmx4oh4", "hmshy8w", "hmvcobg", "hmuszg8",
        "hmurtrn", "hmriplw", "hmto2mk", "hmtx4jg", "hmtl0p6", "hmuxks0", "hmuwdqz",
        "hmrxxk9", "hmupvsh", "hmuwikk", "hmy98ot", "hmtxaje", "hmsmh1y", "hmvqsha",
        "hmx74kk", "hmsnokd", "hmrf87m", "hmvvm80", "hmux6rf", "hmua6gz", "hms9w78",
        "hmuqjav", "hms9kem", "hmuijjn", "hmrf9ck", "hmx4u0j", "hmuvxcd", "hmul9ls",
        "hmxf61e", "hmvh953", "hmts3v2", "hmrklsj", "hmy9ke6", "hms0h5d", "hmtckwf",
        "hmusj18", "hms028u", "hmvqe6x", "hmvqboh", "hmwdb3a", "hmti8v3", "hmwg4mh",
        "hmsrw4q", "hmv06au", "hms9me8", "hmvnyic", "hmxa298", "hmtpdh1", "hmt5mu9",
        "hmugkix", "hmuvznj", "hmtl4l8", "hmvwd6n", "hmwx4lt", "hmu9x7q", "hmvn98k",
        "hmrzgee", "hmt4tjc", "hmrn1qi", "hmu2d91", "hmrh3m6", "hmvy97q", "hms6qq4",
        "hmtdkt1"]}}], true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmsa0hn"]],
        [13, 14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"],
        [16, 17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:20 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:20 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=hBxJSCCbhTpfo0ASTq; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:20 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmu2gx2,hmu2rw9,hmu41kj,hmu4r0v,hmu7mkh,hmu47y6,hmu6yri,hmu9qut,hmu7i0g,hmuf6r8,hmuwc2v,hmu51kx,hmunovu,hmum4io,hmu7g9d,hmuox3j,hmuc4hm,hmukafq,hmumga1,hmunk6r,hmvp1xr,hmy8v67,hmveoia,hmubq5y,hmv395f,hmupg0c,hmv7e6n,hmuuxtj,hmvu8v1,hmvq4sq,hmvcmtf,hmva7zl,hmuqc8p,hmupha0,hmurivu,hmuy2yb,hmur5u6,hmuxfuh,hmunpx2,hmvo3y7,hmwxxf7,hmwc3gl,hmtkjc8,hmwwi7l,hmwtvl7,hmwxwzb,hmry7u5,hmvoa64,hmv8bqt,hms2it8,hmwtwoc,hmvxl2c,hmvae71,hmyfdr9,hmve44r,hmrfuew,hmy5y2j,hmw8zxm,hmwpkjo,hmygsqt,hmvwuer,hmwtk1w,hmvjxdh,hmuu8ya,hmwgacu,hmuwsn3,hmspb17,hmvttxb,hmuz7ba,hmxdpt3,hmvwtzm,hmwnrhk,hmrfvru,hms93us,hmvg97r,hmunt9t,hmrf0gg,hmwegvt,hmubzlt,hms0m82,hmwb2ra,hmrz22v,hmsthqs,hmsipx1,hmsdp0m,hmtrv9z,hmrf2g0,hmsqpii,hmss2k9,hms8zqs,hmxrx3s,hmrel8t,hmse2jo,hmv7xhs,hmreik6,hmw42an,hmuu15c,hmsic35,hmrz2jn,hmsxnbq,hmretnt,hmuc4p0,hmrf0j6,hmxgs6y,hmrezlc,hmy32s1,hmw4ek2,hmut6fx,hmrhcqc,hms92lp,hmul1w0,hms97z3,hmw1jxb,hms0ovt,hms2tdh,hmxn3xv,hmrfhj6,hms8x4k,hmrhr14,hmy3con,hmy90co,hmw9ssu,hmvyzz7,hmren52,hmris2x,hmsnt19,hmrfa3v,hmrt2sw,hmw21oo,hmtbaw0,hmtp9ng,hmrfr8r,hmubyyr,hmrzrtr,hmvszqc,hms8upn,hmrfld2,hmx8h5l,hmu9yeq,hmwn65l,hmxm0oa,hmvffrj,hmrr8s5,hmuvltl,hmucq9b,hmx7ocb,hmrks2m,hmul0m8,hmwk3gr,hmukph5,hmswb9a,hmvhiw7,hmvd24s,hmv8xhi,hmreons,hmvbdu3,hmuxrtd,hmuy7px,hmtnoc6,hmxa4gk,hmvd82d,hmx4oh4,hmshy8w,hmvcobg,hmuszg8,hmurtrn,hmriplw,hmto2mk,hmtx4jg,hmtl0p6,hmuxks0,hmuwdqz,hmrxxk9,hmupvsh,hmuwikk,hmy98ot,hmtxaje,hmsmh1y,hmvqsha,hmx74kk,hmsnokd,hmrf87m,hmvvm80,hmux6rf,hmua6gz,hms9w78,hmuqjav,hms9kem,hmuijjn,hmrf9ck,hmx4u0j,hmuvxcd,hmul9ls,hmxf61e,hmvh953,hmts3v2,hmrklsj,hmy9ke6,hms0h5d,hmtckwf,hmusj18,hms028u,hmvqe6x,hmvqboh,hmwdb3a,hmti8v3,hmwg4mh,hmsrw4q,hmv06au,hms9me8,hmvnyic,hmxa298,hmtpdh1,hmt5mu9,hmugkix,hmuvznj,hmtl4l8,hmvwd6n,hmwx4lt,hmu9x7q,hmvn98k,hmrzgee,hmt4tjc,hmrn1qi,hmu2d91,hmrh3m6,hmvy97q,hms6qq4,hmtdkt1
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '38318'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg63422o.2.1741472960610.Z0FBQUFBQm56TVRBNXJaU1FaMm5yc3J2cVJSQmppU0JTaVBqeEgwclpRY3hYSmd6NE11MWJIZlJkb19ZOW9sdjZSdWlRTU1CSGRaSGdlTF84LWNNQ19WU0VENWRsM3VYWjBRLVVSeFh6dDIzMDdHb2NQRkI0MWV2UlNsd1oyNV9UT1Q4OEhfMW1nREE;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:20
        GMT; secure, session_tracker=ofrffdqcnbrqldgrli.0.1741472960627.Z0FBQUFBQm56TVRBZ0wwZWNZZ0dmdlI0Z1Nlc1JYbXdJMFdNdU1FWlJQTlFBVjdzeDdLd1p2c1l1UVQtTTJheDM2RVBkUm1HYk11cEliTVY1eTZsRGNkM0VHM1VCYUVJNGlpaEFvU2hxZGxGa2I3aVdLeGUwb0M0OUNIMDc4WVBBSlhvdGhVS2lVVlM;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:20
        GMT; secure, edgebucket=c2NlgaXntwDE40gm9j; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '64'
      x-ratelimit-remaining:
      - '36.0'
      x-ratelimit-reset:
      - '39'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:21 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638389449.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmu2gx2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rabuf",
        "can_mod_post": false, "created_utc": 1638387649.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_38xc9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### [Rust](https://github.com/rabuf/advent-of-code/blob/master/2021/rust/src/day01.rs)\n\nProbably
        a better way to do it, but I liked this one. I''ve dabbled with Rust in the
        past so this will be my first major effort, I think I''ll be aiming  for fast-but-clean
        solutions. Planning to keep them all in one binary. I''ll be splitting pieces
        out into submodules as I get a better feel for how to organize it.\n\nI see
        a lot of people using `filter`, `count`, and `windows`. I imagine that should
        be configurable so that one function can do it all.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h3&gt;&lt;a href=\"https://github.com/rabuf/advent-of-code/blob/master/2021/rust/src/day01.rs\"&gt;Rust&lt;/a&gt;&lt;/h3&gt;\n\n&lt;p&gt;Probably
        a better way to do it, but I liked this one. I&amp;#39;ve dabbled with Rust
        in the past so this will be my first major effort, I think I&amp;#39;ll be
        aiming  for fast-but-clean solutions. Planning to keep them all in one binary.
        I&amp;#39;ll be splitting pieces out into submodules as I get a better feel
        for how to organize it.&lt;/p&gt;\n\n&lt;p&gt;I see a lot of people using
        &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, and &lt;code&gt;windows&lt;/code&gt;.
        I imagine that should be configurable so that one function can do it all.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu2gx2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu2gx2", "created":
        1638387649.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmufjni",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Mikewazovski",
        "can_mod_post": false, "created_utc": 1638392574.0, "send_replies": true,
        "parent_id": "t1_hmu2gx2", "score": 2, "author_fullname": "t2_dolnd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Btw, a short-hand for `+ if prev &lt; curr { 1 } else { 0 }` is simply `+
        ((prev &lt; curr) as i64)`. I used `usize` in my code, but for your case it
        would be `i64` I guess.\n\nEdit: Also, if your match on file opening just
        panics anyway, why not use `.unwrap`?", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Btw, a short-hand for &lt;code&gt;+ if prev &amp;lt;
        curr { 1 } else { 0 }&lt;/code&gt; is simply &lt;code&gt;+ ((prev &amp;lt;
        curr) as i64)&lt;/code&gt;. I used &lt;code&gt;usize&lt;/code&gt; in my code,
        but for your case it would be &lt;code&gt;i64&lt;/code&gt; I guess.&lt;/p&gt;\n\n&lt;p&gt;Edit:
        Also, if your match on file opening just panics anyway, why not use &lt;code&gt;.unwrap&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmufjni/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmufjni", "created":
        1638392574.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmuh4nv", "id": "hmuh4nv", "parent_id":
        "t1_hmufjni", "depth": 2, "children": ["hmuh4nv"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_hmufpzv", "id": "hmufpzv", "parent_id": "t1_hmu2gx2",
        "depth": 1, "children": ["hmufpzv"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu2rw9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kjempelodott",
        "can_mod_post": false, "created_utc": 1638387767.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_3iued2td", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust. My code has owls :3 https://github.com/kjempelodott/adventofcode/blob/master/aoc2021/src/bin/day1.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust. My code has owls
        :3 &lt;a href=\"https://github.com/kjempelodott/adventofcode/blob/master/aoc2021/src/bin/day1.rs\"&gt;https://github.com/kjempelodott/adventofcode/blob/master/aoc2021/src/bin/day1.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu2rw9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu2rw9", "created":
        1638387767.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638388658.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmu41kj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[**PHP**](https://topaz.github.io/paste/#XQAAAQCqAwAAAAAAAAAeD8aGAYRFsfEu60wrjmXuyUDduM0qrCDrsQHVkqb8YY22RHa57athcw6IoAne11mhfkdTywoTGe8PoJUj2zUpjqi43Sl6KBfsYl7GSVSukO61KkqClTo28l5y4vK89G3dE+moJAH7cyr5htJpr6cDucExW+JISd/q6D6PGBqkHPuGLB+LULu1SbrBvEJbOVYPnVn+uLxNQtU9eygwqndivOaHpldafuKxLlSxrjZxKA39ITvrWkFoZxAsjvJbJMwkOqU9JEztNcssnBxaAaGyYaetvsx5FPRNMX0xebc9mHKUiMkBcvnpbQqwOO+jigQJEFpJg051jgsCYRmvyg0Ai/SNXXTt/vTm51htpdZekPF6BX4lgAUKb9/QiCZ2ZIRPP0XMQh4WHoN2rh+PB/VmpUlNwpZ9ZdxOuvAUwKi1m7eOrWVzOPSUD57rhpAraL7nyBEkqvqwCJWtF7x4ZsZ8lVYh7c6bLjPVFQ03WTlk83ttn9f9pTTHwDLtfy0XO3AE7C77Tdbc9t6mp3hH8GdO93S4DjXq1CliKqYUua1U7plKZbeXbH1PPSe+V6TtkHVUf7cBFO2HOvTfKGWAmmeaec+FgImrt4NjFK38NT7o)\n\n&amp;#x200B;\n\n[To
        github](https://github.com/duemti/adventofcode/blob/5073f0bb34fa68b542213893d05c8a21dd60a20d/2021/day_01_Sonar_Sweep/solve.php)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmu41kj",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCqAwAAAAAAAAAeD8aGAYRFsfEu60wrjmXuyUDduM0qrCDrsQHVkqb8YY22RHa57athcw6IoAne11mhfkdTywoTGe8PoJUj2zUpjqi43Sl6KBfsYl7GSVSukO61KkqClTo28l5y4vK89G3dE+moJAH7cyr5htJpr6cDucExW+JISd/q6D6PGBqkHPuGLB+LULu1SbrBvEJbOVYPnVn+uLxNQtU9eygwqndivOaHpldafuKxLlSxrjZxKA39ITvrWkFoZxAsjvJbJMwkOqU9JEztNcssnBxaAaGyYaetvsx5FPRNMX0xebc9mHKUiMkBcvnpbQqwOO+jigQJEFpJg051jgsCYRmvyg0Ai/SNXXTt/vTm51htpdZekPF6BX4lgAUKb9/QiCZ2ZIRPP0XMQh4WHoN2rh+PB/VmpUlNwpZ9ZdxOuvAUwKi1m7eOrWVzOPSUD57rhpAraL7nyBEkqvqwCJWtF7x4ZsZ8lVYh7c6bLjPVFQ03WTlk83ttn9f9pTTHwDLtfy0XO3AE7C77Tdbc9t6mp3hH8GdO93S4DjXq1CliKqYUua1U7plKZbeXbH1PPSe+V6TtkHVUf7cBFO2HOvTfKGWAmmeaec+FgImrt4NjFK38NT7o\"&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/duemti/adventofcode/blob/5073f0bb34fa68b542213893d05c8a21dd60a20d/2021/day_01_Sonar_Sweep/solve.php\"&gt;To
        github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu41kj/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638388261.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638388261.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu47y6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "skillaz1",
        "can_mod_post": false, "created_utc": 1638388328.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_hyi0i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in Java.\n\nPart 1:\n\n    int numberOfIncreases = 0;\n    for
        (int i = 1; i &lt; input.size(); i++) {\n     numberOfIncreases += input.get(i)
        &gt; input.get(i - 1) ? 1 : 0;\n    }    \n\nPart 2:\n\n    int numberOfIncreases
        = 0;\n    for (int i = 3; i &lt; input.size(); i++) {\n     numberOfIncreases
        += input.get(i) &gt; input.get(i - 3) ? 1 : 0;\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My solution in Java.&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        numberOfIncreases = 0;\nfor (int i = 1; i &amp;lt; input.size(); i++) {\n
        numberOfIncreases += input.get(i) &amp;gt; input.get(i - 1) ? 1 : 0;\n}    \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int numberOfIncreases = 0;\nfor (int
        i = 3; i &amp;lt; input.size(); i++) {\n numberOfIncreases += input.get(i)
        &amp;gt; input.get(i - 3) ? 1 : 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu47y6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu47y6", "created":
        1638388328.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmu4r0v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmu4r0v", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu4r0v/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638388533.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638388533.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmvujug", "id": "hmvujug", "parent_id":
        "t1_hmu4r0v", "depth": 1, "children": ["hmvujug", "hmuasvb"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638463394.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmu51kx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ShaviRankar",
        "can_mod_post": false, "created_utc": 1638388644.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_11nehz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 1, parts 1 &amp; 2 using `.filter()` and `.reduce()` in Javascript\n\n    let
        data = require(\"./data.json\");\n    \n    const part1 = data.filter((datum,
        i, arr) =&gt; arr[i] &gt; arr[i - 1]).length;\n    \n    const part2 = data.filter(
        \n        (_, i, arr) =&gt; \n            arr.slice(i + 1, i + 4).reduce((x,
        y) =&gt; x + y, 0) &gt; \n            arr.slice(i, i + 3).reduce((x, y) =&gt;
        x + y, 0) \n    ).length;", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day
        1, parts 1 &amp;amp; 2 using &lt;code&gt;.filter()&lt;/code&gt; and &lt;code&gt;.reduce()&lt;/code&gt;
        in Javascript&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let data = require(&amp;quot;./data.json&amp;quot;);\n\nconst
        part1 = data.filter((datum, i, arr) =&amp;gt; arr[i] &amp;gt; arr[i - 1]).length;\n\nconst
        part2 = data.filter( \n    (_, i, arr) =&amp;gt; \n        arr.slice(i + 1,
        i + 4).reduce((x, y) =&amp;gt; x + y, 0) &amp;gt; \n        arr.slice(i, i
        + 3).reduce((x, y) =&amp;gt; x + y, 0) \n).length;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu51kx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu51kx", "created":
        1638388644.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmvugz0", "id": "hmvugz0", "parent_id":
        "t1_hmu51kx", "depth": 1, "children": ["hmvugz0", "hmuy4bg"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmu6yri", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "My Haskell solution to part 1 and part 2 (posting combined
        since they use the same function):\n\n    d1p1 :: [Int] -&gt; IO ()\n    d1p1
        depths = do\n      print $ countLarger depths 0\n\n    d1p2 :: [Int] -&gt;
        IO ()\n    d1p2 depths = do\n      let depthGroups = mkDepthGroups depths\n      print
        $ countLarger depthGroups 0\n\n    countLarger :: [Int] -&gt; Int -&gt; Int\n    countLarger
        depths@(x : y : _) count\n      | x &gt;= y = countLarger (tail depths) count\n      |
        x &lt; y = countLarger (tail depths) (count + 1)\n    countLarger _ count
        = count\n\n    mkDepthGroups :: [Int] -&gt; [Int]\n    mkDepthGroups depths@(x
        : y : z : _) = [x + y + z] &lt;&gt; mkDepthGroups (tail depths)\n    mkDepthGroups
        _ = []", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_hmu6yri", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My Haskell solution to part 1 and part 2 (posting
        combined since they use the same function):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d1p1
        :: [Int] -&amp;gt; IO ()\nd1p1 depths = do\n  print $ countLarger depths 0\n\nd1p2
        :: [Int] -&amp;gt; IO ()\nd1p2 depths = do\n  let depthGroups = mkDepthGroups
        depths\n  print $ countLarger depthGroups 0\n\ncountLarger :: [Int] -&amp;gt;
        Int -&amp;gt; Int\ncountLarger depths@(x : y : _) count\n  | x &amp;gt;= y
        = countLarger (tail depths) count\n  | x &amp;lt; y = countLarger (tail depths)
        (count + 1)\ncountLarger _ count = count\n\nmkDepthGroups :: [Int] -&amp;gt;
        [Int]\nmkDepthGroups depths@(x : y : z : _) = [x + y + z] &amp;lt;&amp;gt;
        mkDepthGroups (tail depths)\nmkDepthGroups _ = []\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu6yri/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638389380.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638389380.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu7g9d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Aromatic-Piccolo4321",
        "can_mod_post": false, "created_utc": 1638389566.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_826olxe2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[RUST](https://maebli.github.io/rust/2021/12/01/100rust-31.html) using zip
        / filter", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://maebli.github.io/rust/2021/12/01/100rust-31.html\"&gt;RUST&lt;/a&gt;
        using zip / filter&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu7g9d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu7g9d", "created":
        1638389566.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmufaz5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Mikewazovski",
        "can_mod_post": false, "created_utc": 1638392483.0, "send_replies": true,
        "parent_id": "t1_hmu7g9d", "score": 2, "author_fullname": "t2_dolnd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "If you are already using `itertools`, consider trying [`tuple_windows`](https://docs.rs/itertools/0.10.0/itertools/trait.Itertools.html#method.tuple_windows),
        it''s pretty handy.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If
        you are already using &lt;code&gt;itertools&lt;/code&gt;, consider trying
        &lt;a href=\"https://docs.rs/itertools/0.10.0/itertools/trait.Itertools.html#method.tuple_windows\"&gt;&lt;code&gt;tuple_windows&lt;/code&gt;&lt;/a&gt;,
        it&amp;#39;s pretty handy.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmufaz5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmufaz5", "created":
        1638392483.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmymjxb", "id": "hmymjxb", "parent_id":
        "t1_hmufaz5", "depth": 2, "children": ["hmymjxb"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmu7i0g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gwoplock",
        "can_mod_post": false, "created_utc": 1638389585.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_84sij", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[part 1](https://github.com/gwoplock/Advent-of-code-2021/blob/master/Day1/Part1/main.c)\n[part
        2](https://github.com/gwoplock/Advent-of-code-2021/blob/master/Day1/Part2/main.c)\n\nWrote
        it in c99. Used a circular array to manage the sun for part 2 since I never
        thought of the vals[i] &gt; vals[i-3] trick.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/gwoplock/Advent-of-code-2021/blob/master/Day1/Part1/main.c\"&gt;part
        1&lt;/a&gt;\n&lt;a href=\"https://github.com/gwoplock/Advent-of-code-2021/blob/master/Day1/Part2/main.c\"&gt;part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Wrote it in c99. Used a circular array to
        manage the sun for part 2 since I never thought of the vals[i] &amp;gt; vals[i-3]
        trick.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu7i0g/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu7i0g", "created":
        1638389585.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638396262.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmu7mkh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tftio",
        "can_mod_post": false, "created_utc": 1638389634.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_b2y3x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Haskell solution (using [Justin Le''s scaffolding](https://github.com/mstksg/advent-of-code-dev)):\n\nOK,
        fine, how do you get this godforsaken editor to handle a code block? FFS.\n\n    solve
        :: Int -&gt; [Int] -&gt; Maybe Int\n    solve 0 _ = Nothing\n    solve w ls
        | length ls &lt; w = Nothing\n    solve w ls =\n      Just $ foldr (\\i acc
        -&gt; if (ls !! i) &lt; (ls !! (i + w - 1)) then acc + 1 else acc) 0 [0 ..
        (length ls - w)]", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        Haskell solution (using &lt;a href=\"https://github.com/mstksg/advent-of-code-dev\"&gt;Justin
        Le&amp;#39;s scaffolding&lt;/a&gt;):&lt;/p&gt;\n\n&lt;p&gt;OK, fine, how do
        you get this godforsaken editor to handle a code block? FFS.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;solve
        :: Int -&amp;gt; [Int] -&amp;gt; Maybe Int\nsolve 0 _ = Nothing\nsolve w ls
        | length ls &amp;lt; w = Nothing\nsolve w ls =\n  Just $ foldr (\\i acc -&amp;gt;
        if (ls !! i) &amp;lt; (ls !! (i + w - 1)) then acc + 1 else acc) 0 [0 .. (length
        ls - w)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu7mkh/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu7mkh", "created":
        1638389634.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvucqv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638413978.0, "send_replies": true,
        "parent_id": "t1_hmu7mkh", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; OK, fine, how do you get this godforsaken editor to handle a code block?
        FFS.\n\nLooks fine on old.reddit.  If you haven''t seen it yet, we have an
        article in our wiki [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)
        with a quick Markdown primer about properly formatting code for maximum compatibility
        between old.reddit and new.reddit.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;OK,
        fine, how do you get this godforsaken editor to handle a code block? FFS.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Looks
        fine on old.reddit.  If you haven&amp;#39;t seen it yet, we have an article
        in our wiki &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt; with a quick Markdown primer about properly formatting
        code for maximum compatibility between old.reddit and new.reddit.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvucqv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvucqv", "created":
        1638413978.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638390713.0,
        "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id":
        "t3_r66vow", "author_flair_template_id": null, "likes": null, "replies": "",
        "user_reports": [], "saved": false, "id": "hmu9qut", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_r66vow", "score": 2, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Here is my
        solution. I feel like it''s a bit verbose, and there is some code duplication.
        I''ve only been programming in Clojure for a couple of weeks, so please bear
        with me :)\n\n    ; Set-up\n    \n    (ns day-1.sonar-sweep\n      (:require
        [clojure.string :as str]))\n    \n    (def input-file \"resources/day-1/sonar_sweep.txt\")\n    \n    (def
        measurements (-&gt;&gt; input-file\n                           slurp\n                           str/split-lines\n                           (map
        read-string)))\n    \n    ; Part One\n    \n    (def measurement-pairs (partition
        2 1 measurements))\n    \n    (def pair-mask (for [m measurement-pairs]\n                     (if
        (pos? (- (second m) (first m))) true false)))\n    \n    (def answer-part-one
        (get (frequencies pair-mask) true))\n    \n    ; Part Two\n    \n    (def
        measurement-triads (partition 3 1 measurements))\n    \n    (def triad-sums
        (for [m measurement-triads]\n                      (reduce + m)))\n    \n    (def
        triad-sum-pairs (partition 2 1 triad-sums))\n    \n    (def triad-mask (for
        [m triad-sum-pairs]\n                      (if (pos? (- (second m) (first
        m))) true false)))\n    \n    (def answer-part-two (get (frequencies triad-mask)
        true))", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_hmu9qut", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Here is my solution. I feel like it&amp;#39;s a bit
        verbose, and there is some code duplication. I&amp;#39;ve only been programming
        in Clojure for a couple of weeks, so please bear with me :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;;
        Set-up\n\n(ns day-1.sonar-sweep\n  (:require [clojure.string :as str]))\n\n(def
        input-file &amp;quot;resources/day-1/sonar_sweep.txt&amp;quot;)\n\n(def measurements
        (-&amp;gt;&amp;gt; input-file\n                       slurp\n                       str/split-lines\n                       (map
        read-string)))\n\n; Part One\n\n(def measurement-pairs (partition 2 1 measurements))\n\n(def
        pair-mask (for [m measurement-pairs]\n                 (if (pos? (- (second
        m) (first m))) true false)))\n\n(def answer-part-one (get (frequencies pair-mask)
        true))\n\n; Part Two\n\n(def measurement-triads (partition 3 1 measurements))\n\n(def
        triad-sums (for [m measurement-triads]\n                  (reduce + m)))\n\n(def
        triad-sum-pairs (partition 2 1 triad-sums))\n\n(def triad-mask (for [m triad-sum-pairs]\n                  (if
        (pos? (- (second m) (first m))) true false)))\n\n(def answer-part-two (get
        (frequencies triad-mask) true))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu9qut/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638390431.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638390431.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmubq5y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "suspect_scrofa",
        "can_mod_post": false, "created_utc": 1638391168.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_22a57lm4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python - Numpy\n\n    inp = np.loadtxt(''input1.txt'')\n    a = np.sum(np.array(np.diff(inp))
        &gt; 0, axis=0) \n    b = np.sum(np.array(np.diff([sum(inp[i:i+3]) for i in
        range(len(inp)-2)])) &gt; 0, axis=0) \n    print(a,b)\n\nSolution for both
        of part 1 and 2 in python!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        - Numpy&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;inp = np.loadtxt(&amp;#39;input1.txt&amp;#39;)\na
        = np.sum(np.array(np.diff(inp)) &amp;gt; 0, axis=0) \nb = np.sum(np.array(np.diff([sum(inp[i:i+3])
        for i in range(len(inp)-2)])) &amp;gt; 0, axis=0) \nprint(a,b)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Solution
        for both of part 1 and 2 in python!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmubq5y/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmubq5y", "created": 1638391168.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmuc4hm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "RudeGuy2000", "can_mod_post": false, "created_utc":
        1638391318.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_140yv8", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "my solution (scheme):\n\nhttps://raw.githubusercontent.com/chrisisnotarudeguy/aoc2021/master/day1.scm\n\nif
        someone can suggest me a better definition of ```(three-measure-list)``` that
        doesn''t involve a loop, I''d be grateful.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;my solution (scheme):&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://raw.githubusercontent.com/chrisisnotarudeguy/aoc2021/master/day1.scm\"&gt;https://raw.githubusercontent.com/chrisisnotarudeguy/aoc2021/master/day1.scm&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;if
        someone can suggest me a better definition of &lt;code&gt;(three-measure-list)&lt;/code&gt;
        that doesn&amp;#39;t involve a loop, I&amp;#39;d be grateful.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuc4hm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuc4hm", "created":
        1638391318.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmukvfh", "id": "hmukvfh", "parent_id":
        "t1_hmuc4hm", "depth": 1, "children": ["hmukvfh", "hmyydkp"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmuf6r8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LinAGKar",
        "can_mod_post": false, "created_utc": 1638392440.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_hbt9n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solutions in Rust: https://github.com/LinAGKar/advent-of-code-2021-rust/blob/main/day1a/src/main.rs
        and https://github.com/LinAGKar/advent-of-code-2021-rust/blob/main/day1b/src/main.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solutions in Rust:
        &lt;a href=\"https://github.com/LinAGKar/advent-of-code-2021-rust/blob/main/day1a/src/main.rs\"&gt;https://github.com/LinAGKar/advent-of-code-2021-rust/blob/main/day1a/src/main.rs&lt;/a&gt;
        and &lt;a href=\"https://github.com/LinAGKar/advent-of-code-2021-rust/blob/main/day1b/src/main.rs\"&gt;https://github.com/LinAGKar/advent-of-code-2021-rust/blob/main/day1b/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuf6r8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuf6r8", "created":
        1638392440.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638394718.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmukafq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tururut_tururut",
        "can_mod_post": false, "created_utc": 1638394371.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4xuiwc2u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "R - Tidyverse\n\n    \n    library(tidyverse)\n    \n    library(roll)\n    \n    setwd(\"C:/whatever/aoc2021\")\n    \n    input1
        &lt;- read.table(\"./01_day_01_input\")\n    \n    # part 1\n    \n    sol1
        &lt;- input1 %&gt;%\n    \n        rename(\"depth\" = \"V1\") %&gt;%\n    \n        mutate(\"dif\"
        = depth-lag(depth),\n    \n               \"grew\" = case_when(dif &gt; 0
        ~ TRUE,\n    \n                                   TRUE ~ FALSE)) %&gt;%\n    \n        summarise(\"total\"
        = sum(grew))\n    \n    # part 2\n    \n    sol2 &lt;- input1 %&gt;%\n    \n        rename(\"depth\"
        = \"V1\") %&gt;%\n    \n        mutate(\"window_sum\" = roll_sum(depth, 3,
        min_obs = 3)) %&gt;%\n    \n        filter(!is.na(window_sum)) %&gt;%\n    \n        mutate(\"dif\"
        = window_sum-lag(window_sum),\n    \n               \"grew\" = case_when(dif
        == NA ~ NA,\n    \n                                   dif &gt; 0 ~ TRUE,\n    \n                                   TRUE
        ~ FALSE)) %&gt;%\n    \n        summarise(\"total\" = sum(grew))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;R - Tidyverse&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;library(tidyverse)\n\nlibrary(roll)\n\nsetwd(&amp;quot;C:/whatever/aoc2021&amp;quot;)\n\ninput1
        &amp;lt;- read.table(&amp;quot;./01_day_01_input&amp;quot;)\n\n# part 1\n\nsol1
        &amp;lt;- input1 %&amp;gt;%\n\n    rename(&amp;quot;depth&amp;quot; = &amp;quot;V1&amp;quot;)
        %&amp;gt;%\n\n    mutate(&amp;quot;dif&amp;quot; = depth-lag(depth),\n\n           &amp;quot;grew&amp;quot;
        = case_when(dif &amp;gt; 0 ~ TRUE,\n\n                               TRUE
        ~ FALSE)) %&amp;gt;%\n\n    summarise(&amp;quot;total&amp;quot; = sum(grew))\n\n#
        part 2\n\nsol2 &amp;lt;- input1 %&amp;gt;%\n\n    rename(&amp;quot;depth&amp;quot;
        = &amp;quot;V1&amp;quot;) %&amp;gt;%\n\n    mutate(&amp;quot;window_sum&amp;quot;
        = roll_sum(depth, 3, min_obs = 3)) %&amp;gt;%\n\n    filter(!is.na(window_sum))
        %&amp;gt;%\n\n    mutate(&amp;quot;dif&amp;quot; = window_sum-lag(window_sum),\n\n           &amp;quot;grew&amp;quot;
        = case_when(dif == NA ~ NA,\n\n                               dif &amp;gt;
        0 ~ TRUE,\n\n                               TRUE ~ FALSE)) %&amp;gt;%\n\n    summarise(&amp;quot;total&amp;quot;
        = sum(grew))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmukafq/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmukafq", "created": 1638394371.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmum4io", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "drbolle", "can_mod_post": false, "created_utc":
        1638395066.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_15jsjy", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "My solution in Kotlin: https://github.com/ThomasBollmeier/advent-of-code-kotlin-2021/blob/1419d954754147f215f96986282429d318372751/src/Day01.kt",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in Kotlin:
        &lt;a href=\"https://github.com/ThomasBollmeier/advent-of-code-kotlin-2021/blob/1419d954754147f215f96986282429d318372751/src/Day01.kt\"&gt;https://github.com/ThomasBollmeier/advent-of-code-kotlin-2021/blob/1419d954754147f215f96986282429d318372751/src/Day01.kt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmum4io/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmum4io", "created":
        1638395066.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmumga1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "q3w3e3_",
        "can_mod_post": false, "created_utc": 1638395191.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_69in7j3g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution(s) in [Google Sheets](https://docs.google.com/spreadsheets/d/1Y2GKSC9sOqm7ORkq-gNmtVkPNgyEI0l1vJZYwOeumr8/edit?usp=sharing)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution(s) in &lt;a
        href=\"https://docs.google.com/spreadsheets/d/1Y2GKSC9sOqm7ORkq-gNmtVkPNgyEI0l1vJZYwOeumr8/edit?usp=sharing\"&gt;Google
        Sheets&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmumga1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmumga1", "created":
        1638395191.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmunk6r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "cashewbiscuit",
        "can_mod_post": false, "created_utc": 1638395613.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5tpd2ze4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I have wanted to learn Haskell for years. This is my chance. https://github.com/GaalDornick/AdventOfCodeSolutions/blob/main/src/adventofcode/year2021/day1/app/Main.hs\n\nFirst
        Haskell program of my life", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        have wanted to learn Haskell for years. This is my chance. &lt;a href=\"https://github.com/GaalDornick/AdventOfCodeSolutions/blob/main/src/adventofcode/year2021/day1/app/Main.hs\"&gt;https://github.com/GaalDornick/AdventOfCodeSolutions/blob/main/src/adventofcode/year2021/day1/app/Main.hs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;First
        Haskell program of my life&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmunk6r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmunk6r", "created":
        1638395613.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmunovu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Brief_Bar4993",
        "can_mod_post": false, "created_utc": 1638395662.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_cldb32xo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# solutions in a single for loop:\n\n&amp;#x200B;\n\nPart 1\n\n`var data
        = File.ReadAllLines(\"inputs.txt\").Select(x =&gt; int.Parse(x)).ToArray();`\n\n`int
        currentInput = data[0], nextInput = currentInput, numIncreases = 0;`\n\n`for
        (var i = 1; i &lt; data.Length; nextInput = data[i], numIncreases += (currentInput
        &lt; nextInput ? 1 : 0), currentInput = nextInput, i++) ;`\n\n`Console.WriteLine(numIncreases);`\n\n&amp;#x200B;\n\nPart
        2\n\n`var data = File.ReadAllLines(\"inputs.txt\").Select(x =&gt; int.Parse(x)).ToArray();`\n\n`int
        currentInput = data.Take(3).Sum(), nextInput = 0, numIncreases = 0;`\n\n`for
        (var i = 1; i &lt; data.Length - 2; nextInput = data.Skip(i).Take(3).Sum(),
        numIncreases += (nextInput &gt; currentInput ? 1 : 0), i++, currentInput =
        nextInput) ;`\n\n`Console.WriteLine(numIncreases);`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C# solutions in a single for loop:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var data = File.ReadAllLines(&amp;quot;inputs.txt&amp;quot;).Select(x
        =&amp;gt; int.Parse(x)).ToArray();&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;int
        currentInput = data[0], nextInput = currentInput, numIncreases = 0;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for
        (var i = 1; i &amp;lt; data.Length; nextInput = data[i], numIncreases += (currentInput
        &amp;lt; nextInput ? 1 : 0), currentInput = nextInput, i++) ;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Console.WriteLine(numIncreases);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var data = File.ReadAllLines(&amp;quot;inputs.txt&amp;quot;).Select(x
        =&amp;gt; int.Parse(x)).ToArray();&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;int
        currentInput = data.Take(3).Sum(), nextInput = 0, numIncreases = 0;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for
        (var i = 1; i &amp;lt; data.Length - 2; nextInput = data.Skip(i).Take(3).Sum(),
        numIncreases += (nextInput &amp;gt; currentInput ? 1 : 0), i++, currentInput
        = nextInput) ;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Console.WriteLine(numIncreases);&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmunovu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmunovu", "created":
        1638395662.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmunpx2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ecrooks",
        "can_mod_post": false, "created_utc": 1638395673.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_6uiki", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "IBM Db2 LUW (11.5) SQL:\n\n    create table aoc_day01 (\n    seq int generated
        by default as identity primary key\n    , depth int );\n    --change path
        and filename for your input as needed\n    call admin_cmd (''import from /database/day01_input.csv
        of del \n                      insert into aoc_day01 (depth)'');\n    --part1\n    with
        depth_diff as (select depth - lag(depth,1) over(order by seq asc) as diff\n    from
        aoc_day01)\n    select count() as count from depth_diff where diff &gt; 0
        \n    \n    --part2 \n    with depth3 as (select seq \n        , case when
        count(depth) over(order by seq asc ROWS 2 PRECEDING) = 3         \n            then
        sum(depth) over(order by seq asc ROWS 2 PRECEDING) \n            else null
        \n            end as depth3 \n        from aoc_day01 )\n    , depth3_diff
        as (select depth3 - (lag(depth3,1) over(order by seq asc)) as diff \n        from
        depth3 ) \n    select count() as count \n        from depth3_diff \n        where
        diff &gt; 0\n\nMore details including docker container to run available here:
        [https://github.com/ecrooks/aoc2021\\_SQL](https://github.com/ecrooks/aoc2021_SQL)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;IBM Db2 LUW (11.5) SQL:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;create
        table aoc_day01 (\nseq int generated by default as identity primary key\n,
        depth int );\n--change path and filename for your input as needed\ncall admin_cmd
        (&amp;#39;import from /database/day01_input.csv of del \n                  insert
        into aoc_day01 (depth)&amp;#39;);\n--part1\nwith depth_diff as (select depth
        - lag(depth,1) over(order by seq asc) as diff\nfrom aoc_day01)\nselect count()
        as count from depth_diff where diff &amp;gt; 0 \n\n--part2 \nwith depth3 as
        (select seq \n    , case when count(depth) over(order by seq asc ROWS 2 PRECEDING)
        = 3         \n        then sum(depth) over(order by seq asc ROWS 2 PRECEDING)
        \n        else null \n        end as depth3 \n    from aoc_day01 )\n, depth3_diff
        as (select depth3 - (lag(depth3,1) over(order by seq asc)) as diff \n    from
        depth3 ) \nselect count() as count \n    from depth3_diff \n    where diff
        &amp;gt; 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;More details including docker
        container to run available here: &lt;a href=\"https://github.com/ecrooks/aoc2021_SQL\"&gt;https://github.com/ecrooks/aoc2021_SQL&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmunpx2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmunpx2", "created":
        1638395673.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvphoc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638411892.0, "send_replies": true,
        "parent_id": "t1_hmunpx2", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; IBM Db2 LUW (11.5) SQL\n\nWell, that''s certainly a new one.  Kudos!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;IBM
        Db2 LUW (11.5) SQL&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Well, that&amp;#39;s
        certainly a new one.  Kudos!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvphoc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvphoc", "created":
        1638411892.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmunt9t", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dperalta",
        "can_mod_post": false, "created_utc": 1638395708.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_546fk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solutions to the day 1 using Javascript: [https://gist.github.com/spacecowb0y/a494921dff51f87a65cd57a0830742fd](https://gist.github.com/spacecowb0y/a494921dff51f87a65cd57a0830742fd)\n\n    const
        data = []; // your data goes here.\n    \n    const byIndexValue = (value,
        index, array) =&gt; array[index] &gt; array[index - 1];\n    \n    const byIndexSum
        = (value, index, array) =&gt;\n      value + array[index + 1] + array[index
        + 2] &gt;\n      value + array[index - 1] + array[index + 1];\n    \n    console.log(`Answer
        1: ${data.filter(byIndexValue).length}`);\n    console.log(`Answer 2: ${data.filter(byIndexSum).length}`);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solutions to the
        day 1 using Javascript: &lt;a href=\"https://gist.github.com/spacecowb0y/a494921dff51f87a65cd57a0830742fd\"&gt;https://gist.github.com/spacecowb0y/a494921dff51f87a65cd57a0830742fd&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        data = []; // your data goes here.\n\nconst byIndexValue = (value, index,
        array) =&amp;gt; array[index] &amp;gt; array[index - 1];\n\nconst byIndexSum
        = (value, index, array) =&amp;gt;\n  value + array[index + 1] + array[index
        + 2] &amp;gt;\n  value + array[index - 1] + array[index + 1];\n\nconsole.log(`Answer
        1: ${data.filter(byIndexValue).length}`);\nconsole.log(`Answer 2: ${data.filter(byIndexSum).length}`);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmunt9t/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmunt9t", "created":
        1638395708.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmuvrsv", "id": "hmuvrsv", "parent_id":
        "t1_hmunt9t", "depth": 1, "children": ["hmuvrsv"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmuox3j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "flashrick",
        "can_mod_post": false, "created_utc": 1638396135.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_94904ew1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "scala worksheet:\n```scala\nval day1 = \"./day1.txt\"\nval depths = scala.io.Source.fromFile(day1).getLines().toList.map(_.toInt)\nval
        ans = depths.sliding(2).filter(m =&gt; m(0) &lt; m(1))\nprint(ans.toList.size)\nval
        sld = depths.sliding(3).map(_.sum).sliding(2).filter(m =&gt; m(0) &lt; m(1))\nprint(sld.toList.size)\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;scala worksheet:\n&lt;code&gt;scala\nval
        day1 = &amp;quot;./day1.txt&amp;quot;\nval depths = scala.io.Source.fromFile(day1).getLines().toList.map(_.toInt)\nval
        ans = depths.sliding(2).filter(m =&amp;gt; m(0) &amp;lt; m(1))\nprint(ans.toList.size)\nval
        sld = depths.sliding(3).map(_.sum).sliding(2).filter(m =&amp;gt; m(0) &amp;lt;
        m(1))\nprint(sld.toList.size)\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuox3j/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmuox3j", "created": 1638396135.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmutz9p", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "u_tamtam", "can_mod_post": false, "created_utc":
        1638398142.0, "send_replies": true, "parent_id": "t1_hmuox3j", "score": 3,
        "author_fullname": "t2_gttle", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "rather than `filter(predicate).count`
        you could use `count(predicate)` directly :)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;rather than &lt;code&gt;filter(predicate).count&lt;/code&gt;
        you could use &lt;code&gt;count(predicate)&lt;/code&gt; directly :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmutz9p/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmutz9p", "created":
        1638398142.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmx0ajp", "id": "hmx0ajp", "parent_id":
        "t1_hmutz9p", "depth": 2, "children": ["hmx0ajp"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmupg0c",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "spencerwi",
        "can_mod_post": false, "created_utc": 1638396340.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_tpjy6wz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Taking this year as an opportunity to learn [Ballerina](https://ballerina.io).
        Seems like a neat language:\n\n    import ballerina/io;\n    \n    function
        countIncreases(int[] input) returns int {\n        int total = 0;\n        int?
        previous = null;\n        foreach int current in input {\n            if previous
        != null &amp;&amp; current &gt; previous {\n                total += 1;\n            }\n            previous
        = current;\n        }\n        return total;\n    }\n    \n    function partA(int[]
        input) returns int {\n        return countIncreases(input);\n    }\n    \n    function
        partB(int[] input) returns int {\n        int[] sums = \n            from
        int i in 2..&lt;input.length()\n            select input[i] + input[i - 1]
        + input[i - 2];\n        return countIncreases(sums);\n    }\n    \n    public
        function main() returns error? {\n        string[]lines = check io:fileReadLines(\"input.txt\");\n    \n        int[]
        input = \n            from var line in lines\n            let int|error parsed
        = check int:fromString(line)\n            where !(parsed is error)\n            select
        parsed;\n    \n        io:println(\"Part A: \", partA(input));\n        io:println(\"Part
        B: \", partB(input));\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Taking
        this year as an opportunity to learn &lt;a href=\"https://ballerina.io\"&gt;Ballerina&lt;/a&gt;.
        Seems like a neat language:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import ballerina/io;\n\nfunction
        countIncreases(int[] input) returns int {\n    int total = 0;\n    int? previous
        = null;\n    foreach int current in input {\n        if previous != null &amp;amp;&amp;amp;
        current &amp;gt; previous {\n            total += 1;\n        }\n        previous
        = current;\n    }\n    return total;\n}\n\nfunction partA(int[] input) returns
        int {\n    return countIncreases(input);\n}\n\nfunction partB(int[] input)
        returns int {\n    int[] sums = \n        from int i in 2..&amp;lt;input.length()\n        select
        input[i] + input[i - 1] + input[i - 2];\n    return countIncreases(sums);\n}\n\npublic
        function main() returns error? {\n    string[]lines = check io:fileReadLines(&amp;quot;input.txt&amp;quot;);\n\n    int[]
        input = \n        from var line in lines\n        let int|error parsed = check
        int:fromString(line)\n        where !(parsed is error)\n        select parsed;\n\n    io:println(&amp;quot;Part
        A: &amp;quot;, partA(input));\n    io:println(&amp;quot;Part B: &amp;quot;,
        partB(input));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmupg0c/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmupg0c", "created": 1638396340.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmupha0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "JamieMansfield", "can_mod_post": false,
        "created_utc": 1638396354.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_nugii", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Go\n\n[https://gist.github.com/jamierocks/1605aea25a0214d105cd025684701278](https://gist.github.com/jamierocks/1605aea25a0214d105cd025684701278)\n\nA
        little scruffy, but it worked first time :D", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Go&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/jamierocks/1605aea25a0214d105cd025684701278\"&gt;https://gist.github.com/jamierocks/1605aea25a0214d105cd025684701278&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A
        little scruffy, but it worked first time :D&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmupha0/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmupha0", "created": 1638396354.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_r66vow", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "hmuqc8p", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_r66vow", "score": 2, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "My solution
        in Java (for the first day; I plan to switch languages every day):  \n\n```\nimport
        java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport
        java.util.ArrayList;\n\npublic class Day01 {\n    public static void partOne(ArrayList&lt;Integer&gt;
        numbers) {\n        Integer measurements = 0;\n\n        // If the previous
        depth is smaller than the current one, then the\n        // current depth
        increased and we count how many times this happens.\n        for (int i =
        1; i &lt; numbers.size(); i++) {\n            if (numbers.get(i - 1) &lt;
        numbers.get(i)) {\n                measurements++;\n            }\n        }\n        System.out.println(\"Answer
        for part one: \" + measurements);\n    }\n\n    public static void partTwo(ArrayList&lt;Integer&gt;
        numbers) {\n        Integer increases = 0;\n        for (int i = 0; i &lt;
        numbers.size() - 3; i++) {\n            increases += (numbers.get(i + 3) &gt;
        numbers.get(i) ? 1 : 0);\n        }\n        System.out.println(\"Answer for
        part two: \" + increases);\n    }\n\n    public static void main(String[]
        args) {\n        try {\n            File input = new File(\"day01.in\");\n            Scanner
        reader = new Scanner(input);\n            ArrayList&lt;Integer&gt; numbers
        = new ArrayList&lt;&gt;();\n            while (reader.hasNextInt()) {\n                numbers.add(reader.nextInt());\n            }\n            reader.close();\n\n            partOne(numbers);\n            partTwo(numbers);\n        }
        catch (FileNotFoundException e) {\n            System.out.println(\"File not
        found!\");\n            e.printStackTrace();\n        }\n    }\n}\n```", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmuqc8p", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution in Java (for the first day; I plan to switch languages every day):  &lt;/p&gt;\n\n&lt;p&gt;```\nimport
        java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport
        java.util.ArrayList;&lt;/p&gt;\n\n&lt;p&gt;public class Day01 {\n    public
        static void partOne(ArrayList&amp;lt;Integer&amp;gt; numbers) {\n        Integer
        measurements = 0;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    // If the previous
        depth is smaller than the current one, then the\n    // current depth increased
        and we count how many times this happens.\n    for (int i = 1; i &amp;lt;
        numbers.size(); i++) {\n        if (numbers.get(i - 1) &amp;lt; numbers.get(i))
        {\n            measurements++;\n        }\n    }\n    System.out.println(&amp;quot;Answer
        for part one: &amp;quot; + measurements);\n}\n\npublic static void partTwo(ArrayList&amp;lt;Integer&amp;gt;
        numbers) {\n    Integer increases = 0;\n    for (int i = 0; i &amp;lt; numbers.size()
        - 3; i++) {\n        increases += (numbers.get(i + 3) &amp;gt; numbers.get(i)
        ? 1 : 0);\n    }\n    System.out.println(&amp;quot;Answer for part two: &amp;quot;
        + increases);\n}\n\npublic static void main(String[] args) {\n    try {\n        File
        input = new File(&amp;quot;day01.in&amp;quot;);\n        Scanner reader =
        new Scanner(input);\n        ArrayList&amp;lt;Integer&amp;gt; numbers = new
        ArrayList&amp;lt;&amp;gt;();\n        while (reader.hasNextInt()) {\n            numbers.add(reader.nextInt());\n        }\n        reader.close();\n\n        partOne(numbers);\n        partTwo(numbers);\n    }
        catch (FileNotFoundException e) {\n        System.out.println(&amp;quot;File
        not found!&amp;quot;);\n        e.printStackTrace();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuqc8p/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638396690.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638396690.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmvpc51", "id": "hmvpc51", "parent_id":
        "t1_hmuqc8p", "depth": 1, "children": ["hmvpc51"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmur5u6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Awkward-Camera-111",
        "can_mod_post": false, "created_utc": 1638397013.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_crtroe9o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I don\u2019t know how on earth I can add code so I\u2019m just gonna leave
        the link to my GitHub repo:\n\n#python \ud83d\udc0d\ud83d\udc0d\ud83d\udc0d\n\nhttps://github.com/Mike920-dev/advent-of-code-2021",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don\u2019t know how
        on earth I can add code so I\u2019m just gonna leave the link to my GitHub
        repo:&lt;/p&gt;\n\n&lt;h1&gt;python \ud83d\udc0d\ud83d\udc0d\ud83d\udc0d&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Mike920-dev/advent-of-code-2021\"&gt;https://github.com/Mike920-dev/advent-of-code-2021&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmur5u6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmur5u6", "created":
        1638397013.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638446453.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmusuux", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Strigone",
        "can_mod_post": false, "created_utc": 1638397686.0, "send_replies": true,
        "parent_id": "t1_hmur5u6", "score": 2, "author_fullname": "t2_3itfkg45", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You can either indent it with four spaces\n\n        like this\n\n\n~~~Or
        put it inside triple backticks \\`\\`\\`like this\\`\\`\\`~~~\n\n```like this```\n\nEdit:
        not don''t use backticks, see comment below, new lines are messed up in old.reddit.com\n\n```\nTry\nto\nopen\nthis\non\nold\nreddit\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can either indent
        it with four spaces&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    like this\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;~&lt;del&gt;Or
        put it inside triple backticks ```like this```&lt;/del&gt;~&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;like
        this&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: not don&amp;#39;t use backticks,
        see comment below, new lines are messed up in old.reddit.com&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nTry\nto\nopen\nthis\non\nold\nreddit\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmusuux/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmusuux", "created":
        1638397686.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvoymp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638411662.0, "send_replies": true,
        "parent_id": "t1_hmusuux", "score": 3, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Do not use triple backticks because your code will not show up properly on
        old.reddit.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do
        not use triple backticks because your code will not show up properly on old.reddit.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvoymp/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvoymp", "created":
        1638411662.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvp5cw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638411743.0, "send_replies": true,
        "parent_id": "t1_hmur5u6", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; I don\u2019t know how on earth I can add code\n\nCheck our wiki under
        the posting guidelines section: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I
        don\u2019t know how on earth I can add code&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Check
        our wiki under the posting guidelines section: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvp5cw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvp5cw", "created":
        1638411743.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmurivu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ProfessionalNihilist",
        "can_mod_post": false, "created_utc": 1638397158.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4y6kv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution is F# (as usual).  I have some skeleton code to that pulls the
        input down and passes it as a string my function;\n    \n    let sonarSweep:
        Solution = fun (rawInput: string) -&gt;\n        let parsed = asLines rawInput
        |&gt; Seq.map Int32.Parse\n    \n    let part1 =\n        parsed\n        |&gt;
        Seq.pairwise\n        |&gt; Seq.filter (fun (l, r) -&gt; r - l &gt; 0)\n        |&gt;
        Seq.length\n    \n    let part2 =\n        parsed\n        |&gt; Seq.windowed
        3\n        |&gt; Seq.map Array.sum\n        |&gt; Seq.pairwise\n        |&gt;
        Seq.filter (fun (l, r) -&gt; r - l &gt; 0)\n        |&gt; Seq.length\n    \n    {
        Part1 = Ok (sprintf \"%d\" part1); Part2 = Ok (sprintf \"%d\" part2) }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My solution is F# (as usual).  I have some
        skeleton code to that pulls the input down and passes it as a string my function;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        sonarSweep: Solution = fun (rawInput: string) -&amp;gt;\n    let parsed =
        asLines rawInput |&amp;gt; Seq.map Int32.Parse\n\nlet part1 =\n    parsed\n    |&amp;gt;
        Seq.pairwise\n    |&amp;gt; Seq.filter (fun (l, r) -&amp;gt; r - l &amp;gt;
        0)\n    |&amp;gt; Seq.length\n\nlet part2 =\n    parsed\n    |&amp;gt; Seq.windowed
        3\n    |&amp;gt; Seq.map Array.sum\n    |&amp;gt; Seq.pairwise\n    |&amp;gt;
        Seq.filter (fun (l, r) -&amp;gt; r - l &amp;gt; 0)\n    |&amp;gt; Seq.length\n\n{
        Part1 = Ok (sprintf &amp;quot;%d&amp;quot; part1); Part2 = Ok (sprintf &amp;quot;%d&amp;quot;
        part2) }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmurivu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmurivu", "created":
        1638397158.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638398443.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuu8ya", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "technoskald",
        "can_mod_post": false, "created_utc": 1638398251.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4ndgj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m [trying in Go](https://github.com/krmaxwell/aoc2021/tree/master/day1)
        this year, just because I''m working on learning it.\n\n\tpackage day1\n\n\tfunc
        SonarSweepNaive(data []int) int {\n\t\tdecreaseCount := 0\n\t\tfor i := 1;
        i &lt; len(data); i++ {\n\t\t\tif data[i] &gt; data[i-1] {\n\t\t\t\tdecreaseCount++\n\t\t\t}\n\t\t}\n\t\treturn
        decreaseCount\n\t}\n\n\tfunc SonarSweepSlidingSum(data []int) int {\n\t\tvar
        sums []int\n\t\tvar newSum int\n\t\tfor i := 0; i &lt; len(data)-2; i++ {\n\t\t\tnewSum
        = data[i] + data[i+1] + data[i+2]\n\t\t\tsums = append(sums, newSum)\n\t\t}\n\t\treturn
        SonarSweepNaive(sums)\n\t}", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        &lt;a href=\"https://github.com/krmaxwell/aoc2021/tree/master/day1\"&gt;trying
        in Go&lt;/a&gt; this year, just because I&amp;#39;m working on learning it.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        day1\n\nfunc SonarSweepNaive(data []int) int {\n    decreaseCount := 0\n    for
        i := 1; i &amp;lt; len(data); i++ {\n        if data[i] &amp;gt; data[i-1]
        {\n            decreaseCount++\n        }\n    }\n    return decreaseCount\n}\n\nfunc
        SonarSweepSlidingSum(data []int) int {\n    var sums []int\n    var newSum
        int\n    for i := 0; i &amp;lt; len(data)-2; i++ {\n        newSum = data[i]
        + data[i+1] + data[i+2]\n        sums = append(sums, newSum)\n    }\n    return
        SonarSweepNaive(sums)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuu8ya/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmuu8ya", "created": 1638398251.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmuvltl", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dmitris42", "can_mod_post": false, "created_utc":
        1638398806.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_7jhytvrc", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Rust - [https://github.com/dmitris/adventofcode-2021](https://github.com/dmitris/adventofcode-2021)\n\nIf
        you have any comments or suggestions, please let me know!", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Rust - &lt;a href=\"https://github.com/dmitris/adventofcode-2021\"&gt;https://github.com/dmitris/adventofcode-2021&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If
        you have any comments or suggestions, please let me know!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuvltl/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuvltl", "created":
        1638398806.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmv39kw", "id": "hmv39kw", "parent_id":
        "t1_hmuvltl", "depth": 1, "children": ["hmv39kw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638399836.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuwc2v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "flit777",
        "can_mod_post": false, "created_utc": 1638399104.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ssplf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I want to try Haskell this year. So my first Haskell program is this, i have
        no idea what i am doing, but the result seems to be right:\n\n    main = do\n        contents
        &lt;- readFile \"../../inputs/input_01.txt\" \n        let ints = map readInt
        . words $ contents \n        print $ part1 $ ints \n        print $ part2
        $ ints\n    \n    readInt :: String -&gt; Int \n    readInt = read\n    part1
        :: [Int] -&gt; Int \n    part1 l = sum $ map fromEnum ( zipWith (\\x y-&gt;
        x &gt; y) (tail l) (init l) )\n    part2 :: [Int] -&gt; Int \n    part2 l
        =  part1 $ map (\\(a,b,c) -&gt; a+b+c) $ zip3  (drop 2 l) (drop 1 l) (l)\n\nI
        first solved it in Python in a functional way in hope that it would be easier
        in Haskell later:\n\n    from pathlib import Path \n    from typing import
        List\n    \n    def parse_input(lines: List[str]) -&gt; List[int]: \n        return
        [int(i) for i in lines]\n    \n    def part_1(numbers: List[int]) -&gt; int:
        \n        return sum(cur &gt; prev for cur, prev in    zip(numbers[1:],numbers[:-1]))\n    \n    def
        part_2(numbers: List[int], window_size: int) -&gt; int: \n        return part_1([sum(x)
        for x in zip(*[numbers[i:] for i in range(window_size)])])\n    \n    def
        main(): \n        file = Path(__file__).parents[2] / \"inputs\" / \"input_01.txt\"
        \n        with file.open(''r'') as f: lines = f.read().splitlines() \n            numbers
        = parse_input(lines) \n        print(\"Part 1 :\", part_1(numbers)) \n        print(\"Part
        2 :\", part_2(numbers, window_size=3))\n    \n    if name == ''main'': \n        main()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I want to try Haskell
        this year. So my first Haskell program is this, i have no idea what i am doing,
        but the result seems to be right:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;main
        = do\n    contents &amp;lt;- readFile &amp;quot;../../inputs/input_01.txt&amp;quot;
        \n    let ints = map readInt . words $ contents \n    print $ part1 $ ints
        \n    print $ part2 $ ints\n\nreadInt :: String -&amp;gt; Int \nreadInt =
        read\npart1 :: [Int] -&amp;gt; Int \npart1 l = sum $ map fromEnum ( zipWith
        (\\x y-&amp;gt; x &amp;gt; y) (tail l) (init l) )\npart2 :: [Int] -&amp;gt;
        Int \npart2 l =  part1 $ map (\\(a,b,c) -&amp;gt; a+b+c) $ zip3  (drop 2 l)
        (drop 1 l) (l)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I first solved it in
        Python in a functional way in hope that it would be easier in Haskell later:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        pathlib import Path \nfrom typing import List\n\ndef parse_input(lines: List[str])
        -&amp;gt; List[int]: \n    return [int(i) for i in lines]\n\ndef part_1(numbers:
        List[int]) -&amp;gt; int: \n    return sum(cur &amp;gt; prev for cur, prev
        in    zip(numbers[1:],numbers[:-1]))\n\ndef part_2(numbers: List[int], window_size:
        int) -&amp;gt; int: \n    return part_1([sum(x) for x in zip(*[numbers[i:]
        for i in range(window_size)])])\n\ndef main(): \n    file = Path(__file__).parents[2]
        / &amp;quot;inputs&amp;quot; / &amp;quot;input_01.txt&amp;quot; \n    with
        file.open(&amp;#39;r&amp;#39;) as f: lines = f.read().splitlines() \n        numbers
        = parse_input(lines) \n    print(&amp;quot;Part 1 :&amp;quot;, part_1(numbers))
        \n    print(&amp;quot;Part 2 :&amp;quot;, part_2(numbers, window_size=3))\n\nif
        name == &amp;#39;main&amp;#39;: \n    main()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuwc2v/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuwc2v", "created":
        1638399104.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmv399n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hmuwc2v", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Nice.\n\nI also just found out that you don''t need to
        use sum for part 2 and I need to tell other people about it.", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmv399n", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice.&lt;/p&gt;\n\n&lt;p&gt;I
        also just found out that you don&amp;#39;t need to use sum for part 2 and
        I need to tell other people about it.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv399n/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638402223.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638402223.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638431006.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuwsn3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Yellosink",
        "can_mod_post": false, "created_utc": 1638399296.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_21g6habx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "F# (only part 1):\n\n[paste](https://topaz.github.io/paste/#XQAAAQDJAQAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nw1Pl5UsRr6sPk+C5AxLk26NqF8IakaNi7w4AcO1f2cf9Venc3/vuggwdiQzAv59c4+DZOKciLEtqLYd36sR/rZdGy8Jf6cLo7xrObkqKHXzUOW/TJXpgH+KbBVk/5esxrxHTzsw1EskVxZJqDoz/ZFpP8pW6eafzeuq9ALqsBUpBCBByHvyPktkpY1AUKgAwmgdr2lSk+zYb0WfNWj9M/MRPNsGikWEiUeGSb8MJKLeN+Nx5KuTv0zllZOS6V1Z8nIjNv40W3LrWiJ9oiN7FmnTOWUJwUzJIpjonu5xT6USzDq+eJ2eefL/GRdYjqhxrPXEA8T5ecr7M0R8luIkZk2/rBcl//icozw==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;F# (only part 1):&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDJAQAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nw1Pl5UsRr6sPk+C5AxLk26NqF8IakaNi7w4AcO1f2cf9Venc3/vuggwdiQzAv59c4+DZOKciLEtqLYd36sR/rZdGy8Jf6cLo7xrObkqKHXzUOW/TJXpgH+KbBVk/5esxrxHTzsw1EskVxZJqDoz/ZFpP8pW6eafzeuq9ALqsBUpBCBByHvyPktkpY1AUKgAwmgdr2lSk+zYb0WfNWj9M/MRPNsGikWEiUeGSb8MJKLeN+Nx5KuTv0zllZOS6V1Z8nIjNv40W3LrWiJ9oiN7FmnTOWUJwUzJIpjonu5xT6USzDq+eJ2eefL/GRdYjqhxrPXEA8T5ecr7M0R8luIkZk2/rBcl//icozw==\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuwsn3/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuwsn3", "created":
        1638399296.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv3759",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "b4ux1t3",
        "can_mod_post": false, "created_utc": 1638402197.0, "send_replies": true,
        "parent_id": "t1_hmuwsn3", "score": 2, "author_fullname": "t2_6bs49", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Yours is much more concise than [mine](https://gitlab.com/b4ux1t3/advent-of-code/-/blob/main/2021/DayOne/Program.fs).\n\nI''m
        pretty new to F#, is it common to make F# programs act more or less like Unix
        utilities? I''m assuming (based on my limited understanding of IO in F#) you''re
        accepting the list as stdin input in your `CommandLineArgs`?", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Yours is much more concise than &lt;a href=\"https://gitlab.com/b4ux1t3/advent-of-code/-/blob/main/2021/DayOne/Program.fs\"&gt;mine&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        pretty new to F#, is it common to make F# programs act more or less like Unix
        utilities? I&amp;#39;m assuming (based on my limited understanding of IO in
        F#) you&amp;#39;re accepting the list as stdin input in your &lt;code&gt;CommandLineArgs&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv3759/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv3759", "created":
        1638402197.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmve2b6", "id": "hmve2b6", "parent_id":
        "t1_hmv3759", "depth": 2, "children": ["hmve2b6", "hmv4lan"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638484025.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvoijm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638411472.0, "send_replies": true,
        "parent_id": "t1_hmuwsn3", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvoijm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvoijm", "created":
        1638411472.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuy2yb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "_Rocketeer",
        "can_mod_post": false, "created_utc": 1638399831.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_534fkmau", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in blender Geometry nodes (with some python for data input):
        \n\nPart 1:  \n[https://drive.google.com/file/d/1fHgK5usorq8c9Cn3VPfyhiPJt-\\_ZDRUZ/view?usp=sharing](https://drive.google.com/file/d/1fHgK5usorq8c9Cn3VPfyhiPJt-_ZDRUZ/view?usp=sharing)\n\nPart
        2:\n\nhttps://drive.google.com/file/d/1TAG6WGuRP5yw5s3gLZME2-sgEe6j-uN9/view?usp=sharing",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in blender
        Geometry nodes (with some python for data input): &lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;br/&gt;\n&lt;a href=\"https://drive.google.com/file/d/1fHgK5usorq8c9Cn3VPfyhiPJt-_ZDRUZ/view?usp=sharing\"&gt;https://drive.google.com/file/d/1fHgK5usorq8c9Cn3VPfyhiPJt-_ZDRUZ/view?usp=sharing&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://drive.google.com/file/d/1TAG6WGuRP5yw5s3gLZME2-sgEe6j-uN9/view?usp=sharing\"&gt;https://drive.google.com/file/d/1TAG6WGuRP5yw5s3gLZME2-sgEe6j-uN9/view?usp=sharing&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuy2yb/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuy2yb", "created":
        1638399831.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638429773.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuz7ba", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Python 3 [day 1](https://github.com/mahakaal/adventofcode/blob/main/2021/day1/day1.py)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmuz7ba",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3 &lt;a href=\"https://github.com/mahakaal/adventofcode/blob/main/2021/day1/day1.py\"&gt;day
        1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuz7ba/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638400346.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638400346.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638430269.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvogat", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638411446.0, "send_replies": true,
        "parent_id": "t1_hmuz7ba", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvogat/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvogat", "created":
        1638411446.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 1, "name": "t1_hmwmty6", "id": "hmwmty6",
        "parent_id": "t1_hmvogat", "depth": 2, "children": ["hmwmty6"]}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmv395f", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmv395f", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv395f/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638402222.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638402222.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv8j9d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "RoccoDeveloping",
        "can_mod_post": false, "created_utc": 1638404521.0, "send_replies": true,
        "parent_id": "t1_hmv395f", "score": 2, "author_fullname": "t2_1029qq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You can use the sum function on iterators, which is defined for all number
        types. https://doc.rust-lang.org/std/iter/trait.Sum.html", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;You can use the sum function on iterators,
        which is defined for all number types. &lt;a href=\"https://doc.rust-lang.org/std/iter/trait.Sum.html\"&gt;https://doc.rust-lang.org/std/iter/trait.Sum.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv8j9d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv8j9d", "created":
        1638404521.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmw4ej4", "id": "hmw4ej4", "parent_id":
        "t1_hmv8j9d", "depth": 2, "children": ["hmw4ej4"]}}, {"kind": "more", "data":
        {"count": 2, "name": "t1_hmvo81w", "id": "hmvo81w", "parent_id": "t1_hmv395f",
        "depth": 1, "children": ["hmvo81w"]}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_r66vow", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "hmv7e6n", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_r66vow", "score": 2, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_hmv7e6n", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv7e6n/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638404020.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638404020.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwhbrh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "b4ux1t3",
        "can_mod_post": false, "created_utc": 1638425958.0, "send_replies": true,
        "parent_id": "t1_hmv7e6n", "score": 2, "author_fullname": "t2_6bs49", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your links are broken, just fyi.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Your links are broken, just fyi.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwhbrh/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwhbrh", "created":
        1638425958.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hn03l51", "id": "hn03l51", "parent_id":
        "t1_hmwhbrh", "depth": 2, "children": ["hn03l51"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv8bqt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rad_to_the_core",
        "can_mod_post": false, "created_utc": 1638404428.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_11u84z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My C++ solution. Hopefully Compiler Explorer links are ok\n\nhttps://godbolt.org/z/Yr8bo8jzx",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My C++ solution. Hopefully
        Compiler Explorer links are ok&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://godbolt.org/z/Yr8bo8jzx\"&gt;https://godbolt.org/z/Yr8bo8jzx&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv8bqt/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv8bqt", "created":
        1638404428.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmva7zl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "simondrawer",
        "can_mod_post": false, "created_utc": 1638405262.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_q42tws", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\nhttps://topaz.github.io/paste/#XQAAAQDnAAAAAAAAAAAyGUj/T2CE9VryFO3f6zqhR2MJ6pUg2vRxxOF4yYs5bh4eZxBIqRAbAILiLAhLzZIHsfRwX1xfh4v2rWkMgyjoLshWIOOf6v1MI/0adI1vivuG+JaKC8xTmusqTNGmMaoa6geTWbsthnRBtZh8f//D+/AA",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDnAAAAAAAAAAAyGUj/T2CE9VryFO3f6zqhR2MJ6pUg2vRxxOF4yYs5bh4eZxBIqRAbAILiLAhLzZIHsfRwX1xfh4v2rWkMgyjoLshWIOOf6v1MI/0adI1vivuG+JaKC8xTmusqTNGmMaoa6geTWbsthnRBtZh8f//D+/AA\"&gt;https://topaz.github.io/paste/#XQAAAQDnAAAAAAAAAAAyGUj/T2CE9VryFO3f6zqhR2MJ6pUg2vRxxOF4yYs5bh4eZxBIqRAbAILiLAhLzZIHsfRwX1xfh4v2rWkMgyjoLshWIOOf6v1MI/0adI1vivuG+JaKC8xTmusqTNGmMaoa6geTWbsthnRBtZh8f//D+/AA&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmva7zl/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmva7zl", "created":
        1638405262.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmvsvph", "id": "hmvsvph", "parent_id":
        "t1_hmva7zl", "depth": 1, "children": ["hmvsvph"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638410208.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvae71", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "msschmitt",
        "can_mod_post": false, "created_utc": 1638405338.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_24yt3xjl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python (part 2)\n\nLast year I did all of the 2020 and 2019 puzzles in
        REXX. This year I was thinking I should learn Python, but put it off until
        it was too late. So be kind, this is my *first ever* Python script.\n\nEdit:
        eliminated an unnecessary variable\n\n    filename = ''input.txt'' \n    \n    with
        open(filename) as file:\n        input = file.read().splitlines()\n    \n    input_nbrs
        = list(map(int, input))\n    \n    increased = 0\n    \n    for i in range(3,
        len(input_nbrs)):\n        if input_nbrs[i] &gt; input_nbrs[i-3]:\n            increased
        += 1\n    \n    print increased", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Python (part 2)&lt;/h1&gt;\n\n&lt;p&gt;Last year
        I did all of the 2020 and 2019 puzzles in REXX. This year I was thinking I
        should learn Python, but put it off until it was too late. So be kind, this
        is my &lt;em&gt;first ever&lt;/em&gt; Python script.&lt;/p&gt;\n\n&lt;p&gt;Edit:
        eliminated an unnecessary variable&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;filename
        = &amp;#39;input.txt&amp;#39; \n\nwith open(filename) as file:\n    input
        = file.read().splitlines()\n\ninput_nbrs = list(map(int, input))\n\nincreased
        = 0\n\nfor i in range(3, len(input_nbrs)):\n    if input_nbrs[i] &amp;gt;
        input_nbrs[i-3]:\n        increased += 1\n\nprint increased\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvae71/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvae71", "created":
        1638405338.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmvdrvr", "id": "hmvdrvr", "parent_id":
        "t1_hmvae71", "depth": 1, "children": ["hmvdrvr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638406785.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvcmtf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thesumonster",
        "can_mod_post": false, "created_utc": 1638406320.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_8f0kadu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python solutions but i dont know how to code properly \n\n```\nfile = open(\"in.txt\",
        \"r\")\n\nlns = file.readlines()\n\ndef p1():\n    count = 0\n    for i in
        range(1, len(lns)):\n        if int(lns[i]) &gt;= int(lns[i-1]):\n            count
        += 1\n    return count\n\ndef p2():\n    count = 0\n    sets = []\n    for
        i in range(len(lns)):\n        if i + 3 &gt; len(lns):\n            continue\n        temp
        = [None] * 3\n        temp[0] = lns[i]\n        temp[1] = lns[i+1]\n        temp[2]
        = lns[i+2]\n        if len(sets) == 0:\n            index = 0\n        else:\n            index
        = len(sets) + 1\n        sets.append(temp)\n        \n    for i in range(1,
        len(sets)):\n        set1 = sets[i]\n        set2 = sets[i-1]\n        sum1
        = int(set1[0]) + int(set1[1]) + int(set1[2])\n        sum2 = int(set2[0])
        + int(set2[1]) + int(set2[2])\n        if sum1 &gt; sum2:\n            count
        += 1\n    \n    return count\n\nprint(f\"part 1: {p1()}\")\nprint(f\"part
        2: {p2()}\")\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        solutions but i dont know how to code properly &lt;/p&gt;\n\n&lt;p&gt;```\nfile
        = open(&amp;quot;in.txt&amp;quot;, &amp;quot;r&amp;quot;)&lt;/p&gt;\n\n&lt;p&gt;lns
        = file.readlines()&lt;/p&gt;\n\n&lt;p&gt;def p1():\n    count = 0\n    for
        i in range(1, len(lns)):\n        if int(lns[i]) &amp;gt;= int(lns[i-1]):\n            count
        += 1\n    return count&lt;/p&gt;\n\n&lt;p&gt;def p2():\n    count = 0\n    sets
        = []\n    for i in range(len(lns)):\n        if i + 3 &amp;gt; len(lns):\n            continue\n        temp
        = [None] * 3\n        temp[0] = lns[i]\n        temp[1] = lns[i+1]\n        temp[2]
        = lns[i+2]\n        if len(sets) == 0:\n            index = 0\n        else:\n            index
        = len(sets) + 1\n        sets.append(temp)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for
        i in range(1, len(sets)):\n    set1 = sets[i]\n    set2 = sets[i-1]\n    sum1
        = int(set1[0]) + int(set1[1]) + int(set1[2])\n    sum2 = int(set2[0]) + int(set2[1])
        + int(set2[2])\n    if sum1 &amp;gt; sum2:\n        count += 1\n\nreturn count\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;print(f&amp;quot;part
        1: {p1()}&amp;quot;)\nprint(f&amp;quot;part 2: {p2()}&amp;quot;)\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvcmtf/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvcmtf", "created":
        1638406320.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmvlixy", "id": "hmvlixy", "parent_id":
        "t1_hmvcmtf", "depth": 1, "children": ["hmvlixy", "hmvnf3g"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638407412.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmve44r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Drjakeadelic",
        "can_mod_post": false, "created_utc": 1638406969.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_lvrjh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python. Solutions computed with NumPy. Also on my GitHub [here](https://github.com/jtcass01/AdventOfCode2021/blob/main/Day%201/solution.py)\n\n    \"\"\"solution.py:
        Solution to Day 1 Advent of Code 2021\"\"\"\n    \n    from typing import
        List \n    from numpy import array, diff, count_nonzero, convolve, ones \n    from
        os.path import dirname, join, isfile \n    from unittest import TestCase,
        main\n    \n    def read_input_file(input_file_path: str) -&gt; array: \n        \"\"\"[summary]
        \n    \n        Args: \n            input_file_path (str): [description] \n        Returns:
        \n            List[int]: [description]\"\"\" \n        assert isfile(input_file_path),
        f\"File not found: {input_file_path}\"\n    \n        with open(input_file_path)
        as input_file:\n            file_lines: List[str] = input_file.readlines()\n            return
        array([int(file_line) for file_line in file_lines])\n    \n    def count_depth_measurement_increases(input_file_path:
        str) -&gt; int: \n        \"\"\"[summary] \n    \n        Args: \n            input_file_path
        (str): [description] \n    \n        Returns: \n            int: [description]\"\"\"
        \n        file_data: array = read_input_file(input_file_path=input_file_path)
        \n        diff_file_data: array = diff(file_data) \n        return count_nonzero(diff_file_data
        &gt; 0)\n    \n    def count_sliding_window_depth_measurement_increases(input_file_path:
        str, sliding_window_size: int = 3) -&gt; int: \n        \"\"\"[summary] \n    \n        Args:
        \n            input_file_path (str): [description] \n            sliding_window_size
        (int, optional): [description]. Defaults to 3. \n    \n        Returns: \n            int:
        [description]\"\"\" \n        file_data: array = read_input_file(input_file_path=input_file_path)
        \n        sliding_sum: array = convolve(file_data, ones(sliding_window_size,
        dtype=int), mode=''valid'') \n        diff_file_data: array = diff(sliding_sum)
        \n        return count_nonzero(diff_file_data &gt; 0)\n    \n    class Examples(TestCase):
        \n        def test_part_one_example(self) -&gt; None: \n            print(f\"\\nPerforming
        unittest: {Examples.test_part_one_example}\")\n            example_depth_measurement_increase_count:
        int = count_depth_measurement_increases(input_file_path=join(dirname(__file__),
        \"example.txt\"))\n            self.assertEqual(7, example_depth_measurement_increase_count)\n    \n            print(f\"Unittest
        {Examples.test_part_one_example} was successful.\")\n    \n        def test_part_two_example(self)
        -&gt; None:\n            print(f\"\\nPerforming unittest: {Examples.test_part_two_example}\")\n    \n            example_depth_measurement_increase_count:
        int = count_sliding_window_depth_measurement_increases(input_file_path=join(dirname(__file__),
        \"example.txt\"))\n            self.assertEqual(5, example_depth_measurement_increase_count)\n    \n            print(f\"Unittest
        {Examples.test_part_two_example} was successful.\")\n    \n    class Solutions(TestCase):
        \n        def test_part_one(self) -&gt; None: \n            print(f\"\\nCalculating
        solution to {Solutions.test_part_one}\")\n            depth_measurement_increase_count:
        int = count_depth_measurement_increases(input_file_path=join(dirname(__file__),
        \"input.txt\"))\n    \n            print(f\"Part one solution calculated to
        be: {depth_measurement_increase_count}.\")\n    \n        def test_part_two(self)
        -&gt; None:\n            print(f\"\\nCalculating solution to {Solutions.test_part_two}\")\n    \n            depth_measurement_increase_count:
        int = count_sliding_window_depth_measurement_increases(input_file_path=join(dirname(__file__),
        \"input.txt\"))\n    \n            print(f\"Part two solution calculated to
        be: {depth_measurement_increase_count}.\")\n    \n    if __name__ == \"__main__\":
        \n        main()", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python.
        Solutions computed with NumPy. Also on my GitHub &lt;a href=\"https://github.com/jtcass01/AdventOfCode2021/blob/main/Day%201/solution.py\"&gt;here&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;solution.py:
        Solution to Day 1 Advent of Code 2021&amp;quot;&amp;quot;&amp;quot;\n\nfrom
        typing import List \nfrom numpy import array, diff, count_nonzero, convolve,
        ones \nfrom os.path import dirname, join, isfile \nfrom unittest import TestCase,
        main\n\ndef read_input_file(input_file_path: str) -&amp;gt; array: \n    &amp;quot;&amp;quot;&amp;quot;[summary]
        \n\n    Args: \n        input_file_path (str): [description] \n    Returns:
        \n        List[int]: [description]&amp;quot;&amp;quot;&amp;quot; \n    assert
        isfile(input_file_path), f&amp;quot;File not found: {input_file_path}&amp;quot;\n\n    with
        open(input_file_path) as input_file:\n        file_lines: List[str] = input_file.readlines()\n        return
        array([int(file_line) for file_line in file_lines])\n\ndef count_depth_measurement_increases(input_file_path:
        str) -&amp;gt; int: \n    &amp;quot;&amp;quot;&amp;quot;[summary] \n\n    Args:
        \n        input_file_path (str): [description] \n\n    Returns: \n        int:
        [description]&amp;quot;&amp;quot;&amp;quot; \n    file_data: array = read_input_file(input_file_path=input_file_path)
        \n    diff_file_data: array = diff(file_data) \n    return count_nonzero(diff_file_data
        &amp;gt; 0)\n\ndef count_sliding_window_depth_measurement_increases(input_file_path:
        str, sliding_window_size: int = 3) -&amp;gt; int: \n    &amp;quot;&amp;quot;&amp;quot;[summary]
        \n\n    Args: \n        input_file_path (str): [description] \n        sliding_window_size
        (int, optional): [description]. Defaults to 3. \n\n    Returns: \n        int:
        [description]&amp;quot;&amp;quot;&amp;quot; \n    file_data: array = read_input_file(input_file_path=input_file_path)
        \n    sliding_sum: array = convolve(file_data, ones(sliding_window_size, dtype=int),
        mode=&amp;#39;valid&amp;#39;) \n    diff_file_data: array = diff(sliding_sum)
        \n    return count_nonzero(diff_file_data &amp;gt; 0)\n\nclass Examples(TestCase):
        \n    def test_part_one_example(self) -&amp;gt; None: \n        print(f&amp;quot;\\nPerforming
        unittest: {Examples.test_part_one_example}&amp;quot;)\n        example_depth_measurement_increase_count:
        int = count_depth_measurement_increases(input_file_path=join(dirname(__file__),
        &amp;quot;example.txt&amp;quot;))\n        self.assertEqual(7, example_depth_measurement_increase_count)\n\n        print(f&amp;quot;Unittest
        {Examples.test_part_one_example} was successful.&amp;quot;)\n\n    def test_part_two_example(self)
        -&amp;gt; None:\n        print(f&amp;quot;\\nPerforming unittest: {Examples.test_part_two_example}&amp;quot;)\n\n        example_depth_measurement_increase_count:
        int = count_sliding_window_depth_measurement_increases(input_file_path=join(dirname(__file__),
        &amp;quot;example.txt&amp;quot;))\n        self.assertEqual(5, example_depth_measurement_increase_count)\n\n        print(f&amp;quot;Unittest
        {Examples.test_part_two_example} was successful.&amp;quot;)\n\nclass Solutions(TestCase):
        \n    def test_part_one(self) -&amp;gt; None: \n        print(f&amp;quot;\\nCalculating
        solution to {Solutions.test_part_one}&amp;quot;)\n        depth_measurement_increase_count:
        int = count_depth_measurement_increases(input_file_path=join(dirname(__file__),
        &amp;quot;input.txt&amp;quot;))\n\n        print(f&amp;quot;Part one solution
        calculated to be: {depth_measurement_increase_count}.&amp;quot;)\n\n    def
        test_part_two(self) -&amp;gt; None:\n        print(f&amp;quot;\\nCalculating
        solution to {Solutions.test_part_two}&amp;quot;)\n\n        depth_measurement_increase_count:
        int = count_sliding_window_depth_measurement_increases(input_file_path=join(dirname(__file__),
        &amp;quot;input.txt&amp;quot;))\n\n        print(f&amp;quot;Part two solution
        calculated to be: {depth_measurement_increase_count}.&amp;quot;)\n\nif __name__
        == &amp;quot;__main__&amp;quot;: \n    main()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmve44r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmve44r", "created":
        1638406969.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmveoia",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hortonhearsadan",
        "can_mod_post": false, "created_utc": 1638407215.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4grjfxj9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust\n\n    use helper::{get_input_as_int, print_part_1, print_part_2};\n    \n    const
        FILENAME: &amp;str = env!(\"CARGO_PKG_NAME\");\n\n    pub fn main() {\n    let
        inputs = get_input_as_int(FILENAME);\n\n    let count_1 = count_increases(&amp;inputs,
        1);\n    let count_2 = count_increases(&amp;inputs, 3);\n\n    print_part_1(count_1);\n    print_part_2(count_2);\n    }\n    \n    fn
        count_increases(depths: &amp;[i32], step: usize) -&gt; usize { \n    depths.windows(step
        + 1).filter(|w| w.first() &lt; w.last()).count() \n    }\n\n&amp;#x200B;\n\nLooking
        at the other solutions in the thread some people seemed to miss (or maybe
        not care due to how quick it is to solve ) that for part 2 when you need to
        check if A+B+C &lt; B+C+D that you can just check A &lt; D . So I just compare
        the first and last element of a window slice of n+1 length", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        helper::{get_input_as_int, print_part_1, print_part_2};\n\nconst FILENAME:
        &amp;amp;str = env!(&amp;quot;CARGO_PKG_NAME&amp;quot;);\n\npub fn main()
        {\nlet inputs = get_input_as_int(FILENAME);\n\nlet count_1 = count_increases(&amp;amp;inputs,
        1);\nlet count_2 = count_increases(&amp;amp;inputs, 3);\n\nprint_part_1(count_1);\nprint_part_2(count_2);\n}\n\nfn
        count_increases(depths: &amp;amp;[i32], step: usize) -&amp;gt; usize { \ndepths.windows(step
        + 1).filter(|w| w.first() &amp;lt; w.last()).count() \n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Looking
        at the other solutions in the thread some people seemed to miss (or maybe
        not care due to how quick it is to solve ) that for part 2 when you need to
        check if A+B+C &amp;lt; B+C+D that you can just check A &amp;lt; D . So I
        just compare the first and last element of a window slice of n+1 length&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmveoia/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmveoia", "created":
        1638407215.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638411599.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvg97r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "seaborgiumaggghhh",
        "can_mod_post": false, "created_utc": 1638407897.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_4mww5jxy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 1 in Racket: I''m dumb and can''t figure out the markdown, and also this
        is a fairly imperative solution in Racket, although it is recursive \n\n    (define
        (find-increasing lines)\n      (define (loop lines prev inc-count)\n        (if
        (and (list? lines) (not (empty? lines)))\n            (let ([num (car lines)])\n              (if\n                (&lt;
        prev num) \n                (loop (cdr lines) num (add1 inc-count))\n                (loop
        (cdr lines) num inc-count)))\n            inc-count))\n      (loop (cdr lines)
        (car lines) 0))\n\n    (define (process-for-part-two lines)\n      (define
        (loop l acc-list)\n        (if (&gt;= (length l) 3)\n            (loop (cdr
        l) (append acc-list (list (apply + (take l 3)))))\n            acc-list))\n      (loop
        lines ''()))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day
        1 in Racket: I&amp;#39;m dumb and can&amp;#39;t figure out the markdown, and
        also this is a fairly imperative solution in Racket, although it is recursive
        &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(define (find-increasing lines)\n  (define
        (loop lines prev inc-count)\n    (if (and (list? lines) (not (empty? lines)))\n        (let
        ([num (car lines)])\n          (if\n            (&amp;lt; prev num) \n            (loop
        (cdr lines) num (add1 inc-count))\n            (loop (cdr lines) num inc-count)))\n        inc-count))\n  (loop
        (cdr lines) (car lines) 0))\n\n(define (process-for-part-two lines)\n  (define
        (loop l acc-list)\n    (if (&amp;gt;= (length l) 3)\n        (loop (cdr l)
        (append acc-list (list (apply + (take l 3)))))\n        acc-list))\n  (loop
        lines &amp;#39;()))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvg97r/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmvg97r", "created": 1638407897.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_hmvnasi", "id": "hmvnasi", "parent_id": "t1_hmvg97r", "depth": 1, "children":
        ["hmvnasi"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638409712.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvjxdh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Bit_Mike",
        "can_mod_post": false, "created_utc": 1638409494.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ker1n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "R Language\n\nhttps://github.com/MichalLauer/Advent-of-Code-2021/blob/master/day01/day01.R",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;R Language&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/MichalLauer/Advent-of-Code-2021/blob/master/day01/day01.R\"&gt;https://github.com/MichalLauer/Advent-of-Code-2021/blob/master/day01/day01.R&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvjxdh/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvjxdh", "created":
        1638409494.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvo3y7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "HavvicGames",
        "can_mod_post": false, "created_utc": 1638411298.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_dwscc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I was initially going to do these in Python (and I still am) but someone
        in Discord got me to give Wren (https://wren.io/) a try. Here''s my solution
        for both parts:\n\n    import \"io\" for File\n    \n    var load_data = Fn.new
        {|path|\n        return File.read(path).trim().split(\"\\n\").map{|n| Num.fromString(n)}.toList\n    }\n    \n    var
        count_depth_increases = Fn.new {|d, s|\n        return (s...d.count).where{|i|
        d[i-s] &lt; d[i]}.count\n    }\n    \n    var data = load_data.call(\"../Data/1\")\n    System.print(count_depth_increases.call(data,
        1))\n    System.print(count_depth_increases.call(data, 3))", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I was initially going to do these in Python
        (and I still am) but someone in Discord got me to give Wren (&lt;a href=\"https://wren.io/\"&gt;https://wren.io/&lt;/a&gt;)
        a try. Here&amp;#39;s my solution for both parts:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        &amp;quot;io&amp;quot; for File\n\nvar load_data = Fn.new {|path|\n    return
        File.read(path).trim().split(&amp;quot;\\n&amp;quot;).map{|n| Num.fromString(n)}.toList\n}\n\nvar
        count_depth_increases = Fn.new {|d, s|\n    return (s...d.count).where{|i|
        d[i-s] &amp;lt; d[i]}.count\n}\n\nvar data = load_data.call(&amp;quot;../Data/1&amp;quot;)\nSystem.print(count_depth_increases.call(data,
        1))\nSystem.print(count_depth_increases.call(data, 3))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvo3y7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvo3y7", "created":
        1638411298.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvoa64",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ScaredDonuts",
        "can_mod_post": false, "created_utc": 1638411372.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5klt00jh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "PHP Day 1:\n\nPart 1 &amp; 2\n\nhttps://github.com/ScaredDonut/Advent-Of-Code-2021/tree/main/Day%201",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP Day 1:&lt;/p&gt;\n\n&lt;p&gt;Part
        1 &amp;amp; 2&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ScaredDonut/Advent-Of-Code-2021/tree/main/Day%201\"&gt;https://github.com/ScaredDonut/Advent-Of-Code-2021/tree/main/Day%201&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvoa64/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvoa64", "created":
        1638411372.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvp1xr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "NickP0tato",
        "can_mod_post": false, "created_utc": 1638411701.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_93uf5nif", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Yo, made on AHK V2:\n\n    TotalNumbers1 := FileRead(\"input1_part1.txt\",
        \"`n\") \n    TotalNumbers2 := FileRead(\"input1_part2.txt\", \"`n\") \n    \n    part1(TotalNumbers1)\n    part2(TotalNumbers2)\n\n    part1(Param)
        {\n    \tArr := StrSplit(Param, \"`n\")\n    \tNumIncreaseCount := 0\n    \tNumSaveVar
        := 0\n    \tfor val in Arr {\n    \t\tif A_Index != 1 {\n    \t\t\tif val
        &gt; NumSaveVar\n    \t\t\t\tNumIncreaseCount += 1 \n    \t\t}\n    \t\tNumSaveVar
        := val\n    \t}\n    \tMsgBox(\"Part 1 answer:`n\" . NumIncreaseCount)\n    }\n    \n    part2(Param)
        {\n\t    Arr := StrSplit(Param, \"`n\")\n\t    NumIncreaseCount := 0\n\t    PreviousNumVar
        := 0\n\t    CurrentNumVar := 0\n\t    \n\t    for key, val in Arr {\n    \t\tif
        A_Index != 1 {\n    \t\t\tif A_Index = Arr.length\n    \t\t\t\tbreak\n    \t\t\tCurrentNumVar
        := Arr[key-1] + Arr[key] + Arr[key+1]\n    \t\t\tif CurrentNumVar &gt; PreviousNumVar\n    \t\t\t\tNumIncreaseCount
        += 1 \n    \t\t\tPreviousNumVar := CurrentNumVar\n    \t\t}\n    \t}\n    \tNumIncreaseCount
        -= 1\n    \tMsgBox(\"Part 2 answer:`n\" . NumIncreaseCount)\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Yo, made on AHK V2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;TotalNumbers1
        := FileRead(&amp;quot;input1_part1.txt&amp;quot;, &amp;quot;`n&amp;quot;)
        \nTotalNumbers2 := FileRead(&amp;quot;input1_part2.txt&amp;quot;, &amp;quot;`n&amp;quot;)
        \n\npart1(TotalNumbers1)\npart2(TotalNumbers2)\n\npart1(Param) {\n    Arr
        := StrSplit(Param, &amp;quot;`n&amp;quot;)\n    NumIncreaseCount := 0\n    NumSaveVar
        := 0\n    for val in Arr {\n        if A_Index != 1 {\n            if val
        &amp;gt; NumSaveVar\n                NumIncreaseCount += 1 \n        }\n        NumSaveVar
        := val\n    }\n    MsgBox(&amp;quot;Part 1 answer:`n&amp;quot; . NumIncreaseCount)\n}\n\npart2(Param)
        {\n    Arr := StrSplit(Param, &amp;quot;`n&amp;quot;)\n    NumIncreaseCount
        := 0\n    PreviousNumVar := 0\n    CurrentNumVar := 0\n\n    for key, val
        in Arr {\n        if A_Index != 1 {\n            if A_Index = Arr.length\n                break\n            CurrentNumVar
        := Arr[key-1] + Arr[key] + Arr[key+1]\n            if CurrentNumVar &amp;gt;
        PreviousNumVar\n                NumIncreaseCount += 1 \n            PreviousNumVar
        := CurrentNumVar\n        }\n    }\n    NumIncreaseCount -= 1\n    MsgBox(&amp;quot;Part
        2 answer:`n&amp;quot; . NumIncreaseCount)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvp1xr/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvp1xr", "created":
        1638411701.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638497657.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvq4sq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "khrisparrales",
        "can_mod_post": false, "created_utc": 1638412174.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_196jaugg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "                    JavaScript js Day 1\n    //crear una funcion y leer datos
        de un txt y guardarlos en un array\n    var datos = [];\n    var fs = require(\"fs\");\n    var
        data = fs.readFileSync(\"input.txt\", \"utf8\");\n    data = data.trim();\n    datos
        = data.split(/\\n/);\n    //convertir los datos a Numero\n     for (let i
        = 0; i &lt; datos.length; i++) {\n        let num = datos[i];\n        num
        = Number(num);\n        datos[i] = num;\n      }\n     //funcion del dia parte
        1\n       function Day1part1(input) {\n    //contador\n      var increased
        = 0;\n      //recorrer el array de datos y incrementar el contador si el numero
        \n       es mayor que el anterior\n       for (var i = 1; i &lt; input.length;
        i++) {\n            if (input[i] &gt; input[i - 1]) {\n                increased++;\n            }\n        }\n        return
        increased;\n      }\n      console.log(Day1part1(datos));\n     // funcion
        del dia parte  2\n      function Day1part2(input) {\n     // sumar los 3 primeros
        numeros del array \n       var resultado = [];\n      var Sweep = input;\n     var
        suma = 0;\n     for (let i = 0; i &lt; input.length; i++) {\n          if
        (Sweep.length &gt;= 3) {\n         suma = Sweep[0] + Sweep[1] + Sweep[2];\n         Sweep
        = Sweep.slice(1, Sweep.length);\n        resultado.push(suma);\n            }\n       }\n     return
        resultado;\n       }\n        var datos2 = Day1part2(datos);\n        console.log(Day1part1(datos2));",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;                JavaScript
        js Day 1\n//crear una funcion y leer datos de un txt y guardarlos en un array\nvar
        datos = [];\nvar fs = require(&amp;quot;fs&amp;quot;);\nvar data = fs.readFileSync(&amp;quot;input.txt&amp;quot;,
        &amp;quot;utf8&amp;quot;);\ndata = data.trim();\ndatos = data.split(/\\n/);\n//convertir
        los datos a Numero\n for (let i = 0; i &amp;lt; datos.length; i++) {\n    let
        num = datos[i];\n    num = Number(num);\n    datos[i] = num;\n  }\n //funcion
        del dia parte 1\n   function Day1part1(input) {\n//contador\n  var increased
        = 0;\n  //recorrer el array de datos y incrementar el contador si el numero
        \n   es mayor que el anterior\n   for (var i = 1; i &amp;lt; input.length;
        i++) {\n        if (input[i] &amp;gt; input[i - 1]) {\n            increased++;\n        }\n    }\n    return
        increased;\n  }\n  console.log(Day1part1(datos));\n // funcion del dia parte  2\n  function
        Day1part2(input) {\n // sumar los 3 primeros numeros del array \n   var resultado
        = [];\n  var Sweep = input;\n var suma = 0;\n for (let i = 0; i &amp;lt; input.length;
        i++) {\n      if (Sweep.length &amp;gt;= 3) {\n     suma = Sweep[0] + Sweep[1]
        + Sweep[2];\n     Sweep = Sweep.slice(1, Sweep.length);\n    resultado.push(suma);\n        }\n   }\n
        return resultado;\n   }\n    var datos2 = Day1part2(datos);\n    console.log(Day1part1(datos2));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvq4sq/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvq4sq", "created":
        1638412174.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmvy541", "id": "hmvy541", "parent_id":
        "t1_hmvq4sq", "depth": 1, "children": ["hmvy541"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvszqc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ThePituLegend",
        "can_mod_post": false, "created_utc": 1638413401.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_16y4sj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m gonna drop my two cents here (Solutions with Python).\n\n[https://github.com/ThePituLegend/advent-of-code-2021/tree/main/day1](https://github.com/ThePituLegend/advent-of-code-2021/tree/main/day1)  \n\n\nNot
        the prettiest, but good enough :D", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I&amp;#39;m gonna drop my two cents here (Solutions
        with Python).&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ThePituLegend/advent-of-code-2021/tree/main/day1\"&gt;https://github.com/ThePituLegend/advent-of-code-2021/tree/main/day1&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;Not
        the prettiest, but good enough :D&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvszqc/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmvszqc", "created": 1638413401.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmvttxb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ibiza_rupunzel", "can_mod_post": false,
        "created_utc": 1638413756.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 2, "author_fullname": "t2_7brnva1d", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Java solution:\n\n[https://github.com/justme789/Advent\\_of\\_Code\\_2021\\_Solutions\\_Java](https://github.com/justme789/Advent_of_Code_2021_Solutions_Java)\n\nI''m
        just doing the most basic rudimentary solutions so no fancy lambdas or anything",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java solution:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/justme789/Advent_of_Code_2021_Solutions_Java\"&gt;https://github.com/justme789/Advent_of_Code_2021_Solutions_Java&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        just doing the most basic rudimentary solutions so no fancy lambdas or anything&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvttxb/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvttxb", "created":
        1638413756.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638540645.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvu8v1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "FerasDA",
        "can_mod_post": false, "created_utc": 1638413933.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_f0fzq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript \n\n    // Part 1\n    const fs = require(\"fs\");\n    \n    const
        numbers = fs\n      .readFileSync(\"./input.txt\")\n      .toString()\n      .split(\"\\n\")\n      .map((x)
        =&gt; parseInt(x));\n    \n    let totalDepthIncreases = 0;\n    \n    for
        (var i = 0; i &lt; numbers.length; i++) {\n      const difference = numbers[i
        + 1] - numbers[i];\n      if (difference &gt; 0) totalDepthIncreases++;\n    }\n    \n    console.log(\"total
        depth increases: \", totalDepthIncreases);\n    \n    // Part 2\n    let totalSumIncreases
        = 0;\n    for (var i = 0; i &lt; numbers.length; i++) {\n      const a = numbers[i]
        + numbers[i + 1] + numbers[i + 2];\n      const b = numbers[i + 1] + numbers[i
        + 2] + numbers[i + 3];\n    \n      if (b - a &gt; 0) totalSumIncreases++;\n    }\n    console.log(\"total
        sum increases: \", totalSumIncreases);", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Javascript &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        Part 1\nconst fs = require(&amp;quot;fs&amp;quot;);\n\nconst numbers = fs\n  .readFileSync(&amp;quot;./input.txt&amp;quot;)\n  .toString()\n  .split(&amp;quot;\\n&amp;quot;)\n  .map((x)
        =&amp;gt; parseInt(x));\n\nlet totalDepthIncreases = 0;\n\nfor (var i = 0;
        i &amp;lt; numbers.length; i++) {\n  const difference = numbers[i + 1] - numbers[i];\n  if
        (difference &amp;gt; 0) totalDepthIncreases++;\n}\n\nconsole.log(&amp;quot;total
        depth increases: &amp;quot;, totalDepthIncreases);\n\n// Part 2\nlet totalSumIncreases
        = 0;\nfor (var i = 0; i &amp;lt; numbers.length; i++) {\n  const a = numbers[i]
        + numbers[i + 1] + numbers[i + 2];\n  const b = numbers[i + 1] + numbers[i
        + 2] + numbers[i + 3];\n\n  if (b - a &amp;gt; 0) totalSumIncreases++;\n}\nconsole.log(&amp;quot;total
        sum increases: &amp;quot;, totalSumIncreases);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvu8v1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvu8v1", "created":
        1638413933.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_hmvw6jt", "id": "hmvw6jt", "parent_id":
        "t1_hmvu8v1", "depth": 1, "children": ["hmvw6jt"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvwtzm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "homestar92",
        "can_mod_post": false, "created_utc": 1638415070.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ahp5o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I decided to do the first challenge on an unexpanded VIC-20. It certainly
        didn''t execute in 10 seconds or less, but it did work and get me the right
        result. I loaded the input into a PETSCII file and in order to get around
        the 3.5K RAM limitation, I had to load it from disk one line at a time.\nhttps://imgur.com/a/8f4DeKM",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I decided to do the
        first challenge on an unexpanded VIC-20. It certainly didn&amp;#39;t execute
        in 10 seconds or less, but it did work and get me the right result. I loaded
        the input into a PETSCII file and in order to get around the 3.5K RAM limitation,
        I had to load it from disk one line at a time.\n&lt;a href=\"https://imgur.com/a/8f4DeKM\"&gt;https://imgur.com/a/8f4DeKM&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvwtzm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvwtzm", "created":
        1638415070.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvwuer",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TechM3rlin",
        "can_mod_post": false, "created_utc": 1638415075.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_39isvg9g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Node.js\n\n    const fs = require(''fs''), filename=\"input.txt\";\n    var
        lines = fs.readFileSync(filename).toString(''utf-8'').split(\"\\n\");\n    var
        a=b=c=d=e=f=g=oldT=newT=0;\n    for(var i=0;i&lt;lines.length;i++){\n        part1(parseInt(lines[i]));\n        part2(parseInt(lines[i]));\n    }\n    function
        part1(num){ //calculate part 1 result\n        a=b;b=num;\n        if(b&gt;a){c++};return;\n    }\n    \n    function
        part2(num){ //calculate part 2 result\n        d=e;e=f;f=num;\n        if(d==0
        || e==0 || f==0){return}else{\n            oldT=newT;newT=d+e+f;\n            if(newT&gt;oldT){g++};\n        }\n    }\n    console.log(c-1);//-1
        because first iteration doesn''t count since there is no previous value (0)\n    console.log(g-1);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Node.js&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        fs = require(&amp;#39;fs&amp;#39;), filename=&amp;quot;input.txt&amp;quot;;\nvar
        lines = fs.readFileSync(filename).toString(&amp;#39;utf-8&amp;#39;).split(&amp;quot;\\n&amp;quot;);\nvar
        a=b=c=d=e=f=g=oldT=newT=0;\nfor(var i=0;i&amp;lt;lines.length;i++){\n    part1(parseInt(lines[i]));\n    part2(parseInt(lines[i]));\n}\nfunction
        part1(num){ //calculate part 1 result\n    a=b;b=num;\n    if(b&amp;gt;a){c++};return;\n}\n\nfunction
        part2(num){ //calculate part 2 result\n    d=e;e=f;f=num;\n    if(d==0 ||
        e==0 || f==0){return}else{\n        oldT=newT;newT=d+e+f;\n        if(newT&amp;gt;oldT){g++};\n    }\n}\nconsole.log(c-1);//-1
        because first iteration doesn&amp;#39;t count since there is no previous value
        (0)\nconsole.log(g-1);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvwuer/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmvwuer", "created": 1638415075.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmvxl2c", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "nsrr", "can_mod_post": false, "created_utc":
        1638415407.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_8g3oj", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Elixir  \nA bit long because
        I''m still learning, but that was FUN!  \n[https://github.com/avatus/advent\\_of\\_code/blob/master/2021/sonar\\_sweep/lib/sonar\\_sweep.ex](https://github.com/avatus/advent_of_code/blob/master/2021/sonar_sweep/lib/sonar_sweep.ex)  \n\n\nafter
        looking through the other answers there are lots of standard library tricks
        I can use next time", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elixir&lt;br/&gt;\nA
        bit long because I&amp;#39;m still learning, but that was FUN!&lt;br/&gt;\n&lt;a
        href=\"https://github.com/avatus/advent_of_code/blob/master/2021/sonar_sweep/lib/sonar_sweep.ex\"&gt;https://github.com/avatus/advent_of_code/blob/master/2021/sonar_sweep/lib/sonar_sweep.ex&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;after
        looking through the other answers there are lots of standard library tricks
        I can use next time&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": true,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvxl2c/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvxl2c", "created":
        1638415407.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvyzz7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "manitobathunder",
        "can_mod_post": false, "created_utc": 1638416061.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_13li2hzr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin\n\nWanted to start learning. Just a couple weeks in.\n\n[github](https://github.com/manitobathunder/AdventOfCode2021/blob/master/src/main/kotlin/Day%201/Day%201.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin&lt;/p&gt;\n\n&lt;p&gt;Wanted
        to start learning. Just a couple weeks in.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/manitobathunder/AdventOfCode2021/blob/master/src/main/kotlin/Day%201/Day%201.kt\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvyzz7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvyzz7", "created":
        1638416061.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_hmwsch3", "id": "hmwsch3", "parent_id":
        "t1_hmvyzz7", "depth": 1, "children": ["hmwsch3", "hmw1tc1"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmw42an", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmw42an", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw42an/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638418490.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638418490.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmw6eui", "id": "hmw6eui", "parent_id":
        "t1_hmw42an", "depth": 1, "children": ["hmw6eui", "hmwedh0"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw4ek2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lazerbullet",
        "can_mod_post": false, "created_utc": 1638418664.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_3qp97", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hey guys. Quite new to python. Anyway, I found this not too hard, which I
        was glad about :)\n\n\n\n```\nsubInput = []\nf = open(r\"C:\\Users\\lazer\\Documents\\Python
        Scripts\\Advent 2021\\input.txt\")\nfor x in f:\n  subInput.append(x)\n \n\nfor
        i in range(len(subInput)):\n    subInput[i]=subInput[i].replace(''\\n'','''')\n    \nsubInput
        = map(int, subInput)\nprint(subInput)\nsubInput = list(subInput)\n\n#print(subInput)\n\ndef
        increaseCount(subInput):\n    increases = 0\n    \n    for i in range(len(subInput)):\n        if
        subInput[i] &gt; subInput[i-1]:\n            increases +=1\n        i += 1\n    return
        increases\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey
        guys. Quite new to python. Anyway, I found this not too hard, which I was
        glad about :)&lt;/p&gt;\n\n&lt;p&gt;```\nsubInput = []\nf = open(r&amp;quot;C:\\Users\\lazer\\Documents\\Python
        Scripts\\Advent 2021\\input.txt&amp;quot;)\nfor x in f:\n  subInput.append(x)&lt;/p&gt;\n\n&lt;p&gt;for
        i in range(len(subInput)):\n    subInput[i]=subInput[i].replace(&amp;#39;\\n&amp;#39;,&amp;#39;&amp;#39;)&lt;/p&gt;\n\n&lt;p&gt;subInput
        = map(int, subInput)\nprint(subInput)\nsubInput = list(subInput)&lt;/p&gt;\n\n&lt;h1&gt;print(subInput)&lt;/h1&gt;\n\n&lt;p&gt;def
        increaseCount(subInput):\n    increases = 0&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for
        i in range(len(subInput)):\n    if subInput[i] &amp;gt; subInput[i-1]:\n        increases
        +=1\n    i += 1\nreturn increases\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw4ek2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw4ek2", "created":
        1638418664.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmwmtfn", "id": "hmwmtfn", "parent_id":
        "t1_hmw4ek2", "depth": 1, "children": ["hmwmtfn"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw8zxm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "omginbd",
        "can_mod_post": false, "created_utc": 1638421066.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5uht8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Elixir\n    defmodule Day01 do\n      def p1(depths) do\n        depths\n        |&gt;
        Stream.chunk_every(2, 1, :discard)\n        |&gt; Enum.count(fn [first, second]
        -&gt; second &gt; first end)\n      end\n\n      def p2(depths) do\n        depths\n        |&gt;
        Stream.chunk_every(3, 1, :discard)\n        |&gt; Stream.map(&amp;Enum.sum/1)\n        |&gt;
        p1\n      end\n    end", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        Day01 do\n  def p1(depths) do\n    depths\n    |&amp;gt; Stream.chunk_every(2,
        1, :discard)\n    |&amp;gt; Enum.count(fn [first, second] -&amp;gt; second
        &amp;gt; first end)\n  end\n\n  def p2(depths) do\n    depths\n    |&amp;gt;
        Stream.chunk_every(3, 1, :discard)\n    |&amp;gt; Stream.map(&amp;amp;Enum.sum/1)\n    |&amp;gt;
        p1\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw8zxm/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmw8zxm", "created": 1638421066.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638421779.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw9ssu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tristan219",
        "can_mod_post": false, "created_utc": 1638421506.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_7wsip", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Typescript**\n\n    var fs = require(\"fs\");\n    var text = fs.readFileSync(\"./data.txt\").toString(\"utf-8\");\n    let
        depthMeasure: number[] = text.split(\"\\n\");\n    \n    let x: number = depthMeasure[0];\n    \n    var
        changeAssess: [number, string][] = [];\n    let numOfIncreases: number = 1;\n    \n    for
        (var depth of depthMeasure) {\n      let evaluation: string;\n      if (changeAssess.length
        &gt; 0) {\n        let priorVal: number = changeAssess[changeAssess.length
        - 1][0];\n        if (depth &gt; priorVal) {\n          evaluation = \"Increase\";\n          numOfIncreases++;\n        }
        else if (depth == priorVal) {\n          evaluation = \"No Change\";\n        }
        else if (depth &lt; priorVal) {\n          evaluation = \"Decrease\";\n        }\n        //eval
        = changeAssess[changeAssess.length-1][1];\n      } else {\n        evaluation
        = \"Initial\";\n      }\n    \n      changeAssess.push([depth, evaluation]);\n    }\n    \n    console.log(changeAssess);\n    console.log(numOfIncreases);\n    \n    var
        windowDifference: [number, string][] = [];\n    let numOfWindowIncreases:
        number = 0;\n    \n    //Part 2 a rolling window\n    let rollingWindowPrior:
        number = 0;\n    for (let i = 0; i &lt; depthMeasure.length - 2; i++) {\n      let
        evaluation: string;\n      let rollingWindow: number =\n        +depthMeasure[i]
        + +depthMeasure[i + 1] + +depthMeasure[i + 2];\n    \n      if (rollingWindowPrior
        !== 0) {\n        if (rollingWindow &gt; rollingWindowPrior) {\n          evaluation
        = \"Increase\";\n          numOfWindowIncreases++;\n        } else if (rollingWindow
        == rollingWindowPrior) {\n          evaluation = \"No Change\";\n        }
        else if (rollingWindow &lt; rollingWindowPrior) {\n          evaluation =
        \"Decrease\";\n        }\n      } else {\n        evaluation = \"Initial\"\n      }\n      rollingWindowPrior
        = rollingWindow;\n      windowDifference.push([rollingWindow, evaluation]);\n    }\n    \n    console.log(windowDifference);\n    console.log(numOfWindowIncreases);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Typescript&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        fs = require(&amp;quot;fs&amp;quot;);\nvar text = fs.readFileSync(&amp;quot;./data.txt&amp;quot;).toString(&amp;quot;utf-8&amp;quot;);\nlet
        depthMeasure: number[] = text.split(&amp;quot;\\n&amp;quot;);\n\nlet x: number
        = depthMeasure[0];\n\nvar changeAssess: [number, string][] = [];\nlet numOfIncreases:
        number = 1;\n\nfor (var depth of depthMeasure) {\n  let evaluation: string;\n  if
        (changeAssess.length &amp;gt; 0) {\n    let priorVal: number = changeAssess[changeAssess.length
        - 1][0];\n    if (depth &amp;gt; priorVal) {\n      evaluation = &amp;quot;Increase&amp;quot;;\n      numOfIncreases++;\n    }
        else if (depth == priorVal) {\n      evaluation = &amp;quot;No Change&amp;quot;;\n    }
        else if (depth &amp;lt; priorVal) {\n      evaluation = &amp;quot;Decrease&amp;quot;;\n    }\n    //eval
        = changeAssess[changeAssess.length-1][1];\n  } else {\n    evaluation = &amp;quot;Initial&amp;quot;;\n  }\n\n  changeAssess.push([depth,
        evaluation]);\n}\n\nconsole.log(changeAssess);\nconsole.log(numOfIncreases);\n\nvar
        windowDifference: [number, string][] = [];\nlet numOfWindowIncreases: number
        = 0;\n\n//Part 2 a rolling window\nlet rollingWindowPrior: number = 0;\nfor
        (let i = 0; i &amp;lt; depthMeasure.length - 2; i++) {\n  let evaluation:
        string;\n  let rollingWindow: number =\n    +depthMeasure[i] + +depthMeasure[i
        + 1] + +depthMeasure[i + 2];\n\n  if (rollingWindowPrior !== 0) {\n    if
        (rollingWindow &amp;gt; rollingWindowPrior) {\n      evaluation = &amp;quot;Increase&amp;quot;;\n      numOfWindowIncreases++;\n    }
        else if (rollingWindow == rollingWindowPrior) {\n      evaluation = &amp;quot;No
        Change&amp;quot;;\n    } else if (rollingWindow &amp;lt; rollingWindowPrior)
        {\n      evaluation = &amp;quot;Decrease&amp;quot;;\n    }\n  } else {\n    evaluation
        = &amp;quot;Initial&amp;quot;\n  }\n  rollingWindowPrior = rollingWindow;\n  windowDifference.push([rollingWindow,
        evaluation]);\n}\n\nconsole.log(windowDifference);\nconsole.log(numOfWindowIncreases);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw9ssu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw9ssu", "created":
        1638421506.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwc3gl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AccumulatedInk",
        "can_mod_post": false, "created_utc": 1638422786.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5sef9zcn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my TypeScript solution: https://github.com/Rigidity/AoC-2021/blob/main/src/day1.ts",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my TypeScript
        solution: &lt;a href=\"https://github.com/Rigidity/AoC-2021/blob/main/src/day1.ts\"&gt;https://github.com/Rigidity/AoC-2021/blob/main/src/day1.ts&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwc3gl/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwc3gl", "created":
        1638422786.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwegvt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mariotacke",
        "can_mod_post": false, "created_utc": 1638424165.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_8lk32w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript/Node.js\n\nhttps://github.com/mariotacke/advent-of-code-2021/tree/master/day-01-sonarr-sweep",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript/Node.js&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mariotacke/advent-of-code-2021/tree/master/day-01-sonarr-sweep\"&gt;https://github.com/mariotacke/advent-of-code-2021/tree/master/day-01-sonarr-sweep&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwegvt/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwegvt", "created":
        1638424165.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwgacu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Substantial_Sea_4441",
        "can_mod_post": false, "created_utc": 1638425287.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_9n6chdly", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    Python solution\n    \n    # part 1\n    with open(\"Day1.txt\", ''r'')
        as file:\n        depths = list( map(int, file.readlines()) )\n    accum =
        0 \n    x = range(0, len(depths))\n    \n    for i in x: \n        if i &lt;
        max(x): \n            if depths[i] &lt; depths[i+1]: \n                accum
        += 1     \n    print(\"Number of increases: %d\" %accum)\n    \n    \n    #
        part 2\n    with open(\"Day1.txt\", ''r'') as file: \n        depths = list(
        map(int, file.readlines()) )\n    \n    accum = 0 \n    x = range(0, len(depths))\n    \n    for
        i in x: \n        if i &lt; (max(x)-2): \n            if depths[i] &lt; depths[i+3]:
        \n                accum += 1 \n    print(\"Number of increases: %d\" %accum)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;Python
        solution\n\n# part 1\nwith open(&amp;quot;Day1.txt&amp;quot;, &amp;#39;r&amp;#39;)
        as file:\n    depths = list( map(int, file.readlines()) )\naccum = 0 \nx =
        range(0, len(depths))\n\nfor i in x: \n    if i &amp;lt; max(x): \n        if
        depths[i] &amp;lt; depths[i+1]: \n            accum += 1     \nprint(&amp;quot;Number
        of increases: %d&amp;quot; %accum)\n\n\n# part 2\nwith open(&amp;quot;Day1.txt&amp;quot;,
        &amp;#39;r&amp;#39;) as file: \n    depths = list( map(int, file.readlines())
        )\n\naccum = 0 \nx = range(0, len(depths))\n\nfor i in x: \n    if i &amp;lt;
        (max(x)-2): \n        if depths[i] &amp;lt; depths[i+3]: \n            accum
        += 1 \nprint(&amp;quot;Number of increases: %d&amp;quot; %accum)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwgacu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwgacu", "created":
        1638425287.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwnrhk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jakob0243",
        "can_mod_post": false, "created_utc": 1638430517.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ksyhn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\nPart 1:\n\n    def part_one():\n        data = []\n        with
        open(\"DayOne.txt\") as infile:\n            for line in infile.readlines():\n                data.append(int(line))\n\n        return
        sum([data[i-1] &lt; data[i] for i in range(1, len(data))])\n\nPart 2:\n    \n    def
        part_two():\n        with open(\"DayOne.txt\") as infile:\n            data
        = [int(line) for line in infile.readlines()]\n\n        pass_one = [sum(data[j-3:j])
        for j in range(3, len(data)+1)]\n        return sum([pass_one[i-1] &lt; pass_one[i]
        for i in range(1,     len(pass_one))])", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        part_one():\n    data = []\n    with open(&amp;quot;DayOne.txt&amp;quot;)
        as infile:\n        for line in infile.readlines():\n            data.append(int(line))\n\n    return
        sum([data[i-1] &amp;lt; data[i] for i in range(1, len(data))])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def part_two():\n    with open(&amp;quot;DayOne.txt&amp;quot;)
        as infile:\n        data = [int(line) for line in infile.readlines()]\n\n    pass_one
        = [sum(data[j-3:j]) for j in range(3, len(data)+1)]\n    return sum([pass_one[i-1]
        &amp;lt; pass_one[i] for i in range(1,     len(pass_one))])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwnrhk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwnrhk", "created":
        1638430517.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hn0yuox", "id": "hn0yuox", "parent_id":
        "t1_hmwnrhk", "depth": 1, "children": ["hn0yuox"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwpkjo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Thomas_Manthey",
        "can_mod_post": false, "created_utc": 1638431909.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_cp9ix2p0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    Python:\n    # Part 1\n    input = [int(line.strip()) for line in open(\"input.txt\",
        \"r\")]\n    print(sum([1 for i in range(1, len(input)) if input[i] &gt; input[i
        - 1]]))\n    # Part 2\n    windows = [input[i: i + 3] for i in range(len(input)
        - 3 + 1)]\n    print(sum([1 for i in range(1, len(windows)) if sum(windows[i])
        &gt; sum(windows[i-1])]))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;Python:\n#
        Part 1\ninput = [int(line.strip()) for line in open(&amp;quot;input.txt&amp;quot;,
        &amp;quot;r&amp;quot;)]\nprint(sum([1 for i in range(1, len(input)) if input[i]
        &amp;gt; input[i - 1]]))\n# Part 2\nwindows = [input[i: i + 3] for i in range(len(input)
        - 3 + 1)]\nprint(sum([1 for i in range(1, len(windows)) if sum(windows[i])
        &amp;gt; sum(windows[i-1])]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwpkjo/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmwpkjo", "created": 1638431909.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638435429.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwtk1w",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Only_Ice_8091",
        "can_mod_post": false, "created_utc": 1638435187.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_871jai28", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript:\n\n    const getNoOfIncreases = (data, interval = 1) =&gt; data.reduce(\n        (acc,
        curr, currIndex) =&gt; data[currIndex + interval] &gt; curr \n            ?
        acc + 1 \n            : acc\n    , 0);\n    \n    export default getNoOfIncreases;\n\n&amp;#x200B;\n\nCheeky
        one-liner that completes Day 1 part one and two (pass in an interval of 3
        for part 2).\n\nI love how when it is near to the end of the dataset, data\\[currIndex
        + interval\\]  is undefined and therefore the condition is falsey so acc is
        returned without the whole thing blowing up. JS rocks.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Javascript:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        getNoOfIncreases = (data, interval = 1) =&amp;gt; data.reduce(\n    (acc,
        curr, currIndex) =&amp;gt; data[currIndex + interval] &amp;gt; curr \n        ?
        acc + 1 \n        : acc\n, 0);\n\nexport default getNoOfIncreases;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Cheeky
        one-liner that completes Day 1 part one and two (pass in an interval of 3
        for part 2).&lt;/p&gt;\n\n&lt;p&gt;I love how when it is near to the end of
        the dataset, data[currIndex + interval]  is undefined and therefore the condition
        is falsey so acc is returned without the whole thing blowing up. JS rocks.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwtk1w/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwtk1w", "created":
        1638435187.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hn73dos", "id": "hn73dos", "parent_id":
        "t1_hmwtk1w", "depth": 1, "children": ["hn73dos"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwtvl7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Lispwizard",
        "can_mod_post": false, "created_utc": 1638435464.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_56lorqhk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "In emacs lisp (done completely in bed under the covers using an Android tablet
        with Termux).\n\n        (defun aoc2021-01 (depth-readings-vector &amp;optional
        part2?)\n          (loop with l = (length depth-readings-vector) and n = (if
        part2? 3 1)\n        \tfor index from 0 below l\n        \tfor end-index =
        (+ index n)\n        \tcount (and (&lt; end-index l) (&gt; (aref depth-readings-vector
        end-index) (aref depth-readings-vector index)))))\n        ;; (aoc2021-01
        (coerce *aoc2021-01-part1-example* ''vector)) =&gt; 7\n        ;; (aoc2021-01
        (coerce *aoc2021-01-part1-input* ''vector)) =&gt; 1527\n        ;; (aoc2021-01
        (coerce *aoc2021-01-part1-example* ''vector) t) =&gt; 5\n        ;; (aoc2021-01
        (coerce *aoc2021-01-part1-input* ''vector) t) =&gt; 1575", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;In emacs lisp (done completely in bed under
        the covers using an Android tablet with Termux).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    (defun
        aoc2021-01 (depth-readings-vector &amp;amp;optional part2?)\n      (loop with
        l = (length depth-readings-vector) and n = (if part2? 3 1)\n        for index
        from 0 below l\n        for end-index = (+ index n)\n        count (and (&amp;lt;
        end-index l) (&amp;gt; (aref depth-readings-vector end-index) (aref depth-readings-vector
        index)))))\n    ;; (aoc2021-01 (coerce *aoc2021-01-part1-example* &amp;#39;vector))
        =&amp;gt; 7\n    ;; (aoc2021-01 (coerce *aoc2021-01-part1-input* &amp;#39;vector))
        =&amp;gt; 1527\n    ;; (aoc2021-01 (coerce *aoc2021-01-part1-example* &amp;#39;vector)
        t) =&amp;gt; 5\n    ;; (aoc2021-01 (coerce *aoc2021-01-part1-input* &amp;#39;vector)
        t) =&amp;gt; 1575\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwtvl7/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmwtvl7", "created": 1638435464.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_hmwunox", "id": "hmwunox", "parent_id": "t1_hmwtvl7", "depth": 1, "children":
        ["hmwunox"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1638487180.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwtwoc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pngipngi",
        "can_mod_post": false, "created_utc": 1638435490.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_jdv18q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Excel (Can''t inline a file, so has to be a link)\n\nhttps://github.com/pengi/advent_of_code/blob/master/2021/day01.xlsx",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excel (Can&amp;#39;t
        inline a file, so has to be a link)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/pengi/advent_of_code/blob/master/2021/day01.xlsx\"&gt;https://github.com/pengi/advent_of_code/blob/master/2021/day01.xlsx&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwtwoc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwtwoc", "created":
        1638435490.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmz93sx", "id": "hmz93sx", "parent_id":
        "t1_hmwtwoc", "depth": 1, "children": ["hmz93sx"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwwi7l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LuckierLion",
        "can_mod_post": false, "created_utc": 1638437716.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_b3w6o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C solution. I''d appreciate any feedback.\n\n[Paste](https://topaz.github.io/paste/#XQAAAQCVAwAAAAAAAAARmknGRw8TogB3OyPPwW5K8Q8ohQvj8m6aN9M7UhX9MWdeBU32pVI4yz89SpjA/8KrPTWrCa6rcGGVWTHtXRtHzC34KxgZ7ulPFuvX7kaQpGtw5lcdd/+Vn8A9RXBuq51Bs9HWw30qrckytg3wEdVODvD62VuNOuhAlINlZ6ADJKM1m2y4XOkbMhoSAj1CymU1D6ULBqdbIvtdnUqMWeMcVQEGfXiW5EBT7k9uDW1o7oz6OPPEkHqOJpYfm9khzOAaSJ1hJfooPkS9eP1AMAuewHQzbMhMEYjji2/3UfpHl87TnSVvqfhKwz6/S9qht3eItUvhZthATGZg2CKT2uVkAQwX0KiWI8h5n2beTdFs+ZCu+wAGKSz4351qhIn2lbMbt4TdmYdszjk/STGtoyBork5RdBxvI1LyFhHsvMJMUUJNi/2/FoeWU5mptYMqYF91+DsT/TaJSmXNRnR8e+BlSZgZeFnslzUaqjj52K8U1uCtU8Au7qv79iupR5cAY7BXCIYt2KKnjpFmhSKDwvNDMsiiFirdyPbR5EpwT//alXCd)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C solution. I&amp;#39;d
        appreciate any feedback.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCVAwAAAAAAAAARmknGRw8TogB3OyPPwW5K8Q8ohQvj8m6aN9M7UhX9MWdeBU32pVI4yz89SpjA/8KrPTWrCa6rcGGVWTHtXRtHzC34KxgZ7ulPFuvX7kaQpGtw5lcdd/+Vn8A9RXBuq51Bs9HWw30qrckytg3wEdVODvD62VuNOuhAlINlZ6ADJKM1m2y4XOkbMhoSAj1CymU1D6ULBqdbIvtdnUqMWeMcVQEGfXiW5EBT7k9uDW1o7oz6OPPEkHqOJpYfm9khzOAaSJ1hJfooPkS9eP1AMAuewHQzbMhMEYjji2/3UfpHl87TnSVvqfhKwz6/S9qht3eItUvhZthATGZg2CKT2uVkAQwX0KiWI8h5n2beTdFs+ZCu+wAGKSz4351qhIn2lbMbt4TdmYdszjk/STGtoyBork5RdBxvI1LyFhHsvMJMUUJNi/2/FoeWU5mptYMqYF91+DsT/TaJSmXNRnR8e+BlSZgZeFnslzUaqjj52K8U1uCtU8Au7qv79iupR5cAY7BXCIYt2KKnjpFmhSKDwvNDMsiiFirdyPbR5EpwT//alXCd\"&gt;Paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwwi7l/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwwi7l", "created":
        1638437716.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638480983.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwxwzb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gwangjinkim",
        "can_mod_post": false, "created_utc": 1638438917.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_25xiz5xy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Clojure\n\n\n    (defn icount\n      ([ins] (icount ins 0 0))\n      ([ins
        last sum] (if (empty? ins) (- sum 1) ;; remove first \"increase\"\n                          (let
        [[fst &amp; rst] ins]\n                            (recur rst fst (if (pos?
        (- fst last)) (+ sum 1) sum))))))\n    \n    (def ins-1 (map #(Integer/parseInt
        %) (clojure.string/split \n      (slurp \"/home/user/notes/lisp/2021-input-1.txt\")
        #\"\\n\"))) ;; reading-in\n    (icount ins-1) ;; 1292 ;; task-1\n    (icount
        (map + ins-1 (rest ins-1) (rest (rest ins-1)))) ;; 1262 ;; task-2", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Clojure&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn
        icount\n  ([ins] (icount ins 0 0))\n  ([ins last sum] (if (empty? ins) (-
        sum 1) ;; remove first &amp;quot;increase&amp;quot;\n                      (let
        [[fst &amp;amp; rst] ins]\n                        (recur rst fst (if (pos?
        (- fst last)) (+ sum 1) sum))))))\n\n(def ins-1 (map #(Integer/parseInt %)
        (clojure.string/split \n  (slurp &amp;quot;/home/user/notes/lisp/2021-input-1.txt&amp;quot;)
        #&amp;quot;\\n&amp;quot;))) ;; reading-in\n(icount ins-1) ;; 1292 ;; task-1\n(icount
        (map + ins-1 (rest ins-1) (rest (rest ins-1)))) ;; 1262 ;; task-2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwxwzb/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwxwzb", "created":
        1638438917.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmz8ko0", "id": "hmz8ko0", "parent_id":
        "t1_hmwxwzb", "depth": 1, "children": ["hmz8ko0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwxxf7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "IronAcesUK",
        "can_mod_post": false, "created_utc": 1638438927.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_ac5k90hp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Late to the party... Typescript implementation\n\n[Typescript SonarSweep](https://raw.githubusercontent.com/DPShillcock/AdventOfCode2021/Master/src/SonarSweep.ts)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Late to the party...
        Typescript implementation&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://raw.githubusercontent.com/DPShillcock/AdventOfCode2021/Master/src/SonarSweep.ts\"&gt;Typescript
        SonarSweep&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwxxf7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwxxf7", "created":
        1638438927.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638447375.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmx7ocb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "schuck_d",
        "can_mod_post": false, "created_utc": 1638446650.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_h58wi39e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Could not start earlier, but here I am - everything **PHP** for my first
        year, since that is what I''m learning anyway :)\n\nPart 1:\n\n    // Grab
        file and turn into integer array\n    $input = array\\_map(''intval'', file(''input.txt''));\n    \n    //
        Initialize counter\n    $i_count = 0;\n    \n    // check each line of input,
        when lower than next line, increment counter by 1\n    for ($i = 0; $i &lt;
        count($input) - 1; $i++) {\n        if ($input[$i] &lt; $input[$i + 1]) {\n            $i_count++;\n        }\n    }\n    \n    //
        Grab answer file and write number of increasement\n    $output = ''part1-answer.txt'';\n    file_put_contents($output,
        $i_count);\n\nPart 2:\n\n    // Grab file and turn into integer array \n    $input
        = array_map(''intval'', file(''input.txt''));\n    \n    // Initialize counter
        \n    $i_count = 0;\n    \n    // check each three-measurement-window, when
        lower than next three-measurement-window, increment counter by 1 \n    for
        ($i = 0; $i &lt; count($input) - 1; $i++) { \n        if ($i + 3 &lt;= count($input)
        - 1) { \n            if ($input[$i] + $input[$i + 1] + $input[$i + 2] &lt;
        $input[$i + 1] + $input[$i + 2] + $input[$i + 3]) { \n                $i_count++;
        \n            } \n        } \n    }\n    \n    // Grab answer file and write
        number of increasement \n    $output = ''part2-answer.txt''; \n    file_put_contents($output,
        $i_count);", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Could
        not start earlier, but here I am - everything &lt;strong&gt;PHP&lt;/strong&gt;
        for my first year, since that is what I&amp;#39;m learning anyway :)&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Grab file and turn into integer
        array\n$input = array\\_map(&amp;#39;intval&amp;#39;, file(&amp;#39;input.txt&amp;#39;));\n\n//
        Initialize counter\n$i_count = 0;\n\n// check each line of input, when lower
        than next line, increment counter by 1\nfor ($i = 0; $i &amp;lt; count($input)
        - 1; $i++) {\n    if ($input[$i] &amp;lt; $input[$i + 1]) {\n        $i_count++;\n    }\n}\n\n//
        Grab answer file and write number of increasement\n$output = &amp;#39;part1-answer.txt&amp;#39;;\nfile_put_contents($output,
        $i_count);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        Grab file and turn into integer array \n$input = array_map(&amp;#39;intval&amp;#39;,
        file(&amp;#39;input.txt&amp;#39;));\n\n// Initialize counter \n$i_count =
        0;\n\n// check each three-measurement-window, when lower than next three-measurement-window,
        increment counter by 1 \nfor ($i = 0; $i &amp;lt; count($input) - 1; $i++)
        { \n    if ($i + 3 &amp;lt;= count($input) - 1) { \n        if ($input[$i]
        + $input[$i + 1] + $input[$i + 2] &amp;lt; $input[$i + 1] + $input[$i + 2]
        + $input[$i + 3]) { \n            $i_count++; \n        } \n    } \n}\n\n//
        Grab answer file and write number of increasement \n$output = &amp;#39;part2-answer.txt&amp;#39;;
        \nfile_put_contents($output, $i_count);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmx7ocb/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmx7ocb", "created":
        1638446650.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmz8f53", "id": "hmz8f53", "parent_id":
        "t1_hmx7ocb", "depth": 1, "children": ["hmz8f53"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmxdpt3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "superstring-man",
        "can_mod_post": false, "created_utc": 1638450376.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_12lbrw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "CHICKEN Scheme:\n(Only reading the file is specific to chicken, the interesting
        bit is the `num-larger` function.)\n\n    (import (chicken io))\n    (define
        txtlines (call-with-input-file \"data.txt\" (lambda (port) (read-lines port))))\n    (define
        lines (map string-&gt;number txtlines))\n    \n    (define (num-larger array)\n        (+
        (if (&lt; (car array) (cadr array)) 1 0)\n           (if (&lt; (length array)
        3) 0 (num-larger (cdr array)))))\n    \n    (print (num-larger lines))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;CHICKEN Scheme:\n(Only reading the file
        is specific to chicken, the interesting bit is the &lt;code&gt;num-larger&lt;/code&gt;
        function.)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(import (chicken io))\n(define
        txtlines (call-with-input-file &amp;quot;data.txt&amp;quot; (lambda (port)
        (read-lines port))))\n(define lines (map string-&amp;gt;number txtlines))\n\n(define
        (num-larger array)\n    (+ (if (&amp;lt; (car array) (cadr array)) 1 0)\n       (if
        (&amp;lt; (length array) 3) 0 (num-larger (cdr array)))))\n\n(print (num-larger
        lines))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxdpt3/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmxdpt3", "created":
        1638450376.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmz84yz", "id": "hmz84yz", "parent_id":
        "t1_hmxdpt3", "depth": 1, "children": ["hmz84yz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmxgs6y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lask",
        "can_mod_post": false, "created_utc": 1638452034.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_5k3ig", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Toit ([https://github.com/toitlang/toit/](https://github.com/toitlang/toit/)):  \n[Puzzle
        1](https://topaz.github.io/paste/#XQAAAQCvAQAAAAAAAAA0m0pnuFI8c0P4gA1i56nZ4SaqhhykpRpYIcF8TtzliqiOQK4e73c/w1lkfjw56R14JLKSloiIDnSWfMEPI2q/yBJwaLdPPsK4DciQ53ro9yR4rHGY2zFmTN4Pwx784YS54TrWjkN7qn6esZjYYTlH9NaX9ZDt1TrYgBhX9ASYwO9IaHGLk+cOEx1O9GMfm5XZBc39sSp8ywOp2tuaXNqmAB9g66J6dRN0KxyeEzPA0jlUPjjmboHJK8/YvIo/47uIU5geguAY9RtVWmxdqzKf5HApRfWMSgM3CMGkUjpIry2o2lFbSYfIDWukG08YH/vvNrTN/0CK6wA=)\n\n[Puzzle
        2](https://topaz.github.io/paste/#XQAAAQAjAgAAAAAAAAA0m0pnuFI8c/T12XykBPfAPUmClgrXr8war9i1kE6x0ntN3Ei8Huos+Ya+G7iP9lm9LV+9sZ3+RY+1XEc6q6DYvsQHR7lI6H0QWt1VMh/Y9GX3Z5Av4InJ5+7T+w4Oro7Oavpk3vLsu78TPppOb+RLxGaS1xl9vXGWW5k61wV/SCyZfx/hd1k3cD4gyEGKBpTAgPEj/UXD/Ko5TC/mm1xjPUfhjXv7DyKPbyieziUyW14t2GOPwuVvQAVW+9pynDznTBn34YRELaro/ZTquGQ4ubkuz7Glu7v7l1gd+sLHy6+npsLTSA/WgAomVneWEO4dzH7j13/Nnmqsr3ZfUlg1X7r9nLjBrlBMPBqoVOucIIzuUIL1ckfLOUo49VKfQcAJ7F8dNHZnGSt7//GVIqY=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Toit (&lt;a href=\"https://github.com/toitlang/toit/\"&gt;https://github.com/toitlang/toit/&lt;/a&gt;):&lt;br/&gt;\n&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCvAQAAAAAAAAA0m0pnuFI8c0P4gA1i56nZ4SaqhhykpRpYIcF8TtzliqiOQK4e73c/w1lkfjw56R14JLKSloiIDnSWfMEPI2q/yBJwaLdPPsK4DciQ53ro9yR4rHGY2zFmTN4Pwx784YS54TrWjkN7qn6esZjYYTlH9NaX9ZDt1TrYgBhX9ASYwO9IaHGLk+cOEx1O9GMfm5XZBc39sSp8ywOp2tuaXNqmAB9g66J6dRN0KxyeEzPA0jlUPjjmboHJK8/YvIo/47uIU5geguAY9RtVWmxdqzKf5HApRfWMSgM3CMGkUjpIry2o2lFbSYfIDWukG08YH/vvNrTN/0CK6wA=\"&gt;Puzzle
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAjAgAAAAAAAAA0m0pnuFI8c/T12XykBPfAPUmClgrXr8war9i1kE6x0ntN3Ei8Huos+Ya+G7iP9lm9LV+9sZ3+RY+1XEc6q6DYvsQHR7lI6H0QWt1VMh/Y9GX3Z5Av4InJ5+7T+w4Oro7Oavpk3vLsu78TPppOb+RLxGaS1xl9vXGWW5k61wV/SCyZfx/hd1k3cD4gyEGKBpTAgPEj/UXD/Ko5TC/mm1xjPUfhjXv7DyKPbyieziUyW14t2GOPwuVvQAVW+9pynDznTBn34YRELaro/ZTquGQ4ubkuz7Glu7v7l1gd+sLHy6+npsLTSA/WgAomVneWEO4dzH7j13/Nnmqsr3ZfUlg1X7r9nLjBrlBMPBqoVOucIIzuUIL1ckfLOUo49VKfQcAJ7F8dNHZnGSt7//GVIqY=\"&gt;Puzzle
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxgs6y/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmxgs6y", "created":
        1638452034.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmxm0oa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "liviu93",
        "can_mod_post": false, "created_utc": 1638454595.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_nwrdb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C:\n\n    #define SUM(a) a[0] + a[1] + a[2]\n    int main() {\n      int
        a[3];\n      int i = 0, s, x = 0;\n      for (scanf(\"%d %d %d\", a, a + 1,
        a + 2), s = SUM(a); scanf(\"%d\", a + i) == 1;\n           i = i == 2 ? 0
        : i + 1, x += SUM(a) &gt; s, s = SUM(a))\n        ;\n      printf(\"%d\\n\",
        x);\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#define
        SUM(a) a[0] + a[1] + a[2]\nint main() {\n  int a[3];\n  int i = 0, s, x =
        0;\n  for (scanf(&amp;quot;%d %d %d&amp;quot;, a, a + 1, a + 2), s = SUM(a);
        scanf(&amp;quot;%d&amp;quot;, a + i) == 1;\n       i = i == 2 ? 0 : i + 1,
        x += SUM(a) &amp;gt; s, s = SUM(a))\n    ;\n  printf(&amp;quot;%d\\n&amp;quot;,
        x);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxm0oa/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmxm0oa", "created":
        1638454595.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmxn3xv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Skyree01",
        "can_mod_post": false, "created_utc": 1638455096.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_1gztmg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**PHP**\n\nForgot to post my solution yesterday, here goes\n\nI changed the
        value of each element to either 0 or 1 if they are larger than the previous
        element the sum it at the end.Just saving 2 lines from using a loop.\n\n    $input
        = file(''input.txt'');\n    \n    function part1($input) {\n        array_walk($input,
        fn(&amp;$item, $i) =&gt; $item = (int) ($i &gt; 0 &amp;&amp; $item &gt; $input[$i-1]));\n        echo
        array_sum($input).PHP_EOL;\n    }\n    \n    function part2($input) {\n        array_walk($input,
        fn(&amp;$item, $i) =&gt; $item = array_sum(array_slice($input, $i, 3)));\n        part1($input);\n    }\n    \n    part1($input);\n    part2($input);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Forgot
        to post my solution yesterday, here goes&lt;/p&gt;\n\n&lt;p&gt;I changed the
        value of each element to either 0 or 1 if they are larger than the previous
        element the sum it at the end.Just saving 2 lines from using a loop.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$input
        = file(&amp;#39;input.txt&amp;#39;);\n\nfunction part1($input) {\n    array_walk($input,
        fn(&amp;amp;$item, $i) =&amp;gt; $item = (int) ($i &amp;gt; 0 &amp;amp;&amp;amp;
        $item &amp;gt; $input[$i-1]));\n    echo array_sum($input).PHP_EOL;\n}\n\nfunction
        part2($input) {\n    array_walk($input, fn(&amp;amp;$item, $i) =&amp;gt; $item
        = array_sum(array_slice($input, $i, 3)));\n    part1($input);\n}\n\npart1($input);\npart2($input);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxn3xv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmxn3xv", "created":
        1638455096.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmz7wvv", "id": "hmz7wvv", "parent_id":
        "t1_hmxn3xv", "depth": 1, "children": ["hmz7wvv", "hn6gl7h", "hng9m9n"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmxrx3s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "roundscribehector5",
        "can_mod_post": false, "created_utc": 1638457213.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_hftcx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[OOP Ruby Solution](https://topaz.github.io/paste/#XQAAAQD/BAAAAAAAAAA5GUqKNoFH6SMnPH0B27EPd7phjZ68/oO/XvGYmYMktKdLulbGgcNEq/E84SnUm1E0wSzPmrFBBtb4l860QuYAXUa0V1ZoR3tERaCFhLQxpDPGY0kSeBv9tfnd5kV9ZhqpO/Zz4Mi7w3Sw2u8hFBScffCn2eLyc6NeS7ui1/J9OXx4t1yqxGelCWouCPTaW1Qe4WnHz24r+hSmMa4zXqoho94I9f/HW5X2+jrjCU/jDL3fHgC+dugtCUAGg+B3sfeLg9s6FMGa0NSbSNzV0cBJV4LzMUHI5ToaK1k8r0gscf2zqieY3xAmJmqhNC0l1YoeocPd13/sFQYlkTQf3bJSCtFcJWAjhPW5A3Ce8PLVEc/F/+zWKxwj4KhqhDPrTj7Kw4MMcKKhCPpia8y+Z9IYu0oEIDj+iS4e0qIieI/DC792ipEUtWIyUaulWckc84PSFLg2p+68x/asb2H5qFuwCb/MatJXaETHQyHZt83LVdgAGmQaV5mNt5uTEbHluHBXtw+oURed5fCK/FI/TFi+UxmKhawHMebxwLNqMw276noz1bXgeCuxEahvgKwmahh4W7Op6doHZmD8c8blHP/7gaEY)  \n\n\nI''d
        appreciate any feedback.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQD/BAAAAAAAAAA5GUqKNoFH6SMnPH0B27EPd7phjZ68/oO/XvGYmYMktKdLulbGgcNEq/E84SnUm1E0wSzPmrFBBtb4l860QuYAXUa0V1ZoR3tERaCFhLQxpDPGY0kSeBv9tfnd5kV9ZhqpO/Zz4Mi7w3Sw2u8hFBScffCn2eLyc6NeS7ui1/J9OXx4t1yqxGelCWouCPTaW1Qe4WnHz24r+hSmMa4zXqoho94I9f/HW5X2+jrjCU/jDL3fHgC+dugtCUAGg+B3sfeLg9s6FMGa0NSbSNzV0cBJV4LzMUHI5ToaK1k8r0gscf2zqieY3xAmJmqhNC0l1YoeocPd13/sFQYlkTQf3bJSCtFcJWAjhPW5A3Ce8PLVEc/F/+zWKxwj4KhqhDPrTj7Kw4MMcKKhCPpia8y+Z9IYu0oEIDj+iS4e0qIieI/DC792ipEUtWIyUaulWckc84PSFLg2p+68x/asb2H5qFuwCb/MatJXaETHQyHZt83LVdgAGmQaV5mNt5uTEbHluHBXtw+oURed5fCK/FI/TFi+UxmKhawHMebxwLNqMw276noz1bXgeCuxEahvgKwmahh4W7Op6doHZmD8c8blHP/7gaEY\"&gt;OOP
        Ruby Solution&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d appreciate any
        feedback.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxrx3s/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmxrx3s", "created":
        1638457213.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638807113.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmy32s1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sefujuki",
        "can_mod_post": false, "created_utc": 1638461806.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_9gisthi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[dc](https://en.wikipedia.org/wiki/Dc_(computer_program))\n\nDay 1, part
        1\n\n    dc -e \"0sk[lk1+sk]sI[ds-&gt;Il-]sX999999?[?lXx2z&gt;L]sLlLxlkp\"
        &lt;day01-input\n\nExplanation\n\n    0sk           [store 0 in register k
        for count]s#\n    [lk1+sk]sI    [Macro I: add 1 to register k]s#\n    [ds-&gt;Il-]sX   [Macro
        X: compare last 2 entries, execute I, leave last entry as TOS]s#\n    9999999
        ?     [initial stack, also useful for cheking ? input]s#\n    [   ?         [get
        input (or nothing)]s#\n        lXx       [execute macro X]s#\n        2z&gt;L      [execute
        L if depth &gt; 2]s#\n    ]sL           [Macro L for Loop]s#\n    lLx           [execute
        Loop macro]s#\n    lkp           [load register k and print it]s#", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Dc_(computer_program\"&gt;dc&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;Day
        1, part 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dc -e &amp;quot;0sk[lk1+sk]sI[ds-&amp;gt;Il-]sX999999?[?lXx2z&amp;gt;L]sLlLxlkp&amp;quot;
        &amp;lt;day01-input\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Explanation&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;0sk           [store
        0 in register k for count]s#\n[lk1+sk]sI    [Macro I: add 1 to register k]s#\n[ds-&amp;gt;Il-]sX   [Macro
        X: compare last 2 entries, execute I, leave last entry as TOS]s#\n9999999
        ?     [initial stack, also useful for cheking ? input]s#\n[   ?         [get
        input (or nothing)]s#\n    lXx       [execute macro X]s#\n    2z&amp;gt;L      [execute
        L if depth &amp;gt; 2]s#\n]sL           [Macro L for Loop]s#\nlLx           [execute
        Loop macro]s#\nlkp           [load register k and print it]s#\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy32s1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmy32s1", "created":
        1638461806.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmy3con",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mad_drill",
        "can_mod_post": false, "created_utc": 1638461914.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_gcyg5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "OK here''s C. Oh god the memory corruption (I tell myself It isn''t that
        bad but I''m pretty sure it''s real bad) if this compiles on anyone else''s
        computer I''ll be surprised. [part one](https://topaz.github.io/paste/#XQAAAQBHBwAAAAAAAAAQYIjSbjClzLgXZuUH5+BDKXnqh90B+OPDouxtybYW6aZsvlw+e4u44/4OotmcwFEkRDiQ86up0LxpOFACHpFwRSLghGU5SsiIC4MAC1ZuOr7XcAhJgO4JUkkYJLoNaF4pBaAVaYeBz5qUjarScluqa0VV1BobYE0AhNo9xNGg/qNT3TWO87jjL9OeRD/iwtwfZY2IUfkXMtbu/v8ewHYw4LwCOBHestrpdTb0m+ZypOXPICP42G8OFHST4MeTZ5T2WovxhoeR2+ZYIzApCYFdzwZB/q5B4IsdmiYJqFvnlX8M3g1Z+DrKS1x/Ejqqpr1rVFAOwUKL56IQKKoCL/85ZlcQ4ALHSja9k1ljEUE1qR6vlkryH1dAdfRugdMBmAaW+YfvOIb6gkUE9EYdpa2SWfH0q/IWbZ1hj0P/tZvuDPqNsqbX7dx1kY+BGlDNE/dRMtWCFFnWCALLcH0suC9J1744Ch1C59qzS9xC601DhMQeoTxGS+wDgH8Ovr2AlOnjr/ipZYiBklympnRd1VeIH8pUNsEzV45gGZd8r82p9qj5WV2fc+Ao/BhO5O56ymwg0AnufCHpJyFug4qxwiIddpNDLfzDzYTRCz2SHyUc0qaPZFwZkdpnOpyjjIU/BEjs8lAaLePX+yBAreNl+bV2qIcwEk0lafohUgY+cvlon4Q8MbOfJiRnfMPSJ79VYODx6okyx5nijhuDmQHnQ3B7sa6lEigZQCgAipU/hfpo6ZC5whL+tGjUWlyW89yfwsJ6JYuFexJzJXbb7MKJdMcOtLWvIRUqp6V3XxujlVAYENzhZQsNGvu0mcRGbw0kv4lZIYNgdeR0QsDrQlQpTK1FPP2UY0Mknpm9ManMiRJwf3zNOtP257HC2Nu6lED1MWUQjCvtI9AkA7ER1KNDdOwTItPQisQFVpV2SGxE+DuXYIHQ9h/hg8mCNLmzqpGwRWZmiOpx1KNbSNCONo+oQmqOEXINUgrID+M/iEsA+GpbANlPPkduyjbWfyE207NHiCZUae/9INprBhOPB1Fp1v5D/rNV0A==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OK here&amp;#39;s C.
        Oh god the memory corruption (I tell myself It isn&amp;#39;t that bad but
        I&amp;#39;m pretty sure it&amp;#39;s real bad) if this compiles on anyone
        else&amp;#39;s computer I&amp;#39;ll be surprised. &lt;a href=\"https://topaz.github.io/paste/#XQAAAQBHBwAAAAAAAAAQYIjSbjClzLgXZuUH5+BDKXnqh90B+OPDouxtybYW6aZsvlw+e4u44/4OotmcwFEkRDiQ86up0LxpOFACHpFwRSLghGU5SsiIC4MAC1ZuOr7XcAhJgO4JUkkYJLoNaF4pBaAVaYeBz5qUjarScluqa0VV1BobYE0AhNo9xNGg/qNT3TWO87jjL9OeRD/iwtwfZY2IUfkXMtbu/v8ewHYw4LwCOBHestrpdTb0m+ZypOXPICP42G8OFHST4MeTZ5T2WovxhoeR2+ZYIzApCYFdzwZB/q5B4IsdmiYJqFvnlX8M3g1Z+DrKS1x/Ejqqpr1rVFAOwUKL56IQKKoCL/85ZlcQ4ALHSja9k1ljEUE1qR6vlkryH1dAdfRugdMBmAaW+YfvOIb6gkUE9EYdpa2SWfH0q/IWbZ1hj0P/tZvuDPqNsqbX7dx1kY+BGlDNE/dRMtWCFFnWCALLcH0suC9J1744Ch1C59qzS9xC601DhMQeoTxGS+wDgH8Ovr2AlOnjr/ipZYiBklympnRd1VeIH8pUNsEzV45gGZd8r82p9qj5WV2fc+Ao/BhO5O56ymwg0AnufCHpJyFug4qxwiIddpNDLfzDzYTRCz2SHyUc0qaPZFwZkdpnOpyjjIU/BEjs8lAaLePX+yBAreNl+bV2qIcwEk0lafohUgY+cvlon4Q8MbOfJiRnfMPSJ79VYODx6okyx5nijhuDmQHnQ3B7sa6lEigZQCgAipU/hfpo6ZC5whL+tGjUWlyW89yfwsJ6JYuFexJzJXbb7MKJdMcOtLWvIRUqp6V3XxujlVAYENzhZQsNGvu0mcRGbw0kv4lZIYNgdeR0QsDrQlQpTK1FPP2UY0Mknpm9ManMiRJwf3zNOtP257HC2Nu6lED1MWUQjCvtI9AkA7ER1KNDdOwTItPQisQFVpV2SGxE+DuXYIHQ9h/hg8mCNLmzqpGwRWZmiOpx1KNbSNCONo+oQmqOEXINUgrID+M/iEsA+GpbANlPPkduyjbWfyE207NHiCZUae/9INprBhOPB1Fp1v5D/rNV0A==\"&gt;part
        one&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy3con/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmy3con", "created":
        1638461914.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmy5y2j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "crankd87",
        "can_mod_post": false, "created_utc": 1638462930.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_agbsv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#Python\nDay 1, part 1 (2 lines)\n```\nwith open(''input.txt'') as f: depths
        = [int(i) for i in f.readlines()]\nprint(len([ ''+'' for i,d in enumerate(depths)
        if (i &gt; 0) and (d &gt; depths[i-1])]))\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;Day 1, part 1 (2 lines)\n&lt;code&gt;\nwith
        open(&amp;#39;input.txt&amp;#39;) as f: depths = [int(i) for i in f.readlines()]\nprint(len([
        &amp;#39;+&amp;#39; for i,d in enumerate(depths) if (i &amp;gt; 0) and (d
        &amp;gt; depths[i-1])]))\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy5y2j/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmy5y2j", "created": 1638462930.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmy8v67", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "volatilebit", "can_mod_post": false, "created_utc":
        1638464054.0, "send_replies": true, "parent_id": "t3_r66vow", "score": 2,
        "author_fullname": "t2_44keq", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "# Raku\n\n    my @measurements
        = $*IN.lines\u00bb.Int;\n\n    # Part 1\n    say  @measurements.rotor(2 =&gt;
        -1).map(-&gt; ($a, $b) { $b - $a }).grep(* &gt; 0).elems;\n\n    # Part 2\n    say
        @measurements.rotor(3 =&gt; -2).map(*.sum).rotor(2 =&gt; -1).map(-&gt; ($a,
        $b) { $b - $a }).grep(* &gt; 0).elems;\n\nMay be a cleaner way but I''m a
        fan of using rotor() for doing operations on adjacent list elements.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Raku&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;my
        @measurements = $*IN.lines\u00bb.Int;\n\n# Part 1\nsay  @measurements.rotor(2
        =&amp;gt; -1).map(-&amp;gt; ($a, $b) { $b - $a }).grep(* &amp;gt; 0).elems;\n\n#
        Part 2\nsay @measurements.rotor(3 =&amp;gt; -2).map(*.sum).rotor(2 =&amp;gt;
        -1).map(-&amp;gt; ($a, $b) { $b - $a }).grep(* &amp;gt; 0).elems;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;May
        be a cleaner way but I&amp;#39;m a fan of using rotor() for doing operations
        on adjacent list elements.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy8v67/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmy8v67", "created":
        1638464054.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmy90co",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "harryoosterveen",
        "can_mod_post": false, "created_utc": 1638464108.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_3pzl2n5d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rockstar\n\nSee [https://codewithrockstar.com/](https://codewithrockstar.com/)\n\nFor
        day 1, part 1\n\n    The coffee is gone  \n    The house is empty\n      \n    Listen
        to the office  \n    until the office is empty  \n    If the house isn''t
        empty and the office is bigger than the house  \n    build the coffee up  \n    \n    Let
        the house be the office  \n    Listen to the office  \n    \n    Shout the
        coffee", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rockstar&lt;/h1&gt;\n\n&lt;p&gt;See
        &lt;a href=\"https://codewithrockstar.com/\"&gt;https://codewithrockstar.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;For
        day 1, part 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;The coffee is gone  \nThe
        house is empty\n\nListen to the office  \nuntil the office is empty  \nIf
        the house isn&amp;#39;t empty and the office is bigger than the house  \nbuild
        the coffee up  \n\nLet the house be the office  \nListen to the office  \n\nShout
        the coffee\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy90co/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmy90co", "created":
        1638464108.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmz752c", "id": "hmz752c", "parent_id":
        "t1_hmy90co", "depth": 1, "children": ["hmz752c", "hn50uwl"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmy9ke6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BackInNJAgain",
        "can_mod_post": false, "created_utc": 1638464319.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_eamqqeky", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Excel:\n\nCell A2: Set value to \"FALSE\"\n\nFormula in cell B2: =IF((A2&gt;A1),\"TRUE\",\"FALSE\")\n\nThen
        drag down for all 2,000 rows\n\nIF((A3&gt;A2),\"TRUE\",\"FALSE\")  \nIF((A4&gt;A3),\"TRUE\",\"FALSE\")
        etc.\n\nCell B2001: =COUNTIF(B2:B2000,\"\\*TRUE\\*\") &lt;-- the asterisks
        get around a weird Excel for Mac bug that prevents count from working properly",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excel:&lt;/p&gt;\n\n&lt;p&gt;Cell
        A2: Set value to &amp;quot;FALSE&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Formula in
        cell B2: =IF((A2&amp;gt;A1),&amp;quot;TRUE&amp;quot;,&amp;quot;FALSE&amp;quot;)&lt;/p&gt;\n\n&lt;p&gt;Then
        drag down for all 2,000 rows&lt;/p&gt;\n\n&lt;p&gt;IF((A3&amp;gt;A2),&amp;quot;TRUE&amp;quot;,&amp;quot;FALSE&amp;quot;)&lt;br/&gt;\nIF((A4&amp;gt;A3),&amp;quot;TRUE&amp;quot;,&amp;quot;FALSE&amp;quot;)
        etc.&lt;/p&gt;\n\n&lt;p&gt;Cell B2001: =COUNTIF(B2:B2000,&amp;quot;*TRUE*&amp;quot;)
        &amp;lt;-- the asterisks get around a weird Excel for Mac bug that prevents
        count from working properly&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy9ke6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmy9ke6", "created":
        1638464319.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmyfdr9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "_Heziode",
        "can_mod_post": false, "created_utc": 1638466533.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_7xs22nti", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Ada\n\nThis is an Ada 2012 solution:\n\n- [Part 1](https://github.com/Heziode/aoc-ada-2021/tree/master/01/1)\n-
        [Part 2](https://github.com/Heziode/aoc-ada-2021/tree/master/01/2)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Ada&lt;/h1&gt;\n\n&lt;p&gt;This is an Ada
        2012 solution:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/Heziode/aoc-ada-2021/tree/master/01/1\"&gt;Part
        1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/Heziode/aoc-ada-2021/tree/master/01/2\"&gt;Part
        2&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyfdr9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmyfdr9", "created":
        1638466533.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmygsqt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vss2sn",
        "can_mod_post": false, "created_utc": 1638467080.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_aadtluzt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solutions in C++:  \n[Part 1](https://github.com/vss2sn/advent_of_code/blob/master/2021/cpp/day_01a.cpp)  \n[Part
        2](https://github.com/vss2sn/advent_of_code/blob/master/2021/cpp/day_01b.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solutions in C++:&lt;br/&gt;\n&lt;a
        href=\"https://github.com/vss2sn/advent_of_code/blob/master/2021/cpp/day_01a.cpp\"&gt;Part
        1&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://github.com/vss2sn/advent_of_code/blob/master/2021/cpp/day_01b.cpp\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmygsqt/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmygsqt", "created":
        1638467080.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 237, "name": "t1_hmubyyr", "id": "hmubyyr", "parent_id":
        "t3_r66vow", "depth": 0, "children": ["hmubyyr", "hmrfuew", "hmtkjc8", "hmretnt",
        "hmrezlc", "hmusj18", "hmsxnbq", "hmrzgee", "hmrfvru", "hmrfld2", "hmrf2g0",
        "hmry7u5", "hmrz22v", "hmrks2m", "hmrhr14", "hmrf87m", "hmts3v2", "hmvffrj",
        "hmwb2ra", "hms0m82", "hmrf0j6", "hmreons", "hmrzrtr", "hmrfhj6", "hmtbaw0",
        "hmrfa3v", "hmren52", "hmsic35", "hmrhcqc", "hms9me8", "hmvqe6x", "hmw21oo",
        "hmt5mu9", "hmspb17", "hmvcobg", "hmtp9ng", "hmrh3m6", "hmrxxk9", "hmsnokd",
        "hms2tdh", "hmtxaje", "hmrr8s5", "hmvqboh", "hms9w78", "hmrz2jn", "hmuu15c",
        "hmrfr8r", "hmv7xhs", "hmul9ls", "hms0h5d", "hmrel8t", "hmrklsj", "hmtx4jg",
        "hmsrw4q", "hms92lp", "hmsnt19", "hmswb9a", "hmrf9ck", "hms6qq4", "hmul1w0",
        "hmti8v3", "hms8zqs", "hmuvznj", "hmse2jo", "hmrn1qi", "hmu9x7q", "hmsmh1y",
        "hmshy8w", "hms0ovt", "hmrt2sw", "hmris2x", "hmvd82d", "hmsipx1", "hmreik6",
        "hmtdkt1", "hms2it8", "hmubzlt", "hmsqpii", "hmvqsha", "hmucq9b", "hmu9yeq",
        "hmrf0gg", "hmuxrtd", "hms93us", "hmsthqs", "hmvwd6n", "hmw1jxb", "hmuvxcd",
        "hmul0m8", "hmriplw", "hmtl0p6", "hmy98ot", "hmupvsh", "hmuc4p0", "hmxa298",
        "hmuwikk", "hmv8xhi", "hmvvm80", "hmwk3gr", "hmua6gz", "hmto2mk", "hmuijjn",
        "hmtckwf", "hmx4u0j", "hmvhiw7", "hmxf61e", "hmukph5", "hmx74kk", "hms97z3",
        "hmuqjav", "hms028u", "hms8x4k", "hmwdb3a", "hmwg4mh", "hmurtrn", "hmvd24s",
        "hmuxks0", "hmx4oh4", "hmv06au", "hmvnyic", "hmxa4gk", "hmtpdh1", "hmugkix",
        "hms8upn", "hmuszg8", "hmvbdu3", "hmtnoc6", "hmu2d91", "hmtl4l8", "hmwn65l",
        "hmvn98k", "hmvh953", "hmt4tjc", "hmss2k9", "hms9kem", "hmwx4lt", "hmvy97q",
        "hmuy7px", "hmuwdqz", "hmtrv9z", "hmut6fx", "hmux6rf", "hmsdp0m"]}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmu2gx2"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:21 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:21 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=a6B4i3lU28ybz6C0UJ; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:21 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmubyyr,hmrfuew,hmtkjc8,hmretnt,hmrezlc,hmusj18,hmsxnbq,hmrzgee,hmrfvru,hmrfld2,hmrf2g0,hmry7u5,hmrz22v,hmrks2m,hmrhr14,hmrf87m,hmts3v2,hmvffrj,hmwb2ra,hms0m82,hmrf0j6,hmreons,hmrzrtr,hmrfhj6,hmtbaw0,hmrfa3v,hmren52,hmsic35,hmrhcqc,hms9me8,hmvqe6x,hmw21oo,hmt5mu9,hmspb17,hmvcobg,hmtp9ng,hmrh3m6,hmrxxk9,hmsnokd,hms2tdh,hmtxaje,hmrr8s5,hmvqboh,hms9w78,hmrz2jn,hmuu15c,hmrfr8r,hmv7xhs,hmul9ls,hms0h5d,hmrel8t,hmrklsj,hmtx4jg,hmsrw4q,hms92lp,hmsnt19,hmswb9a,hmrf9ck,hms6qq4,hmul1w0,hmti8v3,hms8zqs,hmuvznj,hmse2jo,hmrn1qi,hmu9x7q,hmsmh1y,hmshy8w,hms0ovt,hmrt2sw,hmris2x,hmvd82d,hmsipx1,hmreik6,hmtdkt1,hms2it8,hmubzlt,hmsqpii,hmvqsha,hmucq9b,hmu9yeq,hmrf0gg,hmuxrtd,hms93us,hmsthqs,hmvwd6n,hmw1jxb,hmuvxcd,hmul0m8,hmriplw,hmtl0p6,hmy98ot,hmupvsh,hmuc4p0,hmxa298,hmuwikk,hmv8xhi,hmvvm80,hmwk3gr,hmua6gz,hmto2mk,hmuijjn,hmtckwf,hmx4u0j,hmvhiw7,hmxf61e,hmukph5,hmx74kk,hms97z3,hmuqjav,hms028u,hms8x4k,hmwdb3a,hmwg4mh,hmurtrn,hmvd24s,hmuxks0,hmx4oh4,hmv06au,hmvnyic,hmxa4gk,hmtpdh1,hmugkix,hms8upn,hmuszg8,hmvbdu3,hmtnoc6,hmu2d91,hmtl4l8,hmwn65l,hmvn98k,hmvh953,hmt4tjc,hmss2k9,hms9kem,hmwx4lt,hmvy97q,hmuy7px,hmuwdqz,hmtrv9z,hmut6fx,hmux6rf,hmsdp0m
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '18549'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg639lz4.2.1741472961371.Z0FBQUFBQm56TVRCSTFLYVRYWjdXcVFFMmVnUVhLckxhTWo3dWZHelZQTmszR3VmOVp4X3RlemNNNzRRek5NT1VmMHQtanFoTTlSRnI1S1JGTWRCdF8xTHF0WG1WTVJlM1lkdTVxZk16UHJ1VmUyTFpOM2k2WWVUSkx3WlZ6YTg1a01mR0dFZWdMZVg;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:21
        GMT; secure, session_tracker=aafmdrnmaanqlrrigq.0.1741472961383.Z0FBQUFBQm56TVRCNXFnSlZwOGtycmI0YVNfTHJhN2YyMTI3NkdybGNyd2twbFcyRmlzUS1jSXRqV1BXc3lQNnRiTEhYVnNHMkx5cHZydDV4Ni1xZ1NzanVtOW9mQ1dGaldCdDFvcFpjZklhVWJLaVdnNm9Sb2R1aHNNNlEtVUJMc2x1emotWEZQa3c;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:21
        GMT; secure, edgebucket=qBxM3p7nYcl2Qmi0W1; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '65'
      x-ratelimit-remaining:
      - '35.0'
      x-ratelimit-reset:
      - '38'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:21 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtkjc8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kushhhhhhhhhhhhh",
        "can_mod_post": false, "created_utc": 1638380736.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 4, "author_fullname": "t2_96dhyr26", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "isnt the solution of part 2 easier when you say \n\n`if (element n+3 &gt;
        element n)` \n\n`a++`", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;isnt
        the solution of part 2 easier when you say &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if
        (element n+3 &amp;gt; element n)&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;a++&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtkjc8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtkjc8", "created":
        1638380736.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtzei4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638386466.0, "send_replies": true,
        "parent_id": "t1_hmtkjc8", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; # Top-level posts in Solution Megathreads are for *code solutions* only.\n\nThis
        is a top-level post, so please edit your post and share your code/repo/solution
        or, if you haven''t finished the puzzle yet, you can always create your own
        thread and make sure to flair it with `Help`.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;blockquote&gt;\n&lt;h1&gt;Top-level posts in Solution
        Megathreads are for &lt;em&gt;code solutions&lt;/em&gt; only.&lt;/h1&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This
        is a top-level post, so please edit your post and share your code/repo/solution
        or, if you haven&amp;#39;t finished the puzzle yet, you can always create
        your own thread and make sure to flair it with &lt;code&gt;Help&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtzei4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtzei4", "created":
        1638386466.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 3, "name": "t1_hmtp8m7", "id": "hmtp8m7",
        "parent_id": "t1_hmtkjc8", "depth": 1, "children": ["hmtp8m7"]}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfld2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MarcusTL12",
        "can_mod_post": false, "created_utc": 1638335912.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_32ynqnu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Julia 1373/1049 (Just barely not top 1000 :''( )\n\n&amp;#x200B;\n\n    function
        part1()\n        s = open(\"input/day1/input\") do io\n            [parse(Int,
        l) for l in eachline(io)]\n        end\n    \n        c = 0\n    \n        for
        i = 1:length(s)-1\n            if s[i+1] &gt; s[i]\n                c += 1\n            end\n        end\n        c\n    end\n    \n    function
        part2()\n        s = open(\"input/day1/input\") do io\n            [parse(Int,
        l) for l in eachline(io)]\n        end\n    \n        c = 0\n    \n        sums
        = zeros(Int, length(s) - 2)\n    \n        for i in eachindex(sums)\n            sums[i]
        = s[i] + s[i + 1] + s[i + 2]\n        end\n    \n        for i = 1:length(sums)-1\n            if
        sums[i+1] &gt; sums[i]\n                c += 1\n            end\n        end\n    \n        c\n    end",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Julia 1373/1049 (Just
        barely not top 1000 :&amp;#39;( )&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        part1()\n    s = open(&amp;quot;input/day1/input&amp;quot;) do io\n        [parse(Int,
        l) for l in eachline(io)]\n    end\n\n    c = 0\n\n    for i = 1:length(s)-1\n        if
        s[i+1] &amp;gt; s[i]\n            c += 1\n        end\n    end\n    c\nend\n\nfunction
        part2()\n    s = open(&amp;quot;input/day1/input&amp;quot;) do io\n        [parse(Int,
        l) for l in eachline(io)]\n    end\n\n    c = 0\n\n    sums = zeros(Int, length(s)
        - 2)\n\n    for i in eachindex(sums)\n        sums[i] = s[i] + s[i + 1] +
        s[i + 2]\n    end\n\n    for i = 1:length(sums)-1\n        if sums[i+1] &amp;gt;
        sums[i]\n            c += 1\n        end\n    end\n\n    c\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfld2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfld2", "created":
        1638335912.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrhafw", "id": "hmrhafw", "parent_id":
        "t1_hmrfld2", "depth": 1, "children": ["hmrhafw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfuew",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "StasDeep",
        "can_mod_post": false, "created_utc": 1638336046.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_ssrg14", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python 3](https://github.com/StasDeep/Advent-of-Code/blob/64a53d5e5f0e90338ad4d973e151ba47bc87141b/y2021/t01/solution.py),
        628/611\n\n```\ndef main():\n    nums = read(int)\n    p1(sum(y &gt; x for
        x, y in zip(nums, nums[1:])))\n    windows = [sum(x) for x in zip(nums, nums[1:],
        nums[2:])]\n    p2(sum(y &gt; x for x, y in zip(windows, windows[1:])))\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/StasDeep/Advent-of-Code/blob/64a53d5e5f0e90338ad4d973e151ba47bc87141b/y2021/t01/solution.py\"&gt;Python
        3&lt;/a&gt;, 628/611&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\ndef main():\n    nums
        = read(int)\n    p1(sum(y &amp;gt; x for x, y in zip(nums, nums[1:])))\n    windows
        = [sum(x) for x in zip(nums, nums[1:], nums[2:])]\n    p2(sum(y &amp;gt; x
        for x, y in zip(windows, windows[1:])))\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfuew/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfuew", "created":
        1638336046.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmry7u5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmry7u5", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmry7u5/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638348899.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638348899.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmryhu9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AP2008",
        "can_mod_post": false, "created_utc": 1638349140.0, "send_replies": true,
        "parent_id": "t1_hmry7u5", "score": 2, "author_fullname": "t2_5ucumlq4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "The code is hard to read. Can you format it or link a paste ?", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;The code is hard to read. Can you format
        it or link a paste ?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmryhu9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmryhu9", "created":
        1638349140.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmryu0o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hmry7u5", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "It''s because you''re comparing strings instead of numbers.
        \n\n(Also, close your file once you''re done reading it; or even better -
        read it and cast it to ints all at once)", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmryu0o", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s because you&amp;#39;re comparing
        strings instead of numbers. &lt;/p&gt;\n\n&lt;p&gt;(Also, close your file
        once you&amp;#39;re done reading it; or even better - read it and cast it
        to ints all at once)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmryu0o/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638349426.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638349426.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrz3md",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BlueJoe333",
        "can_mod_post": false, "created_utc": 1638349659.0, "send_replies": true,
        "parent_id": "t1_hmryu0o", "score": 3, "author_fullname": "t2_vbfxi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "right .... converting to int does fix it. Could have seen that one myself
        ;)\n\nThanks !", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;right
        .... converting to int does fix it. Could have seen that one myself ;)&lt;/p&gt;\n\n&lt;p&gt;Thanks
        !&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrz3md/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrz3md", "created":
        1638349659.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrzdui",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AP2008",
        "can_mod_post": false, "created_utc": 1638349906.0, "send_replies": true,
        "parent_id": "t1_hmryu0o", "score": 2, "author_fullname": "t2_5ucumlq4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Or use the `with` pattern while reading files.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Or use the &lt;code&gt;with&lt;/code&gt; pattern
        while reading files.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrzdui/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrzdui", "created":
        1638349906.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrzkas", "id": "hmrzkas", "parent_id":
        "t1_hmrzdui", "depth": 3, "children": ["hmrzkas"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_hmrza5m", "id": "hmrza5m", "parent_id": "t1_hmry7u5",
        "depth": 1, "children": ["hmrza5m"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsic35",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mage1005",
        "can_mod_post": false, "created_utc": 1638364129.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_rskyo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here is mine:\n\n```\ninput = [int(x) for x in  open(\"input.txt\", \"r\")]\n\ndef
        solve(input):\n    increase_counter = 0\n    for x in range(1,  len(input)):\n        if
        input[x] &gt; input[x-1]:\n            increase_counter+=1\n\n    return increase_counter\n\ndef
        solve2(input):\n    increase_counter = 0\n    for x in range(2, len(input)):\n        if
        sum(input[x-2:x+1]) &lt; sum(input[x-1:x+2]):\n            increase_counter+=1\n\n    return
        increase_counter\n\nprint(\"The 1st answer is: \", solve(input))\nprint(\"The
        2nd answer is: \", solve2(input))\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Here is mine:&lt;/p&gt;\n\n&lt;p&gt;```\ninput =
        [int(x) for x in  open(&amp;quot;input.txt&amp;quot;, &amp;quot;r&amp;quot;)]&lt;/p&gt;\n\n&lt;p&gt;def
        solve(input):\n    increase_counter = 0\n    for x in range(1,  len(input)):\n        if
        input[x] &amp;gt; input[x-1]:\n            increase_counter+=1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return
        increase_counter\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;def solve2(input):\n    increase_counter
        = 0\n    for x in range(2, len(input)):\n        if sum(input[x-2:x+1]) &amp;lt;
        sum(input[x-1:x+2]):\n            increase_counter+=1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return
        increase_counter\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;print(&amp;quot;The
        1st answer is: &amp;quot;, solve(input))\nprint(&amp;quot;The 2nd answer is:
        &amp;quot;, solve2(input))\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsic35/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmsic35", "created": 1638364129.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmw19ir", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1638417120.0, "send_replies": true, "parent_id": "t1_hmsic35",
        "score": 1, "author_fullname": "t2_60niu", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Please follow the
        [posting guidelines](https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines)
        and edit your post to add what language(s) you used.  This makes it easier
        for folks who Ctrl-F the megathreads looking for a specific language.\n\nAlso,
        your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please follow the &lt;a
        href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines\"&gt;posting
        guidelines&lt;/a&gt; and edit your post to add what language(s) you used.  This
        makes it easier for folks who Ctrl-F the megathreads looking for a specific
        language.&lt;/p&gt;\n\n&lt;p&gt;Also, your code is hard to read on old.reddit.  Please
        edit it as per our posting guidelines in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw19ir/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw19ir", "created":
        1638417120.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638409086.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtbaw0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Standard-Affect",
        "can_mod_post": false, "created_utc": 1638377112.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_4zni0mvj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "R is a better fit for this than Python because of vectorization. There probably
        is a base R function that does moving summaries, but I got lazy and kludged
        it.\n\n    input &lt;- readLines(\"inputs/day1.txt\") |&gt;\n      as.integer()\n\n    answer1
        &lt;- sum(diff(input) &gt;= 1)\n\n    window &lt;- 3\n    input[length(input)
        + 1:2]  &lt;- 0\n    sums &lt;- sapply(seq_len(length(input) - window + 1),     \\(x)
        sum(input[seq(x, x + 2)]))\n    answer2 &lt;- sum(diff(sums) &gt;= 1)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;R is a better fit for this than Python because
        of vectorization. There probably is a base R function that does moving summaries,
        but I got lazy and kludged it.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input &amp;lt;-
        readLines(&amp;quot;inputs/day1.txt&amp;quot;) |&amp;gt;\n  as.integer()\n\nanswer1
        &amp;lt;- sum(diff(input) &amp;gt;= 1)\n\nwindow &amp;lt;- 3\ninput[length(input)
        + 1:2]  &amp;lt;- 0\nsums &amp;lt;- sapply(seq_len(length(input) - window
        + 1),     \\(x) sum(input[seq(x, x + 2)]))\nanswer2 &amp;lt;- sum(diff(sums)
        &amp;gt;= 1)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtbaw0/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmtbaw0", "created": 1638377112.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmtjyd2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "spaceLem", "can_mod_post": false, "created_utc":
        1638380511.0, "send_replies": true, "parent_id": "t1_hmtbaw0", "score": 3,
        "author_fullname": "t2_3a2dr", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "`filter(input, rep(1, 3))`
        will do the trick. You just need to be aware that it will leave an `NA` at
        the start and end.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;filter(input,
        rep(1, 3))&lt;/code&gt; will do the trick. You just need to be aware that
        it will leave an &lt;code&gt;NA&lt;/code&gt; at the start and end.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtjyd2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtjyd2", "created":
        1638380511.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvjajr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Standard-Affect",
        "can_mod_post": false, "created_utc": 1638409216.0, "send_replies": true,
        "parent_id": "t1_hmtjyd2", "score": 2, "author_fullname": "t2_4zni0mvj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thanks, that''s a lot cleaner. Makes me question the way dplyr masks `stats::filter`,
        since rolling summaries are quite useful.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Thanks, that&amp;#39;s a lot cleaner. Makes me question
        the way dplyr masks &lt;code&gt;stats::filter&lt;/code&gt;, since rolling
        summaries are quite useful.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvjajr/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvjajr", "created":
        1638409216.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638410641.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmu017h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638386707.0, "send_replies": true,
        "parent_id": "t1_hmtbaw0", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu017h/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmu017h", "created":
        1638386707.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvj0uo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Standard-Affect",
        "can_mod_post": false, "created_utc": 1638409097.0, "send_replies": true,
        "parent_id": "t1_hmu017h", "score": 2, "author_fullname": "t2_4zni0mvj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Apologies, fixed.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Apologies,
        fixed.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvj0uo/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvj0uo", "created":
        1638409097.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmubyyr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fredenbois",
        "can_mod_post": false, "created_utc": 1638391261.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_foibp6qd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my pseudo-functionnal solution with python, using more-itertools:\n\n    from
        more_itertools import windowed\n    \n    with open(''data_day1.txt'') as
        fichier:\n        i = sum(map(lambda x: int(x[0]&lt;x[1]),windowed(map(sum,
        windowed(map(int,fichier),3)),2)))\n        print(\"AOC 2021 - day 1 - puzzle
        2\")\n        print(f\"*** Answer : {i}\")", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my pseudo-functionnal solution with
        python, using more-itertools:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from more_itertools
        import windowed\n\nwith open(&amp;#39;data_day1.txt&amp;#39;) as fichier:\n    i
        = sum(map(lambda x: int(x[0]&amp;lt;x[1]),windowed(map(sum, windowed(map(int,fichier),3)),2)))\n    print(&amp;quot;AOC
        2021 - day 1 - puzzle 2&amp;quot;)\n    print(f&amp;quot;*** Answer : {i}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmubyyr/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmubyyr", "created":
        1638391261.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmusj18",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "igryy",
        "can_mod_post": false, "created_utc": 1638397557.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_ee728vkk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "What about a python one-liner?\n\n`print(sum(1 for i in range(len(open(\"file.txt\",
        \"r\").read().splitlines())) if (i&gt;0 and int(open(\"file.txt\", \"r\").read().splitlines()[i])&gt;int(open(\"file.txt\",
        \"r\").read().splitlines()[i-1]))))`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;What about a python one-liner?&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(sum(1
        for i in range(len(open(&amp;quot;file.txt&amp;quot;, &amp;quot;r&amp;quot;).read().splitlines()))
        if (i&amp;gt;0 and int(open(&amp;quot;file.txt&amp;quot;, &amp;quot;r&amp;quot;).read().splitlines()[i])&amp;gt;int(open(&amp;quot;file.txt&amp;quot;,
        &amp;quot;r&amp;quot;).read().splitlines()[i-1]))))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmusj18/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmusj18", "created":
        1638397557.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmuulw0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Strigone",
        "can_mod_post": false, "created_utc": 1638398398.0, "send_replies": true,
        "parent_id": "t1_hmusj18", "score": 3, "author_fullname": "t2_3itfkg45", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Two quick simplifications:  \n - You can do `sum(condition for ...)` instead
        of `sum(1 for ... if condition)`. (Since in python you can add booleans like
        integers)\n - Second you don''t need to `open(\"file.txt\", \"r\").read().splitlines()`
        that many times. You can just put it in a list and use a comprehension\n\nSomething
        like\n```print(sum(int(numbers[i]) &gt; int(numbers[i-1]) for numbers in [open(\"file.txt\",
        \"r\").readlines()] for i in range(1, len(numbers))))```", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Two quick simplifications:&lt;br/&gt;\n
        - You can do &lt;code&gt;sum(condition for ...)&lt;/code&gt; instead of &lt;code&gt;sum(1
        for ... if condition)&lt;/code&gt;. (Since in python you can add booleans
        like integers)\n - Second you don&amp;#39;t need to &lt;code&gt;open(&amp;quot;file.txt&amp;quot;,
        &amp;quot;r&amp;quot;).read().splitlines()&lt;/code&gt; that many times. You
        can just put it in a list and use a comprehension&lt;/p&gt;\n\n&lt;p&gt;Something
        like\n&lt;code&gt;print(sum(int(numbers[i]) &amp;gt; int(numbers[i-1]) for
        numbers in [open(&amp;quot;file.txt&amp;quot;, &amp;quot;r&amp;quot;).readlines()]
        for i in range(1, len(numbers))))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuulw0/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmuulw0", "created": 1638398398.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638410017.0, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvffrj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MikeMakesMaps",
        "can_mod_post": false, "created_utc": 1638407543.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_2fh3qe18", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust. Solution can be made to work the same for both parts and there''s no
        need to actually add the contents of the windows ;)\n\n    fn get_numbers()
        -&gt; Vec&lt;i32&gt; {\n        let input: &amp;str = include_str!(\"input.txt\");\n\n        input.split(\"\\r\\n\")\n            .map(|x|
        { x.parse().unwrap() })\n            .collect()\n    }\n\n    fn count_increases_windowed(numbers:
        &amp;[i32], window_size: usize) -&gt; i32 {\n        let mut count = 0;\n        for
        i in 0..numbers.len() - window_size {\n            count += (numbers[i] &lt;
        numbers[i + window_size]) as i32;\n        }\n        count\n    }\n\n    fn
        puzzle1(numbers: &amp;[i32]) {\n        let deeper_count = count_increases_windowed(numbers,
        1);\n        println!(\"Puzzle 1: Depth increases: {}\", deeper_count);\n    }\n\n    fn
        puzzle2(numbers: &amp;[i32]) {\n        let deeper_count = count_increases_windowed(numbers,
        3);\n        println!(\"Puzzle 2: Depth increases: {}\", deeper_count);\n    }\n\n    fn
        main() {\n        let numbers = get_numbers();\n        puzzle1(&amp;numbers);\n        puzzle2(&amp;numbers);\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust. Solution can be
        made to work the same for both parts and there&amp;#39;s no need to actually
        add the contents of the windows ;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        get_numbers() -&amp;gt; Vec&amp;lt;i32&amp;gt; {\n    let input: &amp;amp;str
        = include_str!(&amp;quot;input.txt&amp;quot;);\n\n    input.split(&amp;quot;\\r\\n&amp;quot;)\n        .map(|x|
        { x.parse().unwrap() })\n        .collect()\n}\n\nfn count_increases_windowed(numbers:
        &amp;amp;[i32], window_size: usize) -&amp;gt; i32 {\n    let mut count = 0;\n    for
        i in 0..numbers.len() - window_size {\n        count += (numbers[i] &amp;lt;
        numbers[i + window_size]) as i32;\n    }\n    count\n}\n\nfn puzzle1(numbers:
        &amp;amp;[i32]) {\n    let deeper_count = count_increases_windowed(numbers,
        1);\n    println!(&amp;quot;Puzzle 1: Depth increases: {}&amp;quot;, deeper_count);\n}\n\nfn
        puzzle2(numbers: &amp;amp;[i32]) {\n    let deeper_count = count_increases_windowed(numbers,
        3);\n    println!(&amp;quot;Puzzle 2: Depth increases: {}&amp;quot;, deeper_count);\n}\n\nfn
        main() {\n    let numbers = get_numbers();\n    puzzle1(&amp;amp;numbers);\n    puzzle2(&amp;amp;numbers);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvffrj/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvffrj", "created":
        1638407543.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638430685.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwb2ra", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fromwindowstolinux",
        "can_mod_post": false, "created_utc": 1638422216.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 2, "author_fullname": "t2_271hcqs1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "How are you guys so awesome!!! I''m having an existential dread looking at
        my potato code!!\n\n(I''ve been editing my solution paste-delete when initially
        posting this because 4 space and \\`\\` doesn''t work. I just found the code
        block icon lol.)\n\nVery new in Python.\n\n    # Day1 : Sonar Sweep\n    #
        Part 1\n    fh = open(\"input.txt\") \n    list1 = fh.read().split()\n    #
        print(list1)\n    list2 = []\n    # cast item in list1 into integer and put
        it inside list2\n    for item in list1 : \n        cast = int(item) \n        #
        print(cast) \n        list2.append(cast)\n    # print(list2)\n    # while
        you are not at the end of list2, take the current item and compare with the
        next item. \n    # count increase\n    list2_length = len(list2)\n    i =
        0 \n    count = 0 \n    while i &lt; list2_length - 1: \n        current_number
        = list2[i] \n        # print(current_number) \n        next_number = list2[i
        + 1] \n        i = i + 1 \n        # print(next_number) \n        if next_number
        &gt; current_number: \n            count = count + 1 \n            # print(\"%i-&gt;%i
        is increase\" % (current_number, next_number)) \n    print(\"Total count:\",
        count)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How
        are you guys so awesome!!! I&amp;#39;m having an existential dread looking
        at my potato code!!&lt;/p&gt;\n\n&lt;p&gt;(I&amp;#39;ve been editing my solution
        paste-delete when initially posting this because 4 space and `` doesn&amp;#39;t
        work. I just found the code block icon lol.)&lt;/p&gt;\n\n&lt;p&gt;Very new
        in Python.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Day1 : Sonar Sweep\n# Part
        1\nfh = open(&amp;quot;input.txt&amp;quot;) \nlist1 = fh.read().split()\n#
        print(list1)\nlist2 = []\n# cast item in list1 into integer and put it inside
        list2\nfor item in list1 : \n    cast = int(item) \n    # print(cast) \n    list2.append(cast)\n#
        print(list2)\n# while you are not at the end of list2, take the current item
        and compare with the next item. \n# count increase\nlist2_length = len(list2)\ni
        = 0 \ncount = 0 \nwhile i &amp;lt; list2_length - 1: \n    current_number
        = list2[i] \n    # print(current_number) \n    next_number = list2[i + 1]
        \n    i = i + 1 \n    # print(next_number) \n    if next_number &amp;gt; current_number:
        \n        count = count + 1 \n        # print(&amp;quot;%i-&amp;gt;%i is increase&amp;quot;
        % (current_number, next_number)) \nprint(&amp;quot;Total count:&amp;quot;,
        count)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwb2ra/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwb2ra", "created":
        1638422216.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638432045.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwms71", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638429764.0, "send_replies": true,
        "parent_id": "t1_hmwb2ra", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; # ~~Top-level posts in Solution Megathreads are for *code solutions*
        only.~~\n\n~~This is a top-level post, so please edit your post and share
        your code/repo/solution or, if you haven''t finished the puzzle yet, you can
        always create your own thread and make sure to flair it with `Help`.~~\n\nEdit:
        thanks for adding your code!  &lt;3", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;blockquote&gt;\n&lt;h1&gt;&lt;del&gt;Top-level posts in
        Solution Megathreads are for &lt;em&gt;code solutions&lt;/em&gt; only.&lt;/del&gt;&lt;/h1&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;del&gt;This
        is a top-level post, so please edit your post and share your code/repo/solution
        or, if you haven&amp;#39;t finished the puzzle yet, you can always create
        your own thread and make sure to flair it with &lt;code&gt;Help&lt;/code&gt;.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        thanks for adding your code!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwms71/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmwms71", "created": 1638429764.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwnuru",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fromwindowstolinux",
        "can_mod_post": false, "created_utc": 1638430583.0, "send_replies": true,
        "parent_id": "t1_hmwms71", "score": 2, "author_fullname": "t2_271hcqs1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Edited! I was having trouble writing code in the comment section. Sorry for
        that!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Edited!
        I was having trouble writing code in the comment section. Sorry for that!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwnuru/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwnuru", "created":
        1638430583.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwpjzf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638431896.0, "send_replies": true,
        "parent_id": "t1_hmwnuru", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Fair enough.  :)\n\nFYI: Triple backticks only works on new.reddit, so ideally
        don''t use those in /r/adventofcode, please.  We have an article in the subreddit
        wiki for wrangling Markdown around code ([How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F))
        which should explain some of new.reddit''s fancypants editor difficulties
        you''re having with the four-spaces formatting and how to fix it.  :)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Fair enough.  :)&lt;/p&gt;\n\n&lt;p&gt;FYI:
        Triple backticks only works on new.reddit, so ideally don&amp;#39;t use those
        in &lt;a href=\"/r/adventofcode\"&gt;/r/adventofcode&lt;/a&gt;, please.  We
        have an article in the subreddit wiki for wrangling Markdown around code (&lt;a
        href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;) which should explain some of new.reddit&amp;#39;s
        fancypants editor difficulties you&amp;#39;re having with the four-spaces
        formatting and how to fix it.  :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwpjzf/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmwpjzf", "created": 1638431896.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 3, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwpn3n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fromwindowstolinux",
        "can_mod_post": false, "created_utc": 1638431967.0, "send_replies": true,
        "parent_id": "t1_hmwpjzf", "score": 2, "author_fullname": "t2_271hcqs1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Got it! Thank you very much! :D", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Got it! Thank you very much! :D&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwpn3n/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwpn3n", "created":
        1638431967.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms2it8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AbdussamiT",
        "can_mod_post": false, "created_utc": 1638352655.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 0, "author_fullname": "t2_1047pi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I don''t see u/sophiebits posting solutions this year :(", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t see &lt;a href=\"/u/sophiebits\"&gt;u/sophiebits&lt;/a&gt;
        posting solutions this year :(&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms2it8/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms2it8", "created": 1638352655.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmt78mv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "sophiebits", "can_mod_post": false, "created_utc":
        1638375500.0, "send_replies": true, "parent_id": "t1_hms2it8", "score": 3,
        "author_fullname": "t2_14a4ru", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "I decided to take the year
        off \u2013 for competing, at least. Sleep felt more important this year.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I decided to take the
        year off \u2013 for competing, at least. Sleep felt more important this year.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt78mv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt78mv", "created":
        1638375500.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt7gwx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AbdussamiT",
        "can_mod_post": false, "created_utc": 1638375593.0, "send_replies": true,
        "parent_id": "t1_hmt78mv", "score": 2, "author_fullname": "t2_1047pi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "More power to you! I used to learn a lot from your (and another user I forgot)
        solutions last year. \nHope you had a good year and have a good end to it.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;More power to you! I
        used to learn a lot from your (and another user I forgot) solutions last year.
        \nHope you had a good year and have a good end to it.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt7gwx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt7gwx", "created":
        1638375593.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms4c6l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638354231.0, "send_replies": true,
        "parent_id": "t1_hms2it8", "score": 3, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; # Top-level posts in Solution Megathreads are for *code solutions* only.\n\nThis
        is a top-level post, so please edit your post and share your code/repo/solution
        or, if you haven''t finished the puzzle yet, you can always create your own
        thread and make sure to flair it with `Help`.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;blockquote&gt;\n&lt;h1&gt;Top-level posts in Solution
        Megathreads are for &lt;em&gt;code solutions&lt;/em&gt; only.&lt;/h1&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This
        is a top-level post, so please edit your post and share your code/repo/solution
        or, if you haven&amp;#39;t finished the puzzle yet, you can always create
        your own thread and make sure to flair it with &lt;code&gt;Help&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms4c6l/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms4c6l", "created":
        1638354231.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrfvru", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        0, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmrfvru", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfvru/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638336067.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638336067.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrggii",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638336376.0, "send_replies": true,
        "parent_id": "t1_hmrfvru", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; # Top-level posts in Solution Megathreads are for *code solutions* only.\n\nThis
        is a top-level post, so please edit your post and share your code/repo/solution
        or, if you haven''t finished the puzzle yet, you can always create your own
        thread and make sure to flair it with `Help`.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;blockquote&gt;\n&lt;h1&gt;Top-level posts in Solution
        Megathreads are for &lt;em&gt;code solutions&lt;/em&gt; only.&lt;/h1&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This
        is a top-level post, so please edit your post and share your code/repo/solution
        or, if you haven&amp;#39;t finished the puzzle yet, you can always create
        your own thread and make sure to flair it with &lt;code&gt;Help&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrggii/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrggii", "created":
        1638336376.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 2, "name": "t1_hmrgthb", "id": "hmrgthb",
        "parent_id": "t1_hmrggii", "depth": 2, "children": ["hmrgthb"]}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrghn0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hmrfvru", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Each element in `lines` is still a string, you''re doing
        string concatenation and checking the lexicographical ordering.\n\nTry converting
        `lines` to a list of ints.", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmrghn0", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Each element in &lt;code&gt;lines&lt;/code&gt;
        is still a string, you&amp;#39;re doing string concatenation and checking
        the lexicographical ordering.&lt;/p&gt;\n\n&lt;p&gt;Try converting &lt;code&gt;lines&lt;/code&gt;
        to a list of ints.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrghn0/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638336393.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638336393.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_hmrgvmu", "id": "hmrgvmu", "parent_id":
        "t1_hmrghn0", "depth": 2, "children": ["hmrgvmu"]}}, {"kind": "more", "data":
        {"count": 3, "name": "t1_hmrgerd", "id": "hmrgerd", "parent_id": "t1_hmrfvru",
        "depth": 1, "children": ["hmrgerd", "hmrg6t2"]}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_r66vow", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "hmspb17", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_r66vow", "score": 0, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_hmspb17", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmspb17/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638367761.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638367761.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw06vs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638416618.0, "send_replies": true,
        "parent_id": "t1_hmspb17", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw06vs/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw06vs", "created":
        1638416618.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsxnbq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        0, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmsxnbq", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsxnbq/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638371536.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638371536.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmsyyhl", "id": "hmsyyhl", "parent_id":
        "t1_hmsxnbq", "depth": 1, "children": ["hmsyyhl", "hmsywew"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmw21oo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        0, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmw21oo", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw21oo/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638417495.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638417495.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw41ge",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fmorel",
        "can_mod_post": false, "created_utc": 1638418478.0, "send_replies": true,
        "parent_id": "t1_hmw21oo", "score": 2, "author_fullname": "t2_a6ymr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Did you convert them to numbers? \"1000\" &lt; \"999\" but 1000 &gt; 999.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Did you convert them
        to numbers? &amp;quot;1000&amp;quot; &amp;lt; &amp;quot;999&amp;quot; but
        1000 &amp;gt; 999.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw41ge/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw41ge", "created":
        1638418478.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_hmw5ikv", "id": "hmw5ikv", "parent_id":
        "t1_hmw41ge", "depth": 2, "children": ["hmw5ikv", "hmw4jdr", "hmw5qgt"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwmwq4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638429862.0, "send_replies": true,
        "parent_id": "t1_hmw21oo", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; # Top-level posts in Solution Megathreads are for *code solutions* only.\n\nThis
        is a top-level post, so please edit your post and share your code/repo/solution
        or, if you haven''t finished the puzzle yet, you can always create your own
        thread and make sure to flair it with `Help`.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;blockquote&gt;\n&lt;h1&gt;Top-level posts in Solution
        Megathreads are for &lt;em&gt;code solutions&lt;/em&gt; only.&lt;/h1&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This
        is a top-level post, so please edit your post and share your code/repo/solution
        or, if you haven&amp;#39;t finished the puzzle yet, you can always create
        your own thread and make sure to flair it with &lt;code&gt;Help&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwmwq4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwmwq4", "created":
        1638429862.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638335579.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmreik6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Biggergig",
        "can_mod_post": false, "created_utc": 1638335323.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_oem7r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 357/147**\n\n    from utils.aocUtils import *\n    def main(input:str):\n        nums
        = readNums(input)\n        p1 = 0\n        for i,n in enumerate(nums):\n        \tif
        n&gt;nums[i-1]:\n        \t\tp1+=1\n        sliding = [nums[n]+nums[n+1]+nums[n+2]
        for n in range(len(nums)-2)]\n        p2 = 0\n        for i,n in enumerate(sliding):\n        \tif
        n&gt;sliding[i-1]:\n        \t\tp2+=1\n    return (p1, p2)\n\n[https://github.com/Anshuman-UCSB/Advent-Of-Code/blob/master/2021/Python/src/day01.py](https://github.com/Anshuman-UCSB/Advent-Of-Code/blob/master/2021/Python/src/day01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python
        357/147&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from utils.aocUtils
        import *\ndef main(input:str):\n    nums = readNums(input)\n    p1 = 0\n    for
        i,n in enumerate(nums):\n        if n&amp;gt;nums[i-1]:\n            p1+=1\n    sliding
        = [nums[n]+nums[n+1]+nums[n+2] for n in range(len(nums)-2)]\n    p2 = 0\n    for
        i,n in enumerate(sliding):\n        if n&amp;gt;sliding[i-1]:\n            p2+=1\nreturn
        (p1, p2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Anshuman-UCSB/Advent-Of-Code/blob/master/2021/Python/src/day01.py\"&gt;https://github.com/Anshuman-UCSB/Advent-Of-Code/blob/master/2021/Python/src/day01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmreik6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmreik6", "created":
        1638335323.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrel8t",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "frontpageminus",
        "can_mod_post": false, "created_utc": 1638335363.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_9akbj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby 930/626\n\n[paste](https://topaz.github.io/paste/#XQAAAQDLAQAAAAAAAAARiAqGkkN7pOxE/i+5OLDe05IXgS2qncloTxIqhlc9i6FuSU224aGk++UCtFvqS/pAFLhmHr2+ryAX6wkyWrE/xAWAY66qogr6zl3OnESY8FEIXZBLlC+f3MD8UmbUkyCP4SHfO7irP0dTJAEOvviNiuYn5/O4GzFfwnmGduXdbaAvR3qH1uTDzkkb4C+B+dUq7cYkcSXT+OHYBOtnQDTDZWQ4fDVHZRFtYitXRg0RHtn9SCXFngt4Id39RhiVxQeoY0wOUQBMFuAOZi4rvMYWPrnmwM0WQgh1CGD+9T+7Aw==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby 930/626&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDLAQAAAAAAAAARiAqGkkN7pOxE/i+5OLDe05IXgS2qncloTxIqhlc9i6FuSU224aGk++UCtFvqS/pAFLhmHr2+ryAX6wkyWrE/xAWAY66qogr6zl3OnESY8FEIXZBLlC+f3MD8UmbUkyCP4SHfO7irP0dTJAEOvviNiuYn5/O4GzFfwnmGduXdbaAvR3qH1uTDzkkb4C+B+dUq7cYkcSXT+OHYBOtnQDTDZWQ4fDVHZRFtYitXRg0RHtn9SCXFngt4Id39RhiVxQeoY0wOUQBMFuAOZi4rvMYWPrnmwM0WQgh1CGD+9T+7Aw==\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrel8t/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrel8t", "created":
        1638335363.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmren52",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "seligman99",
        "can_mod_post": false, "created_utc": 1638335392.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_3syc5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python, 1049 / 631\n\nAnd we''re off!  And as is expected for me, I spent
        too long on silly bugs before I could post a result.\n\n[github](https://github.com/seligman/aoc/blob/master/2021/Helpers/day_01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python, 1049 / 631&lt;/p&gt;\n\n&lt;p&gt;And
        we&amp;#39;re off!  And as is expected for me, I spent too long on silly bugs
        before I could post a result.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/seligman/aoc/blob/master/2021/Helpers/day_01.py\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmren52/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmren52", "created":
        1638335392.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmreons", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmreons", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmreons/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638335416.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638335416.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_hmrj21j", "id": "hmrj21j", "parent_id":
        "t1_hmreons", "depth": 1, "children": ["hmrj21j"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmretnt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**Python 3 (Jupyter Notebook)**  \n\n\nhttps://colab.research.google.com/drive/1dQBzPeSkSDDTBnMlefiPP9qFd6g7oyMF?usp=sharing",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmretnt",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python
        3 (Jupyter Notebook)&lt;/strong&gt;  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://colab.research.google.com/drive/1dQBzPeSkSDDTBnMlefiPP9qFd6g7oyMF?usp=sharing\"&gt;https://colab.research.google.com/drive/1dQBzPeSkSDDTBnMlefiPP9qFd6g7oyMF?usp=sharing&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmretnt/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638335491.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638335491.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrezlc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "yutu58",
        "can_mod_post": false, "created_utc": 1638335582.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_3mdwvsu0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java 41 / 103\n\n[paste](https://topaz.github.io/paste/#XQAAAQANAwAAAAAAAAAX4bzCdV7tiRgR5OX0DGk/JLgiCi5YBHDzG0SgPlW4UvfpsXhwzPNFINSkhc+Syk5M2tgV98f2qXrnYvqlFv9vdBxK5i6Y7YFkEnTkziRlKKF87Gz8kMcaruZmGhQSjoWUgoOKwcR6VNSqF/4imZ5JbQ7ZAqQMBI9XTi1Lwiq9rjTTcIqd24fhJp4CtAz4hYPCcztq46K8bjnCN73V0sxacRDZsTHPcPQzNdkDV+SnITtFVq6HGANnOaGEgNYpVfgQOh+Y4LRr8OTRZkS/8Pphe9yYlnR2+xlaZdFFVw1uccUWM6DaRv34t2qH8L2JIt+IHmmQGYQy2mJwOxWuOXj2M/gfZgiWWVRk60GHb1WD4M7PnCjB1ehz1g8AN2hrgfzK8Tc=)\n\n(Not
        complete runnable code but the useful parts)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Java 41 / 103&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQANAwAAAAAAAAAX4bzCdV7tiRgR5OX0DGk/JLgiCi5YBHDzG0SgPlW4UvfpsXhwzPNFINSkhc+Syk5M2tgV98f2qXrnYvqlFv9vdBxK5i6Y7YFkEnTkziRlKKF87Gz8kMcaruZmGhQSjoWUgoOKwcR6VNSqF/4imZ5JbQ7ZAqQMBI9XTi1Lwiq9rjTTcIqd24fhJp4CtAz4hYPCcztq46K8bjnCN73V0sxacRDZsTHPcPQzNdkDV+SnITtFVq6HGANnOaGEgNYpVfgQOh+Y4LRr8OTRZkS/8Pphe9yYlnR2+xlaZdFFVw1uccUWM6DaRv34t2qH8L2JIt+IHmmQGYQy2mJwOxWuOXj2M/gfZgiWWVRk60GHb1WD4M7PnCjB1ehz1g8AN2hrgfzK8Tc=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(Not
        complete runnable code but the useful parts)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrezlc/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrezlc", "created": 1638335582.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_hmrxn88", "id": "hmrxn88", "parent_id": "t1_hmrezlc", "depth": 1, "children":
        ["hmrxn88"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrf0gg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Gurrewe",
        "can_mod_post": false, "created_utc": 1638335595.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_5308z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Go (2182/2023)**\n\n[https://getsturdy.com/advent-of-code-2021-uoeIDQk/browse/day01/gustav/main.go](https://getsturdy.com/advent-of-code-2021-uoeIDQk/browse/day01/gustav/main.go)\n\nSuper
        fun to get started! I hope that everyone''s day 1 was a success!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Go (2182/2023)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://getsturdy.com/advent-of-code-2021-uoeIDQk/browse/day01/gustav/main.go\"&gt;https://getsturdy.com/advent-of-code-2021-uoeIDQk/browse/day01/gustav/main.go&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Super
        fun to get started! I hope that everyone&amp;#39;s day 1 was a success!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf0gg/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrf0gg", "created":
        1638335595.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrf0j6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "coriandor",
        "can_mod_post": false, "created_utc": 1638335596.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_84lyo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Crystal solution. Managed to get top 1000 even with an error in my repo setup.\n\n    nums
        = File.open(\"input.txt\").each_line.map{|line| line.to_i}.to_a\n\n    puts
        (1...nums.size).count do |i|\n      nums[i] &gt; nums[i-1]\n    end\n\n    puts
        (3...nums.size).count do |i|\n      nums[i] + nums[i-1] + nums[i-2] &gt; nums[i-1]
        + nums[i-2] + nums[i-3]\n    end", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Crystal solution. Managed to get top 1000 even with
        an error in my repo setup.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;nums = File.open(&amp;quot;input.txt&amp;quot;).each_line.map{|line|
        line.to_i}.to_a\n\nputs (1...nums.size).count do |i|\n  nums[i] &amp;gt; nums[i-1]\nend\n\nputs
        (3...nums.size).count do |i|\n  nums[i] + nums[i-1] + nums[i-2] &amp;gt; nums[i-1]
        + nums[i-2] + nums[i-3]\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf0j6/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrf0j6", "created": 1638335596.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638510788.0, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrf2g0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hugh_tc",
        "can_mod_post": false, "created_utc": 1638335626.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_945c23t8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 3**, &gt;1000/419.\n\n[Part 1](https://topaz.github.io/paste/#XQAAAQBuAAAAAAAAAAAyGUj/T32X5leZ5SEbDbnegok97v5oVmshJ/4d2Q+qVTdV/rcwwL6g/pu1CD1ANzskTRY9udSMROyfajHMi0+7nTjbih1rv2sdrQ2OvAVD//9e2oAA),
        [Part 2](https://topaz.github.io/paste/#XQAAAQCQAAAAAAAAAAAyGUj/T32X5leZ5SEbDbnegok97v5oVmshJ/4d2RBhs6rv1RDcR5LQkk3u/EH+64PMcpbHWUZkE0IIT8DHRNonD/xFQ1hpwP8wgk+nfWqf6/TK51Sngu3V6tLpyxEe2Qz//UDJwA==),
        and (edit) the [cleaned-up version](https://topaz.github.io/paste/#XQAAAQB+AAAAAAAAAAAyGUj/T32X5leZ5SEbDbnegok+Egm1Fy/Wt2oI7BXkT7jYARUZWz+95ktnhzBuJ7P4R+bgM4e1/KuuujgfteAycdywoWOjx2dliWbJ3//ZDyAA).\n\nScrewed
        up big time on part 1; had an `&gt;` facing the wrong way. D''oh. That''s
        why you should always warm up, kids!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python 3&lt;/strong&gt;, &amp;gt;1000/419.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBuAAAAAAAAAAAyGUj/T32X5leZ5SEbDbnegok97v5oVmshJ/4d2Q+qVTdV/rcwwL6g/pu1CD1ANzskTRY9udSMROyfajHMi0+7nTjbih1rv2sdrQ2OvAVD//9e2oAA\"&gt;Part
        1&lt;/a&gt;, &lt;a href=\"https://topaz.github.io/paste/#XQAAAQCQAAAAAAAAAAAyGUj/T32X5leZ5SEbDbnegok97v5oVmshJ/4d2RBhs6rv1RDcR5LQkk3u/EH+64PMcpbHWUZkE0IIT8DHRNonD/xFQ1hpwP8wgk+nfWqf6/TK51Sngu3V6tLpyxEe2Qz//UDJwA==\"&gt;Part
        2&lt;/a&gt;, and (edit) the &lt;a href=\"https://topaz.github.io/paste/#XQAAAQB+AAAAAAAAAAAyGUj/T32X5leZ5SEbDbnegok+Egm1Fy/Wt2oI7BXkT7jYARUZWz+95ktnhzBuJ7P4R+bgM4e1/KuuujgfteAycdywoWOjx2dliWbJ3//ZDyAA\"&gt;cleaned-up
        version&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Screwed up big time on part 1; had
        an &lt;code&gt;&amp;gt;&lt;/code&gt; facing the wrong way. D&amp;#39;oh. That&amp;#39;s
        why you should always warm up, kids!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf2g0/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrf2g0", "created": 1638335626.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrf87m", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "heyitsmattwade", "can_mod_post": false,
        "created_utc": 1638335711.0, "send_replies": true, "parent_id": "t3_r66vow",
        "score": 1, "author_fullname": "t2_985du", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Javascript 529/324\n\n###
        Part One\n\n    input.reduce((sum, num, i) =&gt; (i &lt; 1 ? 0 : (num &gt;
        input[i - 1] ? sum + 1 : sum)), 0)\n\n### Part Two\n\n    input.reduce(\n        (sum,
        num, i, a) =&gt;\n            i &lt; 3\n                ? 0\n                :
        (num + a[i - 1] + a[i - 2]) &gt; (a[i - 3] + a[i - 2] + a[i - 1])\n                ?
        sum + 1\n                : sum,\n        0\n    )", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Javascript 529/324&lt;/p&gt;\n\n&lt;h3&gt;Part One&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;input.reduce((sum,
        num, i) =&amp;gt; (i &amp;lt; 1 ? 0 : (num &amp;gt; input[i - 1] ? sum + 1
        : sum)), 0)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Part Two&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;input.reduce(\n    (sum,
        num, i, a) =&amp;gt;\n        i &amp;lt; 3\n            ? 0\n            :
        (num + a[i - 1] + a[i - 2]) &amp;gt; (a[i - 3] + a[i - 2] + a[i - 1])\n            ?
        sum + 1\n            : sum,\n    0\n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf87m/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrf87m", "created":
        1638335711.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638339437.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrf9ck", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "IceSentry",
        "can_mod_post": false, "created_utc": 1638335728.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_cqjq2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust\n\n    pub fn parse(input: &amp;str) -&gt; Vec&lt;i32&gt;{\n        input.lines().map(|l|
        l.parse().unwrap()).collect()\n    }\n    \n    pub fn part_1(input: &amp;Vec&lt;i32&gt;)
        -&gt; usize {\n        let mut count = 0;\n        for values in input.windows(2)
        {\n            if values[0] &lt; values[1] {\n                count += 1;\n            }\n        }\n        count\n    }\n    \n    pub
        fn part_2(input: &amp;Vec&lt;i32&gt;) -&gt; usize {\n        let mut last
        = i32::MAX;\n        let mut count = 0;\n        for values in input.windows(3)
        {\n            let sum = values.iter().sum();\n            if sum &gt; last
        {\n                count += 1;\n            }\n            last = sum;\n        }\n        count\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn parse(input: &amp;amp;str) -&amp;gt; Vec&amp;lt;i32&amp;gt;{\n    input.lines().map(|l|
        l.parse().unwrap()).collect()\n}\n\npub fn part_1(input: &amp;amp;Vec&amp;lt;i32&amp;gt;)
        -&amp;gt; usize {\n    let mut count = 0;\n    for values in input.windows(2)
        {\n        if values[0] &amp;lt; values[1] {\n            count += 1;\n        }\n    }\n    count\n}\n\npub
        fn part_2(input: &amp;amp;Vec&amp;lt;i32&amp;gt;) -&amp;gt; usize {\n    let
        mut last = i32::MAX;\n    let mut count = 0;\n    for values in input.windows(3)
        {\n        let sum = values.iter().sum();\n        if sum &amp;gt; last {\n            count
        += 1;\n        }\n        last = sum;\n    }\n    count\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrf9ck/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrf9ck", "created":
        1638335728.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfhj6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bunceandbean",
        "can_mod_post": false, "created_utc": 1638335853.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_8n8m52as", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3\n\n    with open(\"input.txt\") as f:\n        nums = list(map(int,f.read().split(\"\\n\")[:~0]))\n    \n    sums
        = [sum(nums[i:i+3]) for i in range(len(nums))]\n    answer_one = str(len([i
        for i in range(1,len(nums)) if nums[i]&gt;nums[i-1]]))\n    answer_two = str(len([i
        for i in range(1,len(sums)) if sums[i]&gt;sums[i-1]]))\n    print(\"p1: \"
        + answer_one)\n    print(\"p2: \" + answer_two)\n\nNice and easy first puzzle!
        The part 2 got me at first because I am incapable of reading lol.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;input.txt&amp;quot;) as f:\n    nums = list(map(int,f.read().split(&amp;quot;\\n&amp;quot;)[:~0]))\n\nsums
        = [sum(nums[i:i+3]) for i in range(len(nums))]\nanswer_one = str(len([i for
        i in range(1,len(nums)) if nums[i]&amp;gt;nums[i-1]]))\nanswer_two = str(len([i
        for i in range(1,len(sums)) if sums[i]&amp;gt;sums[i-1]]))\nprint(&amp;quot;p1:
        &amp;quot; + answer_one)\nprint(&amp;quot;p2: &amp;quot; + answer_two)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Nice
        and easy first puzzle! The part 2 got me at first because I am incapable of
        reading lol.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfhj6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfhj6", "created":
        1638335853.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrfr8r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Tocko7373",
        "can_mod_post": false, "created_utc": 1638335999.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_7s9exqh4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java\n\nPart1:  \n`public class Part1 {`  \n`public static void main(String[]
        args){`  \n`String data = ReadInput.getString(\"AOC_2021.day1\"); // getting
        the puzzle input`  \n`String[] d = data.split(\"\\n\");`  \n`int prev = Integer.parseInt(d[0]);`  \n`int
        total = 0;`  \n`for (int i=1;i&lt;d.length;i++){`  \n`if (Integer.parseInt(d[i])&gt;prev){`  \n`total++;`  \n`}`  \n`prev
        = Integer.parseInt(d[i]);`  \n`}`  \n`System.out.println(total);`  \n`}`  \n`}`  \n\n\nPart2:\n\n`public
        class Part2 {`  \n`public static void main(String[] args){`  \n`String data
        = ReadInput.getString(\"AOC_2021.day1\"); //get puzzle input`  \n`String[]
        d = data.split(\"\\n\");`  \n  \n`int prev = Integer.parseInt(d[0]) + Integer.parseInt(d[1])
        + Integer.parseInt(d[2]);`  \n`int total = 0;`  \n`for (int i=3;i&lt;d.length;i++){`  \n`if
        (Integer.parseInt(d[i])+prev - Integer.parseInt(d[i-3])&gt;prev){`  \n`total++;`  \n`}`  \n`prev
        += Integer.parseInt(d[i]);`  \n`prev -= Integer.parseInt(d[i-3]);`  \n`}`  \n`System.out.println(total);`  \n`}`  \n`}`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java&lt;/p&gt;\n\n&lt;p&gt;Part1:&lt;br/&gt;\n&lt;code&gt;public
        class Part1 {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;public static void main(String[]
        args){&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;String data = ReadInput.getString(&amp;quot;AOC_2021.day1&amp;quot;);
        // getting the puzzle input&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;String[]
        d = data.split(&amp;quot;\\n&amp;quot;);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;int
        prev = Integer.parseInt(d[0]);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;int total
        = 0;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;for (int i=1;i&amp;lt;d.length;i++){&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;if
        (Integer.parseInt(d[i])&amp;gt;prev){&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;total++;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;prev
        = Integer.parseInt(d[i]);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;System.out.println(total);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;  &lt;/p&gt;\n\n&lt;p&gt;Part2:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;public
        class Part2 {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;public static void main(String[]
        args){&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;String data = ReadInput.getString(&amp;quot;AOC_2021.day1&amp;quot;);
        //get puzzle input&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;String[] d = data.split(&amp;quot;\\n&amp;quot;);&lt;/code&gt;  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;int
        prev = Integer.parseInt(d[0]) + Integer.parseInt(d[1]) + Integer.parseInt(d[2]);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;int
        total = 0;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;for (int i=3;i&amp;lt;d.length;i++){&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;if
        (Integer.parseInt(d[i])+prev - Integer.parseInt(d[i-3])&amp;gt;prev){&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;total++;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;prev
        += Integer.parseInt(d[i]);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;prev -= Integer.parseInt(d[i-3]);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;System.out.println(total);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrfr8r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrfr8r", "created":
        1638335999.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrgogl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638336500.0, "send_replies": true,
        "parent_id": "t1_hmrfr8r", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgogl/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgogl", "created":
        1638336500.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmriplw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmriplw", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmriplw/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638337693.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638337693.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms2tdh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jdied",
        "can_mod_post": false, "created_utc": 1638352911.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_h40w2x0v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\n```\ninput = \\\n\"\"\"\n187\n195\n#...\n\"\"\"\na = [int(s) for
        s in input.splitlines() if len(s) &gt; 0]\n\nday1 = 0\nfor i in range(1, len(a)):\n  if
        a[i - 1] &lt; a[i]:\n    day1 +=1\n\nday2 = 0\nfor i in range(1, len(a) -
        2):\n  sum1 = a[i - 1] + a[i] + a[i + 1]\n  sum2 = a[i] + a[i + 1] + a[i +
        2]\n  if sum1 &lt; sum2:\n    day2 += 1\n\nprint(f\"{day1}\\n{day2}\")\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;p&gt;```\ninput
        = \\\n&amp;quot;&amp;quot;&amp;quot;\n187\n195&lt;/p&gt;\n\n&lt;h1&gt;...&lt;/h1&gt;\n\n&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;\na
        = [int(s) for s in input.splitlines() if len(s) &amp;gt; 0]&lt;/p&gt;\n\n&lt;p&gt;day1
        = 0\nfor i in range(1, len(a)):\n  if a[i - 1] &amp;lt; a[i]:\n    day1 +=1&lt;/p&gt;\n\n&lt;p&gt;day2
        = 0\nfor i in range(1, len(a) - 2):\n  sum1 = a[i - 1] + a[i] + a[i + 1]\n  sum2
        = a[i] + a[i + 1] + a[i + 2]\n  if sum1 &amp;lt; sum2:\n    day2 += 1&lt;/p&gt;\n\n&lt;p&gt;print(f&amp;quot;{day1}\\n{day2}&amp;quot;)\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms2tdh/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms2tdh", "created":
        1638352911.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms4bbg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638354210.0, "send_replies": true,
        "parent_id": "t1_hms2tdh", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms4bbg/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms4bbg", "created":
        1638354210.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 0, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtz1iz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jdied",
        "can_mod_post": false, "created_utc": 1638386330.0, "send_replies": true,
        "parent_id": "t1_hms4bbg", "score": 0, "author_fullname": "t2_h40w2x0v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hey, thanks for letting me know!\n\nI''ll stop using reddit.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Hey, thanks for letting me know!&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ll
        stop using reddit.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtz1iz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtz1iz", "created":
        1638386330.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms6qq4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pranav_2702",
        "can_mod_post": false, "created_utc": 1638356229.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_20cl976e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[C++](https://github.com/pranavdhawan/AdventOfCode2021)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/pranavdhawan/AdventOfCode2021\"&gt;C++&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms6qq4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms6qq4", "created":
        1638356229.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms97z3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Haskell\n\n```\npart1 :: [Int] -&gt; Int\npart1 [] =
        0\npart1 [_] = 0\npart1 (x:y:xs) = if y &gt; x then 1 + part1 (y : xs) else
        part1(y : xs)\n\npart2 :: [Int] -&gt; Int\npart2 = part1 . s\n    where s
        :: [Int] -&gt; [Int]\n          s (x:y:z:xs) = (x + y + z) : s (y : z : xs)\n          s
        _ = []\n\nsolve :: String -&gt; IO ()\nsolve input = putStrLn \"--- Day 01
        ---\" &gt;&gt; print (part1 $ p input) &gt;&gt; print (part2 $ p input)\n    where
        p = map read . lines\n```", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hms97z3", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell&lt;/p&gt;\n\n&lt;p&gt;```\npart1
        :: [Int] -&amp;gt; Int\npart1 [] = 0\npart1 [_] = 0\npart1 (x:y:xs) = if y
        &amp;gt; x then 1 + part1 (y : xs) else part1(y : xs)&lt;/p&gt;\n\n&lt;p&gt;part2
        :: [Int] -&amp;gt; Int\npart2 = part1 . s\n    where s :: [Int] -&amp;gt;
        [Int]\n          s (x:y:z:xs) = (x + y + z) : s (y : z : xs)\n          s
        _ = []&lt;/p&gt;\n\n&lt;p&gt;solve :: String -&amp;gt; IO ()\nsolve input
        = putStrLn &amp;quot;--- Day 01 ---&amp;quot; &amp;gt;&amp;gt; print (part1
        $ p input) &amp;gt;&amp;gt; print (part2 $ p input)\n    where p = map read
        . lines\n```&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms97z3/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638358168.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638358168.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw235p",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638417515.0, "send_replies": true,
        "parent_id": "t1_hms97z3", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw235p/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw235p", "created":
        1638417515.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 1, "name": "t1_hmsbnb2", "id": "hmsbnb2",
        "parent_id": "t1_hms97z3", "depth": 1, "children": ["hmsbnb2"]}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsdp0m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "spiikki",
        "can_mod_post": false, "created_utc": 1638361342.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_adgy9h0u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Solution in V lang\n\nGoing to put succesfull codes to [https://github.com/spiikki/aoc2021](https://github.com/spiikki/aoc2021)
        while I go.\n\npart 1\n\n```\nimport os\n\nfn main() {\n        data := os.read_lines(''input.data'')?\n        mut
        previous := 0\n        mut inc_count := 0\n        for index, measurement
        in data {\n                if index == 0 {\n                        previous
        = measurement.int() \n                        continue\n                }\n\n\t\tif
        measurement == '''' {\n\t\t        continue\n\t\t}\n\t\t\n                if
        measurement.int() &gt; previous {\n                        inc_count++\n                }\n\t\tprevious
        = measurement.int()\n        }\n        println(inc_count)\n}\n```\n\npart
        2\n\n```\nimport os\n\nfn main() {\n        data := os.read_lines(''input.data'')?\n        mut
        previous := 0\n        mut inc_count := 0\n        mut sum := 0\n        for
        index, measurement in data {\n                if index &gt; data.len-3 {\n                        break\n                }\n\n                sum
        = measurement.int() + data[index+1].int() + data[index+2].int()\n\n                if
        index == 0 {\n                        previous = sum\n                        continue\n                }\n\n\t\tif
        measurement == '''' {\n                        continue\n                }\n\n                if
        sum &gt; previous {\n                        inc_count++\n                }\n\n\t\tprevious
        = sum\n        }\n        println(inc_count)\n}\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Solution in V lang&lt;/h1&gt;\n\n&lt;p&gt;Going
        to put succesfull codes to &lt;a href=\"https://github.com/spiikki/aoc2021\"&gt;https://github.com/spiikki/aoc2021&lt;/a&gt;
        while I go.&lt;/p&gt;\n\n&lt;p&gt;part 1&lt;/p&gt;\n\n&lt;p&gt;```\nimport
        os&lt;/p&gt;\n\n&lt;p&gt;fn main() {\n        data := os.read_lines(&amp;#39;input.data&amp;#39;)?\n        mut
        previous := 0\n        mut inc_count := 0\n        for index, measurement
        in data {\n                if index == 0 {\n                        previous
        = measurement.int() \n                        continue\n                }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    if
        measurement == &amp;#39;&amp;#39; {\n            continue\n    }\n\n            if
        measurement.int() &amp;gt; previous {\n                    inc_count++\n            }\n    previous
        = measurement.int()\n    }\n    println(inc_count)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n\n&lt;p&gt;part
        2&lt;/p&gt;\n\n&lt;p&gt;```\nimport os&lt;/p&gt;\n\n&lt;p&gt;fn main() {\n        data
        := os.read_lines(&amp;#39;input.data&amp;#39;)?\n        mut previous := 0\n        mut
        inc_count := 0\n        mut sum := 0\n        for index, measurement in data
        {\n                if index &amp;gt; data.len-3 {\n                        break\n                }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;            sum
        = measurement.int() + data[index+1].int() + data[index+2].int()\n\n            if
        index == 0 {\n                    previous = sum\n                    continue\n            }\n\n    if
        measurement == &amp;#39;&amp;#39; {\n                    continue\n            }\n\n            if
        sum &amp;gt; previous {\n                    inc_count++\n            }\n\n    previous
        = sum\n    }\n    println(inc_count)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsdp0m/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsdp0m", "created":
        1638361342.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw1fo7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638417203.0, "send_replies": true,
        "parent_id": "t1_hmsdp0m", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw1fo7/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw1fo7", "created":
        1638417203.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmse2jo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jubnzv",
        "can_mod_post": false, "created_utc": 1638361590.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_11lzgz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[OCaml](https://github.com/jubnzv/aoc2021/blob/master/day1/solution.ml) solution
        using Core.\n\n[In_channel](https://ocaml.janestreet.com/ocaml-core/v0.13/doc/stdio/Stdio/In_channel/index.html)
        module helps us to solve the problem using a single function call:\n\n```\nmodule
        Part1_core = struct\n  let run () = \n    In_channel.with_file \"input.txt\"
        ~f:(fun ic -&gt;\n        In_channel.fold_lines ic\n          ~init:[0;max_int]\n          ~f:(fun
        (c::[p]) l -&gt;\n            let v = int_of_string l in if v &gt; p then
        [(c+1);v] else [c;v])\n        |&gt; List.hd_exn\n        |&gt; Printf.printf
        \"Part 1: %d\\n\")\nend\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/jubnzv/aoc2021/blob/master/day1/solution.ml\"&gt;OCaml&lt;/a&gt;
        solution using Core.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://ocaml.janestreet.com/ocaml-core/v0.13/doc/stdio/Stdio/In_channel/index.html\"&gt;In_channel&lt;/a&gt;
        module helps us to solve the problem using a single function call:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nmodule
        Part1_core = struct\n  let run () = \n    In_channel.with_file &amp;quot;input.txt&amp;quot;
        ~f:(fun ic -&amp;gt;\n        In_channel.fold_lines ic\n          ~init:[0;max_int]\n          ~f:(fun
        (c::[p]) l -&amp;gt;\n            let v = int_of_string l in if v &amp;gt;
        p then [(c+1);v] else [c;v])\n        |&amp;gt; List.hd_exn\n        |&amp;gt;
        Printf.printf &amp;quot;Part 1: %d\\n&amp;quot;)\nend\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmse2jo/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmse2jo", "created":
        1638361590.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1643726222.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsipx1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "omegacron13",
        "can_mod_post": false, "created_utc": 1638364343.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_h45r1pjc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    1", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsipx1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsipx1", "created":
        1638364343.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw12f5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638417027.0, "send_replies": true,
        "parent_id": "t1_hmsipx1", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please follow the [posting guidelines](https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines)
        and edit your post to add what language(s) you used.  This makes it easier
        for folks who Ctrl-F the megathreads looking for a specific language.\n\n(looks
        like some variant of C?)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please
        follow the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines\"&gt;posting
        guidelines&lt;/a&gt; and edit your post to add what language(s) you used.  This
        makes it easier for folks who Ctrl-F the megathreads looking for a specific
        language.&lt;/p&gt;\n\n&lt;p&gt;(looks like some variant of C?)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw12f5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw12f5", "created":
        1638417027.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638748592.0,
        "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id":
        "t3_r66vow", "author_flair_template_id": null, "likes": null, "replies": "",
        "user_reports": [], "saved": false, "id": "hmsnokd", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_r66vow", "score": 1, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[removed]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_hmsnokd", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsnokd/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638366957.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638366957.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmw0bov",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638416680.0, "send_replies": true,
        "parent_id": "t1_hmsnokd", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmw0bov/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmw0bov", "created":
        1638416680.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsrw4q", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thedjotaku",
        "can_mod_post": false, "created_utc": 1638368985.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_d7b8t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I wanted to get my Python solution (and 2 stars) before heading to work this
        morning (I had 15 minutes). So I did the first thing that came to mind. After
        posting here I plan to look at others to see how I could have been more elegant.
        (I think I could have done a list comprehension and reduce with a sum, for
        example)\n\nMy solution is [here](https://github.com/djotaku/adventofcode/blob/63d86f9d0ed40b133b1e58c3661804b3a7659bb2/2021/Day_01/Python/solution.py).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I wanted to get my Python
        solution (and 2 stars) before heading to work this morning (I had 15 minutes).
        So I did the first thing that came to mind. After posting here I plan to look
        at others to see how I could have been more elegant. (I think I could have
        done a list comprehension and reduce with a sum, for example)&lt;/p&gt;\n\n&lt;p&gt;My
        solution is &lt;a href=\"https://github.com/djotaku/adventofcode/blob/63d86f9d0ed40b133b1e58c3661804b3a7659bb2/2021/Day_01/Python/solution.py\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsrw4q/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsrw4q", "created":
        1638368985.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 113, "name": "t1_hmss2k9", "id": "hmss2k9", "parent_id":
        "t3_r66vow", "depth": 0, "children": ["hmss2k9", "hmsthqs", "hmt4tjc", "hmswb9a",
        "hmti8v3", "hmtdkt1", "hmtl0p6", "hmt5mu9", "hmto2mk", "hmubzlt", "hmtrv9z",
        "hmtl4l8", "hmts3v2", "hmtp9ng", "hmuszg8", "hmtckwf", "hmtnoc6", "hmugkix",
        "hmtxaje", "hmuu15c", "hmuxrtd", "hmuqjav", "hmurtrn", "hmtpdh1", "hmu2d91",
        "hmu9x7q", "hmut6fx", "hmu9yeq", "hmtx4jg", "hmvd24s", "hmuy7px", "hmukph5",
        "hmul9ls", "hmucq9b", "hmuvznj", "hmuwikk", "hmupvsh", "hmv7xhs", "hmua6gz",
        "hmvwd6n", "hmvqboh", "hmvbdu3", "hmvqe6x", "hmux6rf", "hmwdb3a", "hmvqsha",
        "hmuxks0", "hmuijjn", "hmvhiw7", "hmul0m8", "hmuc4p0", "hmvh953", "hmul1w0",
        "hmvnyic", "hmwn65l", "hmwx4lt", "hmvd82d", "hmvn98k", "hmxa298", "hmx4oh4",
        "hmy98ot", "hmx4u0j", "hmuwdqz", "hmx74kk", "hmwk3gr", "hmv8xhi", "hmuvxcd",
        "hmw1jxb", "hmxa4gk", "hmvvm80", "hmvy97q", "hmxf61e", "hmvcobg", "hmv06au",
        "hmwg4mh"]}}], true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmtkjc8"]],
        [13, 14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"],
        [16, 17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:21 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:21 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=hGqqMXmAb64G7ywCBv; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:21 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmss2k9,hmsthqs,hmt4tjc,hmswb9a,hmti8v3,hmtdkt1,hmtl0p6,hmt5mu9,hmto2mk,hmubzlt,hmtrv9z,hmtl4l8,hmts3v2,hmtp9ng,hmuszg8,hmtckwf,hmtnoc6,hmugkix,hmtxaje,hmuu15c,hmuxrtd,hmuqjav,hmurtrn,hmtpdh1,hmu2d91,hmu9x7q,hmut6fx,hmu9yeq,hmtx4jg,hmvd24s,hmuy7px,hmukph5,hmul9ls,hmucq9b,hmuvznj,hmuwikk,hmupvsh,hmv7xhs,hmua6gz,hmvwd6n,hmvqboh,hmvbdu3,hmvqe6x,hmux6rf,hmwdb3a,hmvqsha,hmuxks0,hmuijjn,hmvhiw7,hmul0m8,hmuc4p0,hmvh953,hmul1w0,hmvnyic,hmwn65l,hmwx4lt,hmvd82d,hmvn98k,hmxa298,hmx4oh4,hmy98ot,hmx4u0j,hmuwdqz,hmx74kk,hmwk3gr,hmv8xhi,hmuvxcd,hmw1jxb,hmxa4gk,hmvvm80,hmvy97q,hmxf61e,hmvcobg,hmv06au,hmwg4mh
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '13138'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg63efsw.2.1741472962052.Z0FBQUFBQm56TVRDYVhBZ1kzRjQxN0t6ZkdHWWFkaTdoNTVJVDJwaVpuT1RUWGNUOE5wOFlfLTQ3eXRueUJoakNmaE82UFRnTFQzUFpvcWd4TWJYT0ZCYXlRVlB0WE1ZTEo4RFU3TlhGOWR2M2VaeTJ1U2hta3pRSHFwdEFnbDBTcjQ0U0VENjBKMzM;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:22
        GMT; secure, session_tracker=iplhcmqglermihijmb.0.1741472962063.Z0FBQUFBQm56TVRDQ0gxLWRSWWp4b1o0UVVNNVQxSjdvZ0lKbjBycHNwU3hVd3pkUWZyMlJqdl9TajhHMFBkbE5YdWY2R3NGQW5ib0h2djdYMlFfNVAxcnBhNEUyWm9ITktGSHRxaTRubnVCaW4zVjhEUkltLTlQd2szd0hESkFmVDhtbHZaR0kzaHk;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:22
        GMT; secure, edgebucket=b9NAepQjvO8pmE8HES; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '66'
      x-ratelimit-remaining:
      - '34.0'
      x-ratelimit-reset:
      - '37'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:22 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtdkt1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "noidesto",
        "can_mod_post": false, "created_utc": 1638377996.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_x4gdu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\n```python\ndef part1(input):\n    return sum([1 for i, line in
        enumerate(input[1:], start=1) if line &gt; input[i-1]])\n\ndef part2(input,
        step):\n    cnt = 0\n    windows = [input[i-step:i] for i in range(step-1,
        len(input))]\n    for i, window in enumerate(windows[1:], start=1):\n        print(sum(window),
        sum(windows[i-1]))\n        if sum(window) &gt; sum(windows[i-1]):\n            cnt
        += 1\n    return cnt\n\ndef main():\n    with open(\"day1.txt\") as f:\n        lines
        = [int(line) for line in f.read().splitlines()]\n        print(\"part1\",
        part1(lines))\n        print(\"part2\", part2(lines, 3))\n\nif __name__ ==
        \"__main__\":\n    main()\n```", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;p&gt;```python\ndef part1(input):\n    return
        sum([1 for i, line in enumerate(input[1:], start=1) if line &amp;gt; input[i-1]])&lt;/p&gt;\n\n&lt;p&gt;def
        part2(input, step):\n    cnt = 0\n    windows = [input[i-step:i] for i in
        range(step-1, len(input))]\n    for i, window in enumerate(windows[1:], start=1):\n        print(sum(window),
        sum(windows[i-1]))\n        if sum(window) &amp;gt; sum(windows[i-1]):\n            cnt
        += 1\n    return cnt&lt;/p&gt;\n\n&lt;p&gt;def main():\n    with open(&amp;quot;day1.txt&amp;quot;)
        as f:\n        lines = [int(line) for line in f.read().splitlines()]\n        print(&amp;quot;part1&amp;quot;,
        part1(lines))\n        print(&amp;quot;part2&amp;quot;, part2(lines, 3))&lt;/p&gt;\n\n&lt;p&gt;if
        &lt;strong&gt;name&lt;/strong&gt; == &amp;quot;&lt;strong&gt;main&lt;/strong&gt;&amp;quot;:\n    main()\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtdkt1/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtdkt1", "created":
        1638377996.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtzyzb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638386683.0, "send_replies": true,
        "parent_id": "t1_hmtdkt1", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtzyzb/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtzyzb", "created":
        1638386683.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtrv9z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lbreede",
        "can_mod_post": false, "created_utc": 1638383558.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_4jl9zkr4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "my solution to day 1 in Python\n```python\ndef list_from_file(filename):\n\t    with
        open (filename) as fp:\n\t\t        return [int(x) for x in fp.read().split(\"\\n\")]\n\ndef
        count_increased(lst):\n\t    increased = 0\n\t    for i in range(len(lst)):\n\t\t        j
        = max(i - 1, 0)\n\t\t        if lst[i] &gt; lst[j]:\n\t\t\t            increased
        += 1\n\t    return increased\n\ndef combine_data(lst, window):\n\t    new_lst
        = []\n\t    for i in range(len(lst)-window+1):\n\t\t        val = 0\n\t\t        for
        j in range(window):\n\t\t\t            val += lst[i+j]\n\t\t        new_lst.append(val)\n    \treturn
        new_lst\n\ndef main():\n\t    depthlist = list_from_file(\"input.txt\")\n    \tprint(\"Part
        1: {}\".format(count_increased(depthlist)))\n\t    new_depthlist = combine_data(depthlist,
        3)\n    \tprint(\"Part 2: {}\".format(count_increased(new_depthlist)))\n\nif
        __name__ == ''__main__'':\n    \tmain()\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;my solution to day 1 in Python\n```python\ndef list_from_file(filename):\n        with
        open (filename) as fp:\n                return [int(x) for x in fp.read().split(&amp;quot;\\n&amp;quot;)]&lt;/p&gt;\n\n&lt;p&gt;def
        count_increased(lst):\n        increased = 0\n        for i in range(len(lst)):\n                j
        = max(i - 1, 0)\n                if lst[i] &amp;gt; lst[j]:\n                        increased
        += 1\n        return increased&lt;/p&gt;\n\n&lt;p&gt;def combine_data(lst,
        window):\n        new_lst = []\n        for i in range(len(lst)-window+1):\n                val
        = 0\n                for j in range(window):\n                        val
        += lst[i+j]\n                new_lst.append(val)\n        return new_lst&lt;/p&gt;\n\n&lt;p&gt;def
        main():\n        depthlist = list_from_file(&amp;quot;input.txt&amp;quot;)\n        print(&amp;quot;Part
        1: {}&amp;quot;.format(count_increased(depthlist)))\n        new_depthlist
        = combine_data(depthlist, 3)\n        print(&amp;quot;Part 2: {}&amp;quot;.format(count_increased(new_depthlist)))&lt;/p&gt;\n\n&lt;p&gt;if
        &lt;strong&gt;name&lt;/strong&gt; == &amp;#39;&lt;strong&gt;main&lt;/strong&gt;&amp;#39;:\n        main()\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtrv9z/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtrv9z", "created":
        1638383558.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtyk95",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638386145.0, "send_replies": true,
        "parent_id": "t1_hmtrv9z", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtyk95/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtyk95", "created":
        1638386145.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638571920.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmts3v2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sappapp",
        "can_mod_post": false, "created_utc": 1638383651.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_64a8q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python\n\n1\n\n    from sys import stdin\n    \n    cur, prev, inc = 0,
        0, 0\n    for line in stdin:\n        if cur == 0:\n            cur = int(line)\n        else:\n            prev
        = cur\n            cur = int(line)\n            if cur &gt; prev:\n                inc
        += 1\n    print(inc)\n\n2\n\n    from sys import stdin\n    \n    cur, prev,
        inc, win = 0, 0, 0, [0, 0, 0]\n    for line in stdin:\n        win[0] = win[1]\n        win[1]
        = win[2]\n        win[2] = int(line)\n        if win[0] != 0:\n            if
        cur == 0:\n                cur = sum(win)\n            else:\n                prev
        = cur\n                cur = sum(win)\n                if cur &gt; prev:\n                    inc
        += 1\n    print(inc)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        sys import stdin\n\ncur, prev, inc = 0, 0, 0\nfor line in stdin:\n    if cur
        == 0:\n        cur = int(line)\n    else:\n        prev = cur\n        cur
        = int(line)\n        if cur &amp;gt; prev:\n            inc += 1\nprint(inc)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        sys import stdin\n\ncur, prev, inc, win = 0, 0, 0, [0, 0, 0]\nfor line in
        stdin:\n    win[0] = win[1]\n    win[1] = win[2]\n    win[2] = int(line)\n    if
        win[0] != 0:\n        if cur == 0:\n            cur = sum(win)\n        else:\n            prev
        = cur\n            cur = sum(win)\n            if cur &amp;gt; prev:\n                inc
        += 1\nprint(inc)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmts3v2/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmts3v2", "created": 1638383651.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638484205.0, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmtyjft",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638386136.0, "send_replies": true,
        "parent_id": "t1_hmts3v2", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtyjft/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtyjft", "created":
        1638386136.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmu2d91", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Happy_Laulo_33",
        "can_mod_post": false, "created_utc": 1638387609.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_gxx1xcca", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "In ruby :  \n\n\ndef count  \n  result = \\[\\]  \n  measures = File.read(''puzzle1.txt'').split(''
        '')  \n  measures\\[0...-1\\].each\\_cons(2) do |first, second|  \nif second.to\\_i
        &gt; first.to\\_i  \nresult &lt;&lt; second  \nend  \n  end  \n  puts result.count  \nend  \ncount",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In ruby :  &lt;/p&gt;\n\n&lt;p&gt;def
        count&lt;br/&gt;\n  result = []&lt;br/&gt;\n  measures = File.read(&amp;#39;puzzle1.txt&amp;#39;).split(&amp;#39;
        &amp;#39;)&lt;br/&gt;\n  measures[0...-1].each_cons(2) do |first, second|&lt;br/&gt;\nif
        second.to_i &amp;gt; first.to_i&lt;br/&gt;\nresult &amp;lt;&amp;lt; second&lt;br/&gt;\nend&lt;br/&gt;\n  end&lt;br/&gt;\n  puts
        result.count&lt;br/&gt;\nend&lt;br/&gt;\ncount&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmu2d91/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmu2d91", "created": 1638387609.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmvupw8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1638414129.0, "send_replies": true, "parent_id": "t1_hmu2d91",
        "score": 1, "author_fullname": "t2_60niu", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Your code is hard
        to read on old.reddit.  Please edit it as per our posting guidelines in the
        wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvupw8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvupw8", "created":
        1638414129.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638466429.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmua6gz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "iGodhand",
        "can_mod_post": false, "created_utc": 1638390594.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_eupj9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "pandas is here\n\n    df = pd.read_csv(\"Input.txt\", header=None)\n    df.columns
        = [''val'']\n    df_sum = df.rolling(3).sum()\n    df_sum[''prev''] = df_sum[''val''].shift(1)\n    df_sum[''compare'']
        = np.where( df_sum[''prev''] &gt; df_sum[''val''] , \"Decreased\", np.where(df_sum[''prev'']
        &lt; df_sum[''val''], \"Increased\", np.where(df_sum[''prev''] == df_sum[''val''],
        \"Equal\", \"-\" ) ))\n    df_group = df_sum.groupby([''compare'']).size().reset_index()\n    print(df_group)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;pandas is here&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;df
        = pd.read_csv(&amp;quot;Input.txt&amp;quot;, header=None)\ndf.columns = [&amp;#39;val&amp;#39;]\ndf_sum
        = df.rolling(3).sum()\ndf_sum[&amp;#39;prev&amp;#39;] = df_sum[&amp;#39;val&amp;#39;].shift(1)\ndf_sum[&amp;#39;compare&amp;#39;]
        = np.where( df_sum[&amp;#39;prev&amp;#39;] &amp;gt; df_sum[&amp;#39;val&amp;#39;]
        , &amp;quot;Decreased&amp;quot;, np.where(df_sum[&amp;#39;prev&amp;#39;] &amp;lt;
        df_sum[&amp;#39;val&amp;#39;], &amp;quot;Increased&amp;quot;, np.where(df_sum[&amp;#39;prev&amp;#39;]
        == df_sum[&amp;#39;val&amp;#39;], &amp;quot;Equal&amp;quot;, &amp;quot;-&amp;quot;
        ) ))\ndf_group = df_sum.groupby([&amp;#39;compare&amp;#39;]).size().reset_index()\nprint(df_group)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmua6gz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmua6gz", "created":
        1638390594.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638484161.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvu22u", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638413854.0, "send_replies": true,
        "parent_id": "t1_hmua6gz", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvu22u/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvu22u", "created":
        1638413854.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638424096.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuc4p0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Robert_TT",
        "can_mod_post": false, "created_utc": 1638391320.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_4ejaboh5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Part1(Ruby)](https://imgur.com/a/OBn7fA1)\n\n[Part2\\[Ruby\\]](https://imgur.com/a/dPwGJT0)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://imgur.com/a/OBn7fA1\"&gt;Part1(Ruby)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://imgur.com/a/dPwGJT0\"&gt;Part2[Ruby]&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuc4p0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuc4p0", "created":
        1638391320.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv4m2n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1638402809.0, "send_replies": true,
        "parent_id": "t1_hmuc4p0", "score": 2, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "can you indent your code so it''s put in code blocks?\n\nalso, have you seen
        the ruby method [`each_cons`](https://ruby-doc.org/core-3.0.2/Enumerable.html#method-i-each_cons)?",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;can you indent your
        code so it&amp;#39;s put in code blocks?&lt;/p&gt;\n\n&lt;p&gt;also, have
        you seen the ruby method &lt;a href=\"https://ruby-doc.org/core-3.0.2/Enumerable.html#method-i-each_cons\"&gt;&lt;code&gt;each_cons&lt;/code&gt;&lt;/a&gt;?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv4m2n/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv4m2n", "created":
        1638402809.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_hmyf3ht", "id": "hmyf3ht", "parent_id":
        "t1_hmv4m2n", "depth": 2, "children": ["hmyf3ht", "hmwcpgg"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvtmu8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638413671.0, "send_replies": true,
        "parent_id": "t1_hmuc4p0", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvtmu8/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvtmu8", "created":
        1638413671.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmucq9b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "antoniotto",
        "can_mod_post": false, "created_utc": 1638391539.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_cwcq0akg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This is my solution in Ruby:\n\ndepths = File.readlines(''input\\_day1.txt'',
        chomp: true).map(&amp;:to\\_i)  \nincrements = depths.each\\_cons(2)  \n.map
        { |x, y| x &lt; y ? ''increased'' : ''decreased'' }  \nanswer1 = increments.count(''increased'')  \nincrements\\_by3
        = depths.each\\_cons(3).to\\_a  \n.each\\_cons(2)  \n.map { |x, y| x &lt;
        y ? ''increased'' : ''decreased'' }  \nanswer2 = increments\\_by3.count(''increased'')",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is my solution
        in Ruby:&lt;/p&gt;\n\n&lt;p&gt;depths = File.readlines(&amp;#39;input_day1.txt&amp;#39;,
        chomp: true).map(&amp;amp;:to_i)&lt;br/&gt;\nincrements = depths.each_cons(2)&lt;br/&gt;\n.map
        { |x, y| x &amp;lt; y ? &amp;#39;increased&amp;#39; : &amp;#39;decreased&amp;#39;
        }&lt;br/&gt;\nanswer1 = increments.count(&amp;#39;increased&amp;#39;)&lt;br/&gt;\nincrements_by3
        = depths.each_cons(3).to_a&lt;br/&gt;\n.each_cons(2)&lt;br/&gt;\n.map { |x,
        y| x &amp;lt; y ? &amp;#39;increased&amp;#39; : &amp;#39;decreased&amp;#39;
        }&lt;br/&gt;\nanswer2 = increments_by3.count(&amp;#39;increased&amp;#39;)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmucq9b/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmucq9b", "created":
        1638391539.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmv1anu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1638401316.0, "send_replies": true,
        "parent_id": "t1_hmucq9b", "score": 3, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "several suggestions for shortening your code and making it a bit more readable\n\n*
        you don''t need `chomp: true`, your `map(&amp;:to_i)` will parse the newlines
        just fine\n* you don''t need to map to ''increased'' or ''decreased'', you
        can simply count using the block option, e.g. `count { x &lt; y }`\n* I''m
        not sure how your part 2 works, it doesn''t seem like you''re summing your
        each_cons(3), so you''re going to be getting the wrong answer there. \n\nHere''s
        my solution if you care. \nhttps://github.com/snowe2010/advent-of-code/blob/master/ruby_aoc/2021/day01/day01.rb",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;several suggestions
        for shortening your code and making it a bit more readable&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;you
        don&amp;#39;t need &lt;code&gt;chomp: true&lt;/code&gt;, your &lt;code&gt;map(&amp;amp;:to_i)&lt;/code&gt;
        will parse the newlines just fine&lt;/li&gt;\n&lt;li&gt;you don&amp;#39;t
        need to map to &amp;#39;increased&amp;#39; or &amp;#39;decreased&amp;#39;,
        you can simply count using the block option, e.g. &lt;code&gt;count { x &amp;lt;
        y }&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;I&amp;#39;m not sure how your part
        2 works, it doesn&amp;#39;t seem like you&amp;#39;re summing your each_cons(3),
        so you&amp;#39;re going to be getting the wrong answer there. &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Here&amp;#39;s
        my solution if you care. \n&lt;a href=\"https://github.com/snowe2010/advent-of-code/blob/master/ruby_aoc/2021/day01/day01.rb\"&gt;https://github.com/snowe2010/advent-of-code/blob/master/ruby_aoc/2021/day01/day01.rb&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv1anu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv1anu", "created":
        1638401316.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_hmve0d5", "id": "hmve0d5", "parent_id":
        "t1_hmv1anu", "depth": 2, "children": ["hmve0d5", "hmvef6w"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvtlpn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638413658.0, "send_replies": true,
        "parent_id": "t1_hmucq9b", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvtlpn/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvtlpn", "created":
        1638413658.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638437541.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmuijjn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mavus74",
        "can_mod_post": false, "created_utc": 1638393709.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_aqoa5y78", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my solution in F# using collections: [day01.fsx](https://github.com/mariuszwojcik/AoC-2021/blob/master/Day01/day01.fsx)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my solution
        in F# using collections: &lt;a href=\"https://github.com/mariuszwojcik/AoC-2021/blob/master/Day01/day01.fsx\"&gt;day01.fsx&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuijjn/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuijjn", "created":
        1638393709.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638461290.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvsx0g", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638413370.0, "send_replies": true,
        "parent_id": "t1_hmuijjn", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvsx0g/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvsx0g", "created":
        1638413370.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638437641.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwuxwh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mavus74",
        "can_mod_post": false, "created_utc": 1638436373.0, "send_replies": true,
        "parent_id": "t1_hmvsx0g", "score": 2, "author_fullname": "t2_aqoa5y78", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Corrected - moved code to github.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Corrected - moved code to github.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwuxwh/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwuxwh", "created":
        1638436373.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638435976.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmut6fx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thibpat",
        "can_mod_post": false, "created_utc": 1638397816.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_j7bwx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My JavaScript solution, you can check my explanations on [https://youtu.be/FpIhZ8EwfJg](https://youtu.be/FpIhZ8EwfJg)\n\nThe
        code is available on github too: [https://github.com/tpatel/advent-of-code-2021/blob/main/day01.js](https://github.com/tpatel/advent-of-code-2021/blob/main/day01.js)\n\n    const
        fs = require(\"fs\");\n    \n    const lines = fs\n      .readFileSync(\"day01.txt\",
        { encoding: \"utf-8\" })\n      .split(\"\\n\")\n      .filter((x) =&gt; Boolean(x))\n      .map((x)
        =&gt; parseInt(x));\n    \n    let increased = 0;\n    \n    for (let i =
        1; i &lt; lines.length; i++) {\n      const last = lines[i - 1];\n      const
        current = lines[i];\n      if (current &gt; last) {\n        increased++;\n      }\n    }\n    \n    console.log(increased);\n    \n    let
        increased2 = 0;\n    \n    for (let i = 3; i &lt; lines.length; i++) {\n      const
        last = lines[i - 1] + lines[i - 2] + lines[i - 3];\n      const current =
        lines[i] + lines[i - 1] + lines[i - 2];\n      if (current &gt; last) {\n        increased2++;\n      }\n    }\n    \n    console.log(increased2);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My JavaScript solution,
        you can check my explanations on &lt;a href=\"https://youtu.be/FpIhZ8EwfJg\"&gt;https://youtu.be/FpIhZ8EwfJg&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The
        code is available on github too: &lt;a href=\"https://github.com/tpatel/advent-of-code-2021/blob/main/day01.js\"&gt;https://github.com/tpatel/advent-of-code-2021/blob/main/day01.js&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        fs = require(&amp;quot;fs&amp;quot;);\n\nconst lines = fs\n  .readFileSync(&amp;quot;day01.txt&amp;quot;,
        { encoding: &amp;quot;utf-8&amp;quot; })\n  .split(&amp;quot;\\n&amp;quot;)\n  .filter((x)
        =&amp;gt; Boolean(x))\n  .map((x) =&amp;gt; parseInt(x));\n\nlet increased
        = 0;\n\nfor (let i = 1; i &amp;lt; lines.length; i++) {\n  const last = lines[i
        - 1];\n  const current = lines[i];\n  if (current &amp;gt; last) {\n    increased++;\n  }\n}\n\nconsole.log(increased);\n\nlet
        increased2 = 0;\n\nfor (let i = 3; i &amp;lt; lines.length; i++) {\n  const
        last = lines[i - 1] + lines[i - 2] + lines[i - 3];\n  const current = lines[i]
        + lines[i - 1] + lines[i - 2];\n  if (current &amp;gt; last) {\n    increased2++;\n  }\n}\n\nconsole.log(increased2);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmut6fx/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmut6fx", "created":
        1638397816.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638461448.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvovlh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638411626.0, "send_replies": true,
        "parent_id": "t1_hmut6fx", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; # ~~Top-level posts in Solution Megathreads are for *code solutions*
        only.~~\n\n~~This is a top-level post, so please edit your post and share
        your *text* code/repo/solution.  The video can stay (explanation videos and
        tutorials are always great additions!), but we need a text solution too for
        these megathreads.~~\n\nEdit: thank you for adding your code!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;h1&gt;&lt;del&gt;Top-level
        posts in Solution Megathreads are for &lt;em&gt;code solutions&lt;/em&gt;
        only.&lt;/del&gt;&lt;/h1&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;del&gt;This
        is a top-level post, so please edit your post and share your &lt;em&gt;text&lt;/em&gt;
        code/repo/solution.  The video can stay (explanation videos and tutorials
        are always great additions!), but we need a text solution too for these megathreads.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        thank you for adding your code!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvovlh/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmvovlh", "created": 1638411626.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwuf8e",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thibpat",
        "can_mod_post": false, "created_utc": 1638435931.0, "send_replies": true,
        "parent_id": "t1_hmvovlh", "score": 2, "author_fullname": "t2_j7bwx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thanks for the feedback! I''ve fixed my post!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Thanks for the feedback! I&amp;#39;ve fixed my post!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwuf8e/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwuf8e", "created":
        1638435931.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmuwikk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "0x5ubt13",
        "can_mod_post": false, "created_utc": 1638399179.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_h41x0t7s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Golang\n\nMy Go attempt at day 1 :)\n\n```\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"strconv\"\n\t\"time\"\n)\n\nfunc
        main() {\n\t// Part 1\n\tincreases := 0\n\tdepths := getInput(\"./day_1/day_1_input.txt\")\n\tfor
        i := 1; i &lt;= len(depths)-1; i++ {\n\t\tif depths[i] &gt; depths[i-1] {\n\t\t\tincreases
        += 1\n\t\t}\n\t}\n\tfmt.Printf(\"Part 1: %v\\n\", increases)\n\n\t// Part
        2\n\tpartTwoIncreases := 0\n\tpartTwoDepths := make([]int64, 0)\n\tvar quickResult
        int64\n\tfor i := 0; i &lt;= len(depths)-3; i++ {\n\t\tquickResult = depths[i]
        + depths[i+1] + depths[i+2]\n\t\tpartTwoDepths = append(partTwoDepths, quickResult)\n\t}\n\n\tfor
        j := 1; j &lt;= len(partTwoDepths)-1; j++ {\n\t\tif partTwoDepths[j] &gt;
        partTwoDepths[j-1] {\n\t\t\tpartTwoIncreases += 1\n\t\t}\n\t}\n\tfmt.Printf(\"Part
        2: %v\\n\", partTwoIncreases)\n}\n\nfunc getInput(filename string) []int64
        {\n\tlines := make([]int64, 0)\n\n\tf, err := os.Open(filename)\n\tif err
        != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer f.Close()\n\n\tscanner := bufio.NewScanner(f)\n\tscanner.Split(bufio.ScanLines)\n\n\tfor
        scanner.Scan() {\n\t\tintLine, err2 := strconv.ParseInt(scanner.Text(), 10,
        64)\n\t\tif err2 != nil {\n\t\t\tlog.Fatal(err2)\n\t\t}\n\n\t\tlines = append(lines,
        intLine)\n\t}\n\treturn lines\n}\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Golang&lt;/h1&gt;\n\n&lt;p&gt;My Go attempt at day
        1 :)&lt;/p&gt;\n\n&lt;p&gt;```\npackage main&lt;/p&gt;\n\n&lt;p&gt;import
        (\n    &amp;quot;bufio&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;log&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;strconv&amp;quot;\n    &amp;quot;time&amp;quot;\n)&lt;/p&gt;\n\n&lt;p&gt;func
        main() {\n    // Part 1\n    increases := 0\n    depths := getInput(&amp;quot;./day_1/day_1_input.txt&amp;quot;)\n    for
        i := 1; i &amp;lt;= len(depths)-1; i++ {\n        if depths[i] &amp;gt; depths[i-1]
        {\n            increases += 1\n        }\n    }\n    fmt.Printf(&amp;quot;Part
        1: %v\\n&amp;quot;, increases)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Part
        2\npartTwoIncreases := 0\npartTwoDepths := make([]int64, 0)\nvar quickResult
        int64\nfor i := 0; i &amp;lt;= len(depths)-3; i++ {\n    quickResult = depths[i]
        + depths[i+1] + depths[i+2]\n    partTwoDepths = append(partTwoDepths, quickResult)\n}\n\nfor
        j := 1; j &amp;lt;= len(partTwoDepths)-1; j++ {\n    if partTwoDepths[j] &amp;gt;
        partTwoDepths[j-1] {\n        partTwoIncreases += 1\n    }\n}\nfmt.Printf(&amp;quot;Part
        2: %v\\n&amp;quot;, partTwoIncreases)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;func
        getInput(filename string) []int64 {\n    lines := make([]int64, 0)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f,
        err := os.Open(filename)\nif err != nil {\n    log.Fatal(err)\n}\ndefer f.Close()\n\nscanner
        := bufio.NewScanner(f)\nscanner.Split(bufio.ScanLines)\n\nfor scanner.Scan()
        {\n    intLine, err2 := strconv.ParseInt(scanner.Text(), 10, 64)\n    if err2
        != nil {\n        log.Fatal(err2)\n    }\n\n    lines = append(lines, intLine)\n}\nreturn
        lines\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmuwikk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmuwikk", "created":
        1638399179.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvojl4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638411485.0, "send_replies": true,
        "parent_id": "t1_hmuwikk", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvojl4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvojl4", "created":
        1638411485.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 2, "name": "t1_hmw36xv", "id": "hmw36xv",
        "parent_id": "t1_hmuwikk", "depth": 1, "children": ["hmw36xv"]}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmv06au", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmv06au", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv06au/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638400792.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638400792.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvoet6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638411428.0, "send_replies": true,
        "parent_id": "t1_hmv06au", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please follow the [posting guidelines](https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines)
        and edit your post to add what language(s) you used.  This makes it easier
        for folks who Ctrl-F the megathreads looking for a specific language.\n\nAlso,
        your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please follow the &lt;a
        href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines\"&gt;posting
        guidelines&lt;/a&gt; and edit your post to add what language(s) you used.  This
        makes it easier for folks who Ctrl-F the megathreads looking for a specific
        language.&lt;/p&gt;\n\n&lt;p&gt;Also, your code is hard to read on old.reddit.  Please
        edit it as per our posting guidelines in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvoet6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvoet6", "created":
        1638411428.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmv8xhi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SSShupe",
        "can_mod_post": false, "created_utc": 1638404694.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_ev8l8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JULIA nothing too fancy....\n\n```\nf = readlines(\"input.txt\")\nints =
        parse.(Int, f)\n\ncnt = 0\nfor i = 1:length(ints)-1\n    if ints[i+1] &gt;
        ints[i]\n        global cnt += 1\n    end\nend\nprintln(cnt)\n\ncnt2 = 0\nfor
        i = 1:length(ints)-3\n    sum1 = sum(ints[i:i+2])\n    sum2 = sum(ints[i+1:i+3])\n    if
        sum2 &gt; sum1\n        global cnt2 += 1\n    end\nend\nprintln(cnt2)\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JULIA nothing too fancy....&lt;/p&gt;\n\n&lt;p&gt;```\nf
        = readlines(&amp;quot;input.txt&amp;quot;)\nints = parse.(Int, f)&lt;/p&gt;\n\n&lt;p&gt;cnt
        = 0\nfor i = 1:length(ints)-1\n    if ints[i+1] &amp;gt; ints[i]\n        global
        cnt += 1\n    end\nend\nprintln(cnt)&lt;/p&gt;\n\n&lt;p&gt;cnt2 = 0\nfor i
        = 1:length(ints)-3\n    sum1 = sum(ints[i:i+2])\n    sum2 = sum(ints[i+1:i+3])\n    if
        sum2 &amp;gt; sum1\n        global cnt2 += 1\n    end\nend\nprintln(cnt2)\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmv8xhi/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmv8xhi", "created":
        1638404694.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvjxrv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "spaceLem",
        "can_mod_post": false, "created_utc": 1638409499.0, "send_replies": true,
        "parent_id": "t1_hmv8xhi", "score": 2, "author_fullname": "t2_3a2dr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A lot of that can be simplified down to `count(diff(ints).&gt;0))`, avoiding
        the global, albeit at the expense of an allocation.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;A lot of that can be simplified down to &lt;code&gt;count(diff(ints).&amp;gt;0))&lt;/code&gt;,
        avoiding the global, albeit at the expense of an allocation.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvjxrv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvjxrv", "created":
        1638409499.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvo0ft",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638411256.0, "send_replies": true,
        "parent_id": "t1_hmv8xhi", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvo0ft/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvo0ft", "created":
        1638411256.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638410850.0,
        "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id":
        "t3_r66vow", "author_flair_template_id": null, "likes": null, "replies": "",
        "user_reports": [], "saved": false, "id": "hmvh953", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_r66vow", "score": 1, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_hmvh953", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvh953/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638408327.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638408327.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvn16o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638410832.0, "send_replies": true,
        "parent_id": "t1_hmvh953", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvn16o/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvn16o", "created":
        1638410832.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638443425.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvhiw7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Leather-Road1486",
        "can_mod_post": false, "created_utc": 1638408446.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_7l9stqk5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "`import fs from ''fs'';`  \n`fs.readFile(''input.txt'', (err, data) =&gt;
        {`  \n\t`if (err) {`  \n\t\t`console.error(err);`  \n\t\t`return;`  \n\t`}`  \n\t`let
        lines = data.toString().split(''\\n'');`  \n\t`let sums = [];`  \n\t`for (let
        i = 0; i &lt; lines.length; i++){`  \n\t\t`let  sum = parseInt(lines[i]) +
        parseInt(lines[i+1]) + parseInt(lines[i+2]);`  \n\t\t`sums.push(sum);`  \n\t`}`  \n\t`let
        count = 0;`  \n\t`for (let i = 1; i &lt; sums.length; i++) {`  \n\t\t`if (parseInt(sums[i])
        &gt; parseInt(sums[i - 1])) {`  \n\t\t\t`count++;`  \n\t\t`}`  \n\t`}`  \n\t`console.log(count);`  \n`});`\n\n&amp;#x200B;\n\nThe
        above code is part two, but just replace sums in the second loop with lines,
        and you will get the part one result.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;code&gt;import fs from &amp;#39;fs&amp;#39;;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;fs.readFile(&amp;#39;input.txt&amp;#39;,
        (err, data) =&amp;gt; {&lt;/code&gt;&lt;br/&gt;\n    &lt;code&gt;if (err)
        {&lt;/code&gt;&lt;br/&gt;\n        &lt;code&gt;console.error(err);&lt;/code&gt;&lt;br/&gt;\n        &lt;code&gt;return;&lt;/code&gt;&lt;br/&gt;\n    &lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n    &lt;code&gt;let
        lines = data.toString().split(&amp;#39;\\n&amp;#39;);&lt;/code&gt;&lt;br/&gt;\n    &lt;code&gt;let
        sums = [];&lt;/code&gt;&lt;br/&gt;\n    &lt;code&gt;for (let i = 0; i &amp;lt;
        lines.length; i++){&lt;/code&gt;&lt;br/&gt;\n        &lt;code&gt;let  sum
        = parseInt(lines[i]) + parseInt(lines[i+1]) + parseInt(lines[i+2]);&lt;/code&gt;&lt;br/&gt;\n        &lt;code&gt;sums.push(sum);&lt;/code&gt;&lt;br/&gt;\n    &lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n    &lt;code&gt;let
        count = 0;&lt;/code&gt;&lt;br/&gt;\n    &lt;code&gt;for (let i = 1; i &amp;lt;
        sums.length; i++) {&lt;/code&gt;&lt;br/&gt;\n        &lt;code&gt;if (parseInt(sums[i])
        &amp;gt; parseInt(sums[i - 1])) {&lt;/code&gt;&lt;br/&gt;\n            &lt;code&gt;count++;&lt;/code&gt;&lt;br/&gt;\n        &lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n    &lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n    &lt;code&gt;console.log(count);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;});&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;The
        above code is part two, but just replace sums in the second loop with lines,
        and you will get the part one result.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvhiw7/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmvhiw7", "created": 1638408446.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmvn0li", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1638410825.0, "send_replies": true, "parent_id": "t1_hmvhiw7",
        "score": 1, "author_fullname": "t2_60niu", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Your code is hard
        to read on old.reddit.  Please edit it as per our posting guidelines in the
        wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvn0li/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvn0li", "created":
        1638410825.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638446399.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvn98k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Tencza_Coder",
        "can_mod_post": false, "created_utc": 1638410928.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_65gcxuyu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\nPart 1\n\n    curr_nbr = 0; prev_nbr = 0; incr_count = 0\n    \n    with
        open(\"Day1_input.txt\", mode=\"r\") as file: \n        for line in file.readlines():
        \n            curr_nbr = int(line) \n            if prev_nbr &gt; 0: \n                if
        curr_nbr &gt; prev_nbr: \n                    incr_count += 1 \n        prev_nbr
        = curr_nbr\n    \n    print(\"Num of increases:\", incr_count)\n\nPart 2\n\n    with
        open(\"Day1_input.txt\", mode=\"r\") as file: \n        values_list = [int(line)
        for line in file]\n    \n    tri_sums = [] \n    for i in range(len(values_list)):
        \n        tri_sums.append(sum(values_list[i:i + 3]))\n    \n    incr_count
        = 0 \n    for i in range(len(tri_sums)): \n        if tri_sums[i] &gt; tri_sums[i
        - 1]: \n            incr_count += 1\n    \n    print(\"Num of increases:\",
        incr_count)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;curr_nbr = 0; prev_nbr = 0; incr_count
        = 0\n\nwith open(&amp;quot;Day1_input.txt&amp;quot;, mode=&amp;quot;r&amp;quot;)
        as file: \n    for line in file.readlines(): \n        curr_nbr = int(line)
        \n        if prev_nbr &amp;gt; 0: \n            if curr_nbr &amp;gt; prev_nbr:
        \n                incr_count += 1 \n    prev_nbr = curr_nbr\n\nprint(&amp;quot;Num
        of increases:&amp;quot;, incr_count)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;quot;Day1_input.txt&amp;quot;,
        mode=&amp;quot;r&amp;quot;) as file: \n    values_list = [int(line) for line
        in file]\n\ntri_sums = [] \nfor i in range(len(values_list)): \n    tri_sums.append(sum(values_list[i:i
        + 3]))\n\nincr_count = 0 \nfor i in range(len(tri_sums)): \n    if tri_sums[i]
        &amp;gt; tri_sums[i - 1]: \n        incr_count += 1\n\nprint(&amp;quot;Num
        of increases:&amp;quot;, incr_count)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvn98k/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvn98k", "created":
        1638410928.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638483988.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvyb1e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638415742.0, "send_replies": true,
        "parent_id": "t1_hmvn98k", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Please follow the [posting guidelines](https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines)
        and edit your post to add what language(s) you used.  This makes it easier
        for folks who Ctrl-F the megathreads looking for a specific language.~~\n\nEdit:
        thanks for adding the programming language! &lt;3", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Please follow the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines\"&gt;posting
        guidelines&lt;/a&gt; and edit your post to add what language(s) you used.  This
        makes it easier for folks who Ctrl-F the megathreads looking for a specific
        language.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks for adding the programming
        language! &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvyb1e/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvyb1e", "created":
        1638415742.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvnyic", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_hmvnyic", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvnyic/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638411232.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638411232.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvy9m5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638415723.0, "send_replies": true,
        "parent_id": "t1_hmvnyic", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; # Top-level posts in Solution Megathreads are for *code solutions* only.\n\nThis
        is a top-level post, so please edit your post and share your code/repo/solution
        or, if you haven''t finished the puzzle yet, you can always create your own
        thread and make sure to flair it with `Help`.\n\nAlso, your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;h1&gt;Top-level
        posts in Solution Megathreads are for &lt;em&gt;code solutions&lt;/em&gt;
        only.&lt;/h1&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is a top-level post,
        so please edit your post and share your code/repo/solution or, if you haven&amp;#39;t
        finished the puzzle yet, you can always create your own thread and make sure
        to flair it with &lt;code&gt;Help&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Also,
        your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvy9m5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvy9m5", "created":
        1638415723.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638422926.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvqsha", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "iiun",
        "can_mod_post": false, "created_utc": 1638412459.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_13efx2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java with stream api\n\n    import java.io.IOException;\n    import java.nio.file.Files;\n    import
        java.nio.file.Paths;\n    import java.util.List;\n    import java.util.stream.Collectors;\n    import
        java.util.stream.IntStream;\n\n    class Index {\n      public static void
        main(String args[]) throws IOException {\n        var lines = Files\n          .lines(Paths.get(\"day1/input.txt\"))\n          .map(Integer::parseInt)\n          .collect(Collectors.toList());\n        System.out.println(\n          IntStream\n            .range(0,
        lines.size() - 1)\n            .mapToObj(i -&gt; List.of(lines.get(i), lines.get(i
        + 1)))\n            .reduce(\n              0, \n              (total, element)
        -&gt; \n                (element.get(1) &gt; element.get(0)) ? total + 1 :
        total, \n              Integer::sum)\n            );\n      }\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Java with stream api&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport
        java.util.List;\nimport java.util.stream.Collectors;\nimport java.util.stream.IntStream;\n\nclass
        Index {\n  public static void main(String args[]) throws IOException {\n    var
        lines = Files\n      .lines(Paths.get(&amp;quot;day1/input.txt&amp;quot;))\n      .map(Integer::parseInt)\n      .collect(Collectors.toList());\n    System.out.println(\n      IntStream\n        .range(0,
        lines.size() - 1)\n        .mapToObj(i -&amp;gt; List.of(lines.get(i), lines.get(i
        + 1)))\n        .reduce(\n          0, \n          (total, element) -&amp;gt;
        \n            (element.get(1) &amp;gt; element.get(0)) ? total + 1 : total,
        \n          Integer::sum)\n        );\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvqsha/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvqsha", "created":
        1638412459.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638483966.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvy44d", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638415652.0, "send_replies": true,
        "parent_id": "t1_hmvqsha", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvy44d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvy44d", "created":
        1638415652.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638465585.0,
        "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id":
        "t3_r66vow", "author_flair_template_id": null, "likes": null, "replies": "",
        "user_reports": [], "saved": false, "id": "hmvy97q", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_r66vow", "score": 1, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "nim\n\n    import
        std/[sugar, strutils]\n    \n    func countIncreases(s: seq[int], space =
        1): int =  \n      for i in 0 ..&lt; s.len - space:\n        if s[i] &lt;
        s[i+space]:  \n          inc result  \n    \n    let nums = collect:  \n      for
        line in stdin.lines:  \n        parseInt line\n    \n    echo(countIncreases
        nums)  \n    echo(countIncreases(nums, space=3))", "awarders": [], "downs":
        0, "author_flair_css_class": null, "name": "t1_hmvy97q", "collapsed": false,
        "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;nim&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        std/[sugar, strutils]\n\nfunc countIncreases(s: seq[int], space = 1): int
        =  \n  for i in 0 ..&amp;lt; s.len - space:\n    if s[i] &amp;lt; s[i+space]:  \n      inc
        result  \n\nlet nums = collect:  \n  for line in stdin.lines:  \n    parseInt
        line\n\necho(countIncreases nums)  \necho(countIncreases(nums, space=3))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvy97q/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638415718.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638415718.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638483315.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwmy3i", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638429891.0, "send_replies": true,
        "parent_id": "t1_hmvy97q", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwmy3i/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwmy3i", "created":
        1638429891.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwdb3a", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "OkProfessional8364",
        "can_mod_post": false, "created_utc": 1638423480.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_a8d7p6ma", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "PowerShell.\nBoth parts 1 and 2.\nJust change $sample_size from 1 to 3.\n\n```\n$measurements
        = Get-Content \"$PSScriptRoot\\input.txt\"\n\n$count = 0\n$last = $sample
        = $null\n$sample_size = 1\n#$CSVpath = \"$PSScriptRoot\\output.csv\" # So
        I can take the data elsewhere and figure out why I was 1 off in my first attempt.\n#Set-Content
        -Path $CSVpath  -Value ''\"Number\",\"Up-Or-Down\",\"Up-Count\"'' -Force\nfunction
        getSample($index) {\n    $output = 0\n    1..$sample_size | ForEach-Object
        {\n        $output += [int]$measurements[($index--)]\n    }\n    return $output\n}\n\nfor
        ($i=0; $i -lt $measurements.Count; $i++) {\n    $x = ''/''\n    $sample =
        getSample($i)\n    if ($i -ge $sample_size) {\n        $x = if ($sample -gt
        $last) {\n            $count++\n            ''+''\n        } elseif ($sample
        -lt $last) {\n            ''-''\n        } else {\n            ''.''\n        }\n    }\n    Write-Host
        $x -NoNewline\n    #Write-Host \" $sample\" -f blue # Just schecking the number\n    #Add-Content
        -Path $CSVpath -Value @(\"\"\"$sample\"\",\"\"$x\"\",\"\"$(if ($x -eq ''+'')
        {$count})\"\"\") -ea stop\n    $last = $sample\n}\nWrite-Host \"`nIncreases:
        $count\" -f Yellow\n#Start-Process $CSVpath", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;PowerShell.\nBoth parts 1 and 2.\nJust change $sample_size
        from 1 to 3.&lt;/p&gt;\n\n&lt;p&gt;```\n$measurements = Get-Content &amp;quot;$PSScriptRoot\\input.txt&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;$count
        = 0\n$last = $sample = $null\n$sample_size = 1&lt;/p&gt;\n\n&lt;h1&gt;$CSVpath
        = &amp;quot;$PSScriptRoot\\output.csv&amp;quot; # So I can take the data elsewhere
        and figure out why I was 1 off in my first attempt.&lt;/h1&gt;\n\n&lt;h1&gt;Set-Content
        -Path $CSVpath  -Value &amp;#39;&amp;quot;Number&amp;quot;,&amp;quot;Up-Or-Down&amp;quot;,&amp;quot;Up-Count&amp;quot;&amp;#39;
        -Force&lt;/h1&gt;\n\n&lt;p&gt;function getSample($index) {\n    $output =
        0\n    1..$sample_size | ForEach-Object {\n        $output += [int]$measurements[($index--)]\n    }\n    return
        $output\n}&lt;/p&gt;\n\n&lt;p&gt;for ($i=0; $i -lt $measurements.Count; $i++)
        {\n    $x = &amp;#39;/&amp;#39;\n    $sample = getSample($i)\n    if ($i -ge
        $sample_size) {\n        $x = if ($sample -gt $last) {\n            $count++\n            &amp;#39;+&amp;#39;\n        }
        elseif ($sample -lt $last) {\n            &amp;#39;-&amp;#39;\n        } else
        {\n            &amp;#39;.&amp;#39;\n        }\n    }\n    Write-Host $x -NoNewline\n    #Write-Host
        &amp;quot; $sample&amp;quot; -f blue # Just schecking the number\n    #Add-Content
        -Path $CSVpath -Value @(&amp;quot;&amp;quot;&amp;quot;$sample&amp;quot;&amp;quot;,&amp;quot;&amp;quot;$x&amp;quot;&amp;quot;,&amp;quot;&amp;quot;$(if
        ($x -eq &amp;#39;+&amp;#39;) {$count})&amp;quot;&amp;quot;&amp;quot;) -ea
        stop\n    $last = $sample\n}\nWrite-Host &amp;quot;`nIncreases: $count&amp;quot;
        -f Yellow&lt;/p&gt;\n\n&lt;h1&gt;Start-Process $CSVpath&lt;/h1&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwdb3a/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwdb3a", "created":
        1638423480.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwmr5r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638429742.0, "send_replies": true,
        "parent_id": "t1_hmwdb3a", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwmr5r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwmr5r", "created":
        1638429742.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmx4u0j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nashant",
        "can_mod_post": false, "created_utc": 1638444598.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_3tk81t8c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python:\n```\ndef num_larger(f: str, window: int=1):\n  with open(f) as file:\n    arr
        = list(map(int, file.readlines()))\n    return len([sum(arr[i:i+window]) for
        i in range(len(arr[0:-window])) if sum(arr[i+1:i+window+1]) &gt; sum(arr[i:i+window])])\n\nnum_larger(\"DayOne.txt\")
        # part 1\nnum_larger(\"DayOne.txt\", 3) # part 2\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python:\n```\ndef num_larger(f: str, window: int=1):\n  with
        open(f) as file:\n    arr = list(map(int, file.readlines()))\n    return len([sum(arr[i:i+window])
        for i in range(len(arr[0:-window])) if sum(arr[i+1:i+window+1]) &amp;gt; sum(arr[i:i+window])])&lt;/p&gt;\n\n&lt;p&gt;num_larger(&amp;quot;DayOne.txt&amp;quot;)
        # part 1\nnum_larger(&amp;quot;DayOne.txt&amp;quot;, 3) # part 2\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmx4u0j/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmx4u0j", "created":
        1638444598.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmz8j8d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638477770.0, "send_replies": true,
        "parent_id": "t1_hmx4u0j", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmz8j8d/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmz8j8d", "created":
        1638477770.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1638481656.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmxf61e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gwangjinkim",
        "can_mod_post": false, "created_utc": 1638451176.0, "send_replies": true,
        "parent_id": "t3_r66vow", "score": 1, "author_fullname": "t2_25xiz5xy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Clojure**\n\n    (defn icount [ins]\n      (:sum (reduce (fn [st i] {:last
        i \n                                :sum (if (pos? (- i (:last st))) \n                                       (+
        (:sum st) 1) \n                                       (:sum st))}) \n                    {:last
        (first ins) :sum 0} \n                    (rest ins))))\n\n    (def ins-1
        (clojure.edn/read-string (str \"[\" (slurp \"input.txt\") \"]\")))\n    (icount
        ins-1) ;; 1292 ;; task-1\n    (icount (map + ins-1 (rest ins-1) (rest (rest
        ins-1)))) ;; 1262 ;; task-2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Clojure&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn
        icount [ins]\n  (:sum (reduce (fn [st i] {:last i \n                            :sum
        (if (pos? (- i (:last st))) \n                                   (+ (:sum
        st) 1) \n                                   (:sum st))}) \n                {:last
        (first ins) :sum 0} \n                (rest ins))))\n\n(def ins-1 (clojure.edn/read-string
        (str &amp;quot;[&amp;quot; (slurp &amp;quot;input.txt&amp;quot;) &amp;quot;]&amp;quot;)))\n(icount
        ins-1) ;; 1292 ;; task-1\n(icount (map + ins-1 (rest ins-1) (rest (rest ins-1))))
        ;; 1262 ;; task-2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmxf61e/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmxf61e", "created": 1638451176.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1638483237.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmz7yu6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638477554.0, "send_replies": true,
        "parent_id": "t1_hmxf61e", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmz7yu6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmz7yu6", "created":
        1638477554.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 2, "name": "t1_hmy98ot", "id": "hmy98ot",
        "parent_id": "t3_r66vow", "depth": 0, "children": ["hmy98ot"]}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmtdkt1"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:22 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:22 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=NzkprnUHOp5sSLgwsO; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:22 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmy98ot
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1645'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg63ih5i.2.1741472962666.Z0FBQUFBQm56TVRDNzQ2NlhXUEpCZS05ZllVWXlLOEVqYTQwTS0tRFVqRGZ5c2lUR085bXhVNmNuSV9WUE1HV0x0YjVxd1FyN1IwZGtUNDExd1dkMGx1akw5TUJKRkVpUTZaVEdwSkxiSGJNM1AyTTBPV2N0Z2RBSDB1T0djejduNERDSXFGVmNVaDU;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:22
        GMT; secure, session_tracker=adlkoarpbnmcjcicco.0.1741472962679.Z0FBQUFBQm56TVRDTWxtOUkxWC1uSDQ4ZDNkRUVmZzY0d3pUa2xvaFFlZm5VQS1HdEMxeVhXR1JqZW9nb0gybjNzaUtwUXRLQWU0MjZWZHRPbGNHSVBmblFPal83S3I4N0xLZ0lMMHc4a2l4MkZVcUY1MHdjZEVOUlpvUHdyMkVoWmtRY01IbW9hM0o;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:22
        GMT; secure, edgebucket=5es5sVGxRYkWjFDVZA; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '67'
      x-ratelimit-remaining:
      - '33.0'
      x-ratelimit-reset:
      - '37'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:22 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmy98ot", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_r66vow", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Elixir solution from yesterday:\n\n[Code in repo](https://github.com/sbcreates/AOC-2021/blob/main/day1.ex)\n\n```\n  #puzzle
        1 day 1\n  def count_increase(list \\\\ @readings) do\n    list\n    |&gt;
        Enum.chunk_every(2, 1, :discard)\n    |&gt; Enum.count(fn [a, b] -&gt; a &lt;
        b end)\n  end\n\n  #puzzle 2 day 1\n  def count_sliding_window_increase(list
        \\\\ @readings) do\n    list\n    |&gt; sliding_window()\n    |&gt; count_increase()\n  end\n\n  defp
        sliding_window(list \\\\ @readings) do\n    list\n    |&gt; Enum.chunk_every(3,
        1, [])\n    |&gt; Enum.map(&amp;Enum.sum(&amp;1))\n  end\n```", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmy98ot", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elixir
        solution from yesterday:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/sbcreates/AOC-2021/blob/main/day1.ex\"&gt;Code
        in repo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;```\n  #puzzle 1 day 1\n  def count_increase(list
        \\ @readings) do\n    list\n    |&amp;gt; Enum.chunk_every(2, 1, :discard)\n    |&amp;gt;
        Enum.count(fn [a, b] -&amp;gt; a &amp;lt; b end)\n  end&lt;/p&gt;\n\n&lt;p&gt;#puzzle
        2 day 1\n  def count_sliding_window_increase(list \\ @readings) do\n    list\n    |&amp;gt;
        sliding_window()\n    |&amp;gt; count_increase()\n  end&lt;/p&gt;\n\n&lt;p&gt;defp
        sliding_window(list \\ @readings) do\n    list\n    |&amp;gt; Enum.chunk_every(3,
        1, [])\n    |&amp;gt; Enum.map(&amp;amp;Enum.sum(&amp;amp;1))\n  end\n```&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmy98ot/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638464196.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638464196.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmz6xn4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638477170.0, "send_replies": true,
        "parent_id": "t1_hmy98ot", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on old.reddit.  Please edit it as per our posting guidelines in the wiki:
        &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmz6xn4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmz6xn4", "created":
        1638477170.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}}],
        true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmy98ot"]], [13,
        14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16,
        17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:22 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:22 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=SmrFR3WVrBwWJc3FNh; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:22 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmrgkpw,hmri8mc,hmrnyjp
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '3377'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg63lb40.2.1741472963074.Z0FBQUFBQm56TVRELXo3aGl4M2dsUFZqMzJVY2pFZm5UbmlXVDRJLTV4T3JsdnJPejJHbW85bnNRdF90ZG5kUTcwbkZVOVJIeWtlQklza2g4c2hWOUREMnpfRTNRT1RDczlIdnNXZG5ZRXJJcDNsWjZ3aWdMTDFYNUZFdjNNVXR0LVV3LXFTakdBc0M;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:23
        GMT; secure, session_tracker=fhbqnarcqjhqpgckbg.0.1741472963091.Z0FBQUFBQm56TVRERWhFU2VyQ0I2VW42T1U4Ul9Dc0RGTnpVOENNMmd2VndjZVREaXdoMXZISVVVdnQ1RFJyX2YtcXJreDA4M1dJcW9xTnVVZ3RMb2plNnJZUzJnbzFKeklxLTI3Um1kRDlWSklNemtKUlVkd2RCZEZVVHI4VC1rMEppbkNFR2o4RmI;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:23
        GMT; secure, edgebucket=FY5AAMsOb2rEuchn02; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '68'
      x-ratelimit-remaining:
      - '32.0'
      x-ratelimit-reset:
      - '36'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:23 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrgkpw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "BluFoot",
        "can_mod_post": false, "created_utc": 1638336441.0, "send_replies": true,
        "parent_id": "t1_hmrf5u4", "score": 6, "author_fullname": "t2_5edap", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nice, I golfed mine down to the same thing with a couple extra simplifications.
        The `.read.split` isn''t necessary\n\n    p $&lt;.map(&amp;:to_i).each_cons(3).map(&amp;:sum).each_cons(2).count{|a,b|a&lt;b}",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice, I golfed mine
        down to the same thing with a couple extra simplifications. The &lt;code&gt;.read.split&lt;/code&gt;
        isn&amp;#39;t necessary&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p $&amp;lt;.map(&amp;amp;:to_i).each_cons(3).map(&amp;amp;:sum).each_cons(2).count{|a,b|a&amp;lt;b}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrgkpw/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrgkpw", "created":
        1638336441.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrhejm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "442401",
        "can_mod_post": false, "created_utc": 1638336917.0, "send_replies": true,
        "parent_id": "t1_hmrgkpw", "score": 6, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Save a few bytes by not mapping\n\n`p $&lt;.map(&amp;:to_i).each_cons(3).each_cons(2).count{|a,b|a.sum&lt;b.sum}`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Save a few bytes by
        not mapping&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;p $&amp;lt;.map(&amp;amp;:to_i).each_cons(3).each_cons(2).count{|a,b|a.sum&amp;lt;b.sum}&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrhejm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrhejm", "created":
        1638336917.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrlbs0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BluFoot",
        "can_mod_post": false, "created_utc": 1638339320.0, "send_replies": true,
        "parent_id": "t1_hmrhejm", "score": 3, "author_fullname": "t2_5edap", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "And I upgrade to ruby 3 just to save a few more! Down to **63 bytes**, pretty
        good.\n\n    p $&lt;.map(&amp;:to_i).each_cons(3).each_cons(2).count{_1.sum&lt;_2.sum}",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And I upgrade to ruby
        3 just to save a few more! Down to &lt;strong&gt;63 bytes&lt;/strong&gt;,
        pretty good.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p $&amp;lt;.map(&amp;amp;:to_i).each_cons(3).each_cons(2).count{_1.sum&amp;lt;_2.sum}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrlbs0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrlbs0", "created":
        1638339320.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638349801.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmryop9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "442401",
        "can_mod_post": false, "created_utc": 1638349299.0, "send_replies": true,
        "parent_id": "t1_hmrlbs0", "score": 2, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "edit: **48 bytes**\n\nHat-tip to /u/CodeIsTheEnd\n\nThis blew my mind when
        I [saw it on Youtube](https://www.youtube.com/watch?v=gw8aNa8AuyA) \n\n`p
        $&lt;.map(&amp;:to_i).each_cons(4).count{_1[0]&lt;_1[3]}`", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;edit: &lt;strong&gt;48 bytes&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Hat-tip
        to &lt;a href=\"/u/CodeIsTheEnd\"&gt;/u/CodeIsTheEnd&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This
        blew my mind when I &lt;a href=\"https://www.youtube.com/watch?v=gw8aNa8AuyA\"&gt;saw
        it on Youtube&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;p $&amp;lt;.map(&amp;amp;:to_i).each_cons(4).count{_1[0]&amp;lt;_1[3]}&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmryop9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmryop9", "created":
        1638349299.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638373033.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmszy2s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BluFoot",
        "can_mod_post": false, "created_utc": 1638372511.0, "send_replies": true,
        "parent_id": "t1_hmryop9", "score": 2, "author_fullname": "t2_5edap", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "What is this sorcery??\n\nEdit: ahhh, the middle ones cancel out, makes sense.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is this sorcery??&lt;/p&gt;\n\n&lt;p&gt;Edit:
        ahhh, the middle ones cancel out, makes sense.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmszy2s/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmszy2s", "created": 1638372511.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 5, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmrh40r", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dtinth", "can_mod_post": false, "created_utc":
        1638336749.0, "send_replies": true, "parent_id": "t1_hmrgkpw", "score": 3,
        "author_fullname": "t2_9osxf", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Thanks! TIL: \\`$&lt;\\`
        is an Enumerable that yields each line from stdin.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Thanks! TIL: `$&amp;lt;` is an Enumerable that yields
        each line from stdin.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrh40r/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrh40r", "created":
        1638336749.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrslua", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hmrh40r", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "i think it''s the same as ARGF", "awarders": [], "downs":
        0, "author_flair_css_class": null, "name": "t1_hmrslua", "collapsed": false,
        "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i think
        it&amp;#39;s the same as ARGF&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrslua/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638344406.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638344406.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 3, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms8pys",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dtinth",
        "can_mod_post": false, "created_utc": 1638357787.0, "send_replies": true,
        "parent_id": "t1_hmrslua", "score": 2, "author_fullname": "t2_9osxf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I just checked, you''re right, `$&lt;` is `ARGF`. I didn''t know until today
        that `ARGF` is also an Enumerable.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I just checked, you&amp;#39;re right, &lt;code&gt;$&amp;lt;&lt;/code&gt;
        is &lt;code&gt;ARGF&lt;/code&gt;. I didn&amp;#39;t know until today that &lt;code&gt;ARGF&lt;/code&gt;
        is also an Enumerable.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms8pys/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms8pys", "created":
        1638357787.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmri8mc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "gurgeous",
        "can_mod_post": false, "created_utc": 1638337410.0, "send_replies": true,
        "parent_id": "t1_hmrf5u4", "score": 6, "author_fullname": "t2_5o7f0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Also try using _1 and _2 instead of a &amp; b. Added in 2.7. Once you start
        using numbered params you''ll never go back!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Also try using _1 and _2 instead of a &amp;amp; b.
        Added in 2.7. Once you start using numbered params you&amp;#39;ll never go
        back!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmri8mc/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmri8mc", "created":
        1638337410.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrl0yo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dtinth",
        "can_mod_post": false, "created_utc": 1638339124.0, "send_replies": true,
        "parent_id": "t1_hmri8mc", "score": 2, "author_fullname": "t2_9osxf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "That\u2019s another TIL. My Ruby is so rusty.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;That\u2019s another TIL. My Ruby is so rusty.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrl0yo/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrl0yo", "created":
        1638339124.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrnyjp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "442401",
        "can_mod_post": false, "created_utc": 1638341037.0, "send_replies": true,
        "parent_id": "t1_hmrf5u4", "score": 1, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Like you, I also wasted an awful lot of time by not converting to int. But,
        I don''t understand why the result would differ? (For me, it was off by 1)\n\nThe
        `String` class includes the `Comparable` module and `\"1\" &lt; \"2\" #=&gt;
        true`, so why didn''t we find the correct solution?\n\n(Part 2 would have
        got us in the end anyway)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Like
        you, I also wasted an awful lot of time by not converting to int. But, I don&amp;#39;t
        understand why the result would differ? (For me, it was off by 1)&lt;/p&gt;\n\n&lt;p&gt;The
        &lt;code&gt;String&lt;/code&gt; class includes the &lt;code&gt;Comparable&lt;/code&gt;
        module and &lt;code&gt;&amp;quot;1&amp;quot; &amp;lt; &amp;quot;2&amp;quot;
        #=&amp;gt; true&lt;/code&gt;, so why didn&amp;#39;t we find the correct solution?&lt;/p&gt;\n\n&lt;p&gt;(Part
        2 would have got us in the end anyway)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrnyjp/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrnyjp", "created": 1638341037.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hms8uoh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dtinth", "can_mod_post": false, "created_utc":
        1638357888.0, "send_replies": true, "parent_id": "t1_hmrnyjp", "score": 3,
        "author_fullname": "t2_9osxf", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Probably because `''120''
        &lt; ''50''` but `120 &gt; 50`.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Probably because &lt;code&gt;&amp;#39;120&amp;#39;
        &amp;lt; &amp;#39;50&amp;#39;&lt;/code&gt; but &lt;code&gt;120 &amp;gt; 50&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms8uoh/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms8uoh", "created":
        1638357888.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638358523.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hms9dlv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "442401",
        "can_mod_post": false, "created_utc": 1638358287.0, "send_replies": true,
        "parent_id": "t1_hms8uoh", "score": 1, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ahhh! Of course! \n\nThe same reason why \"track_11\" comes before \"track_2\"\n\nI
        should have known this from my Napster days.\n\n\nThank you.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Ahhh! Of course! &lt;/p&gt;\n\n&lt;p&gt;The
        same reason why &amp;quot;track_11&amp;quot; comes before &amp;quot;track_2&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;I
        should have known this from my Napster days.&lt;/p&gt;\n\n&lt;p&gt;Thank you.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms9dlv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms9dlv", "created":
        1638358287.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmrgkpw"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:23 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:23 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=8k28dB6IqdgSY2Z9ux; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:23 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmrn4y5,hms181y,hmrn3ve
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1606'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg63p9au.2.1741472963557.Z0FBQUFBQm56TVREdkhjaFFUa2ZBeWkzQnNVN04xNktPcnBvTVBtaUtvYjNSemZ2YXVuOHdueHlnNjRDMVB3QzhOQmdUX3lmb0ZLUlZ0Qm1UcEFNMlpJMVNfa0VlOTIwM0ZsWkJBaHFzbjBLbE52Vm9Pc2E5VVk3R0doLTF3Ri1nY3hmNzBMMGpoaGg;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:23
        GMT; secure, session_tracker=mrpnhddimebddgdkrn.0.1741472963568.Z0FBQUFBQm56TVRERVRmZ1d3UzNTQVRqSHhqaDd4N3lpdHNPUVVHSWZ4cTNGSHI5NjJpeXBzdzg4OHd5S0hFdjg2RkJEcnVkZXNfXzZvcGJ6UzlHNXVRV0dvZFM2d3AtRzNDQnd1S0xJdkkzdEpjTlVVNkk2ZTBKYnBtQVRpRHpONjU2VmRweEY3SUc;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:23
        GMT; secure, edgebucket=R7t0unqNIVkW23xo73; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '69'
      x-ratelimit-remaining:
      - '31.0'
      x-ratelimit-reset:
      - '36'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:23 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrn3ve",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638340470.0, "send_replies": true,
        "parent_id": "t1_hmrkw73", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; Here''s a recording\n&gt;  of me solving it, and the code is here. I
        stream myself solving every day''s problem on Twitch\n&gt; !\n\nInterested
        in joining the [list of streamers](https://www.reddit.com/r/adventofcode/wiki/streamers)?",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Here&amp;#39;s
        a recording\n of me solving it, and the code is here. I stream myself solving
        every day&amp;#39;s problem on Twitch\n!&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Interested
        in joining the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/streamers\"&gt;list
        of streamers&lt;/a&gt;?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrn3ve/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrn3ve", "created":
        1638340470.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 0, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrn4y5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "_jstanley",
        "can_mod_post": false, "created_utc": 1638340489.0, "send_replies": true,
        "parent_id": "t1_hmrkw73", "score": 0, "author_fullname": "t2_ddrjw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rotten luck on the 504s! Nice work.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rotten luck on the 504s! Nice work.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrn4y5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrn4y5", "created":
        1638340489.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms181y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "442401",
        "can_mod_post": false, "created_utc": 1638351519.0, "send_replies": true,
        "parent_id": "t1_hmrkw73", "score": 1, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Wow!\n\nThanks for sharing.\n\nIt''s this type of thinking that blows my
        mind every year. Here''s me doing `each_cons(3).each_cons(2).count{...}` and
        you''re just like \"nah, as long as the one 4 in front is bigger, we''re good\"\n\n\ud83e\udd2f",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wow!&lt;/p&gt;\n\n&lt;p&gt;Thanks
        for sharing.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s this type of thinking that
        blows my mind every year. Here&amp;#39;s me doing &lt;code&gt;each_cons(3).each_cons(2).count{...}&lt;/code&gt;
        and you&amp;#39;re just like &amp;quot;nah, as long as the one 4 in front
        is bigger, we&amp;#39;re good&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;\ud83e\udd2f&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms181y/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms181y", "created":
        1638351519.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmrn3ve"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:23 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:23 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=DPoRB4a2iFp83BDlkk; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:23 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmsgjyv,hms9h99,hms9ae6
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '2064'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg63smq6.2.1741472963985.Z0FBQUFBQm56TVRFUWpjQVRoTFFhT1dPWnlhV2l2djdHMXU1MFF6WEFkempHeXpzSVFhUmk0VkZPamJfdFJ3aWFsUDQwWUlMejRKdUxaSElVcEZSTkdlNEZ5dFdlNWkyazBQU213OVZZbmJiMWdpMVUxRkt0MENyUm9zd3Nna2RHbkFXODE1TmN5Qy0;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:24
        GMT; secure, session_tracker=mclkecfoeccnjnrdbd.0.1741472964009.Z0FBQUFBQm56TVRFYUc0MHBwUk52bkM4MHQ0THhaRDRsbnNYMUozRTl3NFpkWEtfLS01aC1xZVU3aGhJZDNJQ2xOVndIclpScy1ydkY4QUNWcHVlMVZlS0tURXg0ZUY3YmVEVEFrUUd0NzVWcGlfeFRtcTRtNDg0eVNyM2Zjb0c3SVVNblU0eUluaHY;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:24
        GMT; secure, edgebucket=1K5CwiXltkVxO1Bj7K; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '70'
      x-ratelimit-remaining:
      - '30.0'
      x-ratelimit-reset:
      - '36'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:24 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms9h99",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Initial_Soil_9261",
        "can_mod_post": false, "created_utc": 1638358364.0, "send_replies": true,
        "parent_id": "t1_hms968d", "score": 2, "author_fullname": "t2_c1mnjx8b", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "similar to mine:\n\n    depths = File.readlines(\"day1.txt\").map(&amp;:to_i)\n    p
        depths.each_cons(2).count { |a, b| a &lt; b }\n    p depths.each_cons(4).count
        { |a, *, b| a &lt; b }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;similar
        to mine:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;depths = File.readlines(&amp;quot;day1.txt&amp;quot;).map(&amp;amp;:to_i)\np
        depths.each_cons(2).count { |a, b| a &amp;lt; b }\np depths.each_cons(4).count
        { |a, *, b| a &amp;lt; b }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms9h99/", "subreddit_type":
        "public", "locked": false, "name": "t1_hms9h99", "created": 1638358364.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmsae2s", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "damyvv", "can_mod_post": false, "created_utc":
        1638359032.0, "send_replies": true, "parent_id": "t1_hms9h99", "score": 1,
        "author_fullname": "t2_11kdcw", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Nice one! I didn''t actually
        think about comparing the outer values of the sliding window. Good find.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice one! I didn&amp;#39;t
        actually think about comparing the outer values of the sliding window. Good
        find.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsae2s/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsae2s", "created":
        1638359032.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmsgjyv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "petercooper",
        "can_mod_post": false, "created_utc": 1638363115.0, "send_replies": true,
        "parent_id": "t1_hms968d", "score": 2, "author_fullname": "t2_10a0u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Just for the sake of anyone who finds it interesting, you can now also do
        this in Ruby 3.0+:\n\n```\np input.each_cons(2).count { _2 &gt; _1 }\n```\n\nI
        imagine some may prefer or not prefer this - definitely a matter of taste!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just for the sake of
        anyone who finds it interesting, you can now also do this in Ruby 3.0+:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\np
        input.each_cons(2).count { _2 &amp;gt; _1 }\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        imagine some may prefer or not prefer this - definitely a matter of taste!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsgjyv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsgjyv", "created":
        1638363115.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms9ae6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SadBunnyNL",
        "can_mod_post": false, "created_utc": 1638358218.0, "send_replies": true,
        "parent_id": "t1_hms968d", "score": 1, "author_fullname": "t2_ly04c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I really gotta start learning that stuff... It always looks so powerful and
        generally purposeful, yet I never get around to it! Thanks for your solution.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I really gotta start
        learning that stuff... It always looks so powerful and generally purposeful,
        yet I never get around to it! Thanks for your solution.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms9ae6/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms9ae6", "created":
        1638358218.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms9v1q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "damyvv",
        "can_mod_post": false, "created_utc": 1638358643.0, "send_replies": true,
        "parent_id": "t1_hms9ae6", "score": 2, "author_fullname": "t2_11kdcw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hallo mede-Nederlander ;). Thanks for your comment, I will post all my solutions
        \\[here\\]([https://github.com/damyvv/advent-of-code-2021](https://github.com/damyvv/advent-of-code-2021)).
        And you can find all my solutions from last year \\[here\\]([https://github.com/damyvv/AoC\\_2020](https://github.com/damyvv/AoC_2020)).
        Ruby is so powerful, I truly enjoy coding with it. If you have any questions
        about Ruby, let me know, I''ll be happy to answer them if I can.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Hallo mede-Nederlander ;). Thanks for your
        comment, I will post all my solutions [here](&lt;a href=\"https://github.com/damyvv/advent-of-code-2021\"&gt;https://github.com/damyvv/advent-of-code-2021&lt;/a&gt;).
        And you can find all my solutions from last year [here](&lt;a href=\"https://github.com/damyvv/AoC_2020\"&gt;https://github.com/damyvv/AoC_2020&lt;/a&gt;).
        Ruby is so powerful, I truly enjoy coding with it. If you have any questions
        about Ruby, let me know, I&amp;#39;ll be happy to answer them if I can.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms9v1q/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms9v1q", "created":
        1638358643.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hms9h99"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:24 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:24 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=Ep79abxgg7g3COWOMr; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:24 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmrh2io,hmrsexd,hmri827
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1652'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg63wao5.2.1741472964509.Z0FBQUFBQm56TVRFZ0RKanNXWW5YWVg4R2pEVXA3TUk5MS14TEFRUW1WbEhtMXg5OGRXY2hFdENyRVJRMXViZVdrZmZsT2gxWVJkNUtVbHVSMm5nOTRtdlQybG1tNW5IdTQ5V0RkRk9xbUJIMHVFUW1JRi1JcDJKRTdacjBvVjl3bUNZSGZjZU92NzA;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:24
        GMT; secure, session_tracker=bidncijagkncrhhfke.0.1741472964523.Z0FBQUFBQm56TVRFaWVJcnF2U25TVmlpY2RjMUlMTVdQQ3FDNTlyTTR6eHJ6MjdFeTQ5NTNkcHdyeUlHM1JCcXBUUDhZU2lNbnNXaU9FRjhuU3ZsOFZxNk93NW1OOGhXR2RiaWp0VXhoWHBiMkpwMVptQzZjdEtXMTVHUlZDdEpvSEhUMWNJWFlYS2o;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:24
        GMT; secure, edgebucket=fQDAQazyW5UW6LZXhM; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '71'
      x-ratelimit-remaining:
      - '29.0'
      x-ratelimit-reset:
      - '35'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:24 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrh2io",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "442401",
        "can_mod_post": false, "created_utc": 1638336725.0, "send_replies": true,
        "parent_id": "t1_hmrfgli", "score": 5, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nice.\n\nFor part 2 I did\n\n`p data.each_cons(3).each_cons(2).count { _1.sum
        &lt; _2.sum }`", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice.&lt;/p&gt;\n\n&lt;p&gt;For
        part 2 I did&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;p data.each_cons(3).each_cons(2).count
        { _1.sum &amp;lt; _2.sum }&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrh2io/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmrh2io", "created": 1638336725.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmri827", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "flwyd", "can_mod_post": false, "created_utc":
        1638337401.0, "send_replies": true, "parent_id": "t1_hmrfgli", "score": 2,
        "author_fullname": "t2_4x5am2k0", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Whoa, I didn''t realize
        Ruby had implicit block parameters (which is what I assume `_1` is).  Is that
        a relatively new feature?", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Whoa,
        I didn&amp;#39;t realize Ruby had implicit block parameters (which is what
        I assume &lt;code&gt;_1&lt;/code&gt; is).  Is that a relatively new feature?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmri827/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmri827", "created":
        1638337401.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrih3f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gurgeous",
        "can_mod_post": false, "created_utc": 1638337551.0, "send_replies": true,
        "parent_id": "t1_hmri827", "score": 3, "author_fullname": "t2_5o7f0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Added in 2.7 and quite handy! I use it everywhere now, both at work and for
        advent. I appreciate not having to make up silly param names for simple code.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Added in 2.7 and quite
        handy! I use it everywhere now, both at work and for advent. I appreciate
        not having to make up silly param names for simple code.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrih3f/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrih3f", "created":
        1638337551.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrsexd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hmrfgli", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "why do you need the `.map` in `.map.each_cons`?", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_hmrsexd", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;why
        do you need the &lt;code&gt;.map&lt;/code&gt; in &lt;code&gt;.map.each_cons&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrsexd/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1638344258.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1638344258.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmrh2io"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:24 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:24 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=kfeXwj63Rw33RiTpR6; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:24 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmrlox0
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1242'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg63znk5.2.1741472964949.Z0FBQUFBQm56TVRGOVNzaXVhZVZUUG5WdnpHWjcwZkxUbnRaTWt3RGRTZmNiNUZqUWNxUFNadnFFU2MwUTViUm15a1lyXzJWeUlJSEwxQXdoQWt0ZmJPTzliaEtXTnNCc0RNNUh1bGNuQmpLSVFLREU2WGl1dVNud2hhVHVOMkh0V01oX01LWmN2cU0;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:25
        GMT; secure, session_tracker=ffrpkammcogjakjged.0.1741472964962.Z0FBQUFBQm56TVRGVDhqMkduUjJqZnhMQnJueFJOeS1qMEtNZHByNURLMXNoVGpfVUllc05HQU5PVUZKOExqUEppYk1KY2RGOVJvMnlXNlBkSG14dEREcjEzMXRiYTZLbHh0dWFpWEhYblVXYzdZaE9Xc2JVVkR0WU53UjUxNjQ0SkFSNUF0TEN6ZHA;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:25
        GMT; secure, edgebucket=hUgFz7e8KbkZfZR8gl; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '72'
      x-ratelimit-remaining:
      - '28.0'
      x-ratelimit-reset:
      - '35'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:25 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrlox0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "442401",
        "can_mod_post": false, "created_utc": 1638339556.0, "send_replies": true,
        "parent_id": "t1_hmrky8s", "score": 3, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nice.\n\nNo need to `select` &amp; `count`, just `count` ;-)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Nice.&lt;/p&gt;\n\n&lt;p&gt;No need to &lt;code&gt;select&lt;/code&gt;
        &amp;amp; &lt;code&gt;count&lt;/code&gt;, just &lt;code&gt;count&lt;/code&gt;
        ;-)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrlox0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrlox0", "created":
        1638339556.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_r66vow", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrmjlk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_hmrlox0", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Thank you! :D Updated!", "awarders": [], "downs": 0,
        "author_flair_css_class": null, "name": "t1_hmrmjlk", "collapsed": false,
        "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank
        you! :D Updated!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrmjlk/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1638340097.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1638340097.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 2, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmrlox0"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:25 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:25 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=33oVgqjOaksQgbfm50; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:25 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmrpxy4,hmrqazv
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '2035'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg643uha.2.1741472965577.Z0FBQUFBQm56TVRGbDJ3dEQ2d1MwV1lFYl9wOER4TWtNVVRzRVI0SlVFZjNTWjI0NDBrSWJhLWZkUlBpVEVVSWVjbVFVVkNwYTdrNFpNR3pQZ1JzQjFyTldoRHVVQWtuOTJJYVVTS0lCTTkya3Bza2VqdFNpWnM0VjZnY093MjlCdUt4MjBFU25zMjA;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:25
        GMT; secure, session_tracker=qmbjbbjbiqkddbroik.0.1741472965590.Z0FBQUFBQm56TVRGUHZxRHZDSkhnS0ZpZ3NRTWF3OElFU2ZrM3BBT210UFNaTXN2c1VtOTBHVUJXOUd0bzZlc1JJbmFMckdiUjFvelQ1ZXhfaFFUUUpKUXJ2ZDhQUko1cUpHUjhrM0NpZmlIYUZOUktpU3IyWmNfTlNPY0lvaDA1TEU2a3d1NEtGcUU;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:25
        GMT; secure, edgebucket=OF7QesEd9Qe22EGv9b; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '73'
      x-ratelimit-remaining:
      - '27.0'
      x-ratelimit-reset:
      - '34'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:25 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrpxy4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jenneh03",
        "can_mod_post": false, "created_utc": 1638342432.0, "send_replies": true,
        "parent_id": "t1_hmrmz20", "score": 2, "author_fullname": "t2_3150lqjg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Can someone explain this to me? I''m not too familiar with Ruby", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Can someone explain this to me? I&amp;#39;m
        not too familiar with Ruby&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrpxy4/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrpxy4", "created":
        1638342432.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638359482.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmrtf4p", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "p_tseng",
        "can_mod_post": false, "created_utc": 1638345029.0, "send_replies": true,
        "parent_id": "t1_hmrpxy4", "score": 1, "author_fullname": "t2_13dni4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Try on the example input. Result of annotating each element with its index,
        and then sorting them by (value ascending, index descending):\n\n[[199, 0],
        [200, 4], [200, 1], [207, 5], [208, 2], [210, 3], [240, 6], [260, 8], [263,
        9], [269, 7]]\n\nNow take a look at each (value, index) pair in turn. By the
        sorting order, they will come in ascending order of value. To see if a measurement
        value is larger than the one that **originally** (in the original input) came
        before it, just check whether you''ve already seen the index that it should
        be larger than. For part 1, subtract 1 from the index. For part 2, subtract
        3.\n\nPart 1:\n\n* 199 at index 0: Since this is index 0, nothing comes before
        it.\n* 200 at index 4: Is index 3 smaller? No, haven''t seen it yet.\n* 200
        at index 1: Is index 0 smaller? Yes, saw it earlier.\n* 207 at index 5: Is
        index 4 smaller? Yes, saw it earlier.\n* 208 at index 2: Is index 1 smaller?
        Yes, saw it earlier.\n* 210 at index 3: Is index 2 smaller? Yes, saw it earlier.\n*
        240 at index 6: Is index 5 smaller? Yes, saw it earlier.\n* 260 at index 8:
        Is index 7 smaller? No, haven''t seen it yet.\n* 263 at index 9: Is index
        8 smaller? Yes, saw it earlier.\n* 267 at index 7: Is index 6 smaller? Yes,
        saw it earlier.\n\nThat''s 7 yeses so the answer to part 1 is 7.\n\nFor part
        2 it''s: No, no, no, no, no, yes, yes, yes, yes, yes, for an answer of 5.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try on the example input.
        Result of annotating each element with its index, and then sorting them by
        (value ascending, index descending):&lt;/p&gt;\n\n&lt;p&gt;[[199, 0], [200,
        4], [200, 1], [207, 5], [208, 2], [210, 3], [240, 6], [260, 8], [263, 9],
        [269, 7]]&lt;/p&gt;\n\n&lt;p&gt;Now take a look at each (value, index) pair
        in turn. By the sorting order, they will come in ascending order of value.
        To see if a measurement value is larger than the one that &lt;strong&gt;originally&lt;/strong&gt;
        (in the original input) came before it, just check whether you&amp;#39;ve
        already seen the index that it should be larger than. For part 1, subtract
        1 from the index. For part 2, subtract 3.&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;199
        at index 0: Since this is index 0, nothing comes before it.&lt;/li&gt;\n&lt;li&gt;200
        at index 4: Is index 3 smaller? No, haven&amp;#39;t seen it yet.&lt;/li&gt;\n&lt;li&gt;200
        at index 1: Is index 0 smaller? Yes, saw it earlier.&lt;/li&gt;\n&lt;li&gt;207
        at index 5: Is index 4 smaller? Yes, saw it earlier.&lt;/li&gt;\n&lt;li&gt;208
        at index 2: Is index 1 smaller? Yes, saw it earlier.&lt;/li&gt;\n&lt;li&gt;210
        at index 3: Is index 2 smaller? Yes, saw it earlier.&lt;/li&gt;\n&lt;li&gt;240
        at index 6: Is index 5 smaller? Yes, saw it earlier.&lt;/li&gt;\n&lt;li&gt;260
        at index 8: Is index 7 smaller? No, haven&amp;#39;t seen it yet.&lt;/li&gt;\n&lt;li&gt;263
        at index 9: Is index 8 smaller? Yes, saw it earlier.&lt;/li&gt;\n&lt;li&gt;267
        at index 7: Is index 6 smaller? Yes, saw it earlier.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;That&amp;#39;s
        7 yeses so the answer to part 1 is 7.&lt;/p&gt;\n\n&lt;p&gt;For part 2 it&amp;#39;s:
        No, no, no, no, no, yes, yes, yes, yes, yes, for an answer of 5.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtf4p/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrtf4p", "created":
        1638345029.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrtprz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jenneh03",
        "can_mod_post": false, "created_utc": 1638345253.0, "send_replies": true,
        "parent_id": "t1_hmrtf4p", "score": 1, "author_fullname": "t2_3150lqjg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thank you for the explanation. I love this \ud83d\ude01", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you for the explanation. I love this
        \ud83d\ude01&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrtprz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrtprz", "created":
        1638345253.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrqazv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "442401",
        "can_mod_post": false, "created_utc": 1638342695.0, "send_replies": true,
        "parent_id": "t1_hmrmz20", "score": 1, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\ud83e\udd2f", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;\ud83e\udd2f&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrqazv/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrqazv", "created":
        1638342695.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmrpxy4"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:25 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:25 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=T5KYpQX2KWGY57hmYT; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:25 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmwmpsr
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1417'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg6477d1.2.1741472965994.Z0FBQUFBQm56TVRHcDNnZDlSVmRoc09MRkU2MjZKcnRWLWFzLUpoN1NmRzhWemtKWURTSTVyX3dxSnNEazZPT1ptbVcxS08tVy1hRUZnWnY3ZlhTaFJnX1RwMUN0d0Vsa0I2TDcybkZxbUE2d3lDZ0dNQmh6Nk84YTRSanR4VXBubG9CRkZockQxUWI;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:26
        GMT; secure, session_tracker=gqccaokamfknocdhdm.0.1741472966006.Z0FBQUFBQm56TVRHeHdVbVhlVkpWaGlUNkhER1BuQlluN2tNMVlkTTNvTklhZkFwNi1oUG1PbmhiRG80R0lEYVFzY3BWWEQyaUFxUHMyMC1qOVkxaHFWMy1wUEt4clhEYlljTHJlZWNlRl9yUnRJMnNjbVpRRFVfODE0Q1pvcHJDYjByTXo3TzVrZHU;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:26
        GMT; secure, edgebucket=3JhlMugLIrUijgyysl; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '74'
      x-ratelimit-remaining:
      - '26.0'
      x-ratelimit-reset:
      - '34'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:26 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638506492.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmwmpsr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638429713.0, "send_replies": true,
        "parent_id": "t1_hmwgxfw", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwmpsr/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwmpsr", "created":
        1638429713.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hn0vyus", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mddubey",
        "can_mod_post": false, "created_utc": 1638502966.0, "send_replies": true,
        "parent_id": "t1_hmwmpsr", "score": 2, "author_fullname": "t2_35o1b2hn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hello u/daggerdragon,  \nThanks for letting me know. I was not aware of the
        old reddit and backward compatibility issues. Added as a github link on the
        top.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hello
        &lt;a href=\"/u/daggerdragon\"&gt;u/daggerdragon&lt;/a&gt;,&lt;br/&gt;\nThanks
        for letting me know. I was not aware of the old reddit and backward compatibility
        issues. Added as a github link on the top.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hn0vyus/", "subreddit_type":
        "public", "locked": false, "name": "t1_hn0vyus", "created": 1638502966.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 2, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}], true]], [0, 12, "attr", "things"], [12, 13,
        "call", ["t1_hmwmpsr"]], [13, 14, "attr", "focus"], [14, 15, "call", []],
        [0, 16, "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr", "filter"],
        [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"], [20, 21,
        "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:26 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:26 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=j9SkW24YCDdzmSBMCU; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:26 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmvoam0
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1400'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg64aaqi.2.1741472966405.Z0FBQUFBQm56TVRHOEMwbngwTkpMYjY3cW8zdGhvUHN3dkhOeGJ1a2ZwNnJNb0psVzNMdWtEWDlSZU8wRllING5kMkt3N3pIOUo5aS1ZUmI2dnNzdkpVTEJGOERqZFQzVVlhQk8zaWN6T2RVSlpzcEhNcjVqZEhXRmZqcnJLVlh0dFhNT3l6akVkeEw;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:26
        GMT; secure, session_tracker=ogdafafnfpacibfepl.0.1741472966417.Z0FBQUFBQm56TVRHSGRFOUl1MEYta3RDMlRINjBHXzl1X1BtSURMcWZJRWhsRHdBeTcxQk1RREd2LWx2V205LS1FdWQxMGlVd0JObktDZF9EV2ZLQXdBdlcyV1hLLWMyNTVPbXBhRTlpdXZmUGg3dVFQV3kycDRPOEhEdmJvM0NkR0hVcGV1NnFGTUg;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:26
        GMT; secure, edgebucket=3tPANUPHRUqlxzYWJP; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '75'
      x-ratelimit-remaining:
      - '25.0'
      x-ratelimit-reset:
      - '33'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:26 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638412795.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvoam0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638411378.0, "send_replies": true,
        "parent_id": "t1_hmv10v7", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Please follow the [posting guidelines](https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines)
        and edit your post to add what language(s) you used.  This makes it easier
        for folks who Ctrl-F the megathreads looking for a specific language.~~\n\n~~(looks
        like Ruby?)~~\n\nEdit: thanks for adding the programming language! &lt;3",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Please follow
        the &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_posting_guidelines\"&gt;posting
        guidelines&lt;/a&gt; and edit your post to add what language(s) you used.  This
        makes it easier for folks who Ctrl-F the megathreads looking for a specific
        language.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;(looks like Ruby?)&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        thanks for adding the programming language! &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvoam0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvoam0", "created":
        1638411378.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmvrghb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1638412745.0, "send_replies": true,
        "parent_id": "t1_hmvoam0", "score": 2, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "oh shoot, don''t know how I did that. Edited!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;oh shoot, don&amp;#39;t know how I did that. Edited!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvrghb/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvrghb", "created":
        1638412745.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmvoam0"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:26 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:26 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=gtCdojEcTLUxvTTqSs; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:26 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmrsn0t
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1547'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg64dj7k.2.1741472966910.Z0FBQUFBQm56TVRHV0dEU0N4N1FjTGs2R0FaMmZKU0FQcldRZ29ac1lERlJDUk04S2Vzbkk5R1Y1Q1JLTXd6QkVfMUdnTk9CYndWQUNXbGI4SnJ5Nm8wY2lnc3BSc2FLbWM0OHU3emk5bDlGd1p1eV9DV05FMFQ0Rmp6Zm5LWnIzaHQxS0tUQnZ6aGM;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:26
        GMT; secure, session_tracker=qgkhnleclphicrhlqb.0.1741472966921.Z0FBQUFBQm56TVRHaGdiZnBDU0Q4cFpqbjNmUzA3OFZmQjExVXhDTVV2c2FGcTg2ajZOSU9OZUxNYTlWc19ybjFkTWpXczcxRFdwenNEbUc1TVJPc1lSdC1jdTlSejdITkhlLXQ5VjZYdzBfRmRxUnFDQVNuZ2lweEpic0h4NWFQdzhvMS1zY3Q2Ty0;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:26
        GMT; secure, edgebucket=mWWbtpbtbJpAYS1v6E; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '76'
      x-ratelimit-remaining:
      - '24.0'
      x-ratelimit-reset:
      - '33'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:26 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrsn0t",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "riffraff",
        "can_mod_post": false, "created_utc": 1638344431.0, "send_replies": true,
        "parent_id": "t1_hmrr4l8", "score": 1, "author_fullname": "t2_1vf8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "you don''t need `chomp`, as `\"1\\n\".to_i` is the same as `\"1\".to_i` .
        Also, you can use `.count` rather than `inject` :)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;you don&amp;#39;t need &lt;code&gt;chomp&lt;/code&gt;,
        as &lt;code&gt;&amp;quot;1\\n&amp;quot;.to_i&lt;/code&gt; is the same as &lt;code&gt;&amp;quot;1&amp;quot;.to_i&lt;/code&gt;
        . Also, you can use &lt;code&gt;.count&lt;/code&gt; rather than &lt;code&gt;inject&lt;/code&gt;
        :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrsn0t/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrsn0t", "created":
        1638344431.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmrt8gk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "zxywx",
        "can_mod_post": false, "created_utc": 1638344887.0, "send_replies": true,
        "parent_id": "t1_hmrsn0t", "score": 1, "author_fullname": "t2_pbtkx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Good call! Thanks", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good
        call! Thanks&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmrt8gk/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmrt8gk", "created":
        1638344887.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hms0thz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "zxywx",
        "can_mod_post": false, "created_utc": 1638351164.0, "send_replies": true,
        "parent_id": "t1_hmrsn0t", "score": 1, "author_fullname": "t2_pbtkx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Refactored ... much tidier, thanks!\n\n```ruby\nmodule Year2021\n  class
        Day01\n    def part_1(input)\n      count_increasing_depths process_input(input)\n    end\n\n    def
        part_2(input)\n      count_increasing_depths process_input(input).each_cons(3).map(&amp;:sum)\n    end\n\n    private\n      def
        process_input(input)\n        input.lines.map(&amp;:to_i)\n      end\n\n      def
        count_increasing_depths(data)\n        data.each_cons(2).count { |a, b| a
        &lt; b }\n      end\n  end\nend\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Refactored ... much tidier, thanks!&lt;/p&gt;\n\n&lt;p&gt;```ruby\nmodule
        Year2021\n  class Day01\n    def part_1(input)\n      count_increasing_depths
        process_input(input)\n    end&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def part_2(input)\n  count_increasing_depths
        process_input(input).each_cons(3).map(&amp;amp;:sum)\nend\n\nprivate\n  def
        process_input(input)\n    input.lines.map(&amp;amp;:to_i)\n  end\n\n  def
        count_increasing_depths(data)\n    data.each_cons(2).count { |a, b| a &amp;lt;
        b }\n  end\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;end\nend\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hms0thz/",
        "subreddit_type": "public", "locked": false, "name": "t1_hms0thz", "created":
        1638351164.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmrsn0t"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:27 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:27 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=kmoMBz1GFrb4IM64Qt; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:27 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hq6rjd9
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1199'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg64gu8e.2.1741472967397.Z0FBQUFBQm56TVRIcHdVTEUza3BTUHFJcUxQWkh6bko4UHA1dzZxTlZmdTNqQVhtRTBKVmM2MWoyd093T1JXd2R2c2duVWhnRVVVU1VnSTRuUTNmRjhVMTBzUWR6eUpOSVhRTEhpWHp5ajVBN1NldHpsRW1wejZ1XzZmYUg5UmdSd0UyXzZ2NG85eWE;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:27
        GMT; secure, session_tracker=rqpcbaqrjimocrokpm.0.1741472967410.Z0FBQUFBQm56TVRIQTZoT3NYdHVESy1HVm55QVRFNG45QWhvZFdvSU5Da0lLMDRDcEc3MUxYMlMwTmVISWFyanhuVDh4aEEwaEVnSi0xdjZwMTRVSnNOelJLazdWMkJPSnB5dEtjTnIyME43eVNfa25hUm50UFdGVk9YSDk3Q2F0V2JyQTJ5YlRLdWk;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:27
        GMT; secure, edgebucket=t2xchSN9pcYYb5Ph2A; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '77'
      x-ratelimit-remaining:
      - '23.0'
      x-ratelimit-reset:
      - '32'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:27 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1640637972.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hq6rjd9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Albeit-it-does-move",
        "can_mod_post": false, "created_utc": 1640636359.0, "send_replies": true,
        "parent_id": "t1_hmsqyxj", "score": 1, "author_fullname": "t2_5asz5u6s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I like the idea but if this code is giving you the right answer it might
        be by pure luck... Since you are reading triplets for part 2 it means neither
        will the last b will be compared to c, nor the last c to the last d for part
        1. So if the two last values of your input are increases over previous values
        then the final count for part 1 will be two lower than it should be.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I like the idea but if this code is giving
        you the right answer it might be by pure luck... Since you are reading triplets
        for part 2 it means neither will the last b will be compared to c, nor the
        last c to the last d for part 1. So if the two last values of your input are
        increases over previous values then the final count for part 1 will be two
        lower than it should be.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hq6rjd9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hq6rjd9", "created":
        1640636359.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hq6rjd9"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:27 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:27 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=W0l0o8ZfPLML9kns9A; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:27 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmto3j9,hmt3jqm,hmsui9j,hmvzvo2
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1861'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg64jv9h.2.1741472967821.Z0FBQUFBQm56TVRINlBVamZOMEZQbUZyV1BUa3ZfS2RVRWdwQl9fdjUxSURGOGlna3oxMFZFazlhdFM4YmtBMWdlLXRNZHlSQzl3aDVOSmpRWG9DeTlHSDlKaEhLRFc1Rk9waVlQTE5BaFl0MGM3Vm1JSzBJazhWQkFZUGtIamxYM1ptajFfVENuYkw;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:27
        GMT; secure, session_tracker=hbommlmqdjfbcgfkrh.0.1741472967834.Z0FBQUFBQm56TVRIUWUzNFE1b2t4Qkw3aHNUaF9hSk9aRlQxWDU5alBhNHFfZ1REWGdEaDNnX2hNLVl5WVpDSkxMLVRNb05jQnM5Yzg2QkZ6WmppTjd5OU9wc0s3QXk2SlVHS0ZOOUk5MUNJbnZPM3YxUDBJS3ItRnR2eGpJZUVDN0J0T1lFTUJQTDY;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:27
        GMT; secure, edgebucket=wIrDNYd7iDLCnnsK4v; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '78'
      x-ratelimit-remaining:
      - '22.0'
      x-ratelimit-reset:
      - '32'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:27 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638373843.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmsui9j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "oantolin",
        "can_mod_post": false, "created_utc": 1638370173.0, "send_replies": true,
        "parent_id": "t1_hmsrqka", "score": 2, "author_fullname": "t2_3fxjo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Avoiding computing the sums of the sliding windows in the second part is
        clever!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Avoiding
        computing the sums of the sliding windows in the second part is clever!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmsui9j/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmsui9j", "created":
        1638370173.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt32ch",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "KennyEvil",
        "can_mod_post": false, "created_utc": 1638373811.0, "send_replies": true,
        "parent_id": "t1_hmsui9j", "score": 2, "author_fullname": "t2_4i93j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thanks. It was just something I realised when I was working it out in my
        head, that the difference between the first and fourth input was ultimately
        what mattered. Meant I could keep it to one line as well.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks. It was just something I realised
        when I was working it out in my head, that the difference between the first
        and fourth input was ultimately what mattered. Meant I could keep it to one
        line as well.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt32ch/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt32ch", "created":
        1638373811.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmt3jqm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "oantolin",
        "can_mod_post": false, "created_utc": 1638374006.0, "send_replies": true,
        "parent_id": "t1_hmsrqka", "score": 2, "author_fullname": "t2_3fxjo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Ruby is rusty, but I think there is a count method that would let you
        eliminate the increase_count variable:\n\n    puts (1..1999).count { |x| depths[x]
        &gt; depths[x-1] }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        Ruby is rusty, but I think there is a count method that would let you eliminate
        the increase_count variable:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;puts (1..1999).count
        { |x| depths[x] &amp;gt; depths[x-1] }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmt3jqm/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmt3jqm", "created":
        1638374006.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmto3j9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ywecur",
        "can_mod_post": false, "created_utc": 1638382111.0, "send_replies": true,
        "parent_id": "t1_hmsrqka", "score": 2, "author_fullname": "t2_as348", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby has `each_cons` which implements the sliding window method\n\nhttps://apidock.com/ruby/Enumerable/each_cons",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby has &lt;code&gt;each_cons&lt;/code&gt;
        which implements the sliding window method&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://apidock.com/ruby/Enumerable/each_cons\"&gt;https://apidock.com/ruby/Enumerable/each_cons&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmto3j9/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmto3j9", "created":
        1638382111.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvzvo2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638416471.0, "send_replies": true,
        "parent_id": "t1_hmsrqka", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Your code is hard to read on both old.reddit and new.reddit.  Please edit
        it as per our posting guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is hard to
        read on both old.reddit and new.reddit.  Please edit it as per our posting
        guidelines in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvzvo2/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvzvo2", "created":
        1638416471.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}}],
        true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmsui9j"]], [13,
        14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16,
        17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:27 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:28 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=tFpgVRergtFXCUbkrD; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:28 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmtyd3x
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1188'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg64mvid.2.1741472968246.Z0FBQUFBQm56TVRJWTQyRXUzWEhra2EyUDhxQWt3bHhhYXlIZXpfbzBNblZhaTVPWTREcG0yaXBFTXhzX05HamcwQ2ZkZnJQSEVYWHpmaldZYnVlNXM1eUdaYlpXQW9hRHc3NTZ1TDRNekRucFNaeVR5NG5MVm9GdzI1d3NoRWI3RTBtVGpXeG5lOHE;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:28
        GMT; secure, session_tracker=amfhfbjlaoeimgjqhe.0.1741472968260.Z0FBQUFBQm56TVRJNXNRMW9HWE82amxXRTlXN3R4RUw1ekVtUXFwREJBNW5hdGhLUnVRU3J5UzZMbHlQazBmdG11bUprX045Y0RkZU92SktGc3Z6RlF6ejN0RE03ajNOSnpGLTYyU3RzYXZIOFpXa2pwTUMwZWFINkc1bC1fenFYNUxIOGZrUXdGZWM;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:28
        GMT; secure, edgebucket=9H52yKODkm4EfXBmy7; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '79'
      x-ratelimit-remaining:
      - '21.0'
      x-ratelimit-reset:
      - '31'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:28 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1638414566.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "hmtyd3x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1638386069.0, "send_replies": true,
        "parent_id": "t1_hmtw0cl", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Your code is hard to read on old.reddit.  Please edit it as per our posting
        guidelines in the wiki: [How do I format code?](https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F)~~\n\nEdit:
        Thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Your
        code is hard to read on old.reddit.  Please edit it as per our posting guidelines
        in the wiki: &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/index#wiki_how_do_i_format_code.3F\"&gt;How
        do I format code?&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: Thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmtyd3x/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmtyd3x", "created":
        1638386069.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}}],
        true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmtyd3x"]], [13,
        14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16,
        17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:28 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:28 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=3wBeFFpZzIsLJHAuJq; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:28 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmyf3ht,hmwcpgg
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1417'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg64pxay.2.1741472968662.Z0FBQUFBQm56TVRJeTlvd0ZOT0kzSUZnOFFYSUJwQUVsQU9sQW1SOG9PR2s3Y2RaRGtsb2swVElPWklJMng4NU5taU8xT2p6MEVJekJpbThqQWpkS2FGckE0ZHVrMG8wZFdOeDR5SWxMUkRwZ2tEeVdzWlZ5M2oweHhsX05xa05fYlFQREpTZ3d0NEQ;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:28
        GMT; secure, session_tracker=adialnpcrbpjnpqmqf.0.1741472968675.Z0FBQUFBQm56TVRJUVBnal9XRjJ2aUhGYUxsbERzbnllbmtubEstTm5Cc0tuTVZDUmVjVXlmQTZZQllFbUl1SDdBU3JadU1ialVwYmg4al9HTklFMm1pWkV4QlVUN01wcmRieVB5bmJLZWR0V1pHLXgzUS1SblZMc3Z2OGhjNnRkYVp0UGQyZmJzNkg;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:28
        GMT; secure, edgebucket=EGsO39MnioRBBdaYN1; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '80'
      x-ratelimit-remaining:
      - '20.0'
      x-ratelimit-reset:
      - '31'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:28 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwcpgg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Robert_TT",
        "can_mod_post": false, "created_utc": 1638423136.0, "send_replies": true,
        "parent_id": "t1_hmv4m2n", "score": 1, "author_fullname": "t2_4ejaboh5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I did, I am extremely sorry, I did it like 5 times and it doesn''t work in
        the reddit code blocks for some reason :(. Sorry", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I did, I am extremely sorry, I did it like 5 times
        and it doesn&amp;#39;t work in the reddit code blocks for some reason :(.
        Sorry&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwcpgg/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwcpgg", "created":
        1638423136.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmydf36",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1638465783.0, "send_replies": true,
        "parent_id": "t1_hmwcpgg", "score": 1, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You have to add 4 spaces before every line, and you also have to have blank
        lines before and after your code.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;You have to add 4 spaces before every line, and you
        also have to have blank lines before and after your code.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmydf36/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmydf36", "created":
        1638465783.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmyf4r0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Robert_TT",
        "can_mod_post": false, "created_utc": 1638466437.0, "send_replies": true,
        "parent_id": "t1_hmydf36", "score": 2, "author_fullname": "t2_4ejaboh5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "thank you for explaining !", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thank
        you for explaining !&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyf4r0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmyf4r0", "created":
        1638466437.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmyf3ht",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Robert_TT",
        "can_mod_post": false, "created_utc": 1638466424.0, "send_replies": true,
        "parent_id": "t1_hmv4m2n", "score": 1, "author_fullname": "t2_4ejaboh5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I haven''t used the each cons method yet, thank you for the suggestion!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I haven&amp;#39;t used
        the each cons method yet, thank you for the suggestion!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyf3ht/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmyf3ht", "created":
        1638466424.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmwcpgg"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:28 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:28 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=1nvRQi6ogWRCvnBxMI; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:28 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmyf3ht,hmwcpgg
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1417'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg64t08w.2.1741472969106.Z0FBQUFBQm56TVRKakJHdE42TFY0VElUWXhRNkVFRWM0ZVl2QVNFaHRUMHF2b3N6ckJzOHJkYXpmc3EyY3lISWJDeWJCU2VmS2w2SWtIVU5VMnQ4MHVpdVZpYnJ0cHNmZzR5UGV4Q0duQ2xfM1FDXzBSNk5ib1pPLVphY1JRWFRXd05KdExGeW8xaGs;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:29
        GMT; secure, session_tracker=rejidjanlabcgremri.0.1741472969117.Z0FBQUFBQm56TVRKcXdWZ3RPTGVEMUZUNmthUl84OEhjMkQyeFgxNlJvUUFMb05ra1lFeC1YRlBTRFJwaUx5SnJCTE5BT3BYSVZZQlJsc0d6azV3OVdka1FPdlZGUllub2JMSW9iNlRySS10RmZ2dWVIVkdtMHhrQS1RMTJMMTJla3VYZVZIY21YNnU;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:29
        GMT; secure, edgebucket=PKYnDWTwtfRlG7hCky; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '81'
      x-ratelimit-remaining:
      - '19.0'
      x-ratelimit-reset:
      - '30'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:29 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmwcpgg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Robert_TT",
        "can_mod_post": false, "created_utc": 1638423136.0, "send_replies": true,
        "parent_id": "t1_hmv4m2n", "score": 1, "author_fullname": "t2_4ejaboh5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I did, I am extremely sorry, I did it like 5 times and it doesn''t work in
        the reddit code blocks for some reason :(. Sorry", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I did, I am extremely sorry, I did it like 5 times
        and it doesn&amp;#39;t work in the reddit code blocks for some reason :(.
        Sorry&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmwcpgg/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmwcpgg", "created":
        1638423136.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmydf36",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1638465783.0, "send_replies": true,
        "parent_id": "t1_hmwcpgg", "score": 1, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You have to add 4 spaces before every line, and you also have to have blank
        lines before and after your code.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;You have to add 4 spaces before every line, and you
        also have to have blank lines before and after your code.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmydf36/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmydf36", "created":
        1638465783.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmyf4r0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Robert_TT",
        "can_mod_post": false, "created_utc": 1638466437.0, "send_replies": true,
        "parent_id": "t1_hmydf36", "score": 2, "author_fullname": "t2_4ejaboh5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "thank you for explaining !", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thank
        you for explaining !&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyf4r0/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmyf4r0", "created":
        1638466437.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmyf3ht",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Robert_TT",
        "can_mod_post": false, "created_utc": 1638466424.0, "send_replies": true,
        "parent_id": "t1_hmv4m2n", "score": 1, "author_fullname": "t2_4ejaboh5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I haven''t used the each cons method yet, thank you for the suggestion!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I haven&amp;#39;t used
        the each cons method yet, thank you for the suggestion!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmyf3ht/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmyf3ht", "created":
        1638466424.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmwcpgg"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:29 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:29 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=ruTgSBxOI4muPKDXeV; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:29 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmve0d5,hmvef6w
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1877'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg64vp51.2.1741472969535.Z0FBQUFBQm56TVRKUWZxaWlJWVl3RkNVS1JvQklqMDFuam9qYUlFa1lqUU01UU1CZmtibzZSOTZOeFRMWHk2RUI2TUtTdFR6MjJtTHhyTHJfa2hzV3FlSVdFYVhSRlZKRm0zT2Rmdk1MZWFlRG1xX2dWT1psM1lRLVpqZVhBa1NwQjZFeTBhRDE0NEw;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:29
        GMT; secure, session_tracker=qdrrggcrprcbfcgmpb.0.1741472969546.Z0FBQUFBQm56TVRKSy1iS3lnQUJoQl9RTGlFdlFfd3Z5YjUzZF9URFU1dG43NkNBLW8tai1TUkVndHREaWNMaXRDZjlncjNDYjJrQk1xQnVicUx6SXhsQWRZVUxyTGRCa3o0Wk1jRlBMQW1vQnpkN3hoa2tDREZvcHIza3JFeW1MVjJTZzJ5dndxWEQ;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:29
        GMT; secure, edgebucket=SAlAhFMKBdsCkaSyv5; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '82'
      x-ratelimit-remaining:
      - '18.0'
      x-ratelimit-reset:
      - '30'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:29 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmve0d5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "442401",
        "can_mod_post": false, "created_utc": 1638406924.0, "send_replies": true,
        "parent_id": "t1_hmv1anu", "score": 1, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I haven''t tested it, but I''m confident part 2 works. Summing is not necessary.
        The middle 2 values cancel each other out.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I haven&amp;#39;t tested it, but I&amp;#39;m confident
        part 2 works. Summing is not necessary. The middle 2 values cancel each other
        out.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmve0d5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmve0d5", "created":
        1638406924.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvgddu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1638407947.0, "send_replies": true,
        "parent_id": "t1_hmve0d5", "score": 1, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I learned that from another comment, thank you. Wouldn\u2019t you need to
        each_cons(4) though?", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        learned that from another comment, thank you. Wouldn\u2019t you need to each_cons(4)
        though?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvgddu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvgddu", "created":
        1638407947.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvs6r3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "442401",
        "can_mod_post": false, "created_utc": 1638413058.0, "send_replies": true,
        "parent_id": "t1_hmvgddu", "score": 1, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I would imagine that if OP posted it here, it works.\n\nI really don''t want
        to look at it any longer than possible though, because the absence of formatting
        makes my eyes hurt.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        would imagine that if OP posted it here, it works.&lt;/p&gt;\n\n&lt;p&gt;I
        really don&amp;#39;t want to look at it any longer than possible though, because
        the absence of formatting makes my eyes hurt.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvs6r3/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmvs6r3", "created": 1638413058.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 4, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmvef6w", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "antoniotto", "can_mod_post": false, "created_utc":
        1638407103.0, "send_replies": true, "parent_id": "t1_hmv1anu", "score": 1,
        "author_fullname": "t2_cwcq0akg", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Thank you for your suggestions,
        I realize now the second part should be, in my original style, like:\n\nincrements\\_by3
        = depths.each\\_cons(3)  \n.map(&amp;:sum)  \n.each\\_cons(2)  \n.map { |x,
        y| x &lt; y ? ''increased'' : ''decreased'' }\n\nStill have to try the count
        block option.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank
        you for your suggestions, I realize now the second part should be, in my original
        style, like:&lt;/p&gt;\n\n&lt;p&gt;increments_by3 = depths.each_cons(3)&lt;br/&gt;\n.map(&amp;amp;:sum)&lt;br/&gt;\n.each_cons(2)&lt;br/&gt;\n.map
        { |x, y| x &amp;lt; y ? &amp;#39;increased&amp;#39; : &amp;#39;decreased&amp;#39;
        }&lt;/p&gt;\n\n&lt;p&gt;Still have to try the count block option.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvef6w/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvef6w", "created":
        1638407103.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvgwlt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1638408175.0, "send_replies": true,
        "parent_id": "t1_hmvef6w", "score": 1, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Somebody actually pointed out that you don\u2019t actually have to do any
        summing, which means you were actually almost right the first time. I think
        you just have to each_cons(4) instead.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Somebody actually pointed out that you don\u2019t
        actually have to do any summing, which means you were actually almost right
        the first time. I think you just have to each_cons(4) instead.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvgwlt/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvgwlt", "created":
        1638408175.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmve0d5"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:29 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:29 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=YtgYqWH9zOhMNP9Jri; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:29:29 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_r66vow&children=hmve0d5,hmvef6w
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1877'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksg64ygzk.2.1741472969958.Z0FBQUFBQm56TVRLbkJTV0o4ZWF0YnpRWmZvM3dJN1NvWUFjWmVULUNfVEF6THhkNlU3NHRXSFNyVDZmRXpJNVdNbEkwaGhCX2hJXzVMZVF5cTZfZTNiZXl1MG5ZUDlVTUI3NjZwMUowdl8yNG9FeExEekRVV09KckVzMkxMN1ZiNGEtM2ZKR1N1NzM;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:29:30
        GMT; secure, session_tracker=fnnlpbcjcgqejgciqq.0.1741472969970.Z0FBQUFBQm56TVRLOTlXbzloR0hMWUo5UVJxd0JFaDVYQ1BKYW1jSzRkcDM2cHNzVFM1ZF90MnVzc21nUml6MHM2b0I1MmQ4WG5EbUxScWZWT3luWnkwbXZIY3p0VjVjMWkzUGZyX3JBQXRSOHV6SEZGU3JmYWQ1enF6OFNOcGNURWRzVF9zWGpFNHE;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:29:30
        GMT; secure, edgebucket=UnaXJBJTOr9NMBOBgU; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '83'
      x-ratelimit-remaining:
      - '17.0'
      x-ratelimit-reset:
      - '30'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:29:30 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmve0d5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "442401",
        "can_mod_post": false, "created_utc": 1638406924.0, "send_replies": true,
        "parent_id": "t1_hmv1anu", "score": 1, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I haven''t tested it, but I''m confident part 2 works. Summing is not necessary.
        The middle 2 values cancel each other out.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I haven&amp;#39;t tested it, but I&amp;#39;m confident
        part 2 works. Summing is not necessary. The middle 2 values cancel each other
        out.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmve0d5/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmve0d5", "created":
        1638406924.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvgddu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1638407947.0, "send_replies": true,
        "parent_id": "t1_hmve0d5", "score": 1, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I learned that from another comment, thank you. Wouldn\u2019t you need to
        each_cons(4) though?", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        learned that from another comment, thank you. Wouldn\u2019t you need to each_cons(4)
        though?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvgddu/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvgddu", "created":
        1638407947.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvs6r3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "442401",
        "can_mod_post": false, "created_utc": 1638413058.0, "send_replies": true,
        "parent_id": "t1_hmvgddu", "score": 1, "author_fullname": "t2_g67aa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I would imagine that if OP posted it here, it works.\n\nI really don''t want
        to look at it any longer than possible though, because the absence of formatting
        makes my eyes hurt.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        would imagine that if OP posted it here, it works.&lt;/p&gt;\n\n&lt;p&gt;I
        really don&amp;#39;t want to look at it any longer than possible though, because
        the absence of formatting makes my eyes hurt.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvs6r3/", "subreddit_type":
        "public", "locked": false, "name": "t1_hmvs6r3", "created": 1638413058.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_r66vow", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 4, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "hmvef6w", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "antoniotto", "can_mod_post": false, "created_utc":
        1638407103.0, "send_replies": true, "parent_id": "t1_hmv1anu", "score": 1,
        "author_fullname": "t2_cwcq0akg", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Thank you for your suggestions,
        I realize now the second part should be, in my original style, like:\n\nincrements\\_by3
        = depths.each\\_cons(3)  \n.map(&amp;:sum)  \n.each\\_cons(2)  \n.map { |x,
        y| x &lt; y ? ''increased'' : ''decreased'' }\n\nStill have to try the count
        block option.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank
        you for your suggestions, I realize now the second part should be, in my original
        style, like:&lt;/p&gt;\n\n&lt;p&gt;increments_by3 = depths.each_cons(3)&lt;br/&gt;\n.map(&amp;amp;:sum)&lt;br/&gt;\n.each_cons(2)&lt;br/&gt;\n.map
        { |x, y| x &amp;lt; y ? &amp;#39;increased&amp;#39; : &amp;#39;decreased&amp;#39;
        }&lt;/p&gt;\n\n&lt;p&gt;Still have to try the count block option.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvef6w/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvef6w", "created":
        1638407103.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "hmvgwlt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1638408175.0, "send_replies": true,
        "parent_id": "t1_hmvef6w", "score": 1, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Somebody actually pointed out that you don\u2019t actually have to do any
        summing, which means you were actually almost right the first time. I think
        you just have to each_cons(4) instead.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Somebody actually pointed out that you don\u2019t
        actually have to do any summing, which means you were actually almost right
        the first time. I think you just have to each_cons(4) instead.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/r66vow/2021_day_1_solutions/hmvgwlt/",
        "subreddit_type": "public", "locked": false, "name": "t1_hmvgwlt", "created":
        1638408175.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_r66vow", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_hmve0d5"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:29:30 GMT
recorded_with: VCR 6.3.1
